<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://azu.github.io/github-advisory-database-rss/pip.rss</id>
    <title>Security Advisory for Python packages hosted at PyPI.org</title>
    <updated>2025-01-13T11:01:34.690Z</updated>
    <generator>github-advisory-database-rss</generator>
    <link rel="alternate" href="https://github.com/advisories?query=type%3Areviewed+ecosystem%3Apip"/>
    <subtitle>Security Advisory for Python packages hosted at PyPI.org on GitHub</subtitle>
    <rights>github-advisory-database-rss</rights>
    <category term="CRITICAL"/>
    <category term="HIGH"/>
    <category term="MODERATE"/>
    <category term="LOW"/>
    <entry>
        <title type="html"><![CDATA[[ray] Ray Path Traversal vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-3pww-qvr8-6mhp</id>
        <link href="https://github.com/advisories/GHSA-3pww-qvr8-6mhp"/>
        <updated>2025-01-09T23:40:01.000Z</updated>
        <content type="html"><![CDATA[<p>LFI in Ray's log API endpoint allows attackers to read any file on the server without authentication. The issue is fixed in version 2.8.1+. Ray maintainers response can be found here: <a href="https://www.anyscale.com/blog/update-on-ray-cves-cve-2023-6019-cve-2023-6020-cve-2023-6021-cve-2023-48022-cve-2023-48023">https://www.anyscale.com/blog/update-on-ray-cves-cve-2023-6019-cve-2023-6020-cve-2023-6021-cve-2023-48022-cve-2023-48023</a></p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-6021">https://nvd.nist.gov/vuln/detail/CVE-2023-6021</a></li>
<li><a href="https://huntr.com/bounties/5039c045-f986-4cbc-81ac-370fe4b0d3f8">https://huntr.com/bounties/5039c045-f986-4cbc-81ac-370fe4b0d3f8</a></li>
<li><a href="https://www.anyscale.com/blog/update-on-ray-cves-cve-2023-6019-cve-2023-6020-cve-2023-6021-cve-2023-48022-cve-2023-48023">https://www.anyscale.com/blog/update-on-ray-cves-cve-2023-6019-cve-2023-6020-cve-2023-6021-cve-2023-48022-cve-2023-48023</a></li>
<li><a href="https://github.com/ray-project/ray/releases/tag/ray-2.8.1">https://github.com/ray-project/ray/releases/tag/ray-2.8.1</a></li>
<li><a href="https://github.com/advisories/GHSA-3pww-qvr8-6mhp">https://github.com/advisories/GHSA-3pww-qvr8-6mhp</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-3pww-qvr8-6mhp</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2023-11-16T18:30:31.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[ray] Ray Missing Authorization vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-6cxr-8q3m-jwrr</id>
        <link href="https://github.com/advisories/GHSA-6cxr-8q3m-jwrr"/>
        <updated>2025-01-09T23:39:16.000Z</updated>
        <content type="html"><![CDATA[<p>LFI in Ray's /static/ directory allows attackers to read any file on the server without authentication. The issue is fixed in version 2.8.1+. Ray maintainers response can be found here: <a href="https://www.anyscale.com/blog/update-on-ray-cves-cve-2023-6019-cve-2023-6020-cve-2023-6021-cve-2023-48022-cve-2023-48023">https://www.anyscale.com/blog/update-on-ray-cves-cve-2023-6019-cve-2023-6020-cve-2023-6021-cve-2023-48022-cve-2023-48023</a></p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-6020">https://nvd.nist.gov/vuln/detail/CVE-2023-6020</a></li>
<li><a href="https://huntr.com/bounties/83dd8619-6dc3-4c98-8f1b-e620fedcd1f6">https://huntr.com/bounties/83dd8619-6dc3-4c98-8f1b-e620fedcd1f6</a></li>
<li><a href="https://www.anyscale.com/blog/update-on-ray-cves-cve-2023-6019-cve-2023-6020-cve-2023-6021-cve-2023-48022-cve-2023-48023">https://www.anyscale.com/blog/update-on-ray-cves-cve-2023-6019-cve-2023-6020-cve-2023-6021-cve-2023-48022-cve-2023-48023</a></li>
<li><a href="https://github.com/ray-project/ray/releases/tag/ray-2.8.1">https://github.com/ray-project/ray/releases/tag/ray-2.8.1</a></li>
<li><a href="https://github.com/advisories/GHSA-6cxr-8q3m-jwrr">https://github.com/advisories/GHSA-6cxr-8q3m-jwrr</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-6cxr-8q3m-jwrr</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2023-11-16T21:30:46.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[ray] Ray OS Command Injection vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-h3xg-wv58-5p43</id>
        <link href="https://github.com/advisories/GHSA-h3xg-wv58-5p43"/>
        <updated>2025-01-09T23:37:56.000Z</updated>
        <content type="html"><![CDATA[<p>A command injection exists in Ray's cpu_profile URL parameter allowing attackers to execute os commands on the system running the ray dashboard remotely without authentication.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-6019">https://nvd.nist.gov/vuln/detail/CVE-2023-6019</a></li>
<li><a href="https://huntr.com/bounties/d0290f3c-b302-4161-89f2-c13bb28b4cfe">https://huntr.com/bounties/d0290f3c-b302-4161-89f2-c13bb28b4cfe</a></li>
<li><a href="https://github.com/ray-project/ray/releases/tag/ray-2.8.1">https://github.com/ray-project/ray/releases/tag/ray-2.8.1</a></li>
<li><a href="https://www.anyscale.com/blog/update-on-ray-cves-cve-2023-6019-cve-2023-6020-cve-2023-6021-cve-2023-48022-cve-2023-48023">https://www.anyscale.com/blog/update-on-ray-cves-cve-2023-6019-cve-2023-6020-cve-2023-6021-cve-2023-48022-cve-2023-48023</a></li>
<li><a href="https://github.com/advisories/GHSA-h3xg-wv58-5p43">https://github.com/advisories/GHSA-h3xg-wv58-5p43</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-h3xg-wv58-5p43</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2023-11-16T18:30:31.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[strawberry-graphql] Strawberry GraphQL has type resolution vulnerability in node interface that allows potential data leakage through incorrect type resolution]]></title>
        <id>https://github.com/advisories/GHSA-5xh2-23cc-5jc6</id>
        <link href="https://github.com/advisories/GHSA-5xh2-23cc-5jc6"/>
        <updated>2025-01-09T22:04:51.000Z</updated>
        <content type="html"><![CDATA[<p><strong>Vulnerability Summary</strong>
A type confusion vulnerability exists in Strawberry GraphQL's relay integration that affects multiple ORM integrations (Django, SQLAlchemy, Pydantic). The vulnerability occurs when multiple GraphQL types are mapped to the same underlying model while using the relay <code>node</code> interface.</p>
<p><strong>Affected Components</strong></p>
<ul>
<li>Strawberry GraphQL relay integration</li>
<li>Specifically impacts implementations using:<ul>
<li>Django integration</li>
<li>SQLAlchemy integration</li>
<li>Pydantic integration</li>
</ul>
</li>
</ul>
<p><strong>Technical Details</strong></p>
<p>The vulnerability manifests when:</p>
<ol>
<li>Multiple GraphQL types inherit from <code>relay.Node</code></li>
<li>These types are mapped to the same database model</li>
<li>The global <code>node</code> field is used for type resolution</li>
</ol>
<p>Example of vulnerable code:</p>
<pre><code class="language-python">from fruits.models import Fruit
import strawberry_django
import strawberry

@strawberry_django.type(Fruit)
class FruitType(relay.Node):
    name: strawberry.auto

@strawberry_django.type(Fruit)
class SpecialFruitType(relay.Node):
    secret_name: strawberry.auto

@strawberry.type
class Query:
    node: relay.Node = strawberry_django.node()
</code></pre>
<p><strong>Security Impact</strong></p>
<p>When querying for a specific type using the global <code>node</code> field (e.g., <code>FruitType:some-id</code>), the resolver may incorrectly return an instance of a different type mapped to the same model (e.g., <code>SpecialFruitType</code>). This can lead to:</p>
<ol>
<li>Information disclosure if the alternate type exposes sensitive fields</li>
<li>Potential privilege escalation if the alternate type contains data intended for restricted access</li>
</ol>
<p><strong>Note</strong>
Even with knowledge of the correct type name (e.g., <code>SpecialFruitType</code>), attackers may still be able to access unauthorized data through direct type queries.</p>
<p>We recommend to use permission on fields instead of creating a dedicate type.</p>
<p><strong>Recommendations</strong></p>
<ol>
<li>Avoid mapping multiple relay Node types to the same model</li>
<li>Implement strict access controls at the field resolution level (using permissions)</li>
<li>Consider using separate models for different access levels of the same data</li>
<li>Update to <code>strawberry-graphql&gt;=0.257.0</code></li>
<li>If using <code>strawberry-graphql-django</code>, update to <code>strawberry-graphql-django&gt;=0.54.0</code></li>
</ol>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/strawberry-graphql/strawberry/security/advisories/GHSA-5xh2-23cc-5jc6">https://github.com/strawberry-graphql/strawberry/security/advisories/GHSA-5xh2-23cc-5jc6</a></li>
<li><a href="https://github.com/strawberry-graphql/strawberry/commit/526eb82b70451c0e59d5a71ae9b7396f59974bd8">https://github.com/strawberry-graphql/strawberry/commit/526eb82b70451c0e59d5a71ae9b7396f59974bd8</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2025-22151">https://nvd.nist.gov/vuln/detail/CVE-2025-22151</a></li>
<li><a href="https://github.com/advisories/GHSA-5xh2-23cc-5jc6">https://github.com/advisories/GHSA-5xh2-23cc-5jc6</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-5xh2-23cc-5jc6</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2025-01-09T18:51:51.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[pgadmin4] pgAdmin has Incorrect Default Permissions]]></title>
        <id>https://github.com/advisories/GHSA-7w6r-748w-mh52</id>
        <link href="https://github.com/advisories/GHSA-7w6r-748w-mh52"/>
        <updated>2025-01-09T17:34:21.000Z</updated>
        <content type="html"><![CDATA[<p>A vulnerability was found in pgadmin. Users logging into pgAdmin running in server mode using LDAP authentication may be attached to another user's session if multiple connection attempts occur simultaneously.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-1907">https://nvd.nist.gov/vuln/detail/CVE-2023-1907</a></li>
<li><a href="https://bugzilla.redhat.com/show_bug.cgi?id=2218384">https://bugzilla.redhat.com/show_bug.cgi?id=2218384</a></li>
<li><a href="https://github.com/pgadmin-org/pgadmin4/issues/6100">https://github.com/pgadmin-org/pgadmin4/issues/6100</a></li>
<li><a href="https://github.com/pgadmin-org/pgadmin4/commit/fa29ba91632634d961f937ce3ed2c3b5a9d78f59">https://github.com/pgadmin-org/pgadmin4/commit/fa29ba91632634d961f937ce3ed2c3b5a9d78f59</a></li>
<li><a href="https://github.com/pgadmin-org/pgadmin4/blob/a9974b418c49760d3989b7fb25e052ff16b89ac6/docs/en_US/release_notes_7_0.rst">https://github.com/pgadmin-org/pgadmin4/blob/a9974b418c49760d3989b7fb25e052ff16b89ac6/docs/en_US/release_notes_7_0.rst</a></li>
<li><a href="https://github.com/advisories/GHSA-7w6r-748w-mh52">https://github.com/advisories/GHSA-7w6r-748w-mh52</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-7w6r-748w-mh52</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2025-01-09T09:31:42.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[neutron] OpenStack Neutron can use an incorrect ID during policy enforcement]]></title>
        <id>https://github.com/advisories/GHSA-f27h-g923-68hw</id>
        <link href="https://github.com/advisories/GHSA-f27h-g923-68hw"/>
        <updated>2025-01-09T15:50:51.000Z</updated>
        <content type="html"><![CDATA[<p>In OpenStack Neutron before 25.0.1, neutron/extensions/tagging.py can use an incorrect ID during policy enforcement. It does not apply the proper policy check for changing network tags. An unprivileged tenant is able to change (add and clear) tags on network objects that do not belong to the tenant, and this action is not subjected to the proper policy authorization check. This affects 23 before 23.2.1, 24 before 24.0.2, and 25 before 25.0.1.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-53916">https://nvd.nist.gov/vuln/detail/CVE-2024-53916</a></li>
<li><a href="https://github.com/openstack/neutron/blob/363ffa6e9e1ab5968f87d45bc2f1cb6394f48b9f/neutron/extensions/tagging.py#L138-L232">https://github.com/openstack/neutron/blob/363ffa6e9e1ab5968f87d45bc2f1cb6394f48b9f/neutron/extensions/tagging.py#L138-L232</a></li>
<li><a href="https://review.opendev.org/c/openstack/neutron/+/935883">https://review.opendev.org/c/openstack/neutron/+/935883</a></li>
<li><a href="https://review.opendev.org/q/project:openstack/neutron">https://review.opendev.org/q/project:openstack/neutron</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2024/12/03/1">http://www.openwall.com/lists/oss-security/2024/12/03/1</a></li>
<li><a href="https://security.openstack.org/ossa/OSSA-2024-005.html">https://security.openstack.org/ossa/OSSA-2024-005.html</a></li>
<li><a href="https://github.com/advisories/GHSA-f27h-g923-68hw">https://github.com/advisories/GHSA-f27h-g923-68hw</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-f27h-g923-68hw</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-11-25T00:31:55.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[neutron] OpenStack Neutron can use an incorrect ID during policy enforcement]]></title>
        <id>https://github.com/advisories/GHSA-f27h-g923-68hw</id>
        <link href="https://github.com/advisories/GHSA-f27h-g923-68hw"/>
        <updated>2025-01-09T15:50:51.000Z</updated>
        <content type="html"><![CDATA[<p>In OpenStack Neutron before 25.0.1, neutron/extensions/tagging.py can use an incorrect ID during policy enforcement. It does not apply the proper policy check for changing network tags. An unprivileged tenant is able to change (add and clear) tags on network objects that do not belong to the tenant, and this action is not subjected to the proper policy authorization check. This affects 23 before 23.2.1, 24 before 24.0.2, and 25 before 25.0.1.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-53916">https://nvd.nist.gov/vuln/detail/CVE-2024-53916</a></li>
<li><a href="https://github.com/openstack/neutron/blob/363ffa6e9e1ab5968f87d45bc2f1cb6394f48b9f/neutron/extensions/tagging.py#L138-L232">https://github.com/openstack/neutron/blob/363ffa6e9e1ab5968f87d45bc2f1cb6394f48b9f/neutron/extensions/tagging.py#L138-L232</a></li>
<li><a href="https://review.opendev.org/c/openstack/neutron/+/935883">https://review.opendev.org/c/openstack/neutron/+/935883</a></li>
<li><a href="https://review.opendev.org/q/project:openstack/neutron">https://review.opendev.org/q/project:openstack/neutron</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2024/12/03/1">http://www.openwall.com/lists/oss-security/2024/12/03/1</a></li>
<li><a href="https://security.openstack.org/ossa/OSSA-2024-005.html">https://security.openstack.org/ossa/OSSA-2024-005.html</a></li>
<li><a href="https://github.com/advisories/GHSA-f27h-g923-68hw">https://github.com/advisories/GHSA-f27h-g923-68hw</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-f27h-g923-68hw</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-11-25T00:31:55.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[neutron] OpenStack Neutron can use an incorrect ID during policy enforcement]]></title>
        <id>https://github.com/advisories/GHSA-f27h-g923-68hw</id>
        <link href="https://github.com/advisories/GHSA-f27h-g923-68hw"/>
        <updated>2025-01-09T15:50:51.000Z</updated>
        <content type="html"><![CDATA[<p>In OpenStack Neutron before 25.0.1, neutron/extensions/tagging.py can use an incorrect ID during policy enforcement. It does not apply the proper policy check for changing network tags. An unprivileged tenant is able to change (add and clear) tags on network objects that do not belong to the tenant, and this action is not subjected to the proper policy authorization check. This affects 23 before 23.2.1, 24 before 24.0.2, and 25 before 25.0.1.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-53916">https://nvd.nist.gov/vuln/detail/CVE-2024-53916</a></li>
<li><a href="https://github.com/openstack/neutron/blob/363ffa6e9e1ab5968f87d45bc2f1cb6394f48b9f/neutron/extensions/tagging.py#L138-L232">https://github.com/openstack/neutron/blob/363ffa6e9e1ab5968f87d45bc2f1cb6394f48b9f/neutron/extensions/tagging.py#L138-L232</a></li>
<li><a href="https://review.opendev.org/c/openstack/neutron/+/935883">https://review.opendev.org/c/openstack/neutron/+/935883</a></li>
<li><a href="https://review.opendev.org/q/project:openstack/neutron">https://review.opendev.org/q/project:openstack/neutron</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2024/12/03/1">http://www.openwall.com/lists/oss-security/2024/12/03/1</a></li>
<li><a href="https://security.openstack.org/ossa/OSSA-2024-005.html">https://security.openstack.org/ossa/OSSA-2024-005.html</a></li>
<li><a href="https://github.com/advisories/GHSA-f27h-g923-68hw">https://github.com/advisories/GHSA-f27h-g923-68hw</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-f27h-g923-68hw</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-11-25T00:31:55.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[sickchill] GHSL-2024-288: SickChill open redirect in login]]></title>
        <id>https://github.com/advisories/GHSA-6gf2-ffq8-gcww</id>
        <link href="https://github.com/advisories/GHSA-6gf2-ffq8-gcww"/>
        <updated>2025-01-08T22:04:00.000Z</updated>
        <content type="html"><![CDATA[<p>SickChill is an automatic video library manager for TV shows. A user-controlled <code>login</code> endpoint's <code>next_</code> parameter takes arbitrary content. Prior to commit c7128a8946c3701df95c285810eb75b2de18bf82, an authenticated attacker may use this to redirect the user to arbitrary destinations, leading to open redirect. Commit c7128a8946c3701df95c285810eb75b2de18bf82 changes the login page to redirect to <code>settings.DEFAULT_PAGE</code> instead of to the <code>next</code> parameter.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-53995">https://nvd.nist.gov/vuln/detail/CVE-2024-53995</a></li>
<li><a href="https://github.com/SickChill/sickchill/pull/8811">https://github.com/SickChill/sickchill/pull/8811</a></li>
<li><a href="https://github.com/SickChill/sickchill/commit/c7128a8946c3701df95c285810eb75b2de18bf82">https://github.com/SickChill/sickchill/commit/c7128a8946c3701df95c285810eb75b2de18bf82</a></li>
<li><a href="https://github.com/SickChill/sickchill/blob/846adafdfab579281353ea08a27bbb813f9a9872/sickchill/views/authentication.py#L33">https://github.com/SickChill/sickchill/blob/846adafdfab579281353ea08a27bbb813f9a9872/sickchill/views/authentication.py#L33</a></li>
<li><a href="https://securitylab.github.com/advisories/GHSL-2024-283_GHSL-2024-291_sickchill_sickchill">https://securitylab.github.com/advisories/GHSL-2024-283_GHSL-2024-291_sickchill_sickchill</a></li>
<li><a href="https://github.com/advisories/GHSA-6gf2-ffq8-gcww">https://github.com/advisories/GHSA-6gf2-ffq8-gcww</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-6gf2-ffq8-gcww</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2025-01-08T22:03:58.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[keras] keras Path Traversal vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-cjgq-5qmw-rcj6</id>
        <link href="https://github.com/advisories/GHSA-cjgq-5qmw-rcj6"/>
        <updated>2025-01-08T19:48:36.000Z</updated>
        <content type="html"><![CDATA[<p>An issue in keras 3.7.0 allows attackers to write arbitrary files to the user's machine via downloading a crafted tar file through the get_file function.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-55459">https://nvd.nist.gov/vuln/detail/CVE-2024-55459</a></li>
<li><a href="https://github.com/keras-team/keras">https://github.com/keras-team/keras</a></li>
<li><a href="https://keras.io">https://keras.io</a></li>
<li><a href="https://river-bicycle-f1e.notion.site/Arbitrary-File-Write-Vulnerability-in-get_file-function-11888e31952580179224e50892976d32">https://river-bicycle-f1e.notion.site/Arbitrary-File-Write-Vulnerability-in-get_file-function-11888e31952580179224e50892976d32</a></li>
<li><a href="https://github.com/keras-team/keras/blob/8f5592bcb61ff48c96560c8923e482db1076b54a/keras/src/utils/file_utils.py#L115">https://github.com/keras-team/keras/blob/8f5592bcb61ff48c96560c8923e482db1076b54a/keras/src/utils/file_utils.py#L115</a></li>
<li><a href="https://github.com/advisories/GHSA-cjgq-5qmw-rcj6">https://github.com/advisories/GHSA-cjgq-5qmw-rcj6</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-cjgq-5qmw-rcj6</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2025-01-08T18:30:48.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[apache-airflow-providers-fab] Apache Airflow Fab Provider Insufficient Session Expiration vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-8863-4qmg-fr45</id>
        <link href="https://github.com/advisories/GHSA-8863-4qmg-fr45"/>
        <updated>2025-01-08T16:14:44.000Z</updated>
        <content type="html"><![CDATA[<p>Insufficient Session Expiration vulnerability in Apache Airflow Fab Provider.</p>
<p>This issue affects Apache Airflow Fab Provider: before 1.5.2.</p>
<p>When user password has been changed with admin CLI, the sessions for that user have not been cleared, leading to insufficient session expiration, thus logged users could continue to be logged in even after the password was changed. This only happened when the password was changed with CLI. The problem does not happen in case change was done with webserver thus this is different from&nbsp;<a href="https://github.com/advisories/GHSA-pm87-24wq-r8w9">CVE-2023-40273</a>&nbsp;which was addressed in Apache-Airflow 2.7.0</p>
<p>Users are recommended to upgrade to version 1.5.2, which fixes the issue.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-45033">https://nvd.nist.gov/vuln/detail/CVE-2024-45033</a></li>
<li><a href="https://github.com/apache/airflow/pull/45139">https://github.com/apache/airflow/pull/45139</a></li>
<li><a href="https://lists.apache.org/thread/yw535346rk766ybzpqtvrl36sjj789st">https://lists.apache.org/thread/yw535346rk766ybzpqtvrl36sjj789st</a></li>
<li><a href="https://github.com/advisories/GHSA-8863-4qmg-fr45">https://github.com/advisories/GHSA-8863-4qmg-fr45</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-8863-4qmg-fr45</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2025-01-08T09:30:38.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[jinja2] Jinja has a sandbox breakout through malicious filenames]]></title>
        <id>https://github.com/advisories/GHSA-gmj6-6f8f-6699</id>
        <link href="https://github.com/advisories/GHSA-gmj6-6f8f-6699"/>
        <updated>2025-01-08T16:06:02.000Z</updated>
        <content type="html"><![CDATA[<p>A bug in the Jinja compiler allows an attacker that controls both the content and filename of a template to execute arbitrary Python code, regardless of if Jinja's sandbox is used.</p>
<p>To exploit the vulnerability, an attacker needs to control both the filename and the contents of a template. Whether that is the case depends on the type of application using Jinja. This vulnerability impacts users of applications which execute untrusted templates where the template author can also choose the template filename.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/pallets/jinja/security/advisories/GHSA-gmj6-6f8f-6699">https://github.com/pallets/jinja/security/advisories/GHSA-gmj6-6f8f-6699</a></li>
<li><a href="https://github.com/pallets/jinja/releases/tag/3.1.5">https://github.com/pallets/jinja/releases/tag/3.1.5</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-56201">https://nvd.nist.gov/vuln/detail/CVE-2024-56201</a></li>
<li><a href="https://github.com/pallets/jinja/issues/1792">https://github.com/pallets/jinja/issues/1792</a></li>
<li><a href="https://github.com/pallets/jinja/commit/767b23617628419ae3709ccfb02f9602ae9fe51f">https://github.com/pallets/jinja/commit/767b23617628419ae3709ccfb02f9602ae9fe51f</a></li>
<li><a href="https://github.com/advisories/GHSA-gmj6-6f8f-6699">https://github.com/advisories/GHSA-gmj6-6f8f-6699</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-gmj6-6f8f-6699</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-12-23T17:54:12.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[nicegui] NiceGUI On Air authentication issue]]></title>
        <id>https://github.com/advisories/GHSA-v6jv-p6r8-j78w</id>
        <link href="https://github.com/advisories/GHSA-v6jv-p6r8-j78w"/>
        <updated>2025-01-06T18:43:17.000Z</updated>
        <content type="html"><![CDATA[<h3 id="summary">Summary</h3>
<p>Once a user logins to one browser, all other browsers are logged in without entering password. Even incognito mode.</p>
<h3 id="impact">Impact</h3>
<p>high</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/zauberzeug/nicegui/security/advisories/GHSA-v6jv-p6r8-j78w">https://github.com/zauberzeug/nicegui/security/advisories/GHSA-v6jv-p6r8-j78w</a></li>
<li><a href="https://github.com/zauberzeug/nicegui/commit/1621a4ba6a06676b8094362d36623551e651adc1">https://github.com/zauberzeug/nicegui/commit/1621a4ba6a06676b8094362d36623551e651adc1</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2025-21618">https://nvd.nist.gov/vuln/detail/CVE-2025-21618</a></li>
<li><a href="https://github.com/advisories/GHSA-v6jv-p6r8-j78w">https://github.com/advisories/GHSA-v6jv-p6r8-j78w</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-v6jv-p6r8-j78w</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2025-01-06T16:31:16.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[letta] Letta (previously MemGPT) incorrect access control vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-7p2g-2vxc-5g55</id>
        <link href="https://github.com/advisories/GHSA-7p2g-2vxc-5g55"/>
        <updated>2025-01-02T17:23:00.000Z</updated>
        <content type="html"><![CDATA[<p>Incorrect access control in the /users endpoint of Cpacker MemGPT v0.3.17 allows attackers to access sensitive data.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-39025">https://nvd.nist.gov/vuln/detail/CVE-2024-39025</a></li>
<li><a href="https://github.com/letta-ai/letta/releases/tag/0.3.17">https://github.com/letta-ai/letta/releases/tag/0.3.17</a></li>
<li><a href="https://medium.com/@cnetsec/a-vulnerability-cve-2024-39025-has-been-identified-in-lettaai-memgpt-v0-3-17-146cb38bb6db">https://medium.com/@cnetsec/a-vulnerability-cve-2024-39025-has-been-identified-in-lettaai-memgpt-v0-3-17-146cb38bb6db</a></li>
<li><a href="https://github.com/letta-ai/letta/blob/0.3.17/memgpt/server/rest_api/admin/users.py#L55-L68">https://github.com/letta-ai/letta/blob/0.3.17/memgpt/server/rest_api/admin/users.py#L55-L68</a></li>
<li><a href="https://github.com/advisories/GHSA-7p2g-2vxc-5g55">https://github.com/advisories/GHSA-7p2g-2vxc-5g55</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-7p2g-2vxc-5g55</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-12-27T21:30:30.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[khoj] khoj has an IDOR in subscription management allows unauthorized subscription modifications]]></title>
        <id>https://github.com/advisories/GHSA-hq4h-w933-jm6c</id>
        <link href="https://github.com/advisories/GHSA-hq4h-w933-jm6c"/>
        <updated>2024-12-30T18:43:17.000Z</updated>
        <content type="html"><![CDATA[<h3 id="summary">Summary</h3>
<p>An Insecure Direct Object Reference (IDOR) vulnerability in the update_subscription endpoint allows any authenticated user to manipulate other users' Stripe subscriptions by simply modifying the email parameter in the request.</p>
<h3 id="details">Details</h3>
<p>The vulnerability exists in the subscription endpoint at <code>/api/subscription</code>. The endpoint uses an email parameter as a direct reference to user subscriptions without verifying object ownership. While authentication is required, there is no authorization check to verify if the authenticated user owns the referenced subscription.</p>
<p>Vulnerable code in <code>/api/subscription</code>:</p>
<pre><code class="language-python">@subscription_router.patch("")
@requires(["authenticated"])
async def update_subscription(request: Request, email: str, operation: str):
    # IDOR: email parameter directly references user subscriptions without ownership verification
    customers = stripe.Customer.list(email=email).auto_paging_iter()
    customer = next(customers, None)
    
    if operation == "cancel":
        # Any authenticated user can modify any subscription referenced by email
        customer_id = customer.id
        for subscription in stripe.Subscription.list(customer=customer_id):
            stripe.Subscription.modify(subscription.id, cancel_at_period_end=True)
</code></pre>
<h3 id="poc">PoC</h3>
<ol>
<li><p>Create a customer account in stripe:</p>
<ul>
<li>Customer A: <code>adventure8812@zeropath.com</code> (attacker)</li>
</ul>
</li>
<li><p>Log in as any user.</p>
</li>
<li><p>Send this request:</p>
</li>
</ol>
<pre><code class="language-http">PATCH /api/subscription?email=adventure8812@zeropath.com&amp;operation=cancel HTTP/1.1
</code></pre>
<ol start="4">
<li>The subscription for Customer A is successfully set to cancel.</li>
</ol>
<h3 id="impact">Impact</h3>
<p>High:
Revenue loss via mass cancellation of subscriptions.
Loss of customer trust by re-enabling subscriptions they had set to cancel.</p>
<h3 id="resolution">Resolution</h3>
<p>This was fixed in the following commit which limited subscription update operations to the authenticated user: <a href="https://github.com/khoj-ai/khoj/commit/47d3c8c23597900af708bdc60aced3ae5d2064c1">https://github.com/khoj-ai/khoj/commit/47d3c8c23597900af708bdc60aced3ae5d2064c1</a>. Support for arbitrarily presenting an email for update has been deprecated.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/khoj-ai/khoj/security/advisories/GHSA-hq4h-w933-jm6c">https://github.com/khoj-ai/khoj/security/advisories/GHSA-hq4h-w933-jm6c</a></li>
<li><a href="https://github.com/khoj-ai/khoj/commit/47d3c8c23597900af708bdc60aced3ae5d2064c1">https://github.com/khoj-ai/khoj/commit/47d3c8c23597900af708bdc60aced3ae5d2064c1</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-52294">https://nvd.nist.gov/vuln/detail/CVE-2024-52294</a></li>
<li><a href="https://github.com/advisories/GHSA-hq4h-w933-jm6c">https://github.com/advisories/GHSA-hq4h-w933-jm6c</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-hq4h-w933-jm6c</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-12-30T16:12:40.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[Quart] Werkzeug possible resource exhaustion when parsing file data in forms]]></title>
        <id>https://github.com/advisories/GHSA-q34m-jh98-gwm2</id>
        <link href="https://github.com/advisories/GHSA-q34m-jh98-gwm2"/>
        <updated>2025-01-03T12:31:32.000Z</updated>
        <content type="html"><![CDATA[<p>Applications using Werkzeug to parse <code>multipart/form-data</code> requests are vulnerable to resource exhaustion. A specially crafted form body can bypass the <code>Request.max_form_memory_size</code> setting.</p>
<p>The <code>Request.max_content_length</code> setting, as well as resource limits provided by deployment software and platforms, are also available to limit the resources used during a request. This vulnerability does not affect those settings. All three types of limits should be considered and set appropriately when deploying an application.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/pallets/werkzeug/security/advisories/GHSA-q34m-jh98-gwm2">https://github.com/pallets/werkzeug/security/advisories/GHSA-q34m-jh98-gwm2</a></li>
<li><a href="https://github.com/pallets/quart/commit/5e78c4169b8eb66b91ead3e62d44721b9e1644ee">https://github.com/pallets/quart/commit/5e78c4169b8eb66b91ead3e62d44721b9e1644ee</a></li>
<li><a href="https://github.com/pallets/werkzeug/commit/50cfeebcb0727e18cc52ffbeb125f4a66551179b">https://github.com/pallets/werkzeug/commit/50cfeebcb0727e18cc52ffbeb125f4a66551179b</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-49767">https://nvd.nist.gov/vuln/detail/CVE-2024-49767</a></li>
<li><a href="https://github.com/pallets/werkzeug/releases/tag/3.0.6">https://github.com/pallets/werkzeug/releases/tag/3.0.6</a></li>
<li><a href="https://github.com/pallets/quart/commit/abb04a512496206de279225340ed022852fbf51f">https://github.com/pallets/quart/commit/abb04a512496206de279225340ed022852fbf51f</a></li>
<li><a href="https://security.netapp.com/advisory/ntap-20250103-0007">https://security.netapp.com/advisory/ntap-20250103-0007</a></li>
<li><a href="https://github.com/advisories/GHSA-q34m-jh98-gwm2">https://github.com/advisories/GHSA-q34m-jh98-gwm2</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-q34m-jh98-gwm2</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-10-25T19:44:43.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[python-sql] python-sql SQL injection vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-pq9p-pc3p-9hm4</id>
        <link href="https://github.com/advisories/GHSA-pq9p-pc3p-9hm4"/>
        <updated>2025-01-06T21:31:56.000Z</updated>
        <content type="html"><![CDATA[<p>A vulnerability was found in python-sql where unary operators do not escape non-Expression (like <code>And</code> and <code>Or</code>) which makes any system exposing those vulnerable to an SQL injection attack.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-9774">https://nvd.nist.gov/vuln/detail/CVE-2024-9774</a></li>
<li><a href="https://discuss.tryton.org/t/security-release-for-issue-93/7889/3">https://discuss.tryton.org/t/security-release-for-issue-93/7889/3</a></li>
<li><a href="https://lists.debian.org/debian-lts-announce/2024/10/msg00023.html">https://lists.debian.org/debian-lts-announce/2024/10/msg00023.html</a></li>
<li><a href="https://bugs.tryton.org/python-sql/93">https://bugs.tryton.org/python-sql/93</a></li>
<li><a href="https://discuss.tryton.org/t/security-release-for-issue-93/7889">https://discuss.tryton.org/t/security-release-for-issue-93/7889</a></li>
<li><a href="https://foss.heptapod.net/tryton/python-sql/-/commit/f20551bbb8b3b4c4dd0a2c3d36f377bff6f2f349">https://foss.heptapod.net/tryton/python-sql/-/commit/f20551bbb8b3b4c4dd0a2c3d36f377bff6f2f349</a></li>
<li><a href="https://bugzilla.redhat.com/show_bug.cgi?id=2332734">https://bugzilla.redhat.com/show_bug.cgi?id=2332734</a></li>
<li><a href="https://github.com/advisories/GHSA-pq9p-pc3p-9hm4">https://github.com/advisories/GHSA-pq9p-pc3p-9hm4</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-pq9p-pc3p-9hm4</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-12-27T03:31:23.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[changedetection.io] changedetection.io Vulnerable to Improper Input Validation Leading to LFR/Path Traversal]]></title>
        <id>https://github.com/advisories/GHSA-j5vv-6wjg-cfr8</id>
        <link href="https://github.com/advisories/GHSA-j5vv-6wjg-cfr8"/>
        <updated>2024-12-27T19:09:07.000Z</updated>
        <content type="html"><![CDATA[<h3 id="summary">Summary</h3>
<p>Improper input validation in the application can allow attackers to perform local file read (LFR) or path traversal attacks. These vulnerabilities occur when user input is used to construct file paths without adequate sanitization or validation. For example, using <code>file:../../../etc/passwd</code> or <code>file: ///etc/passwd</code> can bypass weak validations and allow unauthorized access to sensitive files. Even though this has been addressed in previous patch, it is still insufficient.</p>
<h3 id="details">Details</h3>
<p>The check in this line of code is insufficient.</p>
<pre><code>if re.search(r'^file:/', url.strip(), re.IGNORECASE):
</code></pre>
<p>The attacker can still bypass this by using:
-<code>file:../../../../etc/passwd</code>
-<code>file: ///etc/passwd</code> (with space before /)</p>
<h3 id="poc">PoC</h3>
<ul>
<li>Open up a changedetection.io instance with a webdriver configured.</li>
<li>Create a new watch with <code>file:../../../../etc/passwd</code>.</li>
<li>Check the watch preview.</li>
<li>The contents of <code>/etc/passwd</code> should pop out.</li>
</ul>
<h3 id="screenshots">Screenshots</h3>
<p><img alt="image" src="https://github.com/user-attachments/assets/55c34f2e-cafb-4a7a-a7ef-ec222e3f519b">
<img alt="image" src="https://github.com/user-attachments/assets/d41189f5-7bf2-48b5-9ce3-c26f79cefeda"></p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/dgtlmoon/changedetection.io/security/advisories/GHSA-j5vv-6wjg-cfr8">https://github.com/dgtlmoon/changedetection.io/security/advisories/GHSA-j5vv-6wjg-cfr8</a></li>
<li><a href="https://github.com/dgtlmoon/changedetection.io/commit/4419bc0e61d0b03c588bd573a3602bbcfd953671">https://github.com/dgtlmoon/changedetection.io/commit/4419bc0e61d0b03c588bd573a3602bbcfd953671</a></li>
<li><a href="https://github.com/dgtlmoon/changedetection.io/commit/f7e9846c9b40a229813d19cdb66bf60fbe5e6a2a">https://github.com/dgtlmoon/changedetection.io/commit/f7e9846c9b40a229813d19cdb66bf60fbe5e6a2a</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-56509">https://nvd.nist.gov/vuln/detail/CVE-2024-56509</a></li>
<li><a href="https://github.com/advisories/GHSA-j5vv-6wjg-cfr8">https://github.com/advisories/GHSA-j5vv-6wjg-cfr8</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-j5vv-6wjg-cfr8</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-12-27T18:02:02.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[redshift_connector] Amazon Redshift Python Connector vulnerable to SQL Injection]]></title>
        <id>https://github.com/advisories/GHSA-8gc2-vq6m-rwjw</id>
        <link href="https://github.com/advisories/GHSA-8gc2-vq6m-rwjw"/>
        <updated>2024-12-26T20:28:10.000Z</updated>
        <content type="html"><![CDATA[<h3 id="summary">Summary</h3>
<p>A SQL injection in the Amazon Redshift Python Connector in version 2.1.4 allows a user to gain escalated privileges via schema injection in the get_schemas, get_tables, or get_columns Metadata APIs. Users should upgrade to the driver version 2.1.5 or revert to driver version 2.1.3.</p>
<h3 id="impact">Impact</h3>
<p>A SQL injection is possible in the Amazon Redshift Python Connector, version 2.1.4, when leveraging metadata APIs to retrieve information about database schemas, tables, or columns.</p>
<p><strong>Impacted versions:</strong> Amazon Redshift Python Connector version 2.1.4.</p>
<h3 id="patches">Patches</h3>
<p>The issue described above has been addressed in the Amazon Redshift Python Connector, version 2.1.5. </p>
<p>The patch implemented in this version ensures that every metadata command input is sent to the Redshift server as part of a parameterized query, using either QUOTE_IDENT(string) or QUOTE_LITERAL(string). After processing all the inputs into quoted identifiers or literals, the metadata command is composed using these inputs and then executed on the server.</p>
<h3 id="workarounds">Workarounds</h3>
<p>Use the previous version of the Amazon Redshift Python Connector, version 2.1.3.</p>
<h3 id="references">References</h3>
<p>If you have any questions or comments about this advisory we ask that you contact AWS/Amazon Security via our vulnerability reporting page [1] or directly via email to <a href="mailto:aws-security@amazon.com">aws-security@amazon.com</a>. Please do not create a public GitHub issue.</p>
<p>[1] Vulnerability reporting page: <a href="https://aws.amazon.com/security/vulnerability-reporting">https://aws.amazon.com/security/vulnerability-reporting</a></p>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/aws/amazon-redshift-python-driver/security/advisories/GHSA-8gc2-vq6m-rwjw">https://github.com/aws/amazon-redshift-python-driver/security/advisories/GHSA-8gc2-vq6m-rwjw</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-12745">https://nvd.nist.gov/vuln/detail/CVE-2024-12745</a></li>
<li><a href="https://aws.amazon.com/security/security-bulletins/AWS-2024-015">https://aws.amazon.com/security/security-bulletins/AWS-2024-015</a></li>
<li><a href="https://github.com/advisories/GHSA-8gc2-vq6m-rwjw">https://github.com/advisories/GHSA-8gc2-vq6m-rwjw</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-8gc2-vq6m-rwjw</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-12-26T20:28:09.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[koji] Koji Cross-site Scripting]]></title>
        <id>https://github.com/advisories/GHSA-g2vg-8hfg-79vj</id>
        <link href="https://github.com/advisories/GHSA-g2vg-8hfg-79vj"/>
        <updated>2024-12-26T20:22:35.000Z</updated>
        <content type="html"><![CDATA[<p>A vulnerability in Koji was found. An unsanitized input allows for an XSS attack. Javascript code from a malicious link could be reflected in the resulting web page. It is not expected to be able to submit an action or make a change in Koji due to existing XSS protections in the code.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-9427">https://nvd.nist.gov/vuln/detail/CVE-2024-9427</a></li>
<li><a href="https://bugzilla.redhat.com/show_bug.cgi?id=2316047">https://bugzilla.redhat.com/show_bug.cgi?id=2316047</a></li>
<li><a href="https://docs.pagure.org/koji/CVEs/CVE-2024-9427">https://docs.pagure.org/koji/CVEs/CVE-2024-9427</a></li>
<li><a href="https://pagure.io/koji/c/8c72d90d7bb991f8fb193851b80847ac9e9474a4?branch=master">https://pagure.io/koji/c/8c72d90d7bb991f8fb193851b80847ac9e9474a4?branch=master</a></li>
<li><a href="https://github.com/advisories/GHSA-g2vg-8hfg-79vj">https://github.com/advisories/GHSA-g2vg-8hfg-79vj</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-g2vg-8hfg-79vj</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-12-24T06:30:42.000Z</published>
    </entry>
</feed>