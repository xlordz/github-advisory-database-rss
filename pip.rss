<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://azu.github.io/github-advisory-database-rss/pip.rss</id>
    <title>Security Advisory for Python packages hosted at PyPI.org</title>
    <updated>2024-11-19T17:01:19.305Z</updated>
    <generator>github-advisory-database-rss</generator>
    <link rel="alternate" href="https://github.com/advisories?query=type%3Areviewed+ecosystem%3Apip"/>
    <subtitle>Security Advisory for Python packages hosted at PyPI.org on GitHub</subtitle>
    <rights>github-advisory-database-rss</rights>
    <category term="CRITICAL"/>
    <category term="HIGH"/>
    <category term="MODERATE"/>
    <category term="LOW"/>
    <entry>
        <title type="html"><![CDATA[[vyper] Incorrect success value returned in vyper]]></title>
        <id>https://github.com/advisories/GHSA-w9g2-3w7p-72g9</id>
        <link href="https://github.com/advisories/GHSA-w9g2-3w7p-72g9"/>
        <updated>2024-11-19T16:31:36.000Z</updated>
        <content type="html"><![CDATA[<h3 id="background">Background</h3>
<p>During the audit of <a href="https://github.com/lidofinance/gate-seals">Lido's Gate Seals</a> code <a href="https://statemind.io">statemind</a> team identified a weird behavior of the code that uses <code>raw_call</code>: <a href="https://github.com/lidofinance/gate-seals/blob/051593e74df01a4131c485b4fda52e691cd4b7d8/contracts/GateSeal.vy#L164">https://github.com/lidofinance/gate-seals/blob/051593e74df01a4131c485b4fda52e691cd4b7d8/contracts/GateSeal.vy#L164</a> .</p>
<p>Construction like this:</p>
<pre><code class="language-vyper">success = raw_call(
    sealable,
    _abi_encode(SEAL_DURATION_SECONDS, method_id=method_id("pauseFor(uint256)")),
    revert_on_failure=False
)
</code></pre>
<p>was not fully documented: <a href="https://docs.vyperlang.org/en/v0.3.7/built-in-functions.html#raw_call">https://docs.vyperlang.org/en/v0.3.7/built-in-functions.html#raw_call</a> .</p>
<p>The documentation says that: if <code>max_outsize=0</code> it should return nothing and then it says that if <code>revert_on_failure=False</code> it should return a <code>success</code> flag in the tuple of response, but what if <code>max_outsize=0</code>  and <code>revert_on_failure=False</code>.</p>
<img src="https://user-images.githubusercontent.com/22330612/232125364-d2b3bbac-0b4f-40cb-80ff-f55d8eafef44.png" alt="image" width="715">

<p> So the team started researching what exactly happened in that case, after some research we found that the Vyper compiler generates the wrong bytecode in that case, it generates the sequence:</p>
<pre><code>CALL // call
MLOAD // MLOAD is wrong since the CALL result is already stored in the stack
</code></pre>
<h3 id="impact">Impact</h3>
<p>Example of buggy code:</p>
<pre><code class="language-vyper">@external
def returnSome(calling: address, a: uint256) -&gt; bool:
    success: bool = false
    success = raw_call(
        calling,
        _abi_encode(a, method_id=method_id("a(uint256)")),
        revert_on_failure=False
        )
</code></pre>
<p>any contract that uses the <code>raw_call</code> with <code>revert_on_failure=False</code> and <code>max_outsize=0</code> receives the wrong response from <code>raw_call</code>. Depending on the memory garbage, the result can be either <code>True</code> or <code>False</code>.</p>
<h3 id="patches">Patches</h3>
<p>Fix by @charles-cooper <a href="https://github.com/vyperlang/vyper/commit/851f7a1b3aa2a36fd041e3d0ed38f9355a58c8ae">https://github.com/vyperlang/vyper/commit/851f7a1b3aa2a36fd041e3d0ed38f9355a58c8ae</a></p>
<h3 id="workarounds">Workarounds</h3>
<p>The simple workaround is always to put  <code>max_outsize&gt;0</code>.
Workaround example <a href="https://github.com/lidofinance/gate-seals/pull/5/files">https://github.com/lidofinance/gate-seals/pull/5/files</a></p>
<h3 id="references">References</h3>
<p>Lido's fix: <a href="https://github.com/lidofinance/gate-seals/pull/5/files">https://github.com/lidofinance/gate-seals/pull/5/files</a></p>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/vyperlang/vyper/security/advisories/GHSA-w9g2-3w7p-72g9">https://github.com/vyperlang/vyper/security/advisories/GHSA-w9g2-3w7p-72g9</a></li>
<li><a href="https://github.com/vyperlang/vyper/commit/851f7a1b3aa2a36fd041e3d0ed38f9355a58c8ae">https://github.com/vyperlang/vyper/commit/851f7a1b3aa2a36fd041e3d0ed38f9355a58c8ae</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-30629">https://nvd.nist.gov/vuln/detail/CVE-2023-30629</a></li>
<li><a href="https://github.com/lidofinance/gate-seals/pull/5/files">https://github.com/lidofinance/gate-seals/pull/5/files</a></li>
<li><a href="https://docs.vyperlang.org/en/v0.3.7/built-in-functions.html#raw_call">https://docs.vyperlang.org/en/v0.3.7/built-in-functions.html#raw_call</a></li>
<li><a href="https://github.com/lidofinance/gate-seals/blob/051593e74df01a4131c485b4fda52e691cd4b7d8/contracts/GateSeal.vy#L164">https://github.com/lidofinance/gate-seals/blob/051593e74df01a4131c485b4fda52e691cd4b7d8/contracts/GateSeal.vy#L164</a></li>
<li><a href="https://github.com/pypa/advisory-database/tree/main/vulns/vyper/PYSEC-2023-131.yaml">https://github.com/pypa/advisory-database/tree/main/vulns/vyper/PYSEC-2023-131.yaml</a></li>
<li><a href="https://github.com/advisories/GHSA-w9g2-3w7p-72g9">https://github.com/advisories/GHSA-w9g2-3w7p-72g9</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-w9g2-3w7p-72g9</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2023-04-24T22:33:52.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[vyper] Multiple evaluation of contract address in call in vyper]]></title>
        <id>https://github.com/advisories/GHSA-4v9q-cgpw-cf38</id>
        <link href="https://github.com/advisories/GHSA-4v9q-cgpw-cf38"/>
        <updated>2024-11-19T16:17:54.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>when a calling an external contract with no return value, the contract address could be evaluated twice. this is usually only an efficiency problem, but if evaluation of the contract address has side effects, it could result in double evaluation of the side effects.</p>
<p>in the following example, <code>Foo(msg.sender).bar()</code> is the contract address for the following call (to <code>.foo()</code>), and could get evaluated twice</p>
<pre><code class="language-vyper">interface Foo:
    def foo(): nonpayable
    def bar() -&gt; address: nonpayable

@external
def do_stuff():
    Foo(Foo(msg.sender).bar()).foo()
</code></pre>
<h3 id="patches">Patches</h3>
<p>6b4d8ff185de071252feaa1c319712b2d6577f8d</p>
<h3 id="workarounds">Workarounds</h3>
<p>assign contract addresses to variables. the above example would change to</p>
<pre><code class="language-vyper">@external
def do_stuff():
    t: Foo = Foo(msg.sender).bar()
    t.foo()
</code></pre>
<h3 id="references">References</h3>
<h3 id="for-more-information">For more information</h3>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/vyperlang/vyper/security/advisories/GHSA-4v9q-cgpw-cf38">https://github.com/vyperlang/vyper/security/advisories/GHSA-4v9q-cgpw-cf38</a></li>
<li><a href="https://github.com/vyperlang/vyper/commit/6b4d8ff185de071252feaa1c319712b2d6577f8d">https://github.com/vyperlang/vyper/commit/6b4d8ff185de071252feaa1c319712b2d6577f8d</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-29255">https://nvd.nist.gov/vuln/detail/CVE-2022-29255</a></li>
<li><a href="https://github.com/pypa/advisory-database/tree/main/vulns/vyper/PYSEC-2022-43053.yaml">https://github.com/pypa/advisory-database/tree/main/vulns/vyper/PYSEC-2022-43053.yaml</a></li>
<li><a href="https://github.com/advisories/GHSA-4v9q-cgpw-cf38">https://github.com/advisories/GHSA-4v9q-cgpw-cf38</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-4v9q-cgpw-cf38</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-06-06T21:23:58.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[wagtail] Improper validation of URLs ('Cross-site Scripting') in Wagtail rich text fields]]></title>
        <id>https://github.com/advisories/GHSA-wq5h-f9p5-q7fx</id>
        <link href="https://github.com/advisories/GHSA-wq5h-f9p5-q7fx"/>
        <updated>2024-11-19T16:02:33.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>When saving the contents of a rich text field in the admin interface, Wagtail does not apply server-side checks to ensure that link URLs use a valid protocol. A malicious user with access to the admin interface could thus craft a POST request to publish content with <code>javascript:</code> URLs containing arbitrary code. The vulnerability is not exploitable by an ordinary site visitor without access to the Wagtail admin.</p>
<h3 id="patches">Patches</h3>
<p>Patched versions have been released as Wagtail 2.11.7 (for the LTS 2.11 branch) and Wagtail 2.12.4 (for the current 2.12 branch).</p>
<h3 id="workarounds">Workarounds</h3>
<p>For sites that cannot easily upgrade to a current supported version, the vulnerability can be patched by adding the following code to a <code>wagtail_hooks.py</code> module in any installed app:</p>
<pre><code class="language-python">from draftjs_exporter.dom import DOM
from wagtail.admin.rich_text.converters.html_to_contentstate import ExternalLinkElementHandler, PageLinkElementHandler
from wagtail.core import hooks
from wagtail.core.whitelist import check_url


def link_entity(props):
    id_ = props.get('id')
    link_props = {}

    if id_ is not None:
        link_props['linktype'] = 'page'
        link_props['id'] = id_
    else:
        link_props['href'] = check_url(props.get('url'))

    return DOM.create_element('a', link_props, props['children'])


@hooks.register('register_rich_text_features', order=1)
def register_link(features):
    features.register_converter_rule('contentstate', 'link', {
        'from_database_format': {
            'a[href]': ExternalLinkElementHandler('LINK'),
            'a[linktype="page"]': PageLinkElementHandler('LINK'),
        },
        'to_database_format': {
            'entity_decorators': {'LINK': link_entity}
        }
    })
</code></pre>
<h3 id="acknowledgements">Acknowledgements</h3>
<p>Many thanks to Kevin Breen for reporting this issue.</p>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory:</p>
<ul>
<li>Visit Wagtail's <a href="https://docs.wagtail.io/en/stable/support.html">support channels</a></li>
<li>Email us at <a href="mailto:security@wagtail.io">security@wagtail.io</a> (if you wish to send encrypted email, the public key ID is <code>0x6ba1e1a86e0f8ce8</code>)</li>
</ul>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/wagtail/wagtail/security/advisories/GHSA-wq5h-f9p5-q7fx">https://github.com/wagtail/wagtail/security/advisories/GHSA-wq5h-f9p5-q7fx</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2021-29434">https://nvd.nist.gov/vuln/detail/CVE-2021-29434</a></li>
<li><a href="https://github.com/wagtail/wagtail/commit/5c7a60977cba478f6a35390ba98cffc2bd41c8a4">https://github.com/wagtail/wagtail/commit/5c7a60977cba478f6a35390ba98cffc2bd41c8a4</a></li>
<li><a href="https://github.com/wagtail/wagtail/commit/915f6ed2bd7d53154103cc4424a0f18695cdad6c">https://github.com/wagtail/wagtail/commit/915f6ed2bd7d53154103cc4424a0f18695cdad6c</a></li>
<li><a href="https://github.com/wagtail/wagtail/compare/v2.11.6...v2.11.7">https://github.com/wagtail/wagtail/compare/v2.11.6...v2.11.7</a></li>
<li><a href="https://github.com/pypa/advisory-database/tree/main/vulns/wagtail/PYSEC-2021-114.yaml">https://github.com/pypa/advisory-database/tree/main/vulns/wagtail/PYSEC-2021-114.yaml</a></li>
<li><a href="https://pypi.org/project/wagtail">https://pypi.org/project/wagtail</a></li>
<li><a href="https://github.com/advisories/GHSA-wq5h-f9p5-q7fx">https://github.com/advisories/GHSA-wq5h-f9p5-q7fx</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-wq5h-f9p5-q7fx</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2021-04-20T14:02:30.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[wagtail] Improper validation of URLs ('Cross-site Scripting') in Wagtail rich text fields]]></title>
        <id>https://github.com/advisories/GHSA-wq5h-f9p5-q7fx</id>
        <link href="https://github.com/advisories/GHSA-wq5h-f9p5-q7fx"/>
        <updated>2024-11-19T16:02:33.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>When saving the contents of a rich text field in the admin interface, Wagtail does not apply server-side checks to ensure that link URLs use a valid protocol. A malicious user with access to the admin interface could thus craft a POST request to publish content with <code>javascript:</code> URLs containing arbitrary code. The vulnerability is not exploitable by an ordinary site visitor without access to the Wagtail admin.</p>
<h3 id="patches">Patches</h3>
<p>Patched versions have been released as Wagtail 2.11.7 (for the LTS 2.11 branch) and Wagtail 2.12.4 (for the current 2.12 branch).</p>
<h3 id="workarounds">Workarounds</h3>
<p>For sites that cannot easily upgrade to a current supported version, the vulnerability can be patched by adding the following code to a <code>wagtail_hooks.py</code> module in any installed app:</p>
<pre><code class="language-python">from draftjs_exporter.dom import DOM
from wagtail.admin.rich_text.converters.html_to_contentstate import ExternalLinkElementHandler, PageLinkElementHandler
from wagtail.core import hooks
from wagtail.core.whitelist import check_url


def link_entity(props):
    id_ = props.get('id')
    link_props = {}

    if id_ is not None:
        link_props['linktype'] = 'page'
        link_props['id'] = id_
    else:
        link_props['href'] = check_url(props.get('url'))

    return DOM.create_element('a', link_props, props['children'])


@hooks.register('register_rich_text_features', order=1)
def register_link(features):
    features.register_converter_rule('contentstate', 'link', {
        'from_database_format': {
            'a[href]': ExternalLinkElementHandler('LINK'),
            'a[linktype="page"]': PageLinkElementHandler('LINK'),
        },
        'to_database_format': {
            'entity_decorators': {'LINK': link_entity}
        }
    })
</code></pre>
<h3 id="acknowledgements">Acknowledgements</h3>
<p>Many thanks to Kevin Breen for reporting this issue.</p>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory:</p>
<ul>
<li>Visit Wagtail's <a href="https://docs.wagtail.io/en/stable/support.html">support channels</a></li>
<li>Email us at <a href="mailto:security@wagtail.io">security@wagtail.io</a> (if you wish to send encrypted email, the public key ID is <code>0x6ba1e1a86e0f8ce8</code>)</li>
</ul>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/wagtail/wagtail/security/advisories/GHSA-wq5h-f9p5-q7fx">https://github.com/wagtail/wagtail/security/advisories/GHSA-wq5h-f9p5-q7fx</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2021-29434">https://nvd.nist.gov/vuln/detail/CVE-2021-29434</a></li>
<li><a href="https://github.com/wagtail/wagtail/commit/5c7a60977cba478f6a35390ba98cffc2bd41c8a4">https://github.com/wagtail/wagtail/commit/5c7a60977cba478f6a35390ba98cffc2bd41c8a4</a></li>
<li><a href="https://github.com/wagtail/wagtail/commit/915f6ed2bd7d53154103cc4424a0f18695cdad6c">https://github.com/wagtail/wagtail/commit/915f6ed2bd7d53154103cc4424a0f18695cdad6c</a></li>
<li><a href="https://github.com/wagtail/wagtail/compare/v2.11.6...v2.11.7">https://github.com/wagtail/wagtail/compare/v2.11.6...v2.11.7</a></li>
<li><a href="https://github.com/pypa/advisory-database/tree/main/vulns/wagtail/PYSEC-2021-114.yaml">https://github.com/pypa/advisory-database/tree/main/vulns/wagtail/PYSEC-2021-114.yaml</a></li>
<li><a href="https://pypi.org/project/wagtail">https://pypi.org/project/wagtail</a></li>
<li><a href="https://github.com/advisories/GHSA-wq5h-f9p5-q7fx">https://github.com/advisories/GHSA-wq5h-f9p5-q7fx</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-wq5h-f9p5-q7fx</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2021-04-20T14:02:30.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[wagtail] Cross-Site Scripting in Wagtail]]></title>
        <id>https://github.com/advisories/GHSA-2473-9hgq-j7xw</id>
        <link href="https://github.com/advisories/GHSA-2473-9hgq-j7xw"/>
        <updated>2024-11-19T15:50:11.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>When a form page type is made available to Wagtail editors through the <code>wagtail.contrib.forms</code> app, and the page template is built using Django's standard form rendering helpers such as <code>form.as_p</code> (<a href="https://docs.wagtail.io/en/stable/reference/contrib/forms/index.html#usage">as directed in the documentation</a>), any HTML tags used within a form field's help text will be rendered unescaped in the page. Allowing HTML within help text is <a href="https://docs.djangoproject.com/en/3.0/ref/models/fields/#django.db.models.Field.help_text">an intentional design decision</a> by Django; however, as a matter of policy Wagtail does not allow editors to insert arbitrary HTML by default, as this could potentially be used to carry out cross-site scripting attacks, including privilege escalation. This functionality should therefore not have been made available to editor-level users.</p>
<p>The vulnerability is not exploitable by an ordinary site visitor without access to the Wagtail admin.</p>
<h3 id="patches">Patches</h3>
<p>Patched versions have been released as Wagtail 2.7.4 (for the LTS 2.7 branch) and Wagtail 2.9.3 (for the current 2.9 branch). In these versions, help text will be escaped to prevent the inclusion of HTML tags. Site owners who wish to re-enable the use of HTML within help text (and are willing to accept the risk of this being exploited by editors) may set <code>WAGTAILFORMS_HELP_TEXT_ALLOW_HTML = True</code> in their configuration settings.</p>
<h3 id="workarounds">Workarounds</h3>
<p>Site owners who are unable to upgrade to the new versions can secure their form page templates by <a href="https://docs.djangoproject.com/en/3.0/topics/forms/#looping-over-the-form-s-fields">rendering forms field-by-field as per Django's documentation</a>, but omitting the <code>|safe</code> filter when outputting the help text.</p>
<h3 id="acknowledgements">Acknowledgements</h3>
<p>Many thanks to Timothy Bautista for reporting this issue.</p>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory:</p>
<ul>
<li>Visit Wagtail's <a href="https://docs.wagtail.io/en/stable/support.html">support channels</a></li>
<li>Email us at <a href="mailto:security@wagtail.io">security@wagtail.io</a> (if you wish to send encrypted email, the public key ID is <code>0x6ba1e1a86e0f8ce8</code>)</li>
</ul>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/wagtail/wagtail/security/advisories/GHSA-2473-9hgq-j7xw">https://github.com/wagtail/wagtail/security/advisories/GHSA-2473-9hgq-j7xw</a></li>
<li><a href="https://github.com/wagtail/wagtail/commit/d9a41e7f24d08c024acc9a3094940199df94db34">https://github.com/wagtail/wagtail/commit/d9a41e7f24d08c024acc9a3094940199df94db34</a></li>
<li><a href="https://docs.djangoproject.com/en/3.0/ref/models/fields/#django.db.models.Field.help_text">https://docs.djangoproject.com/en/3.0/ref/models/fields/#django.db.models.Field.help_text</a></li>
<li><a href="https://docs.wagtail.io/en/stable/reference/contrib/forms/index.html#usage">https://docs.wagtail.io/en/stable/reference/contrib/forms/index.html#usage</a></li>
<li><a href="https://github.com/wagtail/wagtail/blob/master/docs/releases/2.9.3.rst">https://github.com/wagtail/wagtail/blob/master/docs/releases/2.9.3.rst</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2020-15118">https://nvd.nist.gov/vuln/detail/CVE-2020-15118</a></li>
<li><a href="https://github.com/pypa/advisory-database/tree/main/vulns/wagtail/PYSEC-2020-154.yaml">https://github.com/pypa/advisory-database/tree/main/vulns/wagtail/PYSEC-2020-154.yaml</a></li>
<li><a href="https://github.com/advisories/GHSA-2473-9hgq-j7xw">https://github.com/advisories/GHSA-2473-9hgq-j7xw</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-2473-9hgq-j7xw</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2020-07-20T17:50:30.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[wagtail] Potential Observable Timing Discrepancy in Wagtail]]></title>
        <id>https://github.com/advisories/GHSA-jjjr-3jcw-f8v6</id>
        <link href="https://github.com/advisories/GHSA-jjjr-3jcw-f8v6"/>
        <updated>2024-11-19T15:42:25.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>A potential timing attack exists on pages or documents that have been protected with a shared password through Wagtail's "Privacy" controls. This password check is performed through a character-by-character string comparison, and so an attacker who is able to measure the time taken by this check to a high degree of accuracy could potentially use timing differences to gain knowledge of the password. (This is <a href="https://groups.google.com/d/msg/django-developers/iAaq0pvHXuA/fpUuwjK3i2wJ">understood to be feasible on a local network, but not on the public internet</a>.)</p>
<p>Privacy settings that restrict access to pages / documents on a per-user or per-group basis (as opposed to a shared password) are unaffected by this vulnerability.</p>
<h3 id="patches">Patches</h3>
<p>Patched versions have been released as Wagtail 2.7.3 (for the LTS 2.7 branch), Wagtail 2.8.2 and Wagtail 2.9.</p>
<h3 id="workarounds">Workarounds</h3>
<p>Site owners who are unable to upgrade to the new versions can use <a href="https://docs.wagtail.io/en/stable/advanced_topics/privacy.html">user- or group-based privacy restrictions</a> to restrict access to sensitive information; these are unaffected by this vulnerability.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/wagtail/wagtail/security/advisories/GHSA-jjjr-3jcw-f8v6">https://github.com/wagtail/wagtail/security/advisories/GHSA-jjjr-3jcw-f8v6</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2020-11037">https://nvd.nist.gov/vuln/detail/CVE-2020-11037</a></li>
<li><a href="https://github.com/wagtail/wagtail/commit/3c030490ed575bb9cd01dfb3a890477dcaeb2edf">https://github.com/wagtail/wagtail/commit/3c030490ed575bb9cd01dfb3a890477dcaeb2edf</a></li>
<li><a href="https://github.com/wagtail/wagtail/commit/b76ab57ee859732b9cf9287d380493ab24061090">https://github.com/wagtail/wagtail/commit/b76ab57ee859732b9cf9287d380493ab24061090</a></li>
<li><a href="https://github.com/wagtail/wagtail/commit/ba9d424bd1ca5ce1910d3de74f5cc07214fbfb11">https://github.com/wagtail/wagtail/commit/ba9d424bd1ca5ce1910d3de74f5cc07214fbfb11</a></li>
<li><a href="https://github.com/wagtail/wagtail/commit/bac3cd0a26b023e595cf2959aae7da15bb5e4340">https://github.com/wagtail/wagtail/commit/bac3cd0a26b023e595cf2959aae7da15bb5e4340</a></li>
<li><a href="https://github.com/pypa/advisory-database/tree/main/vulns/wagtail/PYSEC-2020-153.yaml">https://github.com/pypa/advisory-database/tree/main/vulns/wagtail/PYSEC-2020-153.yaml</a></li>
<li><a href="https://github.com/advisories/GHSA-jjjr-3jcw-f8v6">https://github.com/advisories/GHSA-jjjr-3jcw-f8v6</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-jjjr-3jcw-f8v6</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2020-05-07T18:04:53.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[wagtail] Potential Observable Timing Discrepancy in Wagtail]]></title>
        <id>https://github.com/advisories/GHSA-jjjr-3jcw-f8v6</id>
        <link href="https://github.com/advisories/GHSA-jjjr-3jcw-f8v6"/>
        <updated>2024-11-19T15:42:25.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>A potential timing attack exists on pages or documents that have been protected with a shared password through Wagtail's "Privacy" controls. This password check is performed through a character-by-character string comparison, and so an attacker who is able to measure the time taken by this check to a high degree of accuracy could potentially use timing differences to gain knowledge of the password. (This is <a href="https://groups.google.com/d/msg/django-developers/iAaq0pvHXuA/fpUuwjK3i2wJ">understood to be feasible on a local network, but not on the public internet</a>.)</p>
<p>Privacy settings that restrict access to pages / documents on a per-user or per-group basis (as opposed to a shared password) are unaffected by this vulnerability.</p>
<h3 id="patches">Patches</h3>
<p>Patched versions have been released as Wagtail 2.7.3 (for the LTS 2.7 branch), Wagtail 2.8.2 and Wagtail 2.9.</p>
<h3 id="workarounds">Workarounds</h3>
<p>Site owners who are unable to upgrade to the new versions can use <a href="https://docs.wagtail.io/en/stable/advanced_topics/privacy.html">user- or group-based privacy restrictions</a> to restrict access to sensitive information; these are unaffected by this vulnerability.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/wagtail/wagtail/security/advisories/GHSA-jjjr-3jcw-f8v6">https://github.com/wagtail/wagtail/security/advisories/GHSA-jjjr-3jcw-f8v6</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2020-11037">https://nvd.nist.gov/vuln/detail/CVE-2020-11037</a></li>
<li><a href="https://github.com/wagtail/wagtail/commit/3c030490ed575bb9cd01dfb3a890477dcaeb2edf">https://github.com/wagtail/wagtail/commit/3c030490ed575bb9cd01dfb3a890477dcaeb2edf</a></li>
<li><a href="https://github.com/wagtail/wagtail/commit/b76ab57ee859732b9cf9287d380493ab24061090">https://github.com/wagtail/wagtail/commit/b76ab57ee859732b9cf9287d380493ab24061090</a></li>
<li><a href="https://github.com/wagtail/wagtail/commit/ba9d424bd1ca5ce1910d3de74f5cc07214fbfb11">https://github.com/wagtail/wagtail/commit/ba9d424bd1ca5ce1910d3de74f5cc07214fbfb11</a></li>
<li><a href="https://github.com/wagtail/wagtail/commit/bac3cd0a26b023e595cf2959aae7da15bb5e4340">https://github.com/wagtail/wagtail/commit/bac3cd0a26b023e595cf2959aae7da15bb5e4340</a></li>
<li><a href="https://github.com/pypa/advisory-database/tree/main/vulns/wagtail/PYSEC-2020-153.yaml">https://github.com/pypa/advisory-database/tree/main/vulns/wagtail/PYSEC-2020-153.yaml</a></li>
<li><a href="https://github.com/advisories/GHSA-jjjr-3jcw-f8v6">https://github.com/advisories/GHSA-jjjr-3jcw-f8v6</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-jjjr-3jcw-f8v6</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2020-05-07T18:04:53.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[wagtail] Potential Observable Timing Discrepancy in Wagtail]]></title>
        <id>https://github.com/advisories/GHSA-jjjr-3jcw-f8v6</id>
        <link href="https://github.com/advisories/GHSA-jjjr-3jcw-f8v6"/>
        <updated>2024-11-19T15:42:25.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>A potential timing attack exists on pages or documents that have been protected with a shared password through Wagtail's "Privacy" controls. This password check is performed through a character-by-character string comparison, and so an attacker who is able to measure the time taken by this check to a high degree of accuracy could potentially use timing differences to gain knowledge of the password. (This is <a href="https://groups.google.com/d/msg/django-developers/iAaq0pvHXuA/fpUuwjK3i2wJ">understood to be feasible on a local network, but not on the public internet</a>.)</p>
<p>Privacy settings that restrict access to pages / documents on a per-user or per-group basis (as opposed to a shared password) are unaffected by this vulnerability.</p>
<h3 id="patches">Patches</h3>
<p>Patched versions have been released as Wagtail 2.7.3 (for the LTS 2.7 branch), Wagtail 2.8.2 and Wagtail 2.9.</p>
<h3 id="workarounds">Workarounds</h3>
<p>Site owners who are unable to upgrade to the new versions can use <a href="https://docs.wagtail.io/en/stable/advanced_topics/privacy.html">user- or group-based privacy restrictions</a> to restrict access to sensitive information; these are unaffected by this vulnerability.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/wagtail/wagtail/security/advisories/GHSA-jjjr-3jcw-f8v6">https://github.com/wagtail/wagtail/security/advisories/GHSA-jjjr-3jcw-f8v6</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2020-11037">https://nvd.nist.gov/vuln/detail/CVE-2020-11037</a></li>
<li><a href="https://github.com/wagtail/wagtail/commit/3c030490ed575bb9cd01dfb3a890477dcaeb2edf">https://github.com/wagtail/wagtail/commit/3c030490ed575bb9cd01dfb3a890477dcaeb2edf</a></li>
<li><a href="https://github.com/wagtail/wagtail/commit/b76ab57ee859732b9cf9287d380493ab24061090">https://github.com/wagtail/wagtail/commit/b76ab57ee859732b9cf9287d380493ab24061090</a></li>
<li><a href="https://github.com/wagtail/wagtail/commit/ba9d424bd1ca5ce1910d3de74f5cc07214fbfb11">https://github.com/wagtail/wagtail/commit/ba9d424bd1ca5ce1910d3de74f5cc07214fbfb11</a></li>
<li><a href="https://github.com/wagtail/wagtail/commit/bac3cd0a26b023e595cf2959aae7da15bb5e4340">https://github.com/wagtail/wagtail/commit/bac3cd0a26b023e595cf2959aae7da15bb5e4340</a></li>
<li><a href="https://github.com/pypa/advisory-database/tree/main/vulns/wagtail/PYSEC-2020-153.yaml">https://github.com/pypa/advisory-database/tree/main/vulns/wagtail/PYSEC-2020-153.yaml</a></li>
<li><a href="https://github.com/advisories/GHSA-jjjr-3jcw-f8v6">https://github.com/advisories/GHSA-jjjr-3jcw-f8v6</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-jjjr-3jcw-f8v6</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2020-05-07T18:04:53.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[waitress] Catastrophic backtracking in regex allows Denial of Service in Waitress]]></title>
        <id>https://github.com/advisories/GHSA-73m2-3pwg-5fgc</id>
        <link href="https://github.com/advisories/GHSA-73m2-3pwg-5fgc"/>
        <updated>2024-11-19T15:34:35.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>When waitress receives a header that contains invalid characters it will cause the regular expression engine to catastrophically backtrack causing the process to use 100% CPU time and blocking any other interactions.</p>
<p>This would allow an attacker to send a single request with an invalid header and take the service offline.</p>
<p>Invalid header example:</p>
<pre><code>Bad-header: xxxxxxxxxxxxxxx\x10
</code></pre>
<p>Increasing the number of <code>x</code>'s in the header will increase the amount of time Waitress spends in the regular expression engine.</p>
<p>This issue was introduced in version 1.4.2 when the regular expression was updated to attempt to match the behaviour required by errata associated with RFC7230.</p>
<h3 id="patches">Patches</h3>
<p>The regular expression that is used to validate incoming headers has been updated in version 1.4.3, it is recommended that people upgrade to the new version of Waitress as soon as possible.</p>
<h3 id="workarounds">Workarounds</h3>
<p>If you have deployed a reverse proxy in front of Waitress it may already be rejecting requests that include invalid headers.</p>
<h3 id="thanks">Thanks</h3>
<p>The Pylons Project would like to thank <a href="https://github.com/fzembow">Fil Zembowicz</a> for reaching out and disclosing this vulnerability!</p>
<h3 id="references">References</h3>
<p>Catastrophic backtracking explained: <a href="https://www.regular-expressions.info/catastrophic.html">https://www.regular-expressions.info/catastrophic.html</a></p>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory:</p>
<ul>
<li>open an issue at <a href="https://github.com/Pylons/waitress/issues">https://github.com/Pylons/waitress/issues</a> (if not sensitive or security related)</li>
<li>email the Pylons Security mailing list: <a href="mailto:pylons-project-security@googlegroups.com">pylons-project-security@googlegroups.com</a> (if security related)</li>
</ul>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/Pylons/waitress/security/advisories/GHSA-73m2-3pwg-5fgc">https://github.com/Pylons/waitress/security/advisories/GHSA-73m2-3pwg-5fgc</a></li>
<li><a href="https://github.com/Pylons/waitress/commit/6e46f9e3f014d64dd7d1e258eaf626e39870ee1f">https://github.com/Pylons/waitress/commit/6e46f9e3f014d64dd7d1e258eaf626e39870ee1f</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2020-5236">https://nvd.nist.gov/vuln/detail/CVE-2020-5236</a></li>
<li><a href="https://github.com/pypa/advisory-database/tree/main/vulns/waitress/PYSEC-2020-155.yaml">https://github.com/pypa/advisory-database/tree/main/vulns/waitress/PYSEC-2020-155.yaml</a></li>
<li><a href="https://github.com/advisories/GHSA-73m2-3pwg-5fgc">https://github.com/advisories/GHSA-73m2-3pwg-5fgc</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-73m2-3pwg-5fgc</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2020-02-04T03:07:31.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[waitress] HTTP Request Smuggling in Waitress: Invalid whitespace characters in headers (Follow-up)]]></title>
        <id>https://github.com/advisories/GHSA-968f-66r5-5v74</id>
        <link href="https://github.com/advisories/GHSA-968f-66r5-5v74"/>
        <updated>2024-11-19T13:58:28.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>The patches introduced to fix <a href="https://github.com/Pylons/waitress/security/advisories/GHSA-m5ff-3wj3-8ph4">https://github.com/Pylons/waitress/security/advisories/GHSA-m5ff-3wj3-8ph4</a> were not complete and still would allow an attacker to smuggle requests/split a HTTP request with invalid data.</p>
<p>This updates the existing CVE with ID: CVE-2019-16789</p>
<h3 id="patches">Patches</h3>
<p>Waitress version 1.4.2 has been updated to now validate HTTP headers better to avoid the issue, completely fixing all known issues with whitespace.</p>
<h3 id="workarounds">Workarounds</h3>
<p>There are no work-arounds, upgrading to Waitress 1.4.2 is highly recommended.</p>
<h3 id="references">References</h3>
<p>See <a href="https://github.com/Pylons/waitress/security/advisories/GHSA-m5ff-3wj3-8ph4">https://github.com/Pylons/waitress/security/advisories/GHSA-m5ff-3wj3-8ph4</a> for more information on the security issue.</p>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory:</p>
<ul>
<li>open an issue at <a href="https://github.com/Pylons/waitress/issues">https://github.com/Pylons/waitress/issues</a> (if not sensitive or security related)</li>
<li>email the Pylons Security mailing list: <a href="mailto:pylons-project-security@googlegroups.com">pylons-project-security@googlegroups.com</a> (if security related)</li>
</ul>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/Pylons/waitress/security/advisories/GHSA-968f-66r5-5v74">https://github.com/Pylons/waitress/security/advisories/GHSA-968f-66r5-5v74</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2019-16789">https://nvd.nist.gov/vuln/detail/CVE-2019-16789</a></li>
<li><a href="https://github.com/github/advisory-review/pull/14604">https://github.com/github/advisory-review/pull/14604</a></li>
<li><a href="https://docs.pylonsproject.org/projects/waitress/en/latest/#security-fixes">https://docs.pylonsproject.org/projects/waitress/en/latest/#security-fixes</a></li>
<li><a href="https://access.redhat.com/errata/RHSA-2020:0720">https://access.redhat.com/errata/RHSA-2020:0720</a></li>
<li><a href="https://www.oracle.com/security-alerts/cpuapr2022.html">https://www.oracle.com/security-alerts/cpuapr2022.html</a></li>
<li><a href="https://lists.debian.org/debian-lts-announce/2022/05/msg00011.html">https://lists.debian.org/debian-lts-announce/2022/05/msg00011.html</a></li>
<li><a href="https://github.com/Pylons/waitress/commit/ddb65b489d01d696afa1695b75fdd5df3e4ffdf8">https://github.com/Pylons/waitress/commit/ddb65b489d01d696afa1695b75fdd5df3e4ffdf8</a></li>
<li><a href="https://github.com/Pylons/waitress/commit/11d9e138125ad46e951027184b13242a3c1de017">https://github.com/Pylons/waitress/commit/11d9e138125ad46e951027184b13242a3c1de017</a></li>
<li><a href="https://github.com/advisories/GHSA-968f-66r5-5v74">https://github.com/advisories/GHSA-968f-66r5-5v74</a></li>
<li><a href="https://github.com/pypa/advisory-database/tree/main/vulns/waitress/PYSEC-2019-138.yaml">https://github.com/pypa/advisory-database/tree/main/vulns/waitress/PYSEC-2019-138.yaml</a></li>
<li><a href="https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/GVDHR2DNKCNQ7YQXISJ45NT4IQDX3LJ7">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/GVDHR2DNKCNQ7YQXISJ45NT4IQDX3LJ7</a></li>
<li><a href="https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/LYEOTGWJZVKPRXX2HBNVIYWCX73QYPM5">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/LYEOTGWJZVKPRXX2HBNVIYWCX73QYPM5</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-968f-66r5-5v74</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2020-01-06T18:44:21.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[waitress] HTTP Request Smuggling: Invalid Transfer-Encoding in Waitress]]></title>
        <id>https://github.com/advisories/GHSA-g2xc-35jw-c63p</id>
        <link href="https://github.com/advisories/GHSA-g2xc-35jw-c63p"/>
        <updated>2024-11-19T13:57:31.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>Waitress would parse the <code>Transfer-Encoding</code> header and only look for a single string value, if that value was not <code>chunked</code> it would fall through and use the <code>Content-Length</code> header instead.</p>
<p>According to the HTTP standard <code>Transfer-Encoding</code> should be a comma separated list, with the inner-most encoding first, followed by any further transfer codings, ending with <code>chunked</code>.</p>
<p>Requests sent with:</p>
<pre><code>Transfer-Encoding: gzip, chunked
</code></pre>
<p>Would incorrectly get ignored, and the request would use a <code>Content-Length</code> header instead to determine the body size of the HTTP message.</p>
<p>This could allow for Waitress to treat a single request as multiple requests in the case of HTTP pipelining.</p>
<h3 id="patches">Patches</h3>
<p>This issue is fixed in Waitress 1.4.0. This brings a range of changes to harden Waitress against potential HTTP request confusions, and may change the behaviour of Waitress behind non-conformist proxies. </p>
<p>Waitress will now return a 501 Not Implemented error if the <code>Transfer-Encoding</code> is not <code>chunked</code> or contains multiple elements. Waitress does not support any transfer codings such as <code>gzip</code> or <code>deflate</code>.</p>
<p>The Pylons Project recommends upgrading as soon as possible, while validating that the changes in Waitress don't cause any changes in behavior.</p>
<h3 id="workarounds">Workarounds</h3>
<p>Various reverse proxies may have protections against sending potentially bad HTTP requests to the backend, and or hardening against potential issues like this. If the reverse proxy doesn't use HTTP/1.1 for connecting to the backend issues are also somewhat mitigated, as HTTP pipelining does not exist in HTTP/1.0 and Waitress will close the connection after every single request (unless the Keep Alive header is explicitly sent... so this is not a fool proof security method).</p>
<h3 id="issuesmore-security-issues">Issues/more security issues:</h3>
<ul>
<li>open an issue at <a href="https://github.com/Pylons/waitress/issues">https://github.com/Pylons/waitress/issues</a> (if not sensitive or security related)</li>
<li>email the Pylons Security mailing list: <a href="mailto:pylons-project-security@googlegroups.com">pylons-project-security@googlegroups.com</a> (if security related)</li>
</ul>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/Pylons/waitress/security/advisories/GHSA-g2xc-35jw-c63p">https://github.com/Pylons/waitress/security/advisories/GHSA-g2xc-35jw-c63p</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2019-16786">https://nvd.nist.gov/vuln/detail/CVE-2019-16786</a></li>
<li><a href="https://github.com/Pylons/waitress/commit/f11093a6b3240fc26830b6111e826128af7771c3">https://github.com/Pylons/waitress/commit/f11093a6b3240fc26830b6111e826128af7771c3</a></li>
<li><a href="https://docs.pylonsproject.org/projects/waitress/en/latest/#security-fixes">https://docs.pylonsproject.org/projects/waitress/en/latest/#security-fixes</a></li>
<li><a href="https://access.redhat.com/errata/RHSA-2020:0720">https://access.redhat.com/errata/RHSA-2020:0720</a></li>
<li><a href="https://www.oracle.com/security-alerts/cpuapr2022.html">https://www.oracle.com/security-alerts/cpuapr2022.html</a></li>
<li><a href="https://lists.debian.org/debian-lts-announce/2022/05/msg00011.html">https://lists.debian.org/debian-lts-announce/2022/05/msg00011.html</a></li>
<li><a href="https://github.com/pypa/advisory-database/tree/main/vulns/waitress/PYSEC-2019-137.yaml">https://github.com/pypa/advisory-database/tree/main/vulns/waitress/PYSEC-2019-137.yaml</a></li>
<li><a href="https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/GVDHR2DNKCNQ7YQXISJ45NT4IQDX3LJ7">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/GVDHR2DNKCNQ7YQXISJ45NT4IQDX3LJ7</a></li>
<li><a href="https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/LYEOTGWJZVKPRXX2HBNVIYWCX73QYPM5">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/LYEOTGWJZVKPRXX2HBNVIYWCX73QYPM5</a></li>
<li><a href="https://github.com/advisories/GHSA-g2xc-35jw-c63p">https://github.com/advisories/GHSA-g2xc-35jw-c63p</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-g2xc-35jw-c63p</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2019-12-20T23:04:18.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[waitress] HTTP Request Smuggling: LF vs CRLF handling in Waitress]]></title>
        <id>https://github.com/advisories/GHSA-pg36-wpm5-g57p</id>
        <link href="https://github.com/advisories/GHSA-pg36-wpm5-g57p"/>
        <updated>2024-11-19T13:56:01.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>Waitress implemented a &amp;quot;MAY&amp;quot; part of the RFC7230 (<a href="https://tools.ietf.org/html/rfc7230#section-3.5">https://tools.ietf.org/html/rfc7230#section-3.5</a>) which states:</p>
<pre><code>  Although the line terminator for the start-line and header fields is
  the sequence CRLF, a recipient MAY recognize a single LF as a line
  terminator and ignore any preceding CR.
</code></pre>
<p>Unfortunately if a front-end server does not parse header fields with an LF the same way as it does those with a CRLF it can lead to the front-end and the back-end server parsing the same HTTP message in two different ways. This can lead to a potential for HTTP request smuggling/splitting whereby Waitress may see two requests while the front-end server only sees a single HTTP message.</p>
<p>Example:</p>
<pre><code>Content-Length: 100[CRLF]
X-Header: x[LF]Content-Length: 0[CRLF]
</code></pre>
<p>Would get treated by Waitress as if it were:</p>
<pre><code>Content-Length: 100
X-Header: x
Content-Length: 0
</code></pre>
<p>This could potentially get used by attackers to split the HTTP request and smuggle a second request in the body of the first.</p>
<h3 id="patches">Patches</h3>
<p>This issue is fixed in Waitress 1.4.0. This brings a range of changes to harden Waitress against potential HTTP request confusions, and may change the behaviour of Waitress behind non-conformist proxies. </p>
<p>Waitress no longer implements the MAY part of the specification and instead requires that all lines are terminated correctly with CRLF. If any lines are found with a bare CR or LF a 400 Bad Request is sent back to the requesting entity.</p>
<p>The Pylons Project recommends upgrading as soon as possible, while validating that the changes in Waitress don&amp;#39;t cause any changes in behavior.</p>
<h3 id="workarounds">Workarounds</h3>
<p>Various reverse proxies may have protections against sending potentially bad HTTP requests to the backend, and or hardening against potential issues like this. If the reverse proxy doesn&amp;#39;t use HTTP/1.1 for connecting to the backend issues are also somewhat mitigated, as HTTP pipelining does not exist in HTTP/1.0 and Waitress will close the connection after every single request (unless the Keep Alive header is explicitly sent... so this is not a fool proof security method)</p>
<h3 id="issuesmore-security-issues">Issues/more security issues:</h3>
<ul>
<li>open an issue at <a href="https://github.com/Pylons/waitress/issues">https://github.com/Pylons/waitress/issues</a> (if not sensitive or security related)</li>
<li>email the Pylons Security mailing list: <a href="mailto:pylons-project-security@googlegroups.com">pylons-project-security@googlegroups.com</a> (if security related)</li>
</ul>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/Pylons/waitress/security/advisories/GHSA-pg36-wpm5-g57p">https://github.com/Pylons/waitress/security/advisories/GHSA-pg36-wpm5-g57p</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2019-16785">https://nvd.nist.gov/vuln/detail/CVE-2019-16785</a></li>
<li><a href="https://github.com/Pylons/waitress/commit/8eba394ad75deaf9e5cd15b78a3d16b12e6b0eba">https://github.com/Pylons/waitress/commit/8eba394ad75deaf9e5cd15b78a3d16b12e6b0eba</a></li>
<li><a href="https://docs.pylonsproject.org/projects/waitress/en/latest/#security-fixes">https://docs.pylonsproject.org/projects/waitress/en/latest/#security-fixes</a></li>
<li><a href="https://access.redhat.com/errata/RHSA-2020:0720">https://access.redhat.com/errata/RHSA-2020:0720</a></li>
<li><a href="https://www.oracle.com/security-alerts/cpuapr2022.html">https://www.oracle.com/security-alerts/cpuapr2022.html</a></li>
<li><a href="https://lists.debian.org/debian-lts-announce/2022/05/msg00011.html">https://lists.debian.org/debian-lts-announce/2022/05/msg00011.html</a></li>
<li><a href="https://github.com/pypa/advisory-database/tree/main/vulns/waitress/PYSEC-2019-136.yaml">https://github.com/pypa/advisory-database/tree/main/vulns/waitress/PYSEC-2019-136.yaml</a></li>
<li><a href="https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/GVDHR2DNKCNQ7YQXISJ45NT4IQDX3LJ7">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/GVDHR2DNKCNQ7YQXISJ45NT4IQDX3LJ7</a></li>
<li><a href="https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/LYEOTGWJZVKPRXX2HBNVIYWCX73QYPM5">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/LYEOTGWJZVKPRXX2HBNVIYWCX73QYPM5</a></li>
<li><a href="https://github.com/advisories/GHSA-pg36-wpm5-g57p">https://github.com/advisories/GHSA-pg36-wpm5-g57p</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-pg36-wpm5-g57p</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2019-12-20T23:03:57.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[ubi-reader] Path traversal in ubi-reader]]></title>
        <id>https://github.com/advisories/GHSA-vp2x-3mc3-3cj4</id>
        <link href="https://github.com/advisories/GHSA-vp2x-3mc3-3cj4"/>
        <updated>2024-11-18T23:10:29.000Z</updated>
        <content type="html"><![CDATA[<p>ubireader_extract_files is vulnerable to path traversal when run against specifically crafted UBIFS files, allowing the attacker to overwrite files outside of the extraction directory (provided the process has write access to that file or directory). This is due to the fact that a node name (dent_node.name) is considered trusted and joined to the extraction directory path during processing, then the node content is written to that joined path. By crafting a malicious UBIFS file with node names holding path traversal payloads (e.g. ../../tmp/outside.txt), it's possible to force ubi_reader to write outside of the extraction directory. This issue affects ubi-reader before 0.8.5.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-0591">https://nvd.nist.gov/vuln/detail/CVE-2023-0591</a></li>
<li><a href="https://github.com/jrspruitt/ubi_reader/pull/57">https://github.com/jrspruitt/ubi_reader/pull/57</a></li>
<li><a href="https://github.com/jrspruitt/ubi_reader/commit/d5d68e6b1b9f7070c29df5f67fc060f579ae9139">https://github.com/jrspruitt/ubi_reader/commit/d5d68e6b1b9f7070c29df5f67fc060f579ae9139</a></li>
<li><a href="https://github.com/pypa/advisory-database/tree/main/vulns/ubi-reader/PYSEC-2023-51.yaml">https://github.com/pypa/advisory-database/tree/main/vulns/ubi-reader/PYSEC-2023-51.yaml</a></li>
<li><a href="https://onekey.com/blog/security-advisory-remote-command-execution-in-binwalk">https://onekey.com/blog/security-advisory-remote-command-execution-in-binwalk</a></li>
<li><a href="https://github.com/advisories/GHSA-vp2x-3mc3-3cj4">https://github.com/advisories/GHSA-vp2x-3mc3-3cj4</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-vp2x-3mc3-3cj4</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-01-31T12:30:24.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[trytond] Tryton vulnerable to arbitrary command execution]]></title>
        <id>https://github.com/advisories/GHSA-m9jj-5qvj-5fhx</id>
        <link href="https://github.com/advisories/GHSA-m9jj-5qvj-5fhx"/>
        <updated>2024-11-18T22:55:29.000Z</updated>
        <content type="html"><![CDATA[<p>The <code>safe_eval</code> function in trytond in Tryton before 2.4.15, 2.6.x before 2.6.14, 2.8.x before 2.8.11, 3.0.x before 3.0.7, and 3.2.x before 3.2.3 allows remote authenticated users to execute arbitrary commands via shell metacharacters in (1) the <code>collection.domain</code> in the webdav module or (2) the formula field in the <code>price_list</code> module.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2014-6633">https://nvd.nist.gov/vuln/detail/CVE-2014-6633</a></li>
<li><a href="https://bugs.tryton.org/issue4155">https://bugs.tryton.org/issue4155</a></li>
<li><a href="http://www.tryton.org/posts/security-release-for-issue4155.html">http://www.tryton.org/posts/security-release-for-issue4155.html</a></li>
<li><a href="https://github.com/tryton/trytond/commit/19fc2a01357b7638041953326e404f51d96fad06">https://github.com/tryton/trytond/commit/19fc2a01357b7638041953326e404f51d96fad06</a></li>
<li><a href="https://github.com/tryton/trytond/commit/3e4c2b7e8c7b3358597a0d484fa98f45483ee92a">https://github.com/tryton/trytond/commit/3e4c2b7e8c7b3358597a0d484fa98f45483ee92a</a></li>
<li><a href="https://github.com/pypa/advisory-database/tree/main/vulns/trytond/PYSEC-2018-59.yaml">https://github.com/pypa/advisory-database/tree/main/vulns/trytond/PYSEC-2018-59.yaml</a></li>
<li><a href="https://github.com/advisories/GHSA-m9jj-5qvj-5fhx">https://github.com/advisories/GHSA-m9jj-5qvj-5fhx</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-m9jj-5qvj-5fhx</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-05-14T03:21:41.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[trytond] Tryton vulnerable to arbitrary command execution]]></title>
        <id>https://github.com/advisories/GHSA-m9jj-5qvj-5fhx</id>
        <link href="https://github.com/advisories/GHSA-m9jj-5qvj-5fhx"/>
        <updated>2024-11-18T22:55:29.000Z</updated>
        <content type="html"><![CDATA[<p>The <code>safe_eval</code> function in trytond in Tryton before 2.4.15, 2.6.x before 2.6.14, 2.8.x before 2.8.11, 3.0.x before 3.0.7, and 3.2.x before 3.2.3 allows remote authenticated users to execute arbitrary commands via shell metacharacters in (1) the <code>collection.domain</code> in the webdav module or (2) the formula field in the <code>price_list</code> module.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2014-6633">https://nvd.nist.gov/vuln/detail/CVE-2014-6633</a></li>
<li><a href="https://bugs.tryton.org/issue4155">https://bugs.tryton.org/issue4155</a></li>
<li><a href="http://www.tryton.org/posts/security-release-for-issue4155.html">http://www.tryton.org/posts/security-release-for-issue4155.html</a></li>
<li><a href="https://github.com/tryton/trytond/commit/19fc2a01357b7638041953326e404f51d96fad06">https://github.com/tryton/trytond/commit/19fc2a01357b7638041953326e404f51d96fad06</a></li>
<li><a href="https://github.com/tryton/trytond/commit/3e4c2b7e8c7b3358597a0d484fa98f45483ee92a">https://github.com/tryton/trytond/commit/3e4c2b7e8c7b3358597a0d484fa98f45483ee92a</a></li>
<li><a href="https://github.com/pypa/advisory-database/tree/main/vulns/trytond/PYSEC-2018-59.yaml">https://github.com/pypa/advisory-database/tree/main/vulns/trytond/PYSEC-2018-59.yaml</a></li>
<li><a href="https://github.com/advisories/GHSA-m9jj-5qvj-5fhx">https://github.com/advisories/GHSA-m9jj-5qvj-5fhx</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-m9jj-5qvj-5fhx</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-05-14T03:21:41.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[trytond] Tryton vulnerable to arbitrary command execution]]></title>
        <id>https://github.com/advisories/GHSA-m9jj-5qvj-5fhx</id>
        <link href="https://github.com/advisories/GHSA-m9jj-5qvj-5fhx"/>
        <updated>2024-11-18T22:55:29.000Z</updated>
        <content type="html"><![CDATA[<p>The <code>safe_eval</code> function in trytond in Tryton before 2.4.15, 2.6.x before 2.6.14, 2.8.x before 2.8.11, 3.0.x before 3.0.7, and 3.2.x before 3.2.3 allows remote authenticated users to execute arbitrary commands via shell metacharacters in (1) the <code>collection.domain</code> in the webdav module or (2) the formula field in the <code>price_list</code> module.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2014-6633">https://nvd.nist.gov/vuln/detail/CVE-2014-6633</a></li>
<li><a href="https://bugs.tryton.org/issue4155">https://bugs.tryton.org/issue4155</a></li>
<li><a href="http://www.tryton.org/posts/security-release-for-issue4155.html">http://www.tryton.org/posts/security-release-for-issue4155.html</a></li>
<li><a href="https://github.com/tryton/trytond/commit/19fc2a01357b7638041953326e404f51d96fad06">https://github.com/tryton/trytond/commit/19fc2a01357b7638041953326e404f51d96fad06</a></li>
<li><a href="https://github.com/tryton/trytond/commit/3e4c2b7e8c7b3358597a0d484fa98f45483ee92a">https://github.com/tryton/trytond/commit/3e4c2b7e8c7b3358597a0d484fa98f45483ee92a</a></li>
<li><a href="https://github.com/pypa/advisory-database/tree/main/vulns/trytond/PYSEC-2018-59.yaml">https://github.com/pypa/advisory-database/tree/main/vulns/trytond/PYSEC-2018-59.yaml</a></li>
<li><a href="https://github.com/advisories/GHSA-m9jj-5qvj-5fhx">https://github.com/advisories/GHSA-m9jj-5qvj-5fhx</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-m9jj-5qvj-5fhx</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-05-14T03:21:41.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[trytond] Tryton vulnerable to arbitrary command execution]]></title>
        <id>https://github.com/advisories/GHSA-m9jj-5qvj-5fhx</id>
        <link href="https://github.com/advisories/GHSA-m9jj-5qvj-5fhx"/>
        <updated>2024-11-18T22:55:29.000Z</updated>
        <content type="html"><![CDATA[<p>The <code>safe_eval</code> function in trytond in Tryton before 2.4.15, 2.6.x before 2.6.14, 2.8.x before 2.8.11, 3.0.x before 3.0.7, and 3.2.x before 3.2.3 allows remote authenticated users to execute arbitrary commands via shell metacharacters in (1) the <code>collection.domain</code> in the webdav module or (2) the formula field in the <code>price_list</code> module.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2014-6633">https://nvd.nist.gov/vuln/detail/CVE-2014-6633</a></li>
<li><a href="https://bugs.tryton.org/issue4155">https://bugs.tryton.org/issue4155</a></li>
<li><a href="http://www.tryton.org/posts/security-release-for-issue4155.html">http://www.tryton.org/posts/security-release-for-issue4155.html</a></li>
<li><a href="https://github.com/tryton/trytond/commit/19fc2a01357b7638041953326e404f51d96fad06">https://github.com/tryton/trytond/commit/19fc2a01357b7638041953326e404f51d96fad06</a></li>
<li><a href="https://github.com/tryton/trytond/commit/3e4c2b7e8c7b3358597a0d484fa98f45483ee92a">https://github.com/tryton/trytond/commit/3e4c2b7e8c7b3358597a0d484fa98f45483ee92a</a></li>
<li><a href="https://github.com/pypa/advisory-database/tree/main/vulns/trytond/PYSEC-2018-59.yaml">https://github.com/pypa/advisory-database/tree/main/vulns/trytond/PYSEC-2018-59.yaml</a></li>
<li><a href="https://github.com/advisories/GHSA-m9jj-5qvj-5fhx">https://github.com/advisories/GHSA-m9jj-5qvj-5fhx</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-m9jj-5qvj-5fhx</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-05-14T03:21:41.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[trytond] Tryton vulnerable to arbitrary command execution]]></title>
        <id>https://github.com/advisories/GHSA-m9jj-5qvj-5fhx</id>
        <link href="https://github.com/advisories/GHSA-m9jj-5qvj-5fhx"/>
        <updated>2024-11-18T22:55:29.000Z</updated>
        <content type="html"><![CDATA[<p>The <code>safe_eval</code> function in trytond in Tryton before 2.4.15, 2.6.x before 2.6.14, 2.8.x before 2.8.11, 3.0.x before 3.0.7, and 3.2.x before 3.2.3 allows remote authenticated users to execute arbitrary commands via shell metacharacters in (1) the <code>collection.domain</code> in the webdav module or (2) the formula field in the <code>price_list</code> module.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2014-6633">https://nvd.nist.gov/vuln/detail/CVE-2014-6633</a></li>
<li><a href="https://bugs.tryton.org/issue4155">https://bugs.tryton.org/issue4155</a></li>
<li><a href="http://www.tryton.org/posts/security-release-for-issue4155.html">http://www.tryton.org/posts/security-release-for-issue4155.html</a></li>
<li><a href="https://github.com/tryton/trytond/commit/19fc2a01357b7638041953326e404f51d96fad06">https://github.com/tryton/trytond/commit/19fc2a01357b7638041953326e404f51d96fad06</a></li>
<li><a href="https://github.com/tryton/trytond/commit/3e4c2b7e8c7b3358597a0d484fa98f45483ee92a">https://github.com/tryton/trytond/commit/3e4c2b7e8c7b3358597a0d484fa98f45483ee92a</a></li>
<li><a href="https://github.com/pypa/advisory-database/tree/main/vulns/trytond/PYSEC-2018-59.yaml">https://github.com/pypa/advisory-database/tree/main/vulns/trytond/PYSEC-2018-59.yaml</a></li>
<li><a href="https://github.com/advisories/GHSA-m9jj-5qvj-5fhx">https://github.com/advisories/GHSA-m9jj-5qvj-5fhx</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-m9jj-5qvj-5fhx</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-05-14T03:21:41.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[trytond] Tryton Information Disclosure Vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-7cwg-2575-3546</id>
        <link href="https://github.com/advisories/GHSA-7cwg-2575-3546"/>
        <updated>2024-11-18T22:54:24.000Z</updated>
        <content type="html"><![CDATA[<p>file_open in Tryton 3.x and 4.x through 4.2.2 allows remote authenticated users with certain permissions to read arbitrary files via a "same root name but with a suffix" attack. NOTE: This vulnerability exists because of an incomplete fix for CVE-2016-1242.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2017-0360">https://nvd.nist.gov/vuln/detail/CVE-2017-0360</a></li>
<li><a href="https://lists.debian.org/debian-security-announce/2017/msg00084.html">https://lists.debian.org/debian-security-announce/2017/msg00084.html</a></li>
<li><a href="http://hg.tryton.org/trytond?cmd=changeset;node=472510fdc6f8">http://hg.tryton.org/trytond?cmd=changeset;node=472510fdc6f8</a></li>
<li><a href="http://www.debian.org/security/2017/dsa-3826">http://www.debian.org/security/2017/dsa-3826</a></li>
<li><a href="https://github.com/tryton/trytond/commit/30e978593733385db3144f8c583eeb4679575cf0">https://github.com/tryton/trytond/commit/30e978593733385db3144f8c583eeb4679575cf0</a></li>
<li><a href="https://github.com/tryton/trytond/commit/a67a7f03c30277515f530cad5950056171ed5bd1">https://github.com/tryton/trytond/commit/a67a7f03c30277515f530cad5950056171ed5bd1</a></li>
<li><a href="https://github.com/pypa/advisory-database/tree/main/vulns/trytond/PYSEC-2017-97.yaml">https://github.com/pypa/advisory-database/tree/main/vulns/trytond/PYSEC-2017-97.yaml</a></li>
<li><a href="https://github.com/advisories/GHSA-7cwg-2575-3546">https://github.com/advisories/GHSA-7cwg-2575-3546</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-7cwg-2575-3546</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-05-13T01:39:57.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[twisted] Twisted SSH client and server deny of service during SSH handshake.]]></title>
        <id>https://github.com/advisories/GHSA-rv6r-3f5q-9rgx</id>
        <link href="https://github.com/advisories/GHSA-rv6r-3f5q-9rgx"/>
        <updated>2024-11-18T22:50:33.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>The Twisted SSH client and server implementation naively accepted an infinite amount of data for the  peer's SSH version identifier.</p>
<p>A malicious peer can trivially craft a request that uses all available memory and crash the server, resulting in denial of service. The attack is as simple as <code>nc -rv localhost 22 &lt; /dev/zero</code>.</p>
<h3 id="patches">Patches</h3>
<p>The issue was fix in GitHub commit <a href="https://github.com/twisted/twisted/commit/98387b39e9f0b21462f6abc7a1325dc370fcdeb1">https://github.com/twisted/twisted/commit/98387b39e9f0b21462f6abc7a1325dc370fcdeb1</a></p>
<p>A fix is available in Twisted 22.2.0.</p>
<h3 id="workarounds">Workarounds</h3>
<ul>
<li>Limit access to the SSH server only to trusted source IP addresses.</li>
<li>Connect over SSH only to trusted destination IP addresses.</li>
</ul>
<h3 id="references">References</h3>
<p>Reported at <a href="https://twistedmatrix.com/trac/ticket/10284">https://twistedmatrix.com/trac/ticket/10284</a>
Discussions at <a href="https://github.com/twisted/twisted/security/advisories/GHSA-rv6r-3f5q-9rgx">https://github.com/twisted/twisted/security/advisories/GHSA-rv6r-3f5q-9rgx</a></p>
<h3 id="for-more-information">For more information</h3>
<p>Found by vin01</p>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/twisted/twisted/security/advisories/GHSA-rv6r-3f5q-9rgx">https://github.com/twisted/twisted/security/advisories/GHSA-rv6r-3f5q-9rgx</a></li>
<li><a href="https://github.com/twisted/twisted/commit/98387b39e9f0b21462f6abc7a1325dc370fcdeb1">https://github.com/twisted/twisted/commit/98387b39e9f0b21462f6abc7a1325dc370fcdeb1</a></li>
<li><a href="https://twistedmatrix.com/trac/ticket/10284">https://twistedmatrix.com/trac/ticket/10284</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-21716">https://nvd.nist.gov/vuln/detail/CVE-2022-21716</a></li>
<li><a href="https://github.com/twisted/twisted/releases/tag/twisted-22.2.0">https://github.com/twisted/twisted/releases/tag/twisted-22.2.0</a></li>
<li><a href="https://lists.debian.org/debian-lts-announce/2022/03/msg00009.html">https://lists.debian.org/debian-lts-announce/2022/03/msg00009.html</a></li>
<li><a href="https://www.oracle.com/security-alerts/cpuapr2022.html">https://www.oracle.com/security-alerts/cpuapr2022.html</a></li>
<li><a href="https://security.gentoo.org/glsa/202301-02">https://security.gentoo.org/glsa/202301-02</a></li>
<li><a href="https://github.com/twisted/twisted/commit/89c395ee794e85a9657b112c4351417850330ef9">https://github.com/twisted/twisted/commit/89c395ee794e85a9657b112c4351417850330ef9</a></li>
<li><a href="https://github.com/pypa/advisory-database/tree/main/vulns/twisted/PYSEC-2022-160.yaml">https://github.com/pypa/advisory-database/tree/main/vulns/twisted/PYSEC-2022-160.yaml</a></li>
<li><a href="https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/7U6KYDTOLPICAVSR34G2WRYLFBD2YW5K">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/7U6KYDTOLPICAVSR34G2WRYLFBD2YW5K</a></li>
<li><a href="https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/GLKHA6WREIVAMBQD7KKWYHPHGGNKMAG6">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/GLKHA6WREIVAMBQD7KKWYHPHGGNKMAG6</a></li>
<li><a href="https://github.com/advisories/GHSA-rv6r-3f5q-9rgx">https://github.com/advisories/GHSA-rv6r-3f5q-9rgx</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-rv6r-3f5q-9rgx</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-03-03T19:02:08.000Z</published>
    </entry>
</feed>