<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://azu.github.io/github-advisory-database-rss/pip.rss</id>
    <title>Security Advisory for Python packages hosted at PyPI.org</title>
    <updated>2024-10-25T21:01:24.993Z</updated>
    <generator>github-advisory-database-rss</generator>
    <link rel="alternate" href="https://github.com/advisories?query=type%3Areviewed+ecosystem%3Apip"/>
    <subtitle>Security Advisory for Python packages hosted at PyPI.org on GitHub</subtitle>
    <rights>github-advisory-database-rss</rights>
    <category term="CRITICAL"/>
    <category term="HIGH"/>
    <category term="MODERATE"/>
    <category term="LOW"/>
    <entry>
        <title type="html"><![CDATA[[pytorch-lightning] Code Injection in PyTorch Lightning]]></title>
        <id>https://github.com/advisories/GHSA-r5qj-cvf9-p85h</id>
        <link href="https://github.com/advisories/GHSA-r5qj-cvf9-p85h"/>
        <updated>2024-10-25T20:49:59.000Z</updated>
        <content type="html"><![CDATA[<p>PyTorch Lightning version 1.5.10 and prior is vulnerable to code injection. An attacker could execute commands on the target OS running the operating system by setting the <code>PL_TRAINER_GPUS</code> when using the <code>Trainer</code> module. A <a href="https://github.com/pytorchlightning/pytorch-lightning/commit/8b7a12c52e52a06408e9231647839ddb4665e8ae">patch</a> is included in the <code>1.6.0</code> release.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-0845">https://nvd.nist.gov/vuln/detail/CVE-2022-0845</a></li>
<li><a href="https://github.com/pytorchlightning/pytorch-lightning/commit/8b7a12c52e52a06408e9231647839ddb4665e8ae">https://github.com/pytorchlightning/pytorch-lightning/commit/8b7a12c52e52a06408e9231647839ddb4665e8ae</a></li>
<li><a href="https://huntr.dev/bounties/a795bf93-c91e-4c79-aae8-f7d8bda92e2a">https://huntr.dev/bounties/a795bf93-c91e-4c79-aae8-f7d8bda92e2a</a></li>
<li><a href="https://github.com/PyTorchLightning/pytorch-lightning/pull/12212">https://github.com/PyTorchLightning/pytorch-lightning/pull/12212</a></li>
<li><a href="https://github.com/advisories/GHSA-r5qj-cvf9-p85h">https://github.com/advisories/GHSA-r5qj-cvf9-p85h</a></li>
<li><a href="https://github.com/pypa/advisory-database/tree/main/vulns/pytorch-lightning/PYSEC-2022-181.yaml">https://github.com/pypa/advisory-database/tree/main/vulns/pytorch-lightning/PYSEC-2022-181.yaml</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-r5qj-cvf9-p85h</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2022-03-06T00:00:16.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[python-libnmap] Argument injection in python-libnmap]]></title>
        <id>https://github.com/advisories/GHSA-qwqv-j7jr-4hp6</id>
        <link href="https://github.com/advisories/GHSA-qwqv-j7jr-4hp6"/>
        <updated>2024-10-25T20:49:08.000Z</updated>
        <content type="html"><![CDATA[<p>In the python-libnmap package through 0.7.2 for Python, remote command execution can occur (if used in a client application that does not validate arguments).</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-30284">https://nvd.nist.gov/vuln/detail/CVE-2022-30284</a></li>
<li><a href="https://github.com/savon-noir/python-libnmap/releases">https://github.com/savon-noir/python-libnmap/releases</a></li>
<li><a href="https://libnmap.readthedocs.io/en/latest/process.html#using-libnmap-process">https://libnmap.readthedocs.io/en/latest/process.html#using-libnmap-process</a></li>
<li><a href="https://github.com/savon-noir/python-libnmap/commit/c36fecde90017befeb4853396d0e2aac93c95b64">https://github.com/savon-noir/python-libnmap/commit/c36fecde90017befeb4853396d0e2aac93c95b64</a></li>
<li><a href="https://github.com/savon-noir/python-libnmap/releases/tag/v0.7.3">https://github.com/savon-noir/python-libnmap/releases/tag/v0.7.3</a></li>
<li><a href="https://pypi.org/project/python-libnmap">https://pypi.org/project/python-libnmap</a></li>
<li><a href="https://www.swascan.com/security-advisory-libnmap-2">https://www.swascan.com/security-advisory-libnmap-2</a></li>
<li><a href="https://github.com/pypa/advisory-database/tree/main/vulns/python-libnmap/PYSEC-2022-42999.yaml">https://github.com/pypa/advisory-database/tree/main/vulns/python-libnmap/PYSEC-2022-42999.yaml</a></li>
<li><a href="https://github.com/advisories/GHSA-qwqv-j7jr-4hp6">https://github.com/advisories/GHSA-qwqv-j7jr-4hp6</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-qwqv-j7jr-4hp6</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2022-05-06T00:00:54.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[quart] Werkzeug possible resource exhaustion when parsing file data in forms]]></title>
        <id>https://github.com/advisories/GHSA-q34m-jh98-gwm2</id>
        <link href="https://github.com/advisories/GHSA-q34m-jh98-gwm2"/>
        <updated>2024-10-25T19:44:46.000Z</updated>
        <content type="html"><![CDATA[<p>Applications using Werkzeug to parse <code>multipart/form-data</code> requests are vulnerable to resource exhaustion. A specially crafted form body can bypass the <code>Request.max_form_memory_size</code> setting.</p>
<p>The <code>Request.max_content_length</code> setting, as well as resource limits provided by deployment software and platforms, are also available to limit the resources used during a request. This vulnerability does not affect those settings. All three types of limits should be considered and set appropriately when deploying an application.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/pallets/werkzeug/security/advisories/GHSA-q34m-jh98-gwm2">https://github.com/pallets/werkzeug/security/advisories/GHSA-q34m-jh98-gwm2</a></li>
<li><a href="https://github.com/pallets/quart/commit/5e78c4169b8eb66b91ead3e62d44721b9e1644ee">https://github.com/pallets/quart/commit/5e78c4169b8eb66b91ead3e62d44721b9e1644ee</a></li>
<li><a href="https://github.com/pallets/werkzeug/commit/50cfeebcb0727e18cc52ffbeb125f4a66551179b">https://github.com/pallets/werkzeug/commit/50cfeebcb0727e18cc52ffbeb125f4a66551179b</a></li>
<li><a href="https://github.com/advisories/GHSA-q34m-jh98-gwm2">https://github.com/advisories/GHSA-q34m-jh98-gwm2</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-q34m-jh98-gwm2</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-10-25T19:44:43.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[werkzeug] Werkzeug possible resource exhaustion when parsing file data in forms]]></title>
        <id>https://github.com/advisories/GHSA-q34m-jh98-gwm2</id>
        <link href="https://github.com/advisories/GHSA-q34m-jh98-gwm2"/>
        <updated>2024-10-25T19:44:46.000Z</updated>
        <content type="html"><![CDATA[<p>Applications using Werkzeug to parse <code>multipart/form-data</code> requests are vulnerable to resource exhaustion. A specially crafted form body can bypass the <code>Request.max_form_memory_size</code> setting.</p>
<p>The <code>Request.max_content_length</code> setting, as well as resource limits provided by deployment software and platforms, are also available to limit the resources used during a request. This vulnerability does not affect those settings. All three types of limits should be considered and set appropriately when deploying an application.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/pallets/werkzeug/security/advisories/GHSA-q34m-jh98-gwm2">https://github.com/pallets/werkzeug/security/advisories/GHSA-q34m-jh98-gwm2</a></li>
<li><a href="https://github.com/pallets/quart/commit/5e78c4169b8eb66b91ead3e62d44721b9e1644ee">https://github.com/pallets/quart/commit/5e78c4169b8eb66b91ead3e62d44721b9e1644ee</a></li>
<li><a href="https://github.com/pallets/werkzeug/commit/50cfeebcb0727e18cc52ffbeb125f4a66551179b">https://github.com/pallets/werkzeug/commit/50cfeebcb0727e18cc52ffbeb125f4a66551179b</a></li>
<li><a href="https://github.com/advisories/GHSA-q34m-jh98-gwm2">https://github.com/advisories/GHSA-q34m-jh98-gwm2</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-q34m-jh98-gwm2</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-10-25T19:44:43.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[Werkzeug] Werkzeug safe_join not safe on Windows]]></title>
        <id>https://github.com/advisories/GHSA-f9vj-2wh5-fj8j</id>
        <link href="https://github.com/advisories/GHSA-f9vj-2wh5-fj8j"/>
        <updated>2024-10-25T19:43:41.000Z</updated>
        <content type="html"><![CDATA[<p>On Python &lt; 3.11 on Windows, <code>os.path.isabs()</code> does not catch UNC paths like <code>//server/share</code>. Werkzeug's <code>safe_join()</code> relies on this check, and so can produce a path that is not safe, potentially allowing unintended access to data. Applications using Python &gt;= 3.11, or not using Windows, are not vulnerable.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/pallets/werkzeug/security/advisories/GHSA-f9vj-2wh5-fj8j">https://github.com/pallets/werkzeug/security/advisories/GHSA-f9vj-2wh5-fj8j</a></li>
<li><a href="https://github.com/pallets/werkzeug/commit/2767bcb10a7dd1c297d812cc5e6d11a474c1f092">https://github.com/pallets/werkzeug/commit/2767bcb10a7dd1c297d812cc5e6d11a474c1f092</a></li>
<li><a href="https://github.com/advisories/GHSA-f9vj-2wh5-fj8j">https://github.com/advisories/GHSA-f9vj-2wh5-fj8j</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-f9vj-2wh5-fj8j</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-10-25T19:43:41.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[aim] Aim Web API vulnerable to Remote Code Execution]]></title>
        <id>https://github.com/advisories/GHSA-mxvw-cj37-8g2h</id>
        <link href="https://github.com/advisories/GHSA-mxvw-cj37-8g2h"/>
        <updated>2024-10-25T19:18:59.000Z</updated>
        <content type="html"><![CDATA[<p>A critical Remote Code Execution (RCE) vulnerability was identified in the aimhubio/aim project, specifically within the <code>/api/runs/search/run/</code> endpoint, affecting versions &gt;= 3.0.0. The vulnerability resides in the <code>run_search_api</code> function of the <code>aim/web/api/runs/views.py</code> file, where improper restriction of user access to the <code>RunView</code> object allows for the execution of arbitrary code via the <code>query</code> parameter. This issue enables attackers to execute arbitrary commands on the server, potentially leading to full system compromise.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-2195">https://nvd.nist.gov/vuln/detail/CVE-2024-2195</a></li>
<li><a href="https://huntr.com/bounties/22f2355e-b875-4c01-b454-327e5951c018">https://huntr.com/bounties/22f2355e-b875-4c01-b454-327e5951c018</a></li>
<li><a href="https://github.com/advisories/GHSA-mxvw-cj37-8g2h">https://github.com/advisories/GHSA-mxvw-cj37-8g2h</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-mxvw-cj37-8g2h</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2024-04-10T18:30:48.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[starkbank-ecdsa] Improper Verification of Cryptographic Signature in starkbank-ecdsa]]></title>
        <id>https://github.com/advisories/GHSA-92vm-mxjf-jqf3</id>
        <link href="https://github.com/advisories/GHSA-92vm-mxjf-jqf3"/>
        <updated>2024-10-25T14:49:42.000Z</updated>
        <content type="html"><![CDATA[<p>The <code>verify</code> function in the Stark Bank Python ECDSA library (starkbank-ecdsa) 2.0.0 fails to check that the signature is non-zero, which allows attackers to forge signatures on arbitrary messages.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2021-43572">https://nvd.nist.gov/vuln/detail/CVE-2021-43572</a></li>
<li><a href="https://github.com/starkbank/ecdsa-python/releases/tag/v2.0.1">https://github.com/starkbank/ecdsa-python/releases/tag/v2.0.1</a></li>
<li><a href="https://github.com/starkbank/ecdsa-python/commit/d136170666e9510eb63c2572551805807bd4c17f">https://github.com/starkbank/ecdsa-python/commit/d136170666e9510eb63c2572551805807bd4c17f</a></li>
<li><a href="https://github.com/pypa/advisory-database/tree/main/vulns/starkbank-ecdsa/PYSEC-2021-426.yaml">https://github.com/pypa/advisory-database/tree/main/vulns/starkbank-ecdsa/PYSEC-2021-426.yaml</a></li>
<li><a href="https://research.nccgroup.com/2021/11/08/technical-advisory-arbitrary-signature-forgery-in-stark-bank-ecdsa-libraries">https://research.nccgroup.com/2021/11/08/technical-advisory-arbitrary-signature-forgery-in-stark-bank-ecdsa-libraries</a></li>
<li><a href="https://github.com/advisories/GHSA-92vm-mxjf-jqf3">https://github.com/advisories/GHSA-92vm-mxjf-jqf3</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-92vm-mxjf-jqf3</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2021-11-10T20:41:39.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[snowflake-connector-python] The Snowflake Connector for Python stores sensitive data in logs]]></title>
        <id>https://github.com/advisories/GHSA-5vvg-pvhp-hv2m</id>
        <link href="https://github.com/advisories/GHSA-5vvg-pvhp-hv2m"/>
        <updated>2024-10-25T16:47:18.000Z</updated>
        <content type="html"><![CDATA[<h3 id="issue">Issue</h3>
<p>Snowflake recently learned about and remediated a set of vulnerabilities in the Snowflake Connector for Python. Under specific conditions, certain users credentials (or portions of those credentials) were logged locally by the Connector to the users own systems. The credentials were not logged by Snowflake.</p>
<p>These vulnerabilities affect versions up to and including 3.12.2. Snowflake fixed the issue in version 3.12.3.</p>
<h3 id="vulnerability-details">Vulnerability Details</h3>
<p>When the logging level was set by the user to DEBUG, the Connector could have logged Duo passcodes (when specified via the “passcode” parameter) and Azure SAS tokens. Additionally, the <a href="https://docs.snowflake.com/en/developer-guide/python-connector/python-connector-example#logging">SecretDetector</a> logging formatter, if enabled, contained bugs which caused it to not fully redact JWT tokens and certain private key formats.</p>
<h3 id="solution">Solution</h3>
<p>Snowflake released version 3.12.3 of the Snowflake Connector for Python, which fixes these issues. We recommend users upgrade to version 3.12.3 and review their logs for any potentially sensitive information that may have been captured.</p>
<h3 id="additional-information">Additional Information</h3>
<p>If you discover a security vulnerability in one of our products or websites, please report the issue to HackerOne. For more information, please see our <a href="https://hackerone.com/snowflake?type=team">Vulnerability Disclosure Policy</a>.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/snowflakedb/snowflake-connector-python/security/advisories/GHSA-5vvg-pvhp-hv2m">https://github.com/snowflakedb/snowflake-connector-python/security/advisories/GHSA-5vvg-pvhp-hv2m</a></li>
<li><a href="https://github.com/snowflakedb/snowflake-connector-python/commit/dbc9284a3c0382c131b971b35e8d6ab93c46f37a">https://github.com/snowflakedb/snowflake-connector-python/commit/dbc9284a3c0382c131b971b35e8d6ab93c46f37a</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-49750">https://nvd.nist.gov/vuln/detail/CVE-2024-49750</a></li>
<li><a href="https://github.com/advisories/GHSA-5vvg-pvhp-hv2m">https://github.com/advisories/GHSA-5vvg-pvhp-hv2m</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-5vvg-pvhp-hv2m</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-10-24T22:42:26.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[python-keystoneclient] Insufficient Verification of Data Authenticity in python-keystoneclient]]></title>
        <id>https://github.com/advisories/GHSA-9vg3-cf92-h2h7</id>
        <link href="https://github.com/advisories/GHSA-9vg3-cf92-h2h7"/>
        <updated>2024-10-24T21:58:16.000Z</updated>
        <content type="html"><![CDATA[<p>python-keystoneclient version 0.2.3 to 0.2.5 has middleware memcache signing bypass</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2013-2167">https://nvd.nist.gov/vuln/detail/CVE-2013-2167</a></li>
<li><a href="https://github.com/openstack/python-keystoneclient/commit/eeefb784f24c37d5f56a421e1ccc911cace9385e">https://github.com/openstack/python-keystoneclient/commit/eeefb784f24c37d5f56a421e1ccc911cace9385e</a></li>
<li><a href="https://access.redhat.com/security/cve/cve-2013-2167">https://access.redhat.com/security/cve/cve-2013-2167</a></li>
<li><a href="https://bugs.gentoo.org/show_bug.cgi?id=CVE-2013-2167">https://bugs.gentoo.org/show_bug.cgi?id=CVE-2013-2167</a></li>
<li><a href="https://bugzilla.redhat.com/show_bug.cgi?id=CVE-2013-2167">https://bugzilla.redhat.com/show_bug.cgi?id=CVE-2013-2167</a></li>
<li><a href="https://exchange.xforce.ibmcloud.com/vulnerabilities/85492">https://exchange.xforce.ibmcloud.com/vulnerabilities/85492</a></li>
<li><a href="https://github.com/openstack/python-keystoneclient/commits/0.3.0">https://github.com/openstack/python-keystoneclient/commits/0.3.0</a></li>
<li><a href="https://security-tracker.debian.org/tracker/CVE-2013-2167">https://security-tracker.debian.org/tracker/CVE-2013-2167</a></li>
<li><a href="http://lists.fedoraproject.org/pipermail/package-announce/2013-August/113944.html">http://lists.fedoraproject.org/pipermail/package-announce/2013-August/113944.html</a></li>
<li><a href="http://rhn.redhat.com/errata/RHSA-2013-0992.html">http://rhn.redhat.com/errata/RHSA-2013-0992.html</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2013/06/19/5">http://www.openwall.com/lists/oss-security/2013/06/19/5</a></li>
<li><a href="https://github.com/advisories/GHSA-9vg3-cf92-h2h7">https://github.com/advisories/GHSA-9vg3-cf92-h2h7</a></li>
<li><a href="https://github.com/pypa/advisory-database/tree/main/vulns/python-keystoneclient/PYSEC-2019-161.yaml">https://github.com/pypa/advisory-database/tree/main/vulns/python-keystoneclient/PYSEC-2019-161.yaml</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-9vg3-cf92-h2h7</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2020-03-10T20:39:05.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[pywps] XML External Entity Injection in PyWPS]]></title>
        <id>https://github.com/advisories/GHSA-p9wf-3xpg-c9g5</id>
        <link href="https://github.com/advisories/GHSA-p9wf-3xpg-c9g5"/>
        <updated>2024-10-24T21:53:22.000Z</updated>
        <content type="html"><![CDATA[<p>An XML external entity (XXE) injection in PyWPS before 4.5.0 allows an attacker to view files on the application server filesystem by assigning a path to the entity. OWSLib 0.24.1 may also be affected.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2021-39371">https://nvd.nist.gov/vuln/detail/CVE-2021-39371</a></li>
<li><a href="https://github.com/geopython/OWSLib/issues/790">https://github.com/geopython/OWSLib/issues/790</a></li>
<li><a href="https://github.com/geopython/pywps/pull/616">https://github.com/geopython/pywps/pull/616</a></li>
<li><a href="https://lists.debian.org/debian-lts-announce/2021/09/msg00001.html">https://lists.debian.org/debian-lts-announce/2021/09/msg00001.html</a></li>
<li><a href="https://github.com/geopython/pywps/commit/7d6b26a2e931df2feca0b7fb24f4d01610825aee">https://github.com/geopython/pywps/commit/7d6b26a2e931df2feca0b7fb24f4d01610825aee</a></li>
<li><a href="https://github.com/advisories/GHSA-p9wf-3xpg-c9g5">https://github.com/advisories/GHSA-p9wf-3xpg-c9g5</a></li>
<li><a href="https://github.com/pypa/advisory-database/tree/main/vulns/pywps/PYSEC-2021-121.yaml">https://github.com/pypa/advisory-database/tree/main/vulns/pywps/PYSEC-2021-121.yaml</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-p9wf-3xpg-c9g5</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2021-09-02T17:11:13.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[pysaml2] PySAML2 XML external entity attack]]></title>
        <id>https://github.com/advisories/GHSA-m269-wj6g-c459</id>
        <link href="https://github.com/advisories/GHSA-m269-wj6g-c459"/>
        <updated>2024-10-24T21:52:38.000Z</updated>
        <content type="html"><![CDATA[<p>PySAML2 allows remote attackers to conduct XML external entity (XXE) attacks via a crafted SAML XML request or response.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2016-10127">https://nvd.nist.gov/vuln/detail/CVE-2016-10127</a></li>
<li><a href="https://github.com/rohe/pysaml2/issues/366">https://github.com/rohe/pysaml2/issues/366</a></li>
<li><a href="https://github.com/rohe/pysaml2/pull/379">https://github.com/rohe/pysaml2/pull/379</a></li>
<li><a href="https://github.com/rohe/pysaml2/commit/6e09a25d9b4b7aa7a506853210a9a14100b8bc9b">https://github.com/rohe/pysaml2/commit/6e09a25d9b4b7aa7a506853210a9a14100b8bc9b</a></li>
<li><a href="https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=850716">https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=850716</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2017/01/19/5">http://www.openwall.com/lists/oss-security/2017/01/19/5</a></li>
<li><a href="https://github.com/advisories/GHSA-m269-wj6g-c459">https://github.com/advisories/GHSA-m269-wj6g-c459</a></li>
<li><a href="https://github.com/pypa/advisory-database/tree/main/vulns/pysaml2/PYSEC-2017-67.yaml">https://github.com/pypa/advisory-database/tree/main/vulns/pysaml2/PYSEC-2017-67.yaml</a></li>
<li><a href="https://web.archive.org/web/20200227195127/http://www.securityfocus.com/bid/95376">https://web.archive.org/web/20200227195127/http://www.securityfocus.com/bid/95376</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-m269-wj6g-c459</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2022-05-17T02:56:23.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[Pygments] Pygments vulnerable to ReDoS]]></title>
        <id>https://github.com/advisories/GHSA-mrwq-x4v8-fh7p</id>
        <link href="https://github.com/advisories/GHSA-mrwq-x4v8-fh7p"/>
        <updated>2024-10-24T21:49:47.000Z</updated>
        <content type="html"><![CDATA[<p>A ReDoS issue was discovered in <code>pygments/lexers/smithy.py</code> in Pygments until 2.15.0 via SmithyLexer.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-40896">https://nvd.nist.gov/vuln/detail/CVE-2022-40896</a></li>
<li><a href="https://github.com/pygments/pygments/blob/master/pygments/lexers/smithy.py#L61">https://github.com/pygments/pygments/blob/master/pygments/lexers/smithy.py#L61</a></li>
<li><a href="https://github.com/pygments/pygments/commit/97eb3d5ec7c1b3ea4fcf9dee30a2309cf92bd194">https://github.com/pygments/pygments/commit/97eb3d5ec7c1b3ea4fcf9dee30a2309cf92bd194</a></li>
<li><a href="https://github.com/pygments/pygments/commit/dd52102c38ebe78cd57748e09f38929fd283ad04">https://github.com/pygments/pygments/commit/dd52102c38ebe78cd57748e09f38929fd283ad04</a></li>
<li><a href="https://github.com/pygments/pygments/commit/fdf182a7af85b1deeeb637ca970d31935e7c9d52">https://github.com/pygments/pygments/commit/fdf182a7af85b1deeeb637ca970d31935e7c9d52</a></li>
<li><a href="https://github.com/pypa/advisory-database/tree/main/vulns/pygments/PYSEC-2023-117.yaml">https://github.com/pypa/advisory-database/tree/main/vulns/pygments/PYSEC-2023-117.yaml</a></li>
<li><a href="https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/EZGMXALE3HSP4OXC7UUWIKX3OXKZDTY3">https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/EZGMXALE3HSP4OXC7UUWIKX3OXKZDTY3</a></li>
<li><a href="https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/VUZO4BQCIY2S2KZYHERQMKURB7AHXDBO">https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/VUZO4BQCIY2S2KZYHERQMKURB7AHXDBO</a></li>
<li><a href="https://pypi.org/project/Pygments">https://pypi.org/project/Pygments</a></li>
<li><a href="https://pyup.io/posts/pyup-discovers-redos-vulnerabilities-in-top-python-packages-part-2">https://pyup.io/posts/pyup-discovers-redos-vulnerabilities-in-top-python-packages-part-2</a></li>
<li><a href="https://github.com/advisories/GHSA-mrwq-x4v8-fh7p">https://github.com/advisories/GHSA-mrwq-x4v8-fh7p</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-mrwq-x4v8-fh7p</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-07-19T15:30:26.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[pyspark] Sensitive data written to disk unencrypted in Spark]]></title>
        <id>https://github.com/advisories/GHSA-fp5j-3fpf-mhj5</id>
        <link href="https://github.com/advisories/GHSA-fp5j-3fpf-mhj5"/>
        <updated>2024-10-24T21:48:37.000Z</updated>
        <content type="html"><![CDATA[<p>Prior to Spark 2.3.3, in certain situations Spark would write user data to local disk unencrypted, even if spark.io.encryption.enabled=true. This includes cached blocks that are fetched to disk (controlled by spark.maxRemoteBlockSizeFetchToMem); in SparkR, using parallelize; in Pyspark, using broadcast and parallelize; and use of python udfs.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2019-10099">https://nvd.nist.gov/vuln/detail/CVE-2019-10099</a></li>
<li><a href="https://lists.apache.org/thread.html/c2a39c207421797f82823a8aff488dcd332d9544038307bf69a2ba9e@%3Cuser.spark.apache.org%3E">https://lists.apache.org/thread.html/c2a39c207421797f82823a8aff488dcd332d9544038307bf69a2ba9e@%3Cuser.spark.apache.org%3E</a></li>
<li><a href="https://lists.apache.org/thread.html/rabe1d47e2bf8b8f6d9f3068c8d2679731d57fa73b3a7ed1fa82406d2@%3Cissues.spark.apache.org%3E">https://lists.apache.org/thread.html/rabe1d47e2bf8b8f6d9f3068c8d2679731d57fa73b3a7ed1fa82406d2@%3Cissues.spark.apache.org%3E</a></li>
<li><a href="https://lists.apache.org/thread.html/ra216b7b0dd82a2c12c2df9d6095e689eb3f3d28164e6b6587da69fae@%3Ccommits.spark.apache.org%3E">https://lists.apache.org/thread.html/ra216b7b0dd82a2c12c2df9d6095e689eb3f3d28164e6b6587da69fae@%3Ccommits.spark.apache.org%3E</a></li>
<li><a href="https://github.com/pypa/advisory-database/tree/main/vulns/pyspark/PYSEC-2019-114.yaml">https://github.com/pypa/advisory-database/tree/main/vulns/pyspark/PYSEC-2019-114.yaml</a></li>
<li><a href="https://github.com/advisories/GHSA-fp5j-3fpf-mhj5">https://github.com/advisories/GHSA-fp5j-3fpf-mhj5</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-fp5j-3fpf-mhj5</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2019-08-08T15:18:22.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[pyquest] Forwarding of confidentials headers to third parties in fluture-node]]></title>
        <id>https://github.com/advisories/GHSA-32x6-qvw6-mxj4</id>
        <link href="https://github.com/advisories/GHSA-32x6-qvw6-mxj4"/>
        <updated>2024-10-24T21:46:18.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>Using <code>followRedirects</code> or <code>followRedirectsWith</code> with any of the redirection strategies built into fluture-node 4.0.0 or 4.0.1, paired with a request that includes confidential headers such as Authorization or Cookie, exposes you to a vulnerability where, if the destination server were to redirect the request to a server on a third-party domain, or the same domain over unencrypted HTTP, the headers would be included in the follow-up request and be exposed to the third party, or potential http traffic sniffing.</p>
<h3 id="patches">Patches</h3>
<p>The redirection strategies made available in version 4.0.2 automatically redact confidential headers when a redirect is followed across to another origin.</p>
<h3 id="workarounds">Workarounds</h3>
<p>Use a custom redirection strategy via the <code>followRedirectsWith</code> function. The custom strategy can be based on the new strategies available in <a href="mailto:fluture-node@4.0.2">fluture-node@4.0.2</a>.</p>
<h3 id="references">References</h3>
<ul>
<li>This vulnerability was discovered after the announcement of similar vulnerabilities in the <code>follow-redirects</code> package. There is more information there: <a href="https://github.com/advisories/GHSA-74fj-2j2h-c42q">https://github.com/advisories/GHSA-74fj-2j2h-c42q</a> and <a href="https://huntr.dev/bounties/7cf2bf90-52da-4d59-8028-a73b132de0db/">https://huntr.dev/bounties/7cf2bf90-52da-4d59-8028-a73b132de0db/</a></li>
<li>Fixed in 125e4474f910c1507f8ec3232848626fbc0f55c4 and 0c99bc511533d48be17dc6bfe641f7d0aeb34d77</li>
</ul>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/fluture-js/fluture-node/security/advisories/GHSA-32x6-qvw6-mxj4">https://github.com/fluture-js/fluture-node/security/advisories/GHSA-32x6-qvw6-mxj4</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-24719">https://nvd.nist.gov/vuln/detail/CVE-2022-24719</a></li>
<li><a href="https://github.com/psf/requests/pull/4718">https://github.com/psf/requests/pull/4718</a></li>
<li><a href="https://github.com/fluture-js/fluture-node/commit/0c99bc511533d48be17dc6bfe641f7d0aeb34d77">https://github.com/fluture-js/fluture-node/commit/0c99bc511533d48be17dc6bfe641f7d0aeb34d77</a></li>
<li><a href="https://github.com/fluture-js/fluture-node/commit/125e4474f910c1507f8ec3232848626fbc0f55c4">https://github.com/fluture-js/fluture-node/commit/125e4474f910c1507f8ec3232848626fbc0f55c4</a></li>
<li><a href="https://github.com/pypa/advisory-database/tree/main/vulns/request-util/PYSEC-2022-43052.yaml">https://github.com/pypa/advisory-database/tree/main/vulns/request-util/PYSEC-2022-43052.yaml</a></li>
<li><a href="https://github.com/pypa/advisory-database/tree/main/vulns/pyquest/PYSEC-2022-43051.yaml">https://github.com/pypa/advisory-database/tree/main/vulns/pyquest/PYSEC-2022-43051.yaml</a></li>
<li><a href="https://github.com/advisories/GHSA-32x6-qvw6-mxj4">https://github.com/advisories/GHSA-32x6-qvw6-mxj4</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-32x6-qvw6-mxj4</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2022-03-01T22:14:57.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[flair] Flair allows arbitrary code execution]]></title>
        <id>https://github.com/advisories/GHSA-9rw2-jf8x-cgwm</id>
        <link href="https://github.com/advisories/GHSA-9rw2-jf8x-cgwm"/>
        <updated>2024-10-24T16:45:51.000Z</updated>
        <content type="html"><![CDATA[<p>A vulnerability, which was classified as critical, was found in flairNLP flair 0.14.0. Affected is the function ClusteringModel of the file flair\models\clustering.py of the component Mode File Loader. The manipulation leads to code injection. It is possible to launch the attack remotely. The complexity of an attack is rather high. The exploitability is told to be difficult. The exploit has been disclosed to the public and may be used. The vendor was contacted early about this disclosure but did not respond in any way.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-10073">https://nvd.nist.gov/vuln/detail/CVE-2024-10073</a></li>
<li><a href="https://github.com/bayuncao/vul-cve-20">https://github.com/bayuncao/vul-cve-20</a></li>
<li><a href="https://github.com/bayuncao/vul-cve-20/blob/main/PoC.py">https://github.com/bayuncao/vul-cve-20/blob/main/PoC.py</a></li>
<li><a href="https://vuldb.com/?ctiid.280722">https://vuldb.com/?ctiid.280722</a></li>
<li><a href="https://vuldb.com/?id.280722">https://vuldb.com/?id.280722</a></li>
<li><a href="https://vuldb.com/?submit.420055">https://vuldb.com/?submit.420055</a></li>
<li><a href="https://github.com/advisories/GHSA-9rw2-jf8x-cgwm">https://github.com/advisories/GHSA-9rw2-jf8x-cgwm</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-9rw2-jf8x-cgwm</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-10-17T18:31:36.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[mysql-connector-python] MySQL Connector/Python connector takeover vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-hgjp-83m4-h4fj</id>
        <link href="https://github.com/advisories/GHSA-hgjp-83m4-h4fj"/>
        <updated>2024-10-24T16:45:37.000Z</updated>
        <content type="html"><![CDATA[<p>Vulnerability in the MySQL Connectors product of Oracle MySQL (component: Connector/Python).  Supported versions that are affected are 9.0.0 and prior. Difficult to exploit vulnerability allows low privileged attacker with network access via multiple protocols to compromise MySQL Connectors.  Successful attacks of this vulnerability can result in takeover of MySQL Connectors. CVSS 3.1 Base Score 7.5 (Confidentiality, Integrity and Availability impacts).  CVSS Vector: (CVSS:3.1/AV:N/AC:H/PR:L/UI:N/S:U/C:H/I:H/A:H).</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-21272">https://nvd.nist.gov/vuln/detail/CVE-2024-21272</a></li>
<li><a href="https://www.oracle.com/security-alerts/cpuoct2024.html">https://www.oracle.com/security-alerts/cpuoct2024.html</a></li>
<li><a href="https://github.com/mysql/mysql-connector-python/commit/e6b927af06e8a85bd3754f602df96a5592b4558c">https://github.com/mysql/mysql-connector-python/commit/e6b927af06e8a85bd3754f602df96a5592b4558c</a></li>
<li><a href="https://github.com/advisories/GHSA-hgjp-83m4-h4fj">https://github.com/advisories/GHSA-hgjp-83m4-h4fj</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-hgjp-83m4-h4fj</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-10-15T21:30:39.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[exiv2] Exiv2  has a denial of service due to unbounded recursion in QuickTimeVideo::multipleEntriesDecoder]]></title>
        <id>https://github.com/advisories/GHSA-crmj-qh74-2r36</id>
        <link href="https://github.com/advisories/GHSA-crmj-qh74-2r36"/>
        <updated>2024-10-23T17:40:20.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>A denial-of-service was found in Exiv2 version v0.28.1: an unbounded recursion can cause Exiv2 to crash by exhausting the stack. The vulnerable function, <code>QuickTimeVideo::multipleEntriesDecoder</code>, was new in v0.28.0 (see <a href="https://github.com/Exiv2/exiv2/pull/2337">https://github.com/Exiv2/exiv2/pull/2337</a>), so Exiv2 versions before v0.28 are <em>not</em> affected.  Exiv2 is a command-line utility and C++ library for reading, writing, deleting, and modifying the metadata of image files. The denial-of-service is triggered when Exiv2 is used to read the metadata of a crafted video file.</p>
<h3 id="patches">Patches</h3>
<p>The bug is fixed in version v0.28.2.</p>
<h3 id="for-more-information">For more information</h3>
<p>Please see our <a href="https://github.com/Exiv2/exiv2/security/policy">security policy</a> for information about Exiv2 security.</p>
<h3 id="credit">Credit</h3>
<p>This bug was found by <a href="https://github.com/google/oss-fuzz">OSS-Fuzz</a>.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/Exiv2/exiv2/security/advisories/GHSA-crmj-qh74-2r36">https://github.com/Exiv2/exiv2/security/advisories/GHSA-crmj-qh74-2r36</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-25112">https://nvd.nist.gov/vuln/detail/CVE-2024-25112</a></li>
<li><a href="https://github.com/Exiv2/exiv2/pull/2337">https://github.com/Exiv2/exiv2/pull/2337</a></li>
<li><a href="https://github.com/pypa/advisory-database/tree/main/vulns/exiv2/PYSEC-2024-107.yaml">https://github.com/pypa/advisory-database/tree/main/vulns/exiv2/PYSEC-2024-107.yaml</a></li>
<li><a href="https://github.com/advisories/GHSA-crmj-qh74-2r36">https://github.com/advisories/GHSA-crmj-qh74-2r36</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-crmj-qh74-2r36</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-10-17T17:13:24.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[exiv2] Exiv2 has an out-of-bounds read in QuickTimeVideo::NikonTagsDecoder]]></title>
        <id>https://github.com/advisories/GHSA-g9xm-7538-mq8w</id>
        <link href="https://github.com/advisories/GHSA-g9xm-7538-mq8w"/>
        <updated>2024-10-23T17:39:55.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>An out-of-bounds read was found in Exiv2 version v0.28.1. The vulnerable function, <code>QuickTimeVideo::NikonTagsDecoder</code>, was new in v0.28.0 (see <a href="https://github.com/Exiv2/exiv2/pull/2337">https://github.com/Exiv2/exiv2/pull/2337</a>), so Exiv2 versions before v0.28 are <em>not</em> affected. Exiv2 is a command-line utility and C++ library for reading, writing, deleting, and modifying the metadata of image files. The out-of-bounds read is triggered when Exiv2 is used to read the metadata of a crafted video file.</p>
<h3 id="patches">Patches</h3>
<p>The bug is fixed in version v0.28.2.</p>
<h3 id="for-more-information">For more information</h3>
<p>Please see our <a href="https://github.com/Exiv2/exiv2/security/policy">security policy</a> for information about Exiv2 security.</p>
<h3 id="credit">Credit</h3>
<p>This bug was found by <a href="https://github.com/google/oss-fuzz">OSS-Fuzz</a>.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/Exiv2/exiv2/security/advisories/GHSA-g9xm-7538-mq8w">https://github.com/Exiv2/exiv2/security/advisories/GHSA-g9xm-7538-mq8w</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-24826">https://nvd.nist.gov/vuln/detail/CVE-2024-24826</a></li>
<li><a href="https://github.com/Exiv2/exiv2/pull/2337">https://github.com/Exiv2/exiv2/pull/2337</a></li>
<li><a href="https://github.com/pypa/advisory-database/tree/main/vulns/exiv2/PYSEC-2024-106.yaml">https://github.com/pypa/advisory-database/tree/main/vulns/exiv2/PYSEC-2024-106.yaml</a></li>
<li><a href="https://github.com/advisories/GHSA-g9xm-7538-mq8w">https://github.com/advisories/GHSA-g9xm-7538-mq8w</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-g9xm-7538-mq8w</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-10-17T17:12:21.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[onnx] onnx allows Arbitrary File Overwrite in download_model_with_test_data]]></title>
        <id>https://github.com/advisories/GHSA-6rq9-53c3-f7vj</id>
        <link href="https://github.com/advisories/GHSA-6rq9-53c3-f7vj"/>
        <updated>2024-10-23T17:39:18.000Z</updated>
        <content type="html"><![CDATA[<p>A vulnerability in the <code>download_model_with_test_data</code> function of the onnx/onnx framework, version 1.16.0, allows for arbitrary file overwrite due to inadequate prevention of path traversal attacks in malicious tar files. This vulnerability enables attackers to overwrite any file on the system, potentially leading to remote code execution, deletion of system, personal, or application files, thus impacting the integrity and availability of the system. The issue arises from the function's handling of tar file extraction without performing security checks on the paths within the tar file, as demonstrated by the ability to overwrite the <code>/home/kali/.ssh/authorized_keys</code> file by specifying an absolute path in the malicious tar file.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-5187">https://nvd.nist.gov/vuln/detail/CVE-2024-5187</a></li>
<li><a href="https://huntr.com/bounties/50235ebd-3410-4ada-b064-1a648e11237e">https://huntr.com/bounties/50235ebd-3410-4ada-b064-1a648e11237e</a></li>
<li><a href="https://github.com/onnx/onnx/issues/6215">https://github.com/onnx/onnx/issues/6215</a></li>
<li><a href="https://github.com/onnx/onnx/pull/6145">https://github.com/onnx/onnx/pull/6145</a></li>
<li><a href="https://github.com/onnx/onnx/commit/1b70f9b673259360b6a2339c4bd97db9ea6e552f">https://github.com/onnx/onnx/commit/1b70f9b673259360b6a2339c4bd97db9ea6e552f</a></li>
<li><a href="https://github.com/onnx/onnx/commit/3fc3845edb048df559aa2a839e39e95503a0ee34">https://github.com/onnx/onnx/commit/3fc3845edb048df559aa2a839e39e95503a0ee34</a></li>
<li><a href="https://github.com/advisories/GHSA-6rq9-53c3-f7vj">https://github.com/advisories/GHSA-6rq9-53c3-f7vj</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-6rq9-53c3-f7vj</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-06-06T21:30:37.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[curl-cffi] curl_cffi bundles a version of libcurl affected by High Severity vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-3vpc-4p9p-47hc</id>
        <link href="https://github.com/advisories/GHSA-3vpc-4p9p-47hc"/>
        <updated>2024-10-22T18:15:17.000Z</updated>
        <content type="html"><![CDATA[<h3 id="summary">Summary</h3>
<p>curl_cffi is potentially affected by High Severity vulnerability (CVE-2023-38545) in libcurl&lt;8.4.0</p>
<h3 id="details">Details</h3>
<p>HIGH severity vulnerability in curl and libcurl: <a href="https://github.com/curl/curl/discussions/12026#discussioncomment-7195548">announcement</a>
Details are still unknown, but seems it will be a major issue as it's advertised by curl devs as "<em>probably the worst curl security flaw in a long time</em>".
A patched version (8.4.0) and details will be published around 06:00 UTC on October 11.
curl_cffi wheels on PyPI ship with libcurl 7.84.0</p>
<h3 id="poc">PoC</h3>
<p><a href="https://inspector.pypi.io/project/curl-cffi/0.5.10b2/packages/56/ae/eb7d39ad234f1f44650b910757d5aa696feff413d327c8328223ce78cb76/curl_cffi-0.5.10b2-cp37-abi3-manylinux_2_17_aarch64.manylinux2014_aarch64.whl/curl_cffi/include/curl/curlver.h">https://inspector.pypi.io/project/curl-cffi/0.5.10b2/packages/56/ae/eb7d39ad234f1f44650b910757d5aa696feff413d327c8328223ce78cb76/curl_cffi-0.5.10b2-cp37-abi3-manylinux_2_17_aarch64.manylinux2014_aarch64.whl/curl_cffi/include/curl/curlver.h</a></p>
<h3 id="resolution">Resolution</h3>
<p>Versions after 0.7 bundles with <code>libcurl&gt;=8.5</code>, which is not affected by this issue.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/lexiforest/curl_cffi/security/advisories/GHSA-3vpc-4p9p-47hc">https://github.com/lexiforest/curl_cffi/security/advisories/GHSA-3vpc-4p9p-47hc</a></li>
<li><a href="https://github.com/advisories/GHSA-7xw9-w465-6x42">https://github.com/advisories/GHSA-7xw9-w465-6x42</a></li>
<li><a href="https://github.com/advisories/GHSA-3vpc-4p9p-47hc">https://github.com/advisories/GHSA-3vpc-4p9p-47hc</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-3vpc-4p9p-47hc</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-10-22T18:15:17.000Z</published>
    </entry>
</feed>