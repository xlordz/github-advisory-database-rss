<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://azu.github.io/github-advisory-database-rss/pip.rss</id>
    <title>Security Advisory for Python packages hosted at PyPI.org</title>
    <updated>2024-12-06T02:28:12.014Z</updated>
    <generator>github-advisory-database-rss</generator>
    <link rel="alternate" href="https://github.com/advisories?query=type%3Areviewed+ecosystem%3Apip"/>
    <subtitle>Security Advisory for Python packages hosted at PyPI.org on GitHub</subtitle>
    <rights>github-advisory-database-rss</rights>
    <category term="CRITICAL"/>
    <category term="HIGH"/>
    <category term="MODERATE"/>
    <category term="LOW"/>
    <entry>
        <title type="html"><![CDATA[[ansible-core] Ansible-Core vulnerable to content protections bypass]]></title>
        <id>https://github.com/advisories/GHSA-99w6-3xph-cx78</id>
        <link href="https://github.com/advisories/GHSA-99w6-3xph-cx78"/>
        <updated>2024-12-04T03:31:15.000Z</updated>
        <content type="html"><![CDATA[<p>A flaw was found in Ansible-Core. This vulnerability allows attackers to bypass unsafe content protections using the hostvars object to reference and execute templated content. This issue can lead to arbitrary code execution if remote data or module outputs are improperly templated within playbooks.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-11079">https://nvd.nist.gov/vuln/detail/CVE-2024-11079</a></li>
<li><a href="https://access.redhat.com/security/cve/CVE-2024-11079">https://access.redhat.com/security/cve/CVE-2024-11079</a></li>
<li><a href="https://bugzilla.redhat.com/show_bug.cgi?id=2325171">https://bugzilla.redhat.com/show_bug.cgi?id=2325171</a></li>
<li><a href="https://github.com/ansible/ansible/pull/84299">https://github.com/ansible/ansible/pull/84299</a></li>
<li><a href="https://github.com/ansible/ansible/pull/84339">https://github.com/ansible/ansible/pull/84339</a></li>
<li><a href="https://github.com/ansible/ansible/commit/2936b80dbbc7efb889934aeec80f6142c10266ce">https://github.com/ansible/ansible/commit/2936b80dbbc7efb889934aeec80f6142c10266ce</a></li>
<li><a href="https://github.com/ansible/ansible/commit/70e83e72b43e05e57eb42a6d52d01a4d9768f510">https://github.com/ansible/ansible/commit/70e83e72b43e05e57eb42a6d52d01a4d9768f510</a></li>
<li><a href="https://github.com/ansible/ansible/commit/98774d15d7748ebaaaf2e83942cc7e8d39f7280e">https://github.com/ansible/ansible/commit/98774d15d7748ebaaaf2e83942cc7e8d39f7280e</a></li>
<li><a href="https://github.com/ansible/ansible/blob/v2.18.1/changelogs/CHANGELOG-v2.18.rst#security-fixes">https://github.com/ansible/ansible/blob/v2.18.1/changelogs/CHANGELOG-v2.18.rst#security-fixes</a></li>
<li><a href="https://access.redhat.com/errata/RHSA-2024:10770">https://access.redhat.com/errata/RHSA-2024:10770</a></li>
<li><a href="https://github.com/advisories/GHSA-99w6-3xph-cx78">https://github.com/advisories/GHSA-99w6-3xph-cx78</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-99w6-3xph-cx78</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2024-11-12T00:30:36.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[ansible-core] Ansible-Core vulnerable to content protections bypass]]></title>
        <id>https://github.com/advisories/GHSA-99w6-3xph-cx78</id>
        <link href="https://github.com/advisories/GHSA-99w6-3xph-cx78"/>
        <updated>2024-12-04T03:31:15.000Z</updated>
        <content type="html"><![CDATA[<p>A flaw was found in Ansible-Core. This vulnerability allows attackers to bypass unsafe content protections using the hostvars object to reference and execute templated content. This issue can lead to arbitrary code execution if remote data or module outputs are improperly templated within playbooks.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-11079">https://nvd.nist.gov/vuln/detail/CVE-2024-11079</a></li>
<li><a href="https://access.redhat.com/security/cve/CVE-2024-11079">https://access.redhat.com/security/cve/CVE-2024-11079</a></li>
<li><a href="https://bugzilla.redhat.com/show_bug.cgi?id=2325171">https://bugzilla.redhat.com/show_bug.cgi?id=2325171</a></li>
<li><a href="https://github.com/ansible/ansible/pull/84299">https://github.com/ansible/ansible/pull/84299</a></li>
<li><a href="https://github.com/ansible/ansible/pull/84339">https://github.com/ansible/ansible/pull/84339</a></li>
<li><a href="https://github.com/ansible/ansible/commit/2936b80dbbc7efb889934aeec80f6142c10266ce">https://github.com/ansible/ansible/commit/2936b80dbbc7efb889934aeec80f6142c10266ce</a></li>
<li><a href="https://github.com/ansible/ansible/commit/70e83e72b43e05e57eb42a6d52d01a4d9768f510">https://github.com/ansible/ansible/commit/70e83e72b43e05e57eb42a6d52d01a4d9768f510</a></li>
<li><a href="https://github.com/ansible/ansible/commit/98774d15d7748ebaaaf2e83942cc7e8d39f7280e">https://github.com/ansible/ansible/commit/98774d15d7748ebaaaf2e83942cc7e8d39f7280e</a></li>
<li><a href="https://github.com/ansible/ansible/blob/v2.18.1/changelogs/CHANGELOG-v2.18.rst#security-fixes">https://github.com/ansible/ansible/blob/v2.18.1/changelogs/CHANGELOG-v2.18.rst#security-fixes</a></li>
<li><a href="https://access.redhat.com/errata/RHSA-2024:10770">https://access.redhat.com/errata/RHSA-2024:10770</a></li>
<li><a href="https://github.com/advisories/GHSA-99w6-3xph-cx78">https://github.com/advisories/GHSA-99w6-3xph-cx78</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-99w6-3xph-cx78</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2024-11-12T00:30:36.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[ansible-core] Ansible-Core vulnerable to content protections bypass]]></title>
        <id>https://github.com/advisories/GHSA-99w6-3xph-cx78</id>
        <link href="https://github.com/advisories/GHSA-99w6-3xph-cx78"/>
        <updated>2024-12-04T03:31:15.000Z</updated>
        <content type="html"><![CDATA[<p>A flaw was found in Ansible-Core. This vulnerability allows attackers to bypass unsafe content protections using the hostvars object to reference and execute templated content. This issue can lead to arbitrary code execution if remote data or module outputs are improperly templated within playbooks.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-11079">https://nvd.nist.gov/vuln/detail/CVE-2024-11079</a></li>
<li><a href="https://access.redhat.com/security/cve/CVE-2024-11079">https://access.redhat.com/security/cve/CVE-2024-11079</a></li>
<li><a href="https://bugzilla.redhat.com/show_bug.cgi?id=2325171">https://bugzilla.redhat.com/show_bug.cgi?id=2325171</a></li>
<li><a href="https://github.com/ansible/ansible/pull/84299">https://github.com/ansible/ansible/pull/84299</a></li>
<li><a href="https://github.com/ansible/ansible/pull/84339">https://github.com/ansible/ansible/pull/84339</a></li>
<li><a href="https://github.com/ansible/ansible/commit/2936b80dbbc7efb889934aeec80f6142c10266ce">https://github.com/ansible/ansible/commit/2936b80dbbc7efb889934aeec80f6142c10266ce</a></li>
<li><a href="https://github.com/ansible/ansible/commit/70e83e72b43e05e57eb42a6d52d01a4d9768f510">https://github.com/ansible/ansible/commit/70e83e72b43e05e57eb42a6d52d01a4d9768f510</a></li>
<li><a href="https://github.com/ansible/ansible/commit/98774d15d7748ebaaaf2e83942cc7e8d39f7280e">https://github.com/ansible/ansible/commit/98774d15d7748ebaaaf2e83942cc7e8d39f7280e</a></li>
<li><a href="https://github.com/ansible/ansible/blob/v2.18.1/changelogs/CHANGELOG-v2.18.rst#security-fixes">https://github.com/ansible/ansible/blob/v2.18.1/changelogs/CHANGELOG-v2.18.rst#security-fixes</a></li>
<li><a href="https://access.redhat.com/errata/RHSA-2024:10770">https://access.redhat.com/errata/RHSA-2024:10770</a></li>
<li><a href="https://github.com/advisories/GHSA-99w6-3xph-cx78">https://github.com/advisories/GHSA-99w6-3xph-cx78</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-99w6-3xph-cx78</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2024-11-12T00:30:36.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[sentry] Sentry improper error handling leaks Application Integration Client Secret]]></title>
        <id>https://github.com/advisories/GHSA-v5h2-q2w4-gpcx</id>
        <link href="https://github.com/advisories/GHSA-v5h2-q2w4-gpcx"/>
        <updated>2024-12-03T19:25:59.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>During routine testing, we identified a scenario where a specific error message generated by our platform could include a plaintext Client ID and Client Secret for an application integration. The Client ID and Client Secret would not be displayed in the UI, but would be returned in the underlying HTTP response to the end user. This could occur under the following conditions:</p>
<ul>
<li>An app installation made use of a <a href="https://docs.sentry.io/organization/integrations/integration-platform/ui-components/formfield/#select">Search UI component</a> with the <code>async</code> flag set to true (default: true),</li>
<li>A user types types into the Search Component which creates a request to the third-party for search or query results, and</li>
<li>That third-party response may then fail validation and Sentry would return the <code>select-requester.invalid-response</code> error code along with a serialized version of a Sentry application containing the integration Client Secret.</li>
</ul>
<p>Should this error be found, it's reasonable to assume the potential exposure of an integration Client Secret. However, an ID and Secret pair alone does not provide direct access to any data. For that secret to be abused an attacker would also need to obtain a valid API token for a Sentry application. </p>
<h4 id="impact-for-saas-users">Impact for SaaS Users</h4>
<p>For Sentry SaaS users, we have confirmed that only a single application integration was impacted and the owner has rotated their Client Secret. We have also confirmed that no abuse of the leaked Client Secret has occurred. </p>
<h4 id="potential-impact-for-self-hosted-users">Potential Impact for Self-Hosted Users</h4>
<p>Sentry self-hosted does not ship with any application integrations. This could only impact self-hosted users that maintain their own integrations. In that case, search for a <code>select-requester.invalid-response</code> event. Please note that this error was also shared with another event unrelated to this advisory so you will also need to review the parameters logged for each named event. You may review <a href="https://github.com/getsentry/sentry/blob/4a448fbb0d0b416fef9ee0ab26579e0dc16f21b7/src/sentry/sentry_apps/external_requests/select_requester.py#L78-L123">select_requester.py</a> for the instances where these errors can be generated. With the security fix this is no longer a shared event type.</p>
<h3 id="patches">Patches</h3>
<ul>
<li>Sentry SaaS users do not need to take any action.</li>
<li>Sentry self-hosted users should upgrade to 24.11.1 or higher.</li>
</ul>
<h3 id="references">References</h3>
<ul>
<li>Bug introduced in <a href="https://github.com/getsentry/sentry/pull/79377">https://github.com/getsentry/sentry/pull/79377</a></li>
<li>Security fix in <a href="https://github.com/getsentry/sentry/pull/81038">https://github.com/getsentry/sentry/pull/81038</a></li>
</ul>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/getsentry/sentry/security/advisories/GHSA-v5h2-q2w4-gpcx">https://github.com/getsentry/sentry/security/advisories/GHSA-v5h2-q2w4-gpcx</a></li>
<li><a href="https://github.com/getsentry/sentry/pull/79377">https://github.com/getsentry/sentry/pull/79377</a></li>
<li><a href="https://github.com/getsentry/sentry/pull/81038">https://github.com/getsentry/sentry/pull/81038</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-53253">https://nvd.nist.gov/vuln/detail/CVE-2024-53253</a></li>
<li><a href="https://github.com/advisories/GHSA-v5h2-q2w4-gpcx">https://github.com/advisories/GHSA-v5h2-q2w4-gpcx</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-v5h2-q2w4-gpcx</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-11-22T20:27:19.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[mobsf] Mobile Security Framework (MobSF) Stored Cross-Site Scripting Vulnerability in "Diff or Compare" Functionality]]></title>
        <id>https://github.com/advisories/GHSA-5jc6-h9w7-jm3p</id>
        <link href="https://github.com/advisories/GHSA-5jc6-h9w7-jm3p"/>
        <updated>2024-12-03T18:45:23.000Z</updated>
        <content type="html"><![CDATA[<h3 id="summary">Summary</h3>
<p>The application allows users to upload files with scripts in the filename parameter. As a result, a malicious user can upload a script file to the system. When users in the application use the "Diff or Compare" functionality, they are affected by a Stored Cross-Site Scripting vulnerability.</p>
<h3 id="details">Details</h3>
<p>I found a Stored Cross-Site Scripting vulnerability in the "Diff or Compare" functionality. This issue occurs because the upload functionality allows users to upload files with special characters such as &lt;, &gt;, /, and " in the filename. This vulnerability can be mitigated by restricting file uploads to filenames containing only whitelisted characters, such as A-Z, 0-9, and specific special characters permitted by business requirements, like - or _ . </p>
<h3 id="poc">PoC</h3>
<p><em>Complete instructions, including specific configuration details, to reproduce the vulnerability.</em></p>
<ol>
<li><p>On MobSF version 4.2.8, I clicked on "Unload &amp; Analyze" button.
<img alt="0" src="https://github.com/user-attachments/assets/489013fe-cf21-4839-bd39-35eebad01a3a"></p>
</li>
<li><p>I uploaded zip file as a name <code>test.zip</code>.
<img alt="1" src="https://github.com/user-attachments/assets/c26a18ec-c276-43d5-97df-fb189b8d5a6a"></p>
</li>
<li><p>I used an intercepting proxy tool while uploading a file and changed the value of the filename parameter from <code>test.zip</code> to <code>&lt;image src onerror=prompt(document.domain)&gt;test.zip</code>. This means I uploaded a file and set its name to a script value. As a result, the server allowed the file to be uploaded successfully.
<img alt="2" src="https://github.com/user-attachments/assets/90e275a2-58a4-4c0d-9b6a-399ec071cdf2"></p>
</li>
<li><p>I accessed /recent_scans/ and found a file named <code>&lt;image src onerror=prompt(document.domain)&gt;test.zip</code> in the recent scans. Then, I clicked on the "Differ or Compare" button."
<img alt="3" src="https://github.com/user-attachments/assets/0997a437-5841-49c1-ae94-e0e76173bdb6"></p>
</li>
<li><p>I found that the application requires selecting a file to compare, and I selected the file <code>&lt;image src onerror=prompt(document.domain)&gt;test.zip</code>
<img alt="4" src="https://github.com/user-attachments/assets/a156f058-732f-4763-8753-b0cef4075d53"></p>
</li>
<li><p>I found that the JavaScript in the filename value was executed in the web browser.
<img alt="5" src="https://github.com/user-attachments/assets/b0a9bcbf-af70-4ec6-a22d-6224dfc55639"></p>
</li>
</ol>
<h3 id="impact">Impact</h3>
<p>Allowing a malicious user to upload a script in the filename parameter can be used to steal information from other users or administrators when they perform the compare functionality. The script will be stored in the system permanently in this vulnerability.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/MobSF/Mobile-Security-Framework-MobSF/security/advisories/GHSA-5jc6-h9w7-jm3p">https://github.com/MobSF/Mobile-Security-Framework-MobSF/security/advisories/GHSA-5jc6-h9w7-jm3p</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-53999">https://nvd.nist.gov/vuln/detail/CVE-2024-53999</a></li>
<li><a href="https://github.com/MobSF/Mobile-Security-Framework-MobSF/commit/27d165872847f5ae7417caf09f37edeeba741e1e">https://github.com/MobSF/Mobile-Security-Framework-MobSF/commit/27d165872847f5ae7417caf09f37edeeba741e1e</a></li>
<li><a href="https://github.com/advisories/GHSA-5jc6-h9w7-jm3p">https://github.com/advisories/GHSA-5jc6-h9w7-jm3p</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-5jc6-h9w7-jm3p</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-12-03T18:45:22.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[matrix-synapse] Synapse Matrix has a partial room state leak via Sliding Sync]]></title>
        <id>https://github.com/advisories/GHSA-56w4-5538-8v8h</id>
        <link href="https://github.com/advisories/GHSA-56w4-5538-8v8h"/>
        <updated>2024-12-03T18:44:25.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>The Sliding Sync feature on Synapse versions between 1.113.0rc1 and 1.120.0 can leak partial room state changes to users no longer in a room. Non-state events, like messages, are unaffected.</p>
<h3 id="patches">Patches</h3>
<p>Synapse version 1.120.1 fixes the problem.</p>
<h3 id="workarounds">Workarounds</h3>
<p>Disable Sliding Sync.</p>
<h3 id="references">References</h3>
<p><a href="https://github.com/matrix-org/matrix-spec-proposals/pull/4186">https://github.com/matrix-org/matrix-spec-proposals/pull/4186</a>
<a href="https://github.com/element-hq/synapse/blob/d80cd57c54427687afcb48740d99219c88a0fff1/synapse/config/experimental.py#L341-L344">https://github.com/element-hq/synapse/blob/d80cd57c54427687afcb48740d99219c88a0fff1/synapse/config/experimental.py#L341-L344</a></p>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory, please email us at <a href="mailto:security@element.io">security at element.io</a>.</p>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/element-hq/synapse/security/advisories/GHSA-56w4-5538-8v8h">https://github.com/element-hq/synapse/security/advisories/GHSA-56w4-5538-8v8h</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-53867">https://nvd.nist.gov/vuln/detail/CVE-2024-53867</a></li>
<li><a href="https://github.com/matrix-org/matrix-spec-proposals/pull/4186">https://github.com/matrix-org/matrix-spec-proposals/pull/4186</a></li>
<li><a href="https://github.com/advisories/GHSA-56w4-5538-8v8h">https://github.com/advisories/GHSA-56w4-5538-8v8h</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-56w4-5538-8v8h</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-12-03T18:44:23.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[matrix-synapse] Synapse can be forced to thumbnail unexpected file formats, invoking external, potentially untrustworthy decoders]]></title>
        <id>https://github.com/advisories/GHSA-vp6v-whfm-rv3g</id>
        <link href="https://github.com/advisories/GHSA-vp6v-whfm-rv3g"/>
        <updated>2024-12-03T18:44:01.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>In Synapse versions before 1.120.1, enabling the <code>dynamic_thumbnails</code> option or processing a specially crafted request could trigger the decoding and thumbnail generation of uncommon image formats, potentially invoking external tools like Ghostscript for processing.</p>
<p>This significantly expands the attack surface in a historically vulnerable area, presenting a risk that far outweighs the benefit, particularly since these formats are rarely used on the open web or within the Matrix ecosystem.</p>
<p>For a list of image formats, as well as decoding libraries and helper programs used, see <a href="https://pillow.readthedocs.io/en/stable/handbook/image-file-formats.html">the Pillow documentation</a>.</p>
<h3 id="patches">Patches</h3>
<p>Synapse 1.120.1 addresses the issue by restricting thumbnail generation to images in the following widely used formats: PNG, JPEG, GIF, and WebP.</p>
<h3 id="workarounds">Workarounds</h3>
<ul>
<li>Ensure any image codecs and helper programs, such as Ghostscript, are patched against security vulnerabilities.</li>
<li>Uninstall unused image decoder libraries and helper programs, such as Ghostscript, from the system environment that Synapse is running in.<ul>
<li>Depending on the installation method, there may be some decoder libraries bundled with Pillow and these cannot be easily uninstalled.</li>
<li>The official Docker container image does not include Ghostscript.</li>
</ul>
</li>
</ul>
<h3 id="references">References</h3>
<ul>
<li><a href="https://pillow.readthedocs.io/en/stable/handbook/image-file-formats.html">The Pillow documentation</a> includes a list of supported image formats and which libraries or helper programs are used to decode them.</li>
</ul>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory, please email us at <a href="mailto:security@element.io">security at element.io</a>.</p>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/element-hq/synapse/security/advisories/GHSA-vp6v-whfm-rv3g">https://github.com/element-hq/synapse/security/advisories/GHSA-vp6v-whfm-rv3g</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-53863">https://nvd.nist.gov/vuln/detail/CVE-2024-53863</a></li>
<li><a href="https://github.com/advisories/GHSA-vp6v-whfm-rv3g">https://github.com/advisories/GHSA-vp6v-whfm-rv3g</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-vp6v-whfm-rv3g</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-12-03T18:44:00.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[matrix-synapse] Synapse allows a a malformed invite to break the invitee's `/sync`]]></title>
        <id>https://github.com/advisories/GHSA-f3r3-h2mq-hx2h</id>
        <link href="https://github.com/advisories/GHSA-f3r3-h2mq-hx2h"/>
        <updated>2024-12-03T18:42:49.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>Synapse versions before 1.120.1 fail to properly validate invites received over federation. This vulnerability allows a malicious server to send a specially crafted invite that disrupts the invited user's <code>/sync</code> functionality.</p>
<h3 id="patches">Patches</h3>
<p>Synapse 1.120.1 rejects such invalid invites received over federation and restores the ability to sync for affected users.</p>
<h3 id="workarounds">Workarounds</h3>
<p>Server administrators can disable federation from untrusted servers.</p>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory, please email us at <a href="mailto:security@element.io">security at element.io</a>.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/element-hq/synapse/security/advisories/GHSA-f3r3-h2mq-hx2h">https://github.com/element-hq/synapse/security/advisories/GHSA-f3r3-h2mq-hx2h</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-52815">https://nvd.nist.gov/vuln/detail/CVE-2024-52815</a></li>
<li><a href="https://github.com/advisories/GHSA-f3r3-h2mq-hx2h">https://github.com/advisories/GHSA-f3r3-h2mq-hx2h</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-f3r3-h2mq-hx2h</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-12-03T18:42:48.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[matrix-synapse] Synapse allows unsupported content types to lead to memory exhaustion]]></title>
        <id>https://github.com/advisories/GHSA-rfq8-j7rh-8hf2</id>
        <link href="https://github.com/advisories/GHSA-rfq8-j7rh-8hf2"/>
        <updated>2024-12-03T18:40:41.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>In Synapse before 1.120.1, <code>multipart/form-data</code> requests can in certain configurations transiently increase memory consumption beyond expected levels while processing the request, which can be used to amplify denial of service attacks.</p>
<h3 id="patches">Patches</h3>
<p>Synapse 1.120.1 resolves the issue by denying requests with unsupported <code>multipart/form-data</code> content type.</p>
<h3 id="workarounds">Workarounds</h3>
<p>Limiting request sizes or blocking the <code>multipart/form-data</code> content type before the requests reach Synapse, for example in a reverse proxy, alleviates the issue. Another approach that mitigates the attack is to use a low <code>max_upload_size</code> in Synapse.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/twisted/twisted/issues/4688#issuecomment-1167705518">https://github.com/twisted/twisted/issues/4688#issuecomment-1167705518</a></li>
<li><a href="https://github.com/twisted/twisted/issues/4688#issuecomment-2385711609">https://github.com/twisted/twisted/issues/4688#issuecomment-2385711609</a></li>
</ul>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory, please email us at <a href="mailto:security@element.io">security at element.io</a>.</p>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/element-hq/synapse/security/advisories/GHSA-rfq8-j7rh-8hf2">https://github.com/element-hq/synapse/security/advisories/GHSA-rfq8-j7rh-8hf2</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-52805">https://nvd.nist.gov/vuln/detail/CVE-2024-52805</a></li>
<li><a href="https://github.com/twisted/twisted/issues/4688#issuecomment-1167705518">https://github.com/twisted/twisted/issues/4688#issuecomment-1167705518</a></li>
<li><a href="https://github.com/twisted/twisted/issues/4688#issuecomment-2385711609">https://github.com/twisted/twisted/issues/4688#issuecomment-2385711609</a></li>
<li><a href="https://github.com/advisories/GHSA-rfq8-j7rh-8hf2">https://github.com/advisories/GHSA-rfq8-j7rh-8hf2</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-rfq8-j7rh-8hf2</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-12-03T18:40:39.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[matrix-synapse] Synapse's unauthenticated writes to the media repository allow planting of problematic content]]></title>
        <id>https://github.com/advisories/GHSA-gjgr-7834-rhxr</id>
        <link href="https://github.com/advisories/GHSA-gjgr-7834-rhxr"/>
        <updated>2024-12-03T18:40:02.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>Synapse before version 1.106 allows, by design, unauthenticated remote participants to trigger a download and caching of remote media from a remote homeserver to the local media repository. Such content then also becomes available for download from the local homeserver in an unauthenticated way. The implication is that unauthenticated remote adversaries can use this functionality to plant problematic content into the media repository.</p>
<h3 id="patches">Patches</h3>
<p>Synapse 1.106 introduces a partial mitigation in the form of new endpoints which require authentication for media downloads. The unauthenticated endpoints will be frozen in a future release, closing the attack vector.</p>
<h3 id="workarounds">Workarounds</h3>
<p>Though extremely limited, server operators can use more strict rate limits based on IP address.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/matrix-org/matrix-spec-proposals/pull/3916">https://github.com/matrix-org/matrix-spec-proposals/pull/3916</a></li>
</ul>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory, please email us at <a href="mailto:security@element.io">security at element.io</a>.</p>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/element-hq/synapse/security/advisories/GHSA-gjgr-7834-rhxr">https://github.com/element-hq/synapse/security/advisories/GHSA-gjgr-7834-rhxr</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-37303">https://nvd.nist.gov/vuln/detail/CVE-2024-37303</a></li>
<li><a href="https://github.com/matrix-org/matrix-spec-proposals/pull/3916">https://github.com/matrix-org/matrix-spec-proposals/pull/3916</a></li>
<li><a href="https://github.com/advisories/GHSA-gjgr-7834-rhxr">https://github.com/advisories/GHSA-gjgr-7834-rhxr</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-gjgr-7834-rhxr</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-12-03T18:40:01.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[matrix-synapse] Synapse denial of service through media disk space consumption]]></title>
        <id>https://github.com/advisories/GHSA-4mhg-xv73-xq2x</id>
        <link href="https://github.com/advisories/GHSA-4mhg-xv73-xq2x"/>
        <updated>2024-12-03T18:39:14.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>Synapse versions before 1.106 are vulnerable to a disk fill attack, where an unauthenticated adversary can induce Synapse to download and cache large amounts of remote media. The default rate limit strategy is insufficient to mitigate this. This can lead to a denial of service, ranging from further media uploads/downloads failing to completely unavailability of the Synapse process, depending on how Synapse was deployed.</p>
<h3 id="patches">Patches</h3>
<p>Synapse 1.106 introduces a new "leaky bucket" rate limit on remote media downloads to reduce the amount of data a user can request at a time. This does not fully address the issue, but does limit an unauthenticated user's ability to request large amounts of data to be cached.</p>
<h3 id="workarounds">Workarounds</h3>
<p>Synapse deployments can currently decrease the maximum file size allowed, as well as increase request rate limits. However, this does not as effectively address the issue as a dedicated rate limit on remote media downloads.</p>
<p>Server operators may also wish to consider putting media on a dedicated disk or volume, reducing the impact of a disk fill condition.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://en.wikipedia.org/wiki/Leaky_bucket#As_a_meter">https://en.wikipedia.org/wiki/Leaky_bucket#As_a_meter</a></li>
</ul>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory, please email us at <a href="mailto:security@element.io">security at element.io</a>.</p>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/element-hq/synapse/security/advisories/GHSA-4mhg-xv73-xq2x">https://github.com/element-hq/synapse/security/advisories/GHSA-4mhg-xv73-xq2x</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-37302">https://nvd.nist.gov/vuln/detail/CVE-2024-37302</a></li>
<li><a href="https://github.com/advisories/GHSA-4mhg-xv73-xq2x">https://github.com/advisories/GHSA-4mhg-xv73-xq2x</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-4mhg-xv73-xq2x</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-12-03T18:39:12.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[python-multipart] Denial of service (DoS) via deformation `multipart/form-data` boundary]]></title>
        <id>https://github.com/advisories/GHSA-59g5-xgcq-4qw3</id>
        <link href="https://github.com/advisories/GHSA-59g5-xgcq-4qw3"/>
        <updated>2024-12-02T21:37:05.000Z</updated>
        <content type="html"><![CDATA[<h3 id="summary">Summary</h3>
<p>When parsing form data, <code>python-multipart</code> skips line breaks (CR <code>\r</code> or LF <code>\n</code>) in front of the first boundary and any tailing bytes after the last boundary. This happens one byte at a time and emits a log event each time, which may cause excessive logging for certain inputs.</p>
<p>An attacker could abuse this by sending a malicious request with lots of data before the first or after the last boundary, causing high CPU load and stalling the processing thread for a significant amount of time. In case of ASGI application, this could stall the event loop and prevent other requests from being processed, resulting in a denial of service (DoS).</p>
<h3 id="impact">Impact</h3>
<p>Applications that use <code>python-multipart</code> to parse form data (or use frameworks that do so) are affected. </p>
<h3 id="original-report">Original Report</h3>
<p>This security issue was reported by:</p>
<ul>
<li>GitHub security advisory in Starlette on October 30 by @Startr4ck</li>
<li>Email to <code>python-multipart</code> maintainer on October 3 by @mnqazi</li>
</ul>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/Kludex/python-multipart/security/advisories/GHSA-59g5-xgcq-4qw3">https://github.com/Kludex/python-multipart/security/advisories/GHSA-59g5-xgcq-4qw3</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-53981">https://nvd.nist.gov/vuln/detail/CVE-2024-53981</a></li>
<li><a href="https://github.com/Kludex/python-multipart/commit/c4fe4d3cebc08c660e57dd709af1ffa7059b3177">https://github.com/Kludex/python-multipart/commit/c4fe4d3cebc08c660e57dd709af1ffa7059b3177</a></li>
<li><a href="https://github.com/advisories/GHSA-59g5-xgcq-4qw3">https://github.com/advisories/GHSA-59g5-xgcq-4qw3</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-59g5-xgcq-4qw3</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-12-02T21:37:04.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[pyspider] pyspider Cross-site Scripting vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-x4x5-jx9j-mmv7</id>
        <link href="https://github.com/advisories/GHSA-x4x5-jx9j-mmv7"/>
        <updated>2024-12-02T21:35:15.000Z</updated>
        <content type="html"><![CDATA[<p>pyspider through 0.3.10 allows /update XSS. NOTE: This vulnerability only affects products that are no longer supported by the maintainer</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-39162">https://nvd.nist.gov/vuln/detail/CVE-2024-39162</a></li>
<li><a href="https://docs.pyspider.org/en/latest">https://docs.pyspider.org/en/latest</a></li>
<li><a href="https://github.com/binux/pyspider">https://github.com/binux/pyspider</a></li>
<li><a href="https://www.sonarsource.com/blog/basic-http-authentication-risk-uncovering-pyspider-vulnerabilities">https://www.sonarsource.com/blog/basic-http-authentication-risk-uncovering-pyspider-vulnerabilities</a></li>
<li><a href="https://github.com/advisories/GHSA-x4x5-jx9j-mmv7">https://github.com/advisories/GHSA-x4x5-jx9j-mmv7</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-x4x5-jx9j-mmv7</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-11-29T06:35:29.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[zhmcclient] Python package "zhmcclient" stores passwords in clear text in its HMC and API logs]]></title>
        <id>https://github.com/advisories/GHSA-p57h-3cmc-xpjq</id>
        <link href="https://github.com/advisories/GHSA-p57h-3cmc-xpjq"/>
        <updated>2024-12-02T18:35:22.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>The Python package "zhmcclient" writes password-like properties in clear text into its HMC and API logs in the following cases:</p>
<ul>
<li>The 'boot-ftp-password' and 'ssc-master-pw' properties when creating or updating a partition in DPM mode, in the zhmcclient API and HMC logs</li>
<li>The 'ssc-master-pw' and 'zaware-master-pw' properties when updating an LPAR in classic mode, in the zhmcclient API and HMC logs</li>
<li>The 'ssc-master-pw' and 'zaware-master-pw' properties when creating or updating an image activation profile in classic mode, in the zhmcclient API and HMC logs</li>
<li>The 'password' property when creating or updating an HMC user, in the zhmcclient API log</li>
<li>The 'bind-password' property when creating or updating an LDAP server definition, in the zhmcclient API and HMC logs</li>
</ul>
<p>This issue affects only users of the zhmcclient package that have enabled the Python loggers named "zhmcclient.api" (for the API log) or "zhmcclient.hmc" (for the HMC log) and that use the functions listed above.</p>
<h3 id="patches">Patches</h3>
<p>Has been fixed in zhmcclient version 1.18.1</p>
<h3 id="workarounds">Workarounds</h3>
<p>Not applicable, since fix is available.</p>
<h3 id="references">References</h3>
<p>None</p>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/zhmcclient/python-zhmcclient/security/advisories/GHSA-p57h-3cmc-xpjq">https://github.com/zhmcclient/python-zhmcclient/security/advisories/GHSA-p57h-3cmc-xpjq</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-53865">https://nvd.nist.gov/vuln/detail/CVE-2024-53865</a></li>
<li><a href="https://github.com/zhmcclient/python-zhmcclient/commit/ad32781e782d0f604c6da4680fce48e4cc1f4433">https://github.com/zhmcclient/python-zhmcclient/commit/ad32781e782d0f604c6da4680fce48e4cc1f4433</a></li>
<li><a href="https://github.com/advisories/GHSA-p57h-3cmc-xpjq">https://github.com/advisories/GHSA-p57h-3cmc-xpjq</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-p57h-3cmc-xpjq</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-12-02T18:35:18.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[PyJWT] PyJWT Issuer field partial matches allowed]]></title>
        <id>https://github.com/advisories/GHSA-75c5-xw7c-p5pm</id>
        <link href="https://github.com/advisories/GHSA-75c5-xw7c-p5pm"/>
        <updated>2024-12-02T18:34:12.000Z</updated>
        <content type="html"><![CDATA[<h3 id="summary">Summary</h3>
<p>The wrong string if check is run for <code>iss</code> checking, resulting in <code>"acb"</code> being accepted for <code>"_abc_"</code>.</p>
<h3 id="details">Details</h3>
<p>This is a bug introduced in version <a href="https://github.com/jpadilla/pyjwt/commit/1570e708672aa9036bc772476beae8bfa48f4131#diff-6893ad4a1c5a36b8af3028db8c8bc3b62418149843fc382faf901eaab008e380R366">2.10.0</a>: checking the "iss" claim
changed from <code>isinstance(issuer, list)</code> to <code>isinstance(issuer, Sequence)</code>.</p>
<pre><code class="language-diff">-        if isinstance(issuer, list):
+        if isinstance(issuer, Sequence):
            if payload["iss"] not in issuer:
                raise InvalidIssuerError("Invalid issuer")
        else:
</code></pre>
<p>Since str is a Sequnce, but not a list, <code>in</code> is also used for string
comparison. This results in <code>if "abc" not in "__abcd__":</code> being
checked instead of <code>if "abc" != "__abc__":</code>.</p>
<h3 id="poc">PoC</h3>
<p>Check out the unit tests added here: <a href="https://github.com/jpadilla/pyjwt-ghsa-75c5-xw7c-p5pm">https://github.com/jpadilla/pyjwt-ghsa-75c5-xw7c-p5pm</a></p>
<pre><code class="language-python">        issuer = "urn:expected"

        payload = {"iss": "urn:"}

        token = jwt.encode(payload, "secret")

        # decode() succeeds, even though `"urn:" != "urn:expected". No exception is raised.
        with pytest.raises(InvalidIssuerError):
            jwt.decode(token, "secret", issuer=issuer, algorithms=["HS256"])
</code></pre>
<h3 id="impact">Impact</h3>
<p>I would say the real world impact is not that high, seeing as the signature still has to match. We should still fix it.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/jpadilla/pyjwt/security/advisories/GHSA-75c5-xw7c-p5pm">https://github.com/jpadilla/pyjwt/security/advisories/GHSA-75c5-xw7c-p5pm</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-53861">https://nvd.nist.gov/vuln/detail/CVE-2024-53861</a></li>
<li><a href="https://github.com/jpadilla/pyjwt/commit/1570e708672aa9036bc772476beae8bfa48f4131#diff-6893ad4a1c5a36b8af3028db8c8bc3b62418149843fc382faf901eaab008e380R366">https://github.com/jpadilla/pyjwt/commit/1570e708672aa9036bc772476beae8bfa48f4131#diff-6893ad4a1c5a36b8af3028db8c8bc3b62418149843fc382faf901eaab008e380R366</a></li>
<li><a href="https://github.com/jpadilla/pyjwt/commit/33022c25525c1020869c71ce2a4109e44ae4ced1">https://github.com/jpadilla/pyjwt/commit/33022c25525c1020869c71ce2a4109e44ae4ced1</a></li>
<li><a href="https://github.com/advisories/GHSA-75c5-xw7c-p5pm">https://github.com/advisories/GHSA-75c5-xw7c-p5pm</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-75c5-xw7c-p5pm</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2024-12-02T18:34:11.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[check-jsonschema] check-jsonschema default caching for remote schemas allows for cache confusion]]></title>
        <id>https://github.com/advisories/GHSA-q6mv-284r-mp36</id>
        <link href="https://github.com/advisories/GHSA-q6mv-284r-mp36"/>
        <updated>2024-12-02T17:29:06.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>The default cache strategy uses the basename of a remote schema as the name of the file in the cache, e.g. <code>https://example.org/schema.json</code> will be stored as <code>schema.json</code>. This naming allows for conflicts. If an attacker can get a user to run <code>check-jsonschema</code> against a malicious schema URL, e.g., <code>https://example.evil.org/schema.json</code>, they can insert their own schema into the cache and it will be picked up and used instead of the appropriate schema.</p>
<p>Such a cache confusion attack could be used to allow data to pass validation which should have been rejected.</p>
<h3 id="patches">Patches</h3>
<p>A patch is in progress but has not yet been released.</p>
<h3 id="workarounds">Workarounds</h3>
<ul>
<li>Users can use <code>--no-cache</code> to disable caching.</li>
<li>Users can use <code>--cache-filename</code> to select filenames for use in the cache, or to ensure that other usages do not overwrite the cached schema. (Note: this flag is being deprecated as part of the remediation effort.)</li>
<li>Users can explicitly download the schema before use as a local file, as in <code>curl -LOs https://example.org/schema.json; check-jsonschema --schemafile ./schema.json</code></li>
</ul>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/python-jsonschema/check-jsonschema/security/advisories/GHSA-q6mv-284r-mp36">https://github.com/python-jsonschema/check-jsonschema/security/advisories/GHSA-q6mv-284r-mp36</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-53848">https://nvd.nist.gov/vuln/detail/CVE-2024-53848</a></li>
<li><a href="https://github.com/python-jsonschema/check-jsonschema/commit/c52714b85e6725b1b24516fbdedacb333b939152">https://github.com/python-jsonschema/check-jsonschema/commit/c52714b85e6725b1b24516fbdedacb333b939152</a></li>
<li><a href="https://github.com/advisories/GHSA-q6mv-284r-mp36">https://github.com/advisories/GHSA-q6mv-284r-mp36</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-q6mv-284r-mp36</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-12-02T17:29:05.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[ethyca-fides] Password Policy Bypass Vulnerability in Fides Webserver User Accept Invite API]]></title>
        <id>https://github.com/advisories/GHSA-v7vm-rhmg-8j2r</id>
        <link href="https://github.com/advisories/GHSA-v7vm-rhmg-8j2r"/>
        <updated>2024-11-26T21:43:30.000Z</updated>
        <content type="html"><![CDATA[<h3 id="summary">Summary</h3>
<p>The user invite acceptance API endpoint lacks server-side password policy enforcement, allowing users to set arbitrarily weak passwords by bypassing client-side validation. While the UI enforces password complexity requirements, direct API calls can circumvent these checks, enabling the creation of accounts with passwords as short as a single character.</p>
<h3 id="details">Details</h3>
<p>When an email messaging provider is enabled and a new user account is created in the system, an invite email containing a special link is sent to the new user's email address. This link directs the new user to a page where they can set their initial password. While the user interface implements password complexity checks, these validations are only performed client-side. The underlying <code>/api/v1/user/accept-invite</code> API endpoint does not implement the same password policy validations.</p>
<h3 id="impact">Impact</h3>
<p>This vulnerability allows an invited user to set an extremely weak password for their own account during the initial account setup process. Therefore that specific user's account can be compromised easily by an attacker guessing or brute forcing the password.</p>
<h3 id="patches">Patches</h3>
<p>The vulnerability has been patched in Fides version <code>2.50.0</code>. Users are advised to upgrade to this version or later to secure their systems against this threat.</p>
<h3 id="workarounds">Workarounds</h3>
<p>There are no workarounds.</p>
<h3 id="severity">Severity</h3>
<p>This vulnerability has been assigned a severity of LOW.</p>
<p>Using CVSS v3.1 it could be scored as <code>CVSS:3.1/AV:N/AC:L/PR:L/UI:R/S:U/C:H/I:N/A:N</code> (5.7 Medium/Moderate), but the likelihood of a user bypassing client-side password complexity rules to set their own password is very low.  </p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/ethyca/fides/security/advisories/GHSA-v7vm-rhmg-8j2r">https://github.com/ethyca/fides/security/advisories/GHSA-v7vm-rhmg-8j2r</a></li>
<li><a href="https://github.com/ethyca/fides/commit/ce664da46ab7f86d29583ebc34f2ff776f0aa6c2">https://github.com/ethyca/fides/commit/ce664da46ab7f86d29583ebc34f2ff776f0aa6c2</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-52008">https://nvd.nist.gov/vuln/detail/CVE-2024-52008</a></li>
<li><a href="https://github.com/advisories/GHSA-v7vm-rhmg-8j2r">https://github.com/advisories/GHSA-v7vm-rhmg-8j2r</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-v7vm-rhmg-8j2r</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2024-11-26T16:36:52.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[aiocpa] aiocpa contains credential harvesting code]]></title>
        <id>https://github.com/advisories/GHSA-486g-47cc-8wxf</id>
        <link href="https://github.com/advisories/GHSA-486g-47cc-8wxf"/>
        <updated>2024-11-25T22:08:58.000Z</updated>
        <content type="html"><![CDATA[<p>aiocpa is a user-facing library for generating color gradients of text. Version 0.1.13 introduced obfuscated, malicious code targeting Crypto Pay users, forwarding client credentials to a remote Telegram bot. All versions have been removed from PyPI.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://blog.pypi.org/posts/2024-11-25-aiocpa-attack-analysis">https://blog.pypi.org/posts/2024-11-25-aiocpa-attack-analysis</a></li>
<li><a href="https://github.com/pypa/advisory-database/tree/main/vulns/aiocpa/PYSEC-2024-152.yaml">https://github.com/pypa/advisory-database/tree/main/vulns/aiocpa/PYSEC-2024-152.yaml</a></li>
<li><a href="https://inspector.pypi.io/project/aiocpa/0.1.13/packages/ab/98/7343281068a2c39086d0b877219668a487508197f46e89b3f41046a4a8ba/aiocpa-0.1.13.tar.gz/aiocpa-0.1.13/cryptopay/utils/sync.py#line.44">https://inspector.pypi.io/project/aiocpa/0.1.13/packages/ab/98/7343281068a2c39086d0b877219668a487508197f46e89b3f41046a4a8ba/aiocpa-0.1.13.tar.gz/aiocpa-0.1.13/cryptopay/utils/sync.py#line.44</a></li>
<li><a href="https://github.com/advisories/GHSA-486g-47cc-8wxf">https://github.com/advisories/GHSA-486g-47cc-8wxf</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-486g-47cc-8wxf</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-11-25T22:08:57.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[libre-chat] libre-chat Path Traversal vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-3864-rp2m-2qfj</id>
        <link href="https://github.com/advisories/GHSA-3864-rp2m-2qfj"/>
        <updated>2024-11-27T19:32:39.000Z</updated>
        <content type="html"><![CDATA[<p>An issue in the upload_documents method of libre-chat v0.0.6 allows attackers to execute a path traversal via supplying a crafted filename in an uploaded file.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-52787">https://nvd.nist.gov/vuln/detail/CVE-2024-52787</a></li>
<li><a href="https://github.com/vemonet/libre-chat/issues/10">https://github.com/vemonet/libre-chat/issues/10</a></li>
<li><a href="https://github.com/vemonet/libre-chat/pull/9">https://github.com/vemonet/libre-chat/pull/9</a></li>
<li><a href="https://github.com/vemonet/libre-chat/commit/dbb8e3400e5258112179783d74c9cc54310cb72b">https://github.com/vemonet/libre-chat/commit/dbb8e3400e5258112179783d74c9cc54310cb72b</a></li>
<li><a href="https://gist.github.com/jxfzzzt/276a6e8cfbc54d2c2711bb51d8d3dff3">https://gist.github.com/jxfzzzt/276a6e8cfbc54d2c2711bb51d8d3dff3</a></li>
<li><a href="https://github.com/advisories/GHSA-3864-rp2m-2qfj">https://github.com/advisories/GHSA-3864-rp2m-2qfj</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-3864-rp2m-2qfj</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-11-25T18:33:26.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[mlflow] MLflow's excessive directory permissions allow local privilege escalation]]></title>
        <id>https://github.com/advisories/GHSA-qpgc-w4mg-6v92</id>
        <link href="https://github.com/advisories/GHSA-qpgc-w4mg-6v92"/>
        <updated>2024-11-25T19:41:57.000Z</updated>
        <content type="html"><![CDATA[<p>Excessive directory permissions in MLflow leads to local privilege escalation when using spark_udf. This behavior can be exploited by a local attacker to gain elevated permissions by using a ToCToU attack. The issue is only relevant when the spark_udf() MLflow API is called.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-27134">https://nvd.nist.gov/vuln/detail/CVE-2024-27134</a></li>
<li><a href="https://github.com/mlflow/mlflow/pull/10874">https://github.com/mlflow/mlflow/pull/10874</a></li>
<li><a href="https://github.com/mlflow/mlflow/commit/0b1d995d66a678153e01ed3040f3f4dfc16a0d6b">https://github.com/mlflow/mlflow/commit/0b1d995d66a678153e01ed3040f3f4dfc16a0d6b</a></li>
<li><a href="https://github.com/advisories/GHSA-qpgc-w4mg-6v92">https://github.com/advisories/GHSA-qpgc-w4mg-6v92</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-qpgc-w4mg-6v92</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-11-25T18:33:26.000Z</published>
    </entry>
</feed>