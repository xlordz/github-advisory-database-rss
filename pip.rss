<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://azu.github.io/github-advisory-database-rss/pip.rss</id>
    <title>Security Advisory for Python packages hosted at PyPI.org</title>
    <updated>2025-01-14T16:01:22.106Z</updated>
    <generator>github-advisory-database-rss</generator>
    <link rel="alternate" href="https://github.com/advisories?query=type%3Areviewed+ecosystem%3Apip"/>
    <subtitle>Security Advisory for Python packages hosted at PyPI.org on GitHub</subtitle>
    <rights>github-advisory-database-rss</rights>
    <category term="CRITICAL"/>
    <category term="HIGH"/>
    <category term="MODERATE"/>
    <category term="LOW"/>
    <entry>
        <title type="html"><![CDATA[[rasa] Rasa Allows Remote Code Execution via Remote Model Loading]]></title>
        <id>https://github.com/advisories/GHSA-cpv4-ggrr-7j9v</id>
        <link href="https://github.com/advisories/GHSA-cpv4-ggrr-7j9v"/>
        <updated>2025-01-14T16:00:22.000Z</updated>
        <content type="html"><![CDATA[<h2 id="vulnerability">Vulnerability</h2>
<p>A vulnerability has been identified in Rasa Pro and Rasa Open Source that enables an attacker who has the ability to load a maliciously crafted model remotely into a Rasa instance to achieve Remote Code Execution.</p>
<p>The prerequisites for this are:</p>
<ul>
<li>The HTTP API must be enabled on the Rasa instance eg with <code>--enable-api</code>. This is not the default configuration.</li>
<li>For unauthenticated RCE to be exploitable, the user must not have configured any authentication or other security controls recommended in our documentation.</li>
<li>For authenticated RCE, the attacker must posses a valid authentication token or JWT to interact with the Rasa API.</li>
</ul>
<h2 id="fix">Fix</h2>
<p>We encourage you to upgrade to a version of Rasa that includes a fix. These are:</p>
<ul>
<li>Rasa Pro 3.8.18, 3.9.16, 3.10.12</li>
<li>Rasa Open Source 3.6.21</li>
</ul>
<p>Once you have upgraded your Rasa Pro or Open Source installation, you will need to retrain your model using the fixed version of Rasa Pro or Open Source. If you have a custom component that inherits from one of the components listed below and modified the persist or load method, make sure to update your code. Please contact us in case you encounter any problems.</p>
<p>Affected components:</p>
<ul>
<li><code>CountVectorFeaturizer</code></li>
<li><code>LexicalSyntacticFeaturizer</code></li>
<li><code>LogisticRegressionClassifier</code></li>
<li><code>SklearnIntentClassifier</code></li>
<li><code>DIETClassifier</code></li>
<li><code>CRFEntityExtractor</code></li>
<li><code>TrackerFeaturizer</code></li>
<li><code>TEDPolicy</code></li>
<li><code>UnexpectedIntentTEDPolicy</code></li>
</ul>
<p>If you are unable to upgrade immediately, please follow our mitigation advice below.</p>
<h2 id="mitigation-advice">Mitigation Advice</h2>
<ul>
<li><p>The unauthenticated RCE can be mitigated by ensuring that you enable authentication for the Rasa HTTP API if this is enabled. This means that in addition to passing <code>--enable-api</code> to Rasa, you should also pass an authentication configuration as described in our documentation <a href="https://rasa.com/docs/rasa-pro/production/rest-api/#enabling-the-rest-api">here</a>. </p>
</li>
<li><p>The authenticated RCE can be mitigated by:</p>
<ul>
<li>Ensuring that you only load models from trusted sources such as your own CI pipelines. You can check file hashes for model archives to confirm that a model has not been tampered with between training and use.</li>
<li>Confirming that you have sufficient access controls and utilize the principle of least privilege to control who in your organization has the ability to interact with the Rasa API even with authentication enabled.</li>
</ul>
</li>
</ul>
<h2 id="future-releases">Future Releases</h2>
<p>As an additional security step, a future release of Rasa Pro will remove the ability to enable the API without any authentication method enabled.</p>
<h2 id="credit">Credit</h2>
<p>Rasa would like to thank Julian Scheid from Deutsche Telekom Security GmbH for responsible disclosure of this vulnerability.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/RasaHQ/rasa-pro-security-advisories/security/advisories/GHSA-cpv4-ggrr-7j9v">https://github.com/RasaHQ/rasa-pro-security-advisories/security/advisories/GHSA-cpv4-ggrr-7j9v</a></li>
<li><a href="https://github.com/RasaHQ/rasa/commit/2bb1d779d4f4acaf70b6dfa35dd1899dccbb1ae6">https://github.com/RasaHQ/rasa/commit/2bb1d779d4f4acaf70b6dfa35dd1899dccbb1ae6</a></li>
<li><a href="https://github.com/advisories/GHSA-cpv4-ggrr-7j9v">https://github.com/advisories/GHSA-cpv4-ggrr-7j9v</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-cpv4-ggrr-7j9v</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2025-01-14T16:00:21.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[rasa-pro] Rasa Allows Remote Code Execution via Remote Model Loading]]></title>
        <id>https://github.com/advisories/GHSA-cpv4-ggrr-7j9v</id>
        <link href="https://github.com/advisories/GHSA-cpv4-ggrr-7j9v"/>
        <updated>2025-01-14T16:00:22.000Z</updated>
        <content type="html"><![CDATA[<h2 id="vulnerability">Vulnerability</h2>
<p>A vulnerability has been identified in Rasa Pro and Rasa Open Source that enables an attacker who has the ability to load a maliciously crafted model remotely into a Rasa instance to achieve Remote Code Execution.</p>
<p>The prerequisites for this are:</p>
<ul>
<li>The HTTP API must be enabled on the Rasa instance eg with <code>--enable-api</code>. This is not the default configuration.</li>
<li>For unauthenticated RCE to be exploitable, the user must not have configured any authentication or other security controls recommended in our documentation.</li>
<li>For authenticated RCE, the attacker must posses a valid authentication token or JWT to interact with the Rasa API.</li>
</ul>
<h2 id="fix">Fix</h2>
<p>We encourage you to upgrade to a version of Rasa that includes a fix. These are:</p>
<ul>
<li>Rasa Pro 3.8.18, 3.9.16, 3.10.12</li>
<li>Rasa Open Source 3.6.21</li>
</ul>
<p>Once you have upgraded your Rasa Pro or Open Source installation, you will need to retrain your model using the fixed version of Rasa Pro or Open Source. If you have a custom component that inherits from one of the components listed below and modified the persist or load method, make sure to update your code. Please contact us in case you encounter any problems.</p>
<p>Affected components:</p>
<ul>
<li><code>CountVectorFeaturizer</code></li>
<li><code>LexicalSyntacticFeaturizer</code></li>
<li><code>LogisticRegressionClassifier</code></li>
<li><code>SklearnIntentClassifier</code></li>
<li><code>DIETClassifier</code></li>
<li><code>CRFEntityExtractor</code></li>
<li><code>TrackerFeaturizer</code></li>
<li><code>TEDPolicy</code></li>
<li><code>UnexpectedIntentTEDPolicy</code></li>
</ul>
<p>If you are unable to upgrade immediately, please follow our mitigation advice below.</p>
<h2 id="mitigation-advice">Mitigation Advice</h2>
<ul>
<li><p>The unauthenticated RCE can be mitigated by ensuring that you enable authentication for the Rasa HTTP API if this is enabled. This means that in addition to passing <code>--enable-api</code> to Rasa, you should also pass an authentication configuration as described in our documentation <a href="https://rasa.com/docs/rasa-pro/production/rest-api/#enabling-the-rest-api">here</a>. </p>
</li>
<li><p>The authenticated RCE can be mitigated by:</p>
<ul>
<li>Ensuring that you only load models from trusted sources such as your own CI pipelines. You can check file hashes for model archives to confirm that a model has not been tampered with between training and use.</li>
<li>Confirming that you have sufficient access controls and utilize the principle of least privilege to control who in your organization has the ability to interact with the Rasa API even with authentication enabled.</li>
</ul>
</li>
</ul>
<h2 id="future-releases">Future Releases</h2>
<p>As an additional security step, a future release of Rasa Pro will remove the ability to enable the API without any authentication method enabled.</p>
<h2 id="credit">Credit</h2>
<p>Rasa would like to thank Julian Scheid from Deutsche Telekom Security GmbH for responsible disclosure of this vulnerability.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/RasaHQ/rasa-pro-security-advisories/security/advisories/GHSA-cpv4-ggrr-7j9v">https://github.com/RasaHQ/rasa-pro-security-advisories/security/advisories/GHSA-cpv4-ggrr-7j9v</a></li>
<li><a href="https://github.com/RasaHQ/rasa/commit/2bb1d779d4f4acaf70b6dfa35dd1899dccbb1ae6">https://github.com/RasaHQ/rasa/commit/2bb1d779d4f4acaf70b6dfa35dd1899dccbb1ae6</a></li>
<li><a href="https://github.com/advisories/GHSA-cpv4-ggrr-7j9v">https://github.com/advisories/GHSA-cpv4-ggrr-7j9v</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-cpv4-ggrr-7j9v</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2025-01-14T16:00:21.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[rasa-pro] Rasa Allows Remote Code Execution via Remote Model Loading]]></title>
        <id>https://github.com/advisories/GHSA-cpv4-ggrr-7j9v</id>
        <link href="https://github.com/advisories/GHSA-cpv4-ggrr-7j9v"/>
        <updated>2025-01-14T16:00:22.000Z</updated>
        <content type="html"><![CDATA[<h2 id="vulnerability">Vulnerability</h2>
<p>A vulnerability has been identified in Rasa Pro and Rasa Open Source that enables an attacker who has the ability to load a maliciously crafted model remotely into a Rasa instance to achieve Remote Code Execution.</p>
<p>The prerequisites for this are:</p>
<ul>
<li>The HTTP API must be enabled on the Rasa instance eg with <code>--enable-api</code>. This is not the default configuration.</li>
<li>For unauthenticated RCE to be exploitable, the user must not have configured any authentication or other security controls recommended in our documentation.</li>
<li>For authenticated RCE, the attacker must posses a valid authentication token or JWT to interact with the Rasa API.</li>
</ul>
<h2 id="fix">Fix</h2>
<p>We encourage you to upgrade to a version of Rasa that includes a fix. These are:</p>
<ul>
<li>Rasa Pro 3.8.18, 3.9.16, 3.10.12</li>
<li>Rasa Open Source 3.6.21</li>
</ul>
<p>Once you have upgraded your Rasa Pro or Open Source installation, you will need to retrain your model using the fixed version of Rasa Pro or Open Source. If you have a custom component that inherits from one of the components listed below and modified the persist or load method, make sure to update your code. Please contact us in case you encounter any problems.</p>
<p>Affected components:</p>
<ul>
<li><code>CountVectorFeaturizer</code></li>
<li><code>LexicalSyntacticFeaturizer</code></li>
<li><code>LogisticRegressionClassifier</code></li>
<li><code>SklearnIntentClassifier</code></li>
<li><code>DIETClassifier</code></li>
<li><code>CRFEntityExtractor</code></li>
<li><code>TrackerFeaturizer</code></li>
<li><code>TEDPolicy</code></li>
<li><code>UnexpectedIntentTEDPolicy</code></li>
</ul>
<p>If you are unable to upgrade immediately, please follow our mitigation advice below.</p>
<h2 id="mitigation-advice">Mitigation Advice</h2>
<ul>
<li><p>The unauthenticated RCE can be mitigated by ensuring that you enable authentication for the Rasa HTTP API if this is enabled. This means that in addition to passing <code>--enable-api</code> to Rasa, you should also pass an authentication configuration as described in our documentation <a href="https://rasa.com/docs/rasa-pro/production/rest-api/#enabling-the-rest-api">here</a>. </p>
</li>
<li><p>The authenticated RCE can be mitigated by:</p>
<ul>
<li>Ensuring that you only load models from trusted sources such as your own CI pipelines. You can check file hashes for model archives to confirm that a model has not been tampered with between training and use.</li>
<li>Confirming that you have sufficient access controls and utilize the principle of least privilege to control who in your organization has the ability to interact with the Rasa API even with authentication enabled.</li>
</ul>
</li>
</ul>
<h2 id="future-releases">Future Releases</h2>
<p>As an additional security step, a future release of Rasa Pro will remove the ability to enable the API without any authentication method enabled.</p>
<h2 id="credit">Credit</h2>
<p>Rasa would like to thank Julian Scheid from Deutsche Telekom Security GmbH for responsible disclosure of this vulnerability.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/RasaHQ/rasa-pro-security-advisories/security/advisories/GHSA-cpv4-ggrr-7j9v">https://github.com/RasaHQ/rasa-pro-security-advisories/security/advisories/GHSA-cpv4-ggrr-7j9v</a></li>
<li><a href="https://github.com/RasaHQ/rasa/commit/2bb1d779d4f4acaf70b6dfa35dd1899dccbb1ae6">https://github.com/RasaHQ/rasa/commit/2bb1d779d4f4acaf70b6dfa35dd1899dccbb1ae6</a></li>
<li><a href="https://github.com/advisories/GHSA-cpv4-ggrr-7j9v">https://github.com/advisories/GHSA-cpv4-ggrr-7j9v</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-cpv4-ggrr-7j9v</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2025-01-14T16:00:21.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[rasa-pro] Rasa Allows Remote Code Execution via Remote Model Loading]]></title>
        <id>https://github.com/advisories/GHSA-cpv4-ggrr-7j9v</id>
        <link href="https://github.com/advisories/GHSA-cpv4-ggrr-7j9v"/>
        <updated>2025-01-14T16:00:22.000Z</updated>
        <content type="html"><![CDATA[<h2 id="vulnerability">Vulnerability</h2>
<p>A vulnerability has been identified in Rasa Pro and Rasa Open Source that enables an attacker who has the ability to load a maliciously crafted model remotely into a Rasa instance to achieve Remote Code Execution.</p>
<p>The prerequisites for this are:</p>
<ul>
<li>The HTTP API must be enabled on the Rasa instance eg with <code>--enable-api</code>. This is not the default configuration.</li>
<li>For unauthenticated RCE to be exploitable, the user must not have configured any authentication or other security controls recommended in our documentation.</li>
<li>For authenticated RCE, the attacker must posses a valid authentication token or JWT to interact with the Rasa API.</li>
</ul>
<h2 id="fix">Fix</h2>
<p>We encourage you to upgrade to a version of Rasa that includes a fix. These are:</p>
<ul>
<li>Rasa Pro 3.8.18, 3.9.16, 3.10.12</li>
<li>Rasa Open Source 3.6.21</li>
</ul>
<p>Once you have upgraded your Rasa Pro or Open Source installation, you will need to retrain your model using the fixed version of Rasa Pro or Open Source. If you have a custom component that inherits from one of the components listed below and modified the persist or load method, make sure to update your code. Please contact us in case you encounter any problems.</p>
<p>Affected components:</p>
<ul>
<li><code>CountVectorFeaturizer</code></li>
<li><code>LexicalSyntacticFeaturizer</code></li>
<li><code>LogisticRegressionClassifier</code></li>
<li><code>SklearnIntentClassifier</code></li>
<li><code>DIETClassifier</code></li>
<li><code>CRFEntityExtractor</code></li>
<li><code>TrackerFeaturizer</code></li>
<li><code>TEDPolicy</code></li>
<li><code>UnexpectedIntentTEDPolicy</code></li>
</ul>
<p>If you are unable to upgrade immediately, please follow our mitigation advice below.</p>
<h2 id="mitigation-advice">Mitigation Advice</h2>
<ul>
<li><p>The unauthenticated RCE can be mitigated by ensuring that you enable authentication for the Rasa HTTP API if this is enabled. This means that in addition to passing <code>--enable-api</code> to Rasa, you should also pass an authentication configuration as described in our documentation <a href="https://rasa.com/docs/rasa-pro/production/rest-api/#enabling-the-rest-api">here</a>. </p>
</li>
<li><p>The authenticated RCE can be mitigated by:</p>
<ul>
<li>Ensuring that you only load models from trusted sources such as your own CI pipelines. You can check file hashes for model archives to confirm that a model has not been tampered with between training and use.</li>
<li>Confirming that you have sufficient access controls and utilize the principle of least privilege to control who in your organization has the ability to interact with the Rasa API even with authentication enabled.</li>
</ul>
</li>
</ul>
<h2 id="future-releases">Future Releases</h2>
<p>As an additional security step, a future release of Rasa Pro will remove the ability to enable the API without any authentication method enabled.</p>
<h2 id="credit">Credit</h2>
<p>Rasa would like to thank Julian Scheid from Deutsche Telekom Security GmbH for responsible disclosure of this vulnerability.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/RasaHQ/rasa-pro-security-advisories/security/advisories/GHSA-cpv4-ggrr-7j9v">https://github.com/RasaHQ/rasa-pro-security-advisories/security/advisories/GHSA-cpv4-ggrr-7j9v</a></li>
<li><a href="https://github.com/RasaHQ/rasa/commit/2bb1d779d4f4acaf70b6dfa35dd1899dccbb1ae6">https://github.com/RasaHQ/rasa/commit/2bb1d779d4f4acaf70b6dfa35dd1899dccbb1ae6</a></li>
<li><a href="https://github.com/advisories/GHSA-cpv4-ggrr-7j9v">https://github.com/advisories/GHSA-cpv4-ggrr-7j9v</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-cpv4-ggrr-7j9v</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2025-01-14T16:00:21.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[django] Django denial-of-service in django.utils.html.strip_tags()]]></title>
        <id>https://github.com/advisories/GHSA-8498-2h75-472j</id>
        <link href="https://github.com/advisories/GHSA-8498-2h75-472j"/>
        <updated>2025-01-14T15:59:59.000Z</updated>
        <content type="html"><![CDATA[<p>An issue was discovered in Django 5.1 before 5.1.4, 5.0 before 5.0.10, and 4.2 before 4.2.17. The strip_tags() method and striptags template filter are subject to a potential denial-of-service attack via certain inputs containing large sequences of nested incomplete HTML entities.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-53907">https://nvd.nist.gov/vuln/detail/CVE-2024-53907</a></li>
<li><a href="https://docs.djangoproject.com/en/dev/releases/security">https://docs.djangoproject.com/en/dev/releases/security</a></li>
<li><a href="https://groups.google.com/g/django-announce">https://groups.google.com/g/django-announce</a></li>
<li><a href="https://www.openwall.com/lists/oss-security/2024/12/04/3">https://www.openwall.com/lists/oss-security/2024/12/04/3</a></li>
<li><a href="https://www.djangoproject.com/weblog/2024/dec/04/security-releases">https://www.djangoproject.com/weblog/2024/dec/04/security-releases</a></li>
<li><a href="https://lists.debian.org/debian-lts-announce/2024/12/msg00028.html">https://lists.debian.org/debian-lts-announce/2024/12/msg00028.html</a></li>
<li><a href="https://github.com/pypa/advisory-database/tree/main/vulns/django/PYSEC-2024-156.yaml">https://github.com/pypa/advisory-database/tree/main/vulns/django/PYSEC-2024-156.yaml</a></li>
<li><a href="https://github.com/advisories/GHSA-8498-2h75-472j">https://github.com/advisories/GHSA-8498-2h75-472j</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-8498-2h75-472j</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-12-06T12:30:47.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[django] Django denial-of-service in django.utils.html.strip_tags()]]></title>
        <id>https://github.com/advisories/GHSA-8498-2h75-472j</id>
        <link href="https://github.com/advisories/GHSA-8498-2h75-472j"/>
        <updated>2025-01-14T15:59:59.000Z</updated>
        <content type="html"><![CDATA[<p>An issue was discovered in Django 5.1 before 5.1.4, 5.0 before 5.0.10, and 4.2 before 4.2.17. The strip_tags() method and striptags template filter are subject to a potential denial-of-service attack via certain inputs containing large sequences of nested incomplete HTML entities.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-53907">https://nvd.nist.gov/vuln/detail/CVE-2024-53907</a></li>
<li><a href="https://docs.djangoproject.com/en/dev/releases/security">https://docs.djangoproject.com/en/dev/releases/security</a></li>
<li><a href="https://groups.google.com/g/django-announce">https://groups.google.com/g/django-announce</a></li>
<li><a href="https://www.openwall.com/lists/oss-security/2024/12/04/3">https://www.openwall.com/lists/oss-security/2024/12/04/3</a></li>
<li><a href="https://www.djangoproject.com/weblog/2024/dec/04/security-releases">https://www.djangoproject.com/weblog/2024/dec/04/security-releases</a></li>
<li><a href="https://lists.debian.org/debian-lts-announce/2024/12/msg00028.html">https://lists.debian.org/debian-lts-announce/2024/12/msg00028.html</a></li>
<li><a href="https://github.com/pypa/advisory-database/tree/main/vulns/django/PYSEC-2024-156.yaml">https://github.com/pypa/advisory-database/tree/main/vulns/django/PYSEC-2024-156.yaml</a></li>
<li><a href="https://github.com/advisories/GHSA-8498-2h75-472j">https://github.com/advisories/GHSA-8498-2h75-472j</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-8498-2h75-472j</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-12-06T12:30:47.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[django] Django denial-of-service in django.utils.html.strip_tags()]]></title>
        <id>https://github.com/advisories/GHSA-8498-2h75-472j</id>
        <link href="https://github.com/advisories/GHSA-8498-2h75-472j"/>
        <updated>2025-01-14T15:59:59.000Z</updated>
        <content type="html"><![CDATA[<p>An issue was discovered in Django 5.1 before 5.1.4, 5.0 before 5.0.10, and 4.2 before 4.2.17. The strip_tags() method and striptags template filter are subject to a potential denial-of-service attack via certain inputs containing large sequences of nested incomplete HTML entities.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-53907">https://nvd.nist.gov/vuln/detail/CVE-2024-53907</a></li>
<li><a href="https://docs.djangoproject.com/en/dev/releases/security">https://docs.djangoproject.com/en/dev/releases/security</a></li>
<li><a href="https://groups.google.com/g/django-announce">https://groups.google.com/g/django-announce</a></li>
<li><a href="https://www.openwall.com/lists/oss-security/2024/12/04/3">https://www.openwall.com/lists/oss-security/2024/12/04/3</a></li>
<li><a href="https://www.djangoproject.com/weblog/2024/dec/04/security-releases">https://www.djangoproject.com/weblog/2024/dec/04/security-releases</a></li>
<li><a href="https://lists.debian.org/debian-lts-announce/2024/12/msg00028.html">https://lists.debian.org/debian-lts-announce/2024/12/msg00028.html</a></li>
<li><a href="https://github.com/pypa/advisory-database/tree/main/vulns/django/PYSEC-2024-156.yaml">https://github.com/pypa/advisory-database/tree/main/vulns/django/PYSEC-2024-156.yaml</a></li>
<li><a href="https://github.com/advisories/GHSA-8498-2h75-472j">https://github.com/advisories/GHSA-8498-2h75-472j</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-8498-2h75-472j</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-12-06T12:30:47.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[virtualenv] virtualenv allows command injection through activation scripts for a virtual environment]]></title>
        <id>https://github.com/advisories/GHSA-rqc4-2hc7-8c8v</id>
        <link href="https://github.com/advisories/GHSA-rqc4-2hc7-8c8v"/>
        <updated>2025-01-13T17:01:52.000Z</updated>
        <content type="html"><![CDATA[<p>virtualenv before 20.26.6 allows command injection through the activation scripts for a virtual environment. Magic template strings are not quoted correctly when replacing. NOTE: this is not the same as CVE-2024-9287.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-53899">https://nvd.nist.gov/vuln/detail/CVE-2024-53899</a></li>
<li><a href="https://github.com/pypa/virtualenv/issues/2768">https://github.com/pypa/virtualenv/issues/2768</a></li>
<li><a href="https://github.com/pypa/virtualenv/pull/2771">https://github.com/pypa/virtualenv/pull/2771</a></li>
<li><a href="https://github.com/pypa/virtualenv/releases/tag/20.26.6">https://github.com/pypa/virtualenv/releases/tag/20.26.6</a></li>
<li><a href="https://github.com/advisories/GHSA-rqc4-2hc7-8c8v">https://github.com/advisories/GHSA-rqc4-2hc7-8c8v</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-rqc4-2hc7-8c8v</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-11-24T18:31:39.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[ray] Ray Path Traversal vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-3pww-qvr8-6mhp</id>
        <link href="https://github.com/advisories/GHSA-3pww-qvr8-6mhp"/>
        <updated>2025-01-09T23:40:01.000Z</updated>
        <content type="html"><![CDATA[<p>LFI in Ray's log API endpoint allows attackers to read any file on the server without authentication. The issue is fixed in version 2.8.1+. Ray maintainers response can be found here: <a href="https://www.anyscale.com/blog/update-on-ray-cves-cve-2023-6019-cve-2023-6020-cve-2023-6021-cve-2023-48022-cve-2023-48023">https://www.anyscale.com/blog/update-on-ray-cves-cve-2023-6019-cve-2023-6020-cve-2023-6021-cve-2023-48022-cve-2023-48023</a></p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-6021">https://nvd.nist.gov/vuln/detail/CVE-2023-6021</a></li>
<li><a href="https://huntr.com/bounties/5039c045-f986-4cbc-81ac-370fe4b0d3f8">https://huntr.com/bounties/5039c045-f986-4cbc-81ac-370fe4b0d3f8</a></li>
<li><a href="https://www.anyscale.com/blog/update-on-ray-cves-cve-2023-6019-cve-2023-6020-cve-2023-6021-cve-2023-48022-cve-2023-48023">https://www.anyscale.com/blog/update-on-ray-cves-cve-2023-6019-cve-2023-6020-cve-2023-6021-cve-2023-48022-cve-2023-48023</a></li>
<li><a href="https://github.com/ray-project/ray/releases/tag/ray-2.8.1">https://github.com/ray-project/ray/releases/tag/ray-2.8.1</a></li>
<li><a href="https://github.com/advisories/GHSA-3pww-qvr8-6mhp">https://github.com/advisories/GHSA-3pww-qvr8-6mhp</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-3pww-qvr8-6mhp</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2023-11-16T18:30:31.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[ray] Ray Missing Authorization vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-6cxr-8q3m-jwrr</id>
        <link href="https://github.com/advisories/GHSA-6cxr-8q3m-jwrr"/>
        <updated>2025-01-09T23:39:16.000Z</updated>
        <content type="html"><![CDATA[<p>LFI in Ray's /static/ directory allows attackers to read any file on the server without authentication. The issue is fixed in version 2.8.1+. Ray maintainers response can be found here: <a href="https://www.anyscale.com/blog/update-on-ray-cves-cve-2023-6019-cve-2023-6020-cve-2023-6021-cve-2023-48022-cve-2023-48023">https://www.anyscale.com/blog/update-on-ray-cves-cve-2023-6019-cve-2023-6020-cve-2023-6021-cve-2023-48022-cve-2023-48023</a></p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-6020">https://nvd.nist.gov/vuln/detail/CVE-2023-6020</a></li>
<li><a href="https://huntr.com/bounties/83dd8619-6dc3-4c98-8f1b-e620fedcd1f6">https://huntr.com/bounties/83dd8619-6dc3-4c98-8f1b-e620fedcd1f6</a></li>
<li><a href="https://www.anyscale.com/blog/update-on-ray-cves-cve-2023-6019-cve-2023-6020-cve-2023-6021-cve-2023-48022-cve-2023-48023">https://www.anyscale.com/blog/update-on-ray-cves-cve-2023-6019-cve-2023-6020-cve-2023-6021-cve-2023-48022-cve-2023-48023</a></li>
<li><a href="https://github.com/ray-project/ray/releases/tag/ray-2.8.1">https://github.com/ray-project/ray/releases/tag/ray-2.8.1</a></li>
<li><a href="https://github.com/advisories/GHSA-6cxr-8q3m-jwrr">https://github.com/advisories/GHSA-6cxr-8q3m-jwrr</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-6cxr-8q3m-jwrr</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2023-11-16T21:30:46.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[ray] Ray OS Command Injection vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-h3xg-wv58-5p43</id>
        <link href="https://github.com/advisories/GHSA-h3xg-wv58-5p43"/>
        <updated>2025-01-09T23:37:56.000Z</updated>
        <content type="html"><![CDATA[<p>A command injection exists in Ray's cpu_profile URL parameter allowing attackers to execute os commands on the system running the ray dashboard remotely without authentication.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-6019">https://nvd.nist.gov/vuln/detail/CVE-2023-6019</a></li>
<li><a href="https://huntr.com/bounties/d0290f3c-b302-4161-89f2-c13bb28b4cfe">https://huntr.com/bounties/d0290f3c-b302-4161-89f2-c13bb28b4cfe</a></li>
<li><a href="https://github.com/ray-project/ray/releases/tag/ray-2.8.1">https://github.com/ray-project/ray/releases/tag/ray-2.8.1</a></li>
<li><a href="https://www.anyscale.com/blog/update-on-ray-cves-cve-2023-6019-cve-2023-6020-cve-2023-6021-cve-2023-48022-cve-2023-48023">https://www.anyscale.com/blog/update-on-ray-cves-cve-2023-6019-cve-2023-6020-cve-2023-6021-cve-2023-48022-cve-2023-48023</a></li>
<li><a href="https://github.com/advisories/GHSA-h3xg-wv58-5p43">https://github.com/advisories/GHSA-h3xg-wv58-5p43</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-h3xg-wv58-5p43</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2023-11-16T18:30:31.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[strawberry-graphql] Strawberry GraphQL has type resolution vulnerability in node interface that allows potential data leakage through incorrect type resolution]]></title>
        <id>https://github.com/advisories/GHSA-5xh2-23cc-5jc6</id>
        <link href="https://github.com/advisories/GHSA-5xh2-23cc-5jc6"/>
        <updated>2025-01-09T22:04:51.000Z</updated>
        <content type="html"><![CDATA[<p><strong>Vulnerability Summary</strong>
A type confusion vulnerability exists in Strawberry GraphQL's relay integration that affects multiple ORM integrations (Django, SQLAlchemy, Pydantic). The vulnerability occurs when multiple GraphQL types are mapped to the same underlying model while using the relay <code>node</code> interface.</p>
<p><strong>Affected Components</strong></p>
<ul>
<li>Strawberry GraphQL relay integration</li>
<li>Specifically impacts implementations using:<ul>
<li>Django integration</li>
<li>SQLAlchemy integration</li>
<li>Pydantic integration</li>
</ul>
</li>
</ul>
<p><strong>Technical Details</strong></p>
<p>The vulnerability manifests when:</p>
<ol>
<li>Multiple GraphQL types inherit from <code>relay.Node</code></li>
<li>These types are mapped to the same database model</li>
<li>The global <code>node</code> field is used for type resolution</li>
</ol>
<p>Example of vulnerable code:</p>
<pre><code class="language-python">from fruits.models import Fruit
import strawberry_django
import strawberry

@strawberry_django.type(Fruit)
class FruitType(relay.Node):
    name: strawberry.auto

@strawberry_django.type(Fruit)
class SpecialFruitType(relay.Node):
    secret_name: strawberry.auto

@strawberry.type
class Query:
    node: relay.Node = strawberry_django.node()
</code></pre>
<p><strong>Security Impact</strong></p>
<p>When querying for a specific type using the global <code>node</code> field (e.g., <code>FruitType:some-id</code>), the resolver may incorrectly return an instance of a different type mapped to the same model (e.g., <code>SpecialFruitType</code>). This can lead to:</p>
<ol>
<li>Information disclosure if the alternate type exposes sensitive fields</li>
<li>Potential privilege escalation if the alternate type contains data intended for restricted access</li>
</ol>
<p><strong>Note</strong>
Even with knowledge of the correct type name (e.g., <code>SpecialFruitType</code>), attackers may still be able to access unauthorized data through direct type queries.</p>
<p>We recommend to use permission on fields instead of creating a dedicate type.</p>
<p><strong>Recommendations</strong></p>
<ol>
<li>Avoid mapping multiple relay Node types to the same model</li>
<li>Implement strict access controls at the field resolution level (using permissions)</li>
<li>Consider using separate models for different access levels of the same data</li>
<li>Update to <code>strawberry-graphql&gt;=0.257.0</code></li>
<li>If using <code>strawberry-graphql-django</code>, update to <code>strawberry-graphql-django&gt;=0.54.0</code></li>
</ol>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/strawberry-graphql/strawberry/security/advisories/GHSA-5xh2-23cc-5jc6">https://github.com/strawberry-graphql/strawberry/security/advisories/GHSA-5xh2-23cc-5jc6</a></li>
<li><a href="https://github.com/strawberry-graphql/strawberry/commit/526eb82b70451c0e59d5a71ae9b7396f59974bd8">https://github.com/strawberry-graphql/strawberry/commit/526eb82b70451c0e59d5a71ae9b7396f59974bd8</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2025-22151">https://nvd.nist.gov/vuln/detail/CVE-2025-22151</a></li>
<li><a href="https://github.com/advisories/GHSA-5xh2-23cc-5jc6">https://github.com/advisories/GHSA-5xh2-23cc-5jc6</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-5xh2-23cc-5jc6</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2025-01-09T18:51:51.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[pgadmin4] pgAdmin has Incorrect Default Permissions]]></title>
        <id>https://github.com/advisories/GHSA-7w6r-748w-mh52</id>
        <link href="https://github.com/advisories/GHSA-7w6r-748w-mh52"/>
        <updated>2025-01-09T17:34:21.000Z</updated>
        <content type="html"><![CDATA[<p>A vulnerability was found in pgadmin. Users logging into pgAdmin running in server mode using LDAP authentication may be attached to another user's session if multiple connection attempts occur simultaneously.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-1907">https://nvd.nist.gov/vuln/detail/CVE-2023-1907</a></li>
<li><a href="https://bugzilla.redhat.com/show_bug.cgi?id=2218384">https://bugzilla.redhat.com/show_bug.cgi?id=2218384</a></li>
<li><a href="https://github.com/pgadmin-org/pgadmin4/issues/6100">https://github.com/pgadmin-org/pgadmin4/issues/6100</a></li>
<li><a href="https://github.com/pgadmin-org/pgadmin4/commit/fa29ba91632634d961f937ce3ed2c3b5a9d78f59">https://github.com/pgadmin-org/pgadmin4/commit/fa29ba91632634d961f937ce3ed2c3b5a9d78f59</a></li>
<li><a href="https://github.com/pgadmin-org/pgadmin4/blob/a9974b418c49760d3989b7fb25e052ff16b89ac6/docs/en_US/release_notes_7_0.rst">https://github.com/pgadmin-org/pgadmin4/blob/a9974b418c49760d3989b7fb25e052ff16b89ac6/docs/en_US/release_notes_7_0.rst</a></li>
<li><a href="https://github.com/advisories/GHSA-7w6r-748w-mh52">https://github.com/advisories/GHSA-7w6r-748w-mh52</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-7w6r-748w-mh52</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2025-01-09T09:31:42.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[neutron] OpenStack Neutron can use an incorrect ID during policy enforcement]]></title>
        <id>https://github.com/advisories/GHSA-f27h-g923-68hw</id>
        <link href="https://github.com/advisories/GHSA-f27h-g923-68hw"/>
        <updated>2025-01-09T15:50:51.000Z</updated>
        <content type="html"><![CDATA[<p>In OpenStack Neutron before 25.0.1, neutron/extensions/tagging.py can use an incorrect ID during policy enforcement. It does not apply the proper policy check for changing network tags. An unprivileged tenant is able to change (add and clear) tags on network objects that do not belong to the tenant, and this action is not subjected to the proper policy authorization check. This affects 23 before 23.2.1, 24 before 24.0.2, and 25 before 25.0.1.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-53916">https://nvd.nist.gov/vuln/detail/CVE-2024-53916</a></li>
<li><a href="https://github.com/openstack/neutron/blob/363ffa6e9e1ab5968f87d45bc2f1cb6394f48b9f/neutron/extensions/tagging.py#L138-L232">https://github.com/openstack/neutron/blob/363ffa6e9e1ab5968f87d45bc2f1cb6394f48b9f/neutron/extensions/tagging.py#L138-L232</a></li>
<li><a href="https://review.opendev.org/c/openstack/neutron/+/935883">https://review.opendev.org/c/openstack/neutron/+/935883</a></li>
<li><a href="https://review.opendev.org/q/project:openstack/neutron">https://review.opendev.org/q/project:openstack/neutron</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2024/12/03/1">http://www.openwall.com/lists/oss-security/2024/12/03/1</a></li>
<li><a href="https://security.openstack.org/ossa/OSSA-2024-005.html">https://security.openstack.org/ossa/OSSA-2024-005.html</a></li>
<li><a href="https://github.com/advisories/GHSA-f27h-g923-68hw">https://github.com/advisories/GHSA-f27h-g923-68hw</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-f27h-g923-68hw</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-11-25T00:31:55.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[neutron] OpenStack Neutron can use an incorrect ID during policy enforcement]]></title>
        <id>https://github.com/advisories/GHSA-f27h-g923-68hw</id>
        <link href="https://github.com/advisories/GHSA-f27h-g923-68hw"/>
        <updated>2025-01-09T15:50:51.000Z</updated>
        <content type="html"><![CDATA[<p>In OpenStack Neutron before 25.0.1, neutron/extensions/tagging.py can use an incorrect ID during policy enforcement. It does not apply the proper policy check for changing network tags. An unprivileged tenant is able to change (add and clear) tags on network objects that do not belong to the tenant, and this action is not subjected to the proper policy authorization check. This affects 23 before 23.2.1, 24 before 24.0.2, and 25 before 25.0.1.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-53916">https://nvd.nist.gov/vuln/detail/CVE-2024-53916</a></li>
<li><a href="https://github.com/openstack/neutron/blob/363ffa6e9e1ab5968f87d45bc2f1cb6394f48b9f/neutron/extensions/tagging.py#L138-L232">https://github.com/openstack/neutron/blob/363ffa6e9e1ab5968f87d45bc2f1cb6394f48b9f/neutron/extensions/tagging.py#L138-L232</a></li>
<li><a href="https://review.opendev.org/c/openstack/neutron/+/935883">https://review.opendev.org/c/openstack/neutron/+/935883</a></li>
<li><a href="https://review.opendev.org/q/project:openstack/neutron">https://review.opendev.org/q/project:openstack/neutron</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2024/12/03/1">http://www.openwall.com/lists/oss-security/2024/12/03/1</a></li>
<li><a href="https://security.openstack.org/ossa/OSSA-2024-005.html">https://security.openstack.org/ossa/OSSA-2024-005.html</a></li>
<li><a href="https://github.com/advisories/GHSA-f27h-g923-68hw">https://github.com/advisories/GHSA-f27h-g923-68hw</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-f27h-g923-68hw</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-11-25T00:31:55.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[neutron] OpenStack Neutron can use an incorrect ID during policy enforcement]]></title>
        <id>https://github.com/advisories/GHSA-f27h-g923-68hw</id>
        <link href="https://github.com/advisories/GHSA-f27h-g923-68hw"/>
        <updated>2025-01-09T15:50:51.000Z</updated>
        <content type="html"><![CDATA[<p>In OpenStack Neutron before 25.0.1, neutron/extensions/tagging.py can use an incorrect ID during policy enforcement. It does not apply the proper policy check for changing network tags. An unprivileged tenant is able to change (add and clear) tags on network objects that do not belong to the tenant, and this action is not subjected to the proper policy authorization check. This affects 23 before 23.2.1, 24 before 24.0.2, and 25 before 25.0.1.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-53916">https://nvd.nist.gov/vuln/detail/CVE-2024-53916</a></li>
<li><a href="https://github.com/openstack/neutron/blob/363ffa6e9e1ab5968f87d45bc2f1cb6394f48b9f/neutron/extensions/tagging.py#L138-L232">https://github.com/openstack/neutron/blob/363ffa6e9e1ab5968f87d45bc2f1cb6394f48b9f/neutron/extensions/tagging.py#L138-L232</a></li>
<li><a href="https://review.opendev.org/c/openstack/neutron/+/935883">https://review.opendev.org/c/openstack/neutron/+/935883</a></li>
<li><a href="https://review.opendev.org/q/project:openstack/neutron">https://review.opendev.org/q/project:openstack/neutron</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2024/12/03/1">http://www.openwall.com/lists/oss-security/2024/12/03/1</a></li>
<li><a href="https://security.openstack.org/ossa/OSSA-2024-005.html">https://security.openstack.org/ossa/OSSA-2024-005.html</a></li>
<li><a href="https://github.com/advisories/GHSA-f27h-g923-68hw">https://github.com/advisories/GHSA-f27h-g923-68hw</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-f27h-g923-68hw</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-11-25T00:31:55.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[sickchill] GHSL-2024-288: SickChill open redirect in login]]></title>
        <id>https://github.com/advisories/GHSA-6gf2-ffq8-gcww</id>
        <link href="https://github.com/advisories/GHSA-6gf2-ffq8-gcww"/>
        <updated>2025-01-08T22:04:00.000Z</updated>
        <content type="html"><![CDATA[<p>SickChill is an automatic video library manager for TV shows. A user-controlled <code>login</code> endpoint's <code>next_</code> parameter takes arbitrary content. Prior to commit c7128a8946c3701df95c285810eb75b2de18bf82, an authenticated attacker may use this to redirect the user to arbitrary destinations, leading to open redirect. Commit c7128a8946c3701df95c285810eb75b2de18bf82 changes the login page to redirect to <code>settings.DEFAULT_PAGE</code> instead of to the <code>next</code> parameter.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-53995">https://nvd.nist.gov/vuln/detail/CVE-2024-53995</a></li>
<li><a href="https://github.com/SickChill/sickchill/pull/8811">https://github.com/SickChill/sickchill/pull/8811</a></li>
<li><a href="https://github.com/SickChill/sickchill/commit/c7128a8946c3701df95c285810eb75b2de18bf82">https://github.com/SickChill/sickchill/commit/c7128a8946c3701df95c285810eb75b2de18bf82</a></li>
<li><a href="https://github.com/SickChill/sickchill/blob/846adafdfab579281353ea08a27bbb813f9a9872/sickchill/views/authentication.py#L33">https://github.com/SickChill/sickchill/blob/846adafdfab579281353ea08a27bbb813f9a9872/sickchill/views/authentication.py#L33</a></li>
<li><a href="https://securitylab.github.com/advisories/GHSL-2024-283_GHSL-2024-291_sickchill_sickchill">https://securitylab.github.com/advisories/GHSL-2024-283_GHSL-2024-291_sickchill_sickchill</a></li>
<li><a href="https://github.com/advisories/GHSA-6gf2-ffq8-gcww">https://github.com/advisories/GHSA-6gf2-ffq8-gcww</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-6gf2-ffq8-gcww</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2025-01-08T22:03:58.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[keras] keras Path Traversal vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-cjgq-5qmw-rcj6</id>
        <link href="https://github.com/advisories/GHSA-cjgq-5qmw-rcj6"/>
        <updated>2025-01-08T19:48:36.000Z</updated>
        <content type="html"><![CDATA[<p>An issue in keras 3.7.0 allows attackers to write arbitrary files to the user's machine via downloading a crafted tar file through the get_file function.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-55459">https://nvd.nist.gov/vuln/detail/CVE-2024-55459</a></li>
<li><a href="https://github.com/keras-team/keras">https://github.com/keras-team/keras</a></li>
<li><a href="https://keras.io">https://keras.io</a></li>
<li><a href="https://river-bicycle-f1e.notion.site/Arbitrary-File-Write-Vulnerability-in-get_file-function-11888e31952580179224e50892976d32">https://river-bicycle-f1e.notion.site/Arbitrary-File-Write-Vulnerability-in-get_file-function-11888e31952580179224e50892976d32</a></li>
<li><a href="https://github.com/keras-team/keras/blob/8f5592bcb61ff48c96560c8923e482db1076b54a/keras/src/utils/file_utils.py#L115">https://github.com/keras-team/keras/blob/8f5592bcb61ff48c96560c8923e482db1076b54a/keras/src/utils/file_utils.py#L115</a></li>
<li><a href="https://github.com/advisories/GHSA-cjgq-5qmw-rcj6">https://github.com/advisories/GHSA-cjgq-5qmw-rcj6</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-cjgq-5qmw-rcj6</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2025-01-08T18:30:48.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[apache-airflow-providers-fab] Apache Airflow Fab Provider Insufficient Session Expiration vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-8863-4qmg-fr45</id>
        <link href="https://github.com/advisories/GHSA-8863-4qmg-fr45"/>
        <updated>2025-01-08T16:14:44.000Z</updated>
        <content type="html"><![CDATA[<p>Insufficient Session Expiration vulnerability in Apache Airflow Fab Provider.</p>
<p>This issue affects Apache Airflow Fab Provider: before 1.5.2.</p>
<p>When user password has been changed with admin CLI, the sessions for that user have not been cleared, leading to insufficient session expiration, thus logged users could continue to be logged in even after the password was changed. This only happened when the password was changed with CLI. The problem does not happen in case change was done with webserver thus this is different from&nbsp;<a href="https://github.com/advisories/GHSA-pm87-24wq-r8w9">CVE-2023-40273</a>&nbsp;which was addressed in Apache-Airflow 2.7.0</p>
<p>Users are recommended to upgrade to version 1.5.2, which fixes the issue.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-45033">https://nvd.nist.gov/vuln/detail/CVE-2024-45033</a></li>
<li><a href="https://github.com/apache/airflow/pull/45139">https://github.com/apache/airflow/pull/45139</a></li>
<li><a href="https://lists.apache.org/thread/yw535346rk766ybzpqtvrl36sjj789st">https://lists.apache.org/thread/yw535346rk766ybzpqtvrl36sjj789st</a></li>
<li><a href="https://github.com/advisories/GHSA-8863-4qmg-fr45">https://github.com/advisories/GHSA-8863-4qmg-fr45</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-8863-4qmg-fr45</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2025-01-08T09:30:38.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[jinja2] Jinja has a sandbox breakout through malicious filenames]]></title>
        <id>https://github.com/advisories/GHSA-gmj6-6f8f-6699</id>
        <link href="https://github.com/advisories/GHSA-gmj6-6f8f-6699"/>
        <updated>2025-01-08T16:06:02.000Z</updated>
        <content type="html"><![CDATA[<p>A bug in the Jinja compiler allows an attacker that controls both the content and filename of a template to execute arbitrary Python code, regardless of if Jinja's sandbox is used.</p>
<p>To exploit the vulnerability, an attacker needs to control both the filename and the contents of a template. Whether that is the case depends on the type of application using Jinja. This vulnerability impacts users of applications which execute untrusted templates where the template author can also choose the template filename.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/pallets/jinja/security/advisories/GHSA-gmj6-6f8f-6699">https://github.com/pallets/jinja/security/advisories/GHSA-gmj6-6f8f-6699</a></li>
<li><a href="https://github.com/pallets/jinja/releases/tag/3.1.5">https://github.com/pallets/jinja/releases/tag/3.1.5</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-56201">https://nvd.nist.gov/vuln/detail/CVE-2024-56201</a></li>
<li><a href="https://github.com/pallets/jinja/issues/1792">https://github.com/pallets/jinja/issues/1792</a></li>
<li><a href="https://github.com/pallets/jinja/commit/767b23617628419ae3709ccfb02f9602ae9fe51f">https://github.com/pallets/jinja/commit/767b23617628419ae3709ccfb02f9602ae9fe51f</a></li>
<li><a href="https://github.com/advisories/GHSA-gmj6-6f8f-6699">https://github.com/advisories/GHSA-gmj6-6f8f-6699</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-gmj6-6f8f-6699</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-12-23T17:54:12.000Z</published>
    </entry>
</feed>