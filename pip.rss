<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://xlordz.github.io/github-advisory-database-rss/pip.rss</id>
    <title>Security Advisory for Python packages hosted at PyPI.org</title>
    <updated>2025-06-09T19:27:05.174Z</updated>
    <generator>github-advisory-database-rss</generator>
    <link rel="alternate" href="https://github.com/advisories?query=type%3Areviewed+ecosystem%3Apip"/>
    <subtitle>Security Advisory for Python packages hosted at PyPI.org on GitHub</subtitle>
    <rights>github-advisory-database-rss</rights>
    <category term="CRITICAL"/>
    <category term="HIGH"/>
    <category term="MODERATE"/>
    <category term="LOW"/>
    <entry>
        <title type="html"><![CDATA[[requests] Requests vulnerable to .netrc credentials leak via malicious URLs]]></title>
        <id>https://github.com/advisories/GHSA-9hjg-9r4m-mvj7</id>
        <link href="https://github.com/advisories/GHSA-9hjg-9r4m-mvj7"/>
        <updated>2025-06-09T19:06:12.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>Due to a URL parsing issue, Requests releases prior to 2.32.4 may leak .netrc credentials to third parties for specific maliciously-crafted URLs.</p>
<h3 id="workarounds">Workarounds</h3>
<p>For older versions of Requests, use of the .netrc file can be disabled with <code>trust_env=False</code> on your Requests Session (<a href="https://requests.readthedocs.io/en/latest/api/#requests.Session.trust_env">docs</a>).</p>
<h3 id="references">References</h3>
<p><a href="https://github.com/psf/requests/pull/6965">https://github.com/psf/requests/pull/6965</a>
<a href="https://seclists.org/fulldisclosure/2025/Jun/2">https://seclists.org/fulldisclosure/2025/Jun/2</a></p>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/psf/requests/security/advisories/GHSA-9hjg-9r4m-mvj7">https://github.com/psf/requests/security/advisories/GHSA-9hjg-9r4m-mvj7</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-47081">https://nvd.nist.gov/vuln/detail/CVE-2024-47081</a></li>
<li><a href="https://github.com/psf/requests/pull/6965">https://github.com/psf/requests/pull/6965</a></li>
<li><a href="https://github.com/psf/requests/commit/96ba401c1296ab1dda74a2365ef36d88f7d144ef">https://github.com/psf/requests/commit/96ba401c1296ab1dda74a2365ef36d88f7d144ef</a></li>
<li><a href="https://requests.readthedocs.io/en/latest/api/#requests.Session.trust_env">https://requests.readthedocs.io/en/latest/api/#requests.Session.trust_env</a></li>
<li><a href="https://seclists.org/fulldisclosure/2025/Jun/2">https://seclists.org/fulldisclosure/2025/Jun/2</a></li>
<li><a href="http://seclists.org/fulldisclosure/2025/Jun/2">http://seclists.org/fulldisclosure/2025/Jun/2</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2025/06/03/11">http://www.openwall.com/lists/oss-security/2025/06/03/11</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2025/06/03/9">http://www.openwall.com/lists/oss-security/2025/06/03/9</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2025/06/04/1">http://www.openwall.com/lists/oss-security/2025/06/04/1</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2025/06/04/6">http://www.openwall.com/lists/oss-security/2025/06/04/6</a></li>
<li><a href="https://github.com/advisories/GHSA-9hjg-9r4m-mvj7">https://github.com/advisories/GHSA-9hjg-9r4m-mvj7</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-9hjg-9r4m-mvj7</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2025-06-09T19:06:08.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[skyvern] Skyvern has a Jinja runtime leak]]></title>
        <id>https://github.com/advisories/GHSA-h92g-3xc3-ww2r</id>
        <link href="https://github.com/advisories/GHSA-h92g-3xc3-ww2r"/>
        <updated>2025-06-09T18:35:34.000Z</updated>
        <content type="html"><![CDATA[<p>Skyvern through 0.2.0 has a Jinja runtime leak in sdk/workflow/models/block.py.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2025-49619">https://nvd.nist.gov/vuln/detail/CVE-2025-49619</a></li>
<li><a href="https://github.com/Skyvern-AI/skyvern/commit/db856cd8433a204c8b45979c70a4da1e119d949d">https://github.com/Skyvern-AI/skyvern/commit/db856cd8433a204c8b45979c70a4da1e119d949d</a></li>
<li><a href="https://cristibtz.github.io/posts/CVE-2025-49619">https://cristibtz.github.io/posts/CVE-2025-49619</a></li>
<li><a href="https://cristibtz.blog/posts/CVE-2025-49619">https://cristibtz.blog/posts/CVE-2025-49619</a></li>
<li><a href="https://github.com/advisories/GHSA-h92g-3xc3-ww2r">https://github.com/advisories/GHSA-h92g-3xc3-ww2r</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-h92g-3xc3-ww2r</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2025-06-07T15:30:18.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[aiohttp] In aiohttp, compressed files as symlinks are not protected from path traversal]]></title>
        <id>https://github.com/advisories/GHSA-jwhx-xcg6-8xhj</id>
        <link href="https://github.com/advisories/GHSA-jwhx-xcg6-8xhj"/>
        <updated>2025-06-09T12:17:21.000Z</updated>
        <content type="html"><![CDATA[<h3 id="summary">Summary</h3>
<p>Static routes which contain files with compressed variants (<code>.gz</code> or <code>.br</code> extension) were vulnerable to path traversal outside the root directory if those variants are symbolic links.</p>
<h3 id="details">Details</h3>
<p>The server protects static routes from path traversal outside the root directory when <code>follow_symlinks=False</code> (default).  It does this by resolving the requested URL to an absolute path and then checking that path relative to the root.  However, these checks are not performed when looking for compressed variants in the <code>FileResponse</code> class, and symbolic links are then automatically followed when performing <code>Path.stat()</code> and <code>Path.open()</code> to send the file.</p>
<h3 id="impact">Impact</h3>
<p>Servers with static routes that contain compressed variants as symbolic links, pointing outside the root directory, or that permit users to upload or create such links, are impacted.</p>
<hr>
<p>Patch: <a href="https://github.com/aio-libs/aiohttp/pull/8653/files">https://github.com/aio-libs/aiohttp/pull/8653/files</a></p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/aio-libs/aiohttp/security/advisories/GHSA-jwhx-xcg6-8xhj">https://github.com/aio-libs/aiohttp/security/advisories/GHSA-jwhx-xcg6-8xhj</a></li>
<li><a href="https://github.com/aio-libs/aiohttp/pull/8653">https://github.com/aio-libs/aiohttp/pull/8653</a></li>
<li><a href="https://github.com/aio-libs/aiohttp/commit/ce2e9758814527589b10759a20783fb03b98339f">https://github.com/aio-libs/aiohttp/commit/ce2e9758814527589b10759a20783fb03b98339f</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-42367">https://nvd.nist.gov/vuln/detail/CVE-2024-42367</a></li>
<li><a href="https://github.com/aio-libs/aiohttp/blob/e0ff5246e1d29b7710ab1a2bbc972b48169f1c05/aiohttp/web_fileresponse.py#L177">https://github.com/aio-libs/aiohttp/blob/e0ff5246e1d29b7710ab1a2bbc972b48169f1c05/aiohttp/web_fileresponse.py#L177</a></li>
<li><a href="https://github.com/aio-libs/aiohttp/blob/e0ff5246e1d29b7710ab1a2bbc972b48169f1c05/aiohttp/web_urldispatcher.py#L674">https://github.com/aio-libs/aiohttp/blob/e0ff5246e1d29b7710ab1a2bbc972b48169f1c05/aiohttp/web_urldispatcher.py#L674</a></li>
<li><a href="https://github.com/advisories/GHSA-jwhx-xcg6-8xhj">https://github.com/advisories/GHSA-jwhx-xcg6-8xhj</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-jwhx-xcg6-8xhj</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-08-09T16:49:58.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[sentry-sdk] Sentry's Python SDK unintentionally exposes environment variables to subprocesses]]></title>
        <id>https://github.com/advisories/GHSA-g92j-qhmh-64v2</id>
        <link href="https://github.com/advisories/GHSA-g92j-qhmh-64v2"/>
        <updated>2025-06-06T22:27:44.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>The bug in Sentry's Python SDK &lt;2.8.0 results in the unintentional exposure of environment variables to subprocesses despite the <code>env={}</code> setting.</p>
<h3 id="details">Details</h3>
<p>In Python's <code>subprocess</code> calls, all environment variables are passed to subprocesses by default. However, if you specifically do not want them to be passed to subprocesses, you may use <code>env</code> argument in <code>subprocess</code> calls, like in this example:</p>
<pre><code>&gt;&gt;&gt; subprocess.check_output(["env"], env={"TEST":"1"})
b'TEST=1\n'
</code></pre>
<p>If you'd want to not pass any variables, you can set an empty dict:</p>
<pre><code>&gt;&gt;&gt; subprocess.check_output(["env"], env={})
b''
</code></pre>
<p>However, the bug in Sentry SDK &lt;2.8.0 causes <strong>all environment variables</strong> to be passed to the subprocesses when <code>env={}</code> is set, unless the Sentry SDK's <a href="https://docs.sentry.io/platforms/python/integrations/default-integrations/#stdlib">Stdlib</a> integration is disabled. The Stdlib integration is enabled by default.</p>
<h3 id="patches">Patches</h3>
<p>The issue has been patched in <a href="https://github.com/getsentry/sentry-python/pull/3251">https://github.com/getsentry/sentry-python/pull/3251</a> and the fix released in <a href="https://github.com/getsentry/sentry-python/releases/tag/2.8.0">sentry-sdk==2.8.0</a>. The fix was also backported to <a href="https://github.com/getsentry/sentry-python/releases/tag/1.45.1">sentry-sdk==1.45.1</a>.</p>
<h3 id="workarounds">Workarounds</h3>
<p>We strongly recommend upgrading to the latest SDK version. However, if it's not possible, and if passing environment variables to child processes poses a security risk for you, there are two options:</p>
<ol>
<li>In your application, replace <code>env={}</code> with the minimal dict <code>env={"EMPTY_ENV":"1"}</code> or similar.</li>
</ol>
<p>OR</p>
<ol start="2">
<li>Disable Stdlib integration:</li>
</ol>
<pre><code>import sentry_sdk

# Should go before sentry_sdk.init
sentry_sdk.integrations._DEFAULT_INTEGRATIONS.remove("sentry_sdk.integrations.stdlib.StdlibIntegration")

sentry_sdk.init(...)
</code></pre>
<h3 id="references">References</h3>
<ul>
<li>Sentry docs: <a href="https://docs.sentry.io/platforms/python/integrations/default-integrations/">Default integrations</a></li>
<li>Python docs: <a href="https://docs.python.org/3/library/subprocess.html">subprocess module</a></li>
<li>Patch <a href="https://github.com/getsentry/sentry-python/pull/3251">https://github.com/getsentry/sentry-python/pull/3251</a></li>
</ul>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/getsentry/sentry-python/security/advisories/GHSA-g92j-qhmh-64v2">https://github.com/getsentry/sentry-python/security/advisories/GHSA-g92j-qhmh-64v2</a></li>
<li><a href="https://github.com/getsentry/sentry-python/pull/3251">https://github.com/getsentry/sentry-python/pull/3251</a></li>
<li><a href="https://github.com/getsentry/sentry-python/commit/763e40aa4cb57ecced467f48f78f335c87e9bdff">https://github.com/getsentry/sentry-python/commit/763e40aa4cb57ecced467f48f78f335c87e9bdff</a></li>
<li><a href="https://docs.python.org/3/library/subprocess.html">https://docs.python.org/3/library/subprocess.html</a></li>
<li><a href="https://docs.sentry.io/platforms/python/integrations/default-integrations">https://docs.sentry.io/platforms/python/integrations/default-integrations</a></li>
<li><a href="https://docs.sentry.io/platforms/python/integrations/default-integrations/#stdlib">https://docs.sentry.io/platforms/python/integrations/default-integrations/#stdlib</a></li>
<li><a href="https://github.com/getsentry/sentry-python/releases/tag/2.8.0">https://github.com/getsentry/sentry-python/releases/tag/2.8.0</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-40647">https://nvd.nist.gov/vuln/detail/CVE-2024-40647</a></li>
<li><a href="https://github.com/getsentry/sentry-python/releases/tag/1.45.1">https://github.com/getsentry/sentry-python/releases/tag/1.45.1</a></li>
<li><a href="https://github.com/advisories/GHSA-g92j-qhmh-64v2">https://github.com/advisories/GHSA-g92j-qhmh-64v2</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-g92j-qhmh-64v2</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2024-07-18T17:18:46.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[sentry-sdk] Sentry's Python SDK unintentionally exposes environment variables to subprocesses]]></title>
        <id>https://github.com/advisories/GHSA-g92j-qhmh-64v2</id>
        <link href="https://github.com/advisories/GHSA-g92j-qhmh-64v2"/>
        <updated>2025-06-06T22:27:44.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>The bug in Sentry's Python SDK &lt;2.8.0 results in the unintentional exposure of environment variables to subprocesses despite the <code>env={}</code> setting.</p>
<h3 id="details">Details</h3>
<p>In Python's <code>subprocess</code> calls, all environment variables are passed to subprocesses by default. However, if you specifically do not want them to be passed to subprocesses, you may use <code>env</code> argument in <code>subprocess</code> calls, like in this example:</p>
<pre><code>&gt;&gt;&gt; subprocess.check_output(["env"], env={"TEST":"1"})
b'TEST=1\n'
</code></pre>
<p>If you'd want to not pass any variables, you can set an empty dict:</p>
<pre><code>&gt;&gt;&gt; subprocess.check_output(["env"], env={})
b''
</code></pre>
<p>However, the bug in Sentry SDK &lt;2.8.0 causes <strong>all environment variables</strong> to be passed to the subprocesses when <code>env={}</code> is set, unless the Sentry SDK's <a href="https://docs.sentry.io/platforms/python/integrations/default-integrations/#stdlib">Stdlib</a> integration is disabled. The Stdlib integration is enabled by default.</p>
<h3 id="patches">Patches</h3>
<p>The issue has been patched in <a href="https://github.com/getsentry/sentry-python/pull/3251">https://github.com/getsentry/sentry-python/pull/3251</a> and the fix released in <a href="https://github.com/getsentry/sentry-python/releases/tag/2.8.0">sentry-sdk==2.8.0</a>. The fix was also backported to <a href="https://github.com/getsentry/sentry-python/releases/tag/1.45.1">sentry-sdk==1.45.1</a>.</p>
<h3 id="workarounds">Workarounds</h3>
<p>We strongly recommend upgrading to the latest SDK version. However, if it's not possible, and if passing environment variables to child processes poses a security risk for you, there are two options:</p>
<ol>
<li>In your application, replace <code>env={}</code> with the minimal dict <code>env={"EMPTY_ENV":"1"}</code> or similar.</li>
</ol>
<p>OR</p>
<ol start="2">
<li>Disable Stdlib integration:</li>
</ol>
<pre><code>import sentry_sdk

# Should go before sentry_sdk.init
sentry_sdk.integrations._DEFAULT_INTEGRATIONS.remove("sentry_sdk.integrations.stdlib.StdlibIntegration")

sentry_sdk.init(...)
</code></pre>
<h3 id="references">References</h3>
<ul>
<li>Sentry docs: <a href="https://docs.sentry.io/platforms/python/integrations/default-integrations/">Default integrations</a></li>
<li>Python docs: <a href="https://docs.python.org/3/library/subprocess.html">subprocess module</a></li>
<li>Patch <a href="https://github.com/getsentry/sentry-python/pull/3251">https://github.com/getsentry/sentry-python/pull/3251</a></li>
</ul>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/getsentry/sentry-python/security/advisories/GHSA-g92j-qhmh-64v2">https://github.com/getsentry/sentry-python/security/advisories/GHSA-g92j-qhmh-64v2</a></li>
<li><a href="https://github.com/getsentry/sentry-python/pull/3251">https://github.com/getsentry/sentry-python/pull/3251</a></li>
<li><a href="https://github.com/getsentry/sentry-python/commit/763e40aa4cb57ecced467f48f78f335c87e9bdff">https://github.com/getsentry/sentry-python/commit/763e40aa4cb57ecced467f48f78f335c87e9bdff</a></li>
<li><a href="https://docs.python.org/3/library/subprocess.html">https://docs.python.org/3/library/subprocess.html</a></li>
<li><a href="https://docs.sentry.io/platforms/python/integrations/default-integrations">https://docs.sentry.io/platforms/python/integrations/default-integrations</a></li>
<li><a href="https://docs.sentry.io/platforms/python/integrations/default-integrations/#stdlib">https://docs.sentry.io/platforms/python/integrations/default-integrations/#stdlib</a></li>
<li><a href="https://github.com/getsentry/sentry-python/releases/tag/2.8.0">https://github.com/getsentry/sentry-python/releases/tag/2.8.0</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-40647">https://nvd.nist.gov/vuln/detail/CVE-2024-40647</a></li>
<li><a href="https://github.com/getsentry/sentry-python/releases/tag/1.45.1">https://github.com/getsentry/sentry-python/releases/tag/1.45.1</a></li>
<li><a href="https://github.com/advisories/GHSA-g92j-qhmh-64v2">https://github.com/advisories/GHSA-g92j-qhmh-64v2</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-g92j-qhmh-64v2</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2024-07-18T17:18:46.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[llama-index] llama_index vulnerable to SQL Injection]]></title>
        <id>https://github.com/advisories/GHSA-v3c8-3pr6-gr7p</id>
        <link href="https://github.com/advisories/GHSA-v3c8-3pr6-gr7p"/>
        <updated>2025-06-06T17:24:33.000Z</updated>
        <content type="html"><![CDATA[<p>Multiple vector store integrations in run-llama/llama_index version v0.12.21 have SQL injection vulnerabilities. These vulnerabilities allow an attacker to read and write data using SQL, potentially leading to unauthorized access to data of other users depending on the usage of the llama-index library in a web application.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2025-1793">https://nvd.nist.gov/vuln/detail/CVE-2025-1793</a></li>
<li><a href="https://github.com/run-llama/llama_index/commit/0008041e8dde8e519621388e5d6f558bde6ef42e">https://github.com/run-llama/llama_index/commit/0008041e8dde8e519621388e5d6f558bde6ef42e</a></li>
<li><a href="https://huntr.com/bounties/8cb1555a-9655-4122-b0d6-60059e79183c">https://huntr.com/bounties/8cb1555a-9655-4122-b0d6-60059e79183c</a></li>
<li><a href="https://github.com/advisories/GHSA-v3c8-3pr6-gr7p">https://github.com/advisories/GHSA-v3c8-3pr6-gr7p</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-v3c8-3pr6-gr7p</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2025-06-05T06:30:26.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[Django] Django Improper Output Neutralization for Logs vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-7xr5-9hcq-chf9</id>
        <link href="https://github.com/advisories/GHSA-7xr5-9hcq-chf9"/>
        <updated>2025-06-06T15:45:57.000Z</updated>
        <content type="html"><![CDATA[<p>An issue was discovered in Django 5.2 before 5.2.2, 5.1 before 5.1.10, and 4.2 before 4.2.22. Internal HTTP response logging does not escape request.path, which allows remote attackers to potentially manipulate log output via crafted URLs. This may lead to log injection or forgery when logs are viewed in terminals or processed by external systems.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2025-48432">https://nvd.nist.gov/vuln/detail/CVE-2025-48432</a></li>
<li><a href="https://docs.djangoproject.com/en/dev/releases/security">https://docs.djangoproject.com/en/dev/releases/security</a></li>
<li><a href="https://groups.google.com/g/django-announce">https://groups.google.com/g/django-announce</a></li>
<li><a href="https://www.djangoproject.com/weblog/2025/jun/04/security-releases">https://www.djangoproject.com/weblog/2025/jun/04/security-releases</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2025/06/04/5">http://www.openwall.com/lists/oss-security/2025/06/04/5</a></li>
<li><a href="https://github.com/pypa/advisory-database/tree/main/vulns/django/PYSEC-2025-47.yaml">https://github.com/pypa/advisory-database/tree/main/vulns/django/PYSEC-2025-47.yaml</a></li>
<li><a href="https://github.com/advisories/GHSA-7xr5-9hcq-chf9">https://github.com/advisories/GHSA-7xr5-9hcq-chf9</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-7xr5-9hcq-chf9</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2025-06-05T03:30:58.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[Django] Django Improper Output Neutralization for Logs vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-7xr5-9hcq-chf9</id>
        <link href="https://github.com/advisories/GHSA-7xr5-9hcq-chf9"/>
        <updated>2025-06-06T15:45:57.000Z</updated>
        <content type="html"><![CDATA[<p>An issue was discovered in Django 5.2 before 5.2.2, 5.1 before 5.1.10, and 4.2 before 4.2.22. Internal HTTP response logging does not escape request.path, which allows remote attackers to potentially manipulate log output via crafted URLs. This may lead to log injection or forgery when logs are viewed in terminals or processed by external systems.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2025-48432">https://nvd.nist.gov/vuln/detail/CVE-2025-48432</a></li>
<li><a href="https://docs.djangoproject.com/en/dev/releases/security">https://docs.djangoproject.com/en/dev/releases/security</a></li>
<li><a href="https://groups.google.com/g/django-announce">https://groups.google.com/g/django-announce</a></li>
<li><a href="https://www.djangoproject.com/weblog/2025/jun/04/security-releases">https://www.djangoproject.com/weblog/2025/jun/04/security-releases</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2025/06/04/5">http://www.openwall.com/lists/oss-security/2025/06/04/5</a></li>
<li><a href="https://github.com/pypa/advisory-database/tree/main/vulns/django/PYSEC-2025-47.yaml">https://github.com/pypa/advisory-database/tree/main/vulns/django/PYSEC-2025-47.yaml</a></li>
<li><a href="https://github.com/advisories/GHSA-7xr5-9hcq-chf9">https://github.com/advisories/GHSA-7xr5-9hcq-chf9</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-7xr5-9hcq-chf9</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2025-06-05T03:30:58.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[Django] Django Improper Output Neutralization for Logs vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-7xr5-9hcq-chf9</id>
        <link href="https://github.com/advisories/GHSA-7xr5-9hcq-chf9"/>
        <updated>2025-06-06T15:45:57.000Z</updated>
        <content type="html"><![CDATA[<p>An issue was discovered in Django 5.2 before 5.2.2, 5.1 before 5.1.10, and 4.2 before 4.2.22. Internal HTTP response logging does not escape request.path, which allows remote attackers to potentially manipulate log output via crafted URLs. This may lead to log injection or forgery when logs are viewed in terminals or processed by external systems.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2025-48432">https://nvd.nist.gov/vuln/detail/CVE-2025-48432</a></li>
<li><a href="https://docs.djangoproject.com/en/dev/releases/security">https://docs.djangoproject.com/en/dev/releases/security</a></li>
<li><a href="https://groups.google.com/g/django-announce">https://groups.google.com/g/django-announce</a></li>
<li><a href="https://www.djangoproject.com/weblog/2025/jun/04/security-releases">https://www.djangoproject.com/weblog/2025/jun/04/security-releases</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2025/06/04/5">http://www.openwall.com/lists/oss-security/2025/06/04/5</a></li>
<li><a href="https://github.com/pypa/advisory-database/tree/main/vulns/django/PYSEC-2025-47.yaml">https://github.com/pypa/advisory-database/tree/main/vulns/django/PYSEC-2025-47.yaml</a></li>
<li><a href="https://github.com/advisories/GHSA-7xr5-9hcq-chf9">https://github.com/advisories/GHSA-7xr5-9hcq-chf9</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-7xr5-9hcq-chf9</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2025-06-05T03:30:58.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[label-studio-ml] HumanSignal label-studio-ml-backend Deserialization of Untrusted Data vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-55g9-6c2x-gf8q</id>
        <link href="https://github.com/advisories/GHSA-55g9-6c2x-gf8q"/>
        <updated>2025-06-06T15:37:48.000Z</updated>
        <content type="html"><![CDATA[<p>A vulnerability has been found in HumanSignal label-studio-ml-backend up to 9fb7f4aa186612806af2becfb621f6ed8d9fdbaf and classified as problematic. Affected by this vulnerability is the function load of the file label-studio-ml-backend/label_studio_ml/examples/yolo/utils/neural_nets.py of the component PT File Handler. The manipulation of the argument path leads to deserialization. An attack has to be approached locally. This product takes the approach of rolling releases to provide continious delivery. Therefore, version details for affected and updated releases are not available.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2025-5173">https://nvd.nist.gov/vuln/detail/CVE-2025-5173</a></li>
<li><a href="https://github.com/HumanSignal/label-studio-ml-backend/issues/765">https://github.com/HumanSignal/label-studio-ml-backend/issues/765</a></li>
<li><a href="https://vuldb.com/?ctiid.310261">https://vuldb.com/?ctiid.310261</a></li>
<li><a href="https://vuldb.com/?id.310261">https://vuldb.com/?id.310261</a></li>
<li><a href="https://vuldb.com/?submit.578126">https://vuldb.com/?submit.578126</a></li>
<li><a href="https://github.com/advisories/GHSA-55g9-6c2x-gf8q">https://github.com/advisories/GHSA-55g9-6c2x-gf8q</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-55g9-6c2x-gf8q</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2025-05-26T09:30:44.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[signxml] SignXML's signature verification with HMAC is vulnerable to an algorithm confusion attack]]></title>
        <id>https://github.com/advisories/GHSA-6vx8-pcwv-xhf4</id>
        <link href="https://github.com/advisories/GHSA-6vx8-pcwv-xhf4"/>
        <updated>2025-06-05T00:38:22.000Z</updated>
        <content type="html"><![CDATA[<p>When verifying signatures with X509 certificate validation turned off and HMAC shared secret set (<code>signxml.XMLVerifier.verify(require_x509=False, hmac_key=...</code>), prior versions of SignXML are vulnerable to a potential algorithm confusion attack. Unless the user explicitly limits the expected signature algorithms using the <code>signxml.XMLVerifier.verify(expect_config=...)</code> setting, an attacker may supply a signature unexpectedly signed with a key other than the provided HMAC key, using a different (asymmetric key) signature algorithm.</p>
<p>Starting with signxml 4.0.4, specifying <code>hmac_key</code> causes the set of accepted signature algorithms to be restricted to HMAC only, if not already restricted by the user.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/XML-Security/signxml/security/advisories/GHSA-6vx8-pcwv-xhf4">https://github.com/XML-Security/signxml/security/advisories/GHSA-6vx8-pcwv-xhf4</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2025-48994">https://nvd.nist.gov/vuln/detail/CVE-2025-48994</a></li>
<li><a href="https://github.com/XML-Security/signxml/commit/e3c0c2b82a3329a65d917830657649c98b8c7600">https://github.com/XML-Security/signxml/commit/e3c0c2b82a3329a65d917830657649c98b8c7600</a></li>
<li><a href="https://github.com/advisories/GHSA-6vx8-pcwv-xhf4">https://github.com/advisories/GHSA-6vx8-pcwv-xhf4</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-6vx8-pcwv-xhf4</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2025-06-05T00:38:20.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[signxml] SignXML's signature verification with HMAC is vulnerable to a timing attack]]></title>
        <id>https://github.com/advisories/GHSA-gmhf-gg8w-jw42</id>
        <link href="https://github.com/advisories/GHSA-gmhf-gg8w-jw42"/>
        <updated>2025-06-05T00:37:20.000Z</updated>
        <content type="html"><![CDATA[<p>When verifying signatures with X509 certificate validation turned off and HMAC shared secret set (<code>signxml.XMLVerifier.verify(require_x509=False, hmac_key=...</code>), prior versions of SignXML are vulnerable to a potential timing attack. The verifier may leak information about the correct HMAC when comparing it with the user supplied hash, allowing users to reconstruct the correct HMAC for any data.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/XML-Security/signxml/security/advisories/GHSA-gmhf-gg8w-jw42">https://github.com/XML-Security/signxml/security/advisories/GHSA-gmhf-gg8w-jw42</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2025-48995">https://nvd.nist.gov/vuln/detail/CVE-2025-48995</a></li>
<li><a href="https://github.com/XML-Security/signxml/commit/1b501faaacf34cf978a52dbc6915ec11e27611cd">https://github.com/XML-Security/signxml/commit/1b501faaacf34cf978a52dbc6915ec11e27611cd</a></li>
<li><a href="https://github.com/advisories/GHSA-gmhf-gg8w-jw42">https://github.com/advisories/GHSA-gmhf-gg8w-jw42</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-gmhf-gg8w-jw42</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2025-06-05T00:37:19.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[aim] Aim Vulnerable to Sandbox Escape Leading to Remote Code Execution]]></title>
        <id>https://github.com/advisories/GHSA-gp5h-f9c5-8355</id>
        <link href="https://github.com/advisories/GHSA-gp5h-f9c5-8355"/>
        <updated>2025-06-05T00:34:04.000Z</updated>
        <content type="html"><![CDATA[<p>A vulnerability classified as critical was found in aimhubio aim up to 3.29.1. This vulnerability affects the function RestrictedPythonQuery of the file /aim/storage/query.py of the component run_view Object Handler. The manipulation of the argument Query leads to sandbox issue. The attack can be initiated remotely. The exploit has been disclosed to the public and may be used. The vendor was contacted early about this disclosure but did not respond in any way.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2025-5321">https://nvd.nist.gov/vuln/detail/CVE-2025-5321</a></li>
<li><a href="https://gist.github.com/superboy-zjc/1fc4747a0ac77a1edc8c32e1d4edc54c">https://gist.github.com/superboy-zjc/1fc4747a0ac77a1edc8c32e1d4edc54c</a></li>
<li><a href="https://vuldb.com/?ctiid.310492">https://vuldb.com/?ctiid.310492</a></li>
<li><a href="https://vuldb.com/?id.310492">https://vuldb.com/?id.310492</a></li>
<li><a href="https://vuldb.com/?submit.580253">https://vuldb.com/?submit.580253</a></li>
<li><a href="https://github.com/advisories/GHSA-gp5h-f9c5-8355">https://github.com/advisories/GHSA-gp5h-f9c5-8355</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-gp5h-f9c5-8355</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2025-05-29T15:31:09.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[gradio] Gradio CORS Origin Validation Bypass Vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-wmjh-cpqj-4v6x</id>
        <link href="https://github.com/advisories/GHSA-wmjh-cpqj-4v6x"/>
        <updated>2025-06-05T00:22:24.000Z</updated>
        <content type="html"><![CDATA[<p>A vulnerability classified as problematic has been found in gradio-app gradio up to 5.29.1. This affects the function is_valid_origin of the component CORS Handler. The manipulation of the argument localhost_aliases leads to origin validation error. It is possible to initiate the attack remotely. The complexity of an attack is rather high. The exploitability is told to be difficult. The exploit has been disclosed to the public and may be used. The vendor was contacted early about this disclosure but did not respond in any way.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2025-5320">https://nvd.nist.gov/vuln/detail/CVE-2025-5320</a></li>
<li><a href="https://gist.github.com/superboy-zjc/aa3dfa161d7b19d8a53ab4605792f2fe">https://gist.github.com/superboy-zjc/aa3dfa161d7b19d8a53ab4605792f2fe</a></li>
<li><a href="https://gist.github.com/superboy-zjc/aa3dfa161d7b19d8a53ab4605792f2fe#proof-of-concept-poc">https://gist.github.com/superboy-zjc/aa3dfa161d7b19d8a53ab4605792f2fe#proof-of-concept-poc</a></li>
<li><a href="https://vuldb.com/?ctiid.310491">https://vuldb.com/?ctiid.310491</a></li>
<li><a href="https://vuldb.com/?id.310491">https://vuldb.com/?id.310491</a></li>
<li><a href="https://vuldb.com/?submit.580250">https://vuldb.com/?submit.580250</a></li>
<li><a href="https://github.com/advisories/GHSA-wmjh-cpqj-4v6x">https://github.com/advisories/GHSA-wmjh-cpqj-4v6x</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-wmjh-cpqj-4v6x</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2025-05-29T15:31:09.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[astrbot] AstrBot Has Path Traversal Vulnerability in /api/chat/get_file]]></title>
        <id>https://github.com/advisories/GHSA-cq37-g2qp-3c2p</id>
        <link href="https://github.com/advisories/GHSA-cq37-g2qp-3c2p"/>
        <updated>2025-06-04T23:54:36.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>This vulnerability may lead to:</p>
<ul>
<li>Information disclosure, such as API keys for LLM providers, account passwords, and other sensitive data.</li>
</ul>
<h3 id="reproduce">Reproduce</h3>
<p>Follow these steps to set up a test environment for reproducing the vulnerability:</p>
<ol>
<li><p>Install dependencies and clone the repository:</p>
<pre><code class="language-bash">pip install uv
git clone https://github.com/AstrBotDevs/AstrBot &amp;&amp; cd AstrBot
uv run main.py
</code></pre>
</li>
<li><p>Alternatively, deploy the program via pip:</p>
<pre><code class="language-bash">mkdir astrbot &amp;&amp; cd astrbot
uvx astrbot init
uvx astrbot run
</code></pre>
</li>
<li><p>In another terminal, run the following command to exploit the vulnerability:</p>
<pre><code class="language-bash">curl -L http://0.0.0.0:6185/api/chat/get_file?filename=../../../data/cmd_config.json
</code></pre>
</li>
</ol>
<p>This request will read the <code>cmd_config.json</code> config file, leading to the leakage of sensitive data such as LLM API keys, usernames, and password hashes (MD5).</p>
<h3 id="patches">Patches</h3>
<p>The vulnerability has been addressed in <a href="https://github.com/AstrBotDevs/AstrBot/pull/1676">Pull Request #1676</a> and is included in versions &gt;= v3.5.13. All users are strongly encouraged to upgrade to v3.5.13 or later.</p>
<h3 id="workarounds">Workarounds</h3>
<p>Users can edit the cmd_config.json file to disable the dashboard feature as a temporary workaround. However, it is strongly recommended to upgrade to version v3.5.13 or later as soon as possible to fully resolve this issue.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/AstrBotDevs/AstrBot/pull/1676">Pull Request #1676</a></li>
<li><a href="https://github.com/AstrBotDevs/AstrBot/issues/1675">Issue #1675</a></li>
</ul>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/AstrBotDevs/AstrBot/security/advisories/GHSA-cq37-g2qp-3c2p">https://github.com/AstrBotDevs/AstrBot/security/advisories/GHSA-cq37-g2qp-3c2p</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2025-48957">https://nvd.nist.gov/vuln/detail/CVE-2025-48957</a></li>
<li><a href="https://github.com/AstrBotDevs/AstrBot/issues/1675">https://github.com/AstrBotDevs/AstrBot/issues/1675</a></li>
<li><a href="https://github.com/AstrBotDevs/AstrBot/pull/1676">https://github.com/AstrBotDevs/AstrBot/pull/1676</a></li>
<li><a href="https://github.com/AstrBotDevs/AstrBot/commit/cceadf222c46813c7f41115b40d371e7eb91e492">https://github.com/AstrBotDevs/AstrBot/commit/cceadf222c46813c7f41115b40d371e7eb91e492</a></li>
<li><a href="https://github.com/advisories/GHSA-cq37-g2qp-3c2p">https://github.com/advisories/GHSA-cq37-g2qp-3c2p</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-cq37-g2qp-3c2p</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2025-06-04T23:54:35.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[jupyter_core] Jupyter Core on Windows Has Uncontrolled Search Path Element Local Privilege Escalation Vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-33p9-3p43-82vq</id>
        <link href="https://github.com/advisories/GHSA-33p9-3p43-82vq"/>
        <updated>2025-06-04T21:00:24.000Z</updated>
        <content type="html"><![CDATA[<h2 id="impact">Impact</h2>
<p>On Windows, the shared <code>%PROGRAMDATA%</code> directory is searched for configuration files (<code>SYSTEM_CONFIG_PATH</code> and <code>SYSTEM_JUPYTER_PATH</code>), which may allow users to create configuration files affecting other users.</p>
<p>Only shared Windows systems with multiple users and unprotected <code>%PROGRAMDATA%</code> are affected.</p>
<h2 id="mitigations">Mitigations</h2>
<ul>
<li>upgrade to <code>jupyter_core&gt;=5.8.1</code> (5.8.0 is patched but breaks <code>jupyter-server</code>) , or</li>
<li>as administrator, modify the permissions on the <code>%PROGRAMDATA%</code> directory so it is not writable by unauthorized users, or</li>
<li>as administrator, create the <code>%PROGRAMDATA%\jupyter</code> directory with appropriately restrictive permissions, or</li>
<li>as user or administrator, set the <code>%PROGRAMDATA%</code> environment variable to a directory with appropriately restrictive permissions (e.g. controlled by administrators <em>or</em> the current user)</li>
</ul>
<h2 id="credit">Credit</h2>
<p>Reported via Trend Micro Zero Day Initiative as ZDI-CAN-25932</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/jupyter/jupyter_core/security/advisories/GHSA-33p9-3p43-82vq">https://github.com/jupyter/jupyter_core/security/advisories/GHSA-33p9-3p43-82vq</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2025-30167">https://nvd.nist.gov/vuln/detail/CVE-2025-30167</a></li>
<li><a href="https://github.com/advisories/GHSA-33p9-3p43-82vq">https://github.com/advisories/GHSA-33p9-3p43-82vq</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-33p9-3p43-82vq</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2025-06-04T21:00:23.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[django-helpdesk] django-helpdesk Allows Sensitive Data Exposure]]></title>
        <id>https://github.com/advisories/GHSA-m4jx-m5hg-qrxx</id>
        <link href="https://github.com/advisories/GHSA-m4jx-m5hg-qrxx"/>
        <updated>2025-06-04T01:30:26.000Z</updated>
        <content type="html"><![CDATA[<p>django-helpdesk before 1.0.0 allows Sensitive Data Exposure because of os.umask(0) in models.py.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2018-25111">https://nvd.nist.gov/vuln/detail/CVE-2018-25111</a></li>
<li><a href="https://github.com/django-helpdesk/django-helpdesk/issues/591">https://github.com/django-helpdesk/django-helpdesk/issues/591</a></li>
<li><a href="https://github.com/django-helpdesk/django-helpdesk/pull/1120">https://github.com/django-helpdesk/django-helpdesk/pull/1120</a></li>
<li><a href="https://github.com/django-helpdesk/django-helpdesk/releases/tag/v1.0.0">https://github.com/django-helpdesk/django-helpdesk/releases/tag/v1.0.0</a></li>
<li><a href="https://github.com/django-helpdesk/django-helpdesk/commit/f872ec252769bee5a88b06d07d3634e580c67bcc">https://github.com/django-helpdesk/django-helpdesk/commit/f872ec252769bee5a88b06d07d3634e580c67bcc</a></li>
<li><a href="https://github.com/pypa/advisory-database/tree/main/vulns/django-helpdesk/PYSEC-2025-44.yaml">https://github.com/pypa/advisory-database/tree/main/vulns/django-helpdesk/PYSEC-2025-44.yaml</a></li>
<li><a href="https://github.com/advisories/GHSA-m4jx-m5hg-qrxx">https://github.com/advisories/GHSA-m4jx-m5hg-qrxx</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-m4jx-m5hg-qrxx</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2025-05-31T03:30:33.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[torch] PyTorch Improper Resource Shutdown or Release vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-887c-mr87-cxwp</id>
        <link href="https://github.com/advisories/GHSA-887c-mr87-cxwp"/>
        <updated>2025-05-30T17:13:52.000Z</updated>
        <content type="html"><![CDATA[<p>A vulnerability, which was classified as problematic, was found in PyTorch 2.6.0. Affected is the function torch.nn.functional.ctc_loss of the file aten/src/ATen/native/LossCTC.cpp. The manipulation leads to denial of service. An attack has to be approached locally. The exploit has been disclosed to the public and may be used. The name of the patch is 46fc5d8e360127361211cb237d5f9eef0223e567. It is recommended to apply a patch to fix this issue.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2025-3730">https://nvd.nist.gov/vuln/detail/CVE-2025-3730</a></li>
<li><a href="https://github.com/pytorch/pytorch/issues/150835">https://github.com/pytorch/pytorch/issues/150835</a></li>
<li><a href="https://github.com/pytorch/pytorch/pull/150981">https://github.com/pytorch/pytorch/pull/150981</a></li>
<li><a href="https://vuldb.com/?ctiid.305076">https://vuldb.com/?ctiid.305076</a></li>
<li><a href="https://vuldb.com/?id.305076">https://vuldb.com/?id.305076</a></li>
<li><a href="https://vuldb.com/?submit.553645">https://vuldb.com/?submit.553645</a></li>
<li><a href="https://github.com/pytorch/pytorch/commit/01f226bfb8f2c343f5c614a6bbf685d91160f3af">https://github.com/pytorch/pytorch/commit/01f226bfb8f2c343f5c614a6bbf685d91160f3af</a></li>
<li><a href="https://github.com/timocafe/tewart-pytorch/commit/46fc5d8e360127361211cb237d5f9eef0223e567">https://github.com/timocafe/tewart-pytorch/commit/46fc5d8e360127361211cb237d5f9eef0223e567</a></li>
<li><a href="https://github.com/advisories/GHSA-887c-mr87-cxwp">https://github.com/advisories/GHSA-887c-mr87-cxwp</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-887c-mr87-cxwp</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2025-04-16T21:30:59.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[torch] PyTorch susceptible to local Denial of Service]]></title>
        <id>https://github.com/advisories/GHSA-3749-ghw9-m3mg</id>
        <link href="https://github.com/advisories/GHSA-3749-ghw9-m3mg"/>
        <updated>2025-05-30T17:13:29.000Z</updated>
        <content type="html"><![CDATA[<p>A vulnerability, which was classified as problematic, has been found in PyTorch 2.6.0+cu124. Affected by this issue is the function torch.mkldnn_max_pool2d. The manipulation leads to denial of service. An attack has to be approached locally. The exploit has been disclosed to the public and may be used.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2025-2953">https://nvd.nist.gov/vuln/detail/CVE-2025-2953</a></li>
<li><a href="https://github.com/pytorch/pytorch/issues/149274">https://github.com/pytorch/pytorch/issues/149274</a></li>
<li><a href="https://github.com/pytorch/pytorch/issues/149274#issue-2923122269">https://github.com/pytorch/pytorch/issues/149274#issue-2923122269</a></li>
<li><a href="https://vuldb.com/?ctiid.302006">https://vuldb.com/?ctiid.302006</a></li>
<li><a href="https://vuldb.com/?id.302006">https://vuldb.com/?id.302006</a></li>
<li><a href="https://vuldb.com/?submit.521279">https://vuldb.com/?submit.521279</a></li>
<li><a href="https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models">https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models</a></li>
<li><a href="https://github.com/advisories/GHSA-3749-ghw9-m3mg">https://github.com/advisories/GHSA-3749-ghw9-m3mg</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-3749-ghw9-m3mg</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2025-03-30T18:30:24.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[apache-superset] Apache Superset: Improper authorization bypass on row level security via SQL Injection]]></title>
        <id>https://github.com/advisories/GHSA-8w7f-8pr9-xgwj</id>
        <link href="https://github.com/advisories/GHSA-8w7f-8pr9-xgwj"/>
        <updated>2025-06-03T01:10:37.000Z</updated>
        <content type="html"><![CDATA[<p>An authenticated malicious actor using specially crafted requests could bypass row level security configuration by injecting SQL into 'sqlExpression' fields. This allowed the execution of sub-queries to evade parsing defenses ultimately granting unauthorized access to data.</p>
<p>This issue affects Apache Superset: before 4.1.2.</p>
<p>Users are recommended to upgrade to version 4.1.2, which fixes the issue.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2025-48912">https://nvd.nist.gov/vuln/detail/CVE-2025-48912</a></li>
<li><a href="https://lists.apache.org/thread/ms2t2oq218hb7l628trsogo4fj7h1135">https://lists.apache.org/thread/ms2t2oq218hb7l628trsogo4fj7h1135</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2025/05/30/3">http://www.openwall.com/lists/oss-security/2025/05/30/3</a></li>
<li><a href="https://github.com/advisories/GHSA-8w7f-8pr9-xgwj">https://github.com/advisories/GHSA-8w7f-8pr9-xgwj</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-8w7f-8pr9-xgwj</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2025-05-30T09:30:27.000Z</published>
    </entry>
</feed>