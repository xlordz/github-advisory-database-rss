<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://azu.github.io/github-advisory-database-rss/pip.rss</id>
    <title>Security Advisory for Python packages hosted at PyPI.org</title>
    <updated>2024-11-30T05:01:25.191Z</updated>
    <generator>github-advisory-database-rss</generator>
    <link rel="alternate" href="https://github.com/advisories?query=type%3Areviewed+ecosystem%3Apip"/>
    <subtitle>Security Advisory for Python packages hosted at PyPI.org on GitHub</subtitle>
    <rights>github-advisory-database-rss</rights>
    <category term="CRITICAL"/>
    <category term="HIGH"/>
    <category term="MODERATE"/>
    <category term="LOW"/>
    <entry>
        <title type="html"><![CDATA[[ethyca-fides] Password Policy Bypass Vulnerability in Fides Webserver User Accept Invite API]]></title>
        <id>https://github.com/advisories/GHSA-v7vm-rhmg-8j2r</id>
        <link href="https://github.com/advisories/GHSA-v7vm-rhmg-8j2r"/>
        <updated>2024-11-26T21:43:30.000Z</updated>
        <content type="html"><![CDATA[<h3 id="summary">Summary</h3>
<p>The user invite acceptance API endpoint lacks server-side password policy enforcement, allowing users to set arbitrarily weak passwords by bypassing client-side validation. While the UI enforces password complexity requirements, direct API calls can circumvent these checks, enabling the creation of accounts with passwords as short as a single character.</p>
<h3 id="details">Details</h3>
<p>When an email messaging provider is enabled and a new user account is created in the system, an invite email containing a special link is sent to the new user's email address. This link directs the new user to a page where they can set their initial password. While the user interface implements password complexity checks, these validations are only performed client-side. The underlying <code>/api/v1/user/accept-invite</code> API endpoint does not implement the same password policy validations.</p>
<h3 id="impact">Impact</h3>
<p>This vulnerability allows an invited user to set an extremely weak password for their own account during the initial account setup process. Therefore that specific user's account can be compromised easily by an attacker guessing or brute forcing the password.</p>
<h3 id="patches">Patches</h3>
<p>The vulnerability has been patched in Fides version <code>2.50.0</code>. Users are advised to upgrade to this version or later to secure their systems against this threat.</p>
<h3 id="workarounds">Workarounds</h3>
<p>There are no workarounds.</p>
<h3 id="severity">Severity</h3>
<p>This vulnerability has been assigned a severity of LOW.</p>
<p>Using CVSS v3.1 it could be scored as <code>CVSS:3.1/AV:N/AC:L/PR:L/UI:R/S:U/C:H/I:N/A:N</code> (5.7 Medium/Moderate), but the likelihood of a user bypassing client-side password complexity rules to set their own password is very low.  </p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/ethyca/fides/security/advisories/GHSA-v7vm-rhmg-8j2r">https://github.com/ethyca/fides/security/advisories/GHSA-v7vm-rhmg-8j2r</a></li>
<li><a href="https://github.com/ethyca/fides/commit/ce664da46ab7f86d29583ebc34f2ff776f0aa6c2">https://github.com/ethyca/fides/commit/ce664da46ab7f86d29583ebc34f2ff776f0aa6c2</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-52008">https://nvd.nist.gov/vuln/detail/CVE-2024-52008</a></li>
<li><a href="https://github.com/advisories/GHSA-v7vm-rhmg-8j2r">https://github.com/advisories/GHSA-v7vm-rhmg-8j2r</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-v7vm-rhmg-8j2r</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2024-11-26T16:36:52.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[aiocpa] aiocpa contains credential harvesting code]]></title>
        <id>https://github.com/advisories/GHSA-486g-47cc-8wxf</id>
        <link href="https://github.com/advisories/GHSA-486g-47cc-8wxf"/>
        <updated>2024-11-25T22:08:58.000Z</updated>
        <content type="html"><![CDATA[<p>aiocpa is a user-facing library for generating color gradients of text. Version 0.1.13 introduced obfuscated, malicious code targeting Crypto Pay users, forwarding client credentials to a remote Telegram bot. All versions have been removed from PyPI.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://blog.pypi.org/posts/2024-11-25-aiocpa-attack-analysis">https://blog.pypi.org/posts/2024-11-25-aiocpa-attack-analysis</a></li>
<li><a href="https://github.com/pypa/advisory-database/tree/main/vulns/aiocpa/PYSEC-2024-152.yaml">https://github.com/pypa/advisory-database/tree/main/vulns/aiocpa/PYSEC-2024-152.yaml</a></li>
<li><a href="https://inspector.pypi.io/project/aiocpa/0.1.13/packages/ab/98/7343281068a2c39086d0b877219668a487508197f46e89b3f41046a4a8ba/aiocpa-0.1.13.tar.gz/aiocpa-0.1.13/cryptopay/utils/sync.py#line.44">https://inspector.pypi.io/project/aiocpa/0.1.13/packages/ab/98/7343281068a2c39086d0b877219668a487508197f46e89b3f41046a4a8ba/aiocpa-0.1.13.tar.gz/aiocpa-0.1.13/cryptopay/utils/sync.py#line.44</a></li>
<li><a href="https://github.com/advisories/GHSA-486g-47cc-8wxf">https://github.com/advisories/GHSA-486g-47cc-8wxf</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-486g-47cc-8wxf</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-11-25T22:08:57.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[libre-chat] libre-chat Path Traversal vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-3864-rp2m-2qfj</id>
        <link href="https://github.com/advisories/GHSA-3864-rp2m-2qfj"/>
        <updated>2024-11-27T19:32:39.000Z</updated>
        <content type="html"><![CDATA[<p>An issue in the upload_documents method of libre-chat v0.0.6 allows attackers to execute a path traversal via supplying a crafted filename in an uploaded file.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-52787">https://nvd.nist.gov/vuln/detail/CVE-2024-52787</a></li>
<li><a href="https://github.com/vemonet/libre-chat/issues/10">https://github.com/vemonet/libre-chat/issues/10</a></li>
<li><a href="https://github.com/vemonet/libre-chat/pull/9">https://github.com/vemonet/libre-chat/pull/9</a></li>
<li><a href="https://github.com/vemonet/libre-chat/commit/dbb8e3400e5258112179783d74c9cc54310cb72b">https://github.com/vemonet/libre-chat/commit/dbb8e3400e5258112179783d74c9cc54310cb72b</a></li>
<li><a href="https://gist.github.com/jxfzzzt/276a6e8cfbc54d2c2711bb51d8d3dff3">https://gist.github.com/jxfzzzt/276a6e8cfbc54d2c2711bb51d8d3dff3</a></li>
<li><a href="https://github.com/advisories/GHSA-3864-rp2m-2qfj">https://github.com/advisories/GHSA-3864-rp2m-2qfj</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-3864-rp2m-2qfj</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-11-25T18:33:26.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[mlflow] MLflow's excessive directory permissions allow local privilege escalation]]></title>
        <id>https://github.com/advisories/GHSA-qpgc-w4mg-6v92</id>
        <link href="https://github.com/advisories/GHSA-qpgc-w4mg-6v92"/>
        <updated>2024-11-25T19:41:57.000Z</updated>
        <content type="html"><![CDATA[<p>Excessive directory permissions in MLflow leads to local privilege escalation when using spark_udf. This behavior can be exploited by a local attacker to gain elevated permissions by using a ToCToU attack. The issue is only relevant when the spark_udf() MLflow API is called.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-27134">https://nvd.nist.gov/vuln/detail/CVE-2024-27134</a></li>
<li><a href="https://github.com/mlflow/mlflow/pull/10874">https://github.com/mlflow/mlflow/pull/10874</a></li>
<li><a href="https://github.com/mlflow/mlflow/commit/0b1d995d66a678153e01ed3040f3f4dfc16a0d6b">https://github.com/mlflow/mlflow/commit/0b1d995d66a678153e01ed3040f3f4dfc16a0d6b</a></li>
<li><a href="https://github.com/advisories/GHSA-qpgc-w4mg-6v92">https://github.com/advisories/GHSA-qpgc-w4mg-6v92</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-qpgc-w4mg-6v92</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-11-25T18:33:26.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[apache-airflow] Apache Airflow vulnerable to Improper Encoding or Escaping of Output]]></title>
        <id>https://github.com/advisories/GHSA-c392-whpc-vfpr</id>
        <link href="https://github.com/advisories/GHSA-c392-whpc-vfpr"/>
        <updated>2024-11-25T15:47:43.000Z</updated>
        <content type="html"><![CDATA[<p>Example DAG: example_inlet_event_extra.py shipped with Apache Airflow version 2.10.0 has a vulnerability that allows an authenticated attacker with only DAG trigger permission to execute arbitrary commands. If you used that example as the base of your DAGs - please review if you have not copied the dangerous example; see  <a href="https://github.com/apache/airflow/pull/41873">https://github.com/apache/airflow/pull/41873</a> &nbsp;for more information. We recommend against exposing the example DAGs in your deployment. If you must expose the example DAGs, upgrade Airflow to version 2.10.1 or later.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-45498">https://nvd.nist.gov/vuln/detail/CVE-2024-45498</a></li>
<li><a href="https://github.com/apache/airflow/pull/41873">https://github.com/apache/airflow/pull/41873</a></li>
<li><a href="https://lists.apache.org/thread/tl7lzczcqdmqj2pcpbvtjdpd2tb9561n">https://lists.apache.org/thread/tl7lzczcqdmqj2pcpbvtjdpd2tb9561n</a></li>
<li><a href="https://github.com/apache/airflow/commit/09ec2616568f8a18e0d5fe408110fae06ddf748f">https://github.com/apache/airflow/commit/09ec2616568f8a18e0d5fe408110fae06ddf748f</a></li>
<li><a href="https://github.com/advisories/GHSA-c392-whpc-vfpr">https://github.com/advisories/GHSA-c392-whpc-vfpr</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-c392-whpc-vfpr</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-09-07T09:30:31.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[neutron] OpenStack Neutron can use an incorrect ID during policy enforcement]]></title>
        <id>https://github.com/advisories/GHSA-f27h-g923-68hw</id>
        <link href="https://github.com/advisories/GHSA-f27h-g923-68hw"/>
        <updated>2024-11-27T19:32:33.000Z</updated>
        <content type="html"><![CDATA[<p>In OpenStack Neutron through 25.0.0, neutron/extensions/tagging.py can use an incorrect ID during policy enforcement. NOTE: 935883 has the "Work in Progress" status as of 2024-11-24.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-53916">https://nvd.nist.gov/vuln/detail/CVE-2024-53916</a></li>
<li><a href="https://github.com/openstack/neutron/blob/363ffa6e9e1ab5968f87d45bc2f1cb6394f48b9f/neutron/extensions/tagging.py#L138-L232">https://github.com/openstack/neutron/blob/363ffa6e9e1ab5968f87d45bc2f1cb6394f48b9f/neutron/extensions/tagging.py#L138-L232</a></li>
<li><a href="https://review.opendev.org/c/openstack/neutron/+/935883">https://review.opendev.org/c/openstack/neutron/+/935883</a></li>
<li><a href="https://review.opendev.org/q/project:openstack/neutron">https://review.opendev.org/q/project:openstack/neutron</a></li>
<li><a href="https://github.com/advisories/GHSA-f27h-g923-68hw">https://github.com/advisories/GHSA-f27h-g923-68hw</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-f27h-g923-68hw</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-11-25T00:31:55.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[starlite] Litestar allows unbounded resource consumption (DoS vulnerability) ]]></title>
        <id>https://github.com/advisories/GHSA-gjcc-jvgw-wvwj</id>
        <link href="https://github.com/advisories/GHSA-gjcc-jvgw-wvwj"/>
        <updated>2024-11-25T13:47:18.000Z</updated>
        <content type="html"><![CDATA[<h3 id="summary">Summary</h3>
<p>Litestar offers multiple methods to return a parsed representation of the request body, as well as extractors that rely on those parsers to map request content to structured data types. Multiple of those parsers do not have size limits when reading the request body into memory, which allows an attacker to cause excessive memory consumption on the server by sending large requests.</p>
<h3 id="details">Details</h3>
<p>The <code>Request</code> methods to parse json, msgpack or form-data all read the entire request stream into memory via <code>await self.body()</code> without a prior size check or size limit. There may be other places (e.g. extractors) where this can happen.</p>
<p>For most formats, a configurable size limit would be sufficient to mitigate this issue. The total request size can also be limited by a proxy (e.g. nginx) in front of the actual application as a workaround. However, for applications that actually want to accept large file uploads via <code>multipart/form-data</code>, a simple size limit would not be practical. The multipart parser currently used by Litestar expects a single byte string as input and does not support incremental parsing via <code>Request.stream()</code>. Applications could bypass the Litestar parser and use a <a href="https://pypi.org/project/multipart/">streaming parser</a> to read from <code>Request.stream()</code> instead, but that would not work with extractors and other features of the framework. Switching the parser for a different implementation is currently not possible via public APIs.</p>
<h3 id="poc">PoC</h3>
<p>Start an applications that accesses <code>Request.json()</code>, <code>Request.msgpack()</code> or <code>Request.form()</code> or uses an extractor that relies on those parsers internally, and send a large request with a matching content type. The actual content of the request does not matter. For example: <code>curl -F "foo=&lt;/dev/random" http://127.0.0.1:8000/</code>) for <code>multipart/form-data</code>. Server memory consumption will increase very quickly until memory (and swap) are exhausted.</p>
<h3 id="impact">Impact</h3>
<p>This is a denial of service (DoS) vulnerability affecting all Litestar applications that process json, msgpack or form-data submission requests.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/litestar-org/litestar/security/advisories/GHSA-gjcc-jvgw-wvwj">https://github.com/litestar-org/litestar/security/advisories/GHSA-gjcc-jvgw-wvwj</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-52581">https://nvd.nist.gov/vuln/detail/CVE-2024-52581</a></li>
<li><a href="https://github.com/litestar-org/litestar/commit/53c1473b5ff7502816a9a339ffc90731bb0c2138">https://github.com/litestar-org/litestar/commit/53c1473b5ff7502816a9a339ffc90731bb0c2138</a></li>
<li><a href="https://github.com/litestar-org/litestar/blob/main/litestar/_multipart.py#L97">https://github.com/litestar-org/litestar/blob/main/litestar/_multipart.py#L97</a></li>
<li><a href="https://github.com/litestar-org/litestar/security/advisories/GHSA-p24m-863f-fm6q">https://github.com/litestar-org/litestar/security/advisories/GHSA-p24m-863f-fm6q</a></li>
<li><a href="https://github.com/advisories/GHSA-gjcc-jvgw-wvwj">https://github.com/advisories/GHSA-gjcc-jvgw-wvwj</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-gjcc-jvgw-wvwj</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-11-20T21:38:58.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[litestar] Litestar allows unbounded resource consumption (DoS vulnerability) ]]></title>
        <id>https://github.com/advisories/GHSA-gjcc-jvgw-wvwj</id>
        <link href="https://github.com/advisories/GHSA-gjcc-jvgw-wvwj"/>
        <updated>2024-11-25T13:47:18.000Z</updated>
        <content type="html"><![CDATA[<h3 id="summary">Summary</h3>
<p>Litestar offers multiple methods to return a parsed representation of the request body, as well as extractors that rely on those parsers to map request content to structured data types. Multiple of those parsers do not have size limits when reading the request body into memory, which allows an attacker to cause excessive memory consumption on the server by sending large requests.</p>
<h3 id="details">Details</h3>
<p>The <code>Request</code> methods to parse json, msgpack or form-data all read the entire request stream into memory via <code>await self.body()</code> without a prior size check or size limit. There may be other places (e.g. extractors) where this can happen.</p>
<p>For most formats, a configurable size limit would be sufficient to mitigate this issue. The total request size can also be limited by a proxy (e.g. nginx) in front of the actual application as a workaround. However, for applications that actually want to accept large file uploads via <code>multipart/form-data</code>, a simple size limit would not be practical. The multipart parser currently used by Litestar expects a single byte string as input and does not support incremental parsing via <code>Request.stream()</code>. Applications could bypass the Litestar parser and use a <a href="https://pypi.org/project/multipart/">streaming parser</a> to read from <code>Request.stream()</code> instead, but that would not work with extractors and other features of the framework. Switching the parser for a different implementation is currently not possible via public APIs.</p>
<h3 id="poc">PoC</h3>
<p>Start an applications that accesses <code>Request.json()</code>, <code>Request.msgpack()</code> or <code>Request.form()</code> or uses an extractor that relies on those parsers internally, and send a large request with a matching content type. The actual content of the request does not matter. For example: <code>curl -F "foo=&lt;/dev/random" http://127.0.0.1:8000/</code>) for <code>multipart/form-data</code>. Server memory consumption will increase very quickly until memory (and swap) are exhausted.</p>
<h3 id="impact">Impact</h3>
<p>This is a denial of service (DoS) vulnerability affecting all Litestar applications that process json, msgpack or form-data submission requests.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/litestar-org/litestar/security/advisories/GHSA-gjcc-jvgw-wvwj">https://github.com/litestar-org/litestar/security/advisories/GHSA-gjcc-jvgw-wvwj</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-52581">https://nvd.nist.gov/vuln/detail/CVE-2024-52581</a></li>
<li><a href="https://github.com/litestar-org/litestar/commit/53c1473b5ff7502816a9a339ffc90731bb0c2138">https://github.com/litestar-org/litestar/commit/53c1473b5ff7502816a9a339ffc90731bb0c2138</a></li>
<li><a href="https://github.com/litestar-org/litestar/blob/main/litestar/_multipart.py#L97">https://github.com/litestar-org/litestar/blob/main/litestar/_multipart.py#L97</a></li>
<li><a href="https://github.com/litestar-org/litestar/security/advisories/GHSA-p24m-863f-fm6q">https://github.com/litestar-org/litestar/security/advisories/GHSA-p24m-863f-fm6q</a></li>
<li><a href="https://github.com/advisories/GHSA-gjcc-jvgw-wvwj">https://github.com/advisories/GHSA-gjcc-jvgw-wvwj</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-gjcc-jvgw-wvwj</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-11-20T21:38:58.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[langchain] langchain arbitrary code execution vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-2qmj-7962-cjq8</id>
        <link href="https://github.com/advisories/GHSA-2qmj-7962-cjq8"/>
        <updated>2024-11-22T22:42:15.000Z</updated>
        <content type="html"><![CDATA[<p>An issue in langchain allows an attacker to execute arbitrary code via the PALChain in the python exec method.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-36258">https://nvd.nist.gov/vuln/detail/CVE-2023-36258</a></li>
<li><a href="https://github.com/pypa/advisory-database/tree/main/vulns/langchain/PYSEC-2023-98.yaml">https://github.com/pypa/advisory-database/tree/main/vulns/langchain/PYSEC-2023-98.yaml</a></li>
<li><a href="https://github.com/langchain-ai/langchain/issues/5872">https://github.com/langchain-ai/langchain/issues/5872</a></li>
<li><a href="https://github.com/langchain-ai/langchain/issues/5872#issuecomment-1697785619">https://github.com/langchain-ai/langchain/issues/5872#issuecomment-1697785619</a></li>
<li><a href="https://github.com/langchain-ai/langchain/pull/6003">https://github.com/langchain-ai/langchain/pull/6003</a></li>
<li><a href="https://github.com/langchain-ai/langchain/pull/7870">https://github.com/langchain-ai/langchain/pull/7870</a></li>
<li><a href="https://github.com/langchain-ai/langchain/pull/8425">https://github.com/langchain-ai/langchain/pull/8425</a></li>
<li><a href="https://github.com/langchain-ai/langchain/commit/8ba9835b925473655914f63822775679e03ea137">https://github.com/langchain-ai/langchain/commit/8ba9835b925473655914f63822775679e03ea137</a></li>
<li><a href="https://github.com/langchain-ai/langchain/commit/e294ba475a355feb95003ed8f1a2b99942509a9e">https://github.com/langchain-ai/langchain/commit/e294ba475a355feb95003ed8f1a2b99942509a9e</a></li>
<li><a href="https://github.com/langchain-ai/langchain/commit/fab24457bcf8ede882abd11419769c92bc4e7751">https://github.com/langchain-ai/langchain/commit/fab24457bcf8ede882abd11419769c92bc4e7751</a></li>
<li><a href="https://github.com/advisories/GHSA-2qmj-7962-cjq8">https://github.com/advisories/GHSA-2qmj-7962-cjq8</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-2qmj-7962-cjq8</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2023-07-03T21:30:57.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[transformers] transformers has a Deserialization of Untrusted Data vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-3863-2447-669p</id>
        <link href="https://github.com/advisories/GHSA-3863-2447-669p"/>
        <updated>2024-11-22T20:44:49.000Z</updated>
        <content type="html"><![CDATA[<p>Deserialization of Untrusted Data in GitHub repository huggingface/transformers prior to 4.36.0.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-6730">https://nvd.nist.gov/vuln/detail/CVE-2023-6730</a></li>
<li><a href="https://github.com/huggingface/transformers/commit/1d63b0ec361e7a38f1339385e8a5a855085532ce">https://github.com/huggingface/transformers/commit/1d63b0ec361e7a38f1339385e8a5a855085532ce</a></li>
<li><a href="https://huntr.com/bounties/423611ee-7a2a-442a-babb-3ed2f8385c16">https://huntr.com/bounties/423611ee-7a2a-442a-babb-3ed2f8385c16</a></li>
<li><a href="https://github.com/pypa/advisory-database/tree/main/vulns/transformers/PYSEC-2023-300.yaml">https://github.com/pypa/advisory-database/tree/main/vulns/transformers/PYSEC-2023-300.yaml</a></li>
<li><a href="https://github.com/advisories/GHSA-3863-2447-669p">https://github.com/advisories/GHSA-3863-2447-669p</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-3863-2447-669p</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2023-12-19T15:30:30.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[vantage6-node] vantage6-server node accepts non-whitelisted algorithms from malicious server]]></title>
        <id>https://github.com/advisories/GHSA-vc3v-ppc7-v486</id>
        <link href="https://github.com/advisories/GHSA-vc3v-ppc7-v486"/>
        <updated>2024-11-22T20:43:07.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>A node does not check if an image is allowed to run if a <code>parent_id</code> is set. A malicious party that breaches the server may modify it to set a fake <code>parent_id</code> and send a task of a non-whitelisted algorithm. The node will then execute it because the <code>parent_id</code> that is set prevents checks from being run. Relevant node code <a href="https://github.com/vantage6/vantage6/blob/version/4.1.1/vantage6-node/vantage6/node/docker/docker_manager.py#L265-L268">here</a></p>
<p>This impacts all servers that are breached by an expert user</p>
<h3 id="patches">Patches</h3>
<p>Fixed in v4.1.2</p>
<h3 id="workarounds">Workarounds</h3>
<p>None</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/vantage6/vantage6/security/advisories/GHSA-vc3v-ppc7-v486">https://github.com/vantage6/vantage6/security/advisories/GHSA-vc3v-ppc7-v486</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-47631">https://nvd.nist.gov/vuln/detail/CVE-2023-47631</a></li>
<li><a href="https://github.com/vantage6/vantage6/commit/bf83521eb12fa80aa5fc92ef1692010a9a7f8243">https://github.com/vantage6/vantage6/commit/bf83521eb12fa80aa5fc92ef1692010a9a7f8243</a></li>
<li><a href="https://github.com/vantage6/vantage6/blob/version/4.1.1/vantage6-node/vantage6/node/docker/docker_manager.py#L265-L268">https://github.com/vantage6/vantage6/blob/version/4.1.1/vantage6-node/vantage6/node/docker/docker_manager.py#L265-L268</a></li>
<li><a href="https://github.com/pypa/advisory-database/tree/main/vulns/vantage6-node/PYSEC-2023-303.yaml">https://github.com/pypa/advisory-database/tree/main/vulns/vantage6-node/PYSEC-2023-303.yaml</a></li>
<li><a href="https://github.com/pypa/advisory-database/tree/main/vulns/vantage6-server/PYSEC-2023-304.yaml">https://github.com/pypa/advisory-database/tree/main/vulns/vantage6-server/PYSEC-2023-304.yaml</a></li>
<li><a href="https://github.com/advisories/GHSA-vc3v-ppc7-v486">https://github.com/advisories/GHSA-vc3v-ppc7-v486</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-vc3v-ppc7-v486</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2023-11-14T22:21:57.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[transformers] transformers has Insecure Temporary File]]></title>
        <id>https://github.com/advisories/GHSA-282v-666c-3fvg</id>
        <link href="https://github.com/advisories/GHSA-282v-666c-3fvg"/>
        <updated>2024-11-22T20:34:49.000Z</updated>
        <content type="html"><![CDATA[<p>Insecure Temporary File in GitHub repository huggingface/transformers 4.29.2 and prior. A fix is available at commit 80ca92470938bbcc348e2d9cf4734c7c25cb1c43 and has been released as part of version 4.30.0.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-2800">https://nvd.nist.gov/vuln/detail/CVE-2023-2800</a></li>
<li><a href="https://github.com/huggingface/transformers/commit/80ca92470938bbcc348e2d9cf4734c7c25cb1c43">https://github.com/huggingface/transformers/commit/80ca92470938bbcc348e2d9cf4734c7c25cb1c43</a></li>
<li><a href="https://huntr.dev/bounties/a3867b4e-6701-4418-8c20-3c6e7084a44a">https://huntr.dev/bounties/a3867b4e-6701-4418-8c20-3c6e7084a44a</a></li>
<li><a href="https://github.com/huggingface/transformers/pull/23372">https://github.com/huggingface/transformers/pull/23372</a></li>
<li><a href="https://github.com/pypa/advisory-database/tree/main/vulns/transformers/PYSEC-2023-299.yaml">https://github.com/pypa/advisory-database/tree/main/vulns/transformers/PYSEC-2023-299.yaml</a></li>
<li><a href="https://github.com/advisories/GHSA-282v-666c-3fvg">https://github.com/advisories/GHSA-282v-666c-3fvg</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-282v-666c-3fvg</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-05-18T18:30:35.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[sentry] Sentry improper error handling leaks Application Integration Client Secret]]></title>
        <id>https://github.com/advisories/GHSA-v5h2-q2w4-gpcx</id>
        <link href="https://github.com/advisories/GHSA-v5h2-q2w4-gpcx"/>
        <updated>2024-11-22T22:28:11.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>During routine testing, we identified a scenario where a specific error message generated by our platform could include a plaintext Client ID and Client Secret for an application integration. The Client ID and Client Secret would not be displayed in the UI, but would be returned in the underlying HTTP response to the end user. This could occur under the following conditions:</p>
<ul>
<li>An app installation made use of a <a href="https://docs.sentry.io/organization/integrations/integration-platform/ui-components/formfield/#select">Search UI component</a> with the <code>async</code> flag set to true (default: true),</li>
<li>A user types types into the Search Component which creates a request to the third-party for search or query results, and</li>
<li>That third-party response may then fail validation and Sentry would return the <code>select-requester.invalid-response</code> error code along with a serialized version of a Sentry application containing the integration Client Secret.</li>
</ul>
<p>Should this error be found, it's reasonable to assume the potential exposure of an integration Client Secret. However, an ID and Secret pair alone does not provide direct access to any data. For that secret to be abused an attacker would also need to obtain a valid API token for a Sentry application. </p>
<h4 id="impact-for-saas-users">Impact for SaaS Users</h4>
<p>For Sentry SaaS users, we have confirmed that only a single application integration was impacted and the owner has rotated their Client Secret. We have also confirmed that no abuse of the leaked Client Secret has occurred. </p>
<h4 id="potential-impact-for-self-hosted-users">Potential Impact for Self-Hosted Users</h4>
<p>Sentry self-hosted does not ship with any application integrations. This could only impact self-hosted users that maintain their own integrations. In that case, search for a <code>select-requester.invalid-response</code> event. Please note that this error was also shared with another event unrelated to this advisory so you will also need to review the parameters logged for each named event. You may review <a href="https://github.com/getsentry/sentry/blob/4a448fbb0d0b416fef9ee0ab26579e0dc16f21b7/src/sentry/sentry_apps/external_requests/select_requester.py#L78-L123">select_requester.py</a> for the instances where these errors can be generated. With the security fix this is no longer a shared event type.</p>
<h3 id="patches">Patches</h3>
<ul>
<li>Sentry SaaS users do not need to take any action.</li>
<li>The next release will include the fix for Sentry self-hosted users.</li>
</ul>
<h3 id="workarounds">Workarounds</h3>
<ul>
<li>Sentry self-hosted users may not install version 24.11.0 and instead wait for the next release.</li>
<li>If your self-hosted instance is already running the affected version, consider downgrading to <a href="https://github.com/getsentry/sentry/releases/tag/24.10.0">24.10.0</a>.</li>
</ul>
<h3 id="references">References</h3>
<ul>
<li>Bug introduced in <a href="https://github.com/getsentry/sentry/pull/79377">https://github.com/getsentry/sentry/pull/79377</a></li>
<li>Security fix in <a href="https://github.com/getsentry/sentry/pull/81038">https://github.com/getsentry/sentry/pull/81038</a></li>
</ul>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/getsentry/sentry/security/advisories/GHSA-v5h2-q2w4-gpcx">https://github.com/getsentry/sentry/security/advisories/GHSA-v5h2-q2w4-gpcx</a></li>
<li><a href="https://github.com/getsentry/sentry/pull/79377">https://github.com/getsentry/sentry/pull/79377</a></li>
<li><a href="https://github.com/getsentry/sentry/pull/81038">https://github.com/getsentry/sentry/pull/81038</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-53253">https://nvd.nist.gov/vuln/detail/CVE-2024-53253</a></li>
<li><a href="https://github.com/advisories/GHSA-v5h2-q2w4-gpcx">https://github.com/advisories/GHSA-v5h2-q2w4-gpcx</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-v5h2-q2w4-gpcx</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-11-22T20:27:19.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[lief] LIEF obtain sensitive information via the name parameter]]></title>
        <id>https://github.com/advisories/GHSA-377p-g8gr-5wpg</id>
        <link href="https://github.com/advisories/GHSA-377p-g8gr-5wpg"/>
        <updated>2024-11-22T20:26:57.000Z</updated>
        <content type="html"><![CDATA[<p>An issue in LIEF v.0.14.1 allows a local attacker to obtain sensitive information via the name parameter of the machd_reader.c component.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-31636">https://nvd.nist.gov/vuln/detail/CVE-2024-31636</a></li>
<li><a href="https://github.com/lief-project/LIEF/issues/1038">https://github.com/lief-project/LIEF/issues/1038</a></li>
<li><a href="https://github.com/lief-project/LIEF">https://github.com/lief-project/LIEF</a></li>
<li><a href="https://github.com/lief-project/LIEF/commit/307e113f8e00b034f0a5f1baa33e54d636c52ea3">https://github.com/lief-project/LIEF/commit/307e113f8e00b034f0a5f1baa33e54d636c52ea3</a></li>
<li><a href="https://github.com/advisories/GHSA-377p-g8gr-5wpg">https://github.com/advisories/GHSA-377p-g8gr-5wpg</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-377p-g8gr-5wpg</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2024-05-03T18:30:37.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[tornado] Tornado has an HTTP cookie parsing DoS vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-8w49-h785-mj3c</id>
        <link href="https://github.com/advisories/GHSA-8w49-h785-mj3c"/>
        <updated>2024-11-22T22:27:53.000Z</updated>
        <content type="html"><![CDATA[<p>The algorithm used for parsing HTTP cookies in Tornado versions prior to 6.4.2 sometimes has quadratic complexity, leading to excessive CPU consumption when parsing maliciously-crafted cookie headers. This parsing occurs in the event loop thread and may block the processing of other requests.</p>
<p>See also CVE-2024-7592 for a similar vulnerability in cpython.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/tornadoweb/tornado/security/advisories/GHSA-8w49-h785-mj3c">https://github.com/tornadoweb/tornado/security/advisories/GHSA-8w49-h785-mj3c</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-52804">https://nvd.nist.gov/vuln/detail/CVE-2024-52804</a></li>
<li><a href="https://github.com/tornadoweb/tornado/commit/d5ba4a1695fbf7c6a3e54313262639b198291533">https://github.com/tornadoweb/tornado/commit/d5ba4a1695fbf7c6a3e54313262639b198291533</a></li>
<li><a href="https://github.com/advisories/GHSA-8w49-h785-mj3c">https://github.com/advisories/GHSA-8w49-h785-mj3c</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-8w49-h785-mj3c</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-11-22T20:26:41.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[patchelf] Patchelf out-of-bounds read]]></title>
        <id>https://github.com/advisories/GHSA-5pcj-3m26-w633</id>
        <link href="https://github.com/advisories/GHSA-5pcj-3m26-w633"/>
        <updated>2024-11-26T18:48:34.000Z</updated>
        <content type="html"><![CDATA[<p>Patchelf v0.9 was discovered to contain an out-of-bounds read via the function modifyRPath at src/patchelf.cc.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-44940">https://nvd.nist.gov/vuln/detail/CVE-2022-44940</a></li>
<li><a href="https://github.com/NixOS/patchelf/pull/419">https://github.com/NixOS/patchelf/pull/419</a></li>
<li><a href="https://github.com/pypa/advisory-database/tree/main/vulns/patchelf/PYSEC-2022-43144.yaml">https://github.com/pypa/advisory-database/tree/main/vulns/patchelf/PYSEC-2022-43144.yaml</a></li>
<li><a href="https://github.com/pypa/advisory-database/tree/main/vulns/pypatchelf/PYSEC-2022-43151.yaml">https://github.com/pypa/advisory-database/tree/main/vulns/pypatchelf/PYSEC-2022-43151.yaml</a></li>
<li><a href="https://github.com/advisories/GHSA-5pcj-3m26-w633">https://github.com/advisories/GHSA-5pcj-3m26-w633</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-5pcj-3m26-w633</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-12-20T00:30:29.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[pyboolector] Boolector use after free]]></title>
        <id>https://github.com/advisories/GHSA-g58x-799h-v9h6</id>
        <link href="https://github.com/advisories/GHSA-g58x-799h-v9h6"/>
        <updated>2024-11-26T18:15:06.000Z</updated>
        <content type="html"><![CDATA[<p>In parser/btorsmt2.c in Boolector 3.0.0, opening a specially crafted input file leads to a use after free in get_failed_assumptions or btor_delete.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2019-7560">https://nvd.nist.gov/vuln/detail/CVE-2019-7560</a></li>
<li><a href="https://github.com/Boolector/boolector/issues/28">https://github.com/Boolector/boolector/issues/28</a></li>
<li><a href="https://github.com/Boolector/boolector/issues/29">https://github.com/Boolector/boolector/issues/29</a></li>
<li><a href="https://github.com/pypa/advisory-database/tree/main/vulns/pyboolector/PYSEC-2019-252.yaml">https://github.com/pypa/advisory-database/tree/main/vulns/pyboolector/PYSEC-2019-252.yaml</a></li>
<li><a href="https://github.com/advisories/GHSA-g58x-799h-v9h6">https://github.com/advisories/GHSA-g58x-799h-v9h6</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-g58x-799h-v9h6</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-05-14T01:36:13.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[pglast] libpg_query memory leak]]></title>
        <id>https://github.com/advisories/GHSA-vm3q-58wm-2r2x</id>
        <link href="https://github.com/advisories/GHSA-vm3q-58wm-2r2x"/>
        <updated>2024-11-26T18:14:49.000Z</updated>
        <content type="html"><![CDATA[<p>An issue was discovered in libpg_query 10-1.0.2. There is a memory leak in pg_query_raw_parse in pg_query_parse.c, which might lead to a denial of service.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2018-18482">https://nvd.nist.gov/vuln/detail/CVE-2018-18482</a></li>
<li><a href="https://github.com/lfittl/libpg_query/issues/49">https://github.com/lfittl/libpg_query/issues/49</a></li>
<li><a href="https://github.com/pypa/advisory-database/tree/main/vulns/pg-query/PYSEC-2018-154.yaml">https://github.com/pypa/advisory-database/tree/main/vulns/pg-query/PYSEC-2018-154.yaml</a></li>
<li><a href="https://github.com/advisories/GHSA-vm3q-58wm-2r2x">https://github.com/advisories/GHSA-vm3q-58wm-2r2x</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-vm3q-58wm-2r2x</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-05-13T01:50:42.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[pg-query] libpg_query memory leak]]></title>
        <id>https://github.com/advisories/GHSA-vm3q-58wm-2r2x</id>
        <link href="https://github.com/advisories/GHSA-vm3q-58wm-2r2x"/>
        <updated>2024-11-26T18:14:49.000Z</updated>
        <content type="html"><![CDATA[<p>An issue was discovered in libpg_query 10-1.0.2. There is a memory leak in pg_query_raw_parse in pg_query_parse.c, which might lead to a denial of service.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2018-18482">https://nvd.nist.gov/vuln/detail/CVE-2018-18482</a></li>
<li><a href="https://github.com/lfittl/libpg_query/issues/49">https://github.com/lfittl/libpg_query/issues/49</a></li>
<li><a href="https://github.com/pypa/advisory-database/tree/main/vulns/pg-query/PYSEC-2018-154.yaml">https://github.com/pypa/advisory-database/tree/main/vulns/pg-query/PYSEC-2018-154.yaml</a></li>
<li><a href="https://github.com/advisories/GHSA-vm3q-58wm-2r2x">https://github.com/advisories/GHSA-vm3q-58wm-2r2x</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-vm3q-58wm-2r2x</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-05-13T01:50:42.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[pydoris] Apache Doris hardcoded key and IV]]></title>
        <id>https://github.com/advisories/GHSA-98j2-hfxp-8h8r</id>
        <link href="https://github.com/advisories/GHSA-98j2-hfxp-8h8r"/>
        <updated>2024-11-22T20:22:34.000Z</updated>
        <content type="html"><![CDATA[<p>Apache Doris, prior to 1.0.0, used a hardcoded key and IV to initialize the cipher used for ldap password, which may lead to information disclosure.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-23942">https://nvd.nist.gov/vuln/detail/CVE-2022-23942</a></li>
<li><a href="https://lists.apache.org/thread/com2dyzp3bn2rdrotry90q2zzord4tvt">https://lists.apache.org/thread/com2dyzp3bn2rdrotry90q2zzord4tvt</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2022/04/26/2">http://www.openwall.com/lists/oss-security/2022/04/26/2</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2022/04/26/3">http://www.openwall.com/lists/oss-security/2022/04/26/3</a></li>
<li><a href="https://github.com/pypa/advisory-database/tree/main/vulns/pydoris/PYSEC-2022-43150.yaml">https://github.com/pypa/advisory-database/tree/main/vulns/pydoris/PYSEC-2022-43150.yaml</a></li>
<li><a href="https://github.com/advisories/GHSA-98j2-hfxp-8h8r">https://github.com/advisories/GHSA-98j2-hfxp-8h8r</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-98j2-hfxp-8h8r</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-04-27T00:00:20.000Z</published>
    </entry>
</feed>