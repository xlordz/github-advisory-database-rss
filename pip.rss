<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://azu.github.io/github-advisory-database-rss/pip.rss</id>
    <title>Security Advisory for Python packages hosted at PyPI.org</title>
    <updated>2024-11-13T06:01:32.632Z</updated>
    <generator>github-advisory-database-rss</generator>
    <link rel="alternate" href="https://github.com/advisories?query=type%3Areviewed+ecosystem%3Apip"/>
    <subtitle>Security Advisory for Python packages hosted at PyPI.org on GitHub</subtitle>
    <rights>github-advisory-database-rss</rights>
    <category term="CRITICAL"/>
    <category term="HIGH"/>
    <category term="MODERATE"/>
    <category term="LOW"/>
    <entry>
        <title type="html"><![CDATA[[ansible-core] Ansible-Core vulnerable to content protections bypass]]></title>
        <id>https://github.com/advisories/GHSA-99w6-3xph-cx78</id>
        <link href="https://github.com/advisories/GHSA-99w6-3xph-cx78"/>
        <updated>2024-11-12T21:35:38.000Z</updated>
        <content type="html"><![CDATA[<p>A flaw was found in Ansible-Core. This vulnerability allows attackers to bypass unsafe content protections using the hostvars object to reference and execute templated content. This issue can lead to arbitrary code execution if remote data or module outputs are improperly templated within playbooks.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-11079">https://nvd.nist.gov/vuln/detail/CVE-2024-11079</a></li>
<li><a href="https://access.redhat.com/security/cve/CVE-2024-11079">https://access.redhat.com/security/cve/CVE-2024-11079</a></li>
<li><a href="https://bugzilla.redhat.com/show_bug.cgi?id=2325171">https://bugzilla.redhat.com/show_bug.cgi?id=2325171</a></li>
<li><a href="https://github.com/ansible/ansible/pull/84299">https://github.com/ansible/ansible/pull/84299</a></li>
<li><a href="https://github.com/advisories/GHSA-99w6-3xph-cx78">https://github.com/advisories/GHSA-99w6-3xph-cx78</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-99w6-3xph-cx78</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2024-11-12T00:30:36.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[pywasm3] wasm3 uncontrolled memory allocation vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-fmq6-4w57-2w3v</id>
        <link href="https://github.com/advisories/GHSA-fmq6-4w57-2w3v"/>
        <updated>2024-11-12T20:46:55.000Z</updated>
        <content type="html"><![CDATA[<p>wasm3 at commit 139076a contains a memory leak in the Read_utf8 function.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-27529">https://nvd.nist.gov/vuln/detail/CVE-2024-27529</a></li>
<li><a href="https://github.com/wasm3/wasm3/issues/462">https://github.com/wasm3/wasm3/issues/462</a></li>
<li><a href="https://gist.github.com/haruki3hhh/ac70bd83b9c0ed1de6289d818488da78">https://gist.github.com/haruki3hhh/ac70bd83b9c0ed1de6289d818488da78</a></li>
<li><a href="https://github.com/wasm3/wasm3/pull/490">https://github.com/wasm3/wasm3/pull/490</a></li>
<li><a href="https://github.com/wasm3/wasm3/commit/526c1251b64e6e9fdc0d40c768ae46cd20338594">https://github.com/wasm3/wasm3/commit/526c1251b64e6e9fdc0d40c768ae46cd20338594</a></li>
<li><a href="https://github.com/advisories/GHSA-fmq6-4w57-2w3v">https://github.com/advisories/GHSA-fmq6-4w57-2w3v</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-fmq6-4w57-2w3v</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-11-09T00:30:42.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[langchain-community] Langchain SQL Injection vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-45pg-36p6-83v9</id>
        <link href="https://github.com/advisories/GHSA-45pg-36p6-83v9"/>
        <updated>2024-11-12T19:58:00.000Z</updated>
        <content type="html"><![CDATA[<p>A vulnerability in the GraphCypherQAChain class of langchain-ai/langchain version 0.2.5 allows for SQL injection through prompt injection. This vulnerability can lead to unauthorized data manipulation, data exfiltration, denial of service (DoS) by deleting all data, breaches in multi-tenant security environments, and data integrity issues. Attackers can create, update, or delete nodes and relationships without proper authorization, extract sensitive data, disrupt services, access data across different tenants, and compromise the integrity of the database.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-8309">https://nvd.nist.gov/vuln/detail/CVE-2024-8309</a></li>
<li><a href="https://github.com/langchain-ai/langchain/commit/c2a3021bb0c5f54649d380b42a0684ca5778c255">https://github.com/langchain-ai/langchain/commit/c2a3021bb0c5f54649d380b42a0684ca5778c255</a></li>
<li><a href="https://huntr.com/bounties/8f4ad910-7fdc-4089-8f0a-b5df5f32e7c5">https://huntr.com/bounties/8f4ad910-7fdc-4089-8f0a-b5df5f32e7c5</a></li>
<li><a href="https://github.com/pypa/advisory-database/tree/main/vulns/langchain/PYSEC-2024-115.yaml">https://github.com/pypa/advisory-database/tree/main/vulns/langchain/PYSEC-2024-115.yaml</a></li>
<li><a href="https://github.com/langchain-ai/langchain/commit/64c317eba05fbac0c6a6fc5aa192bc0d7130972e">https://github.com/langchain-ai/langchain/commit/64c317eba05fbac0c6a6fc5aa192bc0d7130972e</a></li>
<li><a href="https://github.com/advisories/GHSA-45pg-36p6-83v9">https://github.com/advisories/GHSA-45pg-36p6-83v9</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-45pg-36p6-83v9</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2024-10-29T15:32:05.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[PheonixAppAPI] PheonixAppAPI has visible Encoding Maps]]></title>
        <id>https://github.com/advisories/GHSA-258h-f687-4226</id>
        <link href="https://github.com/advisories/GHSA-258h-f687-4226"/>
        <updated>2024-11-12T19:39:56.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>This is a kind of moderate issue. The impact is not big for normal users but can be for users who want to secure their code/files/etc.</p>
<p>The issue is that the map of encoding/decoding languages are visible in code. </p>
<h3 id="patches">Patches</h3>
<p>The Problem was patched in 0.2.5, so you should try to upgrade to the 0.2.5 version.</p>
<h3 id="for-025-version-users">For 0.2.5 version users</h3>
<p>Please run the post_install.py file inside the Scripts folder after downloading from pip.</p>
<h3 id="workarounds">Workarounds</h3>
<p>There is a fix to this problem but it requires modifying the code. Modifying the code can lead to more issues.</p>
<h3 id="references">References</h3>
<p>There are currently no references to this problem.</p>
<h3 id="note-if-you-get-a-error-regarding-a-function-like---get_key-or-something-like-that-please-re-run-the-file-post_installpy-inside-scripts-folder">NOTE: If you get a error regarding a function like -&gt; get_key() or something like that, please re-run the file post_install.py inside Scripts folder</h3>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/AkshuDev/PheonixAppAPI/security/advisories/GHSA-258h-f687-4226">https://github.com/AkshuDev/PheonixAppAPI/security/advisories/GHSA-258h-f687-4226</a></li>
<li><a href="https://github.com/AkshuDev/PheonixAppAPI/commit/0937419e323f5ea9013d43dc1b82fef9d7e05044">https://github.com/AkshuDev/PheonixAppAPI/commit/0937419e323f5ea9013d43dc1b82fef9d7e05044</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-41951">https://nvd.nist.gov/vuln/detail/CVE-2024-41951</a></li>
<li><a href="https://github.com/advisories/GHSA-258h-f687-4226">https://github.com/advisories/GHSA-258h-f687-4226</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-258h-f687-4226</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-07-31T21:04:28.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[apache-airflow] Apache Airflow vulnerable to Insertion of Sensitive Information Into Sent Data]]></title>
        <id>https://github.com/advisories/GHSA-j857-2pwm-jjmm</id>
        <link href="https://github.com/advisories/GHSA-j857-2pwm-jjmm"/>
        <updated>2024-11-08T18:23:52.000Z</updated>
        <content type="html"><![CDATA[<p>Airflow versions before 2.10.3 have a vulnerability that allows authenticated users with audit log access to see sensitive values in audit logs which they should not see.&nbsp;When sensitive variables were set via airflow CLI, values of those variables appeared in the audit log and were stored unencrypted in the Airflow database. While this risk is limited to users with audit log access, it is recommended to upgrade to Airflow 2.10.3 or a later version, which addresses this issue. Users who previously used the CLI to set secret variables should manually delete entries with those variables from the log table.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-50378">https://nvd.nist.gov/vuln/detail/CVE-2024-50378</a></li>
<li><a href="https://github.com/apache/airflow/pull/43123">https://github.com/apache/airflow/pull/43123</a></li>
<li><a href="https://lists.apache.org/thread/17rxys384lzfd6nhm3fztzgvk47zy7jb">https://lists.apache.org/thread/17rxys384lzfd6nhm3fztzgvk47zy7jb</a></li>
<li><a href="https://github.com/advisories/GHSA-j857-2pwm-jjmm">https://github.com/advisories/GHSA-j857-2pwm-jjmm</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-j857-2pwm-jjmm</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2024-11-08T15:31:12.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[changedetection.io] changedetection.io path traversal using file URI scheme without supplying hostname]]></title>
        <id>https://github.com/advisories/GHSA-6jrf-rcjf-245r</id>
        <link href="https://github.com/advisories/GHSA-6jrf-rcjf-245r"/>
        <updated>2024-11-08T13:55:32.000Z</updated>
        <content type="html"><![CDATA[<h3 id="summary">Summary</h3>
<p>The validation for the file URI scheme falls short, and results in an attacker being able to read any file on the system. This issue only affects instances with a webdriver enabled, and <code>ALLOW_FILE_URI</code> false or not defined.</p>
<h3 id="details">Details</h3>
<p>The check used for URL protocol, <code>is_safe_url</code>, allows <code>file:</code> as a URL scheme:</p>
<p><a href="https://github.com/dgtlmoon/changedetection.io/blob/e0abf0b50507a8a3d0c1d8522ab23519b3e4cdf4/changedetectionio/model/Watch.py#L11-L13">https://github.com/dgtlmoon/changedetection.io/blob/e0abf0b50507a8a3d0c1d8522ab23519b3e4cdf4/changedetectionio/model/Watch.py#L11-L13</a></p>
<p>It later checks if local files are permitted, but one of the preconditions for the check is that the URL starts with <code>file://</code>. The issue comes with the fact that the file URI scheme is not required to have double slashes.</p>
<blockquote>
<p>A valid file URI must therefore begin with either <code>file:/path</code> (no hostname), <code>file:///path</code> (empty hostname), or <code>file://hostname/path</code>.
— <a href="https://en.wikipedia.org/wiki/File_URI_scheme#Number_of_slash_characters">Wikipedia</a></p>
</blockquote>
<p><a href="https://github.com/dgtlmoon/changedetection.io/blob/e0abf0b50507a8a3d0c1d8522ab23519b3e4cdf4/changedetectionio/processors/__init__.py#L37-L41">https://github.com/dgtlmoon/changedetection.io/blob/e0abf0b50507a8a3d0c1d8522ab23519b3e4cdf4/changedetectionio/processors/__init__.py#L37-L41</a></p>
<h3 id="poc">PoC</h3>
<ol>
<li>Open up a changedetection.io instance with a webdriver configured</li>
<li>Create a new watch: <code>file:/etc/passwd</code> or a similar path for your operating system. Enable webdriver mode</li>
<li>Wait for it to be checked</li>
<li>Open preview</li>
<li>Notice contents of the file</li>
</ol>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/dgtlmoon/changedetection.io/security/advisories/GHSA-6jrf-rcjf-245r">https://github.com/dgtlmoon/changedetection.io/security/advisories/GHSA-6jrf-rcjf-245r</a></li>
<li><a href="https://github.com/dgtlmoon/changedetection.io/commit/49bc982c697169c98b79698889fb9d26f6b3317f">https://github.com/dgtlmoon/changedetection.io/commit/49bc982c697169c98b79698889fb9d26f6b3317f</a></li>
<li><a href="https://github.com/dgtlmoon/changedetection.io/blob/e0abf0b50507a8a3d0c1d8522ab23519b3e4cdf4/changedetectionio/model/Watch.py#L11-L13">https://github.com/dgtlmoon/changedetection.io/blob/e0abf0b50507a8a3d0c1d8522ab23519b3e4cdf4/changedetectionio/model/Watch.py#L11-L13</a></li>
<li><a href="https://github.com/dgtlmoon/changedetection.io/blob/e0abf0b50507a8a3d0c1d8522ab23519b3e4cdf4/changedetectionio/processors/__init__.py#L37-L41">https://github.com/dgtlmoon/changedetection.io/blob/e0abf0b50507a8a3d0c1d8522ab23519b3e4cdf4/changedetectionio/processors/__init__.py#L37-L41</a></li>
<li><a href="https://github.com/dgtlmoon/changedetection.io/releases/tag/0.47.06">https://github.com/dgtlmoon/changedetection.io/releases/tag/0.47.06</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-51998">https://nvd.nist.gov/vuln/detail/CVE-2024-51998</a></li>
<li><a href="https://github.com/advisories/GHSA-6jrf-rcjf-245r">https://github.com/advisories/GHSA-6jrf-rcjf-245r</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-6jrf-rcjf-245r</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-11-07T22:00:58.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[langchain] Langchain SQL Injection vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-8h5w-f6q9-wg35</id>
        <link href="https://github.com/advisories/GHSA-8h5w-f6q9-wg35"/>
        <updated>2024-11-07T15:24:50.000Z</updated>
        <content type="html"><![CDATA[<p>In Langchain before 0.0.247, prompt injection allows execution of arbitrary code against the SQL service provided by the chain. </p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-32785">https://nvd.nist.gov/vuln/detail/CVE-2023-32785</a></li>
<li><a href="https://gist.github.com/rharang/9c58d39db8c01db5b7c888e467c0533f">https://gist.github.com/rharang/9c58d39db8c01db5b7c888e467c0533f</a></li>
<li><a href="https://github.com/langchain-ai/langchain/issues/5923#issuecomment-1696053841">https://github.com/langchain-ai/langchain/issues/5923#issuecomment-1696053841</a></li>
<li><a href="https://github.com/advisories/GHSA-8h5w-f6q9-wg35">https://github.com/advisories/GHSA-8h5w-f6q9-wg35</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-8h5w-f6q9-wg35</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2023-10-21T00:30:47.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[gradio] gradio Server Side Request Forgery vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-3gf9-wv65-gwh9</id>
        <link href="https://github.com/advisories/GHSA-3gf9-wv65-gwh9"/>
        <updated>2024-11-07T15:05:13.000Z</updated>
        <content type="html"><![CDATA[<p>In gradio &lt;=4.42.0, the gr.DownloadButton function has a hidden server-side request forgery (SSRF) vulnerability. The reason is that within the save_url_to_cache function, there are no restrictions on the URL, which allows access to local target resources. This can lead to the download of local resources and sensitive information.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-48052">https://nvd.nist.gov/vuln/detail/CVE-2024-48052</a></li>
<li><a href="https://gist.github.com/AfterSnows/45ffc23797f9127e00755376cc610e12">https://gist.github.com/AfterSnows/45ffc23797f9127e00755376cc610e12</a></li>
<li><a href="https://rumbling-slice-eb0.notion.site/FULL-SSRF-in-gr-DownloadButton-in-gradio-app-gradio-870b21e0908b48cbafd914719ac1a4e6?pvs=4">https://rumbling-slice-eb0.notion.site/FULL-SSRF-in-gr-DownloadButton-in-gradio-app-gradio-870b21e0908b48cbafd914719ac1a4e6?pvs=4</a></li>
<li><a href="https://github.com/advisories/GHSA-3gf9-wv65-gwh9">https://github.com/advisories/GHSA-3gf9-wv65-gwh9</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-3gf9-wv65-gwh9</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-11-05T00:31:28.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[gradio] Gradio vulnerable to arbitrary file read with File and UploadButton components]]></title>
        <id>https://github.com/advisories/GHSA-rhm9-gp5p-5248</id>
        <link href="https://github.com/advisories/GHSA-rhm9-gp5p-5248"/>
        <updated>2024-11-06T23:38:35.000Z</updated>
        <content type="html"><![CDATA[<h3 id="summary">Summary</h3>
<p>If File or UploadButton components are used as a part of Gradio application to preview file content, an attacker with access to the application might abuse these components to read arbitrary files from the application server.</p>
<h3 id="details">Details</h3>
<p>Consider the following application where a user can upload a file and preview its content:</p>
<pre><code>import gradio as gr

def greet(value: bytes):
    return str(value)

demo = gr.Interface(fn=greet, inputs=gr.File(type="binary"), outputs="textbox")

if __name__ == "__main__":
    demo.launch()
</code></pre>
<p>If we run this application and make the following request (which attempts to read the <code>/etc/passwd</code> file)</p>
<pre><code>curl 'http://127.0.0.1:7860/gradio_api/run/predict' -H 'content-type: application/json' --data-raw '{"data":[{"path":"/etc/passwd","orig_name":"test.txt","size":4,"mime_type":"text/plain","meta":{"_type":"gradio.FileData"}}],"event_data":null,"fn_index":0,"trigger_id":8,"session_hash":"mnv42s5gt7"}'
</code></pre>
<p>Then this results in the following error on the server</p>
<pre><code>gradio.exceptions.InvalidPathError: Cannot move /etc/passwd to the gradio cache dir because it was not uploaded by a user.
</code></pre>
<p>This is expected. However, if we now remove the <code>"meta":{"_type":"gradio.FileData"}</code> from the request:</p>
<pre><code>curl 'http://127.0.0.1:7860/gradio_api/run/predict' -H 'content-type: application/json' --data-raw '{"data":[{"path":"/etc/passwd","orig_name":"test.txt","size":4,"mime_type":"text/plain"}],"event_data":null,"fn_index":0,"trigger_id":8,"session_hash":"mnv42s5gt7"}'
</code></pre>
<p>This doesn't cause an error and results in the content of /etc/passwd being shown in the response!</p>
<p>This works because Gradio relies on the <code>processing_utils.async_move_files_to_cache</code> to sanitize all incoming file paths in all inputs. This function performs the following operation</p>
<pre><code>    return await client_utils.async_traverse(
        data, _move_to_cache, client_utils.is_file_obj_with_meta
    )
</code></pre>
<p>where <code>client_utils.is_file_obj_with_meta</code> is used as a filter which tells on which inputs to perform the <code>_move_to_cache</code> function (which also performs the allowed/disallowed check on the file path). The problem is that <code>client_utils.is_file_obj_with_meta</code> is not guaranteed to trigger for every input that contains a file path:</p>
<pre><code>def is_file_obj_with_meta(d) -&gt; bool:
    """
    Check if the given value is a valid FileData object dictionary in newer versions of Gradio
    where the file objects include a specific "meta" key, e.g.
    {
        "path": "path/to/file",
        "meta": {"_type: "gradio.FileData"}
    }
    """
    return (
        isinstance(d, dict)
        and "path" in d
        and isinstance(d["path"], str)
        and "meta" in d
        and d["meta"].get("_type", "") == "gradio.FileData"
    )
</code></pre>
<p>For example, as in the PoC, the file path won't be checked if the <code>meta</code> key is not present in the request or if <code>_type</code> is not <code>gradio.FileData</code>.</p>
<p>Then, the path remains under control of the attacker and is used to read a file in <code>_process_single_file</code> function in <code>file.py</code> and <code>upload_button.py</code> (and possibly other places)</p>
<h3 id="poc">PoC</h3>
<p>As described above, run the following Gradio app</p>
<pre><code>import gradio as gr

def greet(value: bytes):
    return str(value)

demo = gr.Interface(fn=greet, inputs=gr.File(type="binary"), outputs="textbox")

if __name__ == "__main__":
    demo.launch()
</code></pre>
<p>And make the following request</p>
<pre><code>curl 'http://127.0.0.1:7860/gradio_api/run/predict' -H 'content-type: application/json' --data-raw '{"data":[{"path":"/etc/passwd","orig_name":"test.txt","size":4,"mime_type":"text/plain"}],"event_data":null,"fn_index":0,"trigger_id":8,"session_hash":"mnv42s5gt7"}'
</code></pre>
<h3 id="impact">Impact</h3>
<p>Arbitrary file read in specific Gradio applications that use File or UploadButton components to upload files and echo/preview the content to the user.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/gradio-app/gradio/security/advisories/GHSA-rhm9-gp5p-5248">https://github.com/gradio-app/gradio/security/advisories/GHSA-rhm9-gp5p-5248</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-51751">https://nvd.nist.gov/vuln/detail/CVE-2024-51751</a></li>
<li><a href="https://github.com/advisories/GHSA-rhm9-gp5p-5248">https://github.com/advisories/GHSA-rhm9-gp5p-5248</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-rhm9-gp5p-5248</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-11-06T16:29:57.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[codechecker] codechecker authentication method confusion vulnerability allows logging in as the built-in root user from an external service]]></title>
        <id>https://github.com/advisories/GHSA-fpm5-2wcj-vfr7</id>
        <link href="https://github.com/advisories/GHSA-fpm5-2wcj-vfr7"/>
        <updated>2024-11-06T15:57:59.000Z</updated>
        <content type="html"><![CDATA[<h3 id="summary">Summary</h3>
<p>Authentication method confusion allows logging in as the built-in root user from an external service. The built-in root user is generated in a weak manner, cannot be disabled, and has universal access. </p>
<h3 id="details">Details</h3>
<p>Until CodeChecker version 6.24.1 there was an auto-generated super-user account that could not be disabled.
The attacker needs to know only the username of the root user.</p>
<p>This root user is unconditionally assigned superuser permissions.</p>
<p>Which means that if any user via any service logs in with the root user's username, they will unconditionally have superuser permissions on the CodeChecker instance.</p>
<p>The name of the user name can be found in <code>root.user</code> file in the CodeChecker configuration directory.
You can check if you are impacted by checking the existence of this user in the external authentication services (e.g. LDAP, PAM etc.).</p>
<h3 id="impact">Impact</h3>
<p>This vulnerability allows an attacker who can create an account on an enabled external authentication service, to log in as the root user, and access and control everything that can be controlled via the web interface.
The attacker needs to acquire the username of the root user to be successful.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/Ericsson/codechecker/security/advisories/GHSA-fpm5-2wcj-vfr7">https://github.com/Ericsson/codechecker/security/advisories/GHSA-fpm5-2wcj-vfr7</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-10082">https://nvd.nist.gov/vuln/detail/CVE-2024-10082</a></li>
<li><a href="https://github.com/Ericsson/codechecker/commit/866f3796d01f3158c49b87ccae3e09c0807c1c7b">https://github.com/Ericsson/codechecker/commit/866f3796d01f3158c49b87ccae3e09c0807c1c7b</a></li>
<li><a href="https://github.com/advisories/GHSA-fpm5-2wcj-vfr7">https://github.com/advisories/GHSA-fpm5-2wcj-vfr7</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-fpm5-2wcj-vfr7</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2024-11-06T15:57:57.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[codechecker] codechecker vulnerable to authentication bypass when using specifically crafted URLs]]></title>
        <id>https://github.com/advisories/GHSA-f3f8-vx3w-hp5q</id>
        <link href="https://github.com/advisories/GHSA-f3f8-vx3w-hp5q"/>
        <updated>2024-11-06T15:57:09.000Z</updated>
        <content type="html"><![CDATA[<h3 id="summary">Summary</h3>
<p>Authentication bypass occurs when the API URL ends with Authentication, Configuration or ServerInfo. This bypass allows superuser access to all API endpoints other than Authentication. These endpoints include the ability to add, edit, and remove products, among others.</p>
<h3 id="details">Details</h3>
<p>All endpoints, apart from the /Authentication is affected by the vulnerability.</p>
<p>The vulnerability allows unauthenticated users to access all API functionality.
You can look for the following pattern in the logs to check if the vulnerabilty was exploited:
<img alt="image" src="https://github.com/user-attachments/assets/6ba02231-a3d8-4832-aee6-f96462b7441e"></p>
<p>Note that the url starts with v and contains a valid CodeChecker endpoint, but it ends in <code>Authentication</code>, <code>Configuration</code> or <code>ServerInfo</code> and it was made by an <code>Anonymous</code> user.</p>
<h3 id="impact">Impact</h3>
<p>This authentication bypass allows querying, adding, changing, and deleting Products contained on the CodeChecker server, without authentication, by an anonymous user.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/Ericsson/codechecker/security/advisories/GHSA-f3f8-vx3w-hp5q">https://github.com/Ericsson/codechecker/security/advisories/GHSA-f3f8-vx3w-hp5q</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-10081">https://nvd.nist.gov/vuln/detail/CVE-2024-10081</a></li>
<li><a href="https://github.com/Ericsson/codechecker/commit/ad41702e3108e4b92ae5d0143a5b961cc34195eb">https://github.com/Ericsson/codechecker/commit/ad41702e3108e4b92ae5d0143a5b961cc34195eb</a></li>
<li><a href="https://github.com/advisories/GHSA-f3f8-vx3w-hp5q">https://github.com/advisories/GHSA-f3f8-vx3w-hp5q</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-f3f8-vx3w-hp5q</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2024-11-06T15:57:08.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[ansible-core] ansible-core Incorrect Authorization vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-32p4-gm2c-wmch</id>
        <link href="https://github.com/advisories/GHSA-32p4-gm2c-wmch"/>
        <updated>2024-11-06T21:30:56.000Z</updated>
        <content type="html"><![CDATA[<p>A flaw was found in Ansible. The ansible-core <code>user</code> module can allow an unprivileged user to silently create or replace the contents of any file on any system path and take ownership of it when a privileged user executes the <code>user</code> module against the unprivileged user's home directory. If the unprivileged user has traversal permissions on the directory containing the exploited target file, they retain full control over the contents of the file as its owner.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-9902">https://nvd.nist.gov/vuln/detail/CVE-2024-9902</a></li>
<li><a href="https://access.redhat.com/security/cve/CVE-2024-9902">https://access.redhat.com/security/cve/CVE-2024-9902</a></li>
<li><a href="https://bugzilla.redhat.com/show_bug.cgi?id=2318271">https://bugzilla.redhat.com/show_bug.cgi?id=2318271</a></li>
<li><a href="https://github.com/ansible/ansible/commit/03794735d370db98a5ec2ad514fab2b0dd22d6be">https://github.com/ansible/ansible/commit/03794735d370db98a5ec2ad514fab2b0dd22d6be</a></li>
<li><a href="https://github.com/ansible/ansible/commit/03daf774d0d80fb7235910ed1c2b4fbcaebdfe65">https://github.com/ansible/ansible/commit/03daf774d0d80fb7235910ed1c2b4fbcaebdfe65</a></li>
<li><a href="https://github.com/ansible/ansible/commit/3b6de811abea0a811e03e3029222a7e459922892">https://github.com/ansible/ansible/commit/3b6de811abea0a811e03e3029222a7e459922892</a></li>
<li><a href="https://github.com/ansible/ansible/commit/9d7312f695639e804d2caeb1d0f51c716a9ac7dd">https://github.com/ansible/ansible/commit/9d7312f695639e804d2caeb1d0f51c716a9ac7dd</a></li>
<li><a href="https://github.com/ansible/ansible/commit/f7be90626da3035c697623dcf9c90b7a0bc91c92">https://github.com/ansible/ansible/commit/f7be90626da3035c697623dcf9c90b7a0bc91c92</a></li>
<li><a href="https://access.redhat.com/errata/RHSA-2024:8969">https://access.redhat.com/errata/RHSA-2024:8969</a></li>
<li><a href="https://github.com/advisories/GHSA-32p4-gm2c-wmch">https://github.com/advisories/GHSA-32p4-gm2c-wmch</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-32p4-gm2c-wmch</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-11-06T12:31:32.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[ansible-core] ansible-core Incorrect Authorization vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-32p4-gm2c-wmch</id>
        <link href="https://github.com/advisories/GHSA-32p4-gm2c-wmch"/>
        <updated>2024-11-06T21:30:56.000Z</updated>
        <content type="html"><![CDATA[<p>A flaw was found in Ansible. The ansible-core <code>user</code> module can allow an unprivileged user to silently create or replace the contents of any file on any system path and take ownership of it when a privileged user executes the <code>user</code> module against the unprivileged user's home directory. If the unprivileged user has traversal permissions on the directory containing the exploited target file, they retain full control over the contents of the file as its owner.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-9902">https://nvd.nist.gov/vuln/detail/CVE-2024-9902</a></li>
<li><a href="https://access.redhat.com/security/cve/CVE-2024-9902">https://access.redhat.com/security/cve/CVE-2024-9902</a></li>
<li><a href="https://bugzilla.redhat.com/show_bug.cgi?id=2318271">https://bugzilla.redhat.com/show_bug.cgi?id=2318271</a></li>
<li><a href="https://github.com/ansible/ansible/commit/03794735d370db98a5ec2ad514fab2b0dd22d6be">https://github.com/ansible/ansible/commit/03794735d370db98a5ec2ad514fab2b0dd22d6be</a></li>
<li><a href="https://github.com/ansible/ansible/commit/03daf774d0d80fb7235910ed1c2b4fbcaebdfe65">https://github.com/ansible/ansible/commit/03daf774d0d80fb7235910ed1c2b4fbcaebdfe65</a></li>
<li><a href="https://github.com/ansible/ansible/commit/3b6de811abea0a811e03e3029222a7e459922892">https://github.com/ansible/ansible/commit/3b6de811abea0a811e03e3029222a7e459922892</a></li>
<li><a href="https://github.com/ansible/ansible/commit/9d7312f695639e804d2caeb1d0f51c716a9ac7dd">https://github.com/ansible/ansible/commit/9d7312f695639e804d2caeb1d0f51c716a9ac7dd</a></li>
<li><a href="https://github.com/ansible/ansible/commit/f7be90626da3035c697623dcf9c90b7a0bc91c92">https://github.com/ansible/ansible/commit/f7be90626da3035c697623dcf9c90b7a0bc91c92</a></li>
<li><a href="https://access.redhat.com/errata/RHSA-2024:8969">https://access.redhat.com/errata/RHSA-2024:8969</a></li>
<li><a href="https://github.com/advisories/GHSA-32p4-gm2c-wmch">https://github.com/advisories/GHSA-32p4-gm2c-wmch</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-32p4-gm2c-wmch</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-11-06T12:31:32.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[ansible-core] ansible-core Incorrect Authorization vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-32p4-gm2c-wmch</id>
        <link href="https://github.com/advisories/GHSA-32p4-gm2c-wmch"/>
        <updated>2024-11-06T21:30:56.000Z</updated>
        <content type="html"><![CDATA[<p>A flaw was found in Ansible. The ansible-core <code>user</code> module can allow an unprivileged user to silently create or replace the contents of any file on any system path and take ownership of it when a privileged user executes the <code>user</code> module against the unprivileged user's home directory. If the unprivileged user has traversal permissions on the directory containing the exploited target file, they retain full control over the contents of the file as its owner.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-9902">https://nvd.nist.gov/vuln/detail/CVE-2024-9902</a></li>
<li><a href="https://access.redhat.com/security/cve/CVE-2024-9902">https://access.redhat.com/security/cve/CVE-2024-9902</a></li>
<li><a href="https://bugzilla.redhat.com/show_bug.cgi?id=2318271">https://bugzilla.redhat.com/show_bug.cgi?id=2318271</a></li>
<li><a href="https://github.com/ansible/ansible/commit/03794735d370db98a5ec2ad514fab2b0dd22d6be">https://github.com/ansible/ansible/commit/03794735d370db98a5ec2ad514fab2b0dd22d6be</a></li>
<li><a href="https://github.com/ansible/ansible/commit/03daf774d0d80fb7235910ed1c2b4fbcaebdfe65">https://github.com/ansible/ansible/commit/03daf774d0d80fb7235910ed1c2b4fbcaebdfe65</a></li>
<li><a href="https://github.com/ansible/ansible/commit/3b6de811abea0a811e03e3029222a7e459922892">https://github.com/ansible/ansible/commit/3b6de811abea0a811e03e3029222a7e459922892</a></li>
<li><a href="https://github.com/ansible/ansible/commit/9d7312f695639e804d2caeb1d0f51c716a9ac7dd">https://github.com/ansible/ansible/commit/9d7312f695639e804d2caeb1d0f51c716a9ac7dd</a></li>
<li><a href="https://github.com/ansible/ansible/commit/f7be90626da3035c697623dcf9c90b7a0bc91c92">https://github.com/ansible/ansible/commit/f7be90626da3035c697623dcf9c90b7a0bc91c92</a></li>
<li><a href="https://access.redhat.com/errata/RHSA-2024:8969">https://access.redhat.com/errata/RHSA-2024:8969</a></li>
<li><a href="https://github.com/advisories/GHSA-32p4-gm2c-wmch">https://github.com/advisories/GHSA-32p4-gm2c-wmch</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-32p4-gm2c-wmch</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-11-06T12:31:32.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[ansible-core] ansible-core Incorrect Authorization vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-32p4-gm2c-wmch</id>
        <link href="https://github.com/advisories/GHSA-32p4-gm2c-wmch"/>
        <updated>2024-11-06T21:30:56.000Z</updated>
        <content type="html"><![CDATA[<p>A flaw was found in Ansible. The ansible-core <code>user</code> module can allow an unprivileged user to silently create or replace the contents of any file on any system path and take ownership of it when a privileged user executes the <code>user</code> module against the unprivileged user's home directory. If the unprivileged user has traversal permissions on the directory containing the exploited target file, they retain full control over the contents of the file as its owner.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-9902">https://nvd.nist.gov/vuln/detail/CVE-2024-9902</a></li>
<li><a href="https://access.redhat.com/security/cve/CVE-2024-9902">https://access.redhat.com/security/cve/CVE-2024-9902</a></li>
<li><a href="https://bugzilla.redhat.com/show_bug.cgi?id=2318271">https://bugzilla.redhat.com/show_bug.cgi?id=2318271</a></li>
<li><a href="https://github.com/ansible/ansible/commit/03794735d370db98a5ec2ad514fab2b0dd22d6be">https://github.com/ansible/ansible/commit/03794735d370db98a5ec2ad514fab2b0dd22d6be</a></li>
<li><a href="https://github.com/ansible/ansible/commit/03daf774d0d80fb7235910ed1c2b4fbcaebdfe65">https://github.com/ansible/ansible/commit/03daf774d0d80fb7235910ed1c2b4fbcaebdfe65</a></li>
<li><a href="https://github.com/ansible/ansible/commit/3b6de811abea0a811e03e3029222a7e459922892">https://github.com/ansible/ansible/commit/3b6de811abea0a811e03e3029222a7e459922892</a></li>
<li><a href="https://github.com/ansible/ansible/commit/9d7312f695639e804d2caeb1d0f51c716a9ac7dd">https://github.com/ansible/ansible/commit/9d7312f695639e804d2caeb1d0f51c716a9ac7dd</a></li>
<li><a href="https://github.com/ansible/ansible/commit/f7be90626da3035c697623dcf9c90b7a0bc91c92">https://github.com/ansible/ansible/commit/f7be90626da3035c697623dcf9c90b7a0bc91c92</a></li>
<li><a href="https://access.redhat.com/errata/RHSA-2024:8969">https://access.redhat.com/errata/RHSA-2024:8969</a></li>
<li><a href="https://github.com/advisories/GHSA-32p4-gm2c-wmch">https://github.com/advisories/GHSA-32p4-gm2c-wmch</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-32p4-gm2c-wmch</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-11-06T12:31:32.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[ansible-core] ansible-core Incorrect Authorization vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-32p4-gm2c-wmch</id>
        <link href="https://github.com/advisories/GHSA-32p4-gm2c-wmch"/>
        <updated>2024-11-06T21:30:56.000Z</updated>
        <content type="html"><![CDATA[<p>A flaw was found in Ansible. The ansible-core <code>user</code> module can allow an unprivileged user to silently create or replace the contents of any file on any system path and take ownership of it when a privileged user executes the <code>user</code> module against the unprivileged user's home directory. If the unprivileged user has traversal permissions on the directory containing the exploited target file, they retain full control over the contents of the file as its owner.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-9902">https://nvd.nist.gov/vuln/detail/CVE-2024-9902</a></li>
<li><a href="https://access.redhat.com/security/cve/CVE-2024-9902">https://access.redhat.com/security/cve/CVE-2024-9902</a></li>
<li><a href="https://bugzilla.redhat.com/show_bug.cgi?id=2318271">https://bugzilla.redhat.com/show_bug.cgi?id=2318271</a></li>
<li><a href="https://github.com/ansible/ansible/commit/03794735d370db98a5ec2ad514fab2b0dd22d6be">https://github.com/ansible/ansible/commit/03794735d370db98a5ec2ad514fab2b0dd22d6be</a></li>
<li><a href="https://github.com/ansible/ansible/commit/03daf774d0d80fb7235910ed1c2b4fbcaebdfe65">https://github.com/ansible/ansible/commit/03daf774d0d80fb7235910ed1c2b4fbcaebdfe65</a></li>
<li><a href="https://github.com/ansible/ansible/commit/3b6de811abea0a811e03e3029222a7e459922892">https://github.com/ansible/ansible/commit/3b6de811abea0a811e03e3029222a7e459922892</a></li>
<li><a href="https://github.com/ansible/ansible/commit/9d7312f695639e804d2caeb1d0f51c716a9ac7dd">https://github.com/ansible/ansible/commit/9d7312f695639e804d2caeb1d0f51c716a9ac7dd</a></li>
<li><a href="https://github.com/ansible/ansible/commit/f7be90626da3035c697623dcf9c90b7a0bc91c92">https://github.com/ansible/ansible/commit/f7be90626da3035c697623dcf9c90b7a0bc91c92</a></li>
<li><a href="https://access.redhat.com/errata/RHSA-2024:8969">https://access.redhat.com/errata/RHSA-2024:8969</a></li>
<li><a href="https://github.com/advisories/GHSA-32p4-gm2c-wmch">https://github.com/advisories/GHSA-32p4-gm2c-wmch</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-32p4-gm2c-wmch</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-11-06T12:31:32.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[langchain] Langchain SQL Injection vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-45pg-36p6-83v9</id>
        <link href="https://github.com/advisories/GHSA-45pg-36p6-83v9"/>
        <updated>2024-11-12T19:58:00.000Z</updated>
        <content type="html"><![CDATA[<p>A vulnerability in the GraphCypherQAChain class of langchain-ai/langchain version 0.2.5 allows for SQL injection through prompt injection. This vulnerability can lead to unauthorized data manipulation, data exfiltration, denial of service (DoS) by deleting all data, breaches in multi-tenant security environments, and data integrity issues. Attackers can create, update, or delete nodes and relationships without proper authorization, extract sensitive data, disrupt services, access data across different tenants, and compromise the integrity of the database.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-8309">https://nvd.nist.gov/vuln/detail/CVE-2024-8309</a></li>
<li><a href="https://github.com/langchain-ai/langchain/commit/c2a3021bb0c5f54649d380b42a0684ca5778c255">https://github.com/langchain-ai/langchain/commit/c2a3021bb0c5f54649d380b42a0684ca5778c255</a></li>
<li><a href="https://huntr.com/bounties/8f4ad910-7fdc-4089-8f0a-b5df5f32e7c5">https://huntr.com/bounties/8f4ad910-7fdc-4089-8f0a-b5df5f32e7c5</a></li>
<li><a href="https://github.com/pypa/advisory-database/tree/main/vulns/langchain/PYSEC-2024-115.yaml">https://github.com/pypa/advisory-database/tree/main/vulns/langchain/PYSEC-2024-115.yaml</a></li>
<li><a href="https://github.com/langchain-ai/langchain/commit/64c317eba05fbac0c6a6fc5aa192bc0d7130972e">https://github.com/langchain-ai/langchain/commit/64c317eba05fbac0c6a6fc5aa192bc0d7130972e</a></li>
<li><a href="https://github.com/advisories/GHSA-45pg-36p6-83v9">https://github.com/advisories/GHSA-45pg-36p6-83v9</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-45pg-36p6-83v9</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2024-10-29T15:32:05.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[agentscope] AgentScope uses `eval`]]></title>
        <id>https://github.com/advisories/GHSA-6p55-qr3j-mpgq</id>
        <link href="https://github.com/advisories/GHSA-6p55-qr3j-mpgq"/>
        <updated>2024-11-07T17:10:06.000Z</updated>
        <content type="html"><![CDATA[<p>In agentscope &lt;=v0.0.4, the file <code>agentscope\web\workstation\workflow_utils.py</code> has the function <code>is_callable_expression</code>. Within this function, the line <code>result = eval(s)</code> poses a security risk as it can directly execute user-provided commands.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-48050">https://nvd.nist.gov/vuln/detail/CVE-2024-48050</a></li>
<li><a href="https://gist.github.com/AfterSnows/0ad9d233a9d2a5b7e6e5273e2e23508d">https://gist.github.com/AfterSnows/0ad9d233a9d2a5b7e6e5273e2e23508d</a></li>
<li><a href="https://rumbling-slice-eb0.notion.site/Unauthenticated-Remote-Code-Execution-via-The-use-of-eval-in-is_callable_expression-and-sanitize_nod-cd4ea6c576da4e0b965ef596855c298d">https://rumbling-slice-eb0.notion.site/Unauthenticated-Remote-Code-Execution-via-The-use-of-eval-in-is_callable_expression-and-sanitize_nod-cd4ea6c576da4e0b965ef596855c298d</a></li>
<li><a href="https://github.com/modelscope/agentscope/blob/main/src/agentscope/web/workstation/workflow_utils.py#L11">https://github.com/modelscope/agentscope/blob/main/src/agentscope/web/workstation/workflow_utils.py#L11</a></li>
<li><a href="https://github.com/advisories/GHSA-6p55-qr3j-mpgq">https://github.com/advisories/GHSA-6p55-qr3j-mpgq</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-6p55-qr3j-mpgq</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-11-05T00:31:28.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[langflow] Langflow vulnerable to remote code execution]]></title>
        <id>https://github.com/advisories/GHSA-5p5r-57fx-pmfr</id>
        <link href="https://github.com/advisories/GHSA-5p5r-57fx-pmfr"/>
        <updated>2024-11-06T23:39:07.000Z</updated>
        <content type="html"><![CDATA[<p>langflow &lt;=1.0.18 is vulnerable to Remote Code Execution (RCE) as any component provided the code functionality and the components run on the local machine rather than in a sandbox.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-48061">https://nvd.nist.gov/vuln/detail/CVE-2024-48061</a></li>
<li><a href="https://gist.github.com/AfterSnows/1e58257867002462923fd62dde2b5d61">https://gist.github.com/AfterSnows/1e58257867002462923fd62dde2b5d61</a></li>
<li><a href="https://rumbling-slice-eb0.notion.site/There-is-a-Remote-Code-Execution-RCE-vulnerability-in-the-repository-https-github-com-langflow-a-105e3cda9e8c800fac92f1b571bd40d8">https://rumbling-slice-eb0.notion.site/There-is-a-Remote-Code-Execution-RCE-vulnerability-in-the-repository-https-github-com-langflow-a-105e3cda9e8c800fac92f1b571bd40d8</a></li>
<li><a href="https://github.com/langflow-ai/langflow/issues/696">https://github.com/langflow-ai/langflow/issues/696</a></li>
<li><a href="https://github.com/advisories/GHSA-5p5r-57fx-pmfr">https://github.com/advisories/GHSA-5p5r-57fx-pmfr</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-5p5r-57fx-pmfr</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-11-05T00:31:28.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[OctoPrint] OctoPrint has API key access in settings without reauthentication]]></title>
        <id>https://github.com/advisories/GHSA-cc6x-8cc7-9953</id>
        <link href="https://github.com/advisories/GHSA-cc6x-8cc7-9953"/>
        <updated>2024-11-05T21:36:44.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>OctoPrint versions up until and including 1.10.2 contain a vulnerability that allows an attacker that has gained temporary control over an authenticated victim's OctoPrint browser session to retrieve/recreate/delete the user's or - if the victim has admin permissions - the global API key without having to reauthenticate by re-entering the user account's password. </p>
<p>An attacker could use a stolen API key to access OctoPrint through its API, or disrupt workflows depending on the API key they deleted.</p>
<h3 id="patches">Patches</h3>
<p>The vulnerability will be patched in version 1.10.3.</p>
<h3 id="credits">Credits</h3>
<p>This vulnerability was discovered and responsibly disclosed to OctoPrint by Jacopo Tediosi.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/OctoPrint/OctoPrint/security/advisories/GHSA-cc6x-8cc7-9953">https://github.com/OctoPrint/OctoPrint/security/advisories/GHSA-cc6x-8cc7-9953</a></li>
<li><a href="https://github.com/OctoPrint/OctoPrint/commit/9bc80d782d72881b16e20873dcd0b8314324c70c">https://github.com/OctoPrint/OctoPrint/commit/9bc80d782d72881b16e20873dcd0b8314324c70c</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-51493">https://nvd.nist.gov/vuln/detail/CVE-2024-51493</a></li>
<li><a href="https://github.com/advisories/GHSA-cc6x-8cc7-9953">https://github.com/advisories/GHSA-cc6x-8cc7-9953</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-cc6x-8cc7-9953</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-11-05T15:08:57.000Z</published>
    </entry>
</feed>