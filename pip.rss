<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://xlordz.github.io/github-advisory-database-rss/pip.rss</id>
    <title>Security Advisory for Python packages hosted at PyPI.org</title>
    <updated>2025-06-13T16:48:14.303Z</updated>
    <generator>github-advisory-database-rss</generator>
    <link rel="alternate" href="https://github.com/advisories?query=type%3Areviewed+ecosystem%3Apip"/>
    <subtitle>Security Advisory for Python packages hosted at PyPI.org on GitHub</subtitle>
    <rights>github-advisory-database-rss</rights>
    <category term="CRITICAL"/>
    <category term="HIGH"/>
    <category term="MODERATE"/>
    <category term="LOW"/>
    <entry>
        <title type="html"><![CDATA[[vantage6-server] Vantage6 Server JWT secret not cryptographically secure]]></title>
        <id>https://github.com/advisories/GHSA-m3mq-f375-5vgh</id>
        <link href="https://github.com/advisories/GHSA-m3mq-f375-5vgh"/>
        <updated>2025-06-12T23:02:16.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>The JWT secret key in the vantage6 server is auto-generated unless defined by the user. The auto-generated key is a UUID1, which is not cryptographically secure as it is <a href="https://docs.python.org/3/library/uuid.html#uuid.uuid1">predictable to some extent</a></p>
<h3 id="patches">Patches</h3>
<p>No</p>
<h3 id="workarounds">Workarounds</h3>
<p>You may define JWT secret key in the server configuration file</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/vantage6/vantage6/security/advisories/GHSA-m3mq-f375-5vgh">https://github.com/vantage6/vantage6/security/advisories/GHSA-m3mq-f375-5vgh</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2025-43866">https://nvd.nist.gov/vuln/detail/CVE-2025-43866</a></li>
<li><a href="https://github.com/vantage6/vantage6/commit/e39a262faf1cd4c554bf1b8e57eeea082da995c0">https://github.com/vantage6/vantage6/commit/e39a262faf1cd4c554bf1b8e57eeea082da995c0</a></li>
<li><a href="https://github.com/advisories/GHSA-m3mq-f375-5vgh">https://github.com/advisories/GHSA-m3mq-f375-5vgh</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-m3mq-f375-5vgh</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2025-06-12T23:02:13.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[vantage6] vantage6 lacks brute-force protection on change password functionality]]></title>
        <id>https://github.com/advisories/GHSA-j6g5-p62x-58hw</id>
        <link href="https://github.com/advisories/GHSA-j6g5-p62x-58hw"/>
        <updated>2025-06-12T23:02:08.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>If attacker gets access to an authenticated session, they can try to brute-force the user password by using the change password functionality: they can call that route infinitely which will return the message that password is wrong until it is correct</p>
<h3 id="patches">Patches</h3>
<p>This issue has been patched in version 4.11.0</p>
<h3 id="workarounds">Workarounds</h3>
<p>None</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/vantage6/vantage6/security/advisories/GHSA-j6g5-p62x-58hw">https://github.com/vantage6/vantage6/security/advisories/GHSA-j6g5-p62x-58hw</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2025-43863">https://nvd.nist.gov/vuln/detail/CVE-2025-43863</a></li>
<li><a href="https://github.com/vantage6/vantage6/commit/e0f1841b310f6f610e8137db2506cf683ce154d0">https://github.com/vantage6/vantage6/commit/e0f1841b310f6f610e8137db2506cf683ce154d0</a></li>
<li><a href="https://github.com/advisories/GHSA-j6g5-p62x-58hw">https://github.com/advisories/GHSA-j6g5-p62x-58hw</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-j6g5-p62x-58hw</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2025-06-12T23:00:41.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[backend.ai] BackendAI vulnerable to Exposure of Sensitive Information to an Unauthorized Actor]]></title>
        <id>https://github.com/advisories/GHSA-hxvr-gg2w-j48x</id>
        <link href="https://github.com/advisories/GHSA-hxvr-gg2w-j48x"/>
        <updated>2025-06-11T17:38:08.000Z</updated>
        <content type="html"><![CDATA[<p>Exposure of sensitive data in active sessions in Lablup's BackendAI allows attackers to retrieve credentials for users on the management platform.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2025-49653">https://nvd.nist.gov/vuln/detail/CVE-2025-49653</a></li>
<li><a href="https://hiddenlayer.com/sai_security_advisor/2025-05-backendai-49653">https://hiddenlayer.com/sai_security_advisor/2025-05-backendai-49653</a></li>
<li><a href="https://hiddenlayer.com/sai_security_advisor/2025-06-backendai">https://hiddenlayer.com/sai_security_advisor/2025-06-backendai</a></li>
<li><a href="https://github.com/advisories/GHSA-hxvr-gg2w-j48x">https://github.com/advisories/GHSA-hxvr-gg2w-j48x</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-hxvr-gg2w-j48x</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2025-06-09T18:32:17.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[backend.ai] BackendAI Missing Authentication for Critical Function]]></title>
        <id>https://github.com/advisories/GHSA-ww28-4m4v-cq4j</id>
        <link href="https://github.com/advisories/GHSA-ww28-4m4v-cq4j"/>
        <updated>2025-06-11T17:37:45.000Z</updated>
        <content type="html"><![CDATA[<p>Missing Authentication in the registration feature of Lablup's BackendAI allows arbitrary users to create user accounts that can access private data even when registration is disabled.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2025-49652">https://nvd.nist.gov/vuln/detail/CVE-2025-49652</a></li>
<li><a href="https://hiddenlayer.com/sai_security_advisor/2025-05-backendai-49653">https://hiddenlayer.com/sai_security_advisor/2025-05-backendai-49653</a></li>
<li><a href="https://hiddenlayer.com/sai_security_advisor/2025-06-backendai">https://hiddenlayer.com/sai_security_advisor/2025-06-backendai</a></li>
<li><a href="https://github.com/advisories/GHSA-ww28-4m4v-cq4j">https://github.com/advisories/GHSA-ww28-4m4v-cq4j</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-ww28-4m4v-cq4j</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2025-06-09T18:32:17.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[backend.ai] Backend.AI Missing Authorization vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-h889-475r-wfmm</id>
        <link href="https://github.com/advisories/GHSA-h889-475r-wfmm"/>
        <updated>2025-06-11T16:51:45.000Z</updated>
        <content type="html"><![CDATA[<p>Missing Authorization in Lablup's BackendAI allows attackers to takeover all active sessions; Accessing, stealing, or altering any data accessible in the session. This vulnerability exists in all current versions of BackendAI.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2025-49651">https://nvd.nist.gov/vuln/detail/CVE-2025-49651</a></li>
<li><a href="https://hiddenlayer.com/sai_security_advisor/2025-05-backendai-49653">https://hiddenlayer.com/sai_security_advisor/2025-05-backendai-49653</a></li>
<li><a href="https://hiddenlayer.com/sai_security_advisor/2025-06-backendai">https://hiddenlayer.com/sai_security_advisor/2025-06-backendai</a></li>
<li><a href="https://github.com/advisories/GHSA-h889-475r-wfmm">https://github.com/advisories/GHSA-h889-475r-wfmm</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-h889-475r-wfmm</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2025-06-09T18:32:17.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[nautobot] Nautobot may allows uploaded media files to be accessible without authentication]]></title>
        <id>https://github.com/advisories/GHSA-rh67-4c8j-hjjh</id>
        <link href="https://github.com/advisories/GHSA-rh67-4c8j-hjjh"/>
        <updated>2025-06-10T20:36:12.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>Files uploaded by users to Nautobot's <code>MEDIA_ROOT</code> directory, including DeviceType image attachments as well as images attached to a Location, Device, or Rack, are served to users via a URL endpoint that was not enforcing user authentication. As a consequence, such files can be retrieved by anonymous users who know or can guess the correct URL for a given file.</p>
<p>For DeviceType image attachments, a mitigating factor is that no URL endpoint exists for listing the contents of the <code>devicetype-images/</code> subdirectory, and the file names are as specified by the uploading user, so any given DeviceType image attachment can only be retrieved by correctly guessing its file name.</p>
<p>Similarly, for all other image attachments, while the images <em>can</em> be listed by accessing the <code>/api/extras/image-attachments/</code> endpoint <em>as an authenticated user only</em>, absent that authenticated access, accessing the files would again require guessing file names correctly.</p>
<h3 id="patches">Patches</h3>
<p>Nautobot v2.4.10 and v1.6.32 will address this issue by adding enforcement of Nautobot user authentication to this endpoint.</p>
<h3 id="workarounds">Workarounds</h3>
<p>No workaround other than applying the patch given in <a href="https://github.com/nautobot/nautobot/pull/6672">https://github.com/nautobot/nautobot/pull/6672</a> (2.x) or <a href="https://github.com/nautobot/nautobot/pull/6703">https://github.com/nautobot/nautobot/pull/6703</a> (1.6)</p>
<h3 id="references">References</h3>
<p><em>Are there any links users can visit to find out more?</em></p>
<ul>
<li><a href="https://github.com/nautobot/nautobot/commit/9c892dc300429948a4714f743c9c2879d8987340">https://github.com/nautobot/nautobot/commit/9c892dc300429948a4714f743c9c2879d8987340</a></li>
<li><a href="https://github.com/nautobot/nautobot/commit/d99a53b065129cff3a0fa9abe7355a9ef1ad4c95">https://github.com/nautobot/nautobot/commit/d99a53b065129cff3a0fa9abe7355a9ef1ad4c95</a></li>
</ul>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/nautobot/nautobot/security/advisories/GHSA-rh67-4c8j-hjjh">https://github.com/nautobot/nautobot/security/advisories/GHSA-rh67-4c8j-hjjh</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2025-49143">https://nvd.nist.gov/vuln/detail/CVE-2025-49143</a></li>
<li><a href="https://github.com/nautobot/nautobot/pull/6672">https://github.com/nautobot/nautobot/pull/6672</a></li>
<li><a href="https://github.com/nautobot/nautobot/pull/6703">https://github.com/nautobot/nautobot/pull/6703</a></li>
<li><a href="https://github.com/nautobot/nautobot/commit/9c892dc300429948a4714f743c9c2879d8987340">https://github.com/nautobot/nautobot/commit/9c892dc300429948a4714f743c9c2879d8987340</a></li>
<li><a href="https://github.com/nautobot/nautobot/commit/d99a53b065129cff3a0fa9abe7355a9ef1ad4c95">https://github.com/nautobot/nautobot/commit/d99a53b065129cff3a0fa9abe7355a9ef1ad4c95</a></li>
<li><a href="https://github.com/advisories/GHSA-rh67-4c8j-hjjh">https://github.com/advisories/GHSA-rh67-4c8j-hjjh</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-rh67-4c8j-hjjh</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2025-06-10T20:36:11.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[nautobot] Nautobot may allows uploaded media files to be accessible without authentication]]></title>
        <id>https://github.com/advisories/GHSA-rh67-4c8j-hjjh</id>
        <link href="https://github.com/advisories/GHSA-rh67-4c8j-hjjh"/>
        <updated>2025-06-10T20:36:12.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>Files uploaded by users to Nautobot's <code>MEDIA_ROOT</code> directory, including DeviceType image attachments as well as images attached to a Location, Device, or Rack, are served to users via a URL endpoint that was not enforcing user authentication. As a consequence, such files can be retrieved by anonymous users who know or can guess the correct URL for a given file.</p>
<p>For DeviceType image attachments, a mitigating factor is that no URL endpoint exists for listing the contents of the <code>devicetype-images/</code> subdirectory, and the file names are as specified by the uploading user, so any given DeviceType image attachment can only be retrieved by correctly guessing its file name.</p>
<p>Similarly, for all other image attachments, while the images <em>can</em> be listed by accessing the <code>/api/extras/image-attachments/</code> endpoint <em>as an authenticated user only</em>, absent that authenticated access, accessing the files would again require guessing file names correctly.</p>
<h3 id="patches">Patches</h3>
<p>Nautobot v2.4.10 and v1.6.32 will address this issue by adding enforcement of Nautobot user authentication to this endpoint.</p>
<h3 id="workarounds">Workarounds</h3>
<p>No workaround other than applying the patch given in <a href="https://github.com/nautobot/nautobot/pull/6672">https://github.com/nautobot/nautobot/pull/6672</a> (2.x) or <a href="https://github.com/nautobot/nautobot/pull/6703">https://github.com/nautobot/nautobot/pull/6703</a> (1.6)</p>
<h3 id="references">References</h3>
<p><em>Are there any links users can visit to find out more?</em></p>
<ul>
<li><a href="https://github.com/nautobot/nautobot/commit/9c892dc300429948a4714f743c9c2879d8987340">https://github.com/nautobot/nautobot/commit/9c892dc300429948a4714f743c9c2879d8987340</a></li>
<li><a href="https://github.com/nautobot/nautobot/commit/d99a53b065129cff3a0fa9abe7355a9ef1ad4c95">https://github.com/nautobot/nautobot/commit/d99a53b065129cff3a0fa9abe7355a9ef1ad4c95</a></li>
</ul>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/nautobot/nautobot/security/advisories/GHSA-rh67-4c8j-hjjh">https://github.com/nautobot/nautobot/security/advisories/GHSA-rh67-4c8j-hjjh</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2025-49143">https://nvd.nist.gov/vuln/detail/CVE-2025-49143</a></li>
<li><a href="https://github.com/nautobot/nautobot/pull/6672">https://github.com/nautobot/nautobot/pull/6672</a></li>
<li><a href="https://github.com/nautobot/nautobot/pull/6703">https://github.com/nautobot/nautobot/pull/6703</a></li>
<li><a href="https://github.com/nautobot/nautobot/commit/9c892dc300429948a4714f743c9c2879d8987340">https://github.com/nautobot/nautobot/commit/9c892dc300429948a4714f743c9c2879d8987340</a></li>
<li><a href="https://github.com/nautobot/nautobot/commit/d99a53b065129cff3a0fa9abe7355a9ef1ad4c95">https://github.com/nautobot/nautobot/commit/d99a53b065129cff3a0fa9abe7355a9ef1ad4c95</a></li>
<li><a href="https://github.com/advisories/GHSA-rh67-4c8j-hjjh">https://github.com/advisories/GHSA-rh67-4c8j-hjjh</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-rh67-4c8j-hjjh</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2025-06-10T20:36:11.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[nautobot] Nautobot vulnerable to secrets exposure and data manipulation through Jinja2 templating]]></title>
        <id>https://github.com/advisories/GHSA-wjw6-95h5-4jpx</id>
        <link href="https://github.com/advisories/GHSA-wjw6-95h5-4jpx"/>
        <updated>2025-06-10T20:17:16.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p><em>What kind of vulnerability is it? Who is impacted?</em></p>
<p>All users of Nautobot versions prior to 2.4.10 or prior to 1.6.32 are potentially affected.</p>
<p>Due to insufficient security configuration of the Jinja2 templating feature used in computed fields, custom links, etc. in Nautobot:</p>
<ol>
<li>A malicious user could configure this feature set in ways that could expose the value of Secrets defined in Nautobot when the templated content is rendered.</li>
<li>A malicious user could configure this feature set in ways that could call Python APIs to modify data within Nautobot when the templated content is rendered, bypassing the object permissions assigned to the viewing user.</li>
</ol>
<h3 id="patches">Patches</h3>
<p><em>Has the problem been patched? What versions should users upgrade to?</em></p>
<p>Nautobot versions 1.6.32 and 2.4.10 will include fixes for the vulnerability.</p>
<h3 id="workarounds">Workarounds</h3>
<p><em>Is there a way for users to fix or remediate the vulnerability without upgrading?</em></p>
<p>The vulnerability can be partially mitigated by configuring object permissions appropriately to limit the below actions to only trusted users:</p>
<ul>
<li><code>extras.add_secret</code></li>
<li><code>extras.change_secret</code></li>
<li><code>extras.view_secret</code></li>
<li><code>extras.add_computedfield</code></li>
<li><code>extras.change_computedfield</code></li>
<li><code>extras.add_customlink</code></li>
<li><code>extras.change_customlink</code></li>
<li><code>extras.add_jobbutton</code></li>
<li><code>extras.change_jobbutton</code></li>
</ul>
<h3 id="references">References</h3>
<p><em>Are there any links users can visit to find out more?</em></p>
<ul>
<li><a href="https://jinja.palletsprojects.com/en/stable/sandbox/">https://jinja.palletsprojects.com/en/stable/sandbox/</a></li>
<li><a href="https://docs.djangoproject.com/en/4.2/ref/templates/api/#alters-data-description">https://docs.djangoproject.com/en/4.2/ref/templates/api/#alters-data-description</a></li>
<li><a href="https://github.com/nautobot/nautobot/pull/7417">https://github.com/nautobot/nautobot/pull/7417</a></li>
<li><a href="https://github.com/nautobot/nautobot/pull/7429">https://github.com/nautobot/nautobot/pull/7429</a></li>
</ul>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/nautobot/nautobot/security/advisories/GHSA-wjw6-95h5-4jpx">https://github.com/nautobot/nautobot/security/advisories/GHSA-wjw6-95h5-4jpx</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2025-49142">https://nvd.nist.gov/vuln/detail/CVE-2025-49142</a></li>
<li><a href="https://github.com/nautobot/nautobot/pull/7417">https://github.com/nautobot/nautobot/pull/7417</a></li>
<li><a href="https://github.com/nautobot/nautobot/pull/7429">https://github.com/nautobot/nautobot/pull/7429</a></li>
<li><a href="https://docs.djangoproject.com/en/4.2/ref/templates/api/#alters-data-description">https://docs.djangoproject.com/en/4.2/ref/templates/api/#alters-data-description</a></li>
<li><a href="https://jinja.palletsprojects.com/en/stable/sandbox">https://jinja.palletsprojects.com/en/stable/sandbox</a></li>
<li><a href="https://github.com/advisories/GHSA-wjw6-95h5-4jpx">https://github.com/advisories/GHSA-wjw6-95h5-4jpx</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-wjw6-95h5-4jpx</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2025-06-10T20:17:15.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[nautobot] Nautobot vulnerable to secrets exposure and data manipulation through Jinja2 templating]]></title>
        <id>https://github.com/advisories/GHSA-wjw6-95h5-4jpx</id>
        <link href="https://github.com/advisories/GHSA-wjw6-95h5-4jpx"/>
        <updated>2025-06-10T20:17:16.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p><em>What kind of vulnerability is it? Who is impacted?</em></p>
<p>All users of Nautobot versions prior to 2.4.10 or prior to 1.6.32 are potentially affected.</p>
<p>Due to insufficient security configuration of the Jinja2 templating feature used in computed fields, custom links, etc. in Nautobot:</p>
<ol>
<li>A malicious user could configure this feature set in ways that could expose the value of Secrets defined in Nautobot when the templated content is rendered.</li>
<li>A malicious user could configure this feature set in ways that could call Python APIs to modify data within Nautobot when the templated content is rendered, bypassing the object permissions assigned to the viewing user.</li>
</ol>
<h3 id="patches">Patches</h3>
<p><em>Has the problem been patched? What versions should users upgrade to?</em></p>
<p>Nautobot versions 1.6.32 and 2.4.10 will include fixes for the vulnerability.</p>
<h3 id="workarounds">Workarounds</h3>
<p><em>Is there a way for users to fix or remediate the vulnerability without upgrading?</em></p>
<p>The vulnerability can be partially mitigated by configuring object permissions appropriately to limit the below actions to only trusted users:</p>
<ul>
<li><code>extras.add_secret</code></li>
<li><code>extras.change_secret</code></li>
<li><code>extras.view_secret</code></li>
<li><code>extras.add_computedfield</code></li>
<li><code>extras.change_computedfield</code></li>
<li><code>extras.add_customlink</code></li>
<li><code>extras.change_customlink</code></li>
<li><code>extras.add_jobbutton</code></li>
<li><code>extras.change_jobbutton</code></li>
</ul>
<h3 id="references">References</h3>
<p><em>Are there any links users can visit to find out more?</em></p>
<ul>
<li><a href="https://jinja.palletsprojects.com/en/stable/sandbox/">https://jinja.palletsprojects.com/en/stable/sandbox/</a></li>
<li><a href="https://docs.djangoproject.com/en/4.2/ref/templates/api/#alters-data-description">https://docs.djangoproject.com/en/4.2/ref/templates/api/#alters-data-description</a></li>
<li><a href="https://github.com/nautobot/nautobot/pull/7417">https://github.com/nautobot/nautobot/pull/7417</a></li>
<li><a href="https://github.com/nautobot/nautobot/pull/7429">https://github.com/nautobot/nautobot/pull/7429</a></li>
</ul>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/nautobot/nautobot/security/advisories/GHSA-wjw6-95h5-4jpx">https://github.com/nautobot/nautobot/security/advisories/GHSA-wjw6-95h5-4jpx</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2025-49142">https://nvd.nist.gov/vuln/detail/CVE-2025-49142</a></li>
<li><a href="https://github.com/nautobot/nautobot/pull/7417">https://github.com/nautobot/nautobot/pull/7417</a></li>
<li><a href="https://github.com/nautobot/nautobot/pull/7429">https://github.com/nautobot/nautobot/pull/7429</a></li>
<li><a href="https://docs.djangoproject.com/en/4.2/ref/templates/api/#alters-data-description">https://docs.djangoproject.com/en/4.2/ref/templates/api/#alters-data-description</a></li>
<li><a href="https://jinja.palletsprojects.com/en/stable/sandbox">https://jinja.palletsprojects.com/en/stable/sandbox</a></li>
<li><a href="https://github.com/advisories/GHSA-wjw6-95h5-4jpx">https://github.com/advisories/GHSA-wjw6-95h5-4jpx</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-wjw6-95h5-4jpx</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2025-06-10T20:17:15.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[OctoPrint] OctoPrint Vulnerable to Denial of Service through malformed HTTP request in OctoPrint]]></title>
        <id>https://github.com/advisories/GHSA-9wj4-8h85-pgrw</id>
        <link href="https://github.com/advisories/GHSA-9wj4-8h85-pgrw"/>
        <updated>2025-06-10T20:14:45.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>OctoPrint versions up until and including 1.11.1 contain a vulnerability that allows any unauthenticated attacker to send a manipulated broken <code>multipart/form-data</code> request to OctoPrint and through that make the web server component become unresponsive. This could be used to effectively run a denial of service attack on the OctoPrint server.</p>
<h3 id="patches">Patches</h3>
<p>The vulnerability has been patched in version 1.11.2.</p>
<h3 id="workaround">Workaround</h3>
<p>OctoPrint administrators are once more reminded to not make OctoPrint available on hostile networks (e.g. the internet), regardless of whether this vulnerability is patched or not.</p>
<h3 id="details">Details</h3>
<p>The issue can be triggered by a broken <code>multipart/form-data</code> request lacking an end boundary to any of OctoPrint's endpoints implemented through the <code>octoprint.server.util.tornado.UploadStorageFallbackHandler</code> request handler. The request handler will get stuck in an endless busy loop, looking for a part of the request that will never come. As Tornado is single-threaded, that will effectively block the whole web server.</p>
<p>The fix adds detection of invalid requests like that and ensures they are handled gracefully with an HTTP 400 Bad Request response.</p>
<h3 id="credits">Credits</h3>
<p>This vulnerability was discovered and responsibly disclosed to OctoPrint by Jacopo Tediosi.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/OctoPrint/OctoPrint/security/advisories/GHSA-9wj4-8h85-pgrw">https://github.com/OctoPrint/OctoPrint/security/advisories/GHSA-9wj4-8h85-pgrw</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2025-48879">https://nvd.nist.gov/vuln/detail/CVE-2025-48879</a></li>
<li><a href="https://github.com/OctoPrint/OctoPrint/commit/c9c35c17bd820f19c6b12e6c0359fc0cfdd0c1ec">https://github.com/OctoPrint/OctoPrint/commit/c9c35c17bd820f19c6b12e6c0359fc0cfdd0c1ec</a></li>
<li><a href="https://github.com/advisories/GHSA-9wj4-8h85-pgrw">https://github.com/advisories/GHSA-9wj4-8h85-pgrw</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-9wj4-8h85-pgrw</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2025-06-10T20:14:43.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[OctoPrint] OctoPrint vulnerable to possible file extraction via upload endpoints]]></title>
        <id>https://github.com/advisories/GHSA-m9jh-jf9h-x3h2</id>
        <link href="https://github.com/advisories/GHSA-m9jh-jf9h-x3h2"/>
        <updated>2025-06-10T20:13:42.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>OctoPrint versions up until and including 1.11.1 contain a vulnerability that allows an attacker with the <code>FILE_UPLOAD</code> permission to exfiltrate files from the host that OctoPrint has read access to, by moving them into the upload folder where they then can be downloaded from.</p>
<p>The primary risk lies in the potential exfiltration of secrets stored inside OctoPrint's config, or further system files. By removing important runtime files, this could also be used to impact the availability of the host. Given that the attacker requires a user account with file upload permissions, the actual impact of this should however hopefully be minimal in most cases.</p>
<h3 id="patches">Patches</h3>
<p>The vulnerability has been patched in version 1.11.2.</p>
<h3 id="details">Details</h3>
<p>A specially crafted HTTP Request to an affected upload endpoint that contains some form inputs only supposed to be used internally can be used to make OctoPrint move a file that it thinks is a freshly uploaded temporary one into its upload folder.</p>
<p>The following endpoints in OctoPrint are affected:</p>
<ul>
<li><code>/api/files/{local|sdcard}</code></li>
<li><code>/api/languages</code></li>
<li><code>/plugin/backup/restore</code></li>
<li><code>/plugin/pluginmanager/upload_file</code></li>
</ul>
<p>Further upload endpoints in third party plugins might be affected too.</p>
<p>The fix removes any internal-only form inputs from incoming requests in the central file upload processor component.</p>
<h3 id="credits">Credits</h3>
<p>This vulnerability was discovered and responsibly disclosed to OctoPrint by Jacopo Tediosi</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/OctoPrint/OctoPrint/security/advisories/GHSA-m9jh-jf9h-x3h2">https://github.com/OctoPrint/OctoPrint/security/advisories/GHSA-m9jh-jf9h-x3h2</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2025-48067">https://nvd.nist.gov/vuln/detail/CVE-2025-48067</a></li>
<li><a href="https://github.com/OctoPrint/OctoPrint/commit/9984b20773f5895a432f965b759999b16c57f7d8">https://github.com/OctoPrint/OctoPrint/commit/9984b20773f5895a432f965b759999b16c57f7d8</a></li>
<li><a href="https://github.com/advisories/GHSA-m9jh-jf9h-x3h2">https://github.com/advisories/GHSA-m9jh-jf9h-x3h2</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-m9jh-jf9h-x3h2</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2025-06-10T20:13:40.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[requests] Requests vulnerable to .netrc credentials leak via malicious URLs]]></title>
        <id>https://github.com/advisories/GHSA-9hjg-9r4m-mvj7</id>
        <link href="https://github.com/advisories/GHSA-9hjg-9r4m-mvj7"/>
        <updated>2025-06-09T19:06:12.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>Due to a URL parsing issue, Requests releases prior to 2.32.4 may leak .netrc credentials to third parties for specific maliciously-crafted URLs.</p>
<h3 id="workarounds">Workarounds</h3>
<p>For older versions of Requests, use of the .netrc file can be disabled with <code>trust_env=False</code> on your Requests Session (<a href="https://requests.readthedocs.io/en/latest/api/#requests.Session.trust_env">docs</a>).</p>
<h3 id="references">References</h3>
<p><a href="https://github.com/psf/requests/pull/6965">https://github.com/psf/requests/pull/6965</a>
<a href="https://seclists.org/fulldisclosure/2025/Jun/2">https://seclists.org/fulldisclosure/2025/Jun/2</a></p>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/psf/requests/security/advisories/GHSA-9hjg-9r4m-mvj7">https://github.com/psf/requests/security/advisories/GHSA-9hjg-9r4m-mvj7</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-47081">https://nvd.nist.gov/vuln/detail/CVE-2024-47081</a></li>
<li><a href="https://github.com/psf/requests/pull/6965">https://github.com/psf/requests/pull/6965</a></li>
<li><a href="https://github.com/psf/requests/commit/96ba401c1296ab1dda74a2365ef36d88f7d144ef">https://github.com/psf/requests/commit/96ba401c1296ab1dda74a2365ef36d88f7d144ef</a></li>
<li><a href="https://requests.readthedocs.io/en/latest/api/#requests.Session.trust_env">https://requests.readthedocs.io/en/latest/api/#requests.Session.trust_env</a></li>
<li><a href="https://seclists.org/fulldisclosure/2025/Jun/2">https://seclists.org/fulldisclosure/2025/Jun/2</a></li>
<li><a href="http://seclists.org/fulldisclosure/2025/Jun/2">http://seclists.org/fulldisclosure/2025/Jun/2</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2025/06/03/11">http://www.openwall.com/lists/oss-security/2025/06/03/11</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2025/06/03/9">http://www.openwall.com/lists/oss-security/2025/06/03/9</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2025/06/04/1">http://www.openwall.com/lists/oss-security/2025/06/04/1</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2025/06/04/6">http://www.openwall.com/lists/oss-security/2025/06/04/6</a></li>
<li><a href="https://github.com/advisories/GHSA-9hjg-9r4m-mvj7">https://github.com/advisories/GHSA-9hjg-9r4m-mvj7</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-9hjg-9r4m-mvj7</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2025-06-09T19:06:08.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[skyvern] Skyvern has a Jinja runtime leak]]></title>
        <id>https://github.com/advisories/GHSA-h92g-3xc3-ww2r</id>
        <link href="https://github.com/advisories/GHSA-h92g-3xc3-ww2r"/>
        <updated>2025-06-09T18:35:34.000Z</updated>
        <content type="html"><![CDATA[<p>Skyvern through 0.2.0 has a Jinja runtime leak in sdk/workflow/models/block.py.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2025-49619">https://nvd.nist.gov/vuln/detail/CVE-2025-49619</a></li>
<li><a href="https://github.com/Skyvern-AI/skyvern/commit/db856cd8433a204c8b45979c70a4da1e119d949d">https://github.com/Skyvern-AI/skyvern/commit/db856cd8433a204c8b45979c70a4da1e119d949d</a></li>
<li><a href="https://cristibtz.github.io/posts/CVE-2025-49619">https://cristibtz.github.io/posts/CVE-2025-49619</a></li>
<li><a href="https://cristibtz.blog/posts/CVE-2025-49619">https://cristibtz.blog/posts/CVE-2025-49619</a></li>
<li><a href="https://github.com/advisories/GHSA-h92g-3xc3-ww2r">https://github.com/advisories/GHSA-h92g-3xc3-ww2r</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-h92g-3xc3-ww2r</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2025-06-07T15:30:18.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[aiohttp] In aiohttp, compressed files as symlinks are not protected from path traversal]]></title>
        <id>https://github.com/advisories/GHSA-jwhx-xcg6-8xhj</id>
        <link href="https://github.com/advisories/GHSA-jwhx-xcg6-8xhj"/>
        <updated>2025-06-09T12:17:21.000Z</updated>
        <content type="html"><![CDATA[<h3 id="summary">Summary</h3>
<p>Static routes which contain files with compressed variants (<code>.gz</code> or <code>.br</code> extension) were vulnerable to path traversal outside the root directory if those variants are symbolic links.</p>
<h3 id="details">Details</h3>
<p>The server protects static routes from path traversal outside the root directory when <code>follow_symlinks=False</code> (default).  It does this by resolving the requested URL to an absolute path and then checking that path relative to the root.  However, these checks are not performed when looking for compressed variants in the <code>FileResponse</code> class, and symbolic links are then automatically followed when performing <code>Path.stat()</code> and <code>Path.open()</code> to send the file.</p>
<h3 id="impact">Impact</h3>
<p>Servers with static routes that contain compressed variants as symbolic links, pointing outside the root directory, or that permit users to upload or create such links, are impacted.</p>
<hr>
<p>Patch: <a href="https://github.com/aio-libs/aiohttp/pull/8653/files">https://github.com/aio-libs/aiohttp/pull/8653/files</a></p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/aio-libs/aiohttp/security/advisories/GHSA-jwhx-xcg6-8xhj">https://github.com/aio-libs/aiohttp/security/advisories/GHSA-jwhx-xcg6-8xhj</a></li>
<li><a href="https://github.com/aio-libs/aiohttp/pull/8653">https://github.com/aio-libs/aiohttp/pull/8653</a></li>
<li><a href="https://github.com/aio-libs/aiohttp/commit/ce2e9758814527589b10759a20783fb03b98339f">https://github.com/aio-libs/aiohttp/commit/ce2e9758814527589b10759a20783fb03b98339f</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-42367">https://nvd.nist.gov/vuln/detail/CVE-2024-42367</a></li>
<li><a href="https://github.com/aio-libs/aiohttp/blob/e0ff5246e1d29b7710ab1a2bbc972b48169f1c05/aiohttp/web_fileresponse.py#L177">https://github.com/aio-libs/aiohttp/blob/e0ff5246e1d29b7710ab1a2bbc972b48169f1c05/aiohttp/web_fileresponse.py#L177</a></li>
<li><a href="https://github.com/aio-libs/aiohttp/blob/e0ff5246e1d29b7710ab1a2bbc972b48169f1c05/aiohttp/web_urldispatcher.py#L674">https://github.com/aio-libs/aiohttp/blob/e0ff5246e1d29b7710ab1a2bbc972b48169f1c05/aiohttp/web_urldispatcher.py#L674</a></li>
<li><a href="https://github.com/advisories/GHSA-jwhx-xcg6-8xhj">https://github.com/advisories/GHSA-jwhx-xcg6-8xhj</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-jwhx-xcg6-8xhj</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-08-09T16:49:58.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[sentry-sdk] Sentry's Python SDK unintentionally exposes environment variables to subprocesses]]></title>
        <id>https://github.com/advisories/GHSA-g92j-qhmh-64v2</id>
        <link href="https://github.com/advisories/GHSA-g92j-qhmh-64v2"/>
        <updated>2025-06-06T22:27:44.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>The bug in Sentry's Python SDK &lt;2.8.0 results in the unintentional exposure of environment variables to subprocesses despite the <code>env={}</code> setting.</p>
<h3 id="details">Details</h3>
<p>In Python's <code>subprocess</code> calls, all environment variables are passed to subprocesses by default. However, if you specifically do not want them to be passed to subprocesses, you may use <code>env</code> argument in <code>subprocess</code> calls, like in this example:</p>
<pre><code>&gt;&gt;&gt; subprocess.check_output(["env"], env={"TEST":"1"})
b'TEST=1\n'
</code></pre>
<p>If you'd want to not pass any variables, you can set an empty dict:</p>
<pre><code>&gt;&gt;&gt; subprocess.check_output(["env"], env={})
b''
</code></pre>
<p>However, the bug in Sentry SDK &lt;2.8.0 causes <strong>all environment variables</strong> to be passed to the subprocesses when <code>env={}</code> is set, unless the Sentry SDK's <a href="https://docs.sentry.io/platforms/python/integrations/default-integrations/#stdlib">Stdlib</a> integration is disabled. The Stdlib integration is enabled by default.</p>
<h3 id="patches">Patches</h3>
<p>The issue has been patched in <a href="https://github.com/getsentry/sentry-python/pull/3251">https://github.com/getsentry/sentry-python/pull/3251</a> and the fix released in <a href="https://github.com/getsentry/sentry-python/releases/tag/2.8.0">sentry-sdk==2.8.0</a>. The fix was also backported to <a href="https://github.com/getsentry/sentry-python/releases/tag/1.45.1">sentry-sdk==1.45.1</a>.</p>
<h3 id="workarounds">Workarounds</h3>
<p>We strongly recommend upgrading to the latest SDK version. However, if it's not possible, and if passing environment variables to child processes poses a security risk for you, there are two options:</p>
<ol>
<li>In your application, replace <code>env={}</code> with the minimal dict <code>env={"EMPTY_ENV":"1"}</code> or similar.</li>
</ol>
<p>OR</p>
<ol start="2">
<li>Disable Stdlib integration:</li>
</ol>
<pre><code>import sentry_sdk

# Should go before sentry_sdk.init
sentry_sdk.integrations._DEFAULT_INTEGRATIONS.remove("sentry_sdk.integrations.stdlib.StdlibIntegration")

sentry_sdk.init(...)
</code></pre>
<h3 id="references">References</h3>
<ul>
<li>Sentry docs: <a href="https://docs.sentry.io/platforms/python/integrations/default-integrations/">Default integrations</a></li>
<li>Python docs: <a href="https://docs.python.org/3/library/subprocess.html">subprocess module</a></li>
<li>Patch <a href="https://github.com/getsentry/sentry-python/pull/3251">https://github.com/getsentry/sentry-python/pull/3251</a></li>
</ul>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/getsentry/sentry-python/security/advisories/GHSA-g92j-qhmh-64v2">https://github.com/getsentry/sentry-python/security/advisories/GHSA-g92j-qhmh-64v2</a></li>
<li><a href="https://github.com/getsentry/sentry-python/pull/3251">https://github.com/getsentry/sentry-python/pull/3251</a></li>
<li><a href="https://github.com/getsentry/sentry-python/commit/763e40aa4cb57ecced467f48f78f335c87e9bdff">https://github.com/getsentry/sentry-python/commit/763e40aa4cb57ecced467f48f78f335c87e9bdff</a></li>
<li><a href="https://docs.python.org/3/library/subprocess.html">https://docs.python.org/3/library/subprocess.html</a></li>
<li><a href="https://docs.sentry.io/platforms/python/integrations/default-integrations">https://docs.sentry.io/platforms/python/integrations/default-integrations</a></li>
<li><a href="https://docs.sentry.io/platforms/python/integrations/default-integrations/#stdlib">https://docs.sentry.io/platforms/python/integrations/default-integrations/#stdlib</a></li>
<li><a href="https://github.com/getsentry/sentry-python/releases/tag/2.8.0">https://github.com/getsentry/sentry-python/releases/tag/2.8.0</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-40647">https://nvd.nist.gov/vuln/detail/CVE-2024-40647</a></li>
<li><a href="https://github.com/getsentry/sentry-python/releases/tag/1.45.1">https://github.com/getsentry/sentry-python/releases/tag/1.45.1</a></li>
<li><a href="https://github.com/advisories/GHSA-g92j-qhmh-64v2">https://github.com/advisories/GHSA-g92j-qhmh-64v2</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-g92j-qhmh-64v2</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2024-07-18T17:18:46.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[sentry-sdk] Sentry's Python SDK unintentionally exposes environment variables to subprocesses]]></title>
        <id>https://github.com/advisories/GHSA-g92j-qhmh-64v2</id>
        <link href="https://github.com/advisories/GHSA-g92j-qhmh-64v2"/>
        <updated>2025-06-06T22:27:44.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>The bug in Sentry's Python SDK &lt;2.8.0 results in the unintentional exposure of environment variables to subprocesses despite the <code>env={}</code> setting.</p>
<h3 id="details">Details</h3>
<p>In Python's <code>subprocess</code> calls, all environment variables are passed to subprocesses by default. However, if you specifically do not want them to be passed to subprocesses, you may use <code>env</code> argument in <code>subprocess</code> calls, like in this example:</p>
<pre><code>&gt;&gt;&gt; subprocess.check_output(["env"], env={"TEST":"1"})
b'TEST=1\n'
</code></pre>
<p>If you'd want to not pass any variables, you can set an empty dict:</p>
<pre><code>&gt;&gt;&gt; subprocess.check_output(["env"], env={})
b''
</code></pre>
<p>However, the bug in Sentry SDK &lt;2.8.0 causes <strong>all environment variables</strong> to be passed to the subprocesses when <code>env={}</code> is set, unless the Sentry SDK's <a href="https://docs.sentry.io/platforms/python/integrations/default-integrations/#stdlib">Stdlib</a> integration is disabled. The Stdlib integration is enabled by default.</p>
<h3 id="patches">Patches</h3>
<p>The issue has been patched in <a href="https://github.com/getsentry/sentry-python/pull/3251">https://github.com/getsentry/sentry-python/pull/3251</a> and the fix released in <a href="https://github.com/getsentry/sentry-python/releases/tag/2.8.0">sentry-sdk==2.8.0</a>. The fix was also backported to <a href="https://github.com/getsentry/sentry-python/releases/tag/1.45.1">sentry-sdk==1.45.1</a>.</p>
<h3 id="workarounds">Workarounds</h3>
<p>We strongly recommend upgrading to the latest SDK version. However, if it's not possible, and if passing environment variables to child processes poses a security risk for you, there are two options:</p>
<ol>
<li>In your application, replace <code>env={}</code> with the minimal dict <code>env={"EMPTY_ENV":"1"}</code> or similar.</li>
</ol>
<p>OR</p>
<ol start="2">
<li>Disable Stdlib integration:</li>
</ol>
<pre><code>import sentry_sdk

# Should go before sentry_sdk.init
sentry_sdk.integrations._DEFAULT_INTEGRATIONS.remove("sentry_sdk.integrations.stdlib.StdlibIntegration")

sentry_sdk.init(...)
</code></pre>
<h3 id="references">References</h3>
<ul>
<li>Sentry docs: <a href="https://docs.sentry.io/platforms/python/integrations/default-integrations/">Default integrations</a></li>
<li>Python docs: <a href="https://docs.python.org/3/library/subprocess.html">subprocess module</a></li>
<li>Patch <a href="https://github.com/getsentry/sentry-python/pull/3251">https://github.com/getsentry/sentry-python/pull/3251</a></li>
</ul>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/getsentry/sentry-python/security/advisories/GHSA-g92j-qhmh-64v2">https://github.com/getsentry/sentry-python/security/advisories/GHSA-g92j-qhmh-64v2</a></li>
<li><a href="https://github.com/getsentry/sentry-python/pull/3251">https://github.com/getsentry/sentry-python/pull/3251</a></li>
<li><a href="https://github.com/getsentry/sentry-python/commit/763e40aa4cb57ecced467f48f78f335c87e9bdff">https://github.com/getsentry/sentry-python/commit/763e40aa4cb57ecced467f48f78f335c87e9bdff</a></li>
<li><a href="https://docs.python.org/3/library/subprocess.html">https://docs.python.org/3/library/subprocess.html</a></li>
<li><a href="https://docs.sentry.io/platforms/python/integrations/default-integrations">https://docs.sentry.io/platforms/python/integrations/default-integrations</a></li>
<li><a href="https://docs.sentry.io/platforms/python/integrations/default-integrations/#stdlib">https://docs.sentry.io/platforms/python/integrations/default-integrations/#stdlib</a></li>
<li><a href="https://github.com/getsentry/sentry-python/releases/tag/2.8.0">https://github.com/getsentry/sentry-python/releases/tag/2.8.0</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-40647">https://nvd.nist.gov/vuln/detail/CVE-2024-40647</a></li>
<li><a href="https://github.com/getsentry/sentry-python/releases/tag/1.45.1">https://github.com/getsentry/sentry-python/releases/tag/1.45.1</a></li>
<li><a href="https://github.com/advisories/GHSA-g92j-qhmh-64v2">https://github.com/advisories/GHSA-g92j-qhmh-64v2</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-g92j-qhmh-64v2</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2024-07-18T17:18:46.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[llama-index] llama_index vulnerable to SQL Injection]]></title>
        <id>https://github.com/advisories/GHSA-v3c8-3pr6-gr7p</id>
        <link href="https://github.com/advisories/GHSA-v3c8-3pr6-gr7p"/>
        <updated>2025-06-06T17:24:33.000Z</updated>
        <content type="html"><![CDATA[<p>Multiple vector store integrations in run-llama/llama_index version v0.12.21 have SQL injection vulnerabilities. These vulnerabilities allow an attacker to read and write data using SQL, potentially leading to unauthorized access to data of other users depending on the usage of the llama-index library in a web application.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2025-1793">https://nvd.nist.gov/vuln/detail/CVE-2025-1793</a></li>
<li><a href="https://github.com/run-llama/llama_index/commit/0008041e8dde8e519621388e5d6f558bde6ef42e">https://github.com/run-llama/llama_index/commit/0008041e8dde8e519621388e5d6f558bde6ef42e</a></li>
<li><a href="https://huntr.com/bounties/8cb1555a-9655-4122-b0d6-60059e79183c">https://huntr.com/bounties/8cb1555a-9655-4122-b0d6-60059e79183c</a></li>
<li><a href="https://github.com/advisories/GHSA-v3c8-3pr6-gr7p">https://github.com/advisories/GHSA-v3c8-3pr6-gr7p</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-v3c8-3pr6-gr7p</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2025-06-05T06:30:26.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[Django] Django Improper Output Neutralization for Logs vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-7xr5-9hcq-chf9</id>
        <link href="https://github.com/advisories/GHSA-7xr5-9hcq-chf9"/>
        <updated>2025-06-10T20:03:55.000Z</updated>
        <content type="html"><![CDATA[<p>An issue was discovered in Django 5.2 before 5.2.2, 5.1 before 5.1.10, and 4.2 before 4.2.22. Internal HTTP response logging does not escape request.path, which allows remote attackers to potentially manipulate log output via crafted URLs. This may lead to log injection or forgery when logs are viewed in terminals or processed by external systems.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2025-48432">https://nvd.nist.gov/vuln/detail/CVE-2025-48432</a></li>
<li><a href="https://docs.djangoproject.com/en/dev/releases/security">https://docs.djangoproject.com/en/dev/releases/security</a></li>
<li><a href="https://groups.google.com/g/django-announce">https://groups.google.com/g/django-announce</a></li>
<li><a href="https://www.djangoproject.com/weblog/2025/jun/04/security-releases">https://www.djangoproject.com/weblog/2025/jun/04/security-releases</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2025/06/04/5">http://www.openwall.com/lists/oss-security/2025/06/04/5</a></li>
<li><a href="https://github.com/pypa/advisory-database/tree/main/vulns/django/PYSEC-2025-47.yaml">https://github.com/pypa/advisory-database/tree/main/vulns/django/PYSEC-2025-47.yaml</a></li>
<li><a href="https://www.djangoproject.com/weblog/2025/jun/10/bugfix-releases">https://www.djangoproject.com/weblog/2025/jun/10/bugfix-releases</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2025/06/10/2">http://www.openwall.com/lists/oss-security/2025/06/10/2</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2025/06/10/3">http://www.openwall.com/lists/oss-security/2025/06/10/3</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2025/06/10/4">http://www.openwall.com/lists/oss-security/2025/06/10/4</a></li>
<li><a href="https://github.com/advisories/GHSA-7xr5-9hcq-chf9">https://github.com/advisories/GHSA-7xr5-9hcq-chf9</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-7xr5-9hcq-chf9</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2025-06-05T03:30:58.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[Django] Django Improper Output Neutralization for Logs vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-7xr5-9hcq-chf9</id>
        <link href="https://github.com/advisories/GHSA-7xr5-9hcq-chf9"/>
        <updated>2025-06-10T20:03:55.000Z</updated>
        <content type="html"><![CDATA[<p>An issue was discovered in Django 5.2 before 5.2.2, 5.1 before 5.1.10, and 4.2 before 4.2.22. Internal HTTP response logging does not escape request.path, which allows remote attackers to potentially manipulate log output via crafted URLs. This may lead to log injection or forgery when logs are viewed in terminals or processed by external systems.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2025-48432">https://nvd.nist.gov/vuln/detail/CVE-2025-48432</a></li>
<li><a href="https://docs.djangoproject.com/en/dev/releases/security">https://docs.djangoproject.com/en/dev/releases/security</a></li>
<li><a href="https://groups.google.com/g/django-announce">https://groups.google.com/g/django-announce</a></li>
<li><a href="https://www.djangoproject.com/weblog/2025/jun/04/security-releases">https://www.djangoproject.com/weblog/2025/jun/04/security-releases</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2025/06/04/5">http://www.openwall.com/lists/oss-security/2025/06/04/5</a></li>
<li><a href="https://github.com/pypa/advisory-database/tree/main/vulns/django/PYSEC-2025-47.yaml">https://github.com/pypa/advisory-database/tree/main/vulns/django/PYSEC-2025-47.yaml</a></li>
<li><a href="https://www.djangoproject.com/weblog/2025/jun/10/bugfix-releases">https://www.djangoproject.com/weblog/2025/jun/10/bugfix-releases</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2025/06/10/2">http://www.openwall.com/lists/oss-security/2025/06/10/2</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2025/06/10/3">http://www.openwall.com/lists/oss-security/2025/06/10/3</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2025/06/10/4">http://www.openwall.com/lists/oss-security/2025/06/10/4</a></li>
<li><a href="https://github.com/advisories/GHSA-7xr5-9hcq-chf9">https://github.com/advisories/GHSA-7xr5-9hcq-chf9</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-7xr5-9hcq-chf9</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2025-06-05T03:30:58.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[Django] Django Improper Output Neutralization for Logs vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-7xr5-9hcq-chf9</id>
        <link href="https://github.com/advisories/GHSA-7xr5-9hcq-chf9"/>
        <updated>2025-06-10T20:03:55.000Z</updated>
        <content type="html"><![CDATA[<p>An issue was discovered in Django 5.2 before 5.2.2, 5.1 before 5.1.10, and 4.2 before 4.2.22. Internal HTTP response logging does not escape request.path, which allows remote attackers to potentially manipulate log output via crafted URLs. This may lead to log injection or forgery when logs are viewed in terminals or processed by external systems.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2025-48432">https://nvd.nist.gov/vuln/detail/CVE-2025-48432</a></li>
<li><a href="https://docs.djangoproject.com/en/dev/releases/security">https://docs.djangoproject.com/en/dev/releases/security</a></li>
<li><a href="https://groups.google.com/g/django-announce">https://groups.google.com/g/django-announce</a></li>
<li><a href="https://www.djangoproject.com/weblog/2025/jun/04/security-releases">https://www.djangoproject.com/weblog/2025/jun/04/security-releases</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2025/06/04/5">http://www.openwall.com/lists/oss-security/2025/06/04/5</a></li>
<li><a href="https://github.com/pypa/advisory-database/tree/main/vulns/django/PYSEC-2025-47.yaml">https://github.com/pypa/advisory-database/tree/main/vulns/django/PYSEC-2025-47.yaml</a></li>
<li><a href="https://www.djangoproject.com/weblog/2025/jun/10/bugfix-releases">https://www.djangoproject.com/weblog/2025/jun/10/bugfix-releases</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2025/06/10/2">http://www.openwall.com/lists/oss-security/2025/06/10/2</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2025/06/10/3">http://www.openwall.com/lists/oss-security/2025/06/10/3</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2025/06/10/4">http://www.openwall.com/lists/oss-security/2025/06/10/4</a></li>
<li><a href="https://github.com/advisories/GHSA-7xr5-9hcq-chf9">https://github.com/advisories/GHSA-7xr5-9hcq-chf9</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-7xr5-9hcq-chf9</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2025-06-05T03:30:58.000Z</published>
    </entry>
</feed>