<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://azu.github.io/github-advisory-database-rss/pip.rss</id>
    <title>Security Advisory for Python packages hosted at PyPI.org</title>
    <updated>2025-01-03T19:01:14.541Z</updated>
    <generator>github-advisory-database-rss</generator>
    <link rel="alternate" href="https://github.com/advisories?query=type%3Areviewed+ecosystem%3Apip"/>
    <subtitle>Security Advisory for Python packages hosted at PyPI.org on GitHub</subtitle>
    <rights>github-advisory-database-rss</rights>
    <category term="CRITICAL"/>
    <category term="HIGH"/>
    <category term="MODERATE"/>
    <category term="LOW"/>
    <entry>
        <title type="html"><![CDATA[[letta] Letta (previously MemGPT) incorrect access control vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-7p2g-2vxc-5g55</id>
        <link href="https://github.com/advisories/GHSA-7p2g-2vxc-5g55"/>
        <updated>2025-01-02T17:23:00.000Z</updated>
        <content type="html"><![CDATA[<p>Incorrect access control in the /users endpoint of Cpacker MemGPT v0.3.17 allows attackers to access sensitive data.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-39025">https://nvd.nist.gov/vuln/detail/CVE-2024-39025</a></li>
<li><a href="https://github.com/letta-ai/letta/releases/tag/0.3.17">https://github.com/letta-ai/letta/releases/tag/0.3.17</a></li>
<li><a href="https://medium.com/@cnetsec/a-vulnerability-cve-2024-39025-has-been-identified-in-lettaai-memgpt-v0-3-17-146cb38bb6db">https://medium.com/@cnetsec/a-vulnerability-cve-2024-39025-has-been-identified-in-lettaai-memgpt-v0-3-17-146cb38bb6db</a></li>
<li><a href="https://github.com/letta-ai/letta/blob/0.3.17/memgpt/server/rest_api/admin/users.py#L55-L68">https://github.com/letta-ai/letta/blob/0.3.17/memgpt/server/rest_api/admin/users.py#L55-L68</a></li>
<li><a href="https://github.com/advisories/GHSA-7p2g-2vxc-5g55">https://github.com/advisories/GHSA-7p2g-2vxc-5g55</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-7p2g-2vxc-5g55</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-12-27T21:30:30.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[khoj] khoj has an IDOR in subscription management allows unauthorized subscription modifications]]></title>
        <id>https://github.com/advisories/GHSA-hq4h-w933-jm6c</id>
        <link href="https://github.com/advisories/GHSA-hq4h-w933-jm6c"/>
        <updated>2024-12-30T18:43:17.000Z</updated>
        <content type="html"><![CDATA[<h3 id="summary">Summary</h3>
<p>An Insecure Direct Object Reference (IDOR) vulnerability in the update_subscription endpoint allows any authenticated user to manipulate other users' Stripe subscriptions by simply modifying the email parameter in the request.</p>
<h3 id="details">Details</h3>
<p>The vulnerability exists in the subscription endpoint at <code>/api/subscription</code>. The endpoint uses an email parameter as a direct reference to user subscriptions without verifying object ownership. While authentication is required, there is no authorization check to verify if the authenticated user owns the referenced subscription.</p>
<p>Vulnerable code in <code>/api/subscription</code>:</p>
<pre><code class="language-python">@subscription_router.patch("")
@requires(["authenticated"])
async def update_subscription(request: Request, email: str, operation: str):
    # IDOR: email parameter directly references user subscriptions without ownership verification
    customers = stripe.Customer.list(email=email).auto_paging_iter()
    customer = next(customers, None)
    
    if operation == "cancel":
        # Any authenticated user can modify any subscription referenced by email
        customer_id = customer.id
        for subscription in stripe.Subscription.list(customer=customer_id):
            stripe.Subscription.modify(subscription.id, cancel_at_period_end=True)
</code></pre>
<h3 id="poc">PoC</h3>
<ol>
<li><p>Create a customer account in stripe:</p>
<ul>
<li>Customer A: <code>adventure8812@zeropath.com</code> (attacker)</li>
</ul>
</li>
<li><p>Log in as any user.</p>
</li>
<li><p>Send this request:</p>
</li>
</ol>
<pre><code class="language-http">PATCH /api/subscription?email=adventure8812@zeropath.com&amp;operation=cancel HTTP/1.1
</code></pre>
<ol start="4">
<li>The subscription for Customer A is successfully set to cancel.</li>
</ol>
<h3 id="impact">Impact</h3>
<p>High:
Revenue loss via mass cancellation of subscriptions.
Loss of customer trust by re-enabling subscriptions they had set to cancel.</p>
<h3 id="resolution">Resolution</h3>
<p>This was fixed in the following commit which limited subscription update operations to the authenticated user: <a href="https://github.com/khoj-ai/khoj/commit/47d3c8c23597900af708bdc60aced3ae5d2064c1">https://github.com/khoj-ai/khoj/commit/47d3c8c23597900af708bdc60aced3ae5d2064c1</a>. Support for arbitrarily presenting an email for update has been deprecated.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/khoj-ai/khoj/security/advisories/GHSA-hq4h-w933-jm6c">https://github.com/khoj-ai/khoj/security/advisories/GHSA-hq4h-w933-jm6c</a></li>
<li><a href="https://github.com/khoj-ai/khoj/commit/47d3c8c23597900af708bdc60aced3ae5d2064c1">https://github.com/khoj-ai/khoj/commit/47d3c8c23597900af708bdc60aced3ae5d2064c1</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-52294">https://nvd.nist.gov/vuln/detail/CVE-2024-52294</a></li>
<li><a href="https://github.com/advisories/GHSA-hq4h-w933-jm6c">https://github.com/advisories/GHSA-hq4h-w933-jm6c</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-hq4h-w933-jm6c</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-12-30T16:12:40.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[Quart] Werkzeug possible resource exhaustion when parsing file data in forms]]></title>
        <id>https://github.com/advisories/GHSA-q34m-jh98-gwm2</id>
        <link href="https://github.com/advisories/GHSA-q34m-jh98-gwm2"/>
        <updated>2025-01-03T12:31:32.000Z</updated>
        <content type="html"><![CDATA[<p>Applications using Werkzeug to parse <code>multipart/form-data</code> requests are vulnerable to resource exhaustion. A specially crafted form body can bypass the <code>Request.max_form_memory_size</code> setting.</p>
<p>The <code>Request.max_content_length</code> setting, as well as resource limits provided by deployment software and platforms, are also available to limit the resources used during a request. This vulnerability does not affect those settings. All three types of limits should be considered and set appropriately when deploying an application.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/pallets/werkzeug/security/advisories/GHSA-q34m-jh98-gwm2">https://github.com/pallets/werkzeug/security/advisories/GHSA-q34m-jh98-gwm2</a></li>
<li><a href="https://github.com/pallets/quart/commit/5e78c4169b8eb66b91ead3e62d44721b9e1644ee">https://github.com/pallets/quart/commit/5e78c4169b8eb66b91ead3e62d44721b9e1644ee</a></li>
<li><a href="https://github.com/pallets/werkzeug/commit/50cfeebcb0727e18cc52ffbeb125f4a66551179b">https://github.com/pallets/werkzeug/commit/50cfeebcb0727e18cc52ffbeb125f4a66551179b</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-49767">https://nvd.nist.gov/vuln/detail/CVE-2024-49767</a></li>
<li><a href="https://github.com/pallets/werkzeug/releases/tag/3.0.6">https://github.com/pallets/werkzeug/releases/tag/3.0.6</a></li>
<li><a href="https://github.com/pallets/quart/commit/abb04a512496206de279225340ed022852fbf51f">https://github.com/pallets/quart/commit/abb04a512496206de279225340ed022852fbf51f</a></li>
<li><a href="https://security.netapp.com/advisory/ntap-20250103-0007">https://security.netapp.com/advisory/ntap-20250103-0007</a></li>
<li><a href="https://github.com/advisories/GHSA-q34m-jh98-gwm2">https://github.com/advisories/GHSA-q34m-jh98-gwm2</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-q34m-jh98-gwm2</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-10-25T19:44:43.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[python-sql] python-sql SQL injection vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-pq9p-pc3p-9hm4</id>
        <link href="https://github.com/advisories/GHSA-pq9p-pc3p-9hm4"/>
        <updated>2024-12-27T18:02:42.000Z</updated>
        <content type="html"><![CDATA[<p>A vulnerability was found in python-sql where unary operators do not escape non-Expression (like <code>And</code> and <code>Or</code>) which makes any system exposing those vulnerable to an SQL injection attack.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-9774">https://nvd.nist.gov/vuln/detail/CVE-2024-9774</a></li>
<li><a href="https://discuss.tryton.org/t/security-release-for-issue-93/7889/3">https://discuss.tryton.org/t/security-release-for-issue-93/7889/3</a></li>
<li><a href="https://lists.debian.org/debian-lts-announce/2024/10/msg00023.html">https://lists.debian.org/debian-lts-announce/2024/10/msg00023.html</a></li>
<li><a href="https://bugs.tryton.org/python-sql/93">https://bugs.tryton.org/python-sql/93</a></li>
<li><a href="https://discuss.tryton.org/t/security-release-for-issue-93/7889">https://discuss.tryton.org/t/security-release-for-issue-93/7889</a></li>
<li><a href="https://foss.heptapod.net/tryton/python-sql/-/commit/f20551bbb8b3b4c4dd0a2c3d36f377bff6f2f349">https://foss.heptapod.net/tryton/python-sql/-/commit/f20551bbb8b3b4c4dd0a2c3d36f377bff6f2f349</a></li>
<li><a href="https://github.com/advisories/GHSA-pq9p-pc3p-9hm4">https://github.com/advisories/GHSA-pq9p-pc3p-9hm4</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-pq9p-pc3p-9hm4</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-12-27T03:31:23.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[changedetection.io] changedetection.io Vulnerable to Improper Input Validation Leading to LFR/Path Traversal]]></title>
        <id>https://github.com/advisories/GHSA-j5vv-6wjg-cfr8</id>
        <link href="https://github.com/advisories/GHSA-j5vv-6wjg-cfr8"/>
        <updated>2024-12-27T19:09:07.000Z</updated>
        <content type="html"><![CDATA[<h3 id="summary">Summary</h3>
<p>Improper input validation in the application can allow attackers to perform local file read (LFR) or path traversal attacks. These vulnerabilities occur when user input is used to construct file paths without adequate sanitization or validation. For example, using <code>file:../../../etc/passwd</code> or <code>file: ///etc/passwd</code> can bypass weak validations and allow unauthorized access to sensitive files. Even though this has been addressed in previous patch, it is still insufficient.</p>
<h3 id="details">Details</h3>
<p>The check in this line of code is insufficient.</p>
<pre><code>if re.search(r'^file:/', url.strip(), re.IGNORECASE):
</code></pre>
<p>The attacker can still bypass this by using:
-<code>file:../../../../etc/passwd</code>
-<code>file: ///etc/passwd</code> (with space before /)</p>
<h3 id="poc">PoC</h3>
<ul>
<li>Open up a changedetection.io instance with a webdriver configured.</li>
<li>Create a new watch with <code>file:../../../../etc/passwd</code>.</li>
<li>Check the watch preview.</li>
<li>The contents of <code>/etc/passwd</code> should pop out.</li>
</ul>
<h3 id="screenshots">Screenshots</h3>
<p><img alt="image" src="https://github.com/user-attachments/assets/55c34f2e-cafb-4a7a-a7ef-ec222e3f519b">
<img alt="image" src="https://github.com/user-attachments/assets/d41189f5-7bf2-48b5-9ce3-c26f79cefeda"></p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/dgtlmoon/changedetection.io/security/advisories/GHSA-j5vv-6wjg-cfr8">https://github.com/dgtlmoon/changedetection.io/security/advisories/GHSA-j5vv-6wjg-cfr8</a></li>
<li><a href="https://github.com/dgtlmoon/changedetection.io/commit/4419bc0e61d0b03c588bd573a3602bbcfd953671">https://github.com/dgtlmoon/changedetection.io/commit/4419bc0e61d0b03c588bd573a3602bbcfd953671</a></li>
<li><a href="https://github.com/dgtlmoon/changedetection.io/commit/f7e9846c9b40a229813d19cdb66bf60fbe5e6a2a">https://github.com/dgtlmoon/changedetection.io/commit/f7e9846c9b40a229813d19cdb66bf60fbe5e6a2a</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-56509">https://nvd.nist.gov/vuln/detail/CVE-2024-56509</a></li>
<li><a href="https://github.com/advisories/GHSA-j5vv-6wjg-cfr8">https://github.com/advisories/GHSA-j5vv-6wjg-cfr8</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-j5vv-6wjg-cfr8</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-12-27T18:02:02.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[redshift_connector] Amazon Redshift Python Connector vulnerable to SQL Injection]]></title>
        <id>https://github.com/advisories/GHSA-8gc2-vq6m-rwjw</id>
        <link href="https://github.com/advisories/GHSA-8gc2-vq6m-rwjw"/>
        <updated>2024-12-26T20:28:10.000Z</updated>
        <content type="html"><![CDATA[<h3 id="summary">Summary</h3>
<p>A SQL injection in the Amazon Redshift Python Connector in version 2.1.4 allows a user to gain escalated privileges via schema injection in the get_schemas, get_tables, or get_columns Metadata APIs. Users should upgrade to the driver version 2.1.5 or revert to driver version 2.1.3.</p>
<h3 id="impact">Impact</h3>
<p>A SQL injection is possible in the Amazon Redshift Python Connector, version 2.1.4, when leveraging metadata APIs to retrieve information about database schemas, tables, or columns.</p>
<p><strong>Impacted versions:</strong> Amazon Redshift Python Connector version 2.1.4.</p>
<h3 id="patches">Patches</h3>
<p>The issue described above has been addressed in the Amazon Redshift Python Connector, version 2.1.5. </p>
<p>The patch implemented in this version ensures that every metadata command input is sent to the Redshift server as part of a parameterized query, using either QUOTE_IDENT(string) or QUOTE_LITERAL(string). After processing all the inputs into quoted identifiers or literals, the metadata command is composed using these inputs and then executed on the server.</p>
<h3 id="workarounds">Workarounds</h3>
<p>Use the previous version of the Amazon Redshift Python Connector, version 2.1.3.</p>
<h3 id="references">References</h3>
<p>If you have any questions or comments about this advisory we ask that you contact AWS/Amazon Security via our vulnerability reporting page [1] or directly via email to <a href="mailto:aws-security@amazon.com">aws-security@amazon.com</a>. Please do not create a public GitHub issue.</p>
<p>[1] Vulnerability reporting page: <a href="https://aws.amazon.com/security/vulnerability-reporting">https://aws.amazon.com/security/vulnerability-reporting</a></p>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/aws/amazon-redshift-python-driver/security/advisories/GHSA-8gc2-vq6m-rwjw">https://github.com/aws/amazon-redshift-python-driver/security/advisories/GHSA-8gc2-vq6m-rwjw</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-12745">https://nvd.nist.gov/vuln/detail/CVE-2024-12745</a></li>
<li><a href="https://aws.amazon.com/security/security-bulletins/AWS-2024-015">https://aws.amazon.com/security/security-bulletins/AWS-2024-015</a></li>
<li><a href="https://github.com/advisories/GHSA-8gc2-vq6m-rwjw">https://github.com/advisories/GHSA-8gc2-vq6m-rwjw</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-8gc2-vq6m-rwjw</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-12-26T20:28:09.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[koji] Koji Cross-site Scripting]]></title>
        <id>https://github.com/advisories/GHSA-g2vg-8hfg-79vj</id>
        <link href="https://github.com/advisories/GHSA-g2vg-8hfg-79vj"/>
        <updated>2024-12-26T20:22:35.000Z</updated>
        <content type="html"><![CDATA[<p>A vulnerability in Koji was found. An unsanitized input allows for an XSS attack. Javascript code from a malicious link could be reflected in the resulting web page. It is not expected to be able to submit an action or make a change in Koji due to existing XSS protections in the code.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-9427">https://nvd.nist.gov/vuln/detail/CVE-2024-9427</a></li>
<li><a href="https://bugzilla.redhat.com/show_bug.cgi?id=2316047">https://bugzilla.redhat.com/show_bug.cgi?id=2316047</a></li>
<li><a href="https://docs.pagure.org/koji/CVEs/CVE-2024-9427">https://docs.pagure.org/koji/CVEs/CVE-2024-9427</a></li>
<li><a href="https://pagure.io/koji/c/8c72d90d7bb991f8fb193851b80847ac9e9474a4?branch=master">https://pagure.io/koji/c/8c72d90d7bb991f8fb193851b80847ac9e9474a4?branch=master</a></li>
<li><a href="https://github.com/advisories/GHSA-g2vg-8hfg-79vj">https://github.com/advisories/GHSA-g2vg-8hfg-79vj</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-g2vg-8hfg-79vj</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-12-24T06:30:42.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[koji] Koji Cross-site Scripting]]></title>
        <id>https://github.com/advisories/GHSA-g2vg-8hfg-79vj</id>
        <link href="https://github.com/advisories/GHSA-g2vg-8hfg-79vj"/>
        <updated>2024-12-26T20:22:35.000Z</updated>
        <content type="html"><![CDATA[<p>A vulnerability in Koji was found. An unsanitized input allows for an XSS attack. Javascript code from a malicious link could be reflected in the resulting web page. It is not expected to be able to submit an action or make a change in Koji due to existing XSS protections in the code.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-9427">https://nvd.nist.gov/vuln/detail/CVE-2024-9427</a></li>
<li><a href="https://bugzilla.redhat.com/show_bug.cgi?id=2316047">https://bugzilla.redhat.com/show_bug.cgi?id=2316047</a></li>
<li><a href="https://docs.pagure.org/koji/CVEs/CVE-2024-9427">https://docs.pagure.org/koji/CVEs/CVE-2024-9427</a></li>
<li><a href="https://pagure.io/koji/c/8c72d90d7bb991f8fb193851b80847ac9e9474a4?branch=master">https://pagure.io/koji/c/8c72d90d7bb991f8fb193851b80847ac9e9474a4?branch=master</a></li>
<li><a href="https://github.com/advisories/GHSA-g2vg-8hfg-79vj">https://github.com/advisories/GHSA-g2vg-8hfg-79vj</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-g2vg-8hfg-79vj</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-12-24T06:30:42.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[koji] Koji Cross-site Scripting]]></title>
        <id>https://github.com/advisories/GHSA-g2vg-8hfg-79vj</id>
        <link href="https://github.com/advisories/GHSA-g2vg-8hfg-79vj"/>
        <updated>2024-12-26T20:22:35.000Z</updated>
        <content type="html"><![CDATA[<p>A vulnerability in Koji was found. An unsanitized input allows for an XSS attack. Javascript code from a malicious link could be reflected in the resulting web page. It is not expected to be able to submit an action or make a change in Koji due to existing XSS protections in the code.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-9427">https://nvd.nist.gov/vuln/detail/CVE-2024-9427</a></li>
<li><a href="https://bugzilla.redhat.com/show_bug.cgi?id=2316047">https://bugzilla.redhat.com/show_bug.cgi?id=2316047</a></li>
<li><a href="https://docs.pagure.org/koji/CVEs/CVE-2024-9427">https://docs.pagure.org/koji/CVEs/CVE-2024-9427</a></li>
<li><a href="https://pagure.io/koji/c/8c72d90d7bb991f8fb193851b80847ac9e9474a4?branch=master">https://pagure.io/koji/c/8c72d90d7bb991f8fb193851b80847ac9e9474a4?branch=master</a></li>
<li><a href="https://github.com/advisories/GHSA-g2vg-8hfg-79vj">https://github.com/advisories/GHSA-g2vg-8hfg-79vj</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-g2vg-8hfg-79vj</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-12-24T06:30:42.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[jinja2] Jinja has a sandbox breakout through indirect reference to format method]]></title>
        <id>https://github.com/advisories/GHSA-q2x7-8rv6-6q7h</id>
        <link href="https://github.com/advisories/GHSA-q2x7-8rv6-6q7h"/>
        <updated>2024-12-27T19:10:38.000Z</updated>
        <content type="html"><![CDATA[<p>An oversight in how the Jinja sandboxed environment detects calls to <code>str.format</code> allows an attacker that controls the content of a template to execute arbitrary Python code.</p>
<p>To exploit the vulnerability, an attacker needs to control the content of a template. Whether that is the case depends on the type of application using Jinja. This vulnerability impacts users of applications which execute untrusted templates.</p>
<p>Jinja's sandbox does catch calls to <code>str.format</code> and ensures they don't escape the sandbox. However, it's possible to store a reference to a malicious string's <code>format</code> method, then pass that to a filter that calls it. No such filters are built-in to Jinja, but could be present through custom filters in an application. After the fix, such indirect calls are also handled by the sandbox.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/pallets/jinja/security/advisories/GHSA-q2x7-8rv6-6q7h">https://github.com/pallets/jinja/security/advisories/GHSA-q2x7-8rv6-6q7h</a></li>
<li><a href="https://github.com/pallets/jinja/releases/tag/3.1.5">https://github.com/pallets/jinja/releases/tag/3.1.5</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-56326">https://nvd.nist.gov/vuln/detail/CVE-2024-56326</a></li>
<li><a href="https://github.com/pallets/jinja/commit/48b0687e05a5466a91cd5812d604fa37ad0943b4">https://github.com/pallets/jinja/commit/48b0687e05a5466a91cd5812d604fa37ad0943b4</a></li>
<li><a href="https://github.com/advisories/GHSA-q2x7-8rv6-6q7h">https://github.com/advisories/GHSA-q2x7-8rv6-6q7h</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-q2x7-8rv6-6q7h</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-12-23T17:56:08.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[jinja2] Jinja has a sandbox breakout through malicious filenames]]></title>
        <id>https://github.com/advisories/GHSA-gmj6-6f8f-6699</id>
        <link href="https://github.com/advisories/GHSA-gmj6-6f8f-6699"/>
        <updated>2024-12-26T20:09:18.000Z</updated>
        <content type="html"><![CDATA[<p>A bug in the Jinja compiler allows an attacker that controls both the content and filename of a template to execute arbitrary Python code, regardless of if Jinja's sandbox is used.</p>
<p>To exploit the vulnerability, an attacker needs to control both the filename and the contents of a template. Whether that is the case depends on the type of application using Jinja. This vulnerability impacts users of applications which execute untrusted templates where the template author can also choose the template filename.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/pallets/jinja/security/advisories/GHSA-gmj6-6f8f-6699">https://github.com/pallets/jinja/security/advisories/GHSA-gmj6-6f8f-6699</a></li>
<li><a href="https://github.com/pallets/jinja/releases/tag/3.1.5">https://github.com/pallets/jinja/releases/tag/3.1.5</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-56201">https://nvd.nist.gov/vuln/detail/CVE-2024-56201</a></li>
<li><a href="https://github.com/pallets/jinja/issues/1792">https://github.com/pallets/jinja/issues/1792</a></li>
<li><a href="https://github.com/pallets/jinja/commit/767b23617628419ae3709ccfb02f9602ae9fe51f">https://github.com/pallets/jinja/commit/767b23617628419ae3709ccfb02f9602ae9fe51f</a></li>
<li><a href="https://github.com/advisories/GHSA-gmj6-6f8f-6699">https://github.com/advisories/GHSA-gmj6-6f8f-6699</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-gmj6-6f8f-6699</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-12-23T17:54:12.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[pyrage] pyrage vulnerable to malicious plugin names, recipients, or identities causing arbitrary binary execution]]></title>
        <id>https://github.com/advisories/GHSA-47h8-jmp3-9f28</id>
        <link href="https://github.com/advisories/GHSA-47h8-jmp3-9f28"/>
        <updated>2024-12-20T18:35:12.000Z</updated>
        <content type="html"><![CDATA[<p><code>pyrage</code> uses the Rust <code>age</code> crate for its underlying operations, and <code>age</code> is vulnerable to GHSA-4fg7-vxc8-qx5w.</p>
<p>All details of GHSA-4fg7-vxc8-qx5w are relevant to <code>pyrage</code> for the versions specified in this advisory. See GHSA-4fg7-vxc8-qx5w for full details.</p>
<p>Versions of <code>pyrage</code> before 1.2.0 lack plugin support and are therefore <strong>not affected</strong>.</p>
<p>An equivalent issue was fixed in <a href="https://github.com/FiloSottile/age">the reference Go implementation of age</a>, see advisory <a href="https://github.com/FiloSottile/age/security/advisories/GHSA-32gq-x56h-299c">GHSA-32gq-x56h-299c</a>.</p>
<p>Thanks to ⬡-49016 for reporting this issue.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/FiloSottile/age/security/advisories/GHSA-32gq-x56h-299c">https://github.com/FiloSottile/age/security/advisories/GHSA-32gq-x56h-299c</a></li>
<li><a href="https://github.com/str4d/rage/security/advisories/GHSA-4fg7-vxc8-qx5w">https://github.com/str4d/rage/security/advisories/GHSA-4fg7-vxc8-qx5w</a></li>
<li><a href="https://github.com/woodruffw/pyrage/security/advisories/GHSA-47h8-jmp3-9f28">https://github.com/woodruffw/pyrage/security/advisories/GHSA-47h8-jmp3-9f28</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-56327">https://nvd.nist.gov/vuln/detail/CVE-2024-56327</a></li>
<li><a href="https://github.com/advisories/GHSA-4fg7-vxc8-qx5w">https://github.com/advisories/GHSA-4fg7-vxc8-qx5w</a></li>
<li><a href="https://github.com/advisories/GHSA-47h8-jmp3-9f28">https://github.com/advisories/GHSA-47h8-jmp3-9f28</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-47h8-jmp3-9f28</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-12-19T15:14:06.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[pghoard] PGHoard Path Traversal vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-m9hc-vxjj-4x6q</id>
        <link href="https://github.com/advisories/GHSA-m9hc-vxjj-4x6q"/>
        <updated>2024-12-18T19:33:18.000Z</updated>
        <content type="html"><![CDATA[<p>A vulnerability has been discovered that could allow an attacker to acquire disk access with privileges equivalent to those of pghoard, allowing for unintended path traversal.  Depending on the permissions/privileges assigned to pghoard, this could allow disclosure of sensitive information.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/Aiven-Open/pghoard/security/advisories/GHSA-m9hc-vxjj-4x6q">https://github.com/Aiven-Open/pghoard/security/advisories/GHSA-m9hc-vxjj-4x6q</a></li>
<li><a href="https://github.com/Aiven-Open/pghoard/commit/fe9947642cc73bcacf6d19b93eb98f442223fb47">https://github.com/Aiven-Open/pghoard/commit/fe9947642cc73bcacf6d19b93eb98f442223fb47</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-56142">https://nvd.nist.gov/vuln/detail/CVE-2024-56142</a></li>
<li><a href="https://github.com/advisories/GHSA-m9hc-vxjj-4x6q">https://github.com/advisories/GHSA-m9hc-vxjj-4x6q</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-m9hc-vxjj-4x6q</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-12-17T21:37:18.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[configobj] configobj ReDoS exploitable by developer using values in a server-side configuration file]]></title>
        <id>https://github.com/advisories/GHSA-c33w-24p9-8m24</id>
        <link href="https://github.com/advisories/GHSA-c33w-24p9-8m24"/>
        <updated>2024-12-16T22:46:11.000Z</updated>
        <content type="html"><![CDATA[<p>All versions of the package configobj are vulnerable to Regular Expression Denial of Service (ReDoS) via the validate function, using (.+?)((.*)). <strong>Note:</strong> This is only exploitable in the case of a developer, putting the offending value in a server side configuration file.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-26112">https://nvd.nist.gov/vuln/detail/CVE-2023-26112</a></li>
<li><a href="https://github.com/DiffSK/configobj/issues/232">https://github.com/DiffSK/configobj/issues/232</a></li>
<li><a href="https://security.snyk.io/vuln/SNYK-PYTHON-CONFIGOBJ-3252494">https://security.snyk.io/vuln/SNYK-PYTHON-CONFIGOBJ-3252494</a></li>
<li><a href="https://github.com/DiffSK/configobj/commit/7c618b0bbaff6ecaca51a6f05b29795d1377a4a5">https://github.com/DiffSK/configobj/commit/7c618b0bbaff6ecaca51a6f05b29795d1377a4a5</a></li>
<li><a href="https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/6BO4RLMYEJODCNUE3DJIIUUFVTPAG6VN">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/6BO4RLMYEJODCNUE3DJIIUUFVTPAG6VN</a></li>
<li><a href="https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/NZHY7B33EFY4LESP2NI4APQUPRROTAZK">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/NZHY7B33EFY4LESP2NI4APQUPRROTAZK</a></li>
<li><a href="https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/PYU4IHVLOTYMFPH7KDOJGKZQR4GKWPFK">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/PYU4IHVLOTYMFPH7KDOJGKZQR4GKWPFK</a></li>
<li><a href="https://pypi.org/project/configobj/5.0.9">https://pypi.org/project/configobj/5.0.9</a></li>
<li><a href="https://github.com/advisories/GHSA-c33w-24p9-8m24">https://github.com/advisories/GHSA-c33w-24p9-8m24</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-c33w-24p9-8m24</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2023-04-03T06:30:19.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[djoser] djoser Authentication Bypass]]></title>
        <id>https://github.com/advisories/GHSA-v49p-m6gh-747c</id>
        <link href="https://github.com/advisories/GHSA-v49p-m6gh-747c"/>
        <updated>2024-12-13T21:47:28.000Z</updated>
        <content type="html"><![CDATA[<p>Versions of the package djoser before 2.3.0 are vulnerable to Authentication Bypass when the authenticate() function fails. This is because the system falls back to querying the database directly, granting access to users with valid credentials, and eventually bypassing custom authentication checks such as two-factor authentication, LDAP validations, or requirements from configured AUTHENTICATION_BACKENDS.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-21543">https://nvd.nist.gov/vuln/detail/CVE-2024-21543</a></li>
<li><a href="https://github.com/sunscrapers/djoser/issues/795">https://github.com/sunscrapers/djoser/issues/795</a></li>
<li><a href="https://github.com/sunscrapers/djoser/pull/819">https://github.com/sunscrapers/djoser/pull/819</a></li>
<li><a href="https://github.com/sunscrapers/djoser/commit/d33c3993c0c735f23cbedc60fa59fce69354f19d">https://github.com/sunscrapers/djoser/commit/d33c3993c0c735f23cbedc60fa59fce69354f19d</a></li>
<li><a href="https://github.com/sunscrapers/djoser/releases/tag/2.3.0">https://github.com/sunscrapers/djoser/releases/tag/2.3.0</a></li>
<li><a href="https://security.snyk.io/vuln/SNYK-PYTHON-DJOSER-8366540">https://security.snyk.io/vuln/SNYK-PYTHON-DJOSER-8366540</a></li>
<li><a href="https://github.com/advisories/GHSA-v49p-m6gh-747c">https://github.com/advisories/GHSA-v49p-m6gh-747c</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-v49p-m6gh-747c</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-12-13T06:30:58.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[dtale] D-Tale allows Remote Code Execution through the Custom Filter Input]]></title>
        <id>https://github.com/advisories/GHSA-832w-fhmw-w4f4</id>
        <link href="https://github.com/advisories/GHSA-832w-fhmw-w4f4"/>
        <updated>2024-12-13T20:36:27.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>Users hosting D-Tale publicly can be vulnerable to remote code execution allowing attackers to run malicious code on the server.</p>
<h3 id="patches">Patches</h3>
<p>Users should upgrade to version 3.16.1 where the <code>update-settings</code> endpoint blocks the ability for users to update the <code>enable_custom_filters</code> flag. You can find out more information on how to turn that flag on <a href="https://github.com/man-group/dtale#custom-filter">here</a></p>
<h3 id="workarounds">Workarounds</h3>
<p>The only workaround for versions earlier than 3.16.1 is to only host D-Tale to trusted users.</p>
<h3 id="references">References</h3>
<p>See "Custom Filter" <a href="https://github.com/man-group/dtale#custom-filter">documentation</a></p>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/man-group/dtale/security/advisories/GHSA-832w-fhmw-w4f4">https://github.com/man-group/dtale/security/advisories/GHSA-832w-fhmw-w4f4</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-55890">https://nvd.nist.gov/vuln/detail/CVE-2024-55890</a></li>
<li><a href="https://github.com/man-group/dtale/commit/1e26ed3ca12fe83812b90f12a2b3e5fb0b740f7a">https://github.com/man-group/dtale/commit/1e26ed3ca12fe83812b90f12a2b3e5fb0b740f7a</a></li>
<li><a href="https://github.com/man-group/dtale#custom-filter">https://github.com/man-group/dtale#custom-filter</a></li>
<li><a href="https://github.com/advisories/GHSA-832w-fhmw-w4f4">https://github.com/advisories/GHSA-832w-fhmw-w4f4</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-832w-fhmw-w4f4</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-12-13T20:36:22.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[apache-superset] Apache Superset: SQLLab Improper readonly query validation allows unauthorized write access]]></title>
        <id>https://github.com/advisories/GHSA-787v-v9vq-4rgv</id>
        <link href="https://github.com/advisories/GHSA-787v-v9vq-4rgv"/>
        <updated>2024-12-12T19:23:24.000Z</updated>
        <content type="html"><![CDATA[<p>Improper Authorization vulnerability in Apache Superset. On Postgres analytic databases an attacker with SQLLab access can&nbsp;craft a specially designed SQL DML statement&nbsp;that is Incorrectly identified as a read-only query, enabling its execution. Non postgres analytics database connections and postgres analytics database connections set with a readonly user (advised) are not vulnerable.&nbsp;</p>
<p>This issue affects Apache Superset: before 4.1.0.</p>
<p>Users are recommended to upgrade to version 4.1.0, which fixes the issue.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-55633">https://nvd.nist.gov/vuln/detail/CVE-2024-55633</a></li>
<li><a href="https://lists.apache.org/thread/bwmd17fcvljt9q4cgctp4v09zh3qs7fb">https://lists.apache.org/thread/bwmd17fcvljt9q4cgctp4v09zh3qs7fb</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2024/12/12/1">http://www.openwall.com/lists/oss-security/2024/12/12/1</a></li>
<li><a href="https://github.com/advisories/GHSA-787v-v9vq-4rgv">https://github.com/advisories/GHSA-787v-v9vq-4rgv</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-787v-v9vq-4rgv</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-12-12T15:31:09.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[python-libarchive] python-libarchive directory traversal]]></title>
        <id>https://github.com/advisories/GHSA-75mx-hw5q-pvx3</id>
        <link href="https://github.com/advisories/GHSA-75mx-hw5q-pvx3"/>
        <updated>2024-12-12T19:19:34.000Z</updated>
        <content type="html"><![CDATA[<p>python-libarchive through 4.2.1 allows directory traversal (to create files) in extract in zip.py for ZipFile.extractall and ZipFile.extract.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-55587">https://nvd.nist.gov/vuln/detail/CVE-2024-55587</a></li>
<li><a href="https://github.com/smartfile/python-libarchive/issues/42">https://github.com/smartfile/python-libarchive/issues/42</a></li>
<li><a href="https://github.com/smartfile/python-libarchive/pull/41">https://github.com/smartfile/python-libarchive/pull/41</a></li>
<li><a href="https://github.com/smartfile/python-libarchive/blob/c7677411bfc4ab5701d343bc6ebd9e35c990e80e/libarchive/zip.py#L107">https://github.com/smartfile/python-libarchive/blob/c7677411bfc4ab5701d343bc6ebd9e35c990e80e/libarchive/zip.py#L107</a></li>
<li><a href="https://github.com/advisories/GHSA-75mx-hw5q-pvx3">https://github.com/advisories/GHSA-75mx-hw5q-pvx3</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-75mx-hw5q-pvx3</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-12-12T03:33:05.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[pyspider] pyspider Cross-Site Request Forgery (CSRF) via the Flask endpoints]]></title>
        <id>https://github.com/advisories/GHSA-pqj8-xhcx-prxm</id>
        <link href="https://github.com/advisories/GHSA-pqj8-xhcx-prxm"/>
        <updated>2024-12-11T22:02:35.000Z</updated>
        <content type="html"><![CDATA[<p>binux pyspider up to v0.3.10 was discovered to contain a Cross-Site Request Forgery (CSRF) via the Flask endpoints.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-39163">https://nvd.nist.gov/vuln/detail/CVE-2024-39163</a></li>
<li><a href="https://github.com/binux/pyspider/blob/master/pyspider/webui/debug.py#L39">https://github.com/binux/pyspider/blob/master/pyspider/webui/debug.py#L39</a></li>
<li><a href="https://www.sonarsource.com/blog/basic-http-authentication-risk-uncovering-pyspider-vulnerabilities">https://www.sonarsource.com/blog/basic-http-authentication-risk-uncovering-pyspider-vulnerabilities</a></li>
<li><a href="https://github.com/advisories/GHSA-pqj8-xhcx-prxm">https://github.com/advisories/GHSA-pqj8-xhcx-prxm</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-pqj8-xhcx-prxm</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-12-04T18:32:36.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[sigstore] sigstore has insufficient validation of integration timestamp during verification]]></title>
        <id>https://github.com/advisories/GHSA-hhfg-fwrw-87w7</id>
        <link href="https://github.com/advisories/GHSA-hhfg-fwrw-87w7"/>
        <updated>2024-12-11T18:42:00.000Z</updated>
        <content type="html"><![CDATA[<h3 id="summary">Summary</h3>
<p>Versions of sigstore-python newer than 2.0.0 but prior to 3.6.0 perform insufficient validation of the "integration time" present in "v2" and "v3" bundles during the verification flow: the "integration time" is verified <em>if</em> a source of signed time (such as an inclusion promise) is present, but is otherwise trusted if no source of signed time is present.</p>
<p>This does not affect "v1" bundles, as the "v1" bundle format always requires an inclusion promise.</p>
<h3 id="details">Details</h3>
<p>Sigstore uses signed time to support verification of signatures made against short-lived signing keys. </p>
<h3 id="impact">Impact</h3>
<p>The impact and severity of this weakness is <em>low</em>, as Sigstore contains multiple other enforcing components that prevent an attacker who modifies the integration timestamp within a bundle from impersonating a valid signature. In particular, an attacker who modifies the integration timestamp can induce a Denial of Service, but in no different manner than already possible with bundle access (e.g. modifying the signature itself such that it fails to verify).</p>
<p>Separately, an attacker could upload a <em>new</em> entry to the transparency service, and substitute their new entry's time. However, this would still be rejected at validation time, as the new entry's (valid) signed time would be outside the validity window of the original signing certificate and would nonetheless render the attacker auditable.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/sigstore/sigstore-python/security/advisories/GHSA-hhfg-fwrw-87w7">https://github.com/sigstore/sigstore-python/security/advisories/GHSA-hhfg-fwrw-87w7</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-55655">https://nvd.nist.gov/vuln/detail/CVE-2024-55655</a></li>
<li><a href="https://github.com/sigstore/sigstore-python/commit/300b502ae99ebfaace124f1f4e422a6a669369cf">https://github.com/sigstore/sigstore-python/commit/300b502ae99ebfaace124f1f4e422a6a669369cf</a></li>
<li><a href="https://github.com/sigstore/sigstore-python/releases/tag/v3.6.0">https://github.com/sigstore/sigstore-python/releases/tag/v3.6.0</a></li>
<li><a href="https://github.com/advisories/GHSA-hhfg-fwrw-87w7">https://github.com/advisories/GHSA-hhfg-fwrw-87w7</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-hhfg-fwrw-87w7</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2024-12-11T18:42:00.000Z</published>
    </entry>
</feed>