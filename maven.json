{
    "version": "https://jsonfeed.org/version/1",
    "title": "Security Advisory for Java artifacts hosted at the Maven central repository",
    "home_page_url": "https://github.com/advisories?query=type%3Areviewed+ecosystem%3Amaven",
    "feed_url": "https://azu.github.io/github-advisory-database-rss/maven.json",
    "description": "Security Advisory for Java artifacts hosted at the Maven central repository on GitHub",
    "items": [
        {
            "content_html": "<p>A flaw was found in the Wildfly Server Role Based Access Control (RBAC) provider. When authorization to control management operations is secured using the Role Based Access Control provider, a user without the required privileges can suspend or resume the server. A user with a Monitor or Auditor role is supposed to have only read access permissions and should not be able to suspend the server. \nThe vulnerability is caused by the Suspend and Resume handlers not performing authorization checks to validate whether the current user has the required permissions to proceed with the action.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2025-23367\">https://nvd.nist.gov/vuln/detail/CVE-2025-23367</a></li>\n<li><a href=\"https://access.redhat.com/security/cve/CVE-2025-23367\">https://access.redhat.com/security/cve/CVE-2025-23367</a></li>\n<li><a href=\"https://bugzilla.redhat.com/show_bug.cgi?id=2337620\">https://bugzilla.redhat.com/show_bug.cgi?id=2337620</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-fcrw-mphx-7cxf\">https://github.com/advisories/GHSA-fcrw-mphx-7cxf</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-fcrw-mphx-7cxf",
            "title": "[org.wildfly:wildfly-server] Wildfly Server Role Based Access Control (RBAC) provider has Improper Access Control",
            "date_modified": "2025-01-30T17:56:02.000Z",
            "date_published": "2025-01-30T15:31:39.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-fcrw-mphx-7cxf"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>We recently underwent Penetration Testing of OpenMRS by a third-party company. <strong>Vulnerabilities were found, and fixes have been made and released.</strong> We've released security updates that include critical fixes, and so, we strongly recommend upgrading affected modules.</p>\n<p><strong>This notice applies to <em>all</em> OpenMRS instances.</strong> The testers used the OpenMRS v3 Reference Application (O3 RefApp); however, their findings highlighted modules commonly used in older OpenMRS applications, including the O2 RefApp. </p>\n<h2 id=\"vulnerability-details\">Vulnerability Details</h2>\n<ul>\n<li>The issues uncovered included broken access control (e.g. inappropriate admin access), phishing vulnerability, and stored XSS (e.g. vulnerable passwords).</li>\n<li>No vulnerabilities were found in the O3 frontend esm modules. </li>\n<li>The Letter of Attestation from the penetration test is <a href=\"https://drive.google.com/file/d/1sBm4-FzLA8hSoM9wYknBfgEttBHyLvoU/view?usp=sharing\">available here</a> for your reference. </li>\n<li>After the fixes were applied, the OpenMRS O3 RefApp met a Security Level of “Excellent, Grade A”.</li>\n<li>The full detailed Remediation Pentest Report is available to Implementation Technical Leads upon request.</li>\n</ul>\n<h3 id=\"patches\">Patches</h3>\n<p><strong>Minimum Requirements for Implementers:</strong> We <strong>strongly</strong> recommend upgrading your modules to the following versions (or greater) as soon as possible. <strong>This is the minimum amount to do and be protected from the vulnerabilities found and fixed.</strong> The following versions contain the patch: </p>\n<ul>\n<li><strong>Platform</strong> 2.6.11+ <ul>\n<li>How: Increase your platform version number wherever this is specified in your implementation. If you use the OpenMRS SDK, this will be in the distro.properties file.</li>\n<li>Notes: <ul>\n<li>The newly released <a href=\"https://sourceforge.net/projects/openmrs/files/releases/OpenMRS_Platform_2.7.0/\"><strong>Platform 2.7</strong></a> also includes the fixes. <a href=\"https://openmrs.atlassian.net/wiki/x/XoBzEQ\">Release Notes and more download options here</a>.</li>\n<li>Platform 2.6.8+ has most of the fixes, but these are broken if you don't use SSL, so Platform 2.6.11 or higher is preferred.</li>\n<li>For those still on Platform 2.5+ such as the Bahmni ecosystem, the new <a href=\"https://ci.openmrs.org/browse/TRUNK-CORE2-232\">2.5.14</a> release includes the patch. <em>Bahmni note: The upcoming patch release for both Bahmni Lite and Bahmni Standard will incorporate these security fixes.</em></li>\n</ul>\n</li>\n</ul>\n</li>\n<li><strong>Legacy UI</strong> OMOD 1.21.0+ (<a href=\"https://addons.openmrs.org/show/org.openmrs.module.legacyui\">here</a>)</li>\n<li><strong>ID Gen</strong> OMOD 4.14.0+ (<a href=\"https://addons.openmrs.org/show/org.openmrs.module.idgen\">here</a>)</li>\n<li><strong>Address Hierarchy</strong> OMOD 2.19.0+ (<a href=\"https://addons.openmrs.org/show/org.openmrs.module.addresshierarchy\">here</a>)</li>\n<li><strong>Attachments</strong> OMOD 3.6.0+ (<a href=\"https://addons.openmrs.org/show/org.openmrs.module.attachments\">here</a>)</li>\n<li><strong>Patient Flags</strong> OMOD 3.0.8+ (<a href=\"https://addons.openmrs.org/show/org.openmrs.module.patientflags\">here</a>)</li>\n</ul>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>There are no practical workarounds to fix or remediate the vulnerabilities without upgrading. Technically, you could remove the affected OMODs, but this would badly degrade the system's functionality.</p>\n<h2 id=\"thank-you-to-our-amazing-security-contributors\">Thank you to our amazing Security contributors!</h2>\n<p>Thank you to security firm UnderDefense, and to the OpenMRS Security Group contributors for their patch support - specific thanks to Daniel Kayiwa, Samuel Lubwama, Ian Bacher, Rafal Korytkowski, and Michael Seaton. </p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/openmrs/openmrs-core/security/advisories/GHSA-vpxm-cr3r-pjp9\">https://github.com/openmrs/openmrs-core/security/advisories/GHSA-vpxm-cr3r-pjp9</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-vpxm-cr3r-pjp9\">https://github.com/advisories/GHSA-vpxm-cr3r-pjp9</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-vpxm-cr3r-pjp9",
            "title": "[org.openmrs.module:patientflags] General OpenMRS Security Advisory, January 2025: Penetration Testing Results and Patches",
            "date_modified": "2025-01-30T17:50:53.000Z",
            "date_published": "2025-01-30T17:50:52.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-vpxm-cr3r-pjp9"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>We recently underwent Penetration Testing of OpenMRS by a third-party company. <strong>Vulnerabilities were found, and fixes have been made and released.</strong> We've released security updates that include critical fixes, and so, we strongly recommend upgrading affected modules.</p>\n<p><strong>This notice applies to <em>all</em> OpenMRS instances.</strong> The testers used the OpenMRS v3 Reference Application (O3 RefApp); however, their findings highlighted modules commonly used in older OpenMRS applications, including the O2 RefApp. </p>\n<h2 id=\"vulnerability-details\">Vulnerability Details</h2>\n<ul>\n<li>The issues uncovered included broken access control (e.g. inappropriate admin access), phishing vulnerability, and stored XSS (e.g. vulnerable passwords).</li>\n<li>No vulnerabilities were found in the O3 frontend esm modules. </li>\n<li>The Letter of Attestation from the penetration test is <a href=\"https://drive.google.com/file/d/1sBm4-FzLA8hSoM9wYknBfgEttBHyLvoU/view?usp=sharing\">available here</a> for your reference. </li>\n<li>After the fixes were applied, the OpenMRS O3 RefApp met a Security Level of “Excellent, Grade A”.</li>\n<li>The full detailed Remediation Pentest Report is available to Implementation Technical Leads upon request.</li>\n</ul>\n<h3 id=\"patches\">Patches</h3>\n<p><strong>Minimum Requirements for Implementers:</strong> We <strong>strongly</strong> recommend upgrading your modules to the following versions (or greater) as soon as possible. <strong>This is the minimum amount to do and be protected from the vulnerabilities found and fixed.</strong> The following versions contain the patch: </p>\n<ul>\n<li><strong>Platform</strong> 2.6.11+ <ul>\n<li>How: Increase your platform version number wherever this is specified in your implementation. If you use the OpenMRS SDK, this will be in the distro.properties file.</li>\n<li>Notes: <ul>\n<li>The newly released <a href=\"https://sourceforge.net/projects/openmrs/files/releases/OpenMRS_Platform_2.7.0/\"><strong>Platform 2.7</strong></a> also includes the fixes. <a href=\"https://openmrs.atlassian.net/wiki/x/XoBzEQ\">Release Notes and more download options here</a>.</li>\n<li>Platform 2.6.8+ has most of the fixes, but these are broken if you don't use SSL, so Platform 2.6.11 or higher is preferred.</li>\n<li>For those still on Platform 2.5+ such as the Bahmni ecosystem, the new <a href=\"https://ci.openmrs.org/browse/TRUNK-CORE2-232\">2.5.14</a> release includes the patch. <em>Bahmni note: The upcoming patch release for both Bahmni Lite and Bahmni Standard will incorporate these security fixes.</em></li>\n</ul>\n</li>\n</ul>\n</li>\n<li><strong>Legacy UI</strong> OMOD 1.21.0+ (<a href=\"https://addons.openmrs.org/show/org.openmrs.module.legacyui\">here</a>)</li>\n<li><strong>ID Gen</strong> OMOD 4.14.0+ (<a href=\"https://addons.openmrs.org/show/org.openmrs.module.idgen\">here</a>)</li>\n<li><strong>Address Hierarchy</strong> OMOD 2.19.0+ (<a href=\"https://addons.openmrs.org/show/org.openmrs.module.addresshierarchy\">here</a>)</li>\n<li><strong>Attachments</strong> OMOD 3.6.0+ (<a href=\"https://addons.openmrs.org/show/org.openmrs.module.attachments\">here</a>)</li>\n<li><strong>Patient Flags</strong> OMOD 3.0.8+ (<a href=\"https://addons.openmrs.org/show/org.openmrs.module.patientflags\">here</a>)</li>\n</ul>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>There are no practical workarounds to fix or remediate the vulnerabilities without upgrading. Technically, you could remove the affected OMODs, but this would badly degrade the system's functionality.</p>\n<h2 id=\"thank-you-to-our-amazing-security-contributors\">Thank you to our amazing Security contributors!</h2>\n<p>Thank you to security firm UnderDefense, and to the OpenMRS Security Group contributors for their patch support - specific thanks to Daniel Kayiwa, Samuel Lubwama, Ian Bacher, Rafal Korytkowski, and Michael Seaton. </p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/openmrs/openmrs-core/security/advisories/GHSA-vpxm-cr3r-pjp9\">https://github.com/openmrs/openmrs-core/security/advisories/GHSA-vpxm-cr3r-pjp9</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-vpxm-cr3r-pjp9\">https://github.com/advisories/GHSA-vpxm-cr3r-pjp9</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-vpxm-cr3r-pjp9",
            "title": "[org.openmrs.module:attachments] General OpenMRS Security Advisory, January 2025: Penetration Testing Results and Patches",
            "date_modified": "2025-01-30T17:50:53.000Z",
            "date_published": "2025-01-30T17:50:52.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-vpxm-cr3r-pjp9"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>We recently underwent Penetration Testing of OpenMRS by a third-party company. <strong>Vulnerabilities were found, and fixes have been made and released.</strong> We've released security updates that include critical fixes, and so, we strongly recommend upgrading affected modules.</p>\n<p><strong>This notice applies to <em>all</em> OpenMRS instances.</strong> The testers used the OpenMRS v3 Reference Application (O3 RefApp); however, their findings highlighted modules commonly used in older OpenMRS applications, including the O2 RefApp. </p>\n<h2 id=\"vulnerability-details\">Vulnerability Details</h2>\n<ul>\n<li>The issues uncovered included broken access control (e.g. inappropriate admin access), phishing vulnerability, and stored XSS (e.g. vulnerable passwords).</li>\n<li>No vulnerabilities were found in the O3 frontend esm modules. </li>\n<li>The Letter of Attestation from the penetration test is <a href=\"https://drive.google.com/file/d/1sBm4-FzLA8hSoM9wYknBfgEttBHyLvoU/view?usp=sharing\">available here</a> for your reference. </li>\n<li>After the fixes were applied, the OpenMRS O3 RefApp met a Security Level of “Excellent, Grade A”.</li>\n<li>The full detailed Remediation Pentest Report is available to Implementation Technical Leads upon request.</li>\n</ul>\n<h3 id=\"patches\">Patches</h3>\n<p><strong>Minimum Requirements for Implementers:</strong> We <strong>strongly</strong> recommend upgrading your modules to the following versions (or greater) as soon as possible. <strong>This is the minimum amount to do and be protected from the vulnerabilities found and fixed.</strong> The following versions contain the patch: </p>\n<ul>\n<li><strong>Platform</strong> 2.6.11+ <ul>\n<li>How: Increase your platform version number wherever this is specified in your implementation. If you use the OpenMRS SDK, this will be in the distro.properties file.</li>\n<li>Notes: <ul>\n<li>The newly released <a href=\"https://sourceforge.net/projects/openmrs/files/releases/OpenMRS_Platform_2.7.0/\"><strong>Platform 2.7</strong></a> also includes the fixes. <a href=\"https://openmrs.atlassian.net/wiki/x/XoBzEQ\">Release Notes and more download options here</a>.</li>\n<li>Platform 2.6.8+ has most of the fixes, but these are broken if you don't use SSL, so Platform 2.6.11 or higher is preferred.</li>\n<li>For those still on Platform 2.5+ such as the Bahmni ecosystem, the new <a href=\"https://ci.openmrs.org/browse/TRUNK-CORE2-232\">2.5.14</a> release includes the patch. <em>Bahmni note: The upcoming patch release for both Bahmni Lite and Bahmni Standard will incorporate these security fixes.</em></li>\n</ul>\n</li>\n</ul>\n</li>\n<li><strong>Legacy UI</strong> OMOD 1.21.0+ (<a href=\"https://addons.openmrs.org/show/org.openmrs.module.legacyui\">here</a>)</li>\n<li><strong>ID Gen</strong> OMOD 4.14.0+ (<a href=\"https://addons.openmrs.org/show/org.openmrs.module.idgen\">here</a>)</li>\n<li><strong>Address Hierarchy</strong> OMOD 2.19.0+ (<a href=\"https://addons.openmrs.org/show/org.openmrs.module.addresshierarchy\">here</a>)</li>\n<li><strong>Attachments</strong> OMOD 3.6.0+ (<a href=\"https://addons.openmrs.org/show/org.openmrs.module.attachments\">here</a>)</li>\n<li><strong>Patient Flags</strong> OMOD 3.0.8+ (<a href=\"https://addons.openmrs.org/show/org.openmrs.module.patientflags\">here</a>)</li>\n</ul>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>There are no practical workarounds to fix or remediate the vulnerabilities without upgrading. Technically, you could remove the affected OMODs, but this would badly degrade the system's functionality.</p>\n<h2 id=\"thank-you-to-our-amazing-security-contributors\">Thank you to our amazing Security contributors!</h2>\n<p>Thank you to security firm UnderDefense, and to the OpenMRS Security Group contributors for their patch support - specific thanks to Daniel Kayiwa, Samuel Lubwama, Ian Bacher, Rafal Korytkowski, and Michael Seaton. </p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/openmrs/openmrs-core/security/advisories/GHSA-vpxm-cr3r-pjp9\">https://github.com/openmrs/openmrs-core/security/advisories/GHSA-vpxm-cr3r-pjp9</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-vpxm-cr3r-pjp9\">https://github.com/advisories/GHSA-vpxm-cr3r-pjp9</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-vpxm-cr3r-pjp9",
            "title": "[org.openmrs.module:addresshierarchy] General OpenMRS Security Advisory, January 2025: Penetration Testing Results and Patches",
            "date_modified": "2025-01-30T17:50:53.000Z",
            "date_published": "2025-01-30T17:50:52.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-vpxm-cr3r-pjp9"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>We recently underwent Penetration Testing of OpenMRS by a third-party company. <strong>Vulnerabilities were found, and fixes have been made and released.</strong> We've released security updates that include critical fixes, and so, we strongly recommend upgrading affected modules.</p>\n<p><strong>This notice applies to <em>all</em> OpenMRS instances.</strong> The testers used the OpenMRS v3 Reference Application (O3 RefApp); however, their findings highlighted modules commonly used in older OpenMRS applications, including the O2 RefApp. </p>\n<h2 id=\"vulnerability-details\">Vulnerability Details</h2>\n<ul>\n<li>The issues uncovered included broken access control (e.g. inappropriate admin access), phishing vulnerability, and stored XSS (e.g. vulnerable passwords).</li>\n<li>No vulnerabilities were found in the O3 frontend esm modules. </li>\n<li>The Letter of Attestation from the penetration test is <a href=\"https://drive.google.com/file/d/1sBm4-FzLA8hSoM9wYknBfgEttBHyLvoU/view?usp=sharing\">available here</a> for your reference. </li>\n<li>After the fixes were applied, the OpenMRS O3 RefApp met a Security Level of “Excellent, Grade A”.</li>\n<li>The full detailed Remediation Pentest Report is available to Implementation Technical Leads upon request.</li>\n</ul>\n<h3 id=\"patches\">Patches</h3>\n<p><strong>Minimum Requirements for Implementers:</strong> We <strong>strongly</strong> recommend upgrading your modules to the following versions (or greater) as soon as possible. <strong>This is the minimum amount to do and be protected from the vulnerabilities found and fixed.</strong> The following versions contain the patch: </p>\n<ul>\n<li><strong>Platform</strong> 2.6.11+ <ul>\n<li>How: Increase your platform version number wherever this is specified in your implementation. If you use the OpenMRS SDK, this will be in the distro.properties file.</li>\n<li>Notes: <ul>\n<li>The newly released <a href=\"https://sourceforge.net/projects/openmrs/files/releases/OpenMRS_Platform_2.7.0/\"><strong>Platform 2.7</strong></a> also includes the fixes. <a href=\"https://openmrs.atlassian.net/wiki/x/XoBzEQ\">Release Notes and more download options here</a>.</li>\n<li>Platform 2.6.8+ has most of the fixes, but these are broken if you don't use SSL, so Platform 2.6.11 or higher is preferred.</li>\n<li>For those still on Platform 2.5+ such as the Bahmni ecosystem, the new <a href=\"https://ci.openmrs.org/browse/TRUNK-CORE2-232\">2.5.14</a> release includes the patch. <em>Bahmni note: The upcoming patch release for both Bahmni Lite and Bahmni Standard will incorporate these security fixes.</em></li>\n</ul>\n</li>\n</ul>\n</li>\n<li><strong>Legacy UI</strong> OMOD 1.21.0+ (<a href=\"https://addons.openmrs.org/show/org.openmrs.module.legacyui\">here</a>)</li>\n<li><strong>ID Gen</strong> OMOD 4.14.0+ (<a href=\"https://addons.openmrs.org/show/org.openmrs.module.idgen\">here</a>)</li>\n<li><strong>Address Hierarchy</strong> OMOD 2.19.0+ (<a href=\"https://addons.openmrs.org/show/org.openmrs.module.addresshierarchy\">here</a>)</li>\n<li><strong>Attachments</strong> OMOD 3.6.0+ (<a href=\"https://addons.openmrs.org/show/org.openmrs.module.attachments\">here</a>)</li>\n<li><strong>Patient Flags</strong> OMOD 3.0.8+ (<a href=\"https://addons.openmrs.org/show/org.openmrs.module.patientflags\">here</a>)</li>\n</ul>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>There are no practical workarounds to fix or remediate the vulnerabilities without upgrading. Technically, you could remove the affected OMODs, but this would badly degrade the system's functionality.</p>\n<h2 id=\"thank-you-to-our-amazing-security-contributors\">Thank you to our amazing Security contributors!</h2>\n<p>Thank you to security firm UnderDefense, and to the OpenMRS Security Group contributors for their patch support - specific thanks to Daniel Kayiwa, Samuel Lubwama, Ian Bacher, Rafal Korytkowski, and Michael Seaton. </p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/openmrs/openmrs-core/security/advisories/GHSA-vpxm-cr3r-pjp9\">https://github.com/openmrs/openmrs-core/security/advisories/GHSA-vpxm-cr3r-pjp9</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-vpxm-cr3r-pjp9\">https://github.com/advisories/GHSA-vpxm-cr3r-pjp9</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-vpxm-cr3r-pjp9",
            "title": "[org.openmrs.module:idgen] General OpenMRS Security Advisory, January 2025: Penetration Testing Results and Patches",
            "date_modified": "2025-01-30T17:50:53.000Z",
            "date_published": "2025-01-30T17:50:52.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-vpxm-cr3r-pjp9"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>We recently underwent Penetration Testing of OpenMRS by a third-party company. <strong>Vulnerabilities were found, and fixes have been made and released.</strong> We've released security updates that include critical fixes, and so, we strongly recommend upgrading affected modules.</p>\n<p><strong>This notice applies to <em>all</em> OpenMRS instances.</strong> The testers used the OpenMRS v3 Reference Application (O3 RefApp); however, their findings highlighted modules commonly used in older OpenMRS applications, including the O2 RefApp. </p>\n<h2 id=\"vulnerability-details\">Vulnerability Details</h2>\n<ul>\n<li>The issues uncovered included broken access control (e.g. inappropriate admin access), phishing vulnerability, and stored XSS (e.g. vulnerable passwords).</li>\n<li>No vulnerabilities were found in the O3 frontend esm modules. </li>\n<li>The Letter of Attestation from the penetration test is <a href=\"https://drive.google.com/file/d/1sBm4-FzLA8hSoM9wYknBfgEttBHyLvoU/view?usp=sharing\">available here</a> for your reference. </li>\n<li>After the fixes were applied, the OpenMRS O3 RefApp met a Security Level of “Excellent, Grade A”.</li>\n<li>The full detailed Remediation Pentest Report is available to Implementation Technical Leads upon request.</li>\n</ul>\n<h3 id=\"patches\">Patches</h3>\n<p><strong>Minimum Requirements for Implementers:</strong> We <strong>strongly</strong> recommend upgrading your modules to the following versions (or greater) as soon as possible. <strong>This is the minimum amount to do and be protected from the vulnerabilities found and fixed.</strong> The following versions contain the patch: </p>\n<ul>\n<li><strong>Platform</strong> 2.6.11+ <ul>\n<li>How: Increase your platform version number wherever this is specified in your implementation. If you use the OpenMRS SDK, this will be in the distro.properties file.</li>\n<li>Notes: <ul>\n<li>The newly released <a href=\"https://sourceforge.net/projects/openmrs/files/releases/OpenMRS_Platform_2.7.0/\"><strong>Platform 2.7</strong></a> also includes the fixes. <a href=\"https://openmrs.atlassian.net/wiki/x/XoBzEQ\">Release Notes and more download options here</a>.</li>\n<li>Platform 2.6.8+ has most of the fixes, but these are broken if you don't use SSL, so Platform 2.6.11 or higher is preferred.</li>\n<li>For those still on Platform 2.5+ such as the Bahmni ecosystem, the new <a href=\"https://ci.openmrs.org/browse/TRUNK-CORE2-232\">2.5.14</a> release includes the patch. <em>Bahmni note: The upcoming patch release for both Bahmni Lite and Bahmni Standard will incorporate these security fixes.</em></li>\n</ul>\n</li>\n</ul>\n</li>\n<li><strong>Legacy UI</strong> OMOD 1.21.0+ (<a href=\"https://addons.openmrs.org/show/org.openmrs.module.legacyui\">here</a>)</li>\n<li><strong>ID Gen</strong> OMOD 4.14.0+ (<a href=\"https://addons.openmrs.org/show/org.openmrs.module.idgen\">here</a>)</li>\n<li><strong>Address Hierarchy</strong> OMOD 2.19.0+ (<a href=\"https://addons.openmrs.org/show/org.openmrs.module.addresshierarchy\">here</a>)</li>\n<li><strong>Attachments</strong> OMOD 3.6.0+ (<a href=\"https://addons.openmrs.org/show/org.openmrs.module.attachments\">here</a>)</li>\n<li><strong>Patient Flags</strong> OMOD 3.0.8+ (<a href=\"https://addons.openmrs.org/show/org.openmrs.module.patientflags\">here</a>)</li>\n</ul>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>There are no practical workarounds to fix or remediate the vulnerabilities without upgrading. Technically, you could remove the affected OMODs, but this would badly degrade the system's functionality.</p>\n<h2 id=\"thank-you-to-our-amazing-security-contributors\">Thank you to our amazing Security contributors!</h2>\n<p>Thank you to security firm UnderDefense, and to the OpenMRS Security Group contributors for their patch support - specific thanks to Daniel Kayiwa, Samuel Lubwama, Ian Bacher, Rafal Korytkowski, and Michael Seaton. </p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/openmrs/openmrs-core/security/advisories/GHSA-vpxm-cr3r-pjp9\">https://github.com/openmrs/openmrs-core/security/advisories/GHSA-vpxm-cr3r-pjp9</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-vpxm-cr3r-pjp9\">https://github.com/advisories/GHSA-vpxm-cr3r-pjp9</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-vpxm-cr3r-pjp9",
            "title": "[org.openmrs.module:legacyui] General OpenMRS Security Advisory, January 2025: Penetration Testing Results and Patches",
            "date_modified": "2025-01-30T17:50:53.000Z",
            "date_published": "2025-01-30T17:50:52.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-vpxm-cr3r-pjp9"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>We recently underwent Penetration Testing of OpenMRS by a third-party company. <strong>Vulnerabilities were found, and fixes have been made and released.</strong> We've released security updates that include critical fixes, and so, we strongly recommend upgrading affected modules.</p>\n<p><strong>This notice applies to <em>all</em> OpenMRS instances.</strong> The testers used the OpenMRS v3 Reference Application (O3 RefApp); however, their findings highlighted modules commonly used in older OpenMRS applications, including the O2 RefApp. </p>\n<h2 id=\"vulnerability-details\">Vulnerability Details</h2>\n<ul>\n<li>The issues uncovered included broken access control (e.g. inappropriate admin access), phishing vulnerability, and stored XSS (e.g. vulnerable passwords).</li>\n<li>No vulnerabilities were found in the O3 frontend esm modules. </li>\n<li>The Letter of Attestation from the penetration test is <a href=\"https://drive.google.com/file/d/1sBm4-FzLA8hSoM9wYknBfgEttBHyLvoU/view?usp=sharing\">available here</a> for your reference. </li>\n<li>After the fixes were applied, the OpenMRS O3 RefApp met a Security Level of “Excellent, Grade A”.</li>\n<li>The full detailed Remediation Pentest Report is available to Implementation Technical Leads upon request.</li>\n</ul>\n<h3 id=\"patches\">Patches</h3>\n<p><strong>Minimum Requirements for Implementers:</strong> We <strong>strongly</strong> recommend upgrading your modules to the following versions (or greater) as soon as possible. <strong>This is the minimum amount to do and be protected from the vulnerabilities found and fixed.</strong> The following versions contain the patch: </p>\n<ul>\n<li><strong>Platform</strong> 2.6.11+ <ul>\n<li>How: Increase your platform version number wherever this is specified in your implementation. If you use the OpenMRS SDK, this will be in the distro.properties file.</li>\n<li>Notes: <ul>\n<li>The newly released <a href=\"https://sourceforge.net/projects/openmrs/files/releases/OpenMRS_Platform_2.7.0/\"><strong>Platform 2.7</strong></a> also includes the fixes. <a href=\"https://openmrs.atlassian.net/wiki/x/XoBzEQ\">Release Notes and more download options here</a>.</li>\n<li>Platform 2.6.8+ has most of the fixes, but these are broken if you don't use SSL, so Platform 2.6.11 or higher is preferred.</li>\n<li>For those still on Platform 2.5+ such as the Bahmni ecosystem, the new <a href=\"https://ci.openmrs.org/browse/TRUNK-CORE2-232\">2.5.14</a> release includes the patch. <em>Bahmni note: The upcoming patch release for both Bahmni Lite and Bahmni Standard will incorporate these security fixes.</em></li>\n</ul>\n</li>\n</ul>\n</li>\n<li><strong>Legacy UI</strong> OMOD 1.21.0+ (<a href=\"https://addons.openmrs.org/show/org.openmrs.module.legacyui\">here</a>)</li>\n<li><strong>ID Gen</strong> OMOD 4.14.0+ (<a href=\"https://addons.openmrs.org/show/org.openmrs.module.idgen\">here</a>)</li>\n<li><strong>Address Hierarchy</strong> OMOD 2.19.0+ (<a href=\"https://addons.openmrs.org/show/org.openmrs.module.addresshierarchy\">here</a>)</li>\n<li><strong>Attachments</strong> OMOD 3.6.0+ (<a href=\"https://addons.openmrs.org/show/org.openmrs.module.attachments\">here</a>)</li>\n<li><strong>Patient Flags</strong> OMOD 3.0.8+ (<a href=\"https://addons.openmrs.org/show/org.openmrs.module.patientflags\">here</a>)</li>\n</ul>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>There are no practical workarounds to fix or remediate the vulnerabilities without upgrading. Technically, you could remove the affected OMODs, but this would badly degrade the system's functionality.</p>\n<h2 id=\"thank-you-to-our-amazing-security-contributors\">Thank you to our amazing Security contributors!</h2>\n<p>Thank you to security firm UnderDefense, and to the OpenMRS Security Group contributors for their patch support - specific thanks to Daniel Kayiwa, Samuel Lubwama, Ian Bacher, Rafal Korytkowski, and Michael Seaton. </p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/openmrs/openmrs-core/security/advisories/GHSA-vpxm-cr3r-pjp9\">https://github.com/openmrs/openmrs-core/security/advisories/GHSA-vpxm-cr3r-pjp9</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-vpxm-cr3r-pjp9\">https://github.com/advisories/GHSA-vpxm-cr3r-pjp9</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-vpxm-cr3r-pjp9",
            "title": "[org.openmrs:openmrs] General OpenMRS Security Advisory, January 2025: Penetration Testing Results and Patches",
            "date_modified": "2025-01-30T17:50:53.000Z",
            "date_published": "2025-01-30T17:50:52.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-vpxm-cr3r-pjp9"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>A vulnerability was found in Keycloak. Deployments of Keycloak with a reverse proxy not using pass-through termination of TLS, with mTLS enabled, are affected. This issue may allow an attacker on the local network to authenticate as any user or client that leverages mTLS as the authentication mechanism.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/keycloak/keycloak/security/advisories/GHSA-93ww-43rr-79v3\">https://github.com/keycloak/keycloak/security/advisories/GHSA-93ww-43rr-79v3</a></li>\n<li><a href=\"https://github.com/keycloak/keycloak/issues/35217\">https://github.com/keycloak/keycloak/issues/35217</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-93ww-43rr-79v3\">https://github.com/advisories/GHSA-93ww-43rr-79v3</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-93ww-43rr-79v3",
            "title": "[org.keycloak:keycloak-core] Keycloak mTLS Authentication Bypass via Reverse Proxy TLS Termination ",
            "date_modified": "2025-01-30T17:47:42.000Z",
            "date_published": "2024-11-25T19:40:46.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-93ww-43rr-79v3"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h2 id=\"summary\">Summary</h2>\n<p><a href=\"https://docs.djl.ai/master/index.html\">Deep Java Library (DJL)</a> is an open-source, high-level, engine-agnostic Java framework for deep learning. DJL is designed to be easy to get started with and simple to use for Java developers. DJL provides a native Java development experience and functions like any other regular Java library.</p>\n<p>DJL provides utilities for extracting tar and zip model archives that are used when loading models for use with DJL. These utilities were found to contain issues that do not protect against absolute path traversal during the extraction process.</p>\n<h2 id=\"impact\">Impact</h2>\n<p>An issue exists with DJL's untar and unzip functionalities. Specifically, it is possible to create an archive on a Windows system, and when extracted on a MacOS or Linux system, write artifacts outside the intended destination during the extraction process. The reverse is also true for archives created on MacOS/Linux systems and extracted on Windows systems.</p>\n<p>Impacted versions: 0.1.0 - 0.31.0</p>\n<h2 id=\"patches\">Patches</h2>\n<p>This issue has been patched in DJL 0.31.1 [1]</p>\n<h2 id=\"workarounds\">Workarounds</h2>\n<p>Do not use model archive files from sources you do not trust. You should only use model archives from official sources like the DJL Model Zoo, or models that you have created and packaged yourself.</p>\n<h2 id=\"references\">References</h2>\n<p>If you have any questions or comments about this advisory, we ask that you contact AWS/Amazon Security via our vulnerability reporting page [2] or directly via email to <a href=\"mailto:aws-security@amazon.com\">aws-security@amazon.com</a>. Please do not create a public GitHub issue.</p>\n<p>[1] <a href=\"https://github.com/deepjavalibrary/djl/tree/v0.31.1\">https://github.com/deepjavalibrary/djl/tree/v0.31.1</a>\n[2] <a href=\"https://aws.amazon.com/security/vulnerability-reporting\">https://aws.amazon.com/security/vulnerability-reporting</a></p>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/deepjavalibrary/djl/security/advisories/GHSA-jcrp-x7w3-ffmg\">https://github.com/deepjavalibrary/djl/security/advisories/GHSA-jcrp-x7w3-ffmg</a></li>\n<li><a href=\"https://github.com/deepjavalibrary/djl/commit/7415cc5f72aae69ea9716a5e4f709af03a77a619\">https://github.com/deepjavalibrary/djl/commit/7415cc5f72aae69ea9716a5e4f709af03a77a619</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2025-0851\">https://nvd.nist.gov/vuln/detail/CVE-2025-0851</a></li>\n<li><a href=\"https://aws.amazon.com/security/security-bulletins/AWS-2025-003\">https://aws.amazon.com/security/security-bulletins/AWS-2025-003</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-jcrp-x7w3-ffmg\">https://github.com/advisories/GHSA-jcrp-x7w3-ffmg</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-jcrp-x7w3-ffmg",
            "title": "[ai.djl:api] Deep Java Library path traversal issue",
            "date_modified": "2025-01-30T03:04:44.000Z",
            "date_published": "2025-01-29T22:21:33.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-jcrp-x7w3-ffmg"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>An issue in the reset password interface of ruoyi v4.8.0 allows attackers with Admin privileges to cause a Denial of Service (DoS) by duplicating the login name of the account.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-57439\">https://nvd.nist.gov/vuln/detail/CVE-2024-57439</a></li>\n<li><a href=\"https://gitee.com/y_project/RuoYi\">https://gitee.com/y_project/RuoYi</a></li>\n<li><a href=\"https://github.com/peccc/restful_vul/blob/main/ruoyi_dos/ruoyi_dos.md\">https://github.com/peccc/restful_vul/blob/main/ruoyi_dos/ruoyi_dos.md</a></li>\n<li><a href=\"https://github.com/yangzongzhuan/RuoYi\">https://github.com/yangzongzhuan/RuoYi</a></li>\n<li><a href=\"https://ruoyi.vip\">https://ruoyi.vip</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-qq5h-rjj9-q9qg\">https://github.com/advisories/GHSA-qq5h-rjj9-q9qg</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-qq5h-rjj9-q9qg",
            "title": "[com.ruoyi:ruoyi] RuoYi vulnerable to Denial of Service by attackers with admin privileges",
            "date_modified": "2025-01-29T19:20:36.000Z",
            "date_published": "2025-01-29T15:31:35.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-qq5h-rjj9-q9qg"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Insecure permissions in RuoYi v4.8.0 allows authenticated attackers to escalate privileges by assigning themselves higher level roles.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-57438\">https://nvd.nist.gov/vuln/detail/CVE-2024-57438</a></li>\n<li><a href=\"https://gitee.com/y_project/RuoYi\">https://gitee.com/y_project/RuoYi</a></li>\n<li><a href=\"https://github.com/peccc/restful_vul/blob/main/ruoyi_insecure_role_assignments/ruoyi_insecure_role_assignments.md\">https://github.com/peccc/restful_vul/blob/main/ruoyi_insecure_role_assignments/ruoyi_insecure_role_assignments.md</a></li>\n<li><a href=\"https://github.com/yangzongzhuan/RuoYi\">https://github.com/yangzongzhuan/RuoYi</a></li>\n<li><a href=\"https://ruoyi.vip\">https://ruoyi.vip</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-h5jh-rp76-q242\">https://github.com/advisories/GHSA-h5jh-rp76-q242</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-h5jh-rp76-q242",
            "title": "[com.ruoyi:ruoyi] RuoYi has insecure permissions",
            "date_modified": "2025-01-29T19:20:34.000Z",
            "date_published": "2025-01-29T15:31:35.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-h5jh-rp76-q242"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>RuoYi v4.8.0 was discovered to allow unauthorized attackers to view the session ID of the admin in the system monitoring. This issue can allow attackers to impersonate Admin users via using a crafted cookie.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-57436\">https://nvd.nist.gov/vuln/detail/CVE-2024-57436</a></li>\n<li><a href=\"https://github.com/peccc/restful_vul/blob/main/ruoyi_elevation_of_privileges/ruoyi_elevation_of_privileges.md\">https://github.com/peccc/restful_vul/blob/main/ruoyi_elevation_of_privileges/ruoyi_elevation_of_privileges.md</a></li>\n<li><a href=\"https://github.com/yangzongzhuan/RuoYi\">https://github.com/yangzongzhuan/RuoYi</a></li>\n<li><a href=\"https://ruoyi.vip\">https://ruoyi.vip</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-v664-qgx9-wf79\">https://github.com/advisories/GHSA-v664-qgx9-wf79</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-v664-qgx9-wf79",
            "title": "[com.ruoyi:ruoyi] RuoYi allowed unauthorized attackers to view the session ID of the admin in the system monitoring",
            "date_modified": "2025-01-29T19:20:33.000Z",
            "date_published": "2025-01-29T15:31:35.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-v664-qgx9-wf79"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Hive creates a credentials file to a temporary directory in the file system with permissions 644 by default when the file permissions are not set explicitly. Any unauthorized user having access to the directory can read the sensitive information written into this file.&nbsp;Users are recommended to upgrade to version 4.0.1, which fixes this issue.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-29869\">https://nvd.nist.gov/vuln/detail/CVE-2024-29869</a></li>\n<li><a href=\"https://github.com/apache/hive/commit/20106e254527f7d71b2e34455c4322e14950c620\">https://github.com/apache/hive/commit/20106e254527f7d71b2e34455c4322e14950c620</a></li>\n<li><a href=\"https://github.com/apache/hive\">https://github.com/apache/hive</a></li>\n<li><a href=\"https://issues.apache.org/jira/browse/HIVE-28134\">https://issues.apache.org/jira/browse/HIVE-28134</a></li>\n<li><a href=\"https://lists.apache.org/thread/h27ohpyrqf9w1m3c0tqr7x8jg59rcrv6\">https://lists.apache.org/thread/h27ohpyrqf9w1m3c0tqr7x8jg59rcrv6</a></li>\n<li><a href=\"http://www.openwall.com/lists/oss-security/2025/01/28/4\">http://www.openwall.com/lists/oss-security/2025/01/28/4</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-c476-j253-5rgq\">https://github.com/advisories/GHSA-c476-j253-5rgq</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-c476-j253-5rgq",
            "title": "[org.apache.hive:hive-exec] Apache Hive Incorrectly Assigns Permissions for a Critical Resource",
            "date_modified": "2025-01-29T19:20:08.000Z",
            "date_published": "2025-01-29T00:31:54.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-c476-j253-5rgq"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"issue\">Issue</h3>\n<p>Snowflake discovered and remediated a vulnerability in the Snowflake JDBC Driver. On Linux systems, when temporary credential caching is enabled, the Snowflake JDBC Driver will cache temporary credentials locally in a world-readable file.</p>\n<p>This vulnerability affects versions 3.6.8 through 3.21.0. Snowflake fixed the issue in version 3.22.0.</p>\n<h3 id=\"vulnerability-details\">Vulnerability Details</h3>\n<p>On Linux, when either EXTERNALBROWSER or USERNAME_PASSWORD_MFA authentication methods are used with temporary credential caching enabled, the Snowflake JDBC Driver will cache temporary credentials in a local file. In the vulnerable versions of the Driver, this file is created with world-readable permissions.</p>\n<h3 id=\"solution\">Solution</h3>\n<p>Snowflake released version 3.22.0 of the Snowflake JDBC Driver, which fixes this issue. We recommend users upgrade to version 3.22.0.</p>\n<h3 id=\"additional-information\">Additional Information</h3>\n<p>If you discover a security vulnerability in one of our products or websites, please report the issue to HackerOne. For more information, please see our <a href=\"https://hackerone.com/snowflake?type=team\">Vulnerability Disclosure Policy</a>.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/snowflakedb/snowflake-jdbc/security/advisories/GHSA-33g6-495w-v8j2\">https://github.com/snowflakedb/snowflake-jdbc/security/advisories/GHSA-33g6-495w-v8j2</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2025-24790\">https://nvd.nist.gov/vuln/detail/CVE-2025-24790</a></li>\n<li><a href=\"https://github.com/snowflakedb/snowflake-jdbc/commit/9e1a5acf12406b16c4780ca013f4c4db48b74b59\">https://github.com/snowflakedb/snowflake-jdbc/commit/9e1a5acf12406b16c4780ca013f4c4db48b74b59</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-33g6-495w-v8j2\">https://github.com/advisories/GHSA-33g6-495w-v8j2</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-33g6-495w-v8j2",
            "title": "[net.snowflake:snowflake-jdbc] Snowflake JDBC uses insecure temporary credential cache file permissions",
            "date_modified": "2025-01-29T18:42:08.000Z",
            "date_published": "2025-01-29T18:42:07.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-33g6-495w-v8j2"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"issue\">Issue</h3>\n<p>Snowflake discovered and remediated a vulnerability in the Snowflake JDBC Driver. When the EXTERNALBROWSER authentication method is used on Windows, an attacker with write access to a directory in the %PATH% can escalate their privileges to the user that runs the vulnerable JDBC Driver version.</p>\n<p>This vulnerability affects versions 3.2.3 through 3.21.0 on Windows. Snowflake fixed the issue in version 3.22.0.</p>\n<h3 id=\"vulnerability-details\">Vulnerability Details</h3>\n<p>When the EXTERNALBROWSER authentication method is selected, the Snowflake JDBC Driver on non-macOS operating systems tries to open the SSO URL using xdg-open. Because xdg-open is a Linux program that doesn’t exist in a default Windows installation, a sufficiently privileged attacker could place a malicious executable in one of the directories on the %PATH% and achieve local privilege escalation to the user running the JDBC Driver.</p>\n<h3 id=\"solution\">Solution</h3>\n<p>Snowflake released version 3.22.0 of the Snowflake JDBC Driver, which fixes this issue. We recommend users upgrade to version 3.22.0.</p>\n<h3 id=\"additional-information\">Additional Information</h3>\n<p>If you discover a security vulnerability in one of our products or websites, please report the issue to HackerOne. For more information, please see our <a href=\"https://hackerone.com/snowflake?type=team\">Vulnerability Disclosure Policy</a>.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/snowflakedb/snowflake-jdbc/security/advisories/GHSA-7hpq-3g6w-pvhf\">https://github.com/snowflakedb/snowflake-jdbc/security/advisories/GHSA-7hpq-3g6w-pvhf</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2025-24789\">https://nvd.nist.gov/vuln/detail/CVE-2025-24789</a></li>\n<li><a href=\"https://github.com/snowflakedb/snowflake-jdbc/commit/4f01bb8f9b708c71e7a2111c87371dbfc1d53dd6\">https://github.com/snowflakedb/snowflake-jdbc/commit/4f01bb8f9b708c71e7a2111c87371dbfc1d53dd6</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-7hpq-3g6w-pvhf\">https://github.com/advisories/GHSA-7hpq-3g6w-pvhf</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-7hpq-3g6w-pvhf",
            "title": "[net.snowflake:snowflake-jdbc] Snowflake JDBC allows an untrusted search path on Windows",
            "date_modified": "2025-01-29T18:41:58.000Z",
            "date_published": "2025-01-29T18:41:57.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-7hpq-3g6w-pvhf"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Stored Cross-Site Scripting (XSS) Vulnerability in the Categorization Option of My Subscriptions Functionality in Silverpeas Core 6.3.1 &lt;= 6.4.1 allows a remote attacker to execute arbitrary JavaScript code. This is achieved by injecting a malicious payload into the Name field of a subscription. The attack can lead to session hijacking, data theft, or unauthorized actions when an admin user views the affected subscription.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-56923\">https://nvd.nist.gov/vuln/detail/CVE-2024-56923</a></li>\n<li><a href=\"https://github.com/Mohamed-Saqib-C/CVEs/blob/main/CVE-2024-56923/README.md\">https://github.com/Mohamed-Saqib-C/CVEs/blob/main/CVE-2024-56923/README.md</a></li>\n<li><a href=\"https://github.com/Silverpeas/Silverpeas-Core/pull/1373\">https://github.com/Silverpeas/Silverpeas-Core/pull/1373</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-788m-27g4-cf86\">https://github.com/advisories/GHSA-788m-27g4-cf86</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-788m-27g4-cf86",
            "title": "[org.silverpeas.core:silverpeas-core] Cross site scripting in Silverpeas Core",
            "date_modified": "2025-01-29T16:55:55.000Z",
            "date_published": "2025-01-22T21:30:57.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-788m-27g4-cf86"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>The Account Settings page in Liferay Portal 7.4.3.76 through 7.4.3.99, and Liferay DXP 2023.Q3 before patch 5, and 7.4 update 76 through 92 embeds the user’s hashed password in the page’s HTML source, which allows man-in-the-middle attackers to steal a user's hashed password.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-26270\">https://nvd.nist.gov/vuln/detail/CVE-2024-26270</a></li>\n<li><a href=\"https://liferay.dev/portal/security/known-vulnerabilities/-/asset_publisher/jekt/content/cve-2024-26270\">https://liferay.dev/portal/security/known-vulnerabilities/-/asset_publisher/jekt/content/cve-2024-26270</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-xq4r-4xfh-vch8\">https://github.com/advisories/GHSA-xq4r-4xfh-vch8</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-xq4r-4xfh-vch8",
            "title": "[com.liferay.portal:release.dxp.bom] Liferay Portal and Liferay DXP vulnerable to theft of hashed password",
            "date_modified": "2025-01-28T23:15:24.000Z",
            "date_published": "2024-02-20T15:31:05.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-xq4r-4xfh-vch8"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>The Account Settings page in Liferay Portal 7.4.3.76 through 7.4.3.99, and Liferay DXP 2023.Q3 before patch 5, and 7.4 update 76 through 92 embeds the user’s hashed password in the page’s HTML source, which allows man-in-the-middle attackers to steal a user's hashed password.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-26270\">https://nvd.nist.gov/vuln/detail/CVE-2024-26270</a></li>\n<li><a href=\"https://liferay.dev/portal/security/known-vulnerabilities/-/asset_publisher/jekt/content/cve-2024-26270\">https://liferay.dev/portal/security/known-vulnerabilities/-/asset_publisher/jekt/content/cve-2024-26270</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-xq4r-4xfh-vch8\">https://github.com/advisories/GHSA-xq4r-4xfh-vch8</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-xq4r-4xfh-vch8",
            "title": "[com.liferay.portal:release.dxp.bom] Liferay Portal and Liferay DXP vulnerable to theft of hashed password",
            "date_modified": "2025-01-28T23:15:24.000Z",
            "date_published": "2024-02-20T15:31:05.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-xq4r-4xfh-vch8"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>The Account Settings page in Liferay Portal 7.4.3.76 through 7.4.3.99, and Liferay DXP 2023.Q3 before patch 5, and 7.4 update 76 through 92 embeds the user’s hashed password in the page’s HTML source, which allows man-in-the-middle attackers to steal a user's hashed password.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-26270\">https://nvd.nist.gov/vuln/detail/CVE-2024-26270</a></li>\n<li><a href=\"https://liferay.dev/portal/security/known-vulnerabilities/-/asset_publisher/jekt/content/cve-2024-26270\">https://liferay.dev/portal/security/known-vulnerabilities/-/asset_publisher/jekt/content/cve-2024-26270</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-xq4r-4xfh-vch8\">https://github.com/advisories/GHSA-xq4r-4xfh-vch8</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-xq4r-4xfh-vch8",
            "title": "[com.liferay.portal:release.portal.bom] Liferay Portal and Liferay DXP vulnerable to theft of hashed password",
            "date_modified": "2025-01-28T23:15:24.000Z",
            "date_published": "2024-02-20T15:31:05.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-xq4r-4xfh-vch8"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Stored cross-site scripting (XSS) vulnerability in the Document and Media widget in Liferay Portal 7.4.3.18 through 7.4.3.101, and Liferay DXP 2023.Q3 before patch 6, and 7.4 update 18 through 92 allows remote authenticated users to inject arbitrary web script or HTML via a crafted payload injected into a document's “Title” text field.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-47795\">https://nvd.nist.gov/vuln/detail/CVE-2023-47795</a></li>\n<li><a href=\"https://liferay.dev/portal/security/known-vulnerabilities/-/asset_publisher/jekt/content/cve-2023-47795\">https://liferay.dev/portal/security/known-vulnerabilities/-/asset_publisher/jekt/content/cve-2023-47795</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-q2cv-7j58-rfmj\">https://github.com/advisories/GHSA-q2cv-7j58-rfmj</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-q2cv-7j58-rfmj",
            "title": "[com.liferay.portal:release.dxp.bom] Liferay Portal Document and Media widget and Liferay DXP vulnerable to stored Cross-site Scripting",
            "date_modified": "2025-01-28T22:23:42.000Z",
            "date_published": "2024-02-21T15:30:45.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-q2cv-7j58-rfmj"
            },
            "tags": [
                "severity"
            ]
        }
    ]
}