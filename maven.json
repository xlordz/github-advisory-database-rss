{
    "version": "https://jsonfeed.org/version/1",
    "title": "Security Advisory for Java artifacts hosted at the Maven central repository",
    "home_page_url": "https://github.com/advisories?query=type%3Areviewed+ecosystem%3Amaven",
    "feed_url": "https://azu.github.io/github-advisory-database-rss/maven.json",
    "description": "Security Advisory for Java artifacts hosted at the Maven central repository on GitHub",
    "items": [
        {
            "content_html": "<p>XXE vulnerability in Liferay Portal 7.2.0 through 7.4.3.7, and older unsupported versions, and Liferay DXP 7.4 before update 4, 7.3 before update 12, 7.2 before fix pack 20, and older unsupported versions allows attackers with permission to deploy widgets/portlets/extensions to obtain sensitive information or consume system resources via the Java2WsddTask._format method.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-25606\">https://nvd.nist.gov/vuln/detail/CVE-2024-25606</a></li>\n<li><a href=\"https://liferay.dev/portal/security/known-vulnerabilities/-/asset_publisher/jekt/content/cve-2024-25606\">https://liferay.dev/portal/security/known-vulnerabilities/-/asset_publisher/jekt/content/cve-2024-25606</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-869h-qhfx-w939\">https://github.com/advisories/GHSA-869h-qhfx-w939</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-869h-qhfx-w939",
            "title": "[com.liferay.portal:release.dxp.bom] Liferay Portal has an XXE vulnerability in Java2WsddTask._format",
            "date_modified": "2024-12-11T19:38:13.000Z",
            "date_published": "2024-02-20T09:30:32.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-869h-qhfx-w939"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>XXE vulnerability in Liferay Portal 7.2.0 through 7.4.3.7, and older unsupported versions, and Liferay DXP 7.4 before update 4, 7.3 before update 12, 7.2 before fix pack 20, and older unsupported versions allows attackers with permission to deploy widgets/portlets/extensions to obtain sensitive information or consume system resources via the Java2WsddTask._format method.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-25606\">https://nvd.nist.gov/vuln/detail/CVE-2024-25606</a></li>\n<li><a href=\"https://liferay.dev/portal/security/known-vulnerabilities/-/asset_publisher/jekt/content/cve-2024-25606\">https://liferay.dev/portal/security/known-vulnerabilities/-/asset_publisher/jekt/content/cve-2024-25606</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-869h-qhfx-w939\">https://github.com/advisories/GHSA-869h-qhfx-w939</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-869h-qhfx-w939",
            "title": "[com.liferay.portal:release.dxp.bom] Liferay Portal has an XXE vulnerability in Java2WsddTask._format",
            "date_modified": "2024-12-11T19:38:13.000Z",
            "date_published": "2024-02-20T09:30:32.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-869h-qhfx-w939"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>XXE vulnerability in Liferay Portal 7.2.0 through 7.4.3.7, and older unsupported versions, and Liferay DXP 7.4 before update 4, 7.3 before update 12, 7.2 before fix pack 20, and older unsupported versions allows attackers with permission to deploy widgets/portlets/extensions to obtain sensitive information or consume system resources via the Java2WsddTask._format method.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-25606\">https://nvd.nist.gov/vuln/detail/CVE-2024-25606</a></li>\n<li><a href=\"https://liferay.dev/portal/security/known-vulnerabilities/-/asset_publisher/jekt/content/cve-2024-25606\">https://liferay.dev/portal/security/known-vulnerabilities/-/asset_publisher/jekt/content/cve-2024-25606</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-869h-qhfx-w939\">https://github.com/advisories/GHSA-869h-qhfx-w939</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-869h-qhfx-w939",
            "title": "[com.liferay.portal:release.dxp.bom] Liferay Portal has an XXE vulnerability in Java2WsddTask._format",
            "date_modified": "2024-12-11T19:38:13.000Z",
            "date_published": "2024-02-20T09:30:32.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-869h-qhfx-w939"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>XXE vulnerability in Liferay Portal 7.2.0 through 7.4.3.7, and older unsupported versions, and Liferay DXP 7.4 before update 4, 7.3 before update 12, 7.2 before fix pack 20, and older unsupported versions allows attackers with permission to deploy widgets/portlets/extensions to obtain sensitive information or consume system resources via the Java2WsddTask._format method.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-25606\">https://nvd.nist.gov/vuln/detail/CVE-2024-25606</a></li>\n<li><a href=\"https://liferay.dev/portal/security/known-vulnerabilities/-/asset_publisher/jekt/content/cve-2024-25606\">https://liferay.dev/portal/security/known-vulnerabilities/-/asset_publisher/jekt/content/cve-2024-25606</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-869h-qhfx-w939\">https://github.com/advisories/GHSA-869h-qhfx-w939</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-869h-qhfx-w939",
            "title": "[com.liferay.portal:release.portal.bom] Liferay Portal has an XXE vulnerability in Java2WsddTask._format",
            "date_modified": "2024-12-11T19:38:13.000Z",
            "date_published": "2024-02-20T09:30:32.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-869h-qhfx-w939"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>XXE vulnerability in Liferay Portal 7.2.0 through 7.4.3.7, and older unsupported versions, and Liferay DXP 7.4 before update 4, 7.3 before update 12, 7.2 before fix pack 20, and older unsupported versions allows attackers with permission to deploy widgets/portlets/extensions to obtain sensitive information or consume system resources via the Java2WsddTask._format method.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-25606\">https://nvd.nist.gov/vuln/detail/CVE-2024-25606</a></li>\n<li><a href=\"https://liferay.dev/portal/security/known-vulnerabilities/-/asset_publisher/jekt/content/cve-2024-25606\">https://liferay.dev/portal/security/known-vulnerabilities/-/asset_publisher/jekt/content/cve-2024-25606</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-869h-qhfx-w939\">https://github.com/advisories/GHSA-869h-qhfx-w939</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-869h-qhfx-w939",
            "title": "[com.liferay.portal:com.liferay.util.java] Liferay Portal has an XXE vulnerability in Java2WsddTask._format",
            "date_modified": "2024-12-11T19:38:13.000Z",
            "date_published": "2024-02-20T09:30:32.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-869h-qhfx-w939"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Spring MVC controller methods with an @RequestBody byte[]&nbsp;method parameter are vulnerable to a DoS attack.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-38828\">https://nvd.nist.gov/vuln/detail/CVE-2024-38828</a></li>\n<li><a href=\"https://spring.io/security/cve-2024-38828\">https://spring.io/security/cve-2024-38828</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-w3c8-7r8f-9jp8\">https://github.com/advisories/GHSA-w3c8-7r8f-9jp8</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-w3c8-7r8f-9jp8",
            "title": "[org.springframework:spring-webmvc] Spring MVC controller vulnerable to a DoS attack",
            "date_modified": "2024-12-11T18:49:24.000Z",
            "date_published": "2024-11-18T06:30:35.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-w3c8-7r8f-9jp8"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Applications serving static resources through the functional web frameworks WebMvc.fn or WebFlux.fn are vulnerable to path traversal attacks. An attacker can craft malicious HTTP requests and obtain any file on the file system that is also accessible to the process in which the Spring application is running.</p>\n<p>Specifically, an application is vulnerable when both of the following are true:</p>\n<ul>\n<li>the web application uses RouterFunctions&nbsp;to serve static resources</li>\n<li>resource handling is explicitly configured with a FileSystemResource&nbsp;location</li>\n</ul>\n<p>However, malicious requests are blocked and rejected when any of the following is true:</p>\n<ul>\n<li>the  Spring Security HTTP Firewall <a href=\"https://docs.spring.io/spring-security/reference/servlet/exploits/firewall.html\">https://docs.spring.io/spring-security/reference/servlet/exploits/firewall.html</a> &nbsp;is in use</li>\n<li>the application runs on Tomcat or Jetty</li>\n</ul>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-38816\">https://nvd.nist.gov/vuln/detail/CVE-2024-38816</a></li>\n<li><a href=\"https://spring.io/security/cve-2024-38816\">https://spring.io/security/cve-2024-38816</a></li>\n<li><a href=\"https://github.com/spring-projects/spring-framework/commit/d86bf8b2056429edf5494456cffcb2b243331c49\">https://github.com/spring-projects/spring-framework/commit/d86bf8b2056429edf5494456cffcb2b243331c49</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-cx7f-g6mp-7hqm\">https://github.com/advisories/GHSA-cx7f-g6mp-7hqm</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-cx7f-g6mp-7hqm",
            "title": "[org.springframework:spring-webflux] Path traversal vulnerability in functional web frameworks",
            "date_modified": "2024-12-10T19:47:13.000Z",
            "date_published": "2024-09-13T06:30:42.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-cx7f-g6mp-7hqm"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Applications serving static resources through the functional web frameworks WebMvc.fn or WebFlux.fn are vulnerable to path traversal attacks. An attacker can craft malicious HTTP requests and obtain any file on the file system that is also accessible to the process in which the Spring application is running.</p>\n<p>Specifically, an application is vulnerable when both of the following are true:</p>\n<ul>\n<li>the web application uses RouterFunctions&nbsp;to serve static resources</li>\n<li>resource handling is explicitly configured with a FileSystemResource&nbsp;location</li>\n</ul>\n<p>However, malicious requests are blocked and rejected when any of the following is true:</p>\n<ul>\n<li>the  Spring Security HTTP Firewall <a href=\"https://docs.spring.io/spring-security/reference/servlet/exploits/firewall.html\">https://docs.spring.io/spring-security/reference/servlet/exploits/firewall.html</a> &nbsp;is in use</li>\n<li>the application runs on Tomcat or Jetty</li>\n</ul>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-38816\">https://nvd.nist.gov/vuln/detail/CVE-2024-38816</a></li>\n<li><a href=\"https://spring.io/security/cve-2024-38816\">https://spring.io/security/cve-2024-38816</a></li>\n<li><a href=\"https://github.com/spring-projects/spring-framework/commit/d86bf8b2056429edf5494456cffcb2b243331c49\">https://github.com/spring-projects/spring-framework/commit/d86bf8b2056429edf5494456cffcb2b243331c49</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-cx7f-g6mp-7hqm\">https://github.com/advisories/GHSA-cx7f-g6mp-7hqm</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-cx7f-g6mp-7hqm",
            "title": "[org.springframework:spring-webmvc] Path traversal vulnerability in functional web frameworks",
            "date_modified": "2024-12-10T19:47:13.000Z",
            "date_published": "2024-09-13T06:30:42.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-cx7f-g6mp-7hqm"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Applications serving static resources through the functional web frameworks WebMvc.fn or WebFlux.fn are vulnerable to path traversal attacks. An attacker can craft malicious HTTP requests and obtain any file on the file system that is also accessible to the process in which the Spring application is running.</p>\n<p>Specifically, an application is vulnerable when both of the following are true:</p>\n<ul>\n<li>the web application uses RouterFunctions&nbsp;to serve static resources</li>\n<li>resource handling is explicitly configured with a FileSystemResource&nbsp;location</li>\n</ul>\n<p>However, malicious requests are blocked and rejected when any of the following is true:</p>\n<ul>\n<li>the  Spring Security HTTP Firewall <a href=\"https://docs.spring.io/spring-security/reference/servlet/exploits/firewall.html\">https://docs.spring.io/spring-security/reference/servlet/exploits/firewall.html</a> &nbsp;is in use</li>\n<li>the application runs on Tomcat or Jetty</li>\n</ul>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-38816\">https://nvd.nist.gov/vuln/detail/CVE-2024-38816</a></li>\n<li><a href=\"https://spring.io/security/cve-2024-38816\">https://spring.io/security/cve-2024-38816</a></li>\n<li><a href=\"https://github.com/spring-projects/spring-framework/commit/d86bf8b2056429edf5494456cffcb2b243331c49\">https://github.com/spring-projects/spring-framework/commit/d86bf8b2056429edf5494456cffcb2b243331c49</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-cx7f-g6mp-7hqm\">https://github.com/advisories/GHSA-cx7f-g6mp-7hqm</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-cx7f-g6mp-7hqm",
            "title": "[org.springframework:spring-webflux] Path traversal vulnerability in functional web frameworks",
            "date_modified": "2024-12-10T19:47:13.000Z",
            "date_published": "2024-09-13T06:30:42.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-cx7f-g6mp-7hqm"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Applications serving static resources through the functional web frameworks WebMvc.fn or WebFlux.fn are vulnerable to path traversal attacks. An attacker can craft malicious HTTP requests and obtain any file on the file system that is also accessible to the process in which the Spring application is running.</p>\n<p>Specifically, an application is vulnerable when both of the following are true:</p>\n<ul>\n<li>the web application uses RouterFunctions&nbsp;to serve static resources</li>\n<li>resource handling is explicitly configured with a FileSystemResource&nbsp;location</li>\n</ul>\n<p>However, malicious requests are blocked and rejected when any of the following is true:</p>\n<ul>\n<li>the  Spring Security HTTP Firewall <a href=\"https://docs.spring.io/spring-security/reference/servlet/exploits/firewall.html\">https://docs.spring.io/spring-security/reference/servlet/exploits/firewall.html</a> &nbsp;is in use</li>\n<li>the application runs on Tomcat or Jetty</li>\n</ul>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-38816\">https://nvd.nist.gov/vuln/detail/CVE-2024-38816</a></li>\n<li><a href=\"https://spring.io/security/cve-2024-38816\">https://spring.io/security/cve-2024-38816</a></li>\n<li><a href=\"https://github.com/spring-projects/spring-framework/commit/d86bf8b2056429edf5494456cffcb2b243331c49\">https://github.com/spring-projects/spring-framework/commit/d86bf8b2056429edf5494456cffcb2b243331c49</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-cx7f-g6mp-7hqm\">https://github.com/advisories/GHSA-cx7f-g6mp-7hqm</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-cx7f-g6mp-7hqm",
            "title": "[org.springframework:spring-webmvc] Path traversal vulnerability in functional web frameworks",
            "date_modified": "2024-12-10T19:47:13.000Z",
            "date_published": "2024-09-13T06:30:42.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-cx7f-g6mp-7hqm"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Applications serving static resources through the functional web frameworks WebMvc.fn or WebFlux.fn are vulnerable to path traversal attacks. An attacker can craft malicious HTTP requests and obtain any file on the file system that is also accessible to the process in which the Spring application is running.</p>\n<p>Specifically, an application is vulnerable when both of the following are true:</p>\n<ul>\n<li>the web application uses RouterFunctions&nbsp;to serve static resources</li>\n<li>resource handling is explicitly configured with a FileSystemResource&nbsp;location</li>\n</ul>\n<p>However, malicious requests are blocked and rejected when any of the following is true:</p>\n<ul>\n<li>the  Spring Security HTTP Firewall <a href=\"https://docs.spring.io/spring-security/reference/servlet/exploits/firewall.html\">https://docs.spring.io/spring-security/reference/servlet/exploits/firewall.html</a> &nbsp;is in use</li>\n<li>the application runs on Tomcat or Jetty</li>\n</ul>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-38816\">https://nvd.nist.gov/vuln/detail/CVE-2024-38816</a></li>\n<li><a href=\"https://spring.io/security/cve-2024-38816\">https://spring.io/security/cve-2024-38816</a></li>\n<li><a href=\"https://github.com/spring-projects/spring-framework/commit/d86bf8b2056429edf5494456cffcb2b243331c49\">https://github.com/spring-projects/spring-framework/commit/d86bf8b2056429edf5494456cffcb2b243331c49</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-cx7f-g6mp-7hqm\">https://github.com/advisories/GHSA-cx7f-g6mp-7hqm</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-cx7f-g6mp-7hqm",
            "title": "[org.springframework:spring-webflux] Path traversal vulnerability in functional web frameworks",
            "date_modified": "2024-12-10T19:47:13.000Z",
            "date_published": "2024-09-13T06:30:42.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-cx7f-g6mp-7hqm"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Applications serving static resources through the functional web frameworks WebMvc.fn or WebFlux.fn are vulnerable to path traversal attacks. An attacker can craft malicious HTTP requests and obtain any file on the file system that is also accessible to the process in which the Spring application is running.</p>\n<p>Specifically, an application is vulnerable when both of the following are true:</p>\n<ul>\n<li>the web application uses RouterFunctions&nbsp;to serve static resources</li>\n<li>resource handling is explicitly configured with a FileSystemResource&nbsp;location</li>\n</ul>\n<p>However, malicious requests are blocked and rejected when any of the following is true:</p>\n<ul>\n<li>the  Spring Security HTTP Firewall <a href=\"https://docs.spring.io/spring-security/reference/servlet/exploits/firewall.html\">https://docs.spring.io/spring-security/reference/servlet/exploits/firewall.html</a> &nbsp;is in use</li>\n<li>the application runs on Tomcat or Jetty</li>\n</ul>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-38816\">https://nvd.nist.gov/vuln/detail/CVE-2024-38816</a></li>\n<li><a href=\"https://spring.io/security/cve-2024-38816\">https://spring.io/security/cve-2024-38816</a></li>\n<li><a href=\"https://github.com/spring-projects/spring-framework/commit/d86bf8b2056429edf5494456cffcb2b243331c49\">https://github.com/spring-projects/spring-framework/commit/d86bf8b2056429edf5494456cffcb2b243331c49</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-cx7f-g6mp-7hqm\">https://github.com/advisories/GHSA-cx7f-g6mp-7hqm</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-cx7f-g6mp-7hqm",
            "title": "[org.springframework:spring-webmvc] Path traversal vulnerability in functional web frameworks",
            "date_modified": "2024-12-10T19:47:13.000Z",
            "date_published": "2024-09-13T06:30:42.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-cx7f-g6mp-7hqm"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>A vulnerability was found in OIDC-Client. When using the RH SSO OIDC adapter with EAP 7.x or when using the elytron-oidc-client subsystem with EAP 8.x, authorization code injection attacks can occur, allowing an attacker to inject a stolen authorization code into the attacker's own session with the client with a victim's identity. This is usually done with a Man-in-the-Middle (MitM) or phishing attack.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-12369\">https://nvd.nist.gov/vuln/detail/CVE-2024-12369</a></li>\n<li><a href=\"https://access.redhat.com/security/cve/CVE-2024-12369\">https://access.redhat.com/security/cve/CVE-2024-12369</a></li>\n<li><a href=\"https://bugzilla.redhat.com/show_bug.cgi?id=2331178\">https://bugzilla.redhat.com/show_bug.cgi?id=2331178</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-4v5x-9m47-cqr2\">https://github.com/advisories/GHSA-4v5x-9m47-cqr2</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-4v5x-9m47-cqr2",
            "title": "[org.wildfly:wildfly-elytron-oidc-client-subsystem] WildFly Elytron OpenID Connect Client Extension authorization code injection attack",
            "date_modified": "2024-12-10T19:06:03.000Z",
            "date_published": "2024-12-09T21:31:02.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-4v5x-9m47-cqr2"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Improper caching in JetBrains Ktor before 3.0.0 in the <code>HttpCache</code> Plugin could lead to response information disclosure.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-49580\">https://nvd.nist.gov/vuln/detail/CVE-2024-49580</a></li>\n<li><a href=\"https://www.jetbrains.com/privacy-security/issues-fixed\">https://www.jetbrains.com/privacy-security/issues-fixed</a></li>\n<li><a href=\"https://github.com/ktorio/ktor/pull/4337\">https://github.com/ktorio/ktor/pull/4337</a></li>\n<li><a href=\"https://github.com/ktorio/ktor/pull/4368\">https://github.com/ktorio/ktor/pull/4368</a></li>\n<li><a href=\"https://github.com/ktorio/ktor/commit/0665736fc35c8ab5525241e975f36819b67f9d3e\">https://github.com/ktorio/ktor/commit/0665736fc35c8ab5525241e975f36819b67f9d3e</a></li>\n<li><a href=\"https://github.com/ktorio/ktor/commit/d6c3a51df169c163e8f0b9ce77bbe543c70116ac\">https://github.com/ktorio/ktor/commit/d6c3a51df169c163e8f0b9ce77bbe543c70116ac</a></li>\n<li><a href=\"https://youtrack.jetbrains.com/issue/KTOR-7483\">https://youtrack.jetbrains.com/issue/KTOR-7483</a></li>\n<li><a href=\"https://github.com/ktorio/ktor/releases/tag/2.3.13\">https://github.com/ktorio/ktor/releases/tag/2.3.13</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-8qv4-773j-c979\">https://github.com/advisories/GHSA-8qv4-773j-c979</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-8qv4-773j-c979",
            "title": "[io.ktor:ktor-client-core-jvm] JetBrains Ktor information disclosure",
            "date_modified": "2024-12-06T18:22:24.000Z",
            "date_published": "2024-10-17T15:31:08.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-8qv4-773j-c979"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"summary\">Summary</h3>\n<p>sigstore-java has insufficient verification for a situation where a bundle provides a invalid signature for a checkpoint.</p>\n<h3 id=\"impact\">Impact</h3>\n<p>This bug impacts clients using any variation of KeylessVerifier.verify()</p>\n<p>Currently checkpoints are only used to ensure the root hash of an inclusion proof was provided by the log in question. Failing to validate that means a bundle may provide an inclusion proof that doesn't actually correspond to the log in question. This may eventually lead a monitor/witness being unable to detect when a compromised logs are providing different views of themselves to different clients.</p>\n<p>There are other mechanisms right now that mitigate this, such as the signed entry timestamp. Sigstore-java currently requires a valid signed entry timestamp. By correctly verifying the signed entry timestamp we can make certain assertions about the log signing the log entry (like the log was aware of the artifact signing event and signed it). Therefore the impact on clients that are not monitors/witnesses is very low.</p>\n<p>All cryptographic materials and identity information in the bundle must still be verified for the verification to pass. A valid signed entry timestamp is still required for verification to pass.</p>\n<p>sigstore-gradle-plugin and sigstore-maven-plugin are not affected by this as they only provide signing functionality.</p>\n<h3 id=\"steps-to-reproduce\">Steps To Reproduce</h3>\n<p>Build the java sigstore-cli at v1.1.0</p>\n<pre><code class=\"language-shell\">git clone --branch v1.1.0 git@github.com:sigstore/sigstore-java\ncd sigstore-java\n./gradlew :sigstore-cli:build\ntar -xf sigstore-cli/build/distributions/sigstore-cli-1.1.0-SNAPSHOT.tar --strip-components 1\n</code></pre>\n<p>Create some random blob and sign it</p>\n<pre><code class=\"language-shell\">dd bs=1 count=50 &lt;/dev/urandom &gt; blob\n./bin/sigstore-cli sign --bundle=blob.sigstore.json blob\n</code></pre>\n<p>Modify the checkpoint signature on the bundle, this is the last base64 section in the checkpoint, the following diff just swaps changes the last 3 base64 characters to aaa.</p>\n<pre><code class=\"language-diff\">\"checkpoint\": {\n+    \"envelope\": \"rekor.sigstore.dev - 1193050959916656506\\n29874050\\nhnEOPEa6SDzqJDydU+J96TQyfYfqEpsGg0aVbmfjWDw\\u003d\\n\\n— rekor.sigstore.dev wNI9ajBFAiEA4M7t/9b42FzeArRhC6oRvs7UvKwklaFLYfDDGTi2R4kCIBNc2d0VCyUbs3hd+bI7+0RHhvLOdAqYg7j/3xPe2ZPb\\n\"\n-    \"envelope\": \"rekor.sigstore.dev - 1193050959916656506\\n29874050\\nhnEOPEa6SDzqJDydU+J96TQyfYfqEpsGg0aVbmfjWDw\\u003d\\n\\n— rekor.sigstore.dev wNI9ajBFAiEA4M7t/9b42FzeArRhC6oRvs7UvKwklaFLYfDDGTi2R4kCIBNc2d0VCyUbs3hd+bI7+0RHhvLOdAqYg7j/3xPe2aaa\\n\"\n}\n</code></pre>\n<pre><code class=\"language-shell\">./bin/sigstore-cli verify --bundle=blob.sigstore.json blob\n# no errors???!\n</code></pre>\n<h3 id=\"patches\">Patches</h3>\n<p>Patched in v1.2.0 release (patch: <a href=\"https://github.com/sigstore/sigstore-java/commit/23fb4885e6704a5df4977f7acf253a745349edf9\">https://github.com/sigstore/sigstore-java/commit/23fb4885e6704a5df4977f7acf253a745349edf9</a>)\nConformance tests added <a href=\"https://github.com/sigstore/sigstore-conformance/pull/139\">https://github.com/sigstore/sigstore-conformance/pull/139</a></p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>Verifiers may chose to verify the checkpoint manually after running <code>KeylessVerifier.verify()</code></p>\n<pre><code class=\"language-java\">var bundle = Bundle.from(bundleFile, StandardCharsets.UTF_8);\nvar entry = bundle.getEntries().get(0);\nvar checkpoint = entry.getVerification().getInclusionProof().parsedCheckpoint();\nvar signedData = Splitter.on(\"\\n\\n\").splitToList(entry.getVerification().getInclusionProof().getCheckpoint()).get(0) + \"\\n\";\n\nvar tufClient = SigstoreTufClient.builder().usePublicGoodInstance().build();\ntufClient.update();\nvar trustedRoot = tufClient.getSigstoreTrustedRoot();\nvar tlog =  TransparencyLog.find(trustedRoot.getTLogs(), Hex.decode(entry.getLogID()), entry.getIntegratedTimeInstant());\n\nif (!Verifiers.newVerifier(tlog.get().getPublicKey().toJavaPublicKey()).verify(signedData.getBytes(StandardCharsets.UTF_8), checkpoint.getSignatures().get(0).getSignature())) {\n  throw new Exception(\"Checkpoint signature was invalid\");\n}\n</code></pre>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/sigstore/sigstore-java/security/advisories/GHSA-jp26-88mw-89qr\">https://github.com/sigstore/sigstore-java/security/advisories/GHSA-jp26-88mw-89qr</a></li>\n<li><a href=\"https://github.com/sigstore/sigstore-conformance/pull/139\">https://github.com/sigstore/sigstore-conformance/pull/139</a></li>\n<li><a href=\"https://github.com/sigstore/sigstore-java/commit/23fb4885e6704a5df4977f7acf253a745349edf9\">https://github.com/sigstore/sigstore-java/commit/23fb4885e6704a5df4977f7acf253a745349edf9</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-54140\">https://nvd.nist.gov/vuln/detail/CVE-2024-54140</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-jp26-88mw-89qr\">https://github.com/advisories/GHSA-jp26-88mw-89qr</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-jp26-88mw-89qr",
            "title": "[dev.sigstore:sigstore-java] sigstore-java has a vulnerability with bundle verification",
            "date_modified": "2024-12-06T00:32:51.000Z",
            "date_published": "2024-12-05T22:22:49.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-jp26-88mw-89qr"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Apache Hive&nbsp;Metastore (HMS) uses&nbsp;SerializationUtilities#deserializeObjectWithTypeInformation&nbsp;method when filtering and fetching partitions that is unsafe and&nbsp;can lead&nbsp;to Remote Code Execution (RCE) since it allows the deserialization of arbitrary data.</p>\n<p>In real deployments, the vulnerability can be exploited only by authenticated users/clients that were able to successfully establish&nbsp;a connection to the Metastore. From an API perspective any code that calls the unsafe method may be vulnerable unless it performs additional prerechecks on the input arguments.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-41137\">https://nvd.nist.gov/vuln/detail/CVE-2022-41137</a></li>\n<li><a href=\"https://github.com/apache/hive/commit/60027bb9c91a93affcfebd9068f064bc1f2a74c9\">https://github.com/apache/hive/commit/60027bb9c91a93affcfebd9068f064bc1f2a74c9</a></li>\n<li><a href=\"https://github.com/apache/hive\">https://github.com/apache/hive</a></li>\n<li><a href=\"https://issues.apache.org/jira/browse/HIVE-26539\">https://issues.apache.org/jira/browse/HIVE-26539</a></li>\n<li><a href=\"https://lists.apache.org/thread/jwtr3d9yovf2wo0qlxvkhoxnwxxyzgts\">https://lists.apache.org/thread/jwtr3d9yovf2wo0qlxvkhoxnwxxyzgts</a></li>\n<li><a href=\"http://www.openwall.com/lists/oss-security/2024/12/04/2\">http://www.openwall.com/lists/oss-security/2024/12/04/2</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-6hqr-c69m-r76q\">https://github.com/advisories/GHSA-6hqr-c69m-r76q</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-6hqr-c69m-r76q",
            "title": "[org.apache.hive:hive-exec] Apache Hive: Deserialization of untrusted data when fetching partitions from the Metastore",
            "date_modified": "2024-12-05T19:57:27.000Z",
            "date_published": "2024-12-05T12:31:28.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-6hqr-c69m-r76q"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>A exposure of sensitive information vulnerability exists in Jenkins GitHub Pull Request Builder Plugin 1.41.0 and older in GhprbGitHubAuth.java that allows attackers with Overall/Read access to connect to an attacker-specified URL using attacker-specified credentials IDs obtained through another method, capturing credentials stored in Jenkins. Additionally, these form validation methods did not require POST requests, resulting in a CSRF vulnerability. As of version 1.42.0, these form validation methods require POST requests and Overall/Administer permissions.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2018-1000186\">https://nvd.nist.gov/vuln/detail/CVE-2018-1000186</a></li>\n<li><a href=\"https://jenkins.io/security/advisory/2018-06-04/#SECURITY-805\">https://jenkins.io/security/advisory/2018-06-04/#SECURITY-805</a></li>\n<li><a href=\"https://github.com/jenkinsci/ghprb-plugin/commit/e78ee24f7056b8507992ef17a9bb74a1a31d8c11\">https://github.com/jenkinsci/ghprb-plugin/commit/e78ee24f7056b8507992ef17a9bb74a1a31d8c11</a></li>\n<li><a href=\"https://mvnrepository.com/artifact/org.jenkins-ci.plugins/ghprb\">https://mvnrepository.com/artifact/org.jenkins-ci.plugins/ghprb</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-92rv-mvmj-47qh\">https://github.com/advisories/GHSA-92rv-mvmj-47qh</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-92rv-mvmj-47qh",
            "title": "[org.jenkins-ci.plugins:ghprb] Jenkins GitHub Pull Request Builder Plugin credential capture vulnerability",
            "date_modified": "2024-12-05T15:48:44.000Z",
            "date_published": "2022-05-14T03:13:13.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-92rv-mvmj-47qh"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Vulnerability in the MySQL Connectors product of Oracle MySQL (component: Connector/J). Supported versions that are affected are 8.1.0 and prior. Difficult to exploit vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise MySQL Connectors. Successful attacks require human interaction from a person other than the attacker and while the vulnerability is in MySQL Connectors, attacks may significantly impact additional products (scope change). Successful attacks of this vulnerability can result in takeover of MySQL Connectors.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-22102\">https://nvd.nist.gov/vuln/detail/CVE-2023-22102</a></li>\n<li><a href=\"https://www.oracle.com/security-alerts/cpuoct2023.html\">https://www.oracle.com/security-alerts/cpuoct2023.html</a></li>\n<li><a href=\"https://security.netapp.com/advisory/ntap-20231027-0007\">https://security.netapp.com/advisory/ntap-20231027-0007</a></li>\n<li><a href=\"https://github.com/mysql/mysql-connector-j/compare/8.1.0...8.2.0\">https://github.com/mysql/mysql-connector-j/compare/8.1.0...8.2.0</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-m6vm-37g8-gqvh\">https://github.com/advisories/GHSA-m6vm-37g8-gqvh</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-m6vm-37g8-gqvh",
            "title": "[mysql:mysql-connector-java] MySQL Connectors takeover vulnerability",
            "date_modified": "2024-12-05T15:46:44.000Z",
            "date_published": "2023-10-18T00:31:42.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-m6vm-37g8-gqvh"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>A vulnerability in Spring LDAP allows data exposure for case sensitive comparisons.This issue affects Spring LDAP: from 2.4.0 through 2.4.3, from 3.0.0 through 3.0.9, from 3.1.0 through 3.1.7, from 3.2.0 through 3.2.7, AND all versions prior to 2.4.0.</p>\n<p>The usage of String.toLowerCase() and String.toUpperCase() has some Locale dependent exceptions that could potentially result in unintended columns from being queried\nRelated to CVE-2024-38820 <a href=\"https://spring.io/security/cve-2024-38820\">https://spring.io/security/cve-2024-38820</a></p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-38829\">https://nvd.nist.gov/vuln/detail/CVE-2024-38829</a></li>\n<li><a href=\"https://spring.io/security/cve-2024-38829\">https://spring.io/security/cve-2024-38829</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-mqvr-2rp8-j7h4\">https://github.com/advisories/GHSA-mqvr-2rp8-j7h4</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-mqvr-2rp8-j7h4",
            "title": "[org.springframework.ldap:spring-ldap-core] Spring LDAP data exposure vulnerability",
            "date_modified": "2024-12-10T16:29:01.000Z",
            "date_published": "2024-12-04T21:30:52.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-mqvr-2rp8-j7h4"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>A vulnerability in Spring LDAP allows data exposure for case sensitive comparisons.This issue affects Spring LDAP: from 2.4.0 through 2.4.3, from 3.0.0 through 3.0.9, from 3.1.0 through 3.1.7, from 3.2.0 through 3.2.7, AND all versions prior to 2.4.0.</p>\n<p>The usage of String.toLowerCase() and String.toUpperCase() has some Locale dependent exceptions that could potentially result in unintended columns from being queried\nRelated to CVE-2024-38820 <a href=\"https://spring.io/security/cve-2024-38820\">https://spring.io/security/cve-2024-38820</a></p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-38829\">https://nvd.nist.gov/vuln/detail/CVE-2024-38829</a></li>\n<li><a href=\"https://spring.io/security/cve-2024-38829\">https://spring.io/security/cve-2024-38829</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-mqvr-2rp8-j7h4\">https://github.com/advisories/GHSA-mqvr-2rp8-j7h4</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-mqvr-2rp8-j7h4",
            "title": "[org.springframework.ldap:spring-ldap-core] Spring LDAP data exposure vulnerability",
            "date_modified": "2024-12-10T16:29:01.000Z",
            "date_published": "2024-12-04T21:30:52.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-mqvr-2rp8-j7h4"
            },
            "tags": [
                "severity"
            ]
        }
    ]
}