<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://azu.github.io/github-advisory-database-rss/composer.rss</id>
    <title>Security Advisory for PHP packages hosted at packagist.org</title>
    <updated>2025-04-06T17:01:26.939Z</updated>
    <generator>github-advisory-database-rss</generator>
    <link rel="alternate" href="https://github.com/advisories?query=type%3Areviewed+ecosystem%3Acomposer"/>
    <subtitle>Security Advisory for PHP packages hosted at packagist.org on GitHub</subtitle>
    <rights>github-advisory-database-rss</rights>
    <category term="CRITICAL"/>
    <category term="HIGH"/>
    <category term="MODERATE"/>
    <category term="LOW"/>
    <entry>
        <title type="html"><![CDATA[[spatie/browsershot] Browsershot Server-Side Request Forgery (SSRF) via setURL() Function]]></title>
        <id>https://github.com/advisories/GHSA-qw64-6vcc-8ghx</id>
        <link href="https://github.com/advisories/GHSA-qw64-6vcc-8ghx"/>
        <updated>2025-04-04T17:12:02.000Z</updated>
        <content type="html"><![CDATA[<p>Versions of the package spatie/browsershot from 0.0.0 to 5.0.3 are vulnerable to Server-side Request Forgery (SSRF) in the setUrl() function due to a missing restriction on user input, enabling attackers to access localhost and list all of its directories.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2025-3192">https://nvd.nist.gov/vuln/detail/CVE-2025-3192</a></li>
<li><a href="https://gist.github.com/JunMing27/651998a34d57fbf71ff9d25386f1da0f">https://gist.github.com/JunMing27/651998a34d57fbf71ff9d25386f1da0f</a></li>
<li><a href="https://security.snyk.io/vuln/SNYK-PHP-SPATIEBROWSERSHOT-8548015">https://security.snyk.io/vuln/SNYK-PHP-SPATIEBROWSERSHOT-8548015</a></li>
<li><a href="https://github.com/advisories/GHSA-qw64-6vcc-8ghx">https://github.com/advisories/GHSA-qw64-6vcc-8ghx</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-qw64-6vcc-8ghx</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2025-04-04T06:34:22.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[api-platform/core] GraphQL grant on a property might be cached with different objects]]></title>
        <id>https://github.com/advisories/GHSA-428q-q3vv-3fq3</id>
        <link href="https://github.com/advisories/GHSA-428q-q3vv-3fq3"/>
        <updated>2025-04-04T14:19:43.000Z</updated>
        <content type="html"><![CDATA[<h3 id="original-message">Original message:</h3>
<p>I found an issue with security grants on on properties in the GraphQL ItemNormalizer:</p>
<p>If you use something like <code>#[ApiProperty(security: 'is_granted("PROPERTY_READ", [object, property])')]</code> on a member of an entity, the grant gets cached and is only evaluated once, even if the <code>object</code> in question is a different one.</p>
<p>There is the <code>ApiPlatform\GraphQl\Serializer\ItemNormalizer::isCacheKeySafe()</code> method that seems to be intended to prevent this: <a href="https://github.com/api-platform/core/blob/88f5ac50d20d6510686a7552310cc567fcca45bf/src/GraphQl/Serializer/ItemNormalizer.php#L160-L164">https://github.com/api-platform/core/blob/88f5ac50d20d6510686a7552310cc567fcca45bf/src/GraphQl/Serializer/ItemNormalizer.php#L160-L164</a><br>and in its usage on line 90 it does indeed not create a cache key, but the <code>parent::normalize()</code> that is called afterwards still creates the cache key and causes the issue.</p>
<h3 id="impact">Impact</h3>
<p>It grants access to properties that it should not.</p>
<h3 id="workarounds">Workarounds</h3>
<p>Override the ItemNormalizer.</p>
<p>Patched at: <a href="https://github.com/api-platform/core/commit/7af65aad13037d7649348ee3dcd88e084ef771f8">https://github.com/api-platform/core/commit/7af65aad13037d7649348ee3dcd88e084ef771f8</a></p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/api-platform/core/security/advisories/GHSA-428q-q3vv-3fq3">https://github.com/api-platform/core/security/advisories/GHSA-428q-q3vv-3fq3</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2025-31485">https://nvd.nist.gov/vuln/detail/CVE-2025-31485</a></li>
<li><a href="https://github.com/api-platform/core/commit/7af65aad13037d7649348ee3dcd88e084ef771f8">https://github.com/api-platform/core/commit/7af65aad13037d7649348ee3dcd88e084ef771f8</a></li>
<li><a href="https://github.com/advisories/GHSA-428q-q3vv-3fq3">https://github.com/advisories/GHSA-428q-q3vv-3fq3</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-428q-q3vv-3fq3</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2025-04-04T14:19:42.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[api-platform/graphql] GraphQL grant on a property might be cached with different objects]]></title>
        <id>https://github.com/advisories/GHSA-428q-q3vv-3fq3</id>
        <link href="https://github.com/advisories/GHSA-428q-q3vv-3fq3"/>
        <updated>2025-04-04T14:19:43.000Z</updated>
        <content type="html"><![CDATA[<h3 id="original-message">Original message:</h3>
<p>I found an issue with security grants on on properties in the GraphQL ItemNormalizer:</p>
<p>If you use something like <code>#[ApiProperty(security: 'is_granted("PROPERTY_READ", [object, property])')]</code> on a member of an entity, the grant gets cached and is only evaluated once, even if the <code>object</code> in question is a different one.</p>
<p>There is the <code>ApiPlatform\GraphQl\Serializer\ItemNormalizer::isCacheKeySafe()</code> method that seems to be intended to prevent this: <a href="https://github.com/api-platform/core/blob/88f5ac50d20d6510686a7552310cc567fcca45bf/src/GraphQl/Serializer/ItemNormalizer.php#L160-L164">https://github.com/api-platform/core/blob/88f5ac50d20d6510686a7552310cc567fcca45bf/src/GraphQl/Serializer/ItemNormalizer.php#L160-L164</a><br>and in its usage on line 90 it does indeed not create a cache key, but the <code>parent::normalize()</code> that is called afterwards still creates the cache key and causes the issue.</p>
<h3 id="impact">Impact</h3>
<p>It grants access to properties that it should not.</p>
<h3 id="workarounds">Workarounds</h3>
<p>Override the ItemNormalizer.</p>
<p>Patched at: <a href="https://github.com/api-platform/core/commit/7af65aad13037d7649348ee3dcd88e084ef771f8">https://github.com/api-platform/core/commit/7af65aad13037d7649348ee3dcd88e084ef771f8</a></p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/api-platform/core/security/advisories/GHSA-428q-q3vv-3fq3">https://github.com/api-platform/core/security/advisories/GHSA-428q-q3vv-3fq3</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2025-31485">https://nvd.nist.gov/vuln/detail/CVE-2025-31485</a></li>
<li><a href="https://github.com/api-platform/core/commit/7af65aad13037d7649348ee3dcd88e084ef771f8">https://github.com/api-platform/core/commit/7af65aad13037d7649348ee3dcd88e084ef771f8</a></li>
<li><a href="https://github.com/advisories/GHSA-428q-q3vv-3fq3">https://github.com/advisories/GHSA-428q-q3vv-3fq3</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-428q-q3vv-3fq3</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2025-04-04T14:19:42.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[concrete5/concrete5] Concrete CMS Vulnerable to Cross-Site Request Forgery (CSRF) and Cross-Site Scripting (XSS)]]></title>
        <id>https://github.com/advisories/GHSA-cmm4-p9v2-q453</id>
        <link href="https://github.com/advisories/GHSA-cmm4-p9v2-q453"/>
        <updated>2025-04-04T14:19:11.000Z</updated>
        <content type="html"><![CDATA[<p>Concrete CMS version 9 below 9.4.0RC2 and versions below 8.5.20 are vulnerable to CSRF and XSS in the Concrete CMS Address attribute because addresses are not properly sanitized in the output when a country is not specified.&nbsp; Attackers are limited to individuals whom a site administrator has granted the ability to fill in an address attribute. It is possible for the attacker to glean limited information from the site but amount and type is restricted by mitigating controls and the level of access of the attacker. Limited data modification is possible. The dashboard page itself could be rendered unavailable. 
The fix only sanitizes new data uploaded post update to Concrete CMS 9.4.0RC2. Existing database entries added before the update will still be “live” if there were successful exploits added under previous versions; a database search is recommended. The Concrete CMS security team gave this vulnerability CVSS v.4.0 score of 5.1  with vector CVSS:4.0/AV:N/AC:L/AT:N/PR:L/UI:P/VC:L/VI:L/VA:L/SC:L/SI:L/SA:L&nbsp;Thanks Myq Larson for reporting.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2025-3153">https://nvd.nist.gov/vuln/detail/CVE-2025-3153</a></li>
<li><a href="https://github.com/concretecms/concretecms/pull/12511">https://github.com/concretecms/concretecms/pull/12511</a></li>
<li><a href="https://github.com/concretecms/concretecms/pull/12512">https://github.com/concretecms/concretecms/pull/12512</a></li>
<li><a href="https://documentation.concretecms.org/9-x/developers/introduction/version-history/940-release-notes">https://documentation.concretecms.org/9-x/developers/introduction/version-history/940-release-notes</a></li>
<li><a href="https://github.com/concretecms/concretecms/releases/tag/8.5.20">https://github.com/concretecms/concretecms/releases/tag/8.5.20</a></li>
<li><a href="https://github.com/advisories/GHSA-cmm4-p9v2-q453">https://github.com/advisories/GHSA-cmm4-p9v2-q453</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-cmm4-p9v2-q453</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2025-04-03T04:41:19.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[concrete5/concrete5] Concrete CMS Vulnerable to Cross-Site Request Forgery (CSRF) and Cross-Site Scripting (XSS)]]></title>
        <id>https://github.com/advisories/GHSA-cmm4-p9v2-q453</id>
        <link href="https://github.com/advisories/GHSA-cmm4-p9v2-q453"/>
        <updated>2025-04-04T14:19:11.000Z</updated>
        <content type="html"><![CDATA[<p>Concrete CMS version 9 below 9.4.0RC2 and versions below 8.5.20 are vulnerable to CSRF and XSS in the Concrete CMS Address attribute because addresses are not properly sanitized in the output when a country is not specified.&nbsp; Attackers are limited to individuals whom a site administrator has granted the ability to fill in an address attribute. It is possible for the attacker to glean limited information from the site but amount and type is restricted by mitigating controls and the level of access of the attacker. Limited data modification is possible. The dashboard page itself could be rendered unavailable. 
The fix only sanitizes new data uploaded post update to Concrete CMS 9.4.0RC2. Existing database entries added before the update will still be “live” if there were successful exploits added under previous versions; a database search is recommended. The Concrete CMS security team gave this vulnerability CVSS v.4.0 score of 5.1  with vector CVSS:4.0/AV:N/AC:L/AT:N/PR:L/UI:P/VC:L/VI:L/VA:L/SC:L/SI:L/SA:L&nbsp;Thanks Myq Larson for reporting.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2025-3153">https://nvd.nist.gov/vuln/detail/CVE-2025-3153</a></li>
<li><a href="https://github.com/concretecms/concretecms/pull/12511">https://github.com/concretecms/concretecms/pull/12511</a></li>
<li><a href="https://github.com/concretecms/concretecms/pull/12512">https://github.com/concretecms/concretecms/pull/12512</a></li>
<li><a href="https://documentation.concretecms.org/9-x/developers/introduction/version-history/940-release-notes">https://documentation.concretecms.org/9-x/developers/introduction/version-history/940-release-notes</a></li>
<li><a href="https://github.com/concretecms/concretecms/releases/tag/8.5.20">https://github.com/concretecms/concretecms/releases/tag/8.5.20</a></li>
<li><a href="https://github.com/advisories/GHSA-cmm4-p9v2-q453">https://github.com/advisories/GHSA-cmm4-p9v2-q453</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-cmm4-p9v2-q453</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2025-04-03T04:41:19.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[typo3/cms] TYPO3 Reveals Sensitive Information via Direct Request to `misc/phpcheck/`]]></title>
        <id>https://github.com/advisories/GHSA-xj84-6q8f-qg2r</id>
        <link href="https://github.com/advisories/GHSA-xj84-6q8f-qg2r"/>
        <updated>2025-04-04T14:15:56.000Z</updated>
        <content type="html"><![CDATA[<p>TYPO3 3.8.0 and earlier allows remote attackers to obtain sensitive information via a direct request to misc/phpcheck/, which invokes the phpinfo function and prints values of unspecified environment variables.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2005-4875">https://nvd.nist.gov/vuln/detail/CVE-2005-4875</a></li>
<li><a href="https://exchange.xforce.ibmcloud.com/vulnerabilities/42457">https://exchange.xforce.ibmcloud.com/vulnerabilities/42457</a></li>
<li><a href="http://bugs.typo3.org/view.php?id=1250">http://bugs.typo3.org/view.php?id=1250</a></li>
<li><a href="http://typo3.org/teams/security/security-bulletins/typo3-20050725-1">http://typo3.org/teams/security/security-bulletins/typo3-20050725-1</a></li>
<li><a href="https://web.archive.org/web/20080228231555/http://typo3.org/teams/security/security-bulletins/typo3-20050725-1">https://web.archive.org/web/20080228231555/http://typo3.org/teams/security/security-bulletins/typo3-20050725-1</a></li>
<li><a href="https://github.com/advisories/GHSA-xj84-6q8f-qg2r">https://github.com/advisories/GHSA-xj84-6q8f-qg2r</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-xj84-6q8f-qg2r</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-05-01T02:31:34.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[api-platform/core] GraphQL query operations security can be bypassed]]></title>
        <id>https://github.com/advisories/GHSA-cg3c-245w-728m</id>
        <link href="https://github.com/advisories/GHSA-cg3c-245w-728m"/>
        <updated>2025-04-04T14:07:21.000Z</updated>
        <content type="html"><![CDATA[<h3 id="summary">Summary</h3>
<p>Using the Relay special <code>node</code> type you can bypass the configured security on an operation.</p>
<h3 id="details">Details</h3>
<p>Here is an example of how to apply security configurations for the GraphQL operations:</p>
<pre><code class="language-php">#[ApiResource(
    security: "is_granted('ROLE_USER')",
    operations: [ /* ... */ ],
    graphQlOperations: [
        new Query(security: "is_granted('ROLE_USER')"),
        //...
    ],
)]
class Book { /* ... */ }
</code></pre>
<p>This indeed checks <code>is_granted('ROLE_USER')</code> as expected for a GraphQL query like the following:</p>
<pre><code class="language-php">‌query {
    book(id: "/books/1") {
        title
    }
}
</code></pre>
<p>But the security check can be bypassed by using the <code>node</code> field (that is available by default) on the root query type like that:</p>
<pre><code class="language-php">‌query {
    node(id: "/books/1") {
        ... on Book {
            title
        }
    }
}
</code></pre>
<p>This does not execute any security checks and can therefore be used to access any entity without restrictions by everyone that has access to the API.</p>
<h3 id="impact">Impact</h3>
<p>Everyone using GraphQl with the <code>security</code> attribute. Not sure whereas this works with custom resolvers nor if this also applies on mutation.</p>
<p>Patched at <a href="https://github.com/api-platform/core/commit/60747cc8c2fb855798c923b5537888f8d0969568">https://github.com/api-platform/core/commit/60747cc8c2fb855798c923b5537888f8d0969568</a></p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/api-platform/core/security/advisories/GHSA-cg3c-245w-728m">https://github.com/api-platform/core/security/advisories/GHSA-cg3c-245w-728m</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2025-31481">https://nvd.nist.gov/vuln/detail/CVE-2025-31481</a></li>
<li><a href="https://github.com/api-platform/core/commit/60747cc8c2fb855798c923b5537888f8d0969568">https://github.com/api-platform/core/commit/60747cc8c2fb855798c923b5537888f8d0969568</a></li>
<li><a href="https://github.com/advisories/GHSA-cg3c-245w-728m">https://github.com/advisories/GHSA-cg3c-245w-728m</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-cg3c-245w-728m</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2025-04-04T14:07:20.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[api-platform/graphql] GraphQL query operations security can be bypassed]]></title>
        <id>https://github.com/advisories/GHSA-cg3c-245w-728m</id>
        <link href="https://github.com/advisories/GHSA-cg3c-245w-728m"/>
        <updated>2025-04-04T14:07:21.000Z</updated>
        <content type="html"><![CDATA[<h3 id="summary">Summary</h3>
<p>Using the Relay special <code>node</code> type you can bypass the configured security on an operation.</p>
<h3 id="details">Details</h3>
<p>Here is an example of how to apply security configurations for the GraphQL operations:</p>
<pre><code class="language-php">#[ApiResource(
    security: "is_granted('ROLE_USER')",
    operations: [ /* ... */ ],
    graphQlOperations: [
        new Query(security: "is_granted('ROLE_USER')"),
        //...
    ],
)]
class Book { /* ... */ }
</code></pre>
<p>This indeed checks <code>is_granted('ROLE_USER')</code> as expected for a GraphQL query like the following:</p>
<pre><code class="language-php">‌query {
    book(id: "/books/1") {
        title
    }
}
</code></pre>
<p>But the security check can be bypassed by using the <code>node</code> field (that is available by default) on the root query type like that:</p>
<pre><code class="language-php">‌query {
    node(id: "/books/1") {
        ... on Book {
            title
        }
    }
}
</code></pre>
<p>This does not execute any security checks and can therefore be used to access any entity without restrictions by everyone that has access to the API.</p>
<h3 id="impact">Impact</h3>
<p>Everyone using GraphQl with the <code>security</code> attribute. Not sure whereas this works with custom resolvers nor if this also applies on mutation.</p>
<p>Patched at <a href="https://github.com/api-platform/core/commit/60747cc8c2fb855798c923b5537888f8d0969568">https://github.com/api-platform/core/commit/60747cc8c2fb855798c923b5537888f8d0969568</a></p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/api-platform/core/security/advisories/GHSA-cg3c-245w-728m">https://github.com/api-platform/core/security/advisories/GHSA-cg3c-245w-728m</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2025-31481">https://nvd.nist.gov/vuln/detail/CVE-2025-31481</a></li>
<li><a href="https://github.com/api-platform/core/commit/60747cc8c2fb855798c923b5537888f8d0969568">https://github.com/api-platform/core/commit/60747cc8c2fb855798c923b5537888f8d0969568</a></li>
<li><a href="https://github.com/advisories/GHSA-cg3c-245w-728m">https://github.com/advisories/GHSA-cg3c-245w-728m</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-cg3c-245w-728m</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2025-04-04T14:07:20.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[drupal/obfuscate] Drupal Obfuscate Vulnerable to Stored Cross-Site Scripting (XSS)]]></title>
        <id>https://github.com/advisories/GHSA-hphm-3x7f-g875</id>
        <link href="https://github.com/advisories/GHSA-hphm-3x7f-g875"/>
        <updated>2025-04-04T01:10:00.000Z</updated>
        <content type="html"><![CDATA[<p>Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting') vulnerability in Drupal Obfuscate allows Stored XSS. This issue affects Obfuscate: from 0.0.0 before 2.0.1.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2025-3130">https://nvd.nist.gov/vuln/detail/CVE-2025-3130</a></li>
<li><a href="https://www.drupal.org/sa-contrib-2025-029">https://www.drupal.org/sa-contrib-2025-029</a></li>
<li><a href="https://github.com/advisories/GHSA-hphm-3x7f-g875">https://github.com/advisories/GHSA-hphm-3x7f-g875</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-hphm-3x7f-g875</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2025-04-03T00:31:32.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[api-platform/core] API Platform Core can leak exceptions message that may contain sensitive information]]></title>
        <id>https://github.com/advisories/GHSA-rfw5-cqjj-7v9r</id>
        <link href="https://github.com/advisories/GHSA-rfw5-cqjj-7v9r"/>
        <updated>2025-04-04T02:13:36.000Z</updated>
        <content type="html"><![CDATA[<h3 id="summary">Summary</h3>
<p>Exception messages, that are not HTTP exceptions, are visible in the JSON error response.</p>
<h3 id="details">Details</h3>
<p>While we wanted to make our errors compatible with the <a href="https://datatracker.ietf.org/doc/html/rfc7807">JSON Problem</a> specification, we ended up handling more exceptions then we did previously (introduced at <a href="https://github.com/api-platform/core/pull/5823">https://github.com/api-platform/core/pull/5823</a>). Instead of leaving that to Symfony, we ended up serializing errors with our normalizers which lead to not hiding the exception details. Note that the trace is hidden in production but the message is not, and the message can contain sensitive information.</p>
<h3 id="poc">PoC</h3>
<p>At <a href="https://github.com/ili101/api-platform/tree/test3.2">https://github.com/ili101/api-platform/tree/test3.2</a> it triggers an authentication exception as LDAP is not reachable. You can find the message available as a JSON response when trying to reach an endpoint.</p>
<h3 id="impact">Impact</h3>
<p>Version 3.2 until 3.2.4 is impacted.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/api-platform/core/security/advisories/GHSA-rfw5-cqjj-7v9r">https://github.com/api-platform/core/security/advisories/GHSA-rfw5-cqjj-7v9r</a></li>
<li><a href="https://github.com/api-platform/core/commit/ba8a7e6538bccebf14c228e43a9339214c4d9201">https://github.com/api-platform/core/commit/ba8a7e6538bccebf14c228e43a9339214c4d9201</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-47639">https://nvd.nist.gov/vuln/detail/CVE-2023-47639</a></li>
<li><a href="https://github.com/api-platform/core/pull/5823">https://github.com/api-platform/core/pull/5823</a></li>
<li><a href="https://github.com/advisories/GHSA-rfw5-cqjj-7v9r">https://github.com/advisories/GHSA-rfw5-cqjj-7v9r</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-rfw5-cqjj-7v9r</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2025-04-03T13:02:57.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[drupal/formatter_suite] Drupal Formatter Suite Vulnerable to Cross-Site Scripting (XSS) via Link Element Attributes]]></title>
        <id>https://github.com/advisories/GHSA-5r66-vgc7-2mm3</id>
        <link href="https://github.com/advisories/GHSA-5r66-vgc7-2mm3"/>
        <updated>2025-04-02T17:16:40.000Z</updated>
        <content type="html"><![CDATA[<p>Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting') vulnerability in Drupal Formatter Suite allows Cross-Site Scripting (XSS).This issue affects Formatter Suite: from 0.0.0 before 2.1.0.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2025-31697">https://nvd.nist.gov/vuln/detail/CVE-2025-31697</a></li>
<li><a href="https://www.drupal.org/sa-contrib-2025-026">https://www.drupal.org/sa-contrib-2025-026</a></li>
<li><a href="https://git.drupalcode.org/project/formatter_suite/-/commit/58adb4168466b056e33fc4f356f43dd000e3765b">https://git.drupalcode.org/project/formatter_suite/-/commit/58adb4168466b056e33fc4f356f43dd000e3765b</a></li>
<li><a href="https://github.com/advisories/GHSA-5r66-vgc7-2mm3">https://github.com/advisories/GHSA-5r66-vgc7-2mm3</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-5r66-vgc7-2mm3</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2025-04-01T00:30:35.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[drupal/rapidoc_elements_field_formatter] Drupal RapiDoc OAS Field Formatter Cross-Site Scripting (XSS) vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-86h4-w859-3hhv</id>
        <link href="https://github.com/advisories/GHSA-86h4-w859-3hhv"/>
        <updated>2025-04-02T17:16:25.000Z</updated>
        <content type="html"><![CDATA[<p>Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting') vulnerability in Drupal RapiDoc OAS Field Formatter allows Cross-Site Scripting (XSS). This issue affects RapiDoc OAS Field Formatter: from 0.0.0 before 1.0.1.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2025-31696">https://nvd.nist.gov/vuln/detail/CVE-2025-31696</a></li>
<li><a href="https://www.drupal.org/sa-contrib-2025-025">https://www.drupal.org/sa-contrib-2025-025</a></li>
<li><a href="https://github.com/advisories/GHSA-86h4-w859-3hhv">https://github.com/advisories/GHSA-86h4-w859-3hhv</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-86h4-w859-3hhv</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2025-04-01T00:30:35.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[drupal/link_field_display_mode_formatter] Drupal Link field display mode formatter Cross-Site Scripting (XSS) vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-p2wg-8h29-874v</id>
        <link href="https://github.com/advisories/GHSA-p2wg-8h29-874v"/>
        <updated>2025-04-02T17:16:14.000Z</updated>
        <content type="html"><![CDATA[<p>Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting') vulnerability in Drupal Link field display mode formatter allows Cross-Site Scripting (XSS). This issue affects Link field display mode formatter: from 0.0.0 before 1.6.0.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2025-31695">https://nvd.nist.gov/vuln/detail/CVE-2025-31695</a></li>
<li><a href="https://www.drupal.org/sa-contrib-2025-024">https://www.drupal.org/sa-contrib-2025-024</a></li>
<li><a href="https://github.com/advisories/GHSA-p2wg-8h29-874v">https://github.com/advisories/GHSA-p2wg-8h29-874v</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-p2wg-8h29-874v</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2025-04-01T00:30:35.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[drupal/tfa] Drupal Two-factor Authentication (TFA) Vulnerable to Forceful Browsing]]></title>
        <id>https://github.com/advisories/GHSA-hf6c-fgp3-jfch</id>
        <link href="https://github.com/advisories/GHSA-hf6c-fgp3-jfch"/>
        <updated>2025-04-02T17:16:14.000Z</updated>
        <content type="html"><![CDATA[<p>Incorrect Authorization vulnerability in Drupal Two-factor Authentication (TFA) allows Forceful Browsing. This issue affects Two-factor Authentication (TFA): from 0.0.0 before 1.10.0.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2025-31694">https://nvd.nist.gov/vuln/detail/CVE-2025-31694</a></li>
<li><a href="https://www.drupal.org/sa-contrib-2025-023">https://www.drupal.org/sa-contrib-2025-023</a></li>
<li><a href="https://github.com/advisories/GHSA-hf6c-fgp3-jfch">https://github.com/advisories/GHSA-hf6c-fgp3-jfch</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-hf6c-fgp3-jfch</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2025-04-01T00:30:35.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[drupal/ai] Drupal AI Vulnerable to OS Command Injection]]></title>
        <id>https://github.com/advisories/GHSA-vx9m-rfxq-gr74</id>
        <link href="https://github.com/advisories/GHSA-vx9m-rfxq-gr74"/>
        <updated>2025-04-02T17:14:59.000Z</updated>
        <content type="html"><![CDATA[<p>Improper Neutralization of Special Elements used in an OS Command ('OS Command Injection') vulnerability in Drupal AI (Artificial Intelligence) allows OS Command Injection. This issue affects AI (Artificial Intelligence): from 0.0.0 before 1.0.5.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2025-31693">https://nvd.nist.gov/vuln/detail/CVE-2025-31693</a></li>
<li><a href="https://www.drupal.org/sa-contrib-2025-022">https://www.drupal.org/sa-contrib-2025-022</a></li>
<li><a href="https://github.com/advisories/GHSA-vx9m-rfxq-gr74">https://github.com/advisories/GHSA-vx9m-rfxq-gr74</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-vx9m-rfxq-gr74</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2025-04-01T00:30:34.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[drupal/ai] Drupal AI Vulnerable to OS Command Injection via Optional Automator Types]]></title>
        <id>https://github.com/advisories/GHSA-pwjq-fx3v-8f9r</id>
        <link href="https://github.com/advisories/GHSA-pwjq-fx3v-8f9r"/>
        <updated>2025-04-02T17:14:09.000Z</updated>
        <content type="html"><![CDATA[<p>Improper Neutralization of Special Elements used in an OS Command ('OS Command Injection') vulnerability in Drupal AI (Artificial Intelligence) allows OS Command Injection. This issue affects AI (Artificial Intelligence): from 0.0.0 before 1.0.5.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2025-31692">https://nvd.nist.gov/vuln/detail/CVE-2025-31692</a></li>
<li><a href="https://www.drupal.org/sa-contrib-2025-021">https://www.drupal.org/sa-contrib-2025-021</a></li>
<li><a href="https://github.com/advisories/GHSA-pwjq-fx3v-8f9r">https://github.com/advisories/GHSA-pwjq-fx3v-8f9r</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-pwjq-fx3v-8f9r</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2025-04-01T00:30:35.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[drupal/oauth2_server] Drupal OAuth2 Server Missing Authorization vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-4f8q-mwgc-3mwc</id>
        <link href="https://github.com/advisories/GHSA-4f8q-mwgc-3mwc"/>
        <updated>2025-04-02T17:13:35.000Z</updated>
        <content type="html"><![CDATA[<p>Missing Authorization vulnerability in Drupal OAuth2 Server allows Forceful Browsing. This issue affects OAuth2 Server: from 0.0.0 before 2.1.0.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2025-31691">https://nvd.nist.gov/vuln/detail/CVE-2025-31691</a></li>
<li><a href="https://www.drupal.org/sa-contrib-2025-020">https://www.drupal.org/sa-contrib-2025-020</a></li>
<li><a href="https://github.com/advisories/GHSA-4f8q-mwgc-3mwc">https://github.com/advisories/GHSA-4f8q-mwgc-3mwc</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-4f8q-mwgc-3mwc</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2025-04-01T00:30:35.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[drupal/cache_utility] Drupal Cache Utility Cross-Site Request Forgery (CSRF) vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-ccc9-jgj7-hxc7</id>
        <link href="https://github.com/advisories/GHSA-ccc9-jgj7-hxc7"/>
        <updated>2025-04-02T17:13:14.000Z</updated>
        <content type="html"><![CDATA[<p>Cross-Site Request Forgery (CSRF) vulnerability in Drupal Cache Utility allows Cross Site Request Forgery. This issue affects Cache Utility: from 0.0.0 before 1.2.1.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2025-31690">https://nvd.nist.gov/vuln/detail/CVE-2025-31690</a></li>
<li><a href="https://www.drupal.org/sa-contrib-2025-019">https://www.drupal.org/sa-contrib-2025-019</a></li>
<li><a href="https://git.drupalcode.org/project/cache_utility/-/commit/1abf7a438d56ccb11ee3cdac9bdd1707f369ab9e">https://git.drupalcode.org/project/cache_utility/-/commit/1abf7a438d56ccb11ee3cdac9bdd1707f369ab9e</a></li>
<li><a href="https://github.com/advisories/GHSA-ccc9-jgj7-hxc7">https://github.com/advisories/GHSA-ccc9-jgj7-hxc7</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-ccc9-jgj7-hxc7</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2025-04-01T00:30:34.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[drupal/gdpr] Drupal General Data Protection Regulation Cross-Site Request Forgery (CSRF) vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-jv6r-mj9p-9xff</id>
        <link href="https://github.com/advisories/GHSA-jv6r-mj9p-9xff"/>
        <updated>2025-04-02T17:12:54.000Z</updated>
        <content type="html"><![CDATA[<p>Cross-Site Request Forgery (CSRF) vulnerability in Drupal General Data Protection Regulation allows Cross Site Request Forgery. This issue affects General Data Protection Regulation: from 0.0.0 before 3.0.1, from 3.1.0 before 3.1.2.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2025-31689">https://nvd.nist.gov/vuln/detail/CVE-2025-31689</a></li>
<li><a href="https://www.drupal.org/sa-contrib-2025-018">https://www.drupal.org/sa-contrib-2025-018</a></li>
<li><a href="https://git.drupalcode.org/project/gdpr/-/commit/d53f1cf1394c41c8885faaaaf576965161676e1f">https://git.drupalcode.org/project/gdpr/-/commit/d53f1cf1394c41c8885faaaaf576965161676e1f</a></li>
<li><a href="https://github.com/advisories/GHSA-jv6r-mj9p-9xff">https://github.com/advisories/GHSA-jv6r-mj9p-9xff</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-jv6r-mj9p-9xff</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2025-04-01T00:30:34.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[drupal/gdpr] Drupal General Data Protection Regulation Cross-Site Request Forgery (CSRF) vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-jv6r-mj9p-9xff</id>
        <link href="https://github.com/advisories/GHSA-jv6r-mj9p-9xff"/>
        <updated>2025-04-02T17:12:54.000Z</updated>
        <content type="html"><![CDATA[<p>Cross-Site Request Forgery (CSRF) vulnerability in Drupal General Data Protection Regulation allows Cross Site Request Forgery. This issue affects General Data Protection Regulation: from 0.0.0 before 3.0.1, from 3.1.0 before 3.1.2.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2025-31689">https://nvd.nist.gov/vuln/detail/CVE-2025-31689</a></li>
<li><a href="https://www.drupal.org/sa-contrib-2025-018">https://www.drupal.org/sa-contrib-2025-018</a></li>
<li><a href="https://git.drupalcode.org/project/gdpr/-/commit/d53f1cf1394c41c8885faaaaf576965161676e1f">https://git.drupalcode.org/project/gdpr/-/commit/d53f1cf1394c41c8885faaaaf576965161676e1f</a></li>
<li><a href="https://github.com/advisories/GHSA-jv6r-mj9p-9xff">https://github.com/advisories/GHSA-jv6r-mj9p-9xff</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-jv6r-mj9p-9xff</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2025-04-01T00:30:34.000Z</published>
    </entry>
</feed>