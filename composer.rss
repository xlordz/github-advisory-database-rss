<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://xlordz.github.io/github-advisory-database-rss/composer.rss</id>
    <title>Security Advisory for PHP packages hosted at packagist.org</title>
    <updated>2025-06-07T14:30:43.627Z</updated>
    <generator>github-advisory-database-rss</generator>
    <link rel="alternate" href="https://github.com/advisories?query=type%3Areviewed+ecosystem%3Acomposer"/>
    <subtitle>Security Advisory for PHP packages hosted at packagist.org on GitHub</subtitle>
    <rights>github-advisory-database-rss</rights>
    <category term="CRITICAL"/>
    <category term="HIGH"/>
    <category term="MODERATE"/>
    <category term="LOW"/>
    <entry>
        <title type="html"><![CDATA[[roundcube/roundcubemail] Roundcube Webmail Vulnerable to Authenticated RCE via PHP Object Deserialization]]></title>
        <id>https://github.com/advisories/GHSA-8j8w-wwqc-x596</id>
        <link href="https://github.com/advisories/GHSA-8j8w-wwqc-x596"/>
        <updated>2025-06-06T22:18:42.000Z</updated>
        <content type="html"><![CDATA[<p>Roundcube Webmail before 1.5.10 and 1.6.x before 1.6.11 allows remote code execution by authenticated users because the _from parameter in a URL is not validated in program/actions/settings/upload.php, leading to PHP Object Deserialization.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2025-49113">https://nvd.nist.gov/vuln/detail/CVE-2025-49113</a></li>
<li><a href="https://github.com/roundcube/roundcubemail/pull/9865">https://github.com/roundcube/roundcubemail/pull/9865</a></li>
<li><a href="https://github.com/roundcube/roundcubemail/commit/0376f69e958a8fef7f6f09e352c541b4e7729c4d">https://github.com/roundcube/roundcubemail/commit/0376f69e958a8fef7f6f09e352c541b4e7729c4d</a></li>
<li><a href="https://github.com/roundcube/roundcubemail/commit/7408f31379666124a39f9cb1018f62bc5e2dc695">https://github.com/roundcube/roundcubemail/commit/7408f31379666124a39f9cb1018f62bc5e2dc695</a></li>
<li><a href="https://github.com/roundcube/roundcubemail/commit/c50a07d88ca38f018a0f4a0b008e9a1deb32637e">https://github.com/roundcube/roundcubemail/commit/c50a07d88ca38f018a0f4a0b008e9a1deb32637e</a></li>
<li><a href="https://github.com/roundcube/roundcubemail/releases/tag/1.5.10">https://github.com/roundcube/roundcubemail/releases/tag/1.5.10</a></li>
<li><a href="https://github.com/roundcube/roundcubemail/releases/tag/1.6.11">https://github.com/roundcube/roundcubemail/releases/tag/1.6.11</a></li>
<li><a href="https://roundcube.net/news/2025/06/01/security-updates-1.6.11-and-1.5.10">https://roundcube.net/news/2025/06/01/security-updates-1.6.11-and-1.5.10</a></li>
<li><a href="https://fearsoff.org/research/roundcube">https://fearsoff.org/research/roundcube</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2025/06/02/3">http://www.openwall.com/lists/oss-security/2025/06/02/3</a></li>
<li><a href="https://github.com/advisories/GHSA-8j8w-wwqc-x596">https://github.com/advisories/GHSA-8j8w-wwqc-x596</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-8j8w-wwqc-x596</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2025-06-02T06:30:32.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[roundcube/roundcubemail] Roundcube Webmail Vulnerable to Authenticated RCE via PHP Object Deserialization]]></title>
        <id>https://github.com/advisories/GHSA-8j8w-wwqc-x596</id>
        <link href="https://github.com/advisories/GHSA-8j8w-wwqc-x596"/>
        <updated>2025-06-06T22:18:42.000Z</updated>
        <content type="html"><![CDATA[<p>Roundcube Webmail before 1.5.10 and 1.6.x before 1.6.11 allows remote code execution by authenticated users because the _from parameter in a URL is not validated in program/actions/settings/upload.php, leading to PHP Object Deserialization.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2025-49113">https://nvd.nist.gov/vuln/detail/CVE-2025-49113</a></li>
<li><a href="https://github.com/roundcube/roundcubemail/pull/9865">https://github.com/roundcube/roundcubemail/pull/9865</a></li>
<li><a href="https://github.com/roundcube/roundcubemail/commit/0376f69e958a8fef7f6f09e352c541b4e7729c4d">https://github.com/roundcube/roundcubemail/commit/0376f69e958a8fef7f6f09e352c541b4e7729c4d</a></li>
<li><a href="https://github.com/roundcube/roundcubemail/commit/7408f31379666124a39f9cb1018f62bc5e2dc695">https://github.com/roundcube/roundcubemail/commit/7408f31379666124a39f9cb1018f62bc5e2dc695</a></li>
<li><a href="https://github.com/roundcube/roundcubemail/commit/c50a07d88ca38f018a0f4a0b008e9a1deb32637e">https://github.com/roundcube/roundcubemail/commit/c50a07d88ca38f018a0f4a0b008e9a1deb32637e</a></li>
<li><a href="https://github.com/roundcube/roundcubemail/releases/tag/1.5.10">https://github.com/roundcube/roundcubemail/releases/tag/1.5.10</a></li>
<li><a href="https://github.com/roundcube/roundcubemail/releases/tag/1.6.11">https://github.com/roundcube/roundcubemail/releases/tag/1.6.11</a></li>
<li><a href="https://roundcube.net/news/2025/06/01/security-updates-1.6.11-and-1.5.10">https://roundcube.net/news/2025/06/01/security-updates-1.6.11-and-1.5.10</a></li>
<li><a href="https://fearsoff.org/research/roundcube">https://fearsoff.org/research/roundcube</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2025/06/02/3">http://www.openwall.com/lists/oss-security/2025/06/02/3</a></li>
<li><a href="https://github.com/advisories/GHSA-8j8w-wwqc-x596">https://github.com/advisories/GHSA-8j8w-wwqc-x596</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-8j8w-wwqc-x596</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2025-06-02T06:30:32.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[auth0/login] laravel-auth0 SDK Deserialization of Untrusted Data vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-c42h-56wx-h85q</id>
        <link href="https://github.com/advisories/GHSA-c42h-56wx-h85q"/>
        <updated>2025-06-06T15:20:48.000Z</updated>
        <content type="html"><![CDATA[<p><strong>Overview</strong>
The laravel-auth0 SDK contains a critical vulnerability due to insecure deserialization of cookie data. If exploited, since SDKs process cookie content without prior authentication, a threat actor could send a specially crafted cookie containing malicious serialized data.</p>
<p><strong>Am I Affected?</strong>
You are affected by this vulnerability if you meet the following preconditions:</p>
<ol>
<li>Applications using laravel-auth0 SDK, versions between 7.0.0-BETA1 to 7.2.1.</li>
<li>Laravel-auth0 SDK uses the Auth0-PHP SDK with version 8.0.0-BETA3 to 8.3.0.</li>
</ol>
<p><strong>Fix</strong>
Upgrade Auth0/laravel-auth0 to the latest version (v7.17.0).</p>
<p><strong>Acknowledgement</strong>
Okta would like to thank Andreas Forsblom for discovering this vulnerability.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/auth0/auth0-PHP/security/advisories/GHSA-v9m8-9xxp-q492">https://github.com/auth0/auth0-PHP/security/advisories/GHSA-v9m8-9xxp-q492</a></li>
<li><a href="https://github.com/auth0/laravel-auth0/security/advisories/GHSA-c42h-56wx-h85q">https://github.com/auth0/laravel-auth0/security/advisories/GHSA-c42h-56wx-h85q</a></li>
<li><a href="https://github.com/auth0/symfony/security/advisories/GHSA-98j6-67v3-mw34">https://github.com/auth0/symfony/security/advisories/GHSA-98j6-67v3-mw34</a></li>
<li><a href="https://github.com/auth0/wordpress/security/advisories/GHSA-862m-5253-832r">https://github.com/auth0/wordpress/security/advisories/GHSA-862m-5253-832r</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2025-48951">https://nvd.nist.gov/vuln/detail/CVE-2025-48951</a></li>
<li><a href="https://github.com/advisories/GHSA-c42h-56wx-h85q">https://github.com/advisories/GHSA-c42h-56wx-h85q</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-c42h-56wx-h85q</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2025-06-06T15:20:46.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[auth0/symfony] Auth0 Symfony SDK Deserialization of Untrusted Data vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-98j6-67v3-mw34</id>
        <link href="https://github.com/advisories/GHSA-98j6-67v3-mw34"/>
        <updated>2025-06-06T00:07:10.000Z</updated>
        <content type="html"><![CDATA[<p><strong>Overview</strong>
The Auth0 Symfony SDK contains a critical vulnerability due to insecure deserialization of cookie data. If exploited, since SDKs process cookie content without prior authentication, a threat actor could send a specially crafted cookie containing malicious serialized data.</p>
<p><strong>Am I Affected?</strong>
You are affected by this vulnerability if you meet the following preconditions:</p>
<ol>
<li>Applications using the Auth0 Symfony SDK, versions between 5.0.0 BETA-0 to 5.0.0. </li>
<li>Auth0 Symfony SDK uses the Auth0-PHP SDK with version 8.0.0-BETA3 to 8.3.0.</li>
</ol>
<p><strong>Fix</strong>
Upgrade Auth0/symfony to the latest version (v5.4.0).</p>
<p><strong>Acknowledgement</strong>
Okta would like to thank Andreas Forsblom for discovering this vulnerability.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/auth0/auth0-PHP/security/advisories/GHSA-v9m8-9xxp-q492">https://github.com/auth0/auth0-PHP/security/advisories/GHSA-v9m8-9xxp-q492</a></li>
<li><a href="https://github.com/auth0/laravel-auth0/security/advisories/GHSA-c42h-56wx-h85q">https://github.com/auth0/laravel-auth0/security/advisories/GHSA-c42h-56wx-h85q</a></li>
<li><a href="https://github.com/auth0/symfony/security/advisories/GHSA-98j6-67v3-mw34">https://github.com/auth0/symfony/security/advisories/GHSA-98j6-67v3-mw34</a></li>
<li><a href="https://github.com/auth0/wordpress/security/advisories/GHSA-862m-5253-832r">https://github.com/auth0/wordpress/security/advisories/GHSA-862m-5253-832r</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2025-48951">https://nvd.nist.gov/vuln/detail/CVE-2025-48951</a></li>
<li><a href="https://github.com/advisories/GHSA-98j6-67v3-mw34">https://github.com/advisories/GHSA-98j6-67v3-mw34</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-98j6-67v3-mw34</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2025-06-06T00:07:08.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[yiisoft/yii2-redis] Yii 2 Redis may expose AUTH parameters in logs in case of connection failure]]></title>
        <id>https://github.com/advisories/GHSA-g3p6-82vc-43jh</id>
        <link href="https://github.com/advisories/GHSA-g3p6-82vc-43jh"/>
        <updated>2025-06-06T15:59:57.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>On failing connection extension writes commands sequence to logs. AUTH parameters are written in plain text exposing username and password. That might be an issue if attacker has access to logs.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/yiisoft/yii2-redis/security/advisories/GHSA-g3p6-82vc-43jh">https://github.com/yiisoft/yii2-redis/security/advisories/GHSA-g3p6-82vc-43jh</a></li>
<li><a href="https://github.com/yiisoft/yii2-redis/commit/962252d2c57c187181e67bb66da3f27b4698358d">https://github.com/yiisoft/yii2-redis/commit/962252d2c57c187181e67bb66da3f27b4698358d</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2025-48493">https://nvd.nist.gov/vuln/detail/CVE-2025-48493</a></li>
<li><a href="https://github.com/advisories/GHSA-g3p6-82vc-43jh">https://github.com/advisories/GHSA-g3p6-82vc-43jh</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-g3p6-82vc-43jh</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2025-06-05T16:53:23.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[auth0/wordpress] Auth0 Wordpress Plugin vulnerable to Deserialization of Untrusted Data]]></title>
        <id>https://github.com/advisories/GHSA-862m-5253-832r</id>
        <link href="https://github.com/advisories/GHSA-862m-5253-832r"/>
        <updated>2025-06-05T01:19:25.000Z</updated>
        <content type="html"><![CDATA[<p><strong>Overview</strong>
The Auth0 Wordpress plugin contains a critical vulnerability due to insecure deserialization of cookie data. If exploited, since SDKs process cookie content without prior authentication, a threat actor could send a specially crafted cookie containing malicious serialized data.</p>
<p><strong>Am I Affected?</strong>
You are affected by this vulnerability if you meet the following preconditions:</p>
<ol>
<li>Applications using the Auth0 WordPress plugin, versions between 5.0.0 BETA-0 to 5.0.1. </li>
<li>Auth0 WordPress plugin uses the Auth0-PHP SDK with version 8.0.0-BETA3 to 8.3.0.</li>
</ol>
<p><strong>Fix</strong>
Upgrade the Auth0 WordPress plugin to the latest version (v5.3.0).</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/auth0/auth0-PHP/security/advisories/GHSA-v9m8-9xxp-q492">https://github.com/auth0/auth0-PHP/security/advisories/GHSA-v9m8-9xxp-q492</a></li>
<li><a href="https://github.com/auth0/laravel-auth0/security/advisories/GHSA-c42h-56wx-h85q">https://github.com/auth0/laravel-auth0/security/advisories/GHSA-c42h-56wx-h85q</a></li>
<li><a href="https://github.com/auth0/symfony/security/advisories/GHSA-98j6-67v3-mw34">https://github.com/auth0/symfony/security/advisories/GHSA-98j6-67v3-mw34</a></li>
<li><a href="https://github.com/auth0/wordpress/security/advisories/GHSA-862m-5253-832r">https://github.com/auth0/wordpress/security/advisories/GHSA-862m-5253-832r</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2025-48951">https://nvd.nist.gov/vuln/detail/CVE-2025-48951</a></li>
<li><a href="https://github.com/advisories/GHSA-862m-5253-832r">https://github.com/advisories/GHSA-862m-5253-832r</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-862m-5253-832r</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2025-06-05T01:19:24.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[mantisbt/mantisbt] MantisBT XSS via my_view_page.php and view_user_page.php]]></title>
        <id>https://github.com/advisories/GHSA-8r2m-qhff-jm2c</id>
        <link href="https://github.com/advisories/GHSA-8r2m-qhff-jm2c"/>
        <updated>2025-06-04T23:04:15.000Z</updated>
        <content type="html"><![CDATA[<p>A cross-site scripting (XSS) vulnerability in the MantisBT (2.3.x before 2.3.2) Timeline include page, used in My View (my_view_page.php) and User Information (view_user_page.php) pages, allows remote attackers to inject arbitrary code (if CSP settings permit it) through crafted PATH_INFO in a URL, due to use of unsanitized $_SERVER['PHP_SELF'] to generate URLs.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2017-7897">https://nvd.nist.gov/vuln/detail/CVE-2017-7897</a></li>
<li><a href="https://github.com/mantisbt/mantisbt/pull/1094">https://github.com/mantisbt/mantisbt/pull/1094</a></li>
<li><a href="https://github.com/mantisbt/mantisbt/commit/a1c719313d61b07bbe8700005807b8195fdc32f1">https://github.com/mantisbt/mantisbt/commit/a1c719313d61b07bbe8700005807b8195fdc32f1</a></li>
<li><a href="http://www.mantisbt.org/bugs/view.php?id=22742">http://www.mantisbt.org/bugs/view.php?id=22742</a></li>
<li><a href="https://github.com/advisories/GHSA-8r2m-qhff-jm2c">https://github.com/advisories/GHSA-8r2m-qhff-jm2c</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-8r2m-qhff-jm2c</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-05-17T02:31:57.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[auth0/auth0-php] Auth0-PHP SDK Deserialization of Untrusted Data vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-v9m8-9xxp-q492</id>
        <link href="https://github.com/advisories/GHSA-v9m8-9xxp-q492"/>
        <updated>2025-06-04T22:56:43.000Z</updated>
        <content type="html"><![CDATA[<p><strong>Overview</strong>
The Auth0 PHP SDK contains a vulnerability due to insecure deserialization of cookie data. If exploited, since SDKs process cookie content without prior authentication, a threat actor could send a specially crafted cookie containing malicious serialized data.</p>
<p><strong>Am I Affected?</strong>
You are affected by this vulnerability if you meet the following preconditions:</p>
<ol>
<li>Applications using the Auth0-PHP SDK, versions between 8.0.0-BETA3 to 8.3.0. </li>
<li>Applications using the following SDKs that rely on the Auth0-PHP SDK versions between 8.0.0-BETA3 to 8.3.0:
 a. Auth0/symfony,
 b. Auth0/laravel-auth0,
 c. Auth0/wordpress.</li>
</ol>
<p><strong>Fix</strong>
Upgrade Auth0/Auth0-PHP to 8.3.1.</p>
<p><strong>Acknowledgement</strong>
Okta would like to thank Andreas Forsblom for discovering this vulnerability.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/auth0/auth0-PHP/security/advisories/GHSA-v9m8-9xxp-q492">https://github.com/auth0/auth0-PHP/security/advisories/GHSA-v9m8-9xxp-q492</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2025-48951">https://nvd.nist.gov/vuln/detail/CVE-2025-48951</a></li>
<li><a href="https://github.com/auth0/auth0-PHP/commit/04b1f5daa8bdfebc5e740ec5ca0fb2df1648a715">https://github.com/auth0/auth0-PHP/commit/04b1f5daa8bdfebc5e740ec5ca0fb2df1648a715</a></li>
<li><a href="https://github.com/auth0/laravel-auth0/security/advisories/GHSA-c42h-56wx-h85q">https://github.com/auth0/laravel-auth0/security/advisories/GHSA-c42h-56wx-h85q</a></li>
<li><a href="https://github.com/auth0/symfony/security/advisories/GHSA-98j6-67v3-mw34">https://github.com/auth0/symfony/security/advisories/GHSA-98j6-67v3-mw34</a></li>
<li><a href="https://github.com/auth0/wordpress/security/advisories/GHSA-862m-5253-832r">https://github.com/auth0/wordpress/security/advisories/GHSA-862m-5253-832r</a></li>
<li><a href="https://github.com/advisories/GHSA-v9m8-9xxp-q492">https://github.com/advisories/GHSA-v9m8-9xxp-q492</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-v9m8-9xxp-q492</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2025-06-04T20:31:39.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[bcit-ci/codeigniter] CodeIgniter arbitrary code execution]]></title>
        <id>https://github.com/advisories/GHSA-2pcj-76hj-xqhm</id>
        <link href="https://github.com/advisories/GHSA-2pcj-76hj-xqhm"/>
        <updated>2025-06-02T16:12:45.000Z</updated>
        <content type="html"><![CDATA[<p>system/libraries/Email.php in CodeIgniter before 3.1.3 allows remote attackers to execute arbitrary code by leveraging control over the email-&gt;from field to insert sendmail command-line arguments.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2016-10131">https://nvd.nist.gov/vuln/detail/CVE-2016-10131</a></li>
<li><a href="http://www.securityfocus.com/bid/96851">http://www.securityfocus.com/bid/96851</a></li>
<li><a href="https://www.codeigniter.com/userguide3/changelog.html#bug-fixes-for-3-1-3">https://www.codeigniter.com/userguide3/changelog.html#bug-fixes-for-3-1-3</a></li>
<li><a href="https://github.com/advisories/GHSA-2pcj-76hj-xqhm">https://github.com/advisories/GHSA-2pcj-76hj-xqhm</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-2pcj-76hj-xqhm</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2022-05-17T02:55:21.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[mantisbt/mantisbt] MantisBT allows XSS on the Edit Filter page via crafted filter name]]></title>
        <id>https://github.com/advisories/GHSA-74gh-5j33-vg4w</id>
        <link href="https://github.com/advisories/GHSA-74gh-5j33-vg4w"/>
        <updated>2025-05-30T14:39:53.000Z</updated>
        <content type="html"><![CDATA[<p>An issue was discovered in manage_filter_edit_page.php in MantisBT 2.x through 2.15.0. A cross-site scripting (XSS) vulnerability in the Edit Filter page allows execution of arbitrary code (if CSP settings permit it) when displaying a filter with a crafted name (e.g., 'foobar" onclick="alert(1)').</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2018-14504">https://nvd.nist.gov/vuln/detail/CVE-2018-14504</a></li>
<li><a href="https://mantisbt.org/blog/archives/mantisbt/602">https://mantisbt.org/blog/archives/mantisbt/602</a></li>
<li><a href="https://mantisbt.org/bugs/view.php?id=24608">https://mantisbt.org/bugs/view.php?id=24608</a></li>
<li><a href="http://github.com/mantisbt/mantisbt/commit/8b5fa243dbf04344a55fe880135ec149fc1f439f">http://github.com/mantisbt/mantisbt/commit/8b5fa243dbf04344a55fe880135ec149fc1f439f</a></li>
<li><a href="https://github.com/advisories/GHSA-74gh-5j33-vg4w">https://github.com/advisories/GHSA-74gh-5j33-vg4w</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-74gh-5j33-vg4w</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-05-14T02:57:54.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[mantisbt/mantisbt] MantisBT allows XSS via View Filters page ]]></title>
        <id>https://github.com/advisories/GHSA-mjp7-97w4-jwhc</id>
        <link href="https://github.com/advisories/GHSA-mjp7-97w4-jwhc"/>
        <updated>2025-05-30T14:38:41.000Z</updated>
        <content type="html"><![CDATA[<p>A cross-site scripting (XSS) vulnerability in the View Filters page (view_filters_page.php) in MantisBT 2.1.0 through 2.15.0 allows remote attackers to inject arbitrary code (if CSP settings permit it) through a crafted PATH_INFO.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2018-13055">https://nvd.nist.gov/vuln/detail/CVE-2018-13055</a></li>
<li><a href="https://mantisbt.org/blog/archives/mantisbt/602">https://mantisbt.org/blog/archives/mantisbt/602</a></li>
<li><a href="https://mantisbt.org/bugs/view.php?id=24580">https://mantisbt.org/bugs/view.php?id=24580</a></li>
<li><a href="http://github.com/mantisbt/mantisbt/commit/4efac90ed89a5c009108b641e2e95683791a165a">http://github.com/mantisbt/mantisbt/commit/4efac90ed89a5c009108b641e2e95683791a165a</a></li>
<li><a href="https://github.com/advisories/GHSA-mjp7-97w4-jwhc">https://github.com/advisories/GHSA-mjp7-97w4-jwhc</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-mjp7-97w4-jwhc</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-05-14T02:57:06.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[mantisbt/mantisbt] MantisBT allows XSS via the Manage Filter page ]]></title>
        <id>https://github.com/advisories/GHSA-ggjm-7m5f-7xjv</id>
        <link href="https://github.com/advisories/GHSA-ggjm-7m5f-7xjv"/>
        <updated>2025-05-30T14:37:23.000Z</updated>
        <content type="html"><![CDATA[<p>A cross-site scripting (XSS) vulnerability in the Manage Filters page (manage_filter_page.php) in MantisBT 2.1.0 through 2.17.1 allows remote attackers (if access rights permit it) to inject arbitrary code (if CSP settings permit it) through a crafted project name.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2018-17782">https://nvd.nist.gov/vuln/detail/CVE-2018-17782</a></li>
<li><a href="https://mantisbt.org/blog/archives/mantisbt/613">https://mantisbt.org/blog/archives/mantisbt/613</a></li>
<li><a href="https://mantisbt.org/bugs/view.php?id=24813">https://mantisbt.org/bugs/view.php?id=24813</a></li>
<li><a href="https://github.com/mantisbt/mantisbt/commit/72ab020a42a35fd341e983a25849f8277bb34044">https://github.com/mantisbt/mantisbt/commit/72ab020a42a35fd341e983a25849f8277bb34044</a></li>
<li><a href="https://github.com/advisories/GHSA-ggjm-7m5f-7xjv">https://github.com/advisories/GHSA-ggjm-7m5f-7xjv</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-ggjm-7m5f-7xjv</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-05-14T01:52:00.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[mantisbt/mantisbt] MantisBT allows XSS via Edit Filter page ]]></title>
        <id>https://github.com/advisories/GHSA-gcqw-45xq-xc63</id>
        <link href="https://github.com/advisories/GHSA-gcqw-45xq-xc63"/>
        <updated>2025-05-30T14:36:35.000Z</updated>
        <content type="html"><![CDATA[<p>A cross-site scripting (XSS) vulnerability in the Edit Filter page (manage_filter_edit page.php) in MantisBT 2.1.0 through 2.17.1 allows remote attackers (if access rights permit it) to inject arbitrary code (if CSP settings permit it) through a crafted project name.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2018-17783">https://nvd.nist.gov/vuln/detail/CVE-2018-17783</a></li>
<li><a href="https://mantisbt.org/blog/archives/mantisbt/613">https://mantisbt.org/blog/archives/mantisbt/613</a></li>
<li><a href="https://mantisbt.org/bugs/view.php?id=24814">https://mantisbt.org/bugs/view.php?id=24814</a></li>
<li><a href="https://github.com/mantisbt/mantisbt/commit/b9453cd7643b7c5b1b8c716b1dbd4d7d9571d1ec">https://github.com/mantisbt/mantisbt/commit/b9453cd7643b7c5b1b8c716b1dbd4d7d9571d1ec</a></li>
<li><a href="https://github.com/advisories/GHSA-gcqw-45xq-xc63">https://github.com/advisories/GHSA-gcqw-45xq-xc63</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-gcqw-45xq-xc63</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-05-14T01:52:00.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[mantisbt/mantisbt] MantisBT XSS allows unsanitized input via admin/install.php]]></title>
        <id>https://github.com/advisories/GHSA-98xr-mmq5-vc5h</id>
        <link href="https://github.com/advisories/GHSA-98xr-mmq5-vc5h"/>
        <updated>2025-05-30T14:34:47.000Z</updated>
        <content type="html"><![CDATA[<p>An XSS issue was discovered in admin/install.php in MantisBT before 1.3.12 and 2.x before 2.5.2. Some variables under user control in the MantisBT installation script are not properly sanitized before being output, allowing remote attackers to inject arbitrary JavaScript code, as demonstrated by the $f_database, $f_db_username, and $f_admin_username variables. This is mitigated by the fact that the admin/ folder should be deleted after installation, and also prevented by CSP.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2017-12061">https://nvd.nist.gov/vuln/detail/CVE-2017-12061</a></li>
<li><a href="https://github.com/mantisbt/mantisbt/commit/17f9b94f031ba93ae2a727bca0e68458ecd08fb0">https://github.com/mantisbt/mantisbt/commit/17f9b94f031ba93ae2a727bca0e68458ecd08fb0</a></li>
<li><a href="https://github.com/mantisbt/mantisbt/commit/c73ae3d3d4dd4681489a9e697e8ade785e27cba5">https://github.com/mantisbt/mantisbt/commit/c73ae3d3d4dd4681489a9e697e8ade785e27cba5</a></li>
<li><a href="https://mantisbt.org/bugs/view.php?id=23146">https://mantisbt.org/bugs/view.php?id=23146</a></li>
<li><a href="http://openwall.com/lists/oss-security/2017/08/01/1">http://openwall.com/lists/oss-security/2017/08/01/1</a></li>
<li><a href="http://openwall.com/lists/oss-security/2017/08/01/2">http://openwall.com/lists/oss-security/2017/08/01/2</a></li>
<li><a href="https://web.archive.org/web/20170811053146/http://www.securitytracker.com/id/1039030">https://web.archive.org/web/20170811053146/http://www.securitytracker.com/id/1039030</a></li>
<li><a href="https://github.com/advisories/GHSA-98xr-mmq5-vc5h">https://github.com/advisories/GHSA-98xr-mmq5-vc5h</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-98xr-mmq5-vc5h</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-05-13T01:05:25.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[mantisbt/mantisbt] MantisBT XSS allows unsanitized input via admin/install.php]]></title>
        <id>https://github.com/advisories/GHSA-98xr-mmq5-vc5h</id>
        <link href="https://github.com/advisories/GHSA-98xr-mmq5-vc5h"/>
        <updated>2025-05-30T14:34:47.000Z</updated>
        <content type="html"><![CDATA[<p>An XSS issue was discovered in admin/install.php in MantisBT before 1.3.12 and 2.x before 2.5.2. Some variables under user control in the MantisBT installation script are not properly sanitized before being output, allowing remote attackers to inject arbitrary JavaScript code, as demonstrated by the $f_database, $f_db_username, and $f_admin_username variables. This is mitigated by the fact that the admin/ folder should be deleted after installation, and also prevented by CSP.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2017-12061">https://nvd.nist.gov/vuln/detail/CVE-2017-12061</a></li>
<li><a href="https://github.com/mantisbt/mantisbt/commit/17f9b94f031ba93ae2a727bca0e68458ecd08fb0">https://github.com/mantisbt/mantisbt/commit/17f9b94f031ba93ae2a727bca0e68458ecd08fb0</a></li>
<li><a href="https://github.com/mantisbt/mantisbt/commit/c73ae3d3d4dd4681489a9e697e8ade785e27cba5">https://github.com/mantisbt/mantisbt/commit/c73ae3d3d4dd4681489a9e697e8ade785e27cba5</a></li>
<li><a href="https://mantisbt.org/bugs/view.php?id=23146">https://mantisbt.org/bugs/view.php?id=23146</a></li>
<li><a href="http://openwall.com/lists/oss-security/2017/08/01/1">http://openwall.com/lists/oss-security/2017/08/01/1</a></li>
<li><a href="http://openwall.com/lists/oss-security/2017/08/01/2">http://openwall.com/lists/oss-security/2017/08/01/2</a></li>
<li><a href="https://web.archive.org/web/20170811053146/http://www.securitytracker.com/id/1039030">https://web.archive.org/web/20170811053146/http://www.securitytracker.com/id/1039030</a></li>
<li><a href="https://github.com/advisories/GHSA-98xr-mmq5-vc5h">https://github.com/advisories/GHSA-98xr-mmq5-vc5h</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-98xr-mmq5-vc5h</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-05-13T01:05:25.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[mantisbt/mantisbt] MantisBT CSV Injection unprivileged user access in csv_export.php]]></title>
        <id>https://github.com/advisories/GHSA-rg8f-5p7x-m6wv</id>
        <link href="https://github.com/advisories/GHSA-rg8f-5p7x-m6wv"/>
        <updated>2025-05-30T14:07:28.000Z</updated>
        <content type="html"><![CDATA[<p>Lack of Neutralization of Formula Elements in the CSV API of MantisBT before 2.25.3 allows an unprivileged attacker to execute code or gain access to information when a user opens the csv_export.php generated CSV file in Excel.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2021-43257">https://nvd.nist.gov/vuln/detail/CVE-2021-43257</a></li>
<li><a href="https://github.com/mantisbt/mantisbt/commit/7f4534c723e3162b8784aebda4836324041dbc3e">https://github.com/mantisbt/mantisbt/commit/7f4534c723e3162b8784aebda4836324041dbc3e</a></li>
<li><a href="https://www.mantisbt.org/bugs/view.php?id=29130">https://www.mantisbt.org/bugs/view.php?id=29130</a></li>
<li><a href="https://github.com/mantisbt/mantisbt/commit/99eb8d41cbacc703f88807898dcc9ac55eec0f15">https://github.com/mantisbt/mantisbt/commit/99eb8d41cbacc703f88807898dcc9ac55eec0f15</a></li>
<li><a href="https://github.com/advisories/GHSA-rg8f-5p7x-m6wv">https://github.com/advisories/GHSA-rg8f-5p7x-m6wv</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-rg8f-5p7x-m6wv</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-04-15T00:00:38.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[mantisbt/mantisbt] MantisBT XSS in manage_custom_field_update.php]]></title>
        <id>https://github.com/advisories/GHSA-cvrm-cr3m-qj92</id>
        <link href="https://github.com/advisories/GHSA-cvrm-cr3m-qj92"/>
        <updated>2025-05-30T14:04:46.000Z</updated>
        <content type="html"><![CDATA[<p>An issue was discovered in MantisBT through 2.24.3. In the helper_ensure_confirmed call in manage_custom_field_update.php, the custom field name is not sanitized. This may be problematic depending on CSP settings.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2020-35571">https://nvd.nist.gov/vuln/detail/CVE-2020-35571</a></li>
<li><a href="https://mantisbt.org/bugs/view.php?id=27768">https://mantisbt.org/bugs/view.php?id=27768</a></li>
<li><a href="https://github.com/mantisbt/mantisbt/commit/100c3d58c3f6f12b7a6cf97fba473ede521f20db">https://github.com/mantisbt/mantisbt/commit/100c3d58c3f6f12b7a6cf97fba473ede521f20db</a></li>
<li><a href="https://github.com/advisories/GHSA-cvrm-cr3m-qj92">https://github.com/advisories/GHSA-cvrm-cr3m-qj92</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-cvrm-cr3m-qj92</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-05-24T17:42:48.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[mantisbt/mantisbt] MantisBT Incorrect Authorization in bug_actiongroup_page.php]]></title>
        <id>https://github.com/advisories/GHSA-pgg9-mmcg-8mxp</id>
        <link href="https://github.com/advisories/GHSA-pgg9-mmcg-8mxp"/>
        <updated>2025-05-30T14:03:02.000Z</updated>
        <content type="html"><![CDATA[<p>An issue was discovered in MantisBT before 2.24.4. Due to insufficient access-level checks, any logged-in user allowed to perform Group Actions can get access to the Summary fields of private Issues via bug_arr[]= in a crafted bug_actiongroup_page.php URL. (The target Issues can have Private view status, or belong to a private Project.)</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2020-29605">https://nvd.nist.gov/vuln/detail/CVE-2020-29605</a></li>
<li><a href="https://mantisbt.org/bugs/view.php?id=27357">https://mantisbt.org/bugs/view.php?id=27357</a></li>
<li><a href="https://mantisbt.org/bugs/view.php?id=27727">https://mantisbt.org/bugs/view.php?id=27727</a></li>
<li><a href="https://github.com/mantisbt/mantisbt/commit/9322c8c9f57fb72f3b8b033889a6a09c441d5be0">https://github.com/mantisbt/mantisbt/commit/9322c8c9f57fb72f3b8b033889a6a09c441d5be0</a></li>
<li><a href="https://github.com/advisories/GHSA-pgg9-mmcg-8mxp">https://github.com/advisories/GHSA-pgg9-mmcg-8mxp</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-pgg9-mmcg-8mxp</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-05-24T17:40:35.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[mantisbt/mantisbt] MantisBT Insecure Storage in manage_proj_edit_page.php]]></title>
        <id>https://github.com/advisories/GHSA-qpj5-f88q-x7px</id>
        <link href="https://github.com/advisories/GHSA-qpj5-f88q-x7px"/>
        <updated>2025-05-30T14:02:22.000Z</updated>
        <content type="html"><![CDATA[<p>In manage_proj_edit_page.php in MantisBT before 2.24.4, any unprivileged logged-in user can retrieve Private Projects' names via the manage_proj_edit_page.php project_id parameter, without having access to them.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2020-29603">https://nvd.nist.gov/vuln/detail/CVE-2020-29603</a></li>
<li><a href="https://mantisbt.org/bugs/view.php?id=27357">https://mantisbt.org/bugs/view.php?id=27357</a></li>
<li><a href="https://mantisbt.org/bugs/view.php?id=27726">https://mantisbt.org/bugs/view.php?id=27726</a></li>
<li><a href="https://github.com/mantisbt/mantisbt/commit/cff10f266f67e2da3060ea4d0b9ecbb29c21b869">https://github.com/mantisbt/mantisbt/commit/cff10f266f67e2da3060ea4d0b9ecbb29c21b869</a></li>
<li><a href="https://github.com/advisories/GHSA-qpj5-f88q-x7px">https://github.com/advisories/GHSA-qpj5-f88q-x7px</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-qpj5-f88q-x7px</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-05-24T17:40:35.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[mantisbt/mantisbt] MantisBT Missing Authorization access check in bug_actiongroup.php]]></title>
        <id>https://github.com/advisories/GHSA-f38c-wxp6-8xjv</id>
        <link href="https://github.com/advisories/GHSA-f38c-wxp6-8xjv"/>
        <updated>2025-05-30T14:01:56.000Z</updated>
        <content type="html"><![CDATA[<p>An issue was discovered in MantisBT before 2.24.4. A missing access check in bug_actiongroup.php allows an attacker (with rights to create new issues) to use the COPY group action to create a clone, including all bugnotes and attachments, of any private issue (i.e., one having Private view status, or belonging to a private Project) via the bug_arr[] parameter. This provides full access to potentially confidential information.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2020-29604">https://nvd.nist.gov/vuln/detail/CVE-2020-29604</a></li>
<li><a href="https://mantisbt.org/bugs/view.php?id=27357">https://mantisbt.org/bugs/view.php?id=27357</a></li>
<li><a href="https://mantisbt.org/bugs/view.php?id=27728">https://mantisbt.org/bugs/view.php?id=27728</a></li>
<li><a href="https://github.com/mantisbt/mantisbt/commit/b2da7352b0ad31fa5f925eaacb4b2b96a6cec8e8">https://github.com/mantisbt/mantisbt/commit/b2da7352b0ad31fa5f925eaacb4b2b96a6cec8e8</a></li>
<li><a href="https://github.com/advisories/GHSA-f38c-wxp6-8xjv">https://github.com/advisories/GHSA-f38c-wxp6-8xjv</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-f38c-wxp6-8xjv</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-05-24T17:40:35.000Z</published>
    </entry>
</feed>