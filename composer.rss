<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://azu.github.io/github-advisory-database-rss/composer.rss</id>
    <title>Security Advisory for PHP packages hosted at packagist.org</title>
    <updated>2024-11-06T16:01:36.522Z</updated>
    <generator>github-advisory-database-rss</generator>
    <link rel="alternate" href="https://github.com/advisories?query=type%3Areviewed+ecosystem%3Acomposer"/>
    <subtitle>Security Advisory for PHP packages hosted at packagist.org on GitHub</subtitle>
    <rights>github-advisory-database-rss</rights>
    <category term="CRITICAL"/>
    <category term="HIGH"/>
    <category term="MODERATE"/>
    <category term="LOW"/>
    <entry>
        <title type="html"><![CDATA[[symfony/symfony] Symfony vulnerable to command execution hijack on Windows with Process class]]></title>
        <id>https://github.com/advisories/GHSA-qq5c-677p-737q</id>
        <link href="https://github.com/advisories/GHSA-qq5c-677p-737q"/>
        <updated>2024-11-06T15:22:57.000Z</updated>
        <content type="html"><![CDATA[<h3 id="description">Description</h3>
<p>On Window, when an executable file named <code>cmd.exe</code> is located in the current working directory it will be called by the <code>Process</code> class when preparing command arguments, leading to possible hijacking.</p>
<h3 id="resolution">Resolution</h3>
<p>The <code>Process</code> class now uses the absolute path to <code>cmd.exe</code>.</p>
<p>The patch for this issue is available <a href="https://github.com/symfony/symfony/commit/18ecd03eda3917fdf901a48e72518f911c64a1c9">here</a> for branch 5.4.</p>
<h3 id="credits">Credits</h3>
<p>We would like to thank Jordi Boggiano for reporting the issue and Nicolas Grekas for providing the fix.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/symfony/symfony/security/advisories/GHSA-qq5c-677p-737q">https://github.com/symfony/symfony/security/advisories/GHSA-qq5c-677p-737q</a></li>
<li><a href="https://github.com/symfony/symfony/commit/18ecd03eda3917fdf901a48e72518f911c64a1c9">https://github.com/symfony/symfony/commit/18ecd03eda3917fdf901a48e72518f911c64a1c9</a></li>
<li><a href="https://github.com/FriendsOfPHP/security-advisories/blob/master/symfony/process/CVE-2024-51736.yaml">https://github.com/FriendsOfPHP/security-advisories/blob/master/symfony/process/CVE-2024-51736.yaml</a></li>
<li><a href="https://github.com/FriendsOfPHP/security-advisories/blob/master/symfony/symfony/CVE-2024-51736.yaml">https://github.com/FriendsOfPHP/security-advisories/blob/master/symfony/symfony/CVE-2024-51736.yaml</a></li>
<li><a href="https://symfony.com/cve-2024-51736">https://symfony.com/cve-2024-51736</a></li>
<li><a href="https://github.com/advisories/GHSA-qq5c-677p-737q">https://github.com/advisories/GHSA-qq5c-677p-737q</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-qq5c-677p-737q</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-11-06T15:22:55.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[symfony/symfony] Symfony vulnerable to command execution hijack on Windows with Process class]]></title>
        <id>https://github.com/advisories/GHSA-qq5c-677p-737q</id>
        <link href="https://github.com/advisories/GHSA-qq5c-677p-737q"/>
        <updated>2024-11-06T15:22:57.000Z</updated>
        <content type="html"><![CDATA[<h3 id="description">Description</h3>
<p>On Window, when an executable file named <code>cmd.exe</code> is located in the current working directory it will be called by the <code>Process</code> class when preparing command arguments, leading to possible hijacking.</p>
<h3 id="resolution">Resolution</h3>
<p>The <code>Process</code> class now uses the absolute path to <code>cmd.exe</code>.</p>
<p>The patch for this issue is available <a href="https://github.com/symfony/symfony/commit/18ecd03eda3917fdf901a48e72518f911c64a1c9">here</a> for branch 5.4.</p>
<h3 id="credits">Credits</h3>
<p>We would like to thank Jordi Boggiano for reporting the issue and Nicolas Grekas for providing the fix.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/symfony/symfony/security/advisories/GHSA-qq5c-677p-737q">https://github.com/symfony/symfony/security/advisories/GHSA-qq5c-677p-737q</a></li>
<li><a href="https://github.com/symfony/symfony/commit/18ecd03eda3917fdf901a48e72518f911c64a1c9">https://github.com/symfony/symfony/commit/18ecd03eda3917fdf901a48e72518f911c64a1c9</a></li>
<li><a href="https://github.com/FriendsOfPHP/security-advisories/blob/master/symfony/process/CVE-2024-51736.yaml">https://github.com/FriendsOfPHP/security-advisories/blob/master/symfony/process/CVE-2024-51736.yaml</a></li>
<li><a href="https://github.com/FriendsOfPHP/security-advisories/blob/master/symfony/symfony/CVE-2024-51736.yaml">https://github.com/FriendsOfPHP/security-advisories/blob/master/symfony/symfony/CVE-2024-51736.yaml</a></li>
<li><a href="https://symfony.com/cve-2024-51736">https://symfony.com/cve-2024-51736</a></li>
<li><a href="https://github.com/advisories/GHSA-qq5c-677p-737q">https://github.com/advisories/GHSA-qq5c-677p-737q</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-qq5c-677p-737q</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-11-06T15:22:55.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[symfony/symfony] Symfony vulnerable to command execution hijack on Windows with Process class]]></title>
        <id>https://github.com/advisories/GHSA-qq5c-677p-737q</id>
        <link href="https://github.com/advisories/GHSA-qq5c-677p-737q"/>
        <updated>2024-11-06T15:22:57.000Z</updated>
        <content type="html"><![CDATA[<h3 id="description">Description</h3>
<p>On Window, when an executable file named <code>cmd.exe</code> is located in the current working directory it will be called by the <code>Process</code> class when preparing command arguments, leading to possible hijacking.</p>
<h3 id="resolution">Resolution</h3>
<p>The <code>Process</code> class now uses the absolute path to <code>cmd.exe</code>.</p>
<p>The patch for this issue is available <a href="https://github.com/symfony/symfony/commit/18ecd03eda3917fdf901a48e72518f911c64a1c9">here</a> for branch 5.4.</p>
<h3 id="credits">Credits</h3>
<p>We would like to thank Jordi Boggiano for reporting the issue and Nicolas Grekas for providing the fix.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/symfony/symfony/security/advisories/GHSA-qq5c-677p-737q">https://github.com/symfony/symfony/security/advisories/GHSA-qq5c-677p-737q</a></li>
<li><a href="https://github.com/symfony/symfony/commit/18ecd03eda3917fdf901a48e72518f911c64a1c9">https://github.com/symfony/symfony/commit/18ecd03eda3917fdf901a48e72518f911c64a1c9</a></li>
<li><a href="https://github.com/FriendsOfPHP/security-advisories/blob/master/symfony/process/CVE-2024-51736.yaml">https://github.com/FriendsOfPHP/security-advisories/blob/master/symfony/process/CVE-2024-51736.yaml</a></li>
<li><a href="https://github.com/FriendsOfPHP/security-advisories/blob/master/symfony/symfony/CVE-2024-51736.yaml">https://github.com/FriendsOfPHP/security-advisories/blob/master/symfony/symfony/CVE-2024-51736.yaml</a></li>
<li><a href="https://symfony.com/cve-2024-51736">https://symfony.com/cve-2024-51736</a></li>
<li><a href="https://github.com/advisories/GHSA-qq5c-677p-737q">https://github.com/advisories/GHSA-qq5c-677p-737q</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-qq5c-677p-737q</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-11-06T15:22:55.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[symfony/process] Symfony vulnerable to command execution hijack on Windows with Process class]]></title>
        <id>https://github.com/advisories/GHSA-qq5c-677p-737q</id>
        <link href="https://github.com/advisories/GHSA-qq5c-677p-737q"/>
        <updated>2024-11-06T15:22:57.000Z</updated>
        <content type="html"><![CDATA[<h3 id="description">Description</h3>
<p>On Window, when an executable file named <code>cmd.exe</code> is located in the current working directory it will be called by the <code>Process</code> class when preparing command arguments, leading to possible hijacking.</p>
<h3 id="resolution">Resolution</h3>
<p>The <code>Process</code> class now uses the absolute path to <code>cmd.exe</code>.</p>
<p>The patch for this issue is available <a href="https://github.com/symfony/symfony/commit/18ecd03eda3917fdf901a48e72518f911c64a1c9">here</a> for branch 5.4.</p>
<h3 id="credits">Credits</h3>
<p>We would like to thank Jordi Boggiano for reporting the issue and Nicolas Grekas for providing the fix.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/symfony/symfony/security/advisories/GHSA-qq5c-677p-737q">https://github.com/symfony/symfony/security/advisories/GHSA-qq5c-677p-737q</a></li>
<li><a href="https://github.com/symfony/symfony/commit/18ecd03eda3917fdf901a48e72518f911c64a1c9">https://github.com/symfony/symfony/commit/18ecd03eda3917fdf901a48e72518f911c64a1c9</a></li>
<li><a href="https://github.com/FriendsOfPHP/security-advisories/blob/master/symfony/process/CVE-2024-51736.yaml">https://github.com/FriendsOfPHP/security-advisories/blob/master/symfony/process/CVE-2024-51736.yaml</a></li>
<li><a href="https://github.com/FriendsOfPHP/security-advisories/blob/master/symfony/symfony/CVE-2024-51736.yaml">https://github.com/FriendsOfPHP/security-advisories/blob/master/symfony/symfony/CVE-2024-51736.yaml</a></li>
<li><a href="https://symfony.com/cve-2024-51736">https://symfony.com/cve-2024-51736</a></li>
<li><a href="https://github.com/advisories/GHSA-qq5c-677p-737q">https://github.com/advisories/GHSA-qq5c-677p-737q</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-qq5c-677p-737q</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-11-06T15:22:55.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[symfony/process] Symfony vulnerable to command execution hijack on Windows with Process class]]></title>
        <id>https://github.com/advisories/GHSA-qq5c-677p-737q</id>
        <link href="https://github.com/advisories/GHSA-qq5c-677p-737q"/>
        <updated>2024-11-06T15:22:57.000Z</updated>
        <content type="html"><![CDATA[<h3 id="description">Description</h3>
<p>On Window, when an executable file named <code>cmd.exe</code> is located in the current working directory it will be called by the <code>Process</code> class when preparing command arguments, leading to possible hijacking.</p>
<h3 id="resolution">Resolution</h3>
<p>The <code>Process</code> class now uses the absolute path to <code>cmd.exe</code>.</p>
<p>The patch for this issue is available <a href="https://github.com/symfony/symfony/commit/18ecd03eda3917fdf901a48e72518f911c64a1c9">here</a> for branch 5.4.</p>
<h3 id="credits">Credits</h3>
<p>We would like to thank Jordi Boggiano for reporting the issue and Nicolas Grekas for providing the fix.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/symfony/symfony/security/advisories/GHSA-qq5c-677p-737q">https://github.com/symfony/symfony/security/advisories/GHSA-qq5c-677p-737q</a></li>
<li><a href="https://github.com/symfony/symfony/commit/18ecd03eda3917fdf901a48e72518f911c64a1c9">https://github.com/symfony/symfony/commit/18ecd03eda3917fdf901a48e72518f911c64a1c9</a></li>
<li><a href="https://github.com/FriendsOfPHP/security-advisories/blob/master/symfony/process/CVE-2024-51736.yaml">https://github.com/FriendsOfPHP/security-advisories/blob/master/symfony/process/CVE-2024-51736.yaml</a></li>
<li><a href="https://github.com/FriendsOfPHP/security-advisories/blob/master/symfony/symfony/CVE-2024-51736.yaml">https://github.com/FriendsOfPHP/security-advisories/blob/master/symfony/symfony/CVE-2024-51736.yaml</a></li>
<li><a href="https://symfony.com/cve-2024-51736">https://symfony.com/cve-2024-51736</a></li>
<li><a href="https://github.com/advisories/GHSA-qq5c-677p-737q">https://github.com/advisories/GHSA-qq5c-677p-737q</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-qq5c-677p-737q</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-11-06T15:22:55.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[symfony/process] Symfony vulnerable to command execution hijack on Windows with Process class]]></title>
        <id>https://github.com/advisories/GHSA-qq5c-677p-737q</id>
        <link href="https://github.com/advisories/GHSA-qq5c-677p-737q"/>
        <updated>2024-11-06T15:22:57.000Z</updated>
        <content type="html"><![CDATA[<h3 id="description">Description</h3>
<p>On Window, when an executable file named <code>cmd.exe</code> is located in the current working directory it will be called by the <code>Process</code> class when preparing command arguments, leading to possible hijacking.</p>
<h3 id="resolution">Resolution</h3>
<p>The <code>Process</code> class now uses the absolute path to <code>cmd.exe</code>.</p>
<p>The patch for this issue is available <a href="https://github.com/symfony/symfony/commit/18ecd03eda3917fdf901a48e72518f911c64a1c9">here</a> for branch 5.4.</p>
<h3 id="credits">Credits</h3>
<p>We would like to thank Jordi Boggiano for reporting the issue and Nicolas Grekas for providing the fix.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/symfony/symfony/security/advisories/GHSA-qq5c-677p-737q">https://github.com/symfony/symfony/security/advisories/GHSA-qq5c-677p-737q</a></li>
<li><a href="https://github.com/symfony/symfony/commit/18ecd03eda3917fdf901a48e72518f911c64a1c9">https://github.com/symfony/symfony/commit/18ecd03eda3917fdf901a48e72518f911c64a1c9</a></li>
<li><a href="https://github.com/FriendsOfPHP/security-advisories/blob/master/symfony/process/CVE-2024-51736.yaml">https://github.com/FriendsOfPHP/security-advisories/blob/master/symfony/process/CVE-2024-51736.yaml</a></li>
<li><a href="https://github.com/FriendsOfPHP/security-advisories/blob/master/symfony/symfony/CVE-2024-51736.yaml">https://github.com/FriendsOfPHP/security-advisories/blob/master/symfony/symfony/CVE-2024-51736.yaml</a></li>
<li><a href="https://symfony.com/cve-2024-51736">https://symfony.com/cve-2024-51736</a></li>
<li><a href="https://github.com/advisories/GHSA-qq5c-677p-737q">https://github.com/advisories/GHSA-qq5c-677p-737q</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-qq5c-677p-737q</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-11-06T15:22:55.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[symfony/symfony] Symfony vulnerable to open redirect via browser-sanitized URLs]]></title>
        <id>https://github.com/advisories/GHSA-mrqx-rp3w-jpjp</id>
        <link href="https://github.com/advisories/GHSA-mrqx-rp3w-jpjp"/>
        <updated>2024-11-06T15:22:12.000Z</updated>
        <content type="html"><![CDATA[<h3 id="description">Description</h3>
<p>The <code>Request</code> class, does not parse URI with special characters the same way browsers do. As a result, an attacker can trick a validator relying on the <code>Request</code> class to redirect users to another domain.</p>
<h3 id="resolution">Resolution</h3>
<p>The <code>Request::create</code> methods now assert the URI does not contain invalid characters as defined by <a href="https://url.spec.whatwg.org/">https://url.spec.whatwg.org/</a></p>
<p>The patch for this issue is available <a href="https://github.com/symfony/symfony/commit/5a9b08e5740af795854b1b639b7d45b9cbfe8819">here</a> for branch 5.4.</p>
<h3 id="credits">Credits</h3>
<p>We would like to thank Sam Mush for reporting the issue and Nicolas Grekas for providing the fix.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/symfony/symfony/security/advisories/GHSA-mrqx-rp3w-jpjp">https://github.com/symfony/symfony/security/advisories/GHSA-mrqx-rp3w-jpjp</a></li>
<li><a href="https://github.com/symfony/symfony/commit/5a9b08e5740af795854b1b639b7d45b9cbfe8819">https://github.com/symfony/symfony/commit/5a9b08e5740af795854b1b639b7d45b9cbfe8819</a></li>
<li><a href="https://github.com/FriendsOfPHP/security-advisories/blob/master/symfony/http-foundation/CVE-2024-50345.yaml">https://github.com/FriendsOfPHP/security-advisories/blob/master/symfony/http-foundation/CVE-2024-50345.yaml</a></li>
<li><a href="https://github.com/FriendsOfPHP/security-advisories/blob/master/symfony/symfony/CVE-2024-50345.yaml">https://github.com/FriendsOfPHP/security-advisories/blob/master/symfony/symfony/CVE-2024-50345.yaml</a></li>
<li><a href="https://symfony.com/cve-2024-50345">https://symfony.com/cve-2024-50345</a></li>
<li><a href="https://github.com/advisories/GHSA-mrqx-rp3w-jpjp">https://github.com/advisories/GHSA-mrqx-rp3w-jpjp</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-mrqx-rp3w-jpjp</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2024-11-06T15:22:09.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[symfony/symfony] Symfony vulnerable to open redirect via browser-sanitized URLs]]></title>
        <id>https://github.com/advisories/GHSA-mrqx-rp3w-jpjp</id>
        <link href="https://github.com/advisories/GHSA-mrqx-rp3w-jpjp"/>
        <updated>2024-11-06T15:22:12.000Z</updated>
        <content type="html"><![CDATA[<h3 id="description">Description</h3>
<p>The <code>Request</code> class, does not parse URI with special characters the same way browsers do. As a result, an attacker can trick a validator relying on the <code>Request</code> class to redirect users to another domain.</p>
<h3 id="resolution">Resolution</h3>
<p>The <code>Request::create</code> methods now assert the URI does not contain invalid characters as defined by <a href="https://url.spec.whatwg.org/">https://url.spec.whatwg.org/</a></p>
<p>The patch for this issue is available <a href="https://github.com/symfony/symfony/commit/5a9b08e5740af795854b1b639b7d45b9cbfe8819">here</a> for branch 5.4.</p>
<h3 id="credits">Credits</h3>
<p>We would like to thank Sam Mush for reporting the issue and Nicolas Grekas for providing the fix.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/symfony/symfony/security/advisories/GHSA-mrqx-rp3w-jpjp">https://github.com/symfony/symfony/security/advisories/GHSA-mrqx-rp3w-jpjp</a></li>
<li><a href="https://github.com/symfony/symfony/commit/5a9b08e5740af795854b1b639b7d45b9cbfe8819">https://github.com/symfony/symfony/commit/5a9b08e5740af795854b1b639b7d45b9cbfe8819</a></li>
<li><a href="https://github.com/FriendsOfPHP/security-advisories/blob/master/symfony/http-foundation/CVE-2024-50345.yaml">https://github.com/FriendsOfPHP/security-advisories/blob/master/symfony/http-foundation/CVE-2024-50345.yaml</a></li>
<li><a href="https://github.com/FriendsOfPHP/security-advisories/blob/master/symfony/symfony/CVE-2024-50345.yaml">https://github.com/FriendsOfPHP/security-advisories/blob/master/symfony/symfony/CVE-2024-50345.yaml</a></li>
<li><a href="https://symfony.com/cve-2024-50345">https://symfony.com/cve-2024-50345</a></li>
<li><a href="https://github.com/advisories/GHSA-mrqx-rp3w-jpjp">https://github.com/advisories/GHSA-mrqx-rp3w-jpjp</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-mrqx-rp3w-jpjp</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2024-11-06T15:22:09.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[symfony/symfony] Symfony vulnerable to open redirect via browser-sanitized URLs]]></title>
        <id>https://github.com/advisories/GHSA-mrqx-rp3w-jpjp</id>
        <link href="https://github.com/advisories/GHSA-mrqx-rp3w-jpjp"/>
        <updated>2024-11-06T15:22:12.000Z</updated>
        <content type="html"><![CDATA[<h3 id="description">Description</h3>
<p>The <code>Request</code> class, does not parse URI with special characters the same way browsers do. As a result, an attacker can trick a validator relying on the <code>Request</code> class to redirect users to another domain.</p>
<h3 id="resolution">Resolution</h3>
<p>The <code>Request::create</code> methods now assert the URI does not contain invalid characters as defined by <a href="https://url.spec.whatwg.org/">https://url.spec.whatwg.org/</a></p>
<p>The patch for this issue is available <a href="https://github.com/symfony/symfony/commit/5a9b08e5740af795854b1b639b7d45b9cbfe8819">here</a> for branch 5.4.</p>
<h3 id="credits">Credits</h3>
<p>We would like to thank Sam Mush for reporting the issue and Nicolas Grekas for providing the fix.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/symfony/symfony/security/advisories/GHSA-mrqx-rp3w-jpjp">https://github.com/symfony/symfony/security/advisories/GHSA-mrqx-rp3w-jpjp</a></li>
<li><a href="https://github.com/symfony/symfony/commit/5a9b08e5740af795854b1b639b7d45b9cbfe8819">https://github.com/symfony/symfony/commit/5a9b08e5740af795854b1b639b7d45b9cbfe8819</a></li>
<li><a href="https://github.com/FriendsOfPHP/security-advisories/blob/master/symfony/http-foundation/CVE-2024-50345.yaml">https://github.com/FriendsOfPHP/security-advisories/blob/master/symfony/http-foundation/CVE-2024-50345.yaml</a></li>
<li><a href="https://github.com/FriendsOfPHP/security-advisories/blob/master/symfony/symfony/CVE-2024-50345.yaml">https://github.com/FriendsOfPHP/security-advisories/blob/master/symfony/symfony/CVE-2024-50345.yaml</a></li>
<li><a href="https://symfony.com/cve-2024-50345">https://symfony.com/cve-2024-50345</a></li>
<li><a href="https://github.com/advisories/GHSA-mrqx-rp3w-jpjp">https://github.com/advisories/GHSA-mrqx-rp3w-jpjp</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-mrqx-rp3w-jpjp</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2024-11-06T15:22:09.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[symfony/http-foundation] Symfony vulnerable to open redirect via browser-sanitized URLs]]></title>
        <id>https://github.com/advisories/GHSA-mrqx-rp3w-jpjp</id>
        <link href="https://github.com/advisories/GHSA-mrqx-rp3w-jpjp"/>
        <updated>2024-11-06T15:22:12.000Z</updated>
        <content type="html"><![CDATA[<h3 id="description">Description</h3>
<p>The <code>Request</code> class, does not parse URI with special characters the same way browsers do. As a result, an attacker can trick a validator relying on the <code>Request</code> class to redirect users to another domain.</p>
<h3 id="resolution">Resolution</h3>
<p>The <code>Request::create</code> methods now assert the URI does not contain invalid characters as defined by <a href="https://url.spec.whatwg.org/">https://url.spec.whatwg.org/</a></p>
<p>The patch for this issue is available <a href="https://github.com/symfony/symfony/commit/5a9b08e5740af795854b1b639b7d45b9cbfe8819">here</a> for branch 5.4.</p>
<h3 id="credits">Credits</h3>
<p>We would like to thank Sam Mush for reporting the issue and Nicolas Grekas for providing the fix.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/symfony/symfony/security/advisories/GHSA-mrqx-rp3w-jpjp">https://github.com/symfony/symfony/security/advisories/GHSA-mrqx-rp3w-jpjp</a></li>
<li><a href="https://github.com/symfony/symfony/commit/5a9b08e5740af795854b1b639b7d45b9cbfe8819">https://github.com/symfony/symfony/commit/5a9b08e5740af795854b1b639b7d45b9cbfe8819</a></li>
<li><a href="https://github.com/FriendsOfPHP/security-advisories/blob/master/symfony/http-foundation/CVE-2024-50345.yaml">https://github.com/FriendsOfPHP/security-advisories/blob/master/symfony/http-foundation/CVE-2024-50345.yaml</a></li>
<li><a href="https://github.com/FriendsOfPHP/security-advisories/blob/master/symfony/symfony/CVE-2024-50345.yaml">https://github.com/FriendsOfPHP/security-advisories/blob/master/symfony/symfony/CVE-2024-50345.yaml</a></li>
<li><a href="https://symfony.com/cve-2024-50345">https://symfony.com/cve-2024-50345</a></li>
<li><a href="https://github.com/advisories/GHSA-mrqx-rp3w-jpjp">https://github.com/advisories/GHSA-mrqx-rp3w-jpjp</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-mrqx-rp3w-jpjp</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2024-11-06T15:22:09.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[symfony/http-foundation] Symfony vulnerable to open redirect via browser-sanitized URLs]]></title>
        <id>https://github.com/advisories/GHSA-mrqx-rp3w-jpjp</id>
        <link href="https://github.com/advisories/GHSA-mrqx-rp3w-jpjp"/>
        <updated>2024-11-06T15:22:12.000Z</updated>
        <content type="html"><![CDATA[<h3 id="description">Description</h3>
<p>The <code>Request</code> class, does not parse URI with special characters the same way browsers do. As a result, an attacker can trick a validator relying on the <code>Request</code> class to redirect users to another domain.</p>
<h3 id="resolution">Resolution</h3>
<p>The <code>Request::create</code> methods now assert the URI does not contain invalid characters as defined by <a href="https://url.spec.whatwg.org/">https://url.spec.whatwg.org/</a></p>
<p>The patch for this issue is available <a href="https://github.com/symfony/symfony/commit/5a9b08e5740af795854b1b639b7d45b9cbfe8819">here</a> for branch 5.4.</p>
<h3 id="credits">Credits</h3>
<p>We would like to thank Sam Mush for reporting the issue and Nicolas Grekas for providing the fix.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/symfony/symfony/security/advisories/GHSA-mrqx-rp3w-jpjp">https://github.com/symfony/symfony/security/advisories/GHSA-mrqx-rp3w-jpjp</a></li>
<li><a href="https://github.com/symfony/symfony/commit/5a9b08e5740af795854b1b639b7d45b9cbfe8819">https://github.com/symfony/symfony/commit/5a9b08e5740af795854b1b639b7d45b9cbfe8819</a></li>
<li><a href="https://github.com/FriendsOfPHP/security-advisories/blob/master/symfony/http-foundation/CVE-2024-50345.yaml">https://github.com/FriendsOfPHP/security-advisories/blob/master/symfony/http-foundation/CVE-2024-50345.yaml</a></li>
<li><a href="https://github.com/FriendsOfPHP/security-advisories/blob/master/symfony/symfony/CVE-2024-50345.yaml">https://github.com/FriendsOfPHP/security-advisories/blob/master/symfony/symfony/CVE-2024-50345.yaml</a></li>
<li><a href="https://symfony.com/cve-2024-50345">https://symfony.com/cve-2024-50345</a></li>
<li><a href="https://github.com/advisories/GHSA-mrqx-rp3w-jpjp">https://github.com/advisories/GHSA-mrqx-rp3w-jpjp</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-mrqx-rp3w-jpjp</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2024-11-06T15:22:09.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[symfony/http-foundation] Symfony vulnerable to open redirect via browser-sanitized URLs]]></title>
        <id>https://github.com/advisories/GHSA-mrqx-rp3w-jpjp</id>
        <link href="https://github.com/advisories/GHSA-mrqx-rp3w-jpjp"/>
        <updated>2024-11-06T15:22:12.000Z</updated>
        <content type="html"><![CDATA[<h3 id="description">Description</h3>
<p>The <code>Request</code> class, does not parse URI with special characters the same way browsers do. As a result, an attacker can trick a validator relying on the <code>Request</code> class to redirect users to another domain.</p>
<h3 id="resolution">Resolution</h3>
<p>The <code>Request::create</code> methods now assert the URI does not contain invalid characters as defined by <a href="https://url.spec.whatwg.org/">https://url.spec.whatwg.org/</a></p>
<p>The patch for this issue is available <a href="https://github.com/symfony/symfony/commit/5a9b08e5740af795854b1b639b7d45b9cbfe8819">here</a> for branch 5.4.</p>
<h3 id="credits">Credits</h3>
<p>We would like to thank Sam Mush for reporting the issue and Nicolas Grekas for providing the fix.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/symfony/symfony/security/advisories/GHSA-mrqx-rp3w-jpjp">https://github.com/symfony/symfony/security/advisories/GHSA-mrqx-rp3w-jpjp</a></li>
<li><a href="https://github.com/symfony/symfony/commit/5a9b08e5740af795854b1b639b7d45b9cbfe8819">https://github.com/symfony/symfony/commit/5a9b08e5740af795854b1b639b7d45b9cbfe8819</a></li>
<li><a href="https://github.com/FriendsOfPHP/security-advisories/blob/master/symfony/http-foundation/CVE-2024-50345.yaml">https://github.com/FriendsOfPHP/security-advisories/blob/master/symfony/http-foundation/CVE-2024-50345.yaml</a></li>
<li><a href="https://github.com/FriendsOfPHP/security-advisories/blob/master/symfony/symfony/CVE-2024-50345.yaml">https://github.com/FriendsOfPHP/security-advisories/blob/master/symfony/symfony/CVE-2024-50345.yaml</a></li>
<li><a href="https://symfony.com/cve-2024-50345">https://symfony.com/cve-2024-50345</a></li>
<li><a href="https://github.com/advisories/GHSA-mrqx-rp3w-jpjp">https://github.com/advisories/GHSA-mrqx-rp3w-jpjp</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-mrqx-rp3w-jpjp</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2024-11-06T15:22:09.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[symfony/validator] Symfony has an incorrect response from Validator when input ends with `\n`]]></title>
        <id>https://github.com/advisories/GHSA-g3rh-rrhp-jhh9</id>
        <link href="https://github.com/advisories/GHSA-g3rh-rrhp-jhh9"/>
        <updated>2024-11-06T15:21:09.000Z</updated>
        <content type="html"><![CDATA[<h3 id="description">Description</h3>
<p>It is possible to trick a <code>Validator</code> configured with a regular expression using the <code>$</code> metacharacters, with an input ending with <code>\n</code>.</p>
<h3 id="resolution">Resolution</h3>
<p>Symfony now uses the <code>D</code> regex modifier to match the entire input.</p>
<p>The patch for this issue is available <a href="https://github.com/symfony/symfony/commit/7d1032bbead9a4229b32fa6ebca32681c80cb76f">here</a> for branch 5.4.</p>
<h3 id="credits">Credits</h3>
<p>We would like to thank Offscript for reporting the issue and Alexandre Daubois for providing the fix.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/symfony/symfony/security/advisories/GHSA-g3rh-rrhp-jhh9">https://github.com/symfony/symfony/security/advisories/GHSA-g3rh-rrhp-jhh9</a></li>
<li><a href="https://github.com/symfony/symfony/commit/7d1032bbead9a4229b32fa6ebca32681c80cb76f">https://github.com/symfony/symfony/commit/7d1032bbead9a4229b32fa6ebca32681c80cb76f</a></li>
<li><a href="https://github.com/FriendsOfPHP/security-advisories/blob/master/symfony/symfony/CVE-2024-50343.yaml">https://github.com/FriendsOfPHP/security-advisories/blob/master/symfony/symfony/CVE-2024-50343.yaml</a></li>
<li><a href="https://github.com/FriendsOfPHP/security-advisories/blob/master/symfony/validator/CVE-2024-50343.yaml">https://github.com/FriendsOfPHP/security-advisories/blob/master/symfony/validator/CVE-2024-50343.yaml</a></li>
<li><a href="https://symfony.com/cve-2024-50343">https://symfony.com/cve-2024-50343</a></li>
<li><a href="https://github.com/advisories/GHSA-g3rh-rrhp-jhh9">https://github.com/advisories/GHSA-g3rh-rrhp-jhh9</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-g3rh-rrhp-jhh9</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2024-11-06T15:21:08.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[symfony/validator] Symfony has an incorrect response from Validator when input ends with `\n`]]></title>
        <id>https://github.com/advisories/GHSA-g3rh-rrhp-jhh9</id>
        <link href="https://github.com/advisories/GHSA-g3rh-rrhp-jhh9"/>
        <updated>2024-11-06T15:21:09.000Z</updated>
        <content type="html"><![CDATA[<h3 id="description">Description</h3>
<p>It is possible to trick a <code>Validator</code> configured with a regular expression using the <code>$</code> metacharacters, with an input ending with <code>\n</code>.</p>
<h3 id="resolution">Resolution</h3>
<p>Symfony now uses the <code>D</code> regex modifier to match the entire input.</p>
<p>The patch for this issue is available <a href="https://github.com/symfony/symfony/commit/7d1032bbead9a4229b32fa6ebca32681c80cb76f">here</a> for branch 5.4.</p>
<h3 id="credits">Credits</h3>
<p>We would like to thank Offscript for reporting the issue and Alexandre Daubois for providing the fix.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/symfony/symfony/security/advisories/GHSA-g3rh-rrhp-jhh9">https://github.com/symfony/symfony/security/advisories/GHSA-g3rh-rrhp-jhh9</a></li>
<li><a href="https://github.com/symfony/symfony/commit/7d1032bbead9a4229b32fa6ebca32681c80cb76f">https://github.com/symfony/symfony/commit/7d1032bbead9a4229b32fa6ebca32681c80cb76f</a></li>
<li><a href="https://github.com/FriendsOfPHP/security-advisories/blob/master/symfony/symfony/CVE-2024-50343.yaml">https://github.com/FriendsOfPHP/security-advisories/blob/master/symfony/symfony/CVE-2024-50343.yaml</a></li>
<li><a href="https://github.com/FriendsOfPHP/security-advisories/blob/master/symfony/validator/CVE-2024-50343.yaml">https://github.com/FriendsOfPHP/security-advisories/blob/master/symfony/validator/CVE-2024-50343.yaml</a></li>
<li><a href="https://symfony.com/cve-2024-50343">https://symfony.com/cve-2024-50343</a></li>
<li><a href="https://github.com/advisories/GHSA-g3rh-rrhp-jhh9">https://github.com/advisories/GHSA-g3rh-rrhp-jhh9</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-g3rh-rrhp-jhh9</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2024-11-06T15:21:08.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[symfony/validator] Symfony has an incorrect response from Validator when input ends with `\n`]]></title>
        <id>https://github.com/advisories/GHSA-g3rh-rrhp-jhh9</id>
        <link href="https://github.com/advisories/GHSA-g3rh-rrhp-jhh9"/>
        <updated>2024-11-06T15:21:09.000Z</updated>
        <content type="html"><![CDATA[<h3 id="description">Description</h3>
<p>It is possible to trick a <code>Validator</code> configured with a regular expression using the <code>$</code> metacharacters, with an input ending with <code>\n</code>.</p>
<h3 id="resolution">Resolution</h3>
<p>Symfony now uses the <code>D</code> regex modifier to match the entire input.</p>
<p>The patch for this issue is available <a href="https://github.com/symfony/symfony/commit/7d1032bbead9a4229b32fa6ebca32681c80cb76f">here</a> for branch 5.4.</p>
<h3 id="credits">Credits</h3>
<p>We would like to thank Offscript for reporting the issue and Alexandre Daubois for providing the fix.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/symfony/symfony/security/advisories/GHSA-g3rh-rrhp-jhh9">https://github.com/symfony/symfony/security/advisories/GHSA-g3rh-rrhp-jhh9</a></li>
<li><a href="https://github.com/symfony/symfony/commit/7d1032bbead9a4229b32fa6ebca32681c80cb76f">https://github.com/symfony/symfony/commit/7d1032bbead9a4229b32fa6ebca32681c80cb76f</a></li>
<li><a href="https://github.com/FriendsOfPHP/security-advisories/blob/master/symfony/symfony/CVE-2024-50343.yaml">https://github.com/FriendsOfPHP/security-advisories/blob/master/symfony/symfony/CVE-2024-50343.yaml</a></li>
<li><a href="https://github.com/FriendsOfPHP/security-advisories/blob/master/symfony/validator/CVE-2024-50343.yaml">https://github.com/FriendsOfPHP/security-advisories/blob/master/symfony/validator/CVE-2024-50343.yaml</a></li>
<li><a href="https://symfony.com/cve-2024-50343">https://symfony.com/cve-2024-50343</a></li>
<li><a href="https://github.com/advisories/GHSA-g3rh-rrhp-jhh9">https://github.com/advisories/GHSA-g3rh-rrhp-jhh9</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-g3rh-rrhp-jhh9</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2024-11-06T15:21:08.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[symfony/symfony] Symfony has an incorrect response from Validator when input ends with `\n`]]></title>
        <id>https://github.com/advisories/GHSA-g3rh-rrhp-jhh9</id>
        <link href="https://github.com/advisories/GHSA-g3rh-rrhp-jhh9"/>
        <updated>2024-11-06T15:21:09.000Z</updated>
        <content type="html"><![CDATA[<h3 id="description">Description</h3>
<p>It is possible to trick a <code>Validator</code> configured with a regular expression using the <code>$</code> metacharacters, with an input ending with <code>\n</code>.</p>
<h3 id="resolution">Resolution</h3>
<p>Symfony now uses the <code>D</code> regex modifier to match the entire input.</p>
<p>The patch for this issue is available <a href="https://github.com/symfony/symfony/commit/7d1032bbead9a4229b32fa6ebca32681c80cb76f">here</a> for branch 5.4.</p>
<h3 id="credits">Credits</h3>
<p>We would like to thank Offscript for reporting the issue and Alexandre Daubois for providing the fix.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/symfony/symfony/security/advisories/GHSA-g3rh-rrhp-jhh9">https://github.com/symfony/symfony/security/advisories/GHSA-g3rh-rrhp-jhh9</a></li>
<li><a href="https://github.com/symfony/symfony/commit/7d1032bbead9a4229b32fa6ebca32681c80cb76f">https://github.com/symfony/symfony/commit/7d1032bbead9a4229b32fa6ebca32681c80cb76f</a></li>
<li><a href="https://github.com/FriendsOfPHP/security-advisories/blob/master/symfony/symfony/CVE-2024-50343.yaml">https://github.com/FriendsOfPHP/security-advisories/blob/master/symfony/symfony/CVE-2024-50343.yaml</a></li>
<li><a href="https://github.com/FriendsOfPHP/security-advisories/blob/master/symfony/validator/CVE-2024-50343.yaml">https://github.com/FriendsOfPHP/security-advisories/blob/master/symfony/validator/CVE-2024-50343.yaml</a></li>
<li><a href="https://symfony.com/cve-2024-50343">https://symfony.com/cve-2024-50343</a></li>
<li><a href="https://github.com/advisories/GHSA-g3rh-rrhp-jhh9">https://github.com/advisories/GHSA-g3rh-rrhp-jhh9</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-g3rh-rrhp-jhh9</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2024-11-06T15:21:08.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[symfony/symfony] Symfony has an incorrect response from Validator when input ends with `\n`]]></title>
        <id>https://github.com/advisories/GHSA-g3rh-rrhp-jhh9</id>
        <link href="https://github.com/advisories/GHSA-g3rh-rrhp-jhh9"/>
        <updated>2024-11-06T15:21:09.000Z</updated>
        <content type="html"><![CDATA[<h3 id="description">Description</h3>
<p>It is possible to trick a <code>Validator</code> configured with a regular expression using the <code>$</code> metacharacters, with an input ending with <code>\n</code>.</p>
<h3 id="resolution">Resolution</h3>
<p>Symfony now uses the <code>D</code> regex modifier to match the entire input.</p>
<p>The patch for this issue is available <a href="https://github.com/symfony/symfony/commit/7d1032bbead9a4229b32fa6ebca32681c80cb76f">here</a> for branch 5.4.</p>
<h3 id="credits">Credits</h3>
<p>We would like to thank Offscript for reporting the issue and Alexandre Daubois for providing the fix.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/symfony/symfony/security/advisories/GHSA-g3rh-rrhp-jhh9">https://github.com/symfony/symfony/security/advisories/GHSA-g3rh-rrhp-jhh9</a></li>
<li><a href="https://github.com/symfony/symfony/commit/7d1032bbead9a4229b32fa6ebca32681c80cb76f">https://github.com/symfony/symfony/commit/7d1032bbead9a4229b32fa6ebca32681c80cb76f</a></li>
<li><a href="https://github.com/FriendsOfPHP/security-advisories/blob/master/symfony/symfony/CVE-2024-50343.yaml">https://github.com/FriendsOfPHP/security-advisories/blob/master/symfony/symfony/CVE-2024-50343.yaml</a></li>
<li><a href="https://github.com/FriendsOfPHP/security-advisories/blob/master/symfony/validator/CVE-2024-50343.yaml">https://github.com/FriendsOfPHP/security-advisories/blob/master/symfony/validator/CVE-2024-50343.yaml</a></li>
<li><a href="https://symfony.com/cve-2024-50343">https://symfony.com/cve-2024-50343</a></li>
<li><a href="https://github.com/advisories/GHSA-g3rh-rrhp-jhh9">https://github.com/advisories/GHSA-g3rh-rrhp-jhh9</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-g3rh-rrhp-jhh9</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2024-11-06T15:21:08.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[symfony/symfony] Symfony has an incorrect response from Validator when input ends with `\n`]]></title>
        <id>https://github.com/advisories/GHSA-g3rh-rrhp-jhh9</id>
        <link href="https://github.com/advisories/GHSA-g3rh-rrhp-jhh9"/>
        <updated>2024-11-06T15:21:09.000Z</updated>
        <content type="html"><![CDATA[<h3 id="description">Description</h3>
<p>It is possible to trick a <code>Validator</code> configured with a regular expression using the <code>$</code> metacharacters, with an input ending with <code>\n</code>.</p>
<h3 id="resolution">Resolution</h3>
<p>Symfony now uses the <code>D</code> regex modifier to match the entire input.</p>
<p>The patch for this issue is available <a href="https://github.com/symfony/symfony/commit/7d1032bbead9a4229b32fa6ebca32681c80cb76f">here</a> for branch 5.4.</p>
<h3 id="credits">Credits</h3>
<p>We would like to thank Offscript for reporting the issue and Alexandre Daubois for providing the fix.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/symfony/symfony/security/advisories/GHSA-g3rh-rrhp-jhh9">https://github.com/symfony/symfony/security/advisories/GHSA-g3rh-rrhp-jhh9</a></li>
<li><a href="https://github.com/symfony/symfony/commit/7d1032bbead9a4229b32fa6ebca32681c80cb76f">https://github.com/symfony/symfony/commit/7d1032bbead9a4229b32fa6ebca32681c80cb76f</a></li>
<li><a href="https://github.com/FriendsOfPHP/security-advisories/blob/master/symfony/symfony/CVE-2024-50343.yaml">https://github.com/FriendsOfPHP/security-advisories/blob/master/symfony/symfony/CVE-2024-50343.yaml</a></li>
<li><a href="https://github.com/FriendsOfPHP/security-advisories/blob/master/symfony/validator/CVE-2024-50343.yaml">https://github.com/FriendsOfPHP/security-advisories/blob/master/symfony/validator/CVE-2024-50343.yaml</a></li>
<li><a href="https://symfony.com/cve-2024-50343">https://symfony.com/cve-2024-50343</a></li>
<li><a href="https://github.com/advisories/GHSA-g3rh-rrhp-jhh9">https://github.com/advisories/GHSA-g3rh-rrhp-jhh9</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-g3rh-rrhp-jhh9</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2024-11-06T15:21:08.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[symfony/symfony] Symfony allows internal address and port enumeration by NoPrivateNetworkHttpClient]]></title>
        <id>https://github.com/advisories/GHSA-9c3x-r3wp-mgxm</id>
        <link href="https://github.com/advisories/GHSA-9c3x-r3wp-mgxm"/>
        <updated>2024-11-06T15:16:11.000Z</updated>
        <content type="html"><![CDATA[<h3 id="description">Description</h3>
<p>When using the <code>NoPrivateNetworkHttpClient</code>, some internal information is still leaking during host resolution, which leads to possible IP/port enumeration.</p>
<h3 id="resolution">Resolution</h3>
<p>The <code>NoPrivateNetworkHttpClient</code> now filters blocked IPs earlier to prevent such leaks.</p>
<p>The patch for this issue is available <a href="https://github.com/symfony/symfony/commit/296d4b34a33b1a6ca5475c6040b3203622520f5b">here</a> for branch 5.4.</p>
<h3 id="credits">Credits</h3>
<p>We would like to thank Linus Karlsson for reporting the issue and Nicolas Grekas for providing the fix.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/symfony/symfony/security/advisories/GHSA-9c3x-r3wp-mgxm">https://github.com/symfony/symfony/security/advisories/GHSA-9c3x-r3wp-mgxm</a></li>
<li><a href="https://github.com/symfony/symfony/commit/296d4b34a33b1a6ca5475c6040b3203622520f5b">https://github.com/symfony/symfony/commit/296d4b34a33b1a6ca5475c6040b3203622520f5b</a></li>
<li><a href="https://github.com/FriendsOfPHP/security-advisories/blob/master/symfony/http-client/CVE-2024-50342.yaml">https://github.com/FriendsOfPHP/security-advisories/blob/master/symfony/http-client/CVE-2024-50342.yaml</a></li>
<li><a href="https://github.com/FriendsOfPHP/security-advisories/blob/master/symfony/symfony/CVE-2024-50342.yaml">https://github.com/FriendsOfPHP/security-advisories/blob/master/symfony/symfony/CVE-2024-50342.yaml</a></li>
<li><a href="https://symfony.com/cve-2024-50342">https://symfony.com/cve-2024-50342</a></li>
<li><a href="https://github.com/advisories/GHSA-9c3x-r3wp-mgxm">https://github.com/advisories/GHSA-9c3x-r3wp-mgxm</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-9c3x-r3wp-mgxm</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2024-11-06T15:16:09.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[symfony/symfony] Symfony allows internal address and port enumeration by NoPrivateNetworkHttpClient]]></title>
        <id>https://github.com/advisories/GHSA-9c3x-r3wp-mgxm</id>
        <link href="https://github.com/advisories/GHSA-9c3x-r3wp-mgxm"/>
        <updated>2024-11-06T15:16:11.000Z</updated>
        <content type="html"><![CDATA[<h3 id="description">Description</h3>
<p>When using the <code>NoPrivateNetworkHttpClient</code>, some internal information is still leaking during host resolution, which leads to possible IP/port enumeration.</p>
<h3 id="resolution">Resolution</h3>
<p>The <code>NoPrivateNetworkHttpClient</code> now filters blocked IPs earlier to prevent such leaks.</p>
<p>The patch for this issue is available <a href="https://github.com/symfony/symfony/commit/296d4b34a33b1a6ca5475c6040b3203622520f5b">here</a> for branch 5.4.</p>
<h3 id="credits">Credits</h3>
<p>We would like to thank Linus Karlsson for reporting the issue and Nicolas Grekas for providing the fix.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/symfony/symfony/security/advisories/GHSA-9c3x-r3wp-mgxm">https://github.com/symfony/symfony/security/advisories/GHSA-9c3x-r3wp-mgxm</a></li>
<li><a href="https://github.com/symfony/symfony/commit/296d4b34a33b1a6ca5475c6040b3203622520f5b">https://github.com/symfony/symfony/commit/296d4b34a33b1a6ca5475c6040b3203622520f5b</a></li>
<li><a href="https://github.com/FriendsOfPHP/security-advisories/blob/master/symfony/http-client/CVE-2024-50342.yaml">https://github.com/FriendsOfPHP/security-advisories/blob/master/symfony/http-client/CVE-2024-50342.yaml</a></li>
<li><a href="https://github.com/FriendsOfPHP/security-advisories/blob/master/symfony/symfony/CVE-2024-50342.yaml">https://github.com/FriendsOfPHP/security-advisories/blob/master/symfony/symfony/CVE-2024-50342.yaml</a></li>
<li><a href="https://symfony.com/cve-2024-50342">https://symfony.com/cve-2024-50342</a></li>
<li><a href="https://github.com/advisories/GHSA-9c3x-r3wp-mgxm">https://github.com/advisories/GHSA-9c3x-r3wp-mgxm</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-9c3x-r3wp-mgxm</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2024-11-06T15:16:09.000Z</published>
    </entry>
</feed>