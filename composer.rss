<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://azu.github.io/github-advisory-database-rss/composer.rss</id>
    <title>Security Advisory for PHP packages hosted at packagist.org</title>
    <updated>2025-05-20T18:02:00.136Z</updated>
    <generator>github-advisory-database-rss</generator>
    <link rel="alternate" href="https://github.com/advisories?query=type%3Areviewed+ecosystem%3Acomposer"/>
    <subtitle>Security Advisory for PHP packages hosted at packagist.org on GitHub</subtitle>
    <rights>github-advisory-database-rss</rights>
    <category term="CRITICAL"/>
    <category term="HIGH"/>
    <category term="MODERATE"/>
    <category term="LOW"/>
    <entry>
        <title type="html"><![CDATA[[couleurcitron/tarteaucitron-wp]  tarteaucitron-wp WordPress Plugin Vulnerable to Stored Cross-Site Scripting]]></title>
        <id>https://github.com/advisories/GHSA-fxpc-qmrh-7j2h</id>
        <link href="https://github.com/advisories/GHSA-fxpc-qmrh-7j2h"/>
        <updated>2025-05-20T17:55:40.000Z</updated>
        <content type="html"><![CDATA[<p>The tarteaucitron-wp WordPress plugin before 0.3.0 allows author level and above users to add HTML into a post/page, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-11718">https://nvd.nist.gov/vuln/detail/CVE-2024-11718</a></li>
<li><a href="https://wpscan.com/vulnerability/02da3a49-20e4-4476-a78d-4c627994a90a">https://wpscan.com/vulnerability/02da3a49-20e4-4476-a78d-4c627994a90a</a></li>
<li><a href="https://github.com/advisories/GHSA-fxpc-qmrh-7j2h">https://github.com/advisories/GHSA-fxpc-qmrh-7j2h</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-fxpc-qmrh-7j2h</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2025-05-15T21:31:28.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[symfony/ux-live-component] Symfony UX allows unsanitized HTML attribute injection via ComponentAttributes]]></title>
        <id>https://github.com/advisories/GHSA-5j3w-5pcr-f8hg</id>
        <link href="https://github.com/advisories/GHSA-5j3w-5pcr-f8hg"/>
        <updated>2025-05-19T22:24:47.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>Rendering <code>{{ attributes }}</code> or using any method that returns a <code>ComponentAttributes</code> instance (e.g. <code>only()</code>, <code>defaults()</code>, <code>without()</code>) ouputs attribute values directly without escaping. If these values are unsafe (e.g. contain user input), this can lead to HTML attribute injection and XSS vulnerabilities.</p>
<h3 id="patches">Patches</h3>
<p>The issue is fixed in version <code>2.25.1</code> of <code>symfony/ux-twig-component</code> by using Twig's <code>EscaperRuntime</code> to properly escape HTML attributes in <code>ComponentAttributes</code>.  If you use <code>symfony/ux-live-component</code>, you must also update it to <code>2.25.1</code> to benefit from the fix, as it reuses the <code>ComponentAttributes</code> class internally.</p>
<h3 id="workarounds">Workarounds</h3>
<p>Until you can upgrade, avoid rendering <code>{{ attributes }}</code> or derived objects directly if it may contain untrusted values.
Instead, use <code>{{ attributes.render('name') }}</code> for safe output of individual attributes.</p>
<h3 id="references">References</h3>
<p>GitHub repository: <a href="https://github.com/symfony/ux">symfony/ux</a></p>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/symfony/ux/security/advisories/GHSA-5j3w-5pcr-f8hg">https://github.com/symfony/ux/security/advisories/GHSA-5j3w-5pcr-f8hg</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2025-47946">https://nvd.nist.gov/vuln/detail/CVE-2025-47946</a></li>
<li><a href="https://github.com/symfony/ux-live-component/commit/7ad44cf56d750b9f56658ed986286a10da132ee7">https://github.com/symfony/ux-live-component/commit/7ad44cf56d750b9f56658ed986286a10da132ee7</a></li>
<li><a href="https://github.com/symfony/ux-twig-component/commit/b5d4e77db69315aeb18d2238e0e7c943d340ce76">https://github.com/symfony/ux-twig-component/commit/b5d4e77db69315aeb18d2238e0e7c943d340ce76</a></li>
<li><a href="https://github.com/symfony/ux/commit/b5d1c85995c128cb926d47a96cfbfbd500b643a8">https://github.com/symfony/ux/commit/b5d1c85995c128cb926d47a96cfbfbd500b643a8</a></li>
<li><a href="https://github.com/symfony/ux/commit/c2f7738ee0969c31df7514025a7f5fc6e153932d">https://github.com/symfony/ux/commit/c2f7738ee0969c31df7514025a7f5fc6e153932d</a></li>
<li><a href="https://github.com/advisories/GHSA-5j3w-5pcr-f8hg">https://github.com/advisories/GHSA-5j3w-5pcr-f8hg</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-5j3w-5pcr-f8hg</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2025-05-19T22:24:45.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[symfony/ux-twig-component] Symfony UX allows unsanitized HTML attribute injection via ComponentAttributes]]></title>
        <id>https://github.com/advisories/GHSA-5j3w-5pcr-f8hg</id>
        <link href="https://github.com/advisories/GHSA-5j3w-5pcr-f8hg"/>
        <updated>2025-05-19T22:24:47.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>Rendering <code>{{ attributes }}</code> or using any method that returns a <code>ComponentAttributes</code> instance (e.g. <code>only()</code>, <code>defaults()</code>, <code>without()</code>) ouputs attribute values directly without escaping. If these values are unsafe (e.g. contain user input), this can lead to HTML attribute injection and XSS vulnerabilities.</p>
<h3 id="patches">Patches</h3>
<p>The issue is fixed in version <code>2.25.1</code> of <code>symfony/ux-twig-component</code> by using Twig's <code>EscaperRuntime</code> to properly escape HTML attributes in <code>ComponentAttributes</code>.  If you use <code>symfony/ux-live-component</code>, you must also update it to <code>2.25.1</code> to benefit from the fix, as it reuses the <code>ComponentAttributes</code> class internally.</p>
<h3 id="workarounds">Workarounds</h3>
<p>Until you can upgrade, avoid rendering <code>{{ attributes }}</code> or derived objects directly if it may contain untrusted values.
Instead, use <code>{{ attributes.render('name') }}</code> for safe output of individual attributes.</p>
<h3 id="references">References</h3>
<p>GitHub repository: <a href="https://github.com/symfony/ux">symfony/ux</a></p>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/symfony/ux/security/advisories/GHSA-5j3w-5pcr-f8hg">https://github.com/symfony/ux/security/advisories/GHSA-5j3w-5pcr-f8hg</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2025-47946">https://nvd.nist.gov/vuln/detail/CVE-2025-47946</a></li>
<li><a href="https://github.com/symfony/ux-live-component/commit/7ad44cf56d750b9f56658ed986286a10da132ee7">https://github.com/symfony/ux-live-component/commit/7ad44cf56d750b9f56658ed986286a10da132ee7</a></li>
<li><a href="https://github.com/symfony/ux-twig-component/commit/b5d4e77db69315aeb18d2238e0e7c943d340ce76">https://github.com/symfony/ux-twig-component/commit/b5d4e77db69315aeb18d2238e0e7c943d340ce76</a></li>
<li><a href="https://github.com/symfony/ux/commit/b5d1c85995c128cb926d47a96cfbfbd500b643a8">https://github.com/symfony/ux/commit/b5d1c85995c128cb926d47a96cfbfbd500b643a8</a></li>
<li><a href="https://github.com/symfony/ux/commit/c2f7738ee0969c31df7514025a7f5fc6e153932d">https://github.com/symfony/ux/commit/c2f7738ee0969c31df7514025a7f5fc6e153932d</a></li>
<li><a href="https://github.com/advisories/GHSA-5j3w-5pcr-f8hg">https://github.com/advisories/GHSA-5j3w-5pcr-f8hg</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-5j3w-5pcr-f8hg</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2025-05-19T22:24:45.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[librenms/librenms] LibreNMS stored Cross-site Scripting vulnerability in poller group name]]></title>
        <id>https://github.com/advisories/GHSA-hxw5-9cc5-cmw5</id>
        <link href="https://github.com/advisories/GHSA-hxw5-9cc5-cmw5"/>
        <updated>2025-05-19T16:22:54.000Z</updated>
        <content type="html"><![CDATA[<h3 id="librenms-v2540-suffers-from-stored-cross-site-scripting-xss-vulnerability-in-the-group-name-parameter-of-the-httplocalhostpollergroups-form-this-vulnerability-allows-attackers-to-inject-malicious-scripts-into-web-pages-viewed-by-other-users">LibreNMS v25.4.0 suffers from Stored Cross-Site Scripting (XSS) Vulnerability in the 'group name' parameter of the '<a href="http://localhost/poller/groups">http://localhost/poller/groups</a>' form. This vulnerability allows attackers to inject malicious scripts into web pages viewed by other users.</h3>
<h2 id="---------------------------------poc-----------------------------">---------------------------------POC-----------------------------</h2>
<p>Before Setting: Enable 'distributed_poller' in <a href="http://localhost/settings/poller/distributed">http://localhost/settings/poller/distributed</a></p>
<ol>
<li>Attacker creates a new poller group and injects the payload in the 'group name' parameter</li>
</ol>
<pre><code>payload: &lt;script&gt;alert('XSS')&lt;/script&gt;
</code></pre>
<ol start="2">
<li>Victim navigates to the '<a href="http://localhost/addhost">http://localhost/addhost</a>' to add a new host</li>
<li>The payload is executed</li>
</ol>
<p>code sink:
<a href="https://github.com/librenms/librenms/blob/25.4.0/includes/html/pages/addhost.inc.php#L284">https://github.com/librenms/librenms/blob/25.4.0/includes/html/pages/addhost.inc.php#L284</a></p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/librenms/librenms/security/advisories/GHSA-hxw5-9cc5-cmw5">https://github.com/librenms/librenms/security/advisories/GHSA-hxw5-9cc5-cmw5</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2025-47931">https://nvd.nist.gov/vuln/detail/CVE-2025-47931</a></li>
<li><a href="https://github.com/librenms/librenms/pull/17603">https://github.com/librenms/librenms/pull/17603</a></li>
<li><a href="https://github.com/librenms/librenms/commit/88fe1a7abdb500d9a2d4c45f9872df54c9ff8062">https://github.com/librenms/librenms/commit/88fe1a7abdb500d9a2d4c45f9872df54c9ff8062</a></li>
<li><a href="https://github.com/librenms/librenms/blob/25.4.0/includes/html/pages/addhost.inc.php#L284">https://github.com/librenms/librenms/blob/25.4.0/includes/html/pages/addhost.inc.php#L284</a></li>
<li><a href="https://github.com/advisories/GHSA-hxw5-9cc5-cmw5">https://github.com/advisories/GHSA-hxw5-9cc5-cmw5</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-hxw5-9cc5-cmw5</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2025-05-19T16:22:53.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[auth0/login] laravel-auth0 SDK Vulnerable to Brute Force Authentication Tags of CookieStore Sessions]]></title>
        <id>https://github.com/advisories/GHSA-9fwj-9mjf-rhj3</id>
        <link href="https://github.com/advisories/GHSA-9fwj-9mjf-rhj3"/>
        <updated>2025-05-17T15:07:56.000Z</updated>
        <content type="html"><![CDATA[<p><strong>Overview</strong>
Session cookies of applications using the laravel-auth0 SDK configured with CookieStore have authentication tags that can be brute forced, which may result in unauthorized access.</p>
<p><strong>Am I Affected?</strong>
You are affected by this vulnerability if you meet the following pre-conditions:</p>
<ol>
<li>Applications using laravel-auth0 SDK with version &lt;=7.16.0</li>
<li>laravel-auth0 SDK uses the Auth0-PHP SDK with version 8.0.0-BETA1 or higher and below 8.14.0.  </li>
<li>Session storage configured with CookieStore.</li>
</ol>
<p><strong>Fix</strong>
Upgrade Auth0/laravel-auth0 to v7.17.0. As an additional precautionary measure, we recommend rotating your cookie encryption keys. Note that once updated, any previous session cookies will be rejected.</p>
<p><strong>Acknowledgement</strong>
Okta would like to thank Félix Charette for discovering this vulnerability.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/auth0/laravel-auth0/security/advisories/GHSA-9fwj-9mjf-rhj3">https://github.com/auth0/laravel-auth0/security/advisories/GHSA-9fwj-9mjf-rhj3</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2025-47275">https://nvd.nist.gov/vuln/detail/CVE-2025-47275</a></li>
<li><a href="https://github.com/auth0/laravel-auth0/commit/be2c59adb476c49945dcc55741a54c7a68c1741d">https://github.com/auth0/laravel-auth0/commit/be2c59adb476c49945dcc55741a54c7a68c1741d</a></li>
<li><a href="https://github.com/auth0/laravel-auth0/releases/tag/7.17.0">https://github.com/auth0/laravel-auth0/releases/tag/7.17.0</a></li>
<li><a href="https://github.com/advisories/GHSA-9fwj-9mjf-rhj3">https://github.com/advisories/GHSA-9fwj-9mjf-rhj3</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-9fwj-9mjf-rhj3</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2025-05-17T15:07:55.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[auth0/wordpress] Auth0 Wordpress plugin Vulnerable to Brute Force Authentication Tags of CookieStore Sessions]]></title>
        <id>https://github.com/advisories/GHSA-2f4r-34m4-3w8q</id>
        <link href="https://github.com/advisories/GHSA-2f4r-34m4-3w8q"/>
        <updated>2025-05-17T15:07:24.000Z</updated>
        <content type="html"><![CDATA[<p><strong>Overview</strong>
Session cookies of applications using the Auth0 Wordpress plugin configured with CookieStore have authentication tags that can be brute forced, which may result in unauthorized access.</p>
<p><strong>Am I Affected?</strong>
You are affected by this vulnerability if you meet the following pre-conditions:</p>
<ol>
<li>Applications using the Auth0 WordPress Plugin with version &lt;=5.2.1</li>
<li>Auth0 WordPress Plugin uses the Auth0-PHP SDK with version 8.0.0-BETA1 or higher and below 8.14.0. </li>
<li>Session storage configured with CookieStore.</li>
</ol>
<p><strong>Fix</strong>
Upgrade Auth0/wordpress plugin to v5.3.0. As an additional precautionary measure, we recommend rotating your cookie encryption keys. Note that once updated, any previous session cookies will be rejected.</p>
<p><strong>Acknowledgement</strong>
Okta would like to thank Félix Charette for discovering this vulnerability.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/auth0/wordpress/security/advisories/GHSA-2f4r-34m4-3w8q">https://github.com/auth0/wordpress/security/advisories/GHSA-2f4r-34m4-3w8q</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2025-47275">https://nvd.nist.gov/vuln/detail/CVE-2025-47275</a></li>
<li><a href="https://github.com/auth0/wordpress/commit/06b64468089472d8b62c881708be7eb3749b35ac">https://github.com/auth0/wordpress/commit/06b64468089472d8b62c881708be7eb3749b35ac</a></li>
<li><a href="https://github.com/auth0/wordpress/releases/tag/5.3.0">https://github.com/auth0/wordpress/releases/tag/5.3.0</a></li>
<li><a href="https://github.com/advisories/GHSA-2f4r-34m4-3w8q">https://github.com/advisories/GHSA-2f4r-34m4-3w8q</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-2f4r-34m4-3w8q</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2025-05-17T15:07:23.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[auth0/symfony] Auth0 Symfony SDK Vulnerable to Brute Force Authentication Tags of CookieStore Sessions]]></title>
        <id>https://github.com/advisories/GHSA-9wg9-93h9-j8ch</id>
        <link href="https://github.com/advisories/GHSA-9wg9-93h9-j8ch"/>
        <updated>2025-05-17T15:06:55.000Z</updated>
        <content type="html"><![CDATA[<p><strong>Overview</strong>
Session cookies of applications using the Auth0 symfony SDK configured with CookieStore have authentication tags that can be brute forced, which may result in unauthorized access.</p>
<p><strong>Am I Affected?</strong>
You are affected by this vulnerability if you meet the following pre-conditions:</p>
<ol>
<li>Applications using the Auth0 symfony SDK with version &lt;=5.3.1</li>
<li>Auth0/Symfony SDK uses the Auth0-PHP SDK with version 8.0.0-BETA1 or higher and below 8.14.0. </li>
<li>Session storage configured with CookieStore.</li>
</ol>
<p><strong>Fix</strong>
Upgrade Auth0/symfony to v5.4.0. As an additional precautionary measure, we recommend rotating your cookie encryption keys. Note that once updated, any previous session cookies will be rejected.</p>
<p><strong>Acknowledgement</strong>
Okta would like to thank Félix Charette for discovering this vulnerability.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/auth0/symfony/security/advisories/GHSA-9wg9-93h9-j8ch">https://github.com/auth0/symfony/security/advisories/GHSA-9wg9-93h9-j8ch</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2025-47275">https://nvd.nist.gov/vuln/detail/CVE-2025-47275</a></li>
<li><a href="https://github.com/auth0/symfony/commit/9a7294f08a32f17a0e77c8522a648195b6940340">https://github.com/auth0/symfony/commit/9a7294f08a32f17a0e77c8522a648195b6940340</a></li>
<li><a href="https://github.com/auth0/symfony/releases/tag/5.4.0">https://github.com/auth0/symfony/releases/tag/5.4.0</a></li>
<li><a href="https://github.com/advisories/GHSA-9wg9-93h9-j8ch">https://github.com/advisories/GHSA-9wg9-93h9-j8ch</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-9wg9-93h9-j8ch</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2025-05-17T15:06:54.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[auth0/auth0-php] Forgeable Encrypted Session Cookie in Apps Using Auth0-PHP SDK]]></title>
        <id>https://github.com/advisories/GHSA-g98g-r7gf-2r25</id>
        <link href="https://github.com/advisories/GHSA-g98g-r7gf-2r25"/>
        <updated>2025-05-16T17:48:56.000Z</updated>
        <content type="html"><![CDATA[<p><strong>Overview</strong>
Session cookies of applications using the Auth0-PHP SDK configured with CookieStore have authentication tags that can be brute forced, which may result in unauthorized access.</p>
<p><strong>Am I Affected?</strong>
You are affected by this vulnerability if you meet the following pre-conditions:</p>
<ol>
<li>Applications using the Auth0-PHP SDK, or the following SDKs that rely on the Auth0-PHP SDK:
 a. Auth0/symfony,
 b. Auth0/laravel-auth0,
 c. Auth0/wordpress,</li>
<li>Session storage configured with CookieStore.</li>
</ol>
<p><strong>Fix</strong>
Upgrade Auth0/Auth0-PHP to v8.14.0. As an additional precautionary measure, we recommend rotating your cookie encryption keys. Note that once updated, any previous session cookies will be rejected.</p>
<p><strong>Acknowledgement</strong>
Okta would like to thank Félix Charette for discovering this vulnerability.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/auth0/auth0-PHP/security/advisories/GHSA-g98g-r7gf-2r25">https://github.com/auth0/auth0-PHP/security/advisories/GHSA-g98g-r7gf-2r25</a></li>
<li><a href="https://github.com/auth0/laravel-auth0/security/advisories/GHSA-9fwj-9mjf-rhj3">https://github.com/auth0/laravel-auth0/security/advisories/GHSA-9fwj-9mjf-rhj3</a></li>
<li><a href="https://github.com/auth0/symfony/security/advisories/GHSA-9wg9-93h9-j8ch">https://github.com/auth0/symfony/security/advisories/GHSA-9wg9-93h9-j8ch</a></li>
<li><a href="https://github.com/auth0/wordpress/security/advisories/GHSA-2f4r-34m4-3w8q">https://github.com/auth0/wordpress/security/advisories/GHSA-2f4r-34m4-3w8q</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2025-47275">https://nvd.nist.gov/vuln/detail/CVE-2025-47275</a></li>
<li><a href="https://github.com/auth0/auth0-PHP/commit/52a79480fdb246f59dbc089b81a784ae049bd389">https://github.com/auth0/auth0-PHP/commit/52a79480fdb246f59dbc089b81a784ae049bd389</a></li>
<li><a href="https://github.com/auth0/auth0-PHP/releases/tag/8.14.0">https://github.com/auth0/auth0-PHP/releases/tag/8.14.0</a></li>
<li><a href="https://github.com/advisories/GHSA-g98g-r7gf-2r25">https://github.com/advisories/GHSA-g98g-r7gf-2r25</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-g98g-r7gf-2r25</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2025-05-16T17:48:55.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[zoujingli/thinkadmin] ThinkAdmin insecure unserialize vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-4vp2-mj4m-69m4</id>
        <link href="https://github.com/advisories/GHSA-4vp2-mj4m-69m4"/>
        <updated>2025-05-15T18:48:22.000Z</updated>
        <content type="html"><![CDATA[<p>An insecure unserialize vulnerability was discovered in ThinkAdmin versions 4.x through 6.x in <code>app/admin/controller/api/Update.php </code>and <code>app/wechat/controller/api/Push.php</code>, which may lead to arbitrary remote code execution.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2020-23653">https://nvd.nist.gov/vuln/detail/CVE-2020-23653</a></li>
<li><a href="https://github.com/zoujingli/ThinkAdmin/issues/238">https://github.com/zoujingli/ThinkAdmin/issues/238</a></li>
<li><a href="https://github.com/zoujingli/ThinkAdmin/commit/640a61ae0772dcd5209d74dff8ad373e61e8ad8c">https://github.com/zoujingli/ThinkAdmin/commit/640a61ae0772dcd5209d74dff8ad373e61e8ad8c</a></li>
<li><a href="https://github.com/zoujingli/ThinkAdmin/commit/6ccd4055fc40d2d7d154920a1859a7c19774bd1a">https://github.com/zoujingli/ThinkAdmin/commit/6ccd4055fc40d2d7d154920a1859a7c19774bd1a</a></li>
<li><a href="https://github.com/zoujingli/ThinkAdmin/commit/b8a2ded90866a285e9022c842e546d8a6fa5fa6d">https://github.com/zoujingli/ThinkAdmin/commit/b8a2ded90866a285e9022c842e546d8a6fa5fa6d</a></li>
<li><a href="https://github.com/advisories/GHSA-4vp2-mj4m-69m4">https://github.com/advisories/GHSA-4vp2-mj4m-69m4</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-4vp2-mj4m-69m4</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2022-05-24T17:38:58.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[sulu/sulu] Sulu vulnerable to XXE in SVG File upload Inspector]]></title>
        <id>https://github.com/advisories/GHSA-f6rx-hf55-4255</id>
        <link href="https://github.com/advisories/GHSA-f6rx-hf55-4255"/>
        <updated>2025-05-15T16:08:06.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>A admin user can upload SVG which may load external data via XML DOM library, specially this can be used for eventually reference none secure XML External Entity References.</p>
<h3 id="patches">Patches</h3>
<p>The problem has not been patched yet. Users should upgrade to patched versions once they become available. Currently affected versions are:</p>
<ul>
<li>2.6.9</li>
<li>2.5.25</li>
<li>3.0.0-alpha3</li>
</ul>
<h3 id="workarounds">Workarounds</h3>
<p>Patch the effect file <code>src/Sulu/Bundle/MediaBundle/FileInspector/SvgFileInspector.php</code> in sulu with:</p>
<pre><code class="language-diff">-$dom-&gt;loadXML($svg, \LIBXML_NOENT | \LIBXML_DTDLOAD);
+$dom-&gt;loadXML($data, LIBXML_NONET);
</code></pre>
<h3 id="references">References</h3>
<ul>
<li>GitHub repository: <a href="https://github.com/sulu/sulu">https://github.com/sulu/sulu</a></li>
<li>Vulnerable code: <a href="https://github.com/sulu/sulu/blob/2.6/src/Sulu/Bundle/MediaBundle/FileInspector/SvgFileInspector.php">https://github.com/sulu/sulu/blob/2.6/src/Sulu/Bundle/MediaBundle/FileInspector/SvgFileInspector.php</a></li>
</ul>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/sulu/sulu/security/advisories/GHSA-f6rx-hf55-4255">https://github.com/sulu/sulu/security/advisories/GHSA-f6rx-hf55-4255</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2025-47778">https://nvd.nist.gov/vuln/detail/CVE-2025-47778</a></li>
<li><a href="https://github.com/sulu/sulu/commit/02f52fca04eb9495b9b4a0c5cc64cf23bc27f544">https://github.com/sulu/sulu/commit/02f52fca04eb9495b9b4a0c5cc64cf23bc27f544</a></li>
<li><a href="https://github.com/sulu/sulu/blob/2.6/src/Sulu/Bundle/MediaBundle/FileInspector/SvgFileInspector.php">https://github.com/sulu/sulu/blob/2.6/src/Sulu/Bundle/MediaBundle/FileInspector/SvgFileInspector.php</a></li>
<li><a href="https://github.com/advisories/GHSA-f6rx-hf55-4255">https://github.com/advisories/GHSA-f6rx-hf55-4255</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-f6rx-hf55-4255</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2025-05-15T16:08:02.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[sulu/sulu] Sulu vulnerable to XXE in SVG File upload Inspector]]></title>
        <id>https://github.com/advisories/GHSA-f6rx-hf55-4255</id>
        <link href="https://github.com/advisories/GHSA-f6rx-hf55-4255"/>
        <updated>2025-05-15T16:08:06.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>A admin user can upload SVG which may load external data via XML DOM library, specially this can be used for eventually reference none secure XML External Entity References.</p>
<h3 id="patches">Patches</h3>
<p>The problem has not been patched yet. Users should upgrade to patched versions once they become available. Currently affected versions are:</p>
<ul>
<li>2.6.9</li>
<li>2.5.25</li>
<li>3.0.0-alpha3</li>
</ul>
<h3 id="workarounds">Workarounds</h3>
<p>Patch the effect file <code>src/Sulu/Bundle/MediaBundle/FileInspector/SvgFileInspector.php</code> in sulu with:</p>
<pre><code class="language-diff">-$dom-&gt;loadXML($svg, \LIBXML_NOENT | \LIBXML_DTDLOAD);
+$dom-&gt;loadXML($data, LIBXML_NONET);
</code></pre>
<h3 id="references">References</h3>
<ul>
<li>GitHub repository: <a href="https://github.com/sulu/sulu">https://github.com/sulu/sulu</a></li>
<li>Vulnerable code: <a href="https://github.com/sulu/sulu/blob/2.6/src/Sulu/Bundle/MediaBundle/FileInspector/SvgFileInspector.php">https://github.com/sulu/sulu/blob/2.6/src/Sulu/Bundle/MediaBundle/FileInspector/SvgFileInspector.php</a></li>
</ul>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/sulu/sulu/security/advisories/GHSA-f6rx-hf55-4255">https://github.com/sulu/sulu/security/advisories/GHSA-f6rx-hf55-4255</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2025-47778">https://nvd.nist.gov/vuln/detail/CVE-2025-47778</a></li>
<li><a href="https://github.com/sulu/sulu/commit/02f52fca04eb9495b9b4a0c5cc64cf23bc27f544">https://github.com/sulu/sulu/commit/02f52fca04eb9495b9b4a0c5cc64cf23bc27f544</a></li>
<li><a href="https://github.com/sulu/sulu/blob/2.6/src/Sulu/Bundle/MediaBundle/FileInspector/SvgFileInspector.php">https://github.com/sulu/sulu/blob/2.6/src/Sulu/Bundle/MediaBundle/FileInspector/SvgFileInspector.php</a></li>
<li><a href="https://github.com/advisories/GHSA-f6rx-hf55-4255">https://github.com/advisories/GHSA-f6rx-hf55-4255</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-f6rx-hf55-4255</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2025-05-15T16:08:02.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[sulu/sulu] Sulu vulnerable to XXE in SVG File upload Inspector]]></title>
        <id>https://github.com/advisories/GHSA-f6rx-hf55-4255</id>
        <link href="https://github.com/advisories/GHSA-f6rx-hf55-4255"/>
        <updated>2025-05-15T16:08:06.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>A admin user can upload SVG which may load external data via XML DOM library, specially this can be used for eventually reference none secure XML External Entity References.</p>
<h3 id="patches">Patches</h3>
<p>The problem has not been patched yet. Users should upgrade to patched versions once they become available. Currently affected versions are:</p>
<ul>
<li>2.6.9</li>
<li>2.5.25</li>
<li>3.0.0-alpha3</li>
</ul>
<h3 id="workarounds">Workarounds</h3>
<p>Patch the effect file <code>src/Sulu/Bundle/MediaBundle/FileInspector/SvgFileInspector.php</code> in sulu with:</p>
<pre><code class="language-diff">-$dom-&gt;loadXML($svg, \LIBXML_NOENT | \LIBXML_DTDLOAD);
+$dom-&gt;loadXML($data, LIBXML_NONET);
</code></pre>
<h3 id="references">References</h3>
<ul>
<li>GitHub repository: <a href="https://github.com/sulu/sulu">https://github.com/sulu/sulu</a></li>
<li>Vulnerable code: <a href="https://github.com/sulu/sulu/blob/2.6/src/Sulu/Bundle/MediaBundle/FileInspector/SvgFileInspector.php">https://github.com/sulu/sulu/blob/2.6/src/Sulu/Bundle/MediaBundle/FileInspector/SvgFileInspector.php</a></li>
</ul>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/sulu/sulu/security/advisories/GHSA-f6rx-hf55-4255">https://github.com/sulu/sulu/security/advisories/GHSA-f6rx-hf55-4255</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2025-47778">https://nvd.nist.gov/vuln/detail/CVE-2025-47778</a></li>
<li><a href="https://github.com/sulu/sulu/commit/02f52fca04eb9495b9b4a0c5cc64cf23bc27f544">https://github.com/sulu/sulu/commit/02f52fca04eb9495b9b4a0c5cc64cf23bc27f544</a></li>
<li><a href="https://github.com/sulu/sulu/blob/2.6/src/Sulu/Bundle/MediaBundle/FileInspector/SvgFileInspector.php">https://github.com/sulu/sulu/blob/2.6/src/Sulu/Bundle/MediaBundle/FileInspector/SvgFileInspector.php</a></li>
<li><a href="https://github.com/advisories/GHSA-f6rx-hf55-4255">https://github.com/advisories/GHSA-f6rx-hf55-4255</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-f6rx-hf55-4255</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2025-05-15T16:08:02.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[oxid-esales/oxideshop-ce] OXID eShop May Display User Information]]></title>
        <id>https://github.com/advisories/GHSA-qqcr-9jfc-35c4</id>
        <link href="https://github.com/advisories/GHSA-qqcr-9jfc-35c4"/>
        <updated>2025-05-14T17:33:46.000Z</updated>
        <content type="html"><![CDATA[<p>An issue was discovered in OXID eShop before 7. CMS pages in combination with Smarty may display user information if a CMS page contains a Smarty syntax error.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-56526">https://nvd.nist.gov/vuln/detail/CVE-2024-56526</a></li>
<li><a href="https://bugs.oxid-esales.com/view.php?id=7743">https://bugs.oxid-esales.com/view.php?id=7743</a></li>
<li><a href="https://github.com/advisories/GHSA-qqcr-9jfc-35c4">https://github.com/advisories/GHSA-qqcr-9jfc-35c4</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-qqcr-9jfc-35c4</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2025-05-13T18:30:52.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[getkirby/kirby] Kirby vulnerable to path traversal of snippet names in the `snippet()` helper]]></title>
        <id>https://github.com/advisories/GHSA-fw82-87p8-v6hp</id>
        <link href="https://github.com/advisories/GHSA-fw82-87p8-v6hp"/>
        <updated>2025-05-13T20:02:24.000Z</updated>
        <content type="html"><![CDATA[<h3 id="tldr">TL;DR</h3>
<p>This vulnerability affects all Kirby sites that use the <code>snippet()</code> helper or <code>$kirby-&gt;snippet()</code> method with a dynamic snippet name (such as a snippet name that depends on request or user data).</p>
<p>Sites that only use fixed calls to the <code>snippet()</code> helper/<code>$kirby-&gt;snippet()</code> method (i.e. calls with a simple string for the snippet name) are <em>not</em> affected.</p>
<hr>
<h3 id="introduction">Introduction</h3>
<p>Kirby's <code>snippet()</code> helper and <code>$kirby-&gt;snippet()</code> method (in the following abbreviated to the <code>snippet()</code> helper) allow to load PHP snippet files that are normally stored in the <code>site/snippets</code> folder or registered by plugins through the <code>snippets</code> plugin extension.</p>
<p>If the <code>snippet()</code> helper is called with an arbitrary snippet name, Kirby first checks if a file with this name exists in the snippets root (which defaults to <code>site/snippets</code>).</p>
<p>This logic was vulnerable against path traversal attacks. By using special elements such as <code>..</code> and <code>/</code> separators, attackers can escape outside of the restricted location to access files or directories that are elsewhere on the system. One of the most common special elements is the <code>../</code> sequence, which in most modern operating systems is interpreted as the parent directory of the current location.</p>
<p>Because Kirby's <code>snippet()</code> helper did not protect against path traversal, the provided snippet name could include special sequences that would cause Kirby to look outside of the configured snippets root and access arbitrary files.</p>
<h3 id="impact">Impact</h3>
<p>The missing path traversal check allowed attackers to navigate and access all files on the server that were accessible to the PHP process, including files outside of the snippets root or even outside of the Kirby installation. PHP code within such files was executed.</p>
<p>Such attacks first require an attack vector in the site code that is caused by dynamic snippet names, such as <code>snippet('tags-' . get('tags'))</code>. It generally also requires knowledge of the site structure and the server's file system by the attacker, although it can be possible to find vulnerable setups through automated methods such as fuzzing.</p>
<p>In a vulnerable setup, this could cause damage to the confidentiality and integrity of the server, for example:</p>
<ul>
<li>it could allow the attacker to build a map of the server's file system for subsequent attacks,</li>
<li>it could allow access to configuration files that may contain sensitive information like security tokens or</li>
<li>it could cause the unintended execution of PHP scripts.</li>
</ul>
<h3 id="patches">Patches</h3>
<p>The problem has been patched in <a href="https://github.com/getkirby/kirby/releases/tag/3.9.8.3">Kirby 3.9.8.3</a>, <a href="https://github.com/getkirby/kirby/releases/tag/3.10.1.2">Kirby 3.10.1.2</a> and <a href="https://github.com/getkirby/kirby/releases/tag/4.7.1">Kirby 4.7.1</a>. Please update to one of these or a <a href="https://github.com/getkirby/kirby/releases">later version</a> to fix the vulnerability.</p>
<p>In all of the mentioned releases, we have added a check for the snippet path that ensures that the resulting path is contained within the configured snippets root. Snippet paths that point outside of the snippets root will not be loaded.</p>
<h3 id="effects-on-site-code">Effects on site code</h3>
<p>If you deliberately use path traversal in your projects, these uses will break after updating to one of the patched versions.</p>
<p>Examples of such uses include:</p>
<ul>
<li>Aliasing a template by loading another template with <code>snippet('../templates/other-template')</code>. Robust alternatives are to use <code>require __DIR__ . '/other-template.php'</code> or to override the <code>$page-&gt;template()</code> method in the page model:<pre><code class="language-php">class AnotherPage extends Page
{
  public function template(): Template
  {
    return $this-&gt;kirby()-&gt;template('other-template');
  }
}
</code></pre>
</li>
<li>Loading a snippet from a shared directory in a multisite setup. A robust alternative is to restructure the project so that all sites share a single snippets root that then branches off into subdirectories for each site. If you prefer to keep the original structure, you can use symbolic links (symlinks) in the file system to include the shared directory in the site-specific snippets roots.</li>
</ul>
<h3 id="credits">Credits</h3>
<p>Thanks to Bruno Meilick (@bnomei) for reporting the identified issue.
Thanks to Bruno Meilick and Tobias Möritz (@tobimori) for their input on the effects on site code.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/getkirby/kirby/security/advisories/GHSA-fw82-87p8-v6hp">https://github.com/getkirby/kirby/security/advisories/GHSA-fw82-87p8-v6hp</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2025-30159">https://nvd.nist.gov/vuln/detail/CVE-2025-30159</a></li>
<li><a href="https://github.com/getkirby/kirby/commit/90acf7ed6d8d9d0697f938edc0940b4a563ddbe7">https://github.com/getkirby/kirby/commit/90acf7ed6d8d9d0697f938edc0940b4a563ddbe7</a></li>
<li><a href="https://github.com/getkirby/kirby/releases/tag/3.10.1.2">https://github.com/getkirby/kirby/releases/tag/3.10.1.2</a></li>
<li><a href="https://github.com/getkirby/kirby/releases/tag/3.9.8.3">https://github.com/getkirby/kirby/releases/tag/3.9.8.3</a></li>
<li><a href="https://github.com/getkirby/kirby/releases/tag/4.7.1">https://github.com/getkirby/kirby/releases/tag/4.7.1</a></li>
<li><a href="https://github.com/advisories/GHSA-fw82-87p8-v6hp">https://github.com/advisories/GHSA-fw82-87p8-v6hp</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-fw82-87p8-v6hp</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2025-05-13T20:02:23.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[getkirby/kirby] Kirby vulnerable to path traversal of snippet names in the `snippet()` helper]]></title>
        <id>https://github.com/advisories/GHSA-fw82-87p8-v6hp</id>
        <link href="https://github.com/advisories/GHSA-fw82-87p8-v6hp"/>
        <updated>2025-05-13T20:02:24.000Z</updated>
        <content type="html"><![CDATA[<h3 id="tldr">TL;DR</h3>
<p>This vulnerability affects all Kirby sites that use the <code>snippet()</code> helper or <code>$kirby-&gt;snippet()</code> method with a dynamic snippet name (such as a snippet name that depends on request or user data).</p>
<p>Sites that only use fixed calls to the <code>snippet()</code> helper/<code>$kirby-&gt;snippet()</code> method (i.e. calls with a simple string for the snippet name) are <em>not</em> affected.</p>
<hr>
<h3 id="introduction">Introduction</h3>
<p>Kirby's <code>snippet()</code> helper and <code>$kirby-&gt;snippet()</code> method (in the following abbreviated to the <code>snippet()</code> helper) allow to load PHP snippet files that are normally stored in the <code>site/snippets</code> folder or registered by plugins through the <code>snippets</code> plugin extension.</p>
<p>If the <code>snippet()</code> helper is called with an arbitrary snippet name, Kirby first checks if a file with this name exists in the snippets root (which defaults to <code>site/snippets</code>).</p>
<p>This logic was vulnerable against path traversal attacks. By using special elements such as <code>..</code> and <code>/</code> separators, attackers can escape outside of the restricted location to access files or directories that are elsewhere on the system. One of the most common special elements is the <code>../</code> sequence, which in most modern operating systems is interpreted as the parent directory of the current location.</p>
<p>Because Kirby's <code>snippet()</code> helper did not protect against path traversal, the provided snippet name could include special sequences that would cause Kirby to look outside of the configured snippets root and access arbitrary files.</p>
<h3 id="impact">Impact</h3>
<p>The missing path traversal check allowed attackers to navigate and access all files on the server that were accessible to the PHP process, including files outside of the snippets root or even outside of the Kirby installation. PHP code within such files was executed.</p>
<p>Such attacks first require an attack vector in the site code that is caused by dynamic snippet names, such as <code>snippet('tags-' . get('tags'))</code>. It generally also requires knowledge of the site structure and the server's file system by the attacker, although it can be possible to find vulnerable setups through automated methods such as fuzzing.</p>
<p>In a vulnerable setup, this could cause damage to the confidentiality and integrity of the server, for example:</p>
<ul>
<li>it could allow the attacker to build a map of the server's file system for subsequent attacks,</li>
<li>it could allow access to configuration files that may contain sensitive information like security tokens or</li>
<li>it could cause the unintended execution of PHP scripts.</li>
</ul>
<h3 id="patches">Patches</h3>
<p>The problem has been patched in <a href="https://github.com/getkirby/kirby/releases/tag/3.9.8.3">Kirby 3.9.8.3</a>, <a href="https://github.com/getkirby/kirby/releases/tag/3.10.1.2">Kirby 3.10.1.2</a> and <a href="https://github.com/getkirby/kirby/releases/tag/4.7.1">Kirby 4.7.1</a>. Please update to one of these or a <a href="https://github.com/getkirby/kirby/releases">later version</a> to fix the vulnerability.</p>
<p>In all of the mentioned releases, we have added a check for the snippet path that ensures that the resulting path is contained within the configured snippets root. Snippet paths that point outside of the snippets root will not be loaded.</p>
<h3 id="effects-on-site-code">Effects on site code</h3>
<p>If you deliberately use path traversal in your projects, these uses will break after updating to one of the patched versions.</p>
<p>Examples of such uses include:</p>
<ul>
<li>Aliasing a template by loading another template with <code>snippet('../templates/other-template')</code>. Robust alternatives are to use <code>require __DIR__ . '/other-template.php'</code> or to override the <code>$page-&gt;template()</code> method in the page model:<pre><code class="language-php">class AnotherPage extends Page
{
  public function template(): Template
  {
    return $this-&gt;kirby()-&gt;template('other-template');
  }
}
</code></pre>
</li>
<li>Loading a snippet from a shared directory in a multisite setup. A robust alternative is to restructure the project so that all sites share a single snippets root that then branches off into subdirectories for each site. If you prefer to keep the original structure, you can use symbolic links (symlinks) in the file system to include the shared directory in the site-specific snippets roots.</li>
</ul>
<h3 id="credits">Credits</h3>
<p>Thanks to Bruno Meilick (@bnomei) for reporting the identified issue.
Thanks to Bruno Meilick and Tobias Möritz (@tobimori) for their input on the effects on site code.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/getkirby/kirby/security/advisories/GHSA-fw82-87p8-v6hp">https://github.com/getkirby/kirby/security/advisories/GHSA-fw82-87p8-v6hp</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2025-30159">https://nvd.nist.gov/vuln/detail/CVE-2025-30159</a></li>
<li><a href="https://github.com/getkirby/kirby/commit/90acf7ed6d8d9d0697f938edc0940b4a563ddbe7">https://github.com/getkirby/kirby/commit/90acf7ed6d8d9d0697f938edc0940b4a563ddbe7</a></li>
<li><a href="https://github.com/getkirby/kirby/releases/tag/3.10.1.2">https://github.com/getkirby/kirby/releases/tag/3.10.1.2</a></li>
<li><a href="https://github.com/getkirby/kirby/releases/tag/3.9.8.3">https://github.com/getkirby/kirby/releases/tag/3.9.8.3</a></li>
<li><a href="https://github.com/getkirby/kirby/releases/tag/4.7.1">https://github.com/getkirby/kirby/releases/tag/4.7.1</a></li>
<li><a href="https://github.com/advisories/GHSA-fw82-87p8-v6hp">https://github.com/advisories/GHSA-fw82-87p8-v6hp</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-fw82-87p8-v6hp</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2025-05-13T20:02:23.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[getkirby/kirby] Kirby vulnerable to path traversal of snippet names in the `snippet()` helper]]></title>
        <id>https://github.com/advisories/GHSA-fw82-87p8-v6hp</id>
        <link href="https://github.com/advisories/GHSA-fw82-87p8-v6hp"/>
        <updated>2025-05-13T20:02:24.000Z</updated>
        <content type="html"><![CDATA[<h3 id="tldr">TL;DR</h3>
<p>This vulnerability affects all Kirby sites that use the <code>snippet()</code> helper or <code>$kirby-&gt;snippet()</code> method with a dynamic snippet name (such as a snippet name that depends on request or user data).</p>
<p>Sites that only use fixed calls to the <code>snippet()</code> helper/<code>$kirby-&gt;snippet()</code> method (i.e. calls with a simple string for the snippet name) are <em>not</em> affected.</p>
<hr>
<h3 id="introduction">Introduction</h3>
<p>Kirby's <code>snippet()</code> helper and <code>$kirby-&gt;snippet()</code> method (in the following abbreviated to the <code>snippet()</code> helper) allow to load PHP snippet files that are normally stored in the <code>site/snippets</code> folder or registered by plugins through the <code>snippets</code> plugin extension.</p>
<p>If the <code>snippet()</code> helper is called with an arbitrary snippet name, Kirby first checks if a file with this name exists in the snippets root (which defaults to <code>site/snippets</code>).</p>
<p>This logic was vulnerable against path traversal attacks. By using special elements such as <code>..</code> and <code>/</code> separators, attackers can escape outside of the restricted location to access files or directories that are elsewhere on the system. One of the most common special elements is the <code>../</code> sequence, which in most modern operating systems is interpreted as the parent directory of the current location.</p>
<p>Because Kirby's <code>snippet()</code> helper did not protect against path traversal, the provided snippet name could include special sequences that would cause Kirby to look outside of the configured snippets root and access arbitrary files.</p>
<h3 id="impact">Impact</h3>
<p>The missing path traversal check allowed attackers to navigate and access all files on the server that were accessible to the PHP process, including files outside of the snippets root or even outside of the Kirby installation. PHP code within such files was executed.</p>
<p>Such attacks first require an attack vector in the site code that is caused by dynamic snippet names, such as <code>snippet('tags-' . get('tags'))</code>. It generally also requires knowledge of the site structure and the server's file system by the attacker, although it can be possible to find vulnerable setups through automated methods such as fuzzing.</p>
<p>In a vulnerable setup, this could cause damage to the confidentiality and integrity of the server, for example:</p>
<ul>
<li>it could allow the attacker to build a map of the server's file system for subsequent attacks,</li>
<li>it could allow access to configuration files that may contain sensitive information like security tokens or</li>
<li>it could cause the unintended execution of PHP scripts.</li>
</ul>
<h3 id="patches">Patches</h3>
<p>The problem has been patched in <a href="https://github.com/getkirby/kirby/releases/tag/3.9.8.3">Kirby 3.9.8.3</a>, <a href="https://github.com/getkirby/kirby/releases/tag/3.10.1.2">Kirby 3.10.1.2</a> and <a href="https://github.com/getkirby/kirby/releases/tag/4.7.1">Kirby 4.7.1</a>. Please update to one of these or a <a href="https://github.com/getkirby/kirby/releases">later version</a> to fix the vulnerability.</p>
<p>In all of the mentioned releases, we have added a check for the snippet path that ensures that the resulting path is contained within the configured snippets root. Snippet paths that point outside of the snippets root will not be loaded.</p>
<h3 id="effects-on-site-code">Effects on site code</h3>
<p>If you deliberately use path traversal in your projects, these uses will break after updating to one of the patched versions.</p>
<p>Examples of such uses include:</p>
<ul>
<li>Aliasing a template by loading another template with <code>snippet('../templates/other-template')</code>. Robust alternatives are to use <code>require __DIR__ . '/other-template.php'</code> or to override the <code>$page-&gt;template()</code> method in the page model:<pre><code class="language-php">class AnotherPage extends Page
{
  public function template(): Template
  {
    return $this-&gt;kirby()-&gt;template('other-template');
  }
}
</code></pre>
</li>
<li>Loading a snippet from a shared directory in a multisite setup. A robust alternative is to restructure the project so that all sites share a single snippets root that then branches off into subdirectories for each site. If you prefer to keep the original structure, you can use symbolic links (symlinks) in the file system to include the shared directory in the site-specific snippets roots.</li>
</ul>
<h3 id="credits">Credits</h3>
<p>Thanks to Bruno Meilick (@bnomei) for reporting the identified issue.
Thanks to Bruno Meilick and Tobias Möritz (@tobimori) for their input on the effects on site code.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/getkirby/kirby/security/advisories/GHSA-fw82-87p8-v6hp">https://github.com/getkirby/kirby/security/advisories/GHSA-fw82-87p8-v6hp</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2025-30159">https://nvd.nist.gov/vuln/detail/CVE-2025-30159</a></li>
<li><a href="https://github.com/getkirby/kirby/commit/90acf7ed6d8d9d0697f938edc0940b4a563ddbe7">https://github.com/getkirby/kirby/commit/90acf7ed6d8d9d0697f938edc0940b4a563ddbe7</a></li>
<li><a href="https://github.com/getkirby/kirby/releases/tag/3.10.1.2">https://github.com/getkirby/kirby/releases/tag/3.10.1.2</a></li>
<li><a href="https://github.com/getkirby/kirby/releases/tag/3.9.8.3">https://github.com/getkirby/kirby/releases/tag/3.9.8.3</a></li>
<li><a href="https://github.com/getkirby/kirby/releases/tag/4.7.1">https://github.com/getkirby/kirby/releases/tag/4.7.1</a></li>
<li><a href="https://github.com/advisories/GHSA-fw82-87p8-v6hp">https://github.com/advisories/GHSA-fw82-87p8-v6hp</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-fw82-87p8-v6hp</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2025-05-13T20:02:23.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[getkirby/cms] Kirby vulnerable to path traversal in the router for PHP's built-in server]]></title>
        <id>https://github.com/advisories/GHSA-9p3p-w5jf-8xxg</id>
        <link href="https://github.com/advisories/GHSA-9p3p-w5jf-8xxg"/>
        <updated>2025-05-13T20:02:21.000Z</updated>
        <content type="html"><![CDATA[<h3 id="tldr">TL;DR</h3>
<p>This vulnerability affects all Kirby setups that use PHP's built-in server. Such setups are commonly only used during local development.</p>
<p>Sites that use other server software (such as Apache, nginx or Caddy) are <em>not</em> affected.</p>
<hr>
<h3 id="introduction">Introduction</h3>
<p>For use with PHP's built-in web server, Kirby provides a <code>router.php</code> file. The router delegates requests to static files to PHP so that assets and other static files in the document root can be accessed by the browser.</p>
<p>This logic was vulnerable against path traversal attacks. By using special elements such as <code>..</code> and <code>/</code> separators, attackers can escape outside of the restricted location to access files or directories that are elsewhere on the system. One of the most common special elements is the <code>../</code> sequence, which in most modern operating systems is interpreted as the parent directory of the current location.</p>
<h3 id="impact">Impact</h3>
<p>The missing path traversal check allowed attackers to navigate all files on the server that were accessible to the PHP process, including files outside of the Kirby installation.</p>
<p>The vulnerable implementation delegated all existing files to PHP, including existing files outside of the document root. This leads to a different response that allows attackers to determine whether the requested file exists.</p>
<p>Because Kirby's router only delegates such requests to PHP and does not load or execute them, contents of the files were not exposed as PHP treats requests to files outside of the document root as invalid.</p>
<h3 id="patches">Patches</h3>
<p>The problem has been patched in <a href="https://github.com/getkirby/kirby/releases/tag/3.9.8.3">Kirby 3.9.8.3</a>, <a href="https://github.com/getkirby/kirby/releases/tag/3.10.1.2">Kirby 3.10.1.2</a> and <a href="https://github.com/getkirby/kirby/releases/tag/4.7.1">Kirby 4.7.1</a>. Please update to one of these or a <a href="https://github.com/getkirby/kirby/releases">later version</a> to fix the vulnerability.</p>
<p>In all of the mentioned releases, we have updated the router to check if existing static files are within the document root. Requests to files outside the document root are treated as page requests of the error page and will no longer allow to determine whether the file exists or not.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/getkirby/kirby/security/advisories/GHSA-9p3p-w5jf-8xxg">https://github.com/getkirby/kirby/security/advisories/GHSA-9p3p-w5jf-8xxg</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2025-30207">https://nvd.nist.gov/vuln/detail/CVE-2025-30207</a></li>
<li><a href="https://github.com/getkirby/kirby/commit/3ebc9ad3f5adcbd4838ce60219f1c9a561231235">https://github.com/getkirby/kirby/commit/3ebc9ad3f5adcbd4838ce60219f1c9a561231235</a></li>
<li><a href="https://github.com/getkirby/kirby/releases/tag/3.10.1.2">https://github.com/getkirby/kirby/releases/tag/3.10.1.2</a></li>
<li><a href="https://github.com/getkirby/kirby/releases/tag/3.9.8.3">https://github.com/getkirby/kirby/releases/tag/3.9.8.3</a></li>
<li><a href="https://github.com/getkirby/kirby/releases/tag/4.7.1">https://github.com/getkirby/kirby/releases/tag/4.7.1</a></li>
<li><a href="https://github.com/advisories/GHSA-9p3p-w5jf-8xxg">https://github.com/advisories/GHSA-9p3p-w5jf-8xxg</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-9p3p-w5jf-8xxg</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2025-05-13T20:02:20.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[getkirby/cms] Kirby vulnerable to path traversal in the router for PHP's built-in server]]></title>
        <id>https://github.com/advisories/GHSA-9p3p-w5jf-8xxg</id>
        <link href="https://github.com/advisories/GHSA-9p3p-w5jf-8xxg"/>
        <updated>2025-05-13T20:02:21.000Z</updated>
        <content type="html"><![CDATA[<h3 id="tldr">TL;DR</h3>
<p>This vulnerability affects all Kirby setups that use PHP's built-in server. Such setups are commonly only used during local development.</p>
<p>Sites that use other server software (such as Apache, nginx or Caddy) are <em>not</em> affected.</p>
<hr>
<h3 id="introduction">Introduction</h3>
<p>For use with PHP's built-in web server, Kirby provides a <code>router.php</code> file. The router delegates requests to static files to PHP so that assets and other static files in the document root can be accessed by the browser.</p>
<p>This logic was vulnerable against path traversal attacks. By using special elements such as <code>..</code> and <code>/</code> separators, attackers can escape outside of the restricted location to access files or directories that are elsewhere on the system. One of the most common special elements is the <code>../</code> sequence, which in most modern operating systems is interpreted as the parent directory of the current location.</p>
<h3 id="impact">Impact</h3>
<p>The missing path traversal check allowed attackers to navigate all files on the server that were accessible to the PHP process, including files outside of the Kirby installation.</p>
<p>The vulnerable implementation delegated all existing files to PHP, including existing files outside of the document root. This leads to a different response that allows attackers to determine whether the requested file exists.</p>
<p>Because Kirby's router only delegates such requests to PHP and does not load or execute them, contents of the files were not exposed as PHP treats requests to files outside of the document root as invalid.</p>
<h3 id="patches">Patches</h3>
<p>The problem has been patched in <a href="https://github.com/getkirby/kirby/releases/tag/3.9.8.3">Kirby 3.9.8.3</a>, <a href="https://github.com/getkirby/kirby/releases/tag/3.10.1.2">Kirby 3.10.1.2</a> and <a href="https://github.com/getkirby/kirby/releases/tag/4.7.1">Kirby 4.7.1</a>. Please update to one of these or a <a href="https://github.com/getkirby/kirby/releases">later version</a> to fix the vulnerability.</p>
<p>In all of the mentioned releases, we have updated the router to check if existing static files are within the document root. Requests to files outside the document root are treated as page requests of the error page and will no longer allow to determine whether the file exists or not.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/getkirby/kirby/security/advisories/GHSA-9p3p-w5jf-8xxg">https://github.com/getkirby/kirby/security/advisories/GHSA-9p3p-w5jf-8xxg</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2025-30207">https://nvd.nist.gov/vuln/detail/CVE-2025-30207</a></li>
<li><a href="https://github.com/getkirby/kirby/commit/3ebc9ad3f5adcbd4838ce60219f1c9a561231235">https://github.com/getkirby/kirby/commit/3ebc9ad3f5adcbd4838ce60219f1c9a561231235</a></li>
<li><a href="https://github.com/getkirby/kirby/releases/tag/3.10.1.2">https://github.com/getkirby/kirby/releases/tag/3.10.1.2</a></li>
<li><a href="https://github.com/getkirby/kirby/releases/tag/3.9.8.3">https://github.com/getkirby/kirby/releases/tag/3.9.8.3</a></li>
<li><a href="https://github.com/getkirby/kirby/releases/tag/4.7.1">https://github.com/getkirby/kirby/releases/tag/4.7.1</a></li>
<li><a href="https://github.com/advisories/GHSA-9p3p-w5jf-8xxg">https://github.com/advisories/GHSA-9p3p-w5jf-8xxg</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-9p3p-w5jf-8xxg</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2025-05-13T20:02:20.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[getkirby/cms] Kirby vulnerable to path traversal in the router for PHP's built-in server]]></title>
        <id>https://github.com/advisories/GHSA-9p3p-w5jf-8xxg</id>
        <link href="https://github.com/advisories/GHSA-9p3p-w5jf-8xxg"/>
        <updated>2025-05-13T20:02:21.000Z</updated>
        <content type="html"><![CDATA[<h3 id="tldr">TL;DR</h3>
<p>This vulnerability affects all Kirby setups that use PHP's built-in server. Such setups are commonly only used during local development.</p>
<p>Sites that use other server software (such as Apache, nginx or Caddy) are <em>not</em> affected.</p>
<hr>
<h3 id="introduction">Introduction</h3>
<p>For use with PHP's built-in web server, Kirby provides a <code>router.php</code> file. The router delegates requests to static files to PHP so that assets and other static files in the document root can be accessed by the browser.</p>
<p>This logic was vulnerable against path traversal attacks. By using special elements such as <code>..</code> and <code>/</code> separators, attackers can escape outside of the restricted location to access files or directories that are elsewhere on the system. One of the most common special elements is the <code>../</code> sequence, which in most modern operating systems is interpreted as the parent directory of the current location.</p>
<h3 id="impact">Impact</h3>
<p>The missing path traversal check allowed attackers to navigate all files on the server that were accessible to the PHP process, including files outside of the Kirby installation.</p>
<p>The vulnerable implementation delegated all existing files to PHP, including existing files outside of the document root. This leads to a different response that allows attackers to determine whether the requested file exists.</p>
<p>Because Kirby's router only delegates such requests to PHP and does not load or execute them, contents of the files were not exposed as PHP treats requests to files outside of the document root as invalid.</p>
<h3 id="patches">Patches</h3>
<p>The problem has been patched in <a href="https://github.com/getkirby/kirby/releases/tag/3.9.8.3">Kirby 3.9.8.3</a>, <a href="https://github.com/getkirby/kirby/releases/tag/3.10.1.2">Kirby 3.10.1.2</a> and <a href="https://github.com/getkirby/kirby/releases/tag/4.7.1">Kirby 4.7.1</a>. Please update to one of these or a <a href="https://github.com/getkirby/kirby/releases">later version</a> to fix the vulnerability.</p>
<p>In all of the mentioned releases, we have updated the router to check if existing static files are within the document root. Requests to files outside the document root are treated as page requests of the error page and will no longer allow to determine whether the file exists or not.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/getkirby/kirby/security/advisories/GHSA-9p3p-w5jf-8xxg">https://github.com/getkirby/kirby/security/advisories/GHSA-9p3p-w5jf-8xxg</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2025-30207">https://nvd.nist.gov/vuln/detail/CVE-2025-30207</a></li>
<li><a href="https://github.com/getkirby/kirby/commit/3ebc9ad3f5adcbd4838ce60219f1c9a561231235">https://github.com/getkirby/kirby/commit/3ebc9ad3f5adcbd4838ce60219f1c9a561231235</a></li>
<li><a href="https://github.com/getkirby/kirby/releases/tag/3.10.1.2">https://github.com/getkirby/kirby/releases/tag/3.10.1.2</a></li>
<li><a href="https://github.com/getkirby/kirby/releases/tag/3.9.8.3">https://github.com/getkirby/kirby/releases/tag/3.9.8.3</a></li>
<li><a href="https://github.com/getkirby/kirby/releases/tag/4.7.1">https://github.com/getkirby/kirby/releases/tag/4.7.1</a></li>
<li><a href="https://github.com/advisories/GHSA-9p3p-w5jf-8xxg">https://github.com/advisories/GHSA-9p3p-w5jf-8xxg</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-9p3p-w5jf-8xxg</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2025-05-13T20:02:20.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[getkirby/cms] Kirby vulnerable to path traversal of collection names during file system lookup]]></title>
        <id>https://github.com/advisories/GHSA-x275-h9j4-7p4h</id>
        <link href="https://github.com/advisories/GHSA-x275-h9j4-7p4h"/>
        <updated>2025-05-13T20:02:19.000Z</updated>
        <content type="html"><![CDATA[<h3 id="tldr">TL;DR</h3>
<p>This vulnerability affects all Kirby sites that use the <code>collection()</code> helper or <code>$kirby-&gt;collection()</code> method with a dynamic collection name (such as a collection name that depends on request or user data).</p>
<p>Sites that only use fixed calls to the <code>collection()</code> helper/<code>$kirby-&gt;collection()</code> method (i.e. calls with a simple string for the collection name) are <em>not</em> affected.</p>
<hr>
<h3 id="introduction">Introduction</h3>
<p>Kirby's <code>collection()</code> helper and <code>$kirby-&gt;collection()</code> method (in the following abbreviated to the <code>collection()</code> helper) allow to load PHP logic files that are normally stored in the <code>site/collections</code> folder or registered by plugins through the <code>collections</code> plugin extension.</p>
<p>If the <code>collection()</code> helper is called with an arbitrary collection name, Kirby first checks if a file with this name exists in the collections root (which defaults to <code>site/collections</code>).</p>
<p>This logic was vulnerable against path traversal attacks. By using special elements such as <code>..</code> and <code>/</code> separators, attackers can escape outside of the restricted location to access files or directories that are elsewhere on the system. One of the most common special elements is the <code>../</code> sequence, which in most modern operating systems is interpreted as the parent directory of the current location.</p>
<p>Because Kirby's <code>collection()</code> helper did not protect against path traversal, the provided collection name could include special sequences that would cause Kirby to look outside of the configured collections root and access arbitrary files.</p>
<h3 id="impact">Impact</h3>
<p>The missing path traversal check allowed attackers to navigate and access all files on the server that were accessible to the PHP process, including files outside of the collections root or even outside of the Kirby installation. PHP code within such files was executed.</p>
<p>Such attacks first require an attack vector in the site code that is caused by dynamic collection names, such as <code>collection('tags-' . get('tags'))</code>. It generally also requires knowledge of the site structure and the server's file system by the attacker, although it can be possible to find vulnerable setups through automated methods such as fuzzing.</p>
<p>In a vulnerable setup, this could cause damage to the confidentiality and integrity of the server, for example:</p>
<ul>
<li>it could allow the attacker to build a map of the server's file system for subsequent attacks,</li>
<li>it could allow access to configuration files that may contain sensitive information like security tokens or</li>
<li>it could cause the unintended execution of PHP scripts.</li>
</ul>
<h3 id="patches">Patches</h3>
<p>The problem has been patched in <a href="https://github.com/getkirby/kirby/releases/tag/3.9.8.3">Kirby 3.9.8.3</a>, <a href="https://github.com/getkirby/kirby/releases/tag/3.10.1.2">Kirby 3.10.1.2</a> and <a href="https://github.com/getkirby/kirby/releases/tag/4.7.1">Kirby 4.7.1</a>. Please update to one of these or a <a href="https://github.com/getkirby/kirby/releases">later version</a> to fix the vulnerability.</p>
<p>In all of the mentioned releases, we have added a check for the collection path that ensures that the resulting path is contained within the configured collections root. Collection paths that point outside of the collections root will not be loaded.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/getkirby/kirby/security/advisories/GHSA-x275-h9j4-7p4h">https://github.com/getkirby/kirby/security/advisories/GHSA-x275-h9j4-7p4h</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2025-31493">https://nvd.nist.gov/vuln/detail/CVE-2025-31493</a></li>
<li><a href="https://github.com/getkirby/kirby/commit/95a51480a426a8ed0df799cc017403be9b987ced">https://github.com/getkirby/kirby/commit/95a51480a426a8ed0df799cc017403be9b987ced</a></li>
<li><a href="https://github.com/getkirby/kirby/releases/tag/3.10.1.2">https://github.com/getkirby/kirby/releases/tag/3.10.1.2</a></li>
<li><a href="https://github.com/getkirby/kirby/releases/tag/3.9.8.3">https://github.com/getkirby/kirby/releases/tag/3.9.8.3</a></li>
<li><a href="https://github.com/getkirby/kirby/releases/tag/4.7.1">https://github.com/getkirby/kirby/releases/tag/4.7.1</a></li>
<li><a href="https://github.com/advisories/GHSA-x275-h9j4-7p4h">https://github.com/advisories/GHSA-x275-h9j4-7p4h</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-x275-h9j4-7p4h</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2025-05-13T20:02:17.000Z</published>
    </entry>
</feed>