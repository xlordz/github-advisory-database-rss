<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://xlordz.github.io/github-advisory-database-rss/rubygems.rss</id>
    <title>Security Advisory for Ruby gems hosted at RubyGems.org</title>
    <updated>2025-07-04T12:32:54.877Z</updated>
    <generator>github-advisory-database-rss</generator>
    <link rel="alternate" href="https://github.com/advisories?query=type%3Areviewed+ecosystem%3Arubygems"/>
    <subtitle>Security Advisory for Ruby gems hosted at RubyGems.org on GitHub</subtitle>
    <rights>github-advisory-database-rss</rights>
    <category term="CRITICAL"/>
    <category term="HIGH"/>
    <category term="MODERATE"/>
    <category term="LOW"/>
    <entry>
        <title type="html"><![CDATA[[vagrant] HashiCorp Vagrant has code injection vulnerability through default synced folders]]></title>
        <id>https://github.com/advisories/GHSA-hqp6-mjw3-f586</id>
        <link href="https://github.com/advisories/GHSA-hqp6-mjw3-f586"/>
        <updated>2025-07-03T12:59:36.000Z</updated>
        <content type="html"><![CDATA[<p>An authenticated virtual machine escape vulnerability exists in HashiCorp Vagrant versions 2.4.6 and below when using the default synced folder configuration. By design, Vagrant automatically mounts the host system’s project directory into the guest VM under /vagrant (or C:\vagrant on Windows). This includes the Vagrantfile configuration file, which is a Ruby script evaluated by the host every time a vagrant command is executed in the project directory. If a low-privileged attacker obtains shell access to the guest VM, they can append arbitrary Ruby code to the mounted Vagrantfile. When a user on the host later runs any vagrant command, the injected code is executed on the host with that user’s privileges.</p>
<p>While this shared-folder behavior is well-documented by Vagrant, the security implications of Vagrantfile execution from guest-writable storage are not explicitly addressed. This effectively enables guest-to-host code execution in multi-tenant or adversarial VM scenarios.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2025-34075">https://nvd.nist.gov/vuln/detail/CVE-2025-34075</a></li>
<li><a href="https://developer.hashicorp.com/vagrant">https://developer.hashicorp.com/vagrant</a></li>
<li><a href="https://developer.hashicorp.com/vagrant/docs/synced-folders/basic_usage">https://developer.hashicorp.com/vagrant/docs/synced-folders/basic_usage</a></li>
<li><a href="https://developer.hashicorp.com/vagrant/docs/vagrantfile">https://developer.hashicorp.com/vagrant/docs/vagrantfile</a></li>
<li><a href="https://raw.githubusercontent.com/rapid7/metasploit-framework/master/modules/exploits/multi/local/vagrant_synced_folder_vagrantfile_breakout.rb">https://raw.githubusercontent.com/rapid7/metasploit-framework/master/modules/exploits/multi/local/vagrant_synced_folder_vagrantfile_breakout.rb</a></li>
<li><a href="https://vulncheck.com/advisories/hashicorp-vagrant-synced-folder-vagrantfile-breakout">https://vulncheck.com/advisories/hashicorp-vagrant-synced-folder-vagrantfile-breakout</a></li>
<li><a href="https://github.com/hashicorp/vagrant/issues/13688">https://github.com/hashicorp/vagrant/issues/13688</a></li>
<li><a href="https://github.com/hashicorp/vagrant/commit/abe87b2fdc124ef426c016d44d2f6f4792f0cbe3">https://github.com/hashicorp/vagrant/commit/abe87b2fdc124ef426c016d44d2f6f4792f0cbe3</a></li>
<li><a href="https://github.com/advisories/GHSA-hqp6-mjw3-f586">https://github.com/advisories/GHSA-hqp6-mjw3-f586</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-hqp6-mjw3-f586</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2025-07-02T21:32:00.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[nokogiri] sparklemotion nokogiri hashmap.c hashmap_set_with_hash heap-based overflow]]></title>
        <id>https://github.com/advisories/GHSA-pf9w-gvcf-gv7m</id>
        <link href="https://github.com/advisories/GHSA-pf9w-gvcf-gv7m"/>
        <updated>2025-06-30T21:44:22.000Z</updated>
        <content type="html"><![CDATA[<h3 id="withdrawn-advisory">Withdrawn Advisory</h3>
<p>This advisory has been withdrawn because the affected code was never included in a release. This link has been maintained to preserve external references.</p>
<h3 id="original-description">Original Description</h3>
<p>A vulnerability was found in sparklemotion nokogiri c29c920907366cb74af13b4dc2230e9c9e23b833 and classified as problematic. This issue affects the function hashmap_set_with_hash of the file gumbo-parser/src/hashmap.c. The manipulation leads to heap-based buffer overflow. An attack has to be approached locally. The exploit has been disclosed to the public and may be used. The real existence of this vulnerability is still doubted at the moment. The identifier of the patch is ada4708e5a67114402cd3feb70a4e1d1d7cf773a. It is recommended to apply a patch to fix this issue. The project maintainer explains that the affected code was merged into the main branch but the commit never appeared in an official release.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2025-6490">https://nvd.nist.gov/vuln/detail/CVE-2025-6490</a></li>
<li><a href="https://github.com/sparklemotion/nokogiri/issues/3500">https://github.com/sparklemotion/nokogiri/issues/3500</a></li>
<li><a href="https://github.com/user-attachments/files/19625432/nokogiri_crash.txt">https://github.com/user-attachments/files/19625432/nokogiri_crash.txt</a></li>
<li><a href="https://vuldb.com/?ctiid.313601">https://vuldb.com/?ctiid.313601</a></li>
<li><a href="https://vuldb.com/?id.313601">https://vuldb.com/?id.313601</a></li>
<li><a href="https://vuldb.com/?submit.601005">https://vuldb.com/?submit.601005</a></li>
<li><a href="https://github.com/sparklemotion/nokogiri/pull/3524">https://github.com/sparklemotion/nokogiri/pull/3524</a></li>
<li><a href="https://github.com/sparklemotion/nokogiri/commit/ada4708e5a67114402cd3feb70a4e1d1d7cf773a">https://github.com/sparklemotion/nokogiri/commit/ada4708e5a67114402cd3feb70a4e1d1d7cf773a</a></li>
<li><a href="https://github.com/advisories/GHSA-pf9w-gvcf-gv7m">https://github.com/advisories/GHSA-pf9w-gvcf-gv7m</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-pf9w-gvcf-gv7m</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2025-06-22T21:30:27.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[nokogiri] sparklemotion nokogiri hashmap.c hashmap_get_with_hash heap-based overflow]]></title>
        <id>https://github.com/advisories/GHSA-jc9r-qcgw-fxq9</id>
        <link href="https://github.com/advisories/GHSA-jc9r-qcgw-fxq9"/>
        <updated>2025-06-30T21:44:42.000Z</updated>
        <content type="html"><![CDATA[<h3 id="withdrawn-advisory">Withdrawn Advisory</h3>
<p>This advisory has been withdrawn because the affected code was never included in a release. This link has been maintained to preserve external references.</p>
<h3 id="original-description">Original Description</h3>
<p>A vulnerability was found in sparklemotion nokogiri c29c920907366cb74af13b4dc2230e9c9e23b833. It has been classified as problematic. This affects the function hashmap_get_with_hash of the file gumbo-parser/src/hashmap.c. The manipulation leads to heap-based buffer overflow. An attack has to be approached locally. The exploit has been disclosed to the public and may be used. The real existence of this vulnerability is still doubted at the moment. The patch is named ada4708e5a67114402cd3feb70a4e1d1d7cf773a. It is recommended to apply a patch to fix this issue. The project maintainer explains that the affected code was merged into the main branch but the commit never appeared in an official release.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2025-6494">https://nvd.nist.gov/vuln/detail/CVE-2025-6494</a></li>
<li><a href="https://github.com/sparklemotion/nokogiri/issues/3508">https://github.com/sparklemotion/nokogiri/issues/3508</a></li>
<li><a href="https://github.com/user-attachments/files/19825279/nokogiri_crash_2.txt">https://github.com/user-attachments/files/19825279/nokogiri_crash_2.txt</a></li>
<li><a href="https://vuldb.com/?ctiid.313611">https://vuldb.com/?ctiid.313611</a></li>
<li><a href="https://vuldb.com/?id.313611">https://vuldb.com/?id.313611</a></li>
<li><a href="https://vuldb.com/?submit.601006">https://vuldb.com/?submit.601006</a></li>
<li><a href="https://github.com/sparklemotion/nokogiri/pull/3524">https://github.com/sparklemotion/nokogiri/pull/3524</a></li>
<li><a href="https://github.com/sparklemotion/nokogiri/commit/ada4708e5a67114402cd3feb70a4e1d1d7cf773a">https://github.com/sparklemotion/nokogiri/commit/ada4708e5a67114402cd3feb70a4e1d1d7cf773a</a></li>
<li><a href="https://github.com/advisories/GHSA-jc9r-qcgw-fxq9">https://github.com/advisories/GHSA-jc9r-qcgw-fxq9</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-jc9r-qcgw-fxq9</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2025-06-23T00:30:19.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[webrick] Ruby WEBrick read_headers method can lead to HTTP Request/Response Smuggling]]></title>
        <id>https://github.com/advisories/GHSA-r995-q44h-hr64</id>
        <link href="https://github.com/advisories/GHSA-r995-q44h-hr64"/>
        <updated>2025-06-30T12:53:54.000Z</updated>
        <content type="html"><![CDATA[<p>Ruby WEBrick read_header HTTP Request Smuggling Vulnerability. This vulnerability allows remote attackers to smuggle arbitrary HTTP requests on affected installations of Ruby WEBrick. This issue is exploitable when the product is deployed behind an HTTP proxy that fulfills specific conditions.</p>
<p>The specific flaw exists within the read_headers method. The issue results from the inconsistent parsing of terminators of HTTP headers. An attacker can leverage this vulnerability to smuggle arbitrary HTTP requests. Was ZDI-CAN-21876.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2025-6442">https://nvd.nist.gov/vuln/detail/CVE-2025-6442</a></li>
<li><a href="https://github.com/ruby/webrick/commit/ee60354bcb84ec33b9245e1d1aa6e1f7e8132101#diff-ad02984d873efb089aa51551bc6b7d307a53e0ba1ac439e91d69c2e58a478864">https://github.com/ruby/webrick/commit/ee60354bcb84ec33b9245e1d1aa6e1f7e8132101#diff-ad02984d873efb089aa51551bc6b7d307a53e0ba1ac439e91d69c2e58a478864</a></li>
<li><a href="https://www.zerodayinitiative.com/advisories/ZDI-25-414">https://www.zerodayinitiative.com/advisories/ZDI-25-414</a></li>
<li><a href="https://github.com/rubysec/ruby-advisory-db/blob/master/gems/webrick/CVE-2025-6442.yml">https://github.com/rubysec/ruby-advisory-db/blob/master/gems/webrick/CVE-2025-6442.yml</a></li>
<li><a href="https://github.com/advisories/GHSA-r995-q44h-hr64">https://github.com/advisories/GHSA-r995-q44h-hr64</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-r995-q44h-hr64</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2025-06-26T21:31:13.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[jquery-ui-rails] jQuery UI vulnerable to XSS when refreshing a checkboxradio with an HTML-like initial text label]]></title>
        <id>https://github.com/advisories/GHSA-h6gj-6jjq-h8g9</id>
        <link href="https://github.com/advisories/GHSA-h6gj-6jjq-h8g9"/>
        <updated>2025-06-27T15:06:20.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>Initializing a checkboxradio widget on an input enclosed within a label makes that parent label contents considered as the input label. If you call <code>.checkboxradio( "refresh" )</code> on such a widget and the initial HTML contained encoded HTML entities, they will erroneously get decoded. This can lead to potentially executing JavaScript code.</p>
<p>For example, starting with the following initial secure HTML:</p>
<pre><code class="language-html">&lt;label&gt;
    &lt;input id="test-input"&gt;
    &amp;lt;img src=x onerror="alert(1)"&amp;gt;
&lt;/label&gt;
</code></pre>
<p>and calling:</p>
<pre><code class="language-js">$( "#test-input" ).checkboxradio();
$( "#test-input" ).checkboxradio( "refresh" );
</code></pre>
<p>will turn the initial HTML into:</p>
<pre><code class="language-html">&lt;label&gt;
    &lt;!-- some jQuery UI elements --&gt;
    &lt;input id="test-input"&gt;
    &lt;img src=x onerror="alert(1)"&gt;
&lt;/label&gt;
</code></pre>
<p>and the alert will get executed.</p>
<h3 id="patches">Patches</h3>
<p>The bug has been patched in jQuery UI 1.13.2.</p>
<h3 id="workarounds">Workarounds</h3>
<p>To remediate the issue, if you can change the initial HTML, you can wrap all the non-input contents of the <code>label</code> in a <code>span</code>:</p>
<pre><code class="language-html">&lt;label&gt;
    &lt;input id="test-input"&gt;
    &lt;span&gt;&amp;lt;img src=x onerror="alert(1)"&amp;gt;&lt;/span&gt;
&lt;/label&gt;
</code></pre>
<h3 id="references">References</h3>
<p><a href="https://blog.jqueryui.com/2022/07/jquery-ui-1-13-2-released/">https://blog.jqueryui.com/2022/07/jquery-ui-1-13-2-released/</a></p>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory, search for a relevant issue in <a href="https://github.com/jquery/jquery-ui/issues?q=is%3Aissue+is%3Aopen+sort%3Aupdated-desc">the jQuery UI repo</a>. If you don't find an answer, open a new issue.</p>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/jquery/jquery-ui/security/advisories/GHSA-h6gj-6jjq-h8g9">https://github.com/jquery/jquery-ui/security/advisories/GHSA-h6gj-6jjq-h8g9</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-31160">https://nvd.nist.gov/vuln/detail/CVE-2022-31160</a></li>
<li><a href="https://github.com/jquery/jquery-ui/commit/8cc5bae1caa1fcf96bf5862c5646c787020ba3f9">https://github.com/jquery/jquery-ui/commit/8cc5bae1caa1fcf96bf5862c5646c787020ba3f9</a></li>
<li><a href="https://www.drupal.org/sa-contrib-2022-052">https://www.drupal.org/sa-contrib-2022-052</a></li>
<li><a href="https://lists.debian.org/debian-lts-announce/2022/12/msg00015.html">https://lists.debian.org/debian-lts-announce/2022/12/msg00015.html</a></li>
<li><a href="https://blog.jqueryui.com/2022/07/jquery-ui-1-13-2-released">https://blog.jqueryui.com/2022/07/jquery-ui-1-13-2-released</a></li>
<li><a href="https://github.com/jquery-ui-rails/jquery-ui-rails/blob/master/VERSIONS.md">https://github.com/jquery-ui-rails/jquery-ui-rails/blob/master/VERSIONS.md</a></li>
<li><a href="https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/6XBR3G3JR5ZIOJDO4224M3INXDS2VFDD">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/6XBR3G3JR5ZIOJDO4224M3INXDS2VFDD</a></li>
<li><a href="https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/J5LGNTICB5BRFAG3DHVVELS6H3CZSQMO">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/J5LGNTICB5BRFAG3DHVVELS6H3CZSQMO</a></li>
<li><a href="https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/QB2FJQXCNHO32VGVOC6DY6IPGVE4VDU6">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/QB2FJQXCNHO32VGVOC6DY6IPGVE4VDU6</a></li>
<li><a href="https://security.netapp.com/advisory/ntap-20220909-0007">https://security.netapp.com/advisory/ntap-20220909-0007</a></li>
<li><a href="https://github.com/jquery-ui-rails/jquery-ui-rails/releases/tag/v8.0.0-release">https://github.com/jquery-ui-rails/jquery-ui-rails/releases/tag/v8.0.0-release</a></li>
<li><a href="https://github.com/advisories/GHSA-h6gj-6jjq-h8g9">https://github.com/advisories/GHSA-h6gj-6jjq-h8g9</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-h6gj-6jjq-h8g9</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-07-18T17:07:36.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[openc3-cosmos-tool-iframe] OpenC3 COSMOS Vulnerable to Directory Traversal via openc3-api/tables endpoint]]></title>
        <id>https://github.com/advisories/GHSA-cf8v-5mrc-jv7f</id>
        <link href="https://github.com/advisories/GHSA-cf8v-5mrc-jv7f"/>
        <updated>2025-06-17T19:59:29.000Z</updated>
        <content type="html"><![CDATA[<p>An issue in the openc3-api/tables endpoint of OpenC3 COSMOS 6.0.0 allows attackers to execute a directory traversal.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2025-28382">https://nvd.nist.gov/vuln/detail/CVE-2025-28382</a></li>
<li><a href="https://openc3.com">https://openc3.com</a></li>
<li><a href="https://visionspace.com/openc3-cosmos-a-security-assessment-of-an-open-source-mission-framework">https://visionspace.com/openc3-cosmos-a-security-assessment-of-an-open-source-mission-framework</a></li>
<li><a href="https://github.com/rubysec/ruby-advisory-db/blob/master/gems/openc3-cosmos-tool-iframe/CVE-2025-28382.yml">https://github.com/rubysec/ruby-advisory-db/blob/master/gems/openc3-cosmos-tool-iframe/CVE-2025-28382.yml</a></li>
<li><a href="https://github.com/advisories/GHSA-cf8v-5mrc-jv7f">https://github.com/advisories/GHSA-cf8v-5mrc-jv7f</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-cf8v-5mrc-jv7f</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2025-06-13T15:30:31.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[openc3-cosmos-tool-iframe] OpenC3 COSMOS Vulnerable to Directory Traversal via /script-api/scripts/ endpoint]]></title>
        <id>https://github.com/advisories/GHSA-p67j-387g-75wc</id>
        <link href="https://github.com/advisories/GHSA-p67j-387g-75wc"/>
        <updated>2025-06-17T19:59:50.000Z</updated>
        <content type="html"><![CDATA[<p>An issue in the /script-api/scripts/ endpoint of OpenC3 COSMOS 6.0.0 allows attackers to execute a directory traversal.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2025-28384">https://nvd.nist.gov/vuln/detail/CVE-2025-28384</a></li>
<li><a href="https://openc3.com">https://openc3.com</a></li>
<li><a href="https://visionspace.com/openc3-cosmos-a-security-assessment-of-an-open-source-mission-framework">https://visionspace.com/openc3-cosmos-a-security-assessment-of-an-open-source-mission-framework</a></li>
<li><a href="https://github.com/rubysec/ruby-advisory-db/blob/master/gems/openc3-cosmos-tool-iframe/CVE-2025-28384.yml">https://github.com/rubysec/ruby-advisory-db/blob/master/gems/openc3-cosmos-tool-iframe/CVE-2025-28384.yml</a></li>
<li><a href="https://github.com/advisories/GHSA-p67j-387g-75wc">https://github.com/advisories/GHSA-p67j-387g-75wc</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-p67j-387g-75wc</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2025-06-13T15:30:31.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[rack] ReDoS Vulnerability in Rack::Multipart handle_mime_head]]></title>
        <id>https://github.com/advisories/GHSA-47m2-26rw-j2jw</id>
        <link href="https://github.com/advisories/GHSA-47m2-26rw-j2jw"/>
        <updated>2025-06-05T20:15:09.000Z</updated>
        <content type="html"><![CDATA[<h3 id="summary">Summary</h3>
<p>There is a denial of service vulnerability in the Content-Disposition parsing component of Rack. This is very similar to the previous security issue CVE-2022-44571.</p>
<h3 id="details">Details</h3>
<p>Carefully crafted input can cause Content-Disposition header parsing in Rack to take an unexpected amount of time, possibly resulting in a denial of service attack vector. This header is used typically used in multipart parsing. Any applications that parse multipart posts using Rack (virtually all Rails applications) are impacted.</p>
<h3 id="credits">Credits</h3>
<p>Thanks to <a href="https://hackerone.com/scyoon">scyoon</a> for reporting this to the Rails security team</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/rack/rack/security/advisories/GHSA-47m2-26rw-j2jw">https://github.com/rack/rack/security/advisories/GHSA-47m2-26rw-j2jw</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2025-49007">https://nvd.nist.gov/vuln/detail/CVE-2025-49007</a></li>
<li><a href="https://github.com/rack/rack/commit/4795831a0a310c2d31102749e551b38faab6401f">https://github.com/rack/rack/commit/4795831a0a310c2d31102749e551b38faab6401f</a></li>
<li><a href="https://github.com/rack/rack/commit/aed514df37e33907df3c971ed3ca9a0a20ac2901">https://github.com/rack/rack/commit/aed514df37e33907df3c971ed3ca9a0a20ac2901</a></li>
<li><a href="https://github.com/rubysec/ruby-advisory-db/blob/master/gems/rack/CVE-2025-49007.yml">https://github.com/rubysec/ruby-advisory-db/blob/master/gems/rack/CVE-2025-49007.yml</a></li>
<li><a href="https://github.com/advisories/GHSA-47m2-26rw-j2jw">https://github.com/advisories/GHSA-47m2-26rw-j2jw</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-47m2-26rw-j2jw</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2025-06-05T05:21:34.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[webrick] WEBRick vulnerable to HTTP Request/Response Smuggling]]></title>
        <id>https://github.com/advisories/GHSA-gwfg-cqmg-cf8f</id>
        <link href="https://github.com/advisories/GHSA-gwfg-cqmg-cf8f"/>
        <updated>2025-05-30T16:06:10.000Z</updated>
        <content type="html"><![CDATA[<p>An issue was discovered in Ruby through 2.5.8, 2.6.x through 2.6.6, and 2.7.x through 2.7.1. WEBrick, a simple HTTP server bundled with Ruby, had not checked the transfer-encoding header value rigorously. An attacker may potentially exploit this issue to bypass a reverse proxy (which also has a poor header check), which may lead to an HTTP Request Smuggling attack.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2020-25613">https://nvd.nist.gov/vuln/detail/CVE-2020-25613</a></li>
<li><a href="https://github.com/ruby/webrick/commit/8946bb38b4d87549f0d99ed73c62c41933f97cc7">https://github.com/ruby/webrick/commit/8946bb38b4d87549f0d99ed73c62c41933f97cc7</a></li>
<li><a href="https://hackerone.com/reports/965267">https://hackerone.com/reports/965267</a></li>
<li><a href="https://github.com/ruby/webrick/commit/076ac636bf48b7a492887ce4de7041de23e6c00d">https://github.com/ruby/webrick/commit/076ac636bf48b7a492887ce4de7041de23e6c00d</a></li>
<li><a href="https://github.com/rubysec/ruby-advisory-db/blob/master/gems/webrick/CVE-2020-25613.yml">https://github.com/rubysec/ruby-advisory-db/blob/master/gems/webrick/CVE-2020-25613.yml</a></li>
<li><a href="https://lists.debian.org/debian-lts-announce/2023/04/msg00033.html">https://lists.debian.org/debian-lts-announce/2023/04/msg00033.html</a></li>
<li><a href="https://security.gentoo.org/glsa/202401-27">https://security.gentoo.org/glsa/202401-27</a></li>
<li><a href="https://github.com/ruby/webrick/commit/7618049fa57ddad2efff2a7bc7dad7d2d8a311b1">https://github.com/ruby/webrick/commit/7618049fa57ddad2efff2a7bc7dad7d2d8a311b1</a></li>
<li><a href="https://github.com/ruby/webrick/commit/af2efdcdf826f25592202d187c53963e7932e4b9">https://github.com/ruby/webrick/commit/af2efdcdf826f25592202d187c53963e7932e4b9</a></li>
<li><a href="https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/PFP3E7KXXT3H3KA6CBZPUOGA5VPFARRJ">https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/PFP3E7KXXT3H3KA6CBZPUOGA5VPFARRJ</a></li>
<li><a href="https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/YTZURYROG3FFED3TYCQOBV66BS4K6WOV">https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/YTZURYROG3FFED3TYCQOBV66BS4K6WOV</a></li>
<li><a href="https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/PFP3E7KXXT3H3KA6CBZPUOGA5VPFARRJ">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/PFP3E7KXXT3H3KA6CBZPUOGA5VPFARRJ</a></li>
<li><a href="https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/YTZURYROG3FFED3TYCQOBV66BS4K6WOV">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/YTZURYROG3FFED3TYCQOBV66BS4K6WOV</a></li>
<li><a href="https://security.netapp.com/advisory/ntap-20210115-0008">https://security.netapp.com/advisory/ntap-20210115-0008</a></li>
<li><a href="https://www.ruby-lang.org/en/news/2020/09/29/http-request-smuggling-cve-2020-25613">https://www.ruby-lang.org/en/news/2020/09/29/http-request-smuggling-cve-2020-25613</a></li>
<li><a href="https://github.com/advisories/GHSA-gwfg-cqmg-cf8f">https://github.com/advisories/GHSA-gwfg-cqmg-cf8f</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-gwfg-cqmg-cf8f</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-05-24T17:30:10.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[webrick] WEBRick vulnerable to HTTP Request/Response Smuggling]]></title>
        <id>https://github.com/advisories/GHSA-gwfg-cqmg-cf8f</id>
        <link href="https://github.com/advisories/GHSA-gwfg-cqmg-cf8f"/>
        <updated>2025-05-30T16:06:10.000Z</updated>
        <content type="html"><![CDATA[<p>An issue was discovered in Ruby through 2.5.8, 2.6.x through 2.6.6, and 2.7.x through 2.7.1. WEBrick, a simple HTTP server bundled with Ruby, had not checked the transfer-encoding header value rigorously. An attacker may potentially exploit this issue to bypass a reverse proxy (which also has a poor header check), which may lead to an HTTP Request Smuggling attack.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2020-25613">https://nvd.nist.gov/vuln/detail/CVE-2020-25613</a></li>
<li><a href="https://github.com/ruby/webrick/commit/8946bb38b4d87549f0d99ed73c62c41933f97cc7">https://github.com/ruby/webrick/commit/8946bb38b4d87549f0d99ed73c62c41933f97cc7</a></li>
<li><a href="https://hackerone.com/reports/965267">https://hackerone.com/reports/965267</a></li>
<li><a href="https://github.com/ruby/webrick/commit/076ac636bf48b7a492887ce4de7041de23e6c00d">https://github.com/ruby/webrick/commit/076ac636bf48b7a492887ce4de7041de23e6c00d</a></li>
<li><a href="https://github.com/rubysec/ruby-advisory-db/blob/master/gems/webrick/CVE-2020-25613.yml">https://github.com/rubysec/ruby-advisory-db/blob/master/gems/webrick/CVE-2020-25613.yml</a></li>
<li><a href="https://lists.debian.org/debian-lts-announce/2023/04/msg00033.html">https://lists.debian.org/debian-lts-announce/2023/04/msg00033.html</a></li>
<li><a href="https://security.gentoo.org/glsa/202401-27">https://security.gentoo.org/glsa/202401-27</a></li>
<li><a href="https://github.com/ruby/webrick/commit/7618049fa57ddad2efff2a7bc7dad7d2d8a311b1">https://github.com/ruby/webrick/commit/7618049fa57ddad2efff2a7bc7dad7d2d8a311b1</a></li>
<li><a href="https://github.com/ruby/webrick/commit/af2efdcdf826f25592202d187c53963e7932e4b9">https://github.com/ruby/webrick/commit/af2efdcdf826f25592202d187c53963e7932e4b9</a></li>
<li><a href="https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/PFP3E7KXXT3H3KA6CBZPUOGA5VPFARRJ">https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/PFP3E7KXXT3H3KA6CBZPUOGA5VPFARRJ</a></li>
<li><a href="https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/YTZURYROG3FFED3TYCQOBV66BS4K6WOV">https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/YTZURYROG3FFED3TYCQOBV66BS4K6WOV</a></li>
<li><a href="https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/PFP3E7KXXT3H3KA6CBZPUOGA5VPFARRJ">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/PFP3E7KXXT3H3KA6CBZPUOGA5VPFARRJ</a></li>
<li><a href="https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/YTZURYROG3FFED3TYCQOBV66BS4K6WOV">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/YTZURYROG3FFED3TYCQOBV66BS4K6WOV</a></li>
<li><a href="https://security.netapp.com/advisory/ntap-20210115-0008">https://security.netapp.com/advisory/ntap-20210115-0008</a></li>
<li><a href="https://www.ruby-lang.org/en/news/2020/09/29/http-request-smuggling-cve-2020-25613">https://www.ruby-lang.org/en/news/2020/09/29/http-request-smuggling-cve-2020-25613</a></li>
<li><a href="https://github.com/advisories/GHSA-gwfg-cqmg-cf8f">https://github.com/advisories/GHSA-gwfg-cqmg-cf8f</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-gwfg-cqmg-cf8f</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-05-24T17:30:10.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[webrick] WEBRick vulnerable to HTTP Request/Response Smuggling]]></title>
        <id>https://github.com/advisories/GHSA-gwfg-cqmg-cf8f</id>
        <link href="https://github.com/advisories/GHSA-gwfg-cqmg-cf8f"/>
        <updated>2025-05-30T16:06:10.000Z</updated>
        <content type="html"><![CDATA[<p>An issue was discovered in Ruby through 2.5.8, 2.6.x through 2.6.6, and 2.7.x through 2.7.1. WEBrick, a simple HTTP server bundled with Ruby, had not checked the transfer-encoding header value rigorously. An attacker may potentially exploit this issue to bypass a reverse proxy (which also has a poor header check), which may lead to an HTTP Request Smuggling attack.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2020-25613">https://nvd.nist.gov/vuln/detail/CVE-2020-25613</a></li>
<li><a href="https://github.com/ruby/webrick/commit/8946bb38b4d87549f0d99ed73c62c41933f97cc7">https://github.com/ruby/webrick/commit/8946bb38b4d87549f0d99ed73c62c41933f97cc7</a></li>
<li><a href="https://hackerone.com/reports/965267">https://hackerone.com/reports/965267</a></li>
<li><a href="https://github.com/ruby/webrick/commit/076ac636bf48b7a492887ce4de7041de23e6c00d">https://github.com/ruby/webrick/commit/076ac636bf48b7a492887ce4de7041de23e6c00d</a></li>
<li><a href="https://github.com/rubysec/ruby-advisory-db/blob/master/gems/webrick/CVE-2020-25613.yml">https://github.com/rubysec/ruby-advisory-db/blob/master/gems/webrick/CVE-2020-25613.yml</a></li>
<li><a href="https://lists.debian.org/debian-lts-announce/2023/04/msg00033.html">https://lists.debian.org/debian-lts-announce/2023/04/msg00033.html</a></li>
<li><a href="https://security.gentoo.org/glsa/202401-27">https://security.gentoo.org/glsa/202401-27</a></li>
<li><a href="https://github.com/ruby/webrick/commit/7618049fa57ddad2efff2a7bc7dad7d2d8a311b1">https://github.com/ruby/webrick/commit/7618049fa57ddad2efff2a7bc7dad7d2d8a311b1</a></li>
<li><a href="https://github.com/ruby/webrick/commit/af2efdcdf826f25592202d187c53963e7932e4b9">https://github.com/ruby/webrick/commit/af2efdcdf826f25592202d187c53963e7932e4b9</a></li>
<li><a href="https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/PFP3E7KXXT3H3KA6CBZPUOGA5VPFARRJ">https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/PFP3E7KXXT3H3KA6CBZPUOGA5VPFARRJ</a></li>
<li><a href="https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/YTZURYROG3FFED3TYCQOBV66BS4K6WOV">https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/YTZURYROG3FFED3TYCQOBV66BS4K6WOV</a></li>
<li><a href="https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/PFP3E7KXXT3H3KA6CBZPUOGA5VPFARRJ">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/PFP3E7KXXT3H3KA6CBZPUOGA5VPFARRJ</a></li>
<li><a href="https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/YTZURYROG3FFED3TYCQOBV66BS4K6WOV">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/YTZURYROG3FFED3TYCQOBV66BS4K6WOV</a></li>
<li><a href="https://security.netapp.com/advisory/ntap-20210115-0008">https://security.netapp.com/advisory/ntap-20210115-0008</a></li>
<li><a href="https://www.ruby-lang.org/en/news/2020/09/29/http-request-smuggling-cve-2020-25613">https://www.ruby-lang.org/en/news/2020/09/29/http-request-smuggling-cve-2020-25613</a></li>
<li><a href="https://github.com/advisories/GHSA-gwfg-cqmg-cf8f">https://github.com/advisories/GHSA-gwfg-cqmg-cf8f</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-gwfg-cqmg-cf8f</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-05-24T17:30:10.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[ejson2env] Insufficient input sanitization in ejson2env ]]></title>
        <id>https://github.com/advisories/GHSA-2c47-m757-32g6</id>
        <link href="https://github.com/advisories/GHSA-2c47-m757-32g6"/>
        <updated>2025-05-27T19:00:08.000Z</updated>
        <content type="html"><![CDATA[<h3 id="summary">Summary</h3>
<p>The <code>ejson2env</code> tool has a vulnerability related to how it writes to <code>stdout</code>. Specifically, the tool is intended to write an export statement for environment variables and their values. However, due to inadequate output sanitization, there is a potential risk where variable names or values may include malicious content, resulting in additional unintended commands being output to <code>stdout</code>. If this output is improperly utilized in further command execution, it could lead to command injection vulnerabilities, allowing an attacker to execute arbitrary commands on the host system.</p>
<h3 id="details">Details</h3>
<p>The vulnerability exists because environment variables are not properly sanitized during the decryption phase, which enables malicious keys or encrypted values to inject commands.</p>
<h3 id="impact">Impact</h3>
<p>An attacker with control over  <code>.ejson</code> files can inject commands in the environment where <code>source $(ejson2env)</code>  or <code>eval ejson2env</code> are executed.</p>
<h3 id="mitigation">Mitigation</h3>
<ul>
<li>Update to a version of <code>ejson2env</code> that sanitizes the output during decryption or</li>
<li>Do not use <code>ejson2env</code> to decrypt untrusted user secrets or</li>
<li>Do not evaluate or execute the direct output from <code>ejson2env</code> without removing nonprintable characters.</li>
</ul>
<h3 id="credit">Credit</h3>
<p>Thanks to security researcher <a href="https://hackerone.com/demonia?type=user">Demonia</a> for reporting this issue.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/Shopify/ejson2env/security/advisories/GHSA-2c47-m757-32g6">https://github.com/Shopify/ejson2env/security/advisories/GHSA-2c47-m757-32g6</a></li>
<li><a href="https://github.com/Shopify/ejson2env/commit/592b3ceea967fee8b064e70983e8cec087b6d840">https://github.com/Shopify/ejson2env/commit/592b3ceea967fee8b064e70983e8cec087b6d840</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2025-48069">https://nvd.nist.gov/vuln/detail/CVE-2025-48069</a></li>
<li><a href="https://github.com/rubysec/ruby-advisory-db/blob/master/gems/ejson2env/CVE-2025-48069.yml">https://github.com/rubysec/ruby-advisory-db/blob/master/gems/ejson2env/CVE-2025-48069.yml</a></li>
<li><a href="https://github.com/advisories/GHSA-2c47-m757-32g6">https://github.com/advisories/GHSA-2c47-m757-32g6</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-2c47-m757-32g6</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2025-05-21T18:32:37.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[rack] Rack has an Unbounded-Parameter DoS in Rack::QueryParser]]></title>
        <id>https://github.com/advisories/GHSA-gjh7-p2fx-99vx</id>
        <link href="https://github.com/advisories/GHSA-gjh7-p2fx-99vx"/>
        <updated>2025-05-09T14:35:13.000Z</updated>
        <content type="html"><![CDATA[<h2 id="summary">Summary</h2>
<p><code>Rack::QueryParser</code> parses query strings and <code>application/x-www-form-urlencoded</code> bodies into Ruby data structures without imposing any limit on the number of parameters, allowing attackers to send requests with extremely large numbers of parameters.</p>
<h2 id="details">Details</h2>
<p>The vulnerability arises because <code>Rack::QueryParser</code> iterates over each <code>&amp;</code>-separated key-value pair and adds it to a Hash without enforcing an upper bound on the total number of parameters. This allows an attacker to send a single request containing hundreds of thousands (or more) of parameters, which consumes excessive memory and CPU during parsing.</p>
<h2 id="impact">Impact</h2>
<p>An attacker can trigger denial of service by sending specifically crafted HTTP requests, which can cause memory exhaustion or pin CPU resources, stalling or crashing the Rack server. This results in full service disruption until the affected worker is restarted.</p>
<h2 id="mitigation">Mitigation</h2>
<ul>
<li>Update to a version of Rack that limits the number of parameters parsed, or</li>
<li>Use middleware to enforce a maximum query string size or parameter count, or</li>
<li>Employ a reverse proxy (such as Nginx) to limit request sizes and reject oversized query strings or bodies.</li>
</ul>
<p>Limiting request body sizes and query string lengths at the web server or CDN level is an effective mitigation.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/rack/rack/security/advisories/GHSA-gjh7-p2fx-99vx">https://github.com/rack/rack/security/advisories/GHSA-gjh7-p2fx-99vx</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2025-46727">https://nvd.nist.gov/vuln/detail/CVE-2025-46727</a></li>
<li><a href="https://github.com/rack/rack/commit/2bb5263b464b65ba4b648996a579dbd180d2b712">https://github.com/rack/rack/commit/2bb5263b464b65ba4b648996a579dbd180d2b712</a></li>
<li><a href="https://github.com/rack/rack/commit/3f5a4249118d09d199fe480466c8c6717e43b6e3">https://github.com/rack/rack/commit/3f5a4249118d09d199fe480466c8c6717e43b6e3</a></li>
<li><a href="https://github.com/rack/rack/commit/cd6b70a1f2a1016b73dc906f924869f4902c2d74">https://github.com/rack/rack/commit/cd6b70a1f2a1016b73dc906f924869f4902c2d74</a></li>
<li><a href="https://github.com/rubysec/ruby-advisory-db/blob/master/gems/rack/CVE-2025-46727.yml">https://github.com/rubysec/ruby-advisory-db/blob/master/gems/rack/CVE-2025-46727.yml</a></li>
<li><a href="https://github.com/advisories/GHSA-gjh7-p2fx-99vx">https://github.com/advisories/GHSA-gjh7-p2fx-99vx</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-gjh7-p2fx-99vx</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2025-05-08T14:45:48.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[rack] Rack has an Unbounded-Parameter DoS in Rack::QueryParser]]></title>
        <id>https://github.com/advisories/GHSA-gjh7-p2fx-99vx</id>
        <link href="https://github.com/advisories/GHSA-gjh7-p2fx-99vx"/>
        <updated>2025-05-09T14:35:13.000Z</updated>
        <content type="html"><![CDATA[<h2 id="summary">Summary</h2>
<p><code>Rack::QueryParser</code> parses query strings and <code>application/x-www-form-urlencoded</code> bodies into Ruby data structures without imposing any limit on the number of parameters, allowing attackers to send requests with extremely large numbers of parameters.</p>
<h2 id="details">Details</h2>
<p>The vulnerability arises because <code>Rack::QueryParser</code> iterates over each <code>&amp;</code>-separated key-value pair and adds it to a Hash without enforcing an upper bound on the total number of parameters. This allows an attacker to send a single request containing hundreds of thousands (or more) of parameters, which consumes excessive memory and CPU during parsing.</p>
<h2 id="impact">Impact</h2>
<p>An attacker can trigger denial of service by sending specifically crafted HTTP requests, which can cause memory exhaustion or pin CPU resources, stalling or crashing the Rack server. This results in full service disruption until the affected worker is restarted.</p>
<h2 id="mitigation">Mitigation</h2>
<ul>
<li>Update to a version of Rack that limits the number of parameters parsed, or</li>
<li>Use middleware to enforce a maximum query string size or parameter count, or</li>
<li>Employ a reverse proxy (such as Nginx) to limit request sizes and reject oversized query strings or bodies.</li>
</ul>
<p>Limiting request body sizes and query string lengths at the web server or CDN level is an effective mitigation.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/rack/rack/security/advisories/GHSA-gjh7-p2fx-99vx">https://github.com/rack/rack/security/advisories/GHSA-gjh7-p2fx-99vx</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2025-46727">https://nvd.nist.gov/vuln/detail/CVE-2025-46727</a></li>
<li><a href="https://github.com/rack/rack/commit/2bb5263b464b65ba4b648996a579dbd180d2b712">https://github.com/rack/rack/commit/2bb5263b464b65ba4b648996a579dbd180d2b712</a></li>
<li><a href="https://github.com/rack/rack/commit/3f5a4249118d09d199fe480466c8c6717e43b6e3">https://github.com/rack/rack/commit/3f5a4249118d09d199fe480466c8c6717e43b6e3</a></li>
<li><a href="https://github.com/rack/rack/commit/cd6b70a1f2a1016b73dc906f924869f4902c2d74">https://github.com/rack/rack/commit/cd6b70a1f2a1016b73dc906f924869f4902c2d74</a></li>
<li><a href="https://github.com/rubysec/ruby-advisory-db/blob/master/gems/rack/CVE-2025-46727.yml">https://github.com/rubysec/ruby-advisory-db/blob/master/gems/rack/CVE-2025-46727.yml</a></li>
<li><a href="https://github.com/advisories/GHSA-gjh7-p2fx-99vx">https://github.com/advisories/GHSA-gjh7-p2fx-99vx</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-gjh7-p2fx-99vx</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2025-05-08T14:45:48.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[rack] Rack has an Unbounded-Parameter DoS in Rack::QueryParser]]></title>
        <id>https://github.com/advisories/GHSA-gjh7-p2fx-99vx</id>
        <link href="https://github.com/advisories/GHSA-gjh7-p2fx-99vx"/>
        <updated>2025-05-09T14:35:13.000Z</updated>
        <content type="html"><![CDATA[<h2 id="summary">Summary</h2>
<p><code>Rack::QueryParser</code> parses query strings and <code>application/x-www-form-urlencoded</code> bodies into Ruby data structures without imposing any limit on the number of parameters, allowing attackers to send requests with extremely large numbers of parameters.</p>
<h2 id="details">Details</h2>
<p>The vulnerability arises because <code>Rack::QueryParser</code> iterates over each <code>&amp;</code>-separated key-value pair and adds it to a Hash without enforcing an upper bound on the total number of parameters. This allows an attacker to send a single request containing hundreds of thousands (or more) of parameters, which consumes excessive memory and CPU during parsing.</p>
<h2 id="impact">Impact</h2>
<p>An attacker can trigger denial of service by sending specifically crafted HTTP requests, which can cause memory exhaustion or pin CPU resources, stalling or crashing the Rack server. This results in full service disruption until the affected worker is restarted.</p>
<h2 id="mitigation">Mitigation</h2>
<ul>
<li>Update to a version of Rack that limits the number of parameters parsed, or</li>
<li>Use middleware to enforce a maximum query string size or parameter count, or</li>
<li>Employ a reverse proxy (such as Nginx) to limit request sizes and reject oversized query strings or bodies.</li>
</ul>
<p>Limiting request body sizes and query string lengths at the web server or CDN level is an effective mitigation.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/rack/rack/security/advisories/GHSA-gjh7-p2fx-99vx">https://github.com/rack/rack/security/advisories/GHSA-gjh7-p2fx-99vx</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2025-46727">https://nvd.nist.gov/vuln/detail/CVE-2025-46727</a></li>
<li><a href="https://github.com/rack/rack/commit/2bb5263b464b65ba4b648996a579dbd180d2b712">https://github.com/rack/rack/commit/2bb5263b464b65ba4b648996a579dbd180d2b712</a></li>
<li><a href="https://github.com/rack/rack/commit/3f5a4249118d09d199fe480466c8c6717e43b6e3">https://github.com/rack/rack/commit/3f5a4249118d09d199fe480466c8c6717e43b6e3</a></li>
<li><a href="https://github.com/rack/rack/commit/cd6b70a1f2a1016b73dc906f924869f4902c2d74">https://github.com/rack/rack/commit/cd6b70a1f2a1016b73dc906f924869f4902c2d74</a></li>
<li><a href="https://github.com/rubysec/ruby-advisory-db/blob/master/gems/rack/CVE-2025-46727.yml">https://github.com/rubysec/ruby-advisory-db/blob/master/gems/rack/CVE-2025-46727.yml</a></li>
<li><a href="https://github.com/advisories/GHSA-gjh7-p2fx-99vx">https://github.com/advisories/GHSA-gjh7-p2fx-99vx</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-gjh7-p2fx-99vx</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2025-05-08T14:45:48.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[rack-session] Rack session gets restored after deletion]]></title>
        <id>https://github.com/advisories/GHSA-9j94-67jr-4cqj</id>
        <link href="https://github.com/advisories/GHSA-9j94-67jr-4cqj"/>
        <updated>2025-05-09T14:34:49.000Z</updated>
        <content type="html"><![CDATA[<h2 id="summary">Summary</h2>
<p>When using the <code>Rack::Session::Pool</code> middleware, simultaneous rack requests can restore a deleted rack session, which allows the unauthenticated user to occupy that session.</p>
<h2 id="details">Details</h2>
<p><a href="https://github.com/rack/rack-session/blob/v2.1.0/lib/rack/session/abstract/id.rb#L271-L278">Rack session middleware</a> prepares the session at the beginning of request, then saves is back to the store with possible changes applied by host rack application. This way the session becomes to be a subject of race conditions in general sense over concurrent rack requests.</p>
<h2 id="impact">Impact</h2>
<p>When using the <code>Rack::Session::Pool</code> middleware, and provided the attacker can acquire a session cookie (already a major issue), the session may be restored if the attacker can trigger a long running request (within that same session) adjacent to the user logging out, in order to retain illicit access even after a user has attempted to logout.</p>
<h2 id="mitigation">Mitigation</h2>
<ul>
<li>Update to the latest version of <code>rack-session</code>, or</li>
<li>Ensure your application invalidates sessions atomically by marking them as logged out e.g., using a <code>logged_out</code> flag, instead of deleting them, and check this flag on every request to prevent reuse, or</li>
<li>Implement a custom session store that tracks session invalidation timestamps and refuses to accept session data if the session was invalidated after the request began.</li>
</ul>
<h2 id="related">Related</h2>
<p>This code was previously part of <code>rack</code> in Rack &lt; 3, see <a href="https://github.com/rack/rack/security/advisories/GHSA-vpfw-47h7-xj4g">https://github.com/rack/rack/security/advisories/GHSA-vpfw-47h7-xj4g</a> for the equivalent advisory in <code>rack</code> (affecting Rack &lt; 3 only).</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/rack/rack-session/security/advisories/GHSA-9j94-67jr-4cqj">https://github.com/rack/rack-session/security/advisories/GHSA-9j94-67jr-4cqj</a></li>
<li><a href="https://github.com/rack/rack/security/advisories/GHSA-vpfw-47h7-xj4g">https://github.com/rack/rack/security/advisories/GHSA-vpfw-47h7-xj4g</a></li>
<li><a href="https://github.com/rack/rack-session/commit/c28c4a8c1861d814e09f2ae48264ac4c40be2d3b">https://github.com/rack/rack-session/commit/c28c4a8c1861d814e09f2ae48264ac4c40be2d3b</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2025-46336">https://nvd.nist.gov/vuln/detail/CVE-2025-46336</a></li>
<li><a href="https://github.com/rubysec/ruby-advisory-db/blob/master/gems/rack-session/CVE-2025-46336.yml">https://github.com/rubysec/ruby-advisory-db/blob/master/gems/rack-session/CVE-2025-46336.yml</a></li>
<li><a href="https://github.com/advisories/GHSA-9j94-67jr-4cqj">https://github.com/advisories/GHSA-9j94-67jr-4cqj</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-9j94-67jr-4cqj</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2025-05-08T14:45:33.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[rack] Rack session gets restored after deletion]]></title>
        <id>https://github.com/advisories/GHSA-vpfw-47h7-xj4g</id>
        <link href="https://github.com/advisories/GHSA-vpfw-47h7-xj4g"/>
        <updated>2025-05-09T14:34:18.000Z</updated>
        <content type="html"><![CDATA[<h3 id="summary">Summary</h3>
<p>When using the <code>Rack::Session::Pool</code> middleware, simultaneous rack requests can restore a deleted rack session, which allows the unauthenticated user to occupy that session.</p>
<h3 id="details">Details</h3>
<p><a href="https://github.com/rack/rack/blob/v2.2.13/lib/rack/session/abstract/id.rb#L263-L270">Rack session middleware</a> prepares the session at the beginning of request, then saves is back to the store with possible changes applied by host rack application. This way the session becomes to be a subject of race conditions in general sense over concurrent rack requests.</p>
<h3 id="impact">Impact</h3>
<p>When using the <code>Rack::Session::Pool</code> middleware, and provided the attacker can acquire a session cookie (already a major issue), the session may be restored if the attacker can trigger a long running request (within that same session) adjacent to the user logging out, in order to retain illicit access even after a user has attempted to logout.</p>
<h2 id="mitigation">Mitigation</h2>
<ul>
<li>Update to the latest version of <code>rack</code>, or</li>
<li>Ensure your application invalidates sessions atomically by marking them as logged out e.g., using a <code>logged_out</code> flag, instead of deleting them, and check this flag on every request to prevent reuse, or</li>
<li>Implement a custom session store that tracks session invalidation timestamps and refuses to accept session data if the session was invalidated after the request began.</li>
</ul>
<h3 id="related">Related</h3>
<p>As this code was moved to <code>rack-session</code> in Rack 3+, see <a href="https://github.com/rack/rack-session/security/advisories/GHSA-9j94-67jr-4cqj">https://github.com/rack/rack-session/security/advisories/GHSA-9j94-67jr-4cqj</a> for the equivalent advisory in <code>rack-session</code> (affecting Rack 3+ only).</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/rack/rack-session/security/advisories/GHSA-9j94-67jr-4cqj">https://github.com/rack/rack-session/security/advisories/GHSA-9j94-67jr-4cqj</a></li>
<li><a href="https://github.com/rack/rack/security/advisories/GHSA-vpfw-47h7-xj4g">https://github.com/rack/rack/security/advisories/GHSA-vpfw-47h7-xj4g</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2025-32441">https://nvd.nist.gov/vuln/detail/CVE-2025-32441</a></li>
<li><a href="https://github.com/rack/rack/commit/c48e52f7c57e99e1e1bf54c8760d4f082cd1c89d">https://github.com/rack/rack/commit/c48e52f7c57e99e1e1bf54c8760d4f082cd1c89d</a></li>
<li><a href="https://github.com/rack/rack/blob/v2.2.13/lib/rack/session/abstract/id.rb#L263-L270">https://github.com/rack/rack/blob/v2.2.13/lib/rack/session/abstract/id.rb#L263-L270</a></li>
<li><a href="https://github.com/rubysec/ruby-advisory-db/blob/master/gems/rack/CVE-2025-32441.yml">https://github.com/rubysec/ruby-advisory-db/blob/master/gems/rack/CVE-2025-32441.yml</a></li>
<li><a href="https://github.com/advisories/GHSA-vpfw-47h7-xj4g">https://github.com/advisories/GHSA-vpfw-47h7-xj4g</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-vpfw-47h7-xj4g</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2025-05-08T14:45:18.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[rails] Moderate severity vulnerability that affects rails]]></title>
        <id>https://github.com/advisories/GHSA-fjfg-q662-gm6j</id>
        <link href="https://github.com/advisories/GHSA-fjfg-q662-gm6j"/>
        <updated>2025-05-01T18:12:59.000Z</updated>
        <content type="html"><![CDATA[<p>Rails before 1.2.4, as used for Ruby on Rails, allows remote attackers and ActiveResource servers to determine the existence of arbitrary files and read arbitrary XML files via the Hash.from_xml (Hash#from_xml) method, which uses XmlSimple (XML::Simple) unsafely, as demonstrated by reading passwords from the Pidgin (Gaim) .purple/accounts.xml file.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2007-5379">https://nvd.nist.gov/vuln/detail/CVE-2007-5379</a></li>
<li><a href="http://bugs.gentoo.org/show_bug.cgi?id=195315">http://bugs.gentoo.org/show_bug.cgi?id=195315</a></li>
<li><a href="http://docs.info.apple.com/article.html?artnum=307179">http://docs.info.apple.com/article.html?artnum=307179</a></li>
<li><a href="http://lists.apple.com/archives/security-announce/2007/Dec/msg00002.html">http://lists.apple.com/archives/security-announce/2007/Dec/msg00002.html</a></li>
<li><a href="http://security.gentoo.org/glsa/glsa-200711-17.xml">http://security.gentoo.org/glsa/glsa-200711-17.xml</a></li>
<li><a href="http://www.us-cert.gov/cas/techalerts/TA07-352A.html">http://www.us-cert.gov/cas/techalerts/TA07-352A.html</a></li>
<li><a href="http://www.vupen.com/english/advisories/2007/3508">http://www.vupen.com/english/advisories/2007/3508</a></li>
<li><a href="http://www.vupen.com/english/advisories/2007/4238">http://www.vupen.com/english/advisories/2007/4238</a></li>
<li><a href="https://github.com/rubysec/ruby-advisory-db/blob/master/gems/rails/CVE-2007-5379.yml">https://github.com/rubysec/ruby-advisory-db/blob/master/gems/rails/CVE-2007-5379.yml</a></li>
<li><a href="https://rubyonrails.org/2007/10/5/rails-1-2-4-maintenance-release">https://rubyonrails.org/2007/10/5/rails-1-2-4-maintenance-release</a></li>
<li><a href="https://web.archive.org/web/20090602000500/http://dev.rubyonrails.org/ticket/8453">https://web.archive.org/web/20090602000500/http://dev.rubyonrails.org/ticket/8453</a></li>
<li><a href="https://github.com/advisories/GHSA-fjfg-q662-gm6j">https://github.com/advisories/GHSA-fjfg-q662-gm6j</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-fjfg-q662-gm6j</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2017-10-24T18:33:38.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[net-imap] net-imap rubygem vulnerable to possible DoS by memory exhaustion]]></title>
        <id>https://github.com/advisories/GHSA-j3g3-5qv5-52mj</id>
        <link href="https://github.com/advisories/GHSA-j3g3-5qv5-52mj"/>
        <updated>2025-04-30T17:58:01.000Z</updated>
        <content type="html"><![CDATA[<h3 id="summary">Summary</h3>
<p>There is a possibility for denial of service by memory exhaustion when <code>net-imap</code> reads server responses.  At any time while the client is connected, a malicious server can send can send a "literal" byte count, which is automatically read by the client's receiver thread.  The response reader immediately allocates memory for the number of bytes indicated by the server response.</p>
<p>This should not be an issue when securely connecting to trusted IMAP servers that are well-behaved.  It can affect insecure connections and buggy, untrusted, or compromised servers (for example, connecting to a user supplied hostname).</p>
<h3 id="details">Details</h3>
<p>The IMAP protocol allows "literal" strings to be sent in responses, prefixed with their size in curly braces (e.g. <code>{1234567890}\r\n</code>).  When <code>Net::IMAP</code> receives a response containing a literal string, it calls <code>IO#read</code> with that size.  When called with a size, <code>IO#read</code> immediately allocates memory to buffer the entire string before processing continues.  The server does not need to send any more data.  There is no limit on the size of literals that will be accepted.</p>
<h3 id="fix">Fix</h3>
<h4 id="upgrade">Upgrade</h4>
<p>Users should upgrade to <code>net-imap</code> 0.5.7 or later.  A configurable <code>max_response_size</code> limit has been added to <code>Net::IMAP</code>'s response reader.  The <code>max_response_size</code> limit has also been backported to <code>net-imap</code> 0.2.5, 0.3.9, and 0.4.20.</p>
<p>To set a global value for <code>max_response_size</code>, users must upgrade to <code>net-imap</code> ~&gt; 0.4.20, or &gt; 0.5.7.</p>
<h4 id="configuration">Configuration</h4>
<p>To avoid backward compatibility issues for secure connections to trusted well-behaved servers, the default <code>max_response_size</code> for <code>net-imap</code> 0.5.7 is <em>very high</em> (512MiB), and the default <code>max_response_size</code> for <code>net-imap</code> ~&gt; 0.4.20, ~&gt; 0.3.9, and 0.2.5 is <code>nil</code> (unlimited).</p>
<p>When connecting to untrusted servers or using insecure connections, a much lower <code>max_response_size</code> should be used.</p>
<pre><code class="language-ruby"># Set the global max_response_size (only ~&gt; v0.4.20, &gt; 0.5.7)
Net::IMAP.config.max_response_size = 256 &lt;&lt; 10 # 256 KiB

# Set when creating the connection
imap = Net::IMAP.new(hostname, ssl: true,
                     max_response_size: 16 &lt;&lt; 10) # 16 KiB

# Set after creating the connection
imap.max_response_size = 256 &lt;&lt; 20 # 256 KiB
# flush currently waiting read, to ensure the new setting is loaded
imap.noop
</code></pre>
<p><em><strong>Please Note:</strong></em> <code>max_response_size</code> only limits the size <em>per response</em>.  It does not prevent a flood of individual responses and it does not limit how many unhandled responses may be stored on the responses hash.  Users are responsible for adding response handlers to prune excessive unhandled responses.</p>
<h4 id="compatibility-with-lower-max_response_size">Compatibility with lower <code>max_response_size</code></h4>
<p>A lower <code>max_response_size</code> may cause a few commands which legitimately return very large responses to raise an exception and close the connection.  The <code>max_response_size</code> could be temporarily set to a higher value, but paginated or limited versions of commands should be used whenever possible.  For example, to fetch message bodies:</p>
<pre><code class="language-ruby">imap.max_response_size = 256 &lt;&lt; 20 # 256 KiB
imap.noop # flush currently waiting read

# fetch a message in 252KiB chunks
size = imap.uid_fetch(uid, "RFC822.SIZE").first.rfc822_size
limit = 252 &lt;&lt; 10
message = ((0..size) % limit).each_with_object("") {|offset, str|
  str &lt;&lt; imap.uid_fetch(uid, "BODY.PEEK[]&lt;#{offset}.#{limit}&gt;").first.message(offset:)
}

imap.max_response_size = 16 &lt;&lt; 20 # 16 KiB
imap.noop # flush currently waiting read
</code></pre>
<h3 id="references">References</h3>
<ul>
<li>PR to introduce max_response_size: <a href="https://github.com/ruby/net-imap/pull/444">https://github.com/ruby/net-imap/pull/444</a><ul>
<li>Specific commit: <a href="https://github.com/ruby/net-imap/pull/444/commits/0ae8576c1a90bcd9573f81bdad4b4b824642d105#diff-53721cb4d9c3fb86b95cc8476ca2df90968ad8c481645220c607034399151462">0ae8576c1 - lib/net/imap/response_reader.rb</a></li>
</ul>
</li>
<li>Backport to 0.4: <a href="https://github.com/ruby/net-imap/pull/445">https://github.com/ruby/net-imap/pull/445</a></li>
<li>Backport to 0.3: <a href="https://github.com/ruby/net-imap/pull/446">https://github.com/ruby/net-imap/pull/446</a></li>
<li>Backport to 0.2: <a href="https://github.com/ruby/net-imap/pull/447">https://github.com/ruby/net-imap/pull/447</a></li>
</ul>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/ruby/net-imap/security/advisories/GHSA-j3g3-5qv5-52mj">https://github.com/ruby/net-imap/security/advisories/GHSA-j3g3-5qv5-52mj</a></li>
<li><a href="https://github.com/ruby/net-imap/pull/444/commits/0ae8576c1a90bcd9573f81bdad4b4b824642d105#diff-53721cb4d9c3fb86b95cc8476ca2df90968ad8c481645220c607034399151462">https://github.com/ruby/net-imap/pull/444/commits/0ae8576c1a90bcd9573f81bdad4b4b824642d105#diff-53721cb4d9c3fb86b95cc8476ca2df90968ad8c481645220c607034399151462</a></li>
<li><a href="https://github.com/ruby/net-imap/pull/445">https://github.com/ruby/net-imap/pull/445</a></li>
<li><a href="https://github.com/ruby/net-imap/pull/446">https://github.com/ruby/net-imap/pull/446</a></li>
<li><a href="https://github.com/ruby/net-imap/pull/447">https://github.com/ruby/net-imap/pull/447</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2025-43857">https://nvd.nist.gov/vuln/detail/CVE-2025-43857</a></li>
<li><a href="https://github.com/ruby/net-imap/pull/444">https://github.com/ruby/net-imap/pull/444</a></li>
<li><a href="https://github.com/rubysec/ruby-advisory-db/blob/master/gems/net-imap/CVE-2025-43857.yml">https://github.com/rubysec/ruby-advisory-db/blob/master/gems/net-imap/CVE-2025-43857.yml</a></li>
<li><a href="https://github.com/advisories/GHSA-j3g3-5qv5-52mj">https://github.com/advisories/GHSA-j3g3-5qv5-52mj</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-j3g3-5qv5-52mj</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2025-04-28T14:17:32.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[net-imap] net-imap rubygem vulnerable to possible DoS by memory exhaustion]]></title>
        <id>https://github.com/advisories/GHSA-j3g3-5qv5-52mj</id>
        <link href="https://github.com/advisories/GHSA-j3g3-5qv5-52mj"/>
        <updated>2025-04-30T17:58:01.000Z</updated>
        <content type="html"><![CDATA[<h3 id="summary">Summary</h3>
<p>There is a possibility for denial of service by memory exhaustion when <code>net-imap</code> reads server responses.  At any time while the client is connected, a malicious server can send can send a "literal" byte count, which is automatically read by the client's receiver thread.  The response reader immediately allocates memory for the number of bytes indicated by the server response.</p>
<p>This should not be an issue when securely connecting to trusted IMAP servers that are well-behaved.  It can affect insecure connections and buggy, untrusted, or compromised servers (for example, connecting to a user supplied hostname).</p>
<h3 id="details">Details</h3>
<p>The IMAP protocol allows "literal" strings to be sent in responses, prefixed with their size in curly braces (e.g. <code>{1234567890}\r\n</code>).  When <code>Net::IMAP</code> receives a response containing a literal string, it calls <code>IO#read</code> with that size.  When called with a size, <code>IO#read</code> immediately allocates memory to buffer the entire string before processing continues.  The server does not need to send any more data.  There is no limit on the size of literals that will be accepted.</p>
<h3 id="fix">Fix</h3>
<h4 id="upgrade">Upgrade</h4>
<p>Users should upgrade to <code>net-imap</code> 0.5.7 or later.  A configurable <code>max_response_size</code> limit has been added to <code>Net::IMAP</code>'s response reader.  The <code>max_response_size</code> limit has also been backported to <code>net-imap</code> 0.2.5, 0.3.9, and 0.4.20.</p>
<p>To set a global value for <code>max_response_size</code>, users must upgrade to <code>net-imap</code> ~&gt; 0.4.20, or &gt; 0.5.7.</p>
<h4 id="configuration">Configuration</h4>
<p>To avoid backward compatibility issues for secure connections to trusted well-behaved servers, the default <code>max_response_size</code> for <code>net-imap</code> 0.5.7 is <em>very high</em> (512MiB), and the default <code>max_response_size</code> for <code>net-imap</code> ~&gt; 0.4.20, ~&gt; 0.3.9, and 0.2.5 is <code>nil</code> (unlimited).</p>
<p>When connecting to untrusted servers or using insecure connections, a much lower <code>max_response_size</code> should be used.</p>
<pre><code class="language-ruby"># Set the global max_response_size (only ~&gt; v0.4.20, &gt; 0.5.7)
Net::IMAP.config.max_response_size = 256 &lt;&lt; 10 # 256 KiB

# Set when creating the connection
imap = Net::IMAP.new(hostname, ssl: true,
                     max_response_size: 16 &lt;&lt; 10) # 16 KiB

# Set after creating the connection
imap.max_response_size = 256 &lt;&lt; 20 # 256 KiB
# flush currently waiting read, to ensure the new setting is loaded
imap.noop
</code></pre>
<p><em><strong>Please Note:</strong></em> <code>max_response_size</code> only limits the size <em>per response</em>.  It does not prevent a flood of individual responses and it does not limit how many unhandled responses may be stored on the responses hash.  Users are responsible for adding response handlers to prune excessive unhandled responses.</p>
<h4 id="compatibility-with-lower-max_response_size">Compatibility with lower <code>max_response_size</code></h4>
<p>A lower <code>max_response_size</code> may cause a few commands which legitimately return very large responses to raise an exception and close the connection.  The <code>max_response_size</code> could be temporarily set to a higher value, but paginated or limited versions of commands should be used whenever possible.  For example, to fetch message bodies:</p>
<pre><code class="language-ruby">imap.max_response_size = 256 &lt;&lt; 20 # 256 KiB
imap.noop # flush currently waiting read

# fetch a message in 252KiB chunks
size = imap.uid_fetch(uid, "RFC822.SIZE").first.rfc822_size
limit = 252 &lt;&lt; 10
message = ((0..size) % limit).each_with_object("") {|offset, str|
  str &lt;&lt; imap.uid_fetch(uid, "BODY.PEEK[]&lt;#{offset}.#{limit}&gt;").first.message(offset:)
}

imap.max_response_size = 16 &lt;&lt; 20 # 16 KiB
imap.noop # flush currently waiting read
</code></pre>
<h3 id="references">References</h3>
<ul>
<li>PR to introduce max_response_size: <a href="https://github.com/ruby/net-imap/pull/444">https://github.com/ruby/net-imap/pull/444</a><ul>
<li>Specific commit: <a href="https://github.com/ruby/net-imap/pull/444/commits/0ae8576c1a90bcd9573f81bdad4b4b824642d105#diff-53721cb4d9c3fb86b95cc8476ca2df90968ad8c481645220c607034399151462">0ae8576c1 - lib/net/imap/response_reader.rb</a></li>
</ul>
</li>
<li>Backport to 0.4: <a href="https://github.com/ruby/net-imap/pull/445">https://github.com/ruby/net-imap/pull/445</a></li>
<li>Backport to 0.3: <a href="https://github.com/ruby/net-imap/pull/446">https://github.com/ruby/net-imap/pull/446</a></li>
<li>Backport to 0.2: <a href="https://github.com/ruby/net-imap/pull/447">https://github.com/ruby/net-imap/pull/447</a></li>
</ul>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/ruby/net-imap/security/advisories/GHSA-j3g3-5qv5-52mj">https://github.com/ruby/net-imap/security/advisories/GHSA-j3g3-5qv5-52mj</a></li>
<li><a href="https://github.com/ruby/net-imap/pull/444/commits/0ae8576c1a90bcd9573f81bdad4b4b824642d105#diff-53721cb4d9c3fb86b95cc8476ca2df90968ad8c481645220c607034399151462">https://github.com/ruby/net-imap/pull/444/commits/0ae8576c1a90bcd9573f81bdad4b4b824642d105#diff-53721cb4d9c3fb86b95cc8476ca2df90968ad8c481645220c607034399151462</a></li>
<li><a href="https://github.com/ruby/net-imap/pull/445">https://github.com/ruby/net-imap/pull/445</a></li>
<li><a href="https://github.com/ruby/net-imap/pull/446">https://github.com/ruby/net-imap/pull/446</a></li>
<li><a href="https://github.com/ruby/net-imap/pull/447">https://github.com/ruby/net-imap/pull/447</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2025-43857">https://nvd.nist.gov/vuln/detail/CVE-2025-43857</a></li>
<li><a href="https://github.com/ruby/net-imap/pull/444">https://github.com/ruby/net-imap/pull/444</a></li>
<li><a href="https://github.com/rubysec/ruby-advisory-db/blob/master/gems/net-imap/CVE-2025-43857.yml">https://github.com/rubysec/ruby-advisory-db/blob/master/gems/net-imap/CVE-2025-43857.yml</a></li>
<li><a href="https://github.com/advisories/GHSA-j3g3-5qv5-52mj">https://github.com/advisories/GHSA-j3g3-5qv5-52mj</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-j3g3-5qv5-52mj</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2025-04-28T14:17:32.000Z</published>
    </entry>
</feed>