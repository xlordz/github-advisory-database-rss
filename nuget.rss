<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://azu.github.io/github-advisory-database-rss/nuget.rss</id>
    <title>Security Advisory for .NET packages hosted at the NuGet Gallery</title>
    <updated>2025-03-09T07:01:11.769Z</updated>
    <generator>github-advisory-database-rss</generator>
    <link rel="alternate" href="https://github.com/advisories?query=type%3Areviewed+ecosystem%3Anuget"/>
    <subtitle>Security Advisory for .NET packages hosted at the NuGet Gallery on GitHub</subtitle>
    <rights>github-advisory-database-rss</rights>
    <category term="CRITICAL"/>
    <category term="HIGH"/>
    <category term="MODERATE"/>
    <category term="LOW"/>
    <entry>
        <title type="html"><![CDATA[[dotnet-debugger-extensions] Microsoft Security Advisory CVE-2025-24043 | WinDbg Remote Code Execution Vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-hpw7-8qpc-34p3</id>
        <link href="https://github.com/advisories/GHSA-hpw7-8qpc-34p3"/>
        <updated>2025-03-07T16:21:36.000Z</updated>
        <content type="html"><![CDATA[<h1 id="microsoft-security-advisory-cve-2025-24043--windbg-remote-code-execution-vulnerability">Microsoft Security Advisory CVE-2025-24043 | WinDbg Remote Code Execution Vulnerability</h1>
<h2 id="executive-summary"><a name="executive-summary"></a>Executive summary</h2>
<p>Microsoft is releasing this security advisory to provide information about a vulnerability in <a href="https://aka.ms/windbg/download">WinDbg</a>. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.</p>
<p>Improper verification of cryptographic signature in SOS allows an authorized attacker to execute code over a network resulting in Remote Code Execution.</p>
<h2 id="announcement">Announcement</h2>
<p>Announcement for this issue can be found at  <a href="https://github.com/dotnet/announcements/issues/346">https://github.com/dotnet/announcements/issues/346</a></p>
<h2 id="mitigation-factors"><a name="mitigation-factors"></a>Mitigation factors</h2>
<p>Microsoft has not identified any mitigating factors for this vulnerability.</p>
<h2 id="affected-packages"><a name="affected-packages"></a>Affected Packages</h2>
<p>The vulnerability affects any Microsoft .NET Core project if it uses any of affected packages versions listed below</p>
<h3 id="windbg-windbg"><a name="">WinDbg</a> WinDbg</h3>
<table>
<thead>
<tr>
<th>Package name</th>
<th>Affected version</th>
<th>Patched version</th>
</tr>
</thead>
<tbody><tr>
<td><a href="https://www.nuget.org/packages/dotnet-sos">dotnet-sos</a></td>
<td>&lt; 9.0.607501</td>
<td>9.0.607501</td>
</tr>
<tr>
<td><a href="https://www.nuget.org/packages/dotnet-dump">dotnet-dump</a></td>
<td>&lt; 9.0.557512</td>
<td>9.0.607501</td>
</tr>
<tr>
<td><a href="https://www.nuget.org/packages/dotnet-debugger-extensions">dotnet-debugger-extensions</a></td>
<td>9.0.557512</td>
<td>9.0.607601</td>
</tr>
</tbody></table>
<h2 id="advisory-faq">Advisory FAQ</h2>
<h3 id="how-do-i-know-if-i-am-affected"><a name="how-affected"></a>How do I know if I am affected?</h3>
<p>If you you are using the affected version listed in <a href="#affected-software">affected packages</a>, you're exposed to the vulnerability.</p>
<h3 id="how-do-i-fix-the-issue"><a name="how-fix"></a>How do I fix the issue?</h3>
<ol>
<li>To fix the issue please install the latest version of <a href="https://aka.ms/windbg/download">WinDbg</a>.</li>
<li>If your application references the vulnerable package, update the package reference to the patched version.</li>
</ol>
<h2 id="other-information">Other Information</h2>
<h3 id="reporting-security-issues">Reporting Security Issues</h3>
<p>If you have found a potential security issue, please email details to <a href="mailto:secure@microsoft.com">secure@microsoft.com</a>. Reports may qualify for the Microsoft .NET Core &amp; .NET 5 Bounty. Details of the Microsoft .NET Bounty Program including terms and conditions are at <a href="https://aka.ms/corebounty">https://aka.ms/corebounty</a>.</p>
<h3 id="support">Support</h3>
<p>You can ask questions about this issue on GitHub in the .NET GitHub organization. </p>
<h3 id="disclaimer">Disclaimer</h3>
<p>The information provided in this advisory is provided "as is" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.</p>
<h3 id="external-links">External Links</h3>
<p><a href="https://www.cve.org/CVERecord?id=CVE-2025-24043">CVE-2025-24043</a></p>
<h3 id="revisions">Revisions</h3>
<p>V1.0 (March 06, 2024): Advisory published.</p>
<p><em>Version 1.0</em></p>
<p><em>Last Updated 2025-03-06</em></p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/dotnet/diagnostics/security/advisories/GHSA-hpw7-8qpc-34p3">https://github.com/dotnet/diagnostics/security/advisories/GHSA-hpw7-8qpc-34p3</a></li>
<li><a href="https://github.com/dotnet/diagnostics/releases/tag/v9.0.607501">https://github.com/dotnet/diagnostics/releases/tag/v9.0.607501</a></li>
<li><a href="https://github.com/advisories/GHSA-hpw7-8qpc-34p3">https://github.com/advisories/GHSA-hpw7-8qpc-34p3</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-hpw7-8qpc-34p3</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2025-03-07T16:21:34.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[dotnet-dump] Microsoft Security Advisory CVE-2025-24043 | WinDbg Remote Code Execution Vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-hpw7-8qpc-34p3</id>
        <link href="https://github.com/advisories/GHSA-hpw7-8qpc-34p3"/>
        <updated>2025-03-07T16:21:36.000Z</updated>
        <content type="html"><![CDATA[<h1 id="microsoft-security-advisory-cve-2025-24043--windbg-remote-code-execution-vulnerability">Microsoft Security Advisory CVE-2025-24043 | WinDbg Remote Code Execution Vulnerability</h1>
<h2 id="executive-summary"><a name="executive-summary"></a>Executive summary</h2>
<p>Microsoft is releasing this security advisory to provide information about a vulnerability in <a href="https://aka.ms/windbg/download">WinDbg</a>. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.</p>
<p>Improper verification of cryptographic signature in SOS allows an authorized attacker to execute code over a network resulting in Remote Code Execution.</p>
<h2 id="announcement">Announcement</h2>
<p>Announcement for this issue can be found at  <a href="https://github.com/dotnet/announcements/issues/346">https://github.com/dotnet/announcements/issues/346</a></p>
<h2 id="mitigation-factors"><a name="mitigation-factors"></a>Mitigation factors</h2>
<p>Microsoft has not identified any mitigating factors for this vulnerability.</p>
<h2 id="affected-packages"><a name="affected-packages"></a>Affected Packages</h2>
<p>The vulnerability affects any Microsoft .NET Core project if it uses any of affected packages versions listed below</p>
<h3 id="windbg-windbg"><a name="">WinDbg</a> WinDbg</h3>
<table>
<thead>
<tr>
<th>Package name</th>
<th>Affected version</th>
<th>Patched version</th>
</tr>
</thead>
<tbody><tr>
<td><a href="https://www.nuget.org/packages/dotnet-sos">dotnet-sos</a></td>
<td>&lt; 9.0.607501</td>
<td>9.0.607501</td>
</tr>
<tr>
<td><a href="https://www.nuget.org/packages/dotnet-dump">dotnet-dump</a></td>
<td>&lt; 9.0.557512</td>
<td>9.0.607501</td>
</tr>
<tr>
<td><a href="https://www.nuget.org/packages/dotnet-debugger-extensions">dotnet-debugger-extensions</a></td>
<td>9.0.557512</td>
<td>9.0.607601</td>
</tr>
</tbody></table>
<h2 id="advisory-faq">Advisory FAQ</h2>
<h3 id="how-do-i-know-if-i-am-affected"><a name="how-affected"></a>How do I know if I am affected?</h3>
<p>If you you are using the affected version listed in <a href="#affected-software">affected packages</a>, you're exposed to the vulnerability.</p>
<h3 id="how-do-i-fix-the-issue"><a name="how-fix"></a>How do I fix the issue?</h3>
<ol>
<li>To fix the issue please install the latest version of <a href="https://aka.ms/windbg/download">WinDbg</a>.</li>
<li>If your application references the vulnerable package, update the package reference to the patched version.</li>
</ol>
<h2 id="other-information">Other Information</h2>
<h3 id="reporting-security-issues">Reporting Security Issues</h3>
<p>If you have found a potential security issue, please email details to <a href="mailto:secure@microsoft.com">secure@microsoft.com</a>. Reports may qualify for the Microsoft .NET Core &amp; .NET 5 Bounty. Details of the Microsoft .NET Bounty Program including terms and conditions are at <a href="https://aka.ms/corebounty">https://aka.ms/corebounty</a>.</p>
<h3 id="support">Support</h3>
<p>You can ask questions about this issue on GitHub in the .NET GitHub organization. </p>
<h3 id="disclaimer">Disclaimer</h3>
<p>The information provided in this advisory is provided "as is" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.</p>
<h3 id="external-links">External Links</h3>
<p><a href="https://www.cve.org/CVERecord?id=CVE-2025-24043">CVE-2025-24043</a></p>
<h3 id="revisions">Revisions</h3>
<p>V1.0 (March 06, 2024): Advisory published.</p>
<p><em>Version 1.0</em></p>
<p><em>Last Updated 2025-03-06</em></p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/dotnet/diagnostics/security/advisories/GHSA-hpw7-8qpc-34p3">https://github.com/dotnet/diagnostics/security/advisories/GHSA-hpw7-8qpc-34p3</a></li>
<li><a href="https://github.com/dotnet/diagnostics/releases/tag/v9.0.607501">https://github.com/dotnet/diagnostics/releases/tag/v9.0.607501</a></li>
<li><a href="https://github.com/advisories/GHSA-hpw7-8qpc-34p3">https://github.com/advisories/GHSA-hpw7-8qpc-34p3</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-hpw7-8qpc-34p3</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2025-03-07T16:21:34.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[dotnet-sos] Microsoft Security Advisory CVE-2025-24043 | WinDbg Remote Code Execution Vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-hpw7-8qpc-34p3</id>
        <link href="https://github.com/advisories/GHSA-hpw7-8qpc-34p3"/>
        <updated>2025-03-07T16:21:36.000Z</updated>
        <content type="html"><![CDATA[<h1 id="microsoft-security-advisory-cve-2025-24043--windbg-remote-code-execution-vulnerability">Microsoft Security Advisory CVE-2025-24043 | WinDbg Remote Code Execution Vulnerability</h1>
<h2 id="executive-summary"><a name="executive-summary"></a>Executive summary</h2>
<p>Microsoft is releasing this security advisory to provide information about a vulnerability in <a href="https://aka.ms/windbg/download">WinDbg</a>. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.</p>
<p>Improper verification of cryptographic signature in SOS allows an authorized attacker to execute code over a network resulting in Remote Code Execution.</p>
<h2 id="announcement">Announcement</h2>
<p>Announcement for this issue can be found at  <a href="https://github.com/dotnet/announcements/issues/346">https://github.com/dotnet/announcements/issues/346</a></p>
<h2 id="mitigation-factors"><a name="mitigation-factors"></a>Mitigation factors</h2>
<p>Microsoft has not identified any mitigating factors for this vulnerability.</p>
<h2 id="affected-packages"><a name="affected-packages"></a>Affected Packages</h2>
<p>The vulnerability affects any Microsoft .NET Core project if it uses any of affected packages versions listed below</p>
<h3 id="windbg-windbg"><a name="">WinDbg</a> WinDbg</h3>
<table>
<thead>
<tr>
<th>Package name</th>
<th>Affected version</th>
<th>Patched version</th>
</tr>
</thead>
<tbody><tr>
<td><a href="https://www.nuget.org/packages/dotnet-sos">dotnet-sos</a></td>
<td>&lt; 9.0.607501</td>
<td>9.0.607501</td>
</tr>
<tr>
<td><a href="https://www.nuget.org/packages/dotnet-dump">dotnet-dump</a></td>
<td>&lt; 9.0.557512</td>
<td>9.0.607501</td>
</tr>
<tr>
<td><a href="https://www.nuget.org/packages/dotnet-debugger-extensions">dotnet-debugger-extensions</a></td>
<td>9.0.557512</td>
<td>9.0.607601</td>
</tr>
</tbody></table>
<h2 id="advisory-faq">Advisory FAQ</h2>
<h3 id="how-do-i-know-if-i-am-affected"><a name="how-affected"></a>How do I know if I am affected?</h3>
<p>If you you are using the affected version listed in <a href="#affected-software">affected packages</a>, you're exposed to the vulnerability.</p>
<h3 id="how-do-i-fix-the-issue"><a name="how-fix"></a>How do I fix the issue?</h3>
<ol>
<li>To fix the issue please install the latest version of <a href="https://aka.ms/windbg/download">WinDbg</a>.</li>
<li>If your application references the vulnerable package, update the package reference to the patched version.</li>
</ol>
<h2 id="other-information">Other Information</h2>
<h3 id="reporting-security-issues">Reporting Security Issues</h3>
<p>If you have found a potential security issue, please email details to <a href="mailto:secure@microsoft.com">secure@microsoft.com</a>. Reports may qualify for the Microsoft .NET Core &amp; .NET 5 Bounty. Details of the Microsoft .NET Bounty Program including terms and conditions are at <a href="https://aka.ms/corebounty">https://aka.ms/corebounty</a>.</p>
<h3 id="support">Support</h3>
<p>You can ask questions about this issue on GitHub in the .NET GitHub organization. </p>
<h3 id="disclaimer">Disclaimer</h3>
<p>The information provided in this advisory is provided "as is" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.</p>
<h3 id="external-links">External Links</h3>
<p><a href="https://www.cve.org/CVERecord?id=CVE-2025-24043">CVE-2025-24043</a></p>
<h3 id="revisions">Revisions</h3>
<p>V1.0 (March 06, 2024): Advisory published.</p>
<p><em>Version 1.0</em></p>
<p><em>Last Updated 2025-03-06</em></p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/dotnet/diagnostics/security/advisories/GHSA-hpw7-8qpc-34p3">https://github.com/dotnet/diagnostics/security/advisories/GHSA-hpw7-8qpc-34p3</a></li>
<li><a href="https://github.com/dotnet/diagnostics/releases/tag/v9.0.607501">https://github.com/dotnet/diagnostics/releases/tag/v9.0.607501</a></li>
<li><a href="https://github.com/advisories/GHSA-hpw7-8qpc-34p3">https://github.com/advisories/GHSA-hpw7-8qpc-34p3</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-hpw7-8qpc-34p3</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2025-03-07T16:21:34.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[OpenTelemetry.AutoInstrumentation] DoS Vulnerability in TraceContextPropagator.Extract - OpenTelemetry.Api]]></title>
        <id>https://github.com/advisories/GHSA-vc29-vg52-6643</id>
        <link href="https://github.com/advisories/GHSA-vc29-vg52-6643"/>
        <updated>2025-03-06T22:33:44.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p><em>What kind of vulnerability is it? Who is impacted?</em></p>
<p>A vulnerability in <code>OpenTelemetry.Api</code> package <code>1.10.0</code> to <code>1.11.1</code> could cause a <a href="https://github.com/open-telemetry/opentelemetry-dotnet/security/advisories/GHSA-8785-wc3w-h8q6">Denial of Service (DoS) when a tracestate and traceparent header is received</a>. These versions are used in OpenTelemetry .NET Automatic Instrumentation <code>1.10.0-beta.1</code> and <code>1.10.0</code>.</p>
<p>Even if an application does not explicitly use trace context propagation, receiving these headers can still trigger high CPU usage.
This issue impacts any application accessible over the web or backend services that process HTTP requests containing a tracestate header.
Application may experience excessive resource consumption, leading to increased latency, degraded performance, or downtime.</p>
<h3 id="patches">Patches</h3>
<p><em>Has the problem been patched? What versions should users upgrade to?</em></p>
<p>This issue has been resolved in <code>OpenTelemetry.Api</code> <code>1.11.2</code> by reverting the change that introduced the problematic behavior in versions <code>1.10.0</code> to <code>1.11.1</code>. OpenTelemetry .NET Automatic Instrumentation fixes it in <code>1.11.0</code> release.</p>
<h2 id="fixed-version">Fixed version</h2>
<table>
<thead>
<tr>
<th>OpenTelemetry .NET Automatic Instrumentation</th>
<th>Status</th>
</tr>
</thead>
<tbody><tr>
<td>&lt;= 1.9.0</td>
<td>✅ Not affected</td>
</tr>
<tr>
<td>1.10.0-beta.1, 1.10.0</td>
<td>❌ Vulnerable</td>
</tr>
<tr>
<td>1.11.0 (Fixed)</td>
<td>✅ Safe to use</td>
</tr>
</tbody></table>
<h3 id="workarounds">Workarounds</h3>
<p><em>Is there a way for users to fix or remediate the vulnerability without upgrading?</em></p>
<h3 id="references">References</h3>
<p><em>Are there any links users can visit to find out more?</em></p>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/open-telemetry/opentelemetry-dotnet-instrumentation/security/advisories/GHSA-vc29-vg52-6643">https://github.com/open-telemetry/opentelemetry-dotnet-instrumentation/security/advisories/GHSA-vc29-vg52-6643</a></li>
<li><a href="https://github.com/open-telemetry/opentelemetry-dotnet/security/advisories/GHSA-8785-wc3w-h8q6">https://github.com/open-telemetry/opentelemetry-dotnet/security/advisories/GHSA-8785-wc3w-h8q6</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2025-27513">https://nvd.nist.gov/vuln/detail/CVE-2025-27513</a></li>
<li><a href="https://github.com/advisories/GHSA-vc29-vg52-6643">https://github.com/advisories/GHSA-vc29-vg52-6643</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-vc29-vg52-6643</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2025-03-06T22:33:43.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[SixLabors.ImageSharp] Out-of-bounds Write in SixLabors ImageSharp]]></title>
        <id>https://github.com/advisories/GHSA-2cmq-823j-5qj8</id>
        <link href="https://github.com/advisories/GHSA-2cmq-823j-5qj8"/>
        <updated>2025-03-07T13:45:23.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>An Out-of-bounds Write vulnerability has been found in the ImageSharp gif decoder, allowing attackers to cause a crash using a specially crafted gif. This can potentially lead to denial of service.</p>
<h3 id="patches">Patches</h3>
<p>The problem has been patched. All users are advised to upgrade to v3.1.7 or v2.1.10.</p>
<h3 id="workarounds">Workarounds</h3>
<p>None.</p>
<h3 id="references">References</h3>
<p><a href="https://github.com/SixLabors/ImageSharp/issues/2859">https://github.com/SixLabors/ImageSharp/issues/2859</a>
<a href="https://github.com/SixLabors/ImageSharp/issues/2890">https://github.com/SixLabors/ImageSharp/issues/2890</a></p>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/SixLabors/ImageSharp/security/advisories/GHSA-2cmq-823j-5qj8">https://github.com/SixLabors/ImageSharp/security/advisories/GHSA-2cmq-823j-5qj8</a></li>
<li><a href="https://github.com/SixLabors/ImageSharp/issues/2859">https://github.com/SixLabors/ImageSharp/issues/2859</a></li>
<li><a href="https://github.com/SixLabors/ImageSharp/pull/2890">https://github.com/SixLabors/ImageSharp/pull/2890</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2025-27598">https://nvd.nist.gov/vuln/detail/CVE-2025-27598</a></li>
<li><a href="https://github.com/advisories/GHSA-2cmq-823j-5qj8">https://github.com/advisories/GHSA-2cmq-823j-5qj8</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-2cmq-823j-5qj8</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2025-03-06T22:23:48.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[SixLabors.ImageSharp] Out-of-bounds Write in SixLabors ImageSharp]]></title>
        <id>https://github.com/advisories/GHSA-2cmq-823j-5qj8</id>
        <link href="https://github.com/advisories/GHSA-2cmq-823j-5qj8"/>
        <updated>2025-03-07T13:45:23.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>An Out-of-bounds Write vulnerability has been found in the ImageSharp gif decoder, allowing attackers to cause a crash using a specially crafted gif. This can potentially lead to denial of service.</p>
<h3 id="patches">Patches</h3>
<p>The problem has been patched. All users are advised to upgrade to v3.1.7 or v2.1.10.</p>
<h3 id="workarounds">Workarounds</h3>
<p>None.</p>
<h3 id="references">References</h3>
<p><a href="https://github.com/SixLabors/ImageSharp/issues/2859">https://github.com/SixLabors/ImageSharp/issues/2859</a>
<a href="https://github.com/SixLabors/ImageSharp/issues/2890">https://github.com/SixLabors/ImageSharp/issues/2890</a></p>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/SixLabors/ImageSharp/security/advisories/GHSA-2cmq-823j-5qj8">https://github.com/SixLabors/ImageSharp/security/advisories/GHSA-2cmq-823j-5qj8</a></li>
<li><a href="https://github.com/SixLabors/ImageSharp/issues/2859">https://github.com/SixLabors/ImageSharp/issues/2859</a></li>
<li><a href="https://github.com/SixLabors/ImageSharp/pull/2890">https://github.com/SixLabors/ImageSharp/pull/2890</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2025-27598">https://nvd.nist.gov/vuln/detail/CVE-2025-27598</a></li>
<li><a href="https://github.com/advisories/GHSA-2cmq-823j-5qj8">https://github.com/advisories/GHSA-2cmq-823j-5qj8</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-2cmq-823j-5qj8</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2025-03-06T22:23:48.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[OpenTelemetry.Api] OpenTelemetry .NET has Denial of Service (DoS) Vulnerability in API Package]]></title>
        <id>https://github.com/advisories/GHSA-8785-wc3w-h8q6</id>
        <link href="https://github.com/advisories/GHSA-8785-wc3w-h8q6"/>
        <updated>2025-03-05T21:54:15.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p><em>What kind of vulnerability is it? Who is impacted?</em></p>
<p>A vulnerability in <code>OpenTelemetry.Api</code> package <code>1.10.0</code> to <code>1.11.1</code> could cause a Denial of Service (DoS) when a <code>tracestate</code> and <code>traceparent</code> header is received.</p>
<ul>
<li>Even if an application does not explicitly use trace context propagation, receiving these headers can still trigger high CPU usage.</li>
<li>This issue impacts any application accessible over the web or backend services that process HTTP requests containing a <code>tracestate</code> header.</li>
<li>Application may experience excessive resource consumption, leading to increased latency, degraded performance, or downtime.</li>
</ul>
<h3 id="patches">Patches</h3>
<p><em>Has the problem been patched? What versions should users upgrade to?</em></p>
<p>This issue has been <strong data-end="1184" data-start="1143">resolved in OpenTelemetry.Api 1.11.2</strong> by <strong data-end="1212" data-start="1188">reverting the change</strong> that introduced the problematic behavior in versions <strong data-end="1286" data-start="1266">1.10.0 to 1.11.1</strong>.</p><li data-end="1409" data-start="1290">The fix ensures that <strong data-end="1380" data-start="1313">valid tracing headers no longer cause excessive CPU consumption</strong> when received in requests.</li><h4 data-end="1434" data-start="1411"><strong data-end="1434" data-start="1416">Fixed Version:</strong></h4><p></p>
<table>
<thead>
<tr>
<th>OpenTelemetry .NET Version</th>
<th>Status</th>
</tr>
</thead>
<tbody><tr>
<td>&lt;= 1.9.x</td>
<td>✅ Not affected</td>
</tr>
<tr>
<td>1.10.0 - 1.11.1</td>
<td>❌ Vulnerable</td>
</tr>
<tr>
<td>1.11.2 (Fixed)</td>
<td>✅ Safe to use</td>
</tr>
</tbody></table>
<p><strong>Upgrade Command:</strong></p>
<pre><code>dotnet add package OpenTelemetry --version 1.11.2
</code></pre>
<p><strong>Delisting of Affected Packages</strong>
To prevent accidental usage, we have delisted the affected versions (1.10.0 to 1.11.1) from NuGet. Users should avoid these versions and upgrade to 1.11.2 immediately.</p>
<h3 id="workarounds">Workarounds</h3>
<p><em>Is there a way for users to fix or remediate the vulnerability without upgrading?</em></p>
<h3 id="references">References</h3>
<p><em>Are there any links users can visit to find out more?</em></p>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/open-telemetry/opentelemetry-dotnet/security/advisories/GHSA-8785-wc3w-h8q6">https://github.com/open-telemetry/opentelemetry-dotnet/security/advisories/GHSA-8785-wc3w-h8q6</a></li>
<li><a href="https://github.com/open-telemetry/opentelemetry-dotnet/pull/6161">https://github.com/open-telemetry/opentelemetry-dotnet/pull/6161</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2025-27513">https://nvd.nist.gov/vuln/detail/CVE-2025-27513</a></li>
<li><a href="https://github.com/open-telemetry/opentelemetry-dotnet/commit/1b555c1201413f2f55f2cd3c4ba03ef4b615b6b5">https://github.com/open-telemetry/opentelemetry-dotnet/commit/1b555c1201413f2f55f2cd3c4ba03ef4b615b6b5</a></li>
<li><a href="https://github.com/advisories/GHSA-8785-wc3w-h8q6">https://github.com/advisories/GHSA-8785-wc3w-h8q6</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-8785-wc3w-h8q6</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2025-03-05T18:15:22.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[OpenTelemetry.Api] OpenTelemetry .NET has Denial of Service (DoS) Vulnerability in API Package]]></title>
        <id>https://github.com/advisories/GHSA-8785-wc3w-h8q6</id>
        <link href="https://github.com/advisories/GHSA-8785-wc3w-h8q6"/>
        <updated>2025-03-05T21:54:15.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p><em>What kind of vulnerability is it? Who is impacted?</em></p>
<p>A vulnerability in <code>OpenTelemetry.Api</code> package <code>1.10.0</code> to <code>1.11.1</code> could cause a Denial of Service (DoS) when a <code>tracestate</code> and <code>traceparent</code> header is received.</p>
<ul>
<li>Even if an application does not explicitly use trace context propagation, receiving these headers can still trigger high CPU usage.</li>
<li>This issue impacts any application accessible over the web or backend services that process HTTP requests containing a <code>tracestate</code> header.</li>
<li>Application may experience excessive resource consumption, leading to increased latency, degraded performance, or downtime.</li>
</ul>
<h3 id="patches">Patches</h3>
<p><em>Has the problem been patched? What versions should users upgrade to?</em></p>
<p>This issue has been <strong data-end="1184" data-start="1143">resolved in OpenTelemetry.Api 1.11.2</strong> by <strong data-end="1212" data-start="1188">reverting the change</strong> that introduced the problematic behavior in versions <strong data-end="1286" data-start="1266">1.10.0 to 1.11.1</strong>.</p><li data-end="1409" data-start="1290">The fix ensures that <strong data-end="1380" data-start="1313">valid tracing headers no longer cause excessive CPU consumption</strong> when received in requests.</li><h4 data-end="1434" data-start="1411"><strong data-end="1434" data-start="1416">Fixed Version:</strong></h4><p></p>
<table>
<thead>
<tr>
<th>OpenTelemetry .NET Version</th>
<th>Status</th>
</tr>
</thead>
<tbody><tr>
<td>&lt;= 1.9.x</td>
<td>✅ Not affected</td>
</tr>
<tr>
<td>1.10.0 - 1.11.1</td>
<td>❌ Vulnerable</td>
</tr>
<tr>
<td>1.11.2 (Fixed)</td>
<td>✅ Safe to use</td>
</tr>
</tbody></table>
<p><strong>Upgrade Command:</strong></p>
<pre><code>dotnet add package OpenTelemetry --version 1.11.2
</code></pre>
<p><strong>Delisting of Affected Packages</strong>
To prevent accidental usage, we have delisted the affected versions (1.10.0 to 1.11.1) from NuGet. Users should avoid these versions and upgrade to 1.11.2 immediately.</p>
<h3 id="workarounds">Workarounds</h3>
<p><em>Is there a way for users to fix or remediate the vulnerability without upgrading?</em></p>
<h3 id="references">References</h3>
<p><em>Are there any links users can visit to find out more?</em></p>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/open-telemetry/opentelemetry-dotnet/security/advisories/GHSA-8785-wc3w-h8q6">https://github.com/open-telemetry/opentelemetry-dotnet/security/advisories/GHSA-8785-wc3w-h8q6</a></li>
<li><a href="https://github.com/open-telemetry/opentelemetry-dotnet/pull/6161">https://github.com/open-telemetry/opentelemetry-dotnet/pull/6161</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2025-27513">https://nvd.nist.gov/vuln/detail/CVE-2025-27513</a></li>
<li><a href="https://github.com/open-telemetry/opentelemetry-dotnet/commit/1b555c1201413f2f55f2cd3c4ba03ef4b615b6b5">https://github.com/open-telemetry/opentelemetry-dotnet/commit/1b555c1201413f2f55f2cd3c4ba03ef4b615b6b5</a></li>
<li><a href="https://github.com/advisories/GHSA-8785-wc3w-h8q6">https://github.com/advisories/GHSA-8785-wc3w-h8q6</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-8785-wc3w-h8q6</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2025-03-05T18:15:22.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[OpenTelemetry.Api] OpenTelemetry .NET has Denial of Service (DoS) Vulnerability in API Package]]></title>
        <id>https://github.com/advisories/GHSA-8785-wc3w-h8q6</id>
        <link href="https://github.com/advisories/GHSA-8785-wc3w-h8q6"/>
        <updated>2025-03-05T21:54:15.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p><em>What kind of vulnerability is it? Who is impacted?</em></p>
<p>A vulnerability in <code>OpenTelemetry.Api</code> package <code>1.10.0</code> to <code>1.11.1</code> could cause a Denial of Service (DoS) when a <code>tracestate</code> and <code>traceparent</code> header is received.</p>
<ul>
<li>Even if an application does not explicitly use trace context propagation, receiving these headers can still trigger high CPU usage.</li>
<li>This issue impacts any application accessible over the web or backend services that process HTTP requests containing a <code>tracestate</code> header.</li>
<li>Application may experience excessive resource consumption, leading to increased latency, degraded performance, or downtime.</li>
</ul>
<h3 id="patches">Patches</h3>
<p><em>Has the problem been patched? What versions should users upgrade to?</em></p>
<p>This issue has been <strong data-end="1184" data-start="1143">resolved in OpenTelemetry.Api 1.11.2</strong> by <strong data-end="1212" data-start="1188">reverting the change</strong> that introduced the problematic behavior in versions <strong data-end="1286" data-start="1266">1.10.0 to 1.11.1</strong>.</p><li data-end="1409" data-start="1290">The fix ensures that <strong data-end="1380" data-start="1313">valid tracing headers no longer cause excessive CPU consumption</strong> when received in requests.</li><h4 data-end="1434" data-start="1411"><strong data-end="1434" data-start="1416">Fixed Version:</strong></h4><p></p>
<table>
<thead>
<tr>
<th>OpenTelemetry .NET Version</th>
<th>Status</th>
</tr>
</thead>
<tbody><tr>
<td>&lt;= 1.9.x</td>
<td>✅ Not affected</td>
</tr>
<tr>
<td>1.10.0 - 1.11.1</td>
<td>❌ Vulnerable</td>
</tr>
<tr>
<td>1.11.2 (Fixed)</td>
<td>✅ Safe to use</td>
</tr>
</tbody></table>
<p><strong>Upgrade Command:</strong></p>
<pre><code>dotnet add package OpenTelemetry --version 1.11.2
</code></pre>
<p><strong>Delisting of Affected Packages</strong>
To prevent accidental usage, we have delisted the affected versions (1.10.0 to 1.11.1) from NuGet. Users should avoid these versions and upgrade to 1.11.2 immediately.</p>
<h3 id="workarounds">Workarounds</h3>
<p><em>Is there a way for users to fix or remediate the vulnerability without upgrading?</em></p>
<h3 id="references">References</h3>
<p><em>Are there any links users can visit to find out more?</em></p>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/open-telemetry/opentelemetry-dotnet/security/advisories/GHSA-8785-wc3w-h8q6">https://github.com/open-telemetry/opentelemetry-dotnet/security/advisories/GHSA-8785-wc3w-h8q6</a></li>
<li><a href="https://github.com/open-telemetry/opentelemetry-dotnet/pull/6161">https://github.com/open-telemetry/opentelemetry-dotnet/pull/6161</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2025-27513">https://nvd.nist.gov/vuln/detail/CVE-2025-27513</a></li>
<li><a href="https://github.com/open-telemetry/opentelemetry-dotnet/commit/1b555c1201413f2f55f2cd3c4ba03ef4b615b6b5">https://github.com/open-telemetry/opentelemetry-dotnet/commit/1b555c1201413f2f55f2cd3c4ba03ef4b615b6b5</a></li>
<li><a href="https://github.com/advisories/GHSA-8785-wc3w-h8q6">https://github.com/advisories/GHSA-8785-wc3w-h8q6</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-8785-wc3w-h8q6</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2025-03-05T18:15:22.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[OpenTelemetry.Api] OpenTelemetry .NET has Denial of Service (DoS) Vulnerability in API Package]]></title>
        <id>https://github.com/advisories/GHSA-8785-wc3w-h8q6</id>
        <link href="https://github.com/advisories/GHSA-8785-wc3w-h8q6"/>
        <updated>2025-03-05T21:54:15.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p><em>What kind of vulnerability is it? Who is impacted?</em></p>
<p>A vulnerability in <code>OpenTelemetry.Api</code> package <code>1.10.0</code> to <code>1.11.1</code> could cause a Denial of Service (DoS) when a <code>tracestate</code> and <code>traceparent</code> header is received.</p>
<ul>
<li>Even if an application does not explicitly use trace context propagation, receiving these headers can still trigger high CPU usage.</li>
<li>This issue impacts any application accessible over the web or backend services that process HTTP requests containing a <code>tracestate</code> header.</li>
<li>Application may experience excessive resource consumption, leading to increased latency, degraded performance, or downtime.</li>
</ul>
<h3 id="patches">Patches</h3>
<p><em>Has the problem been patched? What versions should users upgrade to?</em></p>
<p>This issue has been <strong data-end="1184" data-start="1143">resolved in OpenTelemetry.Api 1.11.2</strong> by <strong data-end="1212" data-start="1188">reverting the change</strong> that introduced the problematic behavior in versions <strong data-end="1286" data-start="1266">1.10.0 to 1.11.1</strong>.</p><li data-end="1409" data-start="1290">The fix ensures that <strong data-end="1380" data-start="1313">valid tracing headers no longer cause excessive CPU consumption</strong> when received in requests.</li><h4 data-end="1434" data-start="1411"><strong data-end="1434" data-start="1416">Fixed Version:</strong></h4><p></p>
<table>
<thead>
<tr>
<th>OpenTelemetry .NET Version</th>
<th>Status</th>
</tr>
</thead>
<tbody><tr>
<td>&lt;= 1.9.x</td>
<td>✅ Not affected</td>
</tr>
<tr>
<td>1.10.0 - 1.11.1</td>
<td>❌ Vulnerable</td>
</tr>
<tr>
<td>1.11.2 (Fixed)</td>
<td>✅ Safe to use</td>
</tr>
</tbody></table>
<p><strong>Upgrade Command:</strong></p>
<pre><code>dotnet add package OpenTelemetry --version 1.11.2
</code></pre>
<p><strong>Delisting of Affected Packages</strong>
To prevent accidental usage, we have delisted the affected versions (1.10.0 to 1.11.1) from NuGet. Users should avoid these versions and upgrade to 1.11.2 immediately.</p>
<h3 id="workarounds">Workarounds</h3>
<p><em>Is there a way for users to fix or remediate the vulnerability without upgrading?</em></p>
<h3 id="references">References</h3>
<p><em>Are there any links users can visit to find out more?</em></p>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/open-telemetry/opentelemetry-dotnet/security/advisories/GHSA-8785-wc3w-h8q6">https://github.com/open-telemetry/opentelemetry-dotnet/security/advisories/GHSA-8785-wc3w-h8q6</a></li>
<li><a href="https://github.com/open-telemetry/opentelemetry-dotnet/pull/6161">https://github.com/open-telemetry/opentelemetry-dotnet/pull/6161</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2025-27513">https://nvd.nist.gov/vuln/detail/CVE-2025-27513</a></li>
<li><a href="https://github.com/open-telemetry/opentelemetry-dotnet/commit/1b555c1201413f2f55f2cd3c4ba03ef4b615b6b5">https://github.com/open-telemetry/opentelemetry-dotnet/commit/1b555c1201413f2f55f2cd3c4ba03ef4b615b6b5</a></li>
<li><a href="https://github.com/advisories/GHSA-8785-wc3w-h8q6">https://github.com/advisories/GHSA-8785-wc3w-h8q6</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-8785-wc3w-h8q6</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2025-03-05T18:15:22.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[OpenTelemetry.Api] OpenTelemetry .NET has Denial of Service (DoS) Vulnerability in API Package]]></title>
        <id>https://github.com/advisories/GHSA-8785-wc3w-h8q6</id>
        <link href="https://github.com/advisories/GHSA-8785-wc3w-h8q6"/>
        <updated>2025-03-05T21:54:15.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p><em>What kind of vulnerability is it? Who is impacted?</em></p>
<p>A vulnerability in <code>OpenTelemetry.Api</code> package <code>1.10.0</code> to <code>1.11.1</code> could cause a Denial of Service (DoS) when a <code>tracestate</code> and <code>traceparent</code> header is received.</p>
<ul>
<li>Even if an application does not explicitly use trace context propagation, receiving these headers can still trigger high CPU usage.</li>
<li>This issue impacts any application accessible over the web or backend services that process HTTP requests containing a <code>tracestate</code> header.</li>
<li>Application may experience excessive resource consumption, leading to increased latency, degraded performance, or downtime.</li>
</ul>
<h3 id="patches">Patches</h3>
<p><em>Has the problem been patched? What versions should users upgrade to?</em></p>
<p>This issue has been <strong data-end="1184" data-start="1143">resolved in OpenTelemetry.Api 1.11.2</strong> by <strong data-end="1212" data-start="1188">reverting the change</strong> that introduced the problematic behavior in versions <strong data-end="1286" data-start="1266">1.10.0 to 1.11.1</strong>.</p><li data-end="1409" data-start="1290">The fix ensures that <strong data-end="1380" data-start="1313">valid tracing headers no longer cause excessive CPU consumption</strong> when received in requests.</li><h4 data-end="1434" data-start="1411"><strong data-end="1434" data-start="1416">Fixed Version:</strong></h4><p></p>
<table>
<thead>
<tr>
<th>OpenTelemetry .NET Version</th>
<th>Status</th>
</tr>
</thead>
<tbody><tr>
<td>&lt;= 1.9.x</td>
<td>✅ Not affected</td>
</tr>
<tr>
<td>1.10.0 - 1.11.1</td>
<td>❌ Vulnerable</td>
</tr>
<tr>
<td>1.11.2 (Fixed)</td>
<td>✅ Safe to use</td>
</tr>
</tbody></table>
<p><strong>Upgrade Command:</strong></p>
<pre><code>dotnet add package OpenTelemetry --version 1.11.2
</code></pre>
<p><strong>Delisting of Affected Packages</strong>
To prevent accidental usage, we have delisted the affected versions (1.10.0 to 1.11.1) from NuGet. Users should avoid these versions and upgrade to 1.11.2 immediately.</p>
<h3 id="workarounds">Workarounds</h3>
<p><em>Is there a way for users to fix or remediate the vulnerability without upgrading?</em></p>
<h3 id="references">References</h3>
<p><em>Are there any links users can visit to find out more?</em></p>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/open-telemetry/opentelemetry-dotnet/security/advisories/GHSA-8785-wc3w-h8q6">https://github.com/open-telemetry/opentelemetry-dotnet/security/advisories/GHSA-8785-wc3w-h8q6</a></li>
<li><a href="https://github.com/open-telemetry/opentelemetry-dotnet/pull/6161">https://github.com/open-telemetry/opentelemetry-dotnet/pull/6161</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2025-27513">https://nvd.nist.gov/vuln/detail/CVE-2025-27513</a></li>
<li><a href="https://github.com/open-telemetry/opentelemetry-dotnet/commit/1b555c1201413f2f55f2cd3c4ba03ef4b615b6b5">https://github.com/open-telemetry/opentelemetry-dotnet/commit/1b555c1201413f2f55f2cd3c4ba03ef4b615b6b5</a></li>
<li><a href="https://github.com/advisories/GHSA-8785-wc3w-h8q6">https://github.com/advisories/GHSA-8785-wc3w-h8q6</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-8785-wc3w-h8q6</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2025-03-05T18:15:22.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[OPCFoundation.NetStandard.Opc.Ua.Core] Security Update for the OPC UA .NET Standard Stack]]></title>
        <id>https://github.com/advisories/GHSA-h958-fxgg-g7w3</id>
        <link href="https://github.com/advisories/GHSA-h958-fxgg-g7w3"/>
        <updated>2025-03-03T20:11:01.000Z</updated>
        <content type="html"><![CDATA[<p>This security update resolves a vulnerability in the OPC UA .NET Standard Stack that allows an unauthorized attacker to bypass application authentication when the deprecated Basic128Rsa15 security policy is enabled.</p>
<p>Note that the Basic128Rsa15 is disabled by default so most users will not be affected. When this patch is applied the Server closes all channels using the Basic128Rsa15 if an attack is detected. This introduces a DoS before any compromise can occur which is preferable to a compromise. To prevent this failure, applications must stop using Basic128Rsa15.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/OPCFoundation/UA-.NETStandard/security/advisories/GHSA-h958-fxgg-g7w3">https://github.com/OPCFoundation/UA-.NETStandard/security/advisories/GHSA-h958-fxgg-g7w3</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-42512">https://nvd.nist.gov/vuln/detail/CVE-2024-42512</a></li>
<li><a href="https://files.opcfoundation.org/SecurityBulletins/OPC%20Foundation%20Security%20Bulletin%20CVE-2024-42512.pdf">https://files.opcfoundation.org/SecurityBulletins/OPC%20Foundation%20Security%20Bulletin%20CVE-2024-42512.pdf</a></li>
<li><a href="https://github.com/advisories/GHSA-h958-fxgg-g7w3">https://github.com/advisories/GHSA-h958-fxgg-g7w3</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-h958-fxgg-g7w3</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2025-03-03T20:10:59.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[OPCFoundation.NetStandard.Opc.Ua.Bindings.Https] Security Update for the OPC UA .NET Standard Stack]]></title>
        <id>https://github.com/advisories/GHSA-4rcc-7pg7-f57f</id>
        <link href="https://github.com/advisories/GHSA-4rcc-7pg7-f57f"/>
        <updated>2025-03-03T20:09:57.000Z</updated>
        <content type="html"><![CDATA[<p>This security update resolves a vulnerability in the OPC UA .NET Standard Stack that allows an unauthorized attacker to bypass application authentication when using HTTPS endpoints.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/OPCFoundation/UA-.NETStandard/security/advisories/GHSA-4rcc-7pg7-f57f">https://github.com/OPCFoundation/UA-.NETStandard/security/advisories/GHSA-4rcc-7pg7-f57f</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-42513">https://nvd.nist.gov/vuln/detail/CVE-2024-42513</a></li>
<li><a href="https://files.opcfoundation.org/SecurityBulletins/OPC%20Foundation%20Security%20Bulletin%20CVE-2024-42513.pdf">https://files.opcfoundation.org/SecurityBulletins/OPC%20Foundation%20Security%20Bulletin%20CVE-2024-42513.pdf</a></li>
<li><a href="https://github.com/OPCFoundation/UA-.NETStandard/tree/1.5.374.158">https://github.com/OPCFoundation/UA-.NETStandard/tree/1.5.374.158</a></li>
<li><a href="https://github.com/advisories/GHSA-4rcc-7pg7-f57f">https://github.com/advisories/GHSA-4rcc-7pg7-f57f</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-4rcc-7pg7-f57f</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2025-03-03T20:09:54.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[AutoQueryable] AutoQueryable leaks sensitive information]]></title>
        <id>https://github.com/advisories/GHSA-m4mm-534h-5cp5</id>
        <link href="https://github.com/advisories/GHSA-m4mm-534h-5cp5"/>
        <updated>2025-02-20T22:58:43.000Z</updated>
        <content type="html"><![CDATA[<p>An issue in trenoncourt AutoQueryable v.1.7.0 allows a remote attacker to obtain sensitive information via the Unselectable function.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-57716">https://nvd.nist.gov/vuln/detail/CVE-2024-57716</a></li>
<li><a href="https://github.com/pentesttoolscom/vulnerability-research/tree/master/CVE-2024-57716">https://github.com/pentesttoolscom/vulnerability-research/tree/master/CVE-2024-57716</a></li>
<li><a href="https://github.com/trenoncourt/AutoQueryable">https://github.com/trenoncourt/AutoQueryable</a></li>
<li><a href="https://github.com/advisories/GHSA-m4mm-534h-5cp5">https://github.com/advisories/GHSA-m4mm-534h-5cp5</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-m4mm-534h-5cp5</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2025-02-20T18:31:24.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[Umbraco.Cms.Web.Common] XSS/HTML Injection Vulnerability in Umbraco Preview Badge]]></title>
        <id>https://github.com/advisories/GHSA-69cg-w8vm-h229</id>
        <link href="https://github.com/advisories/GHSA-69cg-w8vm-h229"/>
        <updated>2025-02-19T17:59:40.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>Authenticated users are able to exploit an XSS vulnerability when viewing previewed content.</p>
<h3 id="patches">Patches</h3>
<p>Will be patched in 10.8.8, 13.5.3, 14.3.2 and 15.1.2.</p>
<h3 id="workarounds">Workarounds</h3>
<p>None available.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/umbraco/Umbraco-CMS/security/advisories/GHSA-69cg-w8vm-h229">https://github.com/umbraco/Umbraco-CMS/security/advisories/GHSA-69cg-w8vm-h229</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-10761">https://nvd.nist.gov/vuln/detail/CVE-2024-10761</a></li>
<li><a href="https://drive.google.com/file/d/1YoZgdlS3QT7Xu005j9RO-FFUT8RbB0Da/view?usp=sharing">https://drive.google.com/file/d/1YoZgdlS3QT7Xu005j9RO-FFUT8RbB0Da/view?usp=sharing</a></li>
<li><a href="https://vuldb.com/?ctiid.282930">https://vuldb.com/?ctiid.282930</a></li>
<li><a href="https://vuldb.com/?id.282930">https://vuldb.com/?id.282930</a></li>
<li><a href="https://vuldb.com/?submit.427091">https://vuldb.com/?submit.427091</a></li>
<li><a href="https://github.com/advisories/GHSA-69cg-w8vm-h229">https://github.com/advisories/GHSA-69cg-w8vm-h229</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-69cg-w8vm-h229</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2025-01-21T21:24:20.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[Umbraco.Cms.Web.Common] XSS/HTML Injection Vulnerability in Umbraco Preview Badge]]></title>
        <id>https://github.com/advisories/GHSA-69cg-w8vm-h229</id>
        <link href="https://github.com/advisories/GHSA-69cg-w8vm-h229"/>
        <updated>2025-02-19T17:59:40.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>Authenticated users are able to exploit an XSS vulnerability when viewing previewed content.</p>
<h3 id="patches">Patches</h3>
<p>Will be patched in 10.8.8, 13.5.3, 14.3.2 and 15.1.2.</p>
<h3 id="workarounds">Workarounds</h3>
<p>None available.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/umbraco/Umbraco-CMS/security/advisories/GHSA-69cg-w8vm-h229">https://github.com/umbraco/Umbraco-CMS/security/advisories/GHSA-69cg-w8vm-h229</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-10761">https://nvd.nist.gov/vuln/detail/CVE-2024-10761</a></li>
<li><a href="https://drive.google.com/file/d/1YoZgdlS3QT7Xu005j9RO-FFUT8RbB0Da/view?usp=sharing">https://drive.google.com/file/d/1YoZgdlS3QT7Xu005j9RO-FFUT8RbB0Da/view?usp=sharing</a></li>
<li><a href="https://vuldb.com/?ctiid.282930">https://vuldb.com/?ctiid.282930</a></li>
<li><a href="https://vuldb.com/?id.282930">https://vuldb.com/?id.282930</a></li>
<li><a href="https://vuldb.com/?submit.427091">https://vuldb.com/?submit.427091</a></li>
<li><a href="https://github.com/advisories/GHSA-69cg-w8vm-h229">https://github.com/advisories/GHSA-69cg-w8vm-h229</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-69cg-w8vm-h229</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2025-01-21T21:24:20.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[Umbraco.Cms.Web.Common] XSS/HTML Injection Vulnerability in Umbraco Preview Badge]]></title>
        <id>https://github.com/advisories/GHSA-69cg-w8vm-h229</id>
        <link href="https://github.com/advisories/GHSA-69cg-w8vm-h229"/>
        <updated>2025-02-19T17:59:40.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>Authenticated users are able to exploit an XSS vulnerability when viewing previewed content.</p>
<h3 id="patches">Patches</h3>
<p>Will be patched in 10.8.8, 13.5.3, 14.3.2 and 15.1.2.</p>
<h3 id="workarounds">Workarounds</h3>
<p>None available.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/umbraco/Umbraco-CMS/security/advisories/GHSA-69cg-w8vm-h229">https://github.com/umbraco/Umbraco-CMS/security/advisories/GHSA-69cg-w8vm-h229</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-10761">https://nvd.nist.gov/vuln/detail/CVE-2024-10761</a></li>
<li><a href="https://drive.google.com/file/d/1YoZgdlS3QT7Xu005j9RO-FFUT8RbB0Da/view?usp=sharing">https://drive.google.com/file/d/1YoZgdlS3QT7Xu005j9RO-FFUT8RbB0Da/view?usp=sharing</a></li>
<li><a href="https://vuldb.com/?ctiid.282930">https://vuldb.com/?ctiid.282930</a></li>
<li><a href="https://vuldb.com/?id.282930">https://vuldb.com/?id.282930</a></li>
<li><a href="https://vuldb.com/?submit.427091">https://vuldb.com/?submit.427091</a></li>
<li><a href="https://github.com/advisories/GHSA-69cg-w8vm-h229">https://github.com/advisories/GHSA-69cg-w8vm-h229</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-69cg-w8vm-h229</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2025-01-21T21:24:20.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[Umbraco.Cms.Web.Common] XSS/HTML Injection Vulnerability in Umbraco Preview Badge]]></title>
        <id>https://github.com/advisories/GHSA-69cg-w8vm-h229</id>
        <link href="https://github.com/advisories/GHSA-69cg-w8vm-h229"/>
        <updated>2025-02-19T17:59:40.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>Authenticated users are able to exploit an XSS vulnerability when viewing previewed content.</p>
<h3 id="patches">Patches</h3>
<p>Will be patched in 10.8.8, 13.5.3, 14.3.2 and 15.1.2.</p>
<h3 id="workarounds">Workarounds</h3>
<p>None available.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/umbraco/Umbraco-CMS/security/advisories/GHSA-69cg-w8vm-h229">https://github.com/umbraco/Umbraco-CMS/security/advisories/GHSA-69cg-w8vm-h229</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-10761">https://nvd.nist.gov/vuln/detail/CVE-2024-10761</a></li>
<li><a href="https://drive.google.com/file/d/1YoZgdlS3QT7Xu005j9RO-FFUT8RbB0Da/view?usp=sharing">https://drive.google.com/file/d/1YoZgdlS3QT7Xu005j9RO-FFUT8RbB0Da/view?usp=sharing</a></li>
<li><a href="https://vuldb.com/?ctiid.282930">https://vuldb.com/?ctiid.282930</a></li>
<li><a href="https://vuldb.com/?id.282930">https://vuldb.com/?id.282930</a></li>
<li><a href="https://vuldb.com/?submit.427091">https://vuldb.com/?submit.427091</a></li>
<li><a href="https://github.com/advisories/GHSA-69cg-w8vm-h229">https://github.com/advisories/GHSA-69cg-w8vm-h229</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-69cg-w8vm-h229</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2025-01-21T21:24:20.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[Duende.AccessTokenManagement] Duende.AccessTokenManagement race condition when concurrently retrieving customized Client Credentials Access Tokens]]></title>
        <id>https://github.com/advisories/GHSA-qxj7-2x7w-3mpp</id>
        <link href="https://github.com/advisories/GHSA-qxj7-2x7w-3mpp"/>
        <updated>2025-02-19T17:47:22.000Z</updated>
        <content type="html"><![CDATA[<h3 id="summary">Summary</h3>
<p>Duende.AccessTokenManagement contains a race condition when requesting access tokens using the client credentials flow. Concurrent requests to obtain an access token using differing protocol parameters can return access tokens obtained with the wrong scope, resource indicator, or other protocol parameters. Such usage is somewhat atypical, and only a small percentage of users are likely to be affected.</p>
<h3 id="details">Details</h3>
<p>Duende.AccessTokenManagement can request access tokens using the client credentials flow in several ways. In basic usage, the client credentials flow is configured once and the parameters do not vary. In more advanced situations, requests with varying protocol parameters may be made by calling specific overloads of these methods:</p>
<ul>
<li><code>HttpContext.GetClientAccessTokenAsync()</code></li>
<li><code>IClientCredentialsTokenManagementService.GetAccessTokenAsync()</code></li>
</ul>
<p>There are overloads of both of these methods that accept a <code>TokenRequestParameters</code> object that customizes token request parameters. However, concurrent requests with varying <code>TokenRequestParameters</code> will result in the same token for all concurrent calls.</p>
<h3 id="upgrading">Upgrading</h3>
<p>Most users can simply update the NuGet package to the latest version. Customizations of the <code>IClientCredentialsTokenCache</code> that derive from the default implementation (<code>DistributedClientCredentialsTokenCache</code>) will require a small code change, as its constructor was changed to add a dependency on the <code>ITokenRequestSynchronization</code> service. The synchronization service will need to be injected into the derived class and passed to the base constructor.</p>
<h3 id="impact">Impact</h3>
<p>The impact of this vulnerability depends on how Duende.AccessTokenManagement is used and on the security architecture of the solution. Most users will not be vulnerable to this issue. More advanced users may run into this issue by calling the methods specified above with customized token request parameters. The impact of obtaining an access token with different than intended protocol parameters will vary depending on application logic, security architecture, and the authorization policy of the resource servers.</p>
<p>Thank you to <strong>Michael Dimoudis</strong> of <strong>PageUp</strong> for finding this issue and responsibly disclosing it!</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/DuendeSoftware/foss/security/advisories/GHSA-qxj7-2x7w-3mpp">https://github.com/DuendeSoftware/foss/security/advisories/GHSA-qxj7-2x7w-3mpp</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2025-26620">https://nvd.nist.gov/vuln/detail/CVE-2025-26620</a></li>
<li><a href="https://github.com/DuendeSoftware/foss/commit/a33332ddec0ebf3c048ba85427e3c77d47c68dac">https://github.com/DuendeSoftware/foss/commit/a33332ddec0ebf3c048ba85427e3c77d47c68dac</a></li>
<li><a href="https://github.com/advisories/GHSA-qxj7-2x7w-3mpp">https://github.com/advisories/GHSA-qxj7-2x7w-3mpp</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-qxj7-2x7w-3mpp</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2025-02-19T17:47:19.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[CIE.AspNetCore.Authentication] AspNetCore Remote Authenticator for CIE3.0 Allows SAML Response Signature Verification Bypass]]></title>
        <id>https://github.com/advisories/GHSA-vq63-8f72-f486</id>
        <link href="https://github.com/advisories/GHSA-vq63-8f72-f486"/>
        <updated>2025-02-18T19:25:20.000Z</updated>
        <content type="html"><![CDATA[<h3 id="description">Description</h3>
<p>Authentication using Spid and CIE is based on the SAML2 standard which provides for two entities:</p>
<p>Identity Provider (IdP): the system that authenticates users and provides identity information ( SAML assertions ) to the Service Provider, essentially, it is responsible for managing user credentials and identity;
Service Provider (SP): The system that provides a service to the user and relies on the Identity Provider to authenticate the user, receives SAML assertions from the IdP to grant access to resources.
The library <code>cie-aspnetcorerefers</code> to the second entity, i.e. the SP, and implements the validation logic of the SAML assertions present within the SAML response . The following is a summary diagram of an authentication flow via SAML:</p>
<p><img alt="" src="https://github.com/user-attachments/assets/5b10c8f8-5121-446f-95f8-c0355daa5959"></p>
<p>As shown in the diagram, the IdP, after verifying the user's credentials, generates a signed SAML response, this is propagated to the SP by the user's browser and the SP, after verifying the signature, can extract the data needed to build the user's session.</p>
<p>The signature validation logic is central as it ensures that you cannot craft a SAML response with arbitrary assertions and thus impersonate other users.</p>
<p>The following is the validation code implemented in <code>cie-aspnetcore</code>.</p>
<pre><code class="language-csharp">internal static bool VerifySignature(XmlDocument signedDocument, IdentityProvider? identityProvider = null){
    //...SNIP...
    SignedXml signedXml = new SignedXml(signedDocument);
    if (identityProvider is not null)
    {
        bool validated = false;
        foreach (var certificate in identityProvider.X509SigningCertificates){
            var publicMetadataCert = new X509Certificate2(Convert.FromBase64String(certificate));
            XmlNodeList nodeList = (signedDocument.GetElementsByTagName("ds:Signature")?.Count &gt; 1) ?
                                    signedDocument.GetElementsByTagName("ds:Signature") :
                                   (signedDocument.GetElementsByTagName("ns2:Signature")?.Count &gt; 1) ?
                                    signedDocument.GetElementsByTagName("ns2:Signature") :
                                    signedDocument.GetElementsByTagName("Signature");
            signedXml.LoadXml((XmlElement)nodeList[0]);
            validated |= signedXml.CheckSignature(publicMetadataCert, true);
        }
        return validated;
    }
    else{
        XmlNodeList nodeList = (signedDocument.GetElementsByTagName("ds:Signature")?.Count &gt; 0) ?
                               signedDocument.GetElementsByTagName("ds:Signature") :
                               signedDocument.GetElementsByTagName("Signature");
        signedXml.LoadXml((XmlElement)nodeList[0]);
        return signedXml.CheckSignature();
    }
    //...SNIP...
}
</code></pre>
<p>The parameter <code>signedDocument</code> contains the SAML response in XML format, while the parameter <code>identityProvider</code> can contain the IdP info. If the parameter <code>identityProvider</code> has been specified, the public certificates of that IdP are extracted, so as to force their use during the signature verification, otherwise the certificates configured within the application are used.</p>
<p>Next, a response envelope is generated nodeList within which all XML elements containing an XML signature of part or all of the SAML response envelope are saved.</p>
<p>Finally, the first element of this list, i.e. the first signature found, is extracted and verified.</p>
<p>In a normal authentication flow, the SAML response looks like this (note that some fields and attributes have been omitted for ease of reading):</p>
<pre><code class="language-xml">&lt;samlp:Response ID="response_id" IssueInstant="2025-01-07T13:37:00Z" Version="2.0" xmlns:saml="urn:oasis:names:tc:SAML:2.0:assertion" xmlns:samlp="urn:oasis:names:tc:SAML:2.0:protocol"&gt;
    &lt;saml:Issuer Format="urn:oasis:names:tc:SAML:2.0:nameid-format:entity"&gt;
        https://demo.spid.gov.it/validator
    &lt;/saml:Issuer&gt;
    &lt;ds:Signature xmlns:ds="http://www.w3.org/2000/09/xmldsig#"&gt;
        &lt;ds:SignedInfo&gt;
            &lt;ds:CanonicalizationMethod Algorithm="http://www.w3.org/2001/10/xml-exc-c14n#"/&gt;
            &lt;ds:SignatureMethod Algorithm="http://www.w3.org/2001/04/xmldsig-more#rsa-sha256"/&gt;
            &lt;ds:Reference URI="#response_id"&gt;
                &lt;ds:Transforms&gt;
                    &lt;ds:Transform Algorithm="http://www.w3.org/2000/09/xmldsig#enveloped-signature"/&gt;
                &lt;/ds:Transforms&gt;
                &lt;ds:DigestMethod Algorithm="http://www.w3.org/2001/04/xmlenc#sha256"/&gt;
                &lt;ds:DigestValue&gt;
                    &lt;!-- DIGEST --&gt;
                &lt;/ds:DigestValue&gt;
            &lt;/ds:Reference&gt;
        &lt;/ds:SignedInfo&gt;
        &lt;ds:SignatureValue&gt;
           &lt;!-- SIGNATURE --&gt;
        &lt;/ds:SignatureValue&gt;
        &lt;ds:KeyInfo&gt;
            &lt;ds:X509Data&gt;
                &lt;ds:X509Certificate&gt;
                    &lt;!-- CERTIFICATE --&gt;
                &lt;/ds:X509Certificate&gt;
            &lt;/ds:X509Data&gt;
        &lt;/ds:KeyInfo&gt;
    &lt;/ds:Signature&gt;
    &lt;samlp:Status&gt;
        &lt;samlp:StatusCode Value="urn:oasis:names:tc:SAML:2.0:status:Success"/&gt;
    &lt;/samlp:Status&gt;
    &lt;saml:Assertion ID="assertion_id" IssueInstant="2025-01-07T13:37:00Z" Version="2.0" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;
        &lt;saml:Issuer Format="urn:oasis:names:tc:SAML:2.0:nameid-format:entity"&gt;
            https://demo.spid.gov.it/validator
        &lt;/saml:Issuer&gt;
        &lt;ds:Signature xmlns:ds="http://www.w3.org/2000/09/xmldsig#"&gt;
            &lt;ds:SignedInfo&gt;
                &lt;ds:CanonicalizationMethod Algorithm="http://www.w3.org/2001/10/xml-exc-c14n#"/&gt;
                &lt;ds:SignatureMethod Algorithm="http://www.w3.org/2001/04/xmldsig-more#rsa-sha256"/&gt;
                &lt;ds:Reference URI="#assertion_id"&gt;
                    &lt;ds:Transforms&gt;
                        &lt;ds:Transform Algorithm="http://www.w3.org/2000/09/xmldsig#enveloped-signature"/&gt;
                    &lt;/ds:Transforms&gt;
                    &lt;ds:DigestMethod Algorithm="http://www.w3.org/2001/04/xmlenc#sha256"/&gt;
                    &lt;ds:DigestValue&gt;
                        &lt;!-- DIGEST --&gt;
                    &lt;/ds:DigestValue&gt;
                &lt;/ds:Reference&gt;
            &lt;/ds:SignedInfo&gt;
            &lt;ds:SignatureValue&gt;
                &lt;!-- SIGNATURE --&gt;
            &lt;/ds:SignatureValue&gt;
            &lt;ds:KeyInfo&gt;
                &lt;ds:X509Data&gt;
                    &lt;ds:X509Certificate&gt;
                        &lt;!-- CERTIFICATE --&gt;
                    &lt;/ds:X509Certificate&gt;
                &lt;/ds:X509Data&gt;
            &lt;/ds:KeyInfo&gt;
        &lt;/ds:Signature&gt;
        &lt;saml:AttributeStatement&gt;
            &lt;saml:Attribute Name="spidCode" NameFormat="urn:oasis:names:tc:SAML:2.0:attrname-format:basic"&gt;
                &lt;saml:AttributeValue xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="xs:string"&gt;
                    AGID-001
                &lt;/saml:AttributeValue&gt;
            &lt;/saml:Attribute&gt;
            &lt;!-- ... SNIP ... --&gt;
        &lt;/saml:AttributeStatement&gt;
    &lt;/saml:Assertion&gt;
&lt;/samlp:Response&gt;
</code></pre>
<p>The SDK code would get as the first element of the <code>nodeList</code>, that is <code>nodeList[0]</code>, the signature referring to the entire SAML response, in fact the reference of the first signature <code>&lt;ds:Reference URI="#response_id"&gt;</code> points to the root object <code>&lt;samlp:Response ID="response_id" ...&gt;</code>. Therefore, verifying this signature will ensure that the entire content of the SAML response is intact and authentic.</p>
<p>However, there is no guarantee that the first signature refers to the root object, so if an attacker injects a signed element as the first element, all other signatures will not be verified. The only requirement is to have a legitimately signed XML element from the IdP, which is easily accomplished using the public metadata of the IdP.</p>
<p>The SAML response would be structured like this:</p>
<p><img alt="" src="https://github.com/user-attachments/assets/42b8c97a-96ae-45c9-afed-aab7066201a1"></p>
<h3 id="impact">Impact</h3>
<p>An attacker could craft an arbitrary SAML response that would be accepted by SPs using the vulnerable SDKs, allowing him to impersonate any Spid and/or CIE user.</p>
<h3 id="complexity-of-the-attack">Complexity of the attack</h3>
<p>The attacker needs an XML block containing a valid signature from one of the IdPs accepted by the SP. As described above, this requirement is satisfied by reading the public metadata of the IdP which is represented by a signed XML block of the IdP.</p>
<h3 id="related-issues">Related issues</h3>
<p>N/A</p>
<h3 id="poc">PoC</h3>
<ol>
<li>Clone the repository <a href="https://github.com/italia/spid-aspnetcore.git">https://github.com/italia/spid-aspnetcore.git</a></li>
<li>From the root of the project, enter the folder relating to the example webapp: <code>samples/1_SimpleSPWebApp/SPID.AspNetCore.WebApp/</code></li>
<li>Change the value of the <code>AssertionConsumerServiceURL</code> key in the file <code>appsettings.json</code> to a custom domain: <code>https://$CUSTOM_DOMAIN:$CUSTOM_PORT/signin-spid</code></li>
<li>Compile and run the sample webapp using the following command, taking care to replace the placeholders with the same values ​​used in step 3: <code>dotnet build "SPID.AspNetCore.WebApp.csproj" -o ./app/build &amp;&amp; dotnet publish "SPID.AspNetCore.WebApp.csproj" -o ./app/publish &amp;&amp; dotnet ./app/publish/SPID.AspNetCore.WebApp.dll -urls=https://$CUSTOM_DOMAIN:$CUSTOM_PORT</code></li>
<li>Visit URL: <code>https://$CUSTOM_DOMAIN:$CUSTOM_PORT/</code></li>
<li>Click "Enter with SPID" &gt; "DemoSpid" (second IdP in the list)</li>
<li>Visit the "Response" &gt; "Check Response" section</li>
<li>Insert the following string into the "Audience" field (right column): <code>https://spid.aspnetcore.it/</code></li>
<li>Click "Send response to Service Provider", note the redirect to  <code>/home/loggedin</code> and consequently the correct execution of the login on the example portal</li>
</ol>
<p><img alt="" src="https://github.com/user-attachments/assets/af3775a1-5f01-4ffa-9b28-730fef487869"></p>
<ol start="10">
<li>Repeat steps 5 to 8 inclusive</li>
<li>Intercept the HTTP request generated in step 8 via an HTTP Proxy, such as PortSwigger's BurpSuite</li>
<li>Perform URL-decoding and Base64-decoding of the POST <code>SAMLResponse</code> parameter</li>
<li>Insert the content present at the following URL in the second line of the XML: <a href="https://demo.spid.gov.it/metadata.xml">https://demo.spid.gov.it/metadata.xml</a></li>
<li>Change the contents of the tag <code>&lt;saml:Assertion&gt;</code>, for example change the <code>email</code> attribute to an arbitrary value: <code>spid.tech@shielder.it</code></li>
<li>Run Base64-encoding and then URL-encoding the <code>SAMLResponse</code> parameter</li>
<li>Send the request and note the redirect to <code>/home/loggedin</code> which demonstrates the correct identification and therefore also the verification of the arbitrary signature inserted in <code>SAMLResponse</code> despite the modification of the assertion</li>
</ol>
<p><img alt="" src="https://github.com/user-attachments/assets/a725401f-7884-4910-b4e5-b6c55c1cde83"></p>
<h3 id="recommended-solution">Recommended Solution</h3>
<p>Verify all signatures within the SAML response and do not accept unsigned XML elements.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://cheatsheetseries.owasp.org/cheatsheets/SAML_Security_Cheat_Sheet.html">https://cheatsheetseries.owasp.org/cheatsheets/SAML_Security_Cheat_Sheet.html</a></li>
</ul>
<h3 id="credits">Credits</h3>
<ul>
<li><a href="https://x.com/smaury92">Abdel Adim <code>smaury</code> Oisfi</a> di <a href="https://www.shielder.com">Shielder</a></li>
<li><a href="https://x.com/paupu_95">Paolo<code>paupu</code> Cavaglià</a> di <a href="https://www.shielder.com">Shielder</a></li>
<li><a href="https://x.com/fromveeko">Nicola <code>fromveeko</code> Davico</a> di <a href="https://www.shielder.com">Shielder</a></li>
</ul>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/italia/cie-aspnetcore/security/advisories/GHSA-vq63-8f72-f486">https://github.com/italia/cie-aspnetcore/security/advisories/GHSA-vq63-8f72-f486</a></li>
<li><a href="https://github.com/italia/cie-aspnetcore/commit/e66b7f336ff5d4c69f95f197f27f3145f2484994">https://github.com/italia/cie-aspnetcore/commit/e66b7f336ff5d4c69f95f197f27f3145f2484994</a></li>
<li><a href="https://github.com/advisories/GHSA-vq63-8f72-f486">https://github.com/advisories/GHSA-vq63-8f72-f486</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-vq63-8f72-f486</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2025-02-18T19:25:19.000Z</published>
    </entry>
</feed>