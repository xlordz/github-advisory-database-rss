<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://xlordz.github.io/github-advisory-database-rss/maven.rss</id>
    <title>Security Advisory for Java artifacts hosted at the Maven central repository</title>
    <updated>2025-06-09T14:53:24.721Z</updated>
    <generator>github-advisory-database-rss</generator>
    <link rel="alternate" href="https://github.com/advisories?query=type%3Areviewed+ecosystem%3Amaven"/>
    <subtitle>Security Advisory for Java artifacts hosted at the Maven central repository on GitHub</subtitle>
    <rights>github-advisory-database-rss</rights>
    <category term="CRITICAL"/>
    <category term="HIGH"/>
    <category term="MODERATE"/>
    <category term="LOW"/>
    <entry>
        <title type="html"><![CDATA[[org.jenkins-ci.plugins:gatling] Jenkins Gatling Plugin Vulnerable to Cross-Site Scripting (XSS)]]></title>
        <id>https://github.com/advisories/GHSA-gw97-cqwg-xmh4</id>
        <link href="https://github.com/advisories/GHSA-gw97-cqwg-xmh4"/>
        <updated>2025-06-09T11:59:19.000Z</updated>
        <content type="html"><![CDATA[<p>Jenkins Gatling Plugin 136.vb_9009b_3d33a_e serves Gatling reports in a manner that bypasses the Content-Security-Policy protection introduced in Jenkins 1.641 and 1.625, resulting in a cross-site scripting (XSS) vulnerability exploitable by users able to change report content.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2025-5806">https://nvd.nist.gov/vuln/detail/CVE-2025-5806</a></li>
<li><a href="https://www.jenkins.io/security/advisory/2025-06-06/#SECURITY-3588">https://www.jenkins.io/security/advisory/2025-06-06/#SECURITY-3588</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2025/06/06/8">http://www.openwall.com/lists/oss-security/2025/06/06/8</a></li>
<li><a href="https://github.com/jenkinsci/gatling-plugin/pull/27">https://github.com/jenkinsci/gatling-plugin/pull/27</a></li>
<li><a href="https://github.com/jenkinsci/gatling-plugin/commit/141bd3a811ab641bf618ec588b615cf87469b222">https://github.com/jenkinsci/gatling-plugin/commit/141bd3a811ab641bf618ec588b615cf87469b222</a></li>
<li><a href="https://github.com/jenkinsci/gatling-plugin/releases/tag/136.vb_9009b_3d33a_e">https://github.com/jenkinsci/gatling-plugin/releases/tag/136.vb_9009b_3d33a_e</a></li>
<li><a href="https://github.com/advisories/GHSA-gw97-cqwg-xmh4">https://github.com/advisories/GHSA-gw97-cqwg-xmh4</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-gw97-cqwg-xmh4</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2025-06-06T15:30:53.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.apache.inlong:inlong-manager] Apache InLong Deserialization of Untrusted Data Vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-62gc-8jr5-x9pm</id>
        <link href="https://github.com/advisories/GHSA-62gc-8jr5-x9pm"/>
        <updated>2025-06-09T11:58:45.000Z</updated>
        <content type="html"><![CDATA[<p>Deserialization of Untrusted Data vulnerability in Apache InLong.&nbsp;This issue affects Apache InLong: from 1.13.0 before 2.1.0, this issue would allow an authenticated attacker to read arbitrary files&nbsp;by double writing the param. Users are recommended to upgrade to version 2.1.0, which fixes the issue.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2025-27531">https://nvd.nist.gov/vuln/detail/CVE-2025-27531</a></li>
<li><a href="https://lists.apache.org/thread/r62lkqrr739wvcb60j6ql6q63rh4bxx5">https://lists.apache.org/thread/r62lkqrr739wvcb60j6ql6q63rh4bxx5</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2025/02/28/2">http://www.openwall.com/lists/oss-security/2025/02/28/2</a></li>
<li><a href="https://github.com/apache/inlong/issues/11585">https://github.com/apache/inlong/issues/11585</a></li>
<li><a href="https://github.com/apache/inlong/pull/11586">https://github.com/apache/inlong/pull/11586</a></li>
<li><a href="https://github.com/apache/inlong/commit/ebcd6d3230b73abdc41edb93619be2a26c9b8c97">https://github.com/apache/inlong/commit/ebcd6d3230b73abdc41edb93619be2a26c9b8c97</a></li>
<li><a href="https://github.com/advisories/GHSA-62gc-8jr5-x9pm">https://github.com/advisories/GHSA-62gc-8jr5-x9pm</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-62gc-8jr5-x9pm</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2025-06-06T15:30:53.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[com.fasterxml.jackson.core:jackson-core] Jackson-core Vulnerable to Memory Disclosure via Source Snippet in JsonLocation]]></title>
        <id>https://github.com/advisories/GHSA-wf8f-6423-gfxg</id>
        <link href="https://github.com/advisories/GHSA-wf8f-6423-gfxg"/>
        <updated>2025-06-07T00:33:55.000Z</updated>
        <content type="html"><![CDATA[<h3 id="overview">Overview</h3>
<p>A flaw in Jackson-core's <code>JsonLocation._appendSourceDesc</code> method allows up to 500 bytes of unintended memory content to be included in exception messages. When parsing JSON from a byte array with an offset and length, the exception message incorrectly reads from the beginning of the array instead of the logical payload start. This results in possible <strong>information disclosure</strong> in systems using <strong>pooled or reused buffers</strong>, like Netty or Vert.x.</p>
<h3 id="details">Details</h3>
<p>The vulnerability affects the creation of exception messages like:</p>
<pre><code>JsonParseException: Unexpected character ... at [Source: (byte[])...]
</code></pre>
<p>When <code>JsonFactory.createParser(byte[] data, int offset, int len)</code> is used, and an error occurs while parsing, the exception message should include a snippet from the specified logical payload. However, the method <code>_appendSourceDesc</code> ignores the <code>offset</code>, and always starts reading from index <code>0</code>.</p>
<p>If the buffer contains residual sensitive data from a previous request, such as credentials or document contents, that data may be exposed if the exception is propagated to the client.</p>
<p>The issue particularly impacts server applications using:</p>
<ul>
<li>Pooled byte buffers (e.g., Netty)</li>
<li>Frameworks that surface parse errors in HTTP responses</li>
<li>Default Jackson settings (i.e., <code>INCLUDE_SOURCE_IN_LOCATION</code> is enabled)</li>
</ul>
<p>A documented real-world example is <a href="https://nvd.nist.gov/vuln/detail/CVE-2021-22145">CVE-2021-22145</a> in Elasticsearch, which stemmed from the same root cause.</p>
<h3 id="attack-scenario">Attack Scenario</h3>
<p>An attacker sends malformed JSON to a service using Jackson and pooled byte buffers (e.g., Netty-based HTTP servers). If the server reuses a buffer and includes the parser’s exception in its HTTP 400 response, the attacker may receive residual data from previous requests.</p>
<h3 id="proof-of-concept">Proof of Concept</h3>
<pre><code class="language-java">byte[] buffer = new byte[1000];
System.arraycopy("SECRET".getBytes(), 0, buffer, 0, 6);
System.arraycopy("{ \"bad\": }".getBytes(), 0, buffer, 700, 10);

JsonFactory factory = new JsonFactory();
JsonParser parser = factory.createParser(buffer, 700, 20);
parser.nextToken(); // throws exception

// Exception message will include "SECRET"
</code></pre>
<h3 id="patches">Patches</h3>
<p>This issue was silently fixed in jackson-core version 2.13.0, released on September 30, 2021, via <a href="https://github.com/FasterXML/jackson-core/pull/652">PR #652</a>.</p>
<p>All users should upgrade to version 2.13.0 or later.</p>
<h3 id="workarounds">Workarounds</h3>
<p>If upgrading is not immediately possible, applications can mitigate the issue by:</p>
<ol>
<li><p><strong>Disabling exception message exposure to clients</strong> — avoid returning parsing exception messages in HTTP responses.</p>
</li>
<li><p><strong>Disabling source inclusion in exceptions</strong> by setting:</p>
<pre><code class="language-java">jsonFactory.disable(JsonFactory.Feature.INCLUDE_SOURCE_IN_LOCATION);
</code></pre>
<p> This prevents Jackson from embedding any source content in exception messages, avoiding leakage.</p>
</li>
</ol>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/FasterXML/jackson-core/pull/652">Pull Request #652 (Fix implementation)</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2021-22145">CVE-2021-22145 (Elasticsearch exposure of this flaw)</a></li>
</ul>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/FasterXML/jackson-core/security/advisories/GHSA-wf8f-6423-gfxg">https://github.com/FasterXML/jackson-core/security/advisories/GHSA-wf8f-6423-gfxg</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2021-22145">https://nvd.nist.gov/vuln/detail/CVE-2021-22145</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2025-49128">https://nvd.nist.gov/vuln/detail/CVE-2025-49128</a></li>
<li><a href="https://github.com/FasterXML/jackson-core/pull/652">https://github.com/FasterXML/jackson-core/pull/652</a></li>
<li><a href="https://github.com/FasterXML/jackson-core/commit/a6c297682737dde13337cb7c3020f299518609a8">https://github.com/FasterXML/jackson-core/commit/a6c297682737dde13337cb7c3020f299518609a8</a></li>
<li><a href="https://github.com/advisories/GHSA-wf8f-6423-gfxg">https://github.com/advisories/GHSA-wf8f-6423-gfxg</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-wf8f-6423-gfxg</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2025-06-07T00:10:42.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[com.erudika:para-server] Para Inserts Sensitive Information into Log File for Facebook authentication]]></title>
        <id>https://github.com/advisories/GHSA-qx7g-fx8q-545g</id>
        <link href="https://github.com/advisories/GHSA-qx7g-fx8q-545g"/>
        <updated>2025-06-06T15:50:02.000Z</updated>
        <content type="html"><![CDATA[<p>CWE ID: CWE-532 (Insertion of Sensitive Information into Log File)
CVSS: 6.2 (Medium)
Vector: CVSS:3.1/AV:L/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N</p>
<p><strong>Affected Component:</strong> Facebook Authentication Logging
<strong>Version:</strong> Para v1.50.6
<strong>File Path:</strong> para-1.50.6/para-server/src/main/java/com/erudika/para/server/security/filters/FacebookAuthFilter.java
<strong>Vulnerable Line(s):</strong> Line 184 (logger.warn(...) with raw access token)</p>
<p>Technical Details:</p>
<p>The vulnerability is located in FacebookAuthFilter.java, where a failed request to Facebook’s user profile endpoint triggers the following log statement:</p>
<pre><code class="language-java">logger.warn("Facebook auth request failed: GET " + PROFILE_URL + accessToken, e);`
</code></pre>
<p>Here, <code>PROFILE_URL</code> is a constant:</p>
<pre><code class="language-java">private static final String PROFILE_URL = "https://graph.facebook.com/me?fields=name,email,picture.width(400).type(square).height(400)&amp;access_token=";
</code></pre>
<p>This results in the full request URL being logged, including the user's access token in plain text. Since WARN-level logs are often retained in production and accessible to operators or log aggregation systems, this poses a risk of token exposure.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/Erudika/para/security/advisories/GHSA-qx7g-fx8q-545g">https://github.com/Erudika/para/security/advisories/GHSA-qx7g-fx8q-545g</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2025-49009">https://nvd.nist.gov/vuln/detail/CVE-2025-49009</a></li>
<li><a href="https://github.com/Erudika/para/commit/46a908d887da02037384193f70a69345f04887cf">https://github.com/Erudika/para/commit/46a908d887da02037384193f70a69345f04887cf</a></li>
<li><a href="https://github.com/advisories/GHSA-qx7g-fx8q-545g">https://github.com/advisories/GHSA-qx7g-fx8q-545g</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-qx7g-fx8q-545g</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2025-06-06T15:49:58.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[com.lightbend.akka.management:akka-management_3] Pekko Management may not properly apply authenticator when Basic Authentication enabled]]></title>
        <id>https://github.com/advisories/GHSA-9qvj-rpj8-v5c8</id>
        <link href="https://github.com/advisories/GHSA-9qvj-rpj8-v5c8"/>
        <updated>2025-06-06T15:33:35.000Z</updated>
        <content type="html"><![CDATA[<p>If you enable Basic Authentication in Pekko Management using the Java DSL, the authenticator may not be properly applied.</p>
<p>Users that rely on authentication instead of making sure the Management API ports are only available to trusted users are recommended to upgrade to version 1.1.1, which fixes this issue.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2025-46548">https://nvd.nist.gov/vuln/detail/CVE-2025-46548</a></li>
<li><a href="https://github.com/akka/akka-management/pull/1385">https://github.com/akka/akka-management/pull/1385</a></li>
<li><a href="https://github.com/apache/pekko-management/pull/418">https://github.com/apache/pekko-management/pull/418</a></li>
<li><a href="https://lists.apache.org/thread/tnd84hj9w0ggjcft6cp12q67d5jzhp66">https://lists.apache.org/thread/tnd84hj9w0ggjcft6cp12q67d5jzhp66</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2025/06/03/7">http://www.openwall.com/lists/oss-security/2025/06/03/7</a></li>
<li><a href="https://github.com/advisories/GHSA-9qvj-rpj8-v5c8">https://github.com/advisories/GHSA-9qvj-rpj8-v5c8</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-9qvj-rpj8-v5c8</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2025-06-03T15:31:27.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[com.lightbend.akka.management:akka-management_2.12] Pekko Management may not properly apply authenticator when Basic Authentication enabled]]></title>
        <id>https://github.com/advisories/GHSA-9qvj-rpj8-v5c8</id>
        <link href="https://github.com/advisories/GHSA-9qvj-rpj8-v5c8"/>
        <updated>2025-06-06T15:33:35.000Z</updated>
        <content type="html"><![CDATA[<p>If you enable Basic Authentication in Pekko Management using the Java DSL, the authenticator may not be properly applied.</p>
<p>Users that rely on authentication instead of making sure the Management API ports are only available to trusted users are recommended to upgrade to version 1.1.1, which fixes this issue.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2025-46548">https://nvd.nist.gov/vuln/detail/CVE-2025-46548</a></li>
<li><a href="https://github.com/akka/akka-management/pull/1385">https://github.com/akka/akka-management/pull/1385</a></li>
<li><a href="https://github.com/apache/pekko-management/pull/418">https://github.com/apache/pekko-management/pull/418</a></li>
<li><a href="https://lists.apache.org/thread/tnd84hj9w0ggjcft6cp12q67d5jzhp66">https://lists.apache.org/thread/tnd84hj9w0ggjcft6cp12q67d5jzhp66</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2025/06/03/7">http://www.openwall.com/lists/oss-security/2025/06/03/7</a></li>
<li><a href="https://github.com/advisories/GHSA-9qvj-rpj8-v5c8">https://github.com/advisories/GHSA-9qvj-rpj8-v5c8</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-9qvj-rpj8-v5c8</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2025-06-03T15:31:27.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.apache.pekko:pekko-management_3] Pekko Management may not properly apply authenticator when Basic Authentication enabled]]></title>
        <id>https://github.com/advisories/GHSA-9qvj-rpj8-v5c8</id>
        <link href="https://github.com/advisories/GHSA-9qvj-rpj8-v5c8"/>
        <updated>2025-06-06T15:33:35.000Z</updated>
        <content type="html"><![CDATA[<p>If you enable Basic Authentication in Pekko Management using the Java DSL, the authenticator may not be properly applied.</p>
<p>Users that rely on authentication instead of making sure the Management API ports are only available to trusted users are recommended to upgrade to version 1.1.1, which fixes this issue.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2025-46548">https://nvd.nist.gov/vuln/detail/CVE-2025-46548</a></li>
<li><a href="https://github.com/akka/akka-management/pull/1385">https://github.com/akka/akka-management/pull/1385</a></li>
<li><a href="https://github.com/apache/pekko-management/pull/418">https://github.com/apache/pekko-management/pull/418</a></li>
<li><a href="https://lists.apache.org/thread/tnd84hj9w0ggjcft6cp12q67d5jzhp66">https://lists.apache.org/thread/tnd84hj9w0ggjcft6cp12q67d5jzhp66</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2025/06/03/7">http://www.openwall.com/lists/oss-security/2025/06/03/7</a></li>
<li><a href="https://github.com/advisories/GHSA-9qvj-rpj8-v5c8">https://github.com/advisories/GHSA-9qvj-rpj8-v5c8</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-9qvj-rpj8-v5c8</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2025-06-03T15:31:27.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.apache.pekko:pekko-management_2.13] Pekko Management may not properly apply authenticator when Basic Authentication enabled]]></title>
        <id>https://github.com/advisories/GHSA-9qvj-rpj8-v5c8</id>
        <link href="https://github.com/advisories/GHSA-9qvj-rpj8-v5c8"/>
        <updated>2025-06-06T15:33:35.000Z</updated>
        <content type="html"><![CDATA[<p>If you enable Basic Authentication in Pekko Management using the Java DSL, the authenticator may not be properly applied.</p>
<p>Users that rely on authentication instead of making sure the Management API ports are only available to trusted users are recommended to upgrade to version 1.1.1, which fixes this issue.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2025-46548">https://nvd.nist.gov/vuln/detail/CVE-2025-46548</a></li>
<li><a href="https://github.com/akka/akka-management/pull/1385">https://github.com/akka/akka-management/pull/1385</a></li>
<li><a href="https://github.com/apache/pekko-management/pull/418">https://github.com/apache/pekko-management/pull/418</a></li>
<li><a href="https://lists.apache.org/thread/tnd84hj9w0ggjcft6cp12q67d5jzhp66">https://lists.apache.org/thread/tnd84hj9w0ggjcft6cp12q67d5jzhp66</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2025/06/03/7">http://www.openwall.com/lists/oss-security/2025/06/03/7</a></li>
<li><a href="https://github.com/advisories/GHSA-9qvj-rpj8-v5c8">https://github.com/advisories/GHSA-9qvj-rpj8-v5c8</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-9qvj-rpj8-v5c8</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2025-06-03T15:31:27.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[com.lightbend.akka.management:akka-management_2.13] Pekko Management may not properly apply authenticator when Basic Authentication enabled]]></title>
        <id>https://github.com/advisories/GHSA-9qvj-rpj8-v5c8</id>
        <link href="https://github.com/advisories/GHSA-9qvj-rpj8-v5c8"/>
        <updated>2025-06-06T15:33:35.000Z</updated>
        <content type="html"><![CDATA[<p>If you enable Basic Authentication in Pekko Management using the Java DSL, the authenticator may not be properly applied.</p>
<p>Users that rely on authentication instead of making sure the Management API ports are only available to trusted users are recommended to upgrade to version 1.1.1, which fixes this issue.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2025-46548">https://nvd.nist.gov/vuln/detail/CVE-2025-46548</a></li>
<li><a href="https://github.com/akka/akka-management/pull/1385">https://github.com/akka/akka-management/pull/1385</a></li>
<li><a href="https://github.com/apache/pekko-management/pull/418">https://github.com/apache/pekko-management/pull/418</a></li>
<li><a href="https://lists.apache.org/thread/tnd84hj9w0ggjcft6cp12q67d5jzhp66">https://lists.apache.org/thread/tnd84hj9w0ggjcft6cp12q67d5jzhp66</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2025/06/03/7">http://www.openwall.com/lists/oss-security/2025/06/03/7</a></li>
<li><a href="https://github.com/advisories/GHSA-9qvj-rpj8-v5c8">https://github.com/advisories/GHSA-9qvj-rpj8-v5c8</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-9qvj-rpj8-v5c8</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2025-06-03T15:31:27.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.apache.pekko:pekko-management_2.12] Pekko Management may not properly apply authenticator when Basic Authentication enabled]]></title>
        <id>https://github.com/advisories/GHSA-9qvj-rpj8-v5c8</id>
        <link href="https://github.com/advisories/GHSA-9qvj-rpj8-v5c8"/>
        <updated>2025-06-06T15:33:35.000Z</updated>
        <content type="html"><![CDATA[<p>If you enable Basic Authentication in Pekko Management using the Java DSL, the authenticator may not be properly applied.</p>
<p>Users that rely on authentication instead of making sure the Management API ports are only available to trusted users are recommended to upgrade to version 1.1.1, which fixes this issue.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2025-46548">https://nvd.nist.gov/vuln/detail/CVE-2025-46548</a></li>
<li><a href="https://github.com/akka/akka-management/pull/1385">https://github.com/akka/akka-management/pull/1385</a></li>
<li><a href="https://github.com/apache/pekko-management/pull/418">https://github.com/apache/pekko-management/pull/418</a></li>
<li><a href="https://lists.apache.org/thread/tnd84hj9w0ggjcft6cp12q67d5jzhp66">https://lists.apache.org/thread/tnd84hj9w0ggjcft6cp12q67d5jzhp66</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2025/06/03/7">http://www.openwall.com/lists/oss-security/2025/06/03/7</a></li>
<li><a href="https://github.com/advisories/GHSA-9qvj-rpj8-v5c8">https://github.com/advisories/GHSA-9qvj-rpj8-v5c8</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-9qvj-rpj8-v5c8</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2025-06-03T15:31:27.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[xyz.erupt:erupt] Erupt Unrestricted Upload of File with Dangerous Type vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-5gr5-vmmr-82g6</id>
        <link href="https://github.com/advisories/GHSA-5gr5-vmmr-82g6"/>
        <updated>2025-06-05T22:03:43.000Z</updated>
        <content type="html"><![CDATA[<p>An arbitrary file upload vulnerability in the component /upload/GoodsCategory/image of erupt v1.12.19 allows attackers to execute arbitrary code via uploading a crafted file.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2025-45855">https://nvd.nist.gov/vuln/detail/CVE-2025-45855</a></li>
<li><a href="https://gist.github.com/Cafe-Tea/b72d442be434e1dafe7810c938892b06">https://gist.github.com/Cafe-Tea/b72d442be434e1dafe7810c938892b06</a></li>
<li><a href="https://github.com/erupts/erupt">https://github.com/erupts/erupt</a></li>
<li><a href="https://www.erupt.xyz/#!">https://www.erupt.xyz/#!</a></li>
<li><a href="https://github.com/advisories/GHSA-5gr5-vmmr-82g6">https://github.com/advisories/GHSA-5gr5-vmmr-82g6</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-5gr5-vmmr-82g6</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2025-06-03T15:31:26.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.wso2.carbon.identity.framework:org.wso2.carbon.identity.user.store.configuration.ui] WSO2 products vulnerable to Cross-site Scripting]]></title>
        <id>https://github.com/advisories/GHSA-xpxp-r8hf-wgf6</id>
        <link href="https://github.com/advisories/GHSA-xpxp-r8hf-wgf6"/>
        <updated>2025-06-05T05:49:09.000Z</updated>
        <content type="html"><![CDATA[<p>A reflected cross-site scripting (XSS) vulnerability exists in multiple WSO2 products due to insufficient output encoding in error messages generated by the JDBC user store connection validation request. A malicious actor can inject a specially crafted payload into the request, causing the browser to execute arbitrary JavaScript in the context of the vulnerable page.</p>
<p>This vulnerability may allow UI manipulation, redirection to malicious websites, or data exfiltration from the browser. However, since all session-related sensitive cookies are protected with the httpOnly flag, session hijacking is not possible.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-8008">https://nvd.nist.gov/vuln/detail/CVE-2024-8008</a></li>
<li><a href="https://security.docs.wso2.com/en/latest/security-announcements/security-advisories/2025/WSO2-2024-3178">https://security.docs.wso2.com/en/latest/security-announcements/security-advisories/2025/WSO2-2024-3178</a></li>
<li><a href="https://github.com/wso2/carbon-identity-framework/pull/5927">https://github.com/wso2/carbon-identity-framework/pull/5927</a></li>
<li><a href="https://github.com/advisories/GHSA-xpxp-r8hf-wgf6">https://github.com/advisories/GHSA-xpxp-r8hf-wgf6</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-xpxp-r8hf-wgf6</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2025-06-02T18:30:52.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.hibernate.validator:hibernate-validator] Hibernate Validator may interpolate user-supplied input in a constraint violation message with Expression Language]]></title>
        <id>https://github.com/advisories/GHSA-7v6m-28jr-rg84</id>
        <link href="https://github.com/advisories/GHSA-7v6m-28jr-rg84"/>
        <updated>2025-06-05T01:24:19.000Z</updated>
        <content type="html"><![CDATA[<p>Hibernate Validator before 6.2.0 and 7.0.0, by default and depending how it is used, may interpolate user-supplied input in a constraint violation message with Expression Language. This could allow an attacker to access sensitive information or execute arbitrary Java code. Hibernate Validator as of 6.2.0 and 7.0.0 no longer interpolates custom constraint violation messages with Expression Language and strongly recommends not allowing user-supplied input in constraint violation messages. CVE-2020-5245 and CVE-2025-4428 are examples of related, downstream vulnerabilities involving Expression Language intepolation of user-supplied data.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2025-35036">https://nvd.nist.gov/vuln/detail/CVE-2025-35036</a></li>
<li><a href="https://github.com/hibernate/hibernate-validator/pull/1138">https://github.com/hibernate/hibernate-validator/pull/1138</a></li>
<li><a href="https://github.com/hibernate/hibernate-validator/commit/05f795bb7cf18856004f40e5042709e550ed0d6e">https://github.com/hibernate/hibernate-validator/commit/05f795bb7cf18856004f40e5042709e550ed0d6e</a></li>
<li><a href="https://github.com/hibernate/hibernate-validator/commit/254858d9dcc4e7cd775d1b0f47f482218077c5e1">https://github.com/hibernate/hibernate-validator/commit/254858d9dcc4e7cd775d1b0f47f482218077c5e1</a></li>
<li><a href="https://github.com/hibernate/hibernate-validator/commit/d2db40b9e7d22c7a0b44d7665242dfc7b4d14d78">https://github.com/hibernate/hibernate-validator/commit/d2db40b9e7d22c7a0b44d7665242dfc7b4d14d78</a></li>
<li><a href="https://github.com/hibernate/hibernate-validator/commit/e076293b0ee1bfa97b6e67d05ad9eee1ad77e893">https://github.com/hibernate/hibernate-validator/commit/e076293b0ee1bfa97b6e67d05ad9eee1ad77e893</a></li>
<li><a href="https://docs.jboss.org/hibernate/stable/validator/reference/en-US/html_single/#section-hibernateconstraintvalidatorcontext">https://docs.jboss.org/hibernate/stable/validator/reference/en-US/html_single/#section-hibernateconstraintvalidatorcontext</a></li>
<li><a href="https://github.com/hibernate/hibernate-validator/compare/6.1.7.Final...6.2.0.Final">https://github.com/hibernate/hibernate-validator/compare/6.1.7.Final...6.2.0.Final</a></li>
<li><a href="https://hibernate.atlassian.net/browse/HV-1816">https://hibernate.atlassian.net/browse/HV-1816</a></li>
<li><a href="https://hibernate.org/validator/documentation/migration-guide/#6-2-0-cr1">https://hibernate.org/validator/documentation/migration-guide/#6-2-0-cr1</a></li>
<li><a href="https://in.relation.to/2021/01/06/hibernate-validator-700-62-final-released/#expression-language">https://in.relation.to/2021/01/06/hibernate-validator-700-62-final-released/#expression-language</a></li>
<li><a href="https://labs.watchtowr.com/expression-payloads-meet-mayhem-cve-2025-4427-and-cve-2025-4428">https://labs.watchtowr.com/expression-payloads-meet-mayhem-cve-2025-4427-and-cve-2025-4428</a></li>
<li><a href="https://www.cve.org/CVERecord?id=CVE-2020-5245">https://www.cve.org/CVERecord?id=CVE-2020-5245</a></li>
<li><a href="https://www.cve.org/CVERecord?id=CVE-2025-4428">https://www.cve.org/CVERecord?id=CVE-2025-4428</a></li>
<li><a href="https://github.com/advisories/GHSA-7v6m-28jr-rg84">https://github.com/advisories/GHSA-7v6m-28jr-rg84</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-7v6m-28jr-rg84</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2025-06-03T21:30:39.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.hibernate.validator:hibernate-validator] Hibernate Validator may interpolate user-supplied input in a constraint violation message with Expression Language]]></title>
        <id>https://github.com/advisories/GHSA-7v6m-28jr-rg84</id>
        <link href="https://github.com/advisories/GHSA-7v6m-28jr-rg84"/>
        <updated>2025-06-05T01:24:19.000Z</updated>
        <content type="html"><![CDATA[<p>Hibernate Validator before 6.2.0 and 7.0.0, by default and depending how it is used, may interpolate user-supplied input in a constraint violation message with Expression Language. This could allow an attacker to access sensitive information or execute arbitrary Java code. Hibernate Validator as of 6.2.0 and 7.0.0 no longer interpolates custom constraint violation messages with Expression Language and strongly recommends not allowing user-supplied input in constraint violation messages. CVE-2020-5245 and CVE-2025-4428 are examples of related, downstream vulnerabilities involving Expression Language intepolation of user-supplied data.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2025-35036">https://nvd.nist.gov/vuln/detail/CVE-2025-35036</a></li>
<li><a href="https://github.com/hibernate/hibernate-validator/pull/1138">https://github.com/hibernate/hibernate-validator/pull/1138</a></li>
<li><a href="https://github.com/hibernate/hibernate-validator/commit/05f795bb7cf18856004f40e5042709e550ed0d6e">https://github.com/hibernate/hibernate-validator/commit/05f795bb7cf18856004f40e5042709e550ed0d6e</a></li>
<li><a href="https://github.com/hibernate/hibernate-validator/commit/254858d9dcc4e7cd775d1b0f47f482218077c5e1">https://github.com/hibernate/hibernate-validator/commit/254858d9dcc4e7cd775d1b0f47f482218077c5e1</a></li>
<li><a href="https://github.com/hibernate/hibernate-validator/commit/d2db40b9e7d22c7a0b44d7665242dfc7b4d14d78">https://github.com/hibernate/hibernate-validator/commit/d2db40b9e7d22c7a0b44d7665242dfc7b4d14d78</a></li>
<li><a href="https://github.com/hibernate/hibernate-validator/commit/e076293b0ee1bfa97b6e67d05ad9eee1ad77e893">https://github.com/hibernate/hibernate-validator/commit/e076293b0ee1bfa97b6e67d05ad9eee1ad77e893</a></li>
<li><a href="https://docs.jboss.org/hibernate/stable/validator/reference/en-US/html_single/#section-hibernateconstraintvalidatorcontext">https://docs.jboss.org/hibernate/stable/validator/reference/en-US/html_single/#section-hibernateconstraintvalidatorcontext</a></li>
<li><a href="https://github.com/hibernate/hibernate-validator/compare/6.1.7.Final...6.2.0.Final">https://github.com/hibernate/hibernate-validator/compare/6.1.7.Final...6.2.0.Final</a></li>
<li><a href="https://hibernate.atlassian.net/browse/HV-1816">https://hibernate.atlassian.net/browse/HV-1816</a></li>
<li><a href="https://hibernate.org/validator/documentation/migration-guide/#6-2-0-cr1">https://hibernate.org/validator/documentation/migration-guide/#6-2-0-cr1</a></li>
<li><a href="https://in.relation.to/2021/01/06/hibernate-validator-700-62-final-released/#expression-language">https://in.relation.to/2021/01/06/hibernate-validator-700-62-final-released/#expression-language</a></li>
<li><a href="https://labs.watchtowr.com/expression-payloads-meet-mayhem-cve-2025-4427-and-cve-2025-4428">https://labs.watchtowr.com/expression-payloads-meet-mayhem-cve-2025-4427-and-cve-2025-4428</a></li>
<li><a href="https://www.cve.org/CVERecord?id=CVE-2020-5245">https://www.cve.org/CVERecord?id=CVE-2020-5245</a></li>
<li><a href="https://www.cve.org/CVERecord?id=CVE-2025-4428">https://www.cve.org/CVERecord?id=CVE-2025-4428</a></li>
<li><a href="https://github.com/advisories/GHSA-7v6m-28jr-rg84">https://github.com/advisories/GHSA-7v6m-28jr-rg84</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-7v6m-28jr-rg84</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2025-06-03T21:30:39.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.wso2.is:identity-server-parent] WSO2 products vulnerable to privilege escalation due to business logic flaw in SOAP admin services]]></title>
        <id>https://github.com/advisories/GHSA-j63j-7r7r-5v4j</id>
        <link href="https://github.com/advisories/GHSA-j63j-7r7r-5v4j"/>
        <updated>2025-06-04T23:10:10.000Z</updated>
        <content type="html"><![CDATA[<p>A privilege escalation vulnerability exists in multiple WSO2 products due to a business logic flaw in SOAP admin services. A malicious actor can create a new user with elevated permissions only when all of the following conditions are met:</p>
<ul>
<li>SOAP admin services are accessible to the attacker.</li>
<li>The deployment includes an internally used attribute that is not part of the default WSO2 product configuration.</li>
<li>At least one custom role exists with non-default permissions.</li>
<li>The attacker has knowledge of the custom role and the internal attribute used in the deployment.</li>
</ul>
<p>Exploiting this vulnerability allows malicious actors to assign higher privileges to self-registered users, bypassing intended access control mechanisms.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-7096">https://nvd.nist.gov/vuln/detail/CVE-2024-7096</a></li>
<li><a href="https://security.docs.wso2.com/en/latest/security-announcements/security-advisories/2024/WSO2-2024-3573">https://security.docs.wso2.com/en/latest/security-announcements/security-advisories/2024/WSO2-2024-3573</a></li>
<li><a href="https://github.com/wso2/docs-security/blob/cfd53689909eef62fc5427e193e35e7df8ab1ef8/en/docs/security-announcements/security-advisories/2024/WSO2-2024-3573.md">https://github.com/wso2/docs-security/blob/cfd53689909eef62fc5427e193e35e7df8ab1ef8/en/docs/security-announcements/security-advisories/2024/WSO2-2024-3573.md</a></li>
<li><a href="https://github.com/advisories/GHSA-j63j-7r7r-5v4j">https://github.com/advisories/GHSA-j63j-7r7r-5v4j</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-j63j-7r7r-5v4j</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2025-05-30T15:30:31.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.wso2.am:am-parent] WSO2 products vulnerable to privilege escalation due to business logic flaw in SOAP admin services]]></title>
        <id>https://github.com/advisories/GHSA-j63j-7r7r-5v4j</id>
        <link href="https://github.com/advisories/GHSA-j63j-7r7r-5v4j"/>
        <updated>2025-06-04T23:10:10.000Z</updated>
        <content type="html"><![CDATA[<p>A privilege escalation vulnerability exists in multiple WSO2 products due to a business logic flaw in SOAP admin services. A malicious actor can create a new user with elevated permissions only when all of the following conditions are met:</p>
<ul>
<li>SOAP admin services are accessible to the attacker.</li>
<li>The deployment includes an internally used attribute that is not part of the default WSO2 product configuration.</li>
<li>At least one custom role exists with non-default permissions.</li>
<li>The attacker has knowledge of the custom role and the internal attribute used in the deployment.</li>
</ul>
<p>Exploiting this vulnerability allows malicious actors to assign higher privileges to self-registered users, bypassing intended access control mechanisms.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-7096">https://nvd.nist.gov/vuln/detail/CVE-2024-7096</a></li>
<li><a href="https://security.docs.wso2.com/en/latest/security-announcements/security-advisories/2024/WSO2-2024-3573">https://security.docs.wso2.com/en/latest/security-announcements/security-advisories/2024/WSO2-2024-3573</a></li>
<li><a href="https://github.com/wso2/docs-security/blob/cfd53689909eef62fc5427e193e35e7df8ab1ef8/en/docs/security-announcements/security-advisories/2024/WSO2-2024-3573.md">https://github.com/wso2/docs-security/blob/cfd53689909eef62fc5427e193e35e7df8ab1ef8/en/docs/security-announcements/security-advisories/2024/WSO2-2024-3573.md</a></li>
<li><a href="https://github.com/advisories/GHSA-j63j-7r7r-5v4j">https://github.com/advisories/GHSA-j63j-7r7r-5v4j</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-j63j-7r7r-5v4j</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2025-05-30T15:30:31.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[com.ritense.valtimo:objecten-api] Valtimo backend libraries allows objects in the object-api to be accessed and modified by unauthorized users]]></title>
        <id>https://github.com/advisories/GHSA-965r-9cg9-g42p</id>
        <link href="https://github.com/advisories/GHSA-965r-9cg9-g42p"/>
        <updated>2025-06-04T20:48:01.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>All objects for which an object-management configuration exists can be listed, viewed, edited, created or deleted by unauthorised users.</p>
<p>If object-urls are exposed via other channels, the contents of these objects can be viewed independent of object-management configurations.</p>
<h3 id="attack-requirements">Attack requirements</h3>
<p>The following conditions have to be met in order to perform this attack:</p>
<ul>
<li>A user must be logged in<ul>
<li>No relevant application roles are required</li>
</ul>
</li>
<li>At least one object-type must be configured via object-management<ul>
<li>The scope of the attack is limited to objects that are configured via object-management.</li>
<li>The value of <code>showInDataMenu</code> is irrelevant for this attack</li>
</ul>
</li>
</ul>
<h3 id="patches">Patches</h3>
<p>This issue was patched in version 12.13.0.RELEASE.</p>
<h3 id="workarounds">Workarounds</h3>
<p>It is possible to override the endpoint security as defined in <code>ObjectenApiHttpSecurityConfigurer</code> and <code>ObjectManagementHttpSecurityConfigurer</code>. Depending on the implementation, this could result in loss of functionality.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/valtimo-platform/valtimo-backend-libraries/security/advisories/GHSA-965r-9cg9-g42p">https://github.com/valtimo-platform/valtimo-backend-libraries/security/advisories/GHSA-965r-9cg9-g42p</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2025-48881">https://nvd.nist.gov/vuln/detail/CVE-2025-48881</a></li>
<li><a href="https://github.com/valtimo-platform/valtimo-backend-libraries/commit/6ab04b30d3dab816bfea32d40ba50e5dd4517272">https://github.com/valtimo-platform/valtimo-backend-libraries/commit/6ab04b30d3dab816bfea32d40ba50e5dd4517272</a></li>
<li><a href="https://github.com/advisories/GHSA-965r-9cg9-g42p">https://github.com/advisories/GHSA-965r-9cg9-g42p</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-965r-9cg9-g42p</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2025-05-28T14:38:54.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[com.ritense.valtimo:object-management] Valtimo backend libraries allows objects in the object-api to be accessed and modified by unauthorized users]]></title>
        <id>https://github.com/advisories/GHSA-965r-9cg9-g42p</id>
        <link href="https://github.com/advisories/GHSA-965r-9cg9-g42p"/>
        <updated>2025-06-04T20:48:01.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>All objects for which an object-management configuration exists can be listed, viewed, edited, created or deleted by unauthorised users.</p>
<p>If object-urls are exposed via other channels, the contents of these objects can be viewed independent of object-management configurations.</p>
<h3 id="attack-requirements">Attack requirements</h3>
<p>The following conditions have to be met in order to perform this attack:</p>
<ul>
<li>A user must be logged in<ul>
<li>No relevant application roles are required</li>
</ul>
</li>
<li>At least one object-type must be configured via object-management<ul>
<li>The scope of the attack is limited to objects that are configured via object-management.</li>
<li>The value of <code>showInDataMenu</code> is irrelevant for this attack</li>
</ul>
</li>
</ul>
<h3 id="patches">Patches</h3>
<p>This issue was patched in version 12.13.0.RELEASE.</p>
<h3 id="workarounds">Workarounds</h3>
<p>It is possible to override the endpoint security as defined in <code>ObjectenApiHttpSecurityConfigurer</code> and <code>ObjectManagementHttpSecurityConfigurer</code>. Depending on the implementation, this could result in loss of functionality.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/valtimo-platform/valtimo-backend-libraries/security/advisories/GHSA-965r-9cg9-g42p">https://github.com/valtimo-platform/valtimo-backend-libraries/security/advisories/GHSA-965r-9cg9-g42p</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2025-48881">https://nvd.nist.gov/vuln/detail/CVE-2025-48881</a></li>
<li><a href="https://github.com/valtimo-platform/valtimo-backend-libraries/commit/6ab04b30d3dab816bfea32d40ba50e5dd4517272">https://github.com/valtimo-platform/valtimo-backend-libraries/commit/6ab04b30d3dab816bfea32d40ba50e5dd4517272</a></li>
<li><a href="https://github.com/advisories/GHSA-965r-9cg9-g42p">https://github.com/advisories/GHSA-965r-9cg9-g42p</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-965r-9cg9-g42p</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2025-05-28T14:38:54.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.ini4j:ini4j] org.ini4j allows attackers to cause a Denial of Service (DoS) ]]></title>
        <id>https://github.com/advisories/GHSA-jr6h-r7vg-f9mc</id>
        <link href="https://github.com/advisories/GHSA-jr6h-r7vg-f9mc"/>
        <updated>2025-06-04T14:33:11.000Z</updated>
        <content type="html"><![CDATA[<p>An issue in the fetch() method in the BasicProfile class of org.ini4j before v0.5.4 allows attackers to cause a Denial of Service (DoS) via unspecified vectors.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-41404">https://nvd.nist.gov/vuln/detail/CVE-2022-41404</a></li>
<li><a href="https://lists.debian.org/debian-lts-announce/2022/11/msg00037.html">https://lists.debian.org/debian-lts-announce/2022/11/msg00037.html</a></li>
<li><a href="https://sourceforge.net/p/ini4j/bugs/56">https://sourceforge.net/p/ini4j/bugs/56</a></li>
<li><a href="https://github.com/advisories/GHSA-jr6h-r7vg-f9mc">https://github.com/advisories/GHSA-jr6h-r7vg-f9mc</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-jr6h-r7vg-f9mc</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-10-12T12:00:20.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.springframework:spring-context] Spring Framework DataBinder Case Sensitive Match Exception]]></title>
        <id>https://github.com/advisories/GHSA-4wp7-92pw-q264</id>
        <link href="https://github.com/advisories/GHSA-4wp7-92pw-q264"/>
        <updated>2025-06-02T16:03:03.000Z</updated>
        <content type="html"><![CDATA[<p>CVE-2024-38820 ensured Locale-independent, lowercase conversion for both the configured disallowedFields patterns and for request parameter names. However, there are still cases where it is possible to bypass the disallowedFields checks.</p>
<p>Affected Spring Products and Versions</p>
<p>Spring Framework:</p>
<ul>
<li><p>6.2.0 - 6.2.6</p>
</li>
<li><p>6.1.0 - 6.1.19</p>
</li>
<li><p>6.0.0 - 6.0.27</p>
</li>
<li><p>5.3.0 - 5.3.42</p>
</li>
<li><p>Older, unsupported versions are also affected</p>
</li>
</ul>
<p>Mitigation</p>
<p>Users of affected versions should upgrade to the corresponding fixed version.</p>
<table>
<thead>
<tr>
<th>Affected version(s)</th>
<th>Fix Version</th>
<th>Availability</th>
</tr>
</thead>
<tbody><tr>
<td>6.2.x</td>
<td>6.2.7</td>
<td>OSS</td>
</tr>
<tr>
<td>6.1.x</td>
<td>6.1.20</td>
<td>OSS</td>
</tr>
<tr>
<td>6.0.x</td>
<td>6.0.28</td>
<td>Commercial <a href="https://enterprise.spring.io/">https://enterprise.spring.io/</a></td>
</tr>
<tr>
<td>5.3.x</td>
<td>5.3.43</td>
<td>Commercial <a href="https://enterprise.spring.io/">https://enterprise.spring.io/</a></td>
</tr>
</tbody></table>
<p>No further mitigation steps are necessary.</p>
<p>Generally, we recommend using a dedicated model object with properties only for data binding, or using constructor binding since constructor arguments explicitly declare what to bind together with turning off setter binding through the declarativeBinding flag. See the Model Design section in the reference documentation.</p>
<p>For setting binding, prefer the use of allowedFields (an explicit list) over disallowedFields.</p>
<p>Credit</p>
<p>This issue was responsibly reported by the TERASOLUNA Framework Development Team from NTT DATA Group Corporation.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2025-22233">https://nvd.nist.gov/vuln/detail/CVE-2025-22233</a></li>
<li><a href="https://github.com/spring-projects/spring-framework/issues/34801">https://github.com/spring-projects/spring-framework/issues/34801</a></li>
<li><a href="https://github.com/spring-projects/spring-framework/commit/edfcc6ffb188e4614ec9b212e3208b666981851c">https://github.com/spring-projects/spring-framework/commit/edfcc6ffb188e4614ec9b212e3208b666981851c</a></li>
<li><a href="https://github.com/spring-projects/spring-framework/commit/ee62701f5634e904e42e218baad142cea2bcd332">https://github.com/spring-projects/spring-framework/commit/ee62701f5634e904e42e218baad142cea2bcd332</a></li>
<li><a href="https://spring.io/security/cve-2025-22233">https://spring.io/security/cve-2025-22233</a></li>
<li><a href="https://github.com/advisories/GHSA-4wp7-92pw-q264">https://github.com/advisories/GHSA-4wp7-92pw-q264</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-4wp7-92pw-q264</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2025-05-16T21:32:12.000Z</published>
    </entry>
</feed>