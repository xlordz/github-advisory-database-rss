<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://azu.github.io/github-advisory-database-rss/maven.rss</id>
    <title>Security Advisory for Java artifacts hosted at the Maven central repository</title>
    <updated>2024-12-26T08:01:38.868Z</updated>
    <generator>github-advisory-database-rss</generator>
    <link rel="alternate" href="https://github.com/advisories?query=type%3Areviewed+ecosystem%3Amaven"/>
    <subtitle>Security Advisory for Java artifacts hosted at the Maven central repository on GitHub</subtitle>
    <rights>github-advisory-database-rss</rights>
    <category term="CRITICAL"/>
    <category term="HIGH"/>
    <category term="MODERATE"/>
    <category term="LOW"/>
    <entry>
        <title type="html"><![CDATA[[org.apache.spark:spark-hive-thriftserver_2.12] Apache Hive and Spark: CookieSigner exposes the correct signature when message verification fails]]></title>
        <id>https://github.com/advisories/GHSA-77pm-w3hx-f8mj</id>
        <link href="https://github.com/advisories/GHSA-77pm-w3hx-f8mj"/>
        <updated>2024-12-23T21:14:55.000Z</updated>
        <content type="html"><![CDATA[<p>Signing cookies is an application security feature that adds a digital signature to cookie data to verify its authenticity and integrity. The signature helps prevent malicious actors from modifying the cookie value, which can lead to security vulnerabilities and exploitation. Apache Hive’s service component accidentally exposes the signed cookie to the end user when there is a mismatch in signature between the current and expected cookie. Exposing the correct cookie signature can lead to further exploitation.</p>
<p>The vulnerable CookieSigner logic was introduced in Apache Hive by&nbsp;HIVE-9710 (1.2.0) and in Apache Spark by SPARK-14987 (2.0.0). The affected components are the following:</p>
<ul>
<li>org.apache.hive:hive-service</li>
<li>org.apache.spark:spark-hive-thriftserver_2.11</li>
<li>org.apache.spark:spark-hive-thriftserver_2.12</li>
</ul>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-23945">https://nvd.nist.gov/vuln/detail/CVE-2024-23945</a></li>
<li><a href="https://github.com/apache/hive/commit/7638cb1a3b07713cc490aa2909a37037f89e08b4">https://github.com/apache/hive/commit/7638cb1a3b07713cc490aa2909a37037f89e08b4</a></li>
<li><a href="https://github.com/apache/spark/commit/cf59b1f51c16301f689b4e0f17ba4dbd140e1b19">https://github.com/apache/spark/commit/cf59b1f51c16301f689b4e0f17ba4dbd140e1b19</a></li>
<li><a href="https://github.com/apache/hive">https://github.com/apache/hive</a></li>
<li><a href="https://github.com/apache/spark">https://github.com/apache/spark</a></li>
<li><a href="https://issues.apache.org/jira/browse/HIVE-9710">https://issues.apache.org/jira/browse/HIVE-9710</a></li>
<li><a href="https://issues.apache.org/jira/browse/SPARK-14987">https://issues.apache.org/jira/browse/SPARK-14987</a></li>
<li><a href="https://lists.apache.org/thread/59r4mv7glrxpwkkdjvjbdljfpx3f5zzc">https://lists.apache.org/thread/59r4mv7glrxpwkkdjvjbdljfpx3f5zzc</a></li>
<li><a href="https://lists.apache.org/thread/5o2ljnzrv8zvhjw9vy7b4rwjpc32hgfc">https://lists.apache.org/thread/5o2ljnzrv8zvhjw9vy7b4rwjpc32hgfc</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2024/12/23/2">http://www.openwall.com/lists/oss-security/2024/12/23/2</a></li>
<li><a href="https://github.com/advisories/GHSA-77pm-w3hx-f8mj">https://github.com/advisories/GHSA-77pm-w3hx-f8mj</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-77pm-w3hx-f8mj</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-12-23T18:30:47.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.apache.spark:spark-hive-thriftserver_2.11] Apache Hive and Spark: CookieSigner exposes the correct signature when message verification fails]]></title>
        <id>https://github.com/advisories/GHSA-77pm-w3hx-f8mj</id>
        <link href="https://github.com/advisories/GHSA-77pm-w3hx-f8mj"/>
        <updated>2024-12-23T21:14:55.000Z</updated>
        <content type="html"><![CDATA[<p>Signing cookies is an application security feature that adds a digital signature to cookie data to verify its authenticity and integrity. The signature helps prevent malicious actors from modifying the cookie value, which can lead to security vulnerabilities and exploitation. Apache Hive’s service component accidentally exposes the signed cookie to the end user when there is a mismatch in signature between the current and expected cookie. Exposing the correct cookie signature can lead to further exploitation.</p>
<p>The vulnerable CookieSigner logic was introduced in Apache Hive by&nbsp;HIVE-9710 (1.2.0) and in Apache Spark by SPARK-14987 (2.0.0). The affected components are the following:</p>
<ul>
<li>org.apache.hive:hive-service</li>
<li>org.apache.spark:spark-hive-thriftserver_2.11</li>
<li>org.apache.spark:spark-hive-thriftserver_2.12</li>
</ul>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-23945">https://nvd.nist.gov/vuln/detail/CVE-2024-23945</a></li>
<li><a href="https://github.com/apache/hive/commit/7638cb1a3b07713cc490aa2909a37037f89e08b4">https://github.com/apache/hive/commit/7638cb1a3b07713cc490aa2909a37037f89e08b4</a></li>
<li><a href="https://github.com/apache/spark/commit/cf59b1f51c16301f689b4e0f17ba4dbd140e1b19">https://github.com/apache/spark/commit/cf59b1f51c16301f689b4e0f17ba4dbd140e1b19</a></li>
<li><a href="https://github.com/apache/hive">https://github.com/apache/hive</a></li>
<li><a href="https://github.com/apache/spark">https://github.com/apache/spark</a></li>
<li><a href="https://issues.apache.org/jira/browse/HIVE-9710">https://issues.apache.org/jira/browse/HIVE-9710</a></li>
<li><a href="https://issues.apache.org/jira/browse/SPARK-14987">https://issues.apache.org/jira/browse/SPARK-14987</a></li>
<li><a href="https://lists.apache.org/thread/59r4mv7glrxpwkkdjvjbdljfpx3f5zzc">https://lists.apache.org/thread/59r4mv7glrxpwkkdjvjbdljfpx3f5zzc</a></li>
<li><a href="https://lists.apache.org/thread/5o2ljnzrv8zvhjw9vy7b4rwjpc32hgfc">https://lists.apache.org/thread/5o2ljnzrv8zvhjw9vy7b4rwjpc32hgfc</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2024/12/23/2">http://www.openwall.com/lists/oss-security/2024/12/23/2</a></li>
<li><a href="https://github.com/advisories/GHSA-77pm-w3hx-f8mj">https://github.com/advisories/GHSA-77pm-w3hx-f8mj</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-77pm-w3hx-f8mj</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-12-23T18:30:47.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.apache.hive:hive-service] Apache Hive and Spark: CookieSigner exposes the correct signature when message verification fails]]></title>
        <id>https://github.com/advisories/GHSA-77pm-w3hx-f8mj</id>
        <link href="https://github.com/advisories/GHSA-77pm-w3hx-f8mj"/>
        <updated>2024-12-23T21:14:55.000Z</updated>
        <content type="html"><![CDATA[<p>Signing cookies is an application security feature that adds a digital signature to cookie data to verify its authenticity and integrity. The signature helps prevent malicious actors from modifying the cookie value, which can lead to security vulnerabilities and exploitation. Apache Hive’s service component accidentally exposes the signed cookie to the end user when there is a mismatch in signature between the current and expected cookie. Exposing the correct cookie signature can lead to further exploitation.</p>
<p>The vulnerable CookieSigner logic was introduced in Apache Hive by&nbsp;HIVE-9710 (1.2.0) and in Apache Spark by SPARK-14987 (2.0.0). The affected components are the following:</p>
<ul>
<li>org.apache.hive:hive-service</li>
<li>org.apache.spark:spark-hive-thriftserver_2.11</li>
<li>org.apache.spark:spark-hive-thriftserver_2.12</li>
</ul>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-23945">https://nvd.nist.gov/vuln/detail/CVE-2024-23945</a></li>
<li><a href="https://github.com/apache/hive/commit/7638cb1a3b07713cc490aa2909a37037f89e08b4">https://github.com/apache/hive/commit/7638cb1a3b07713cc490aa2909a37037f89e08b4</a></li>
<li><a href="https://github.com/apache/spark/commit/cf59b1f51c16301f689b4e0f17ba4dbd140e1b19">https://github.com/apache/spark/commit/cf59b1f51c16301f689b4e0f17ba4dbd140e1b19</a></li>
<li><a href="https://github.com/apache/hive">https://github.com/apache/hive</a></li>
<li><a href="https://github.com/apache/spark">https://github.com/apache/spark</a></li>
<li><a href="https://issues.apache.org/jira/browse/HIVE-9710">https://issues.apache.org/jira/browse/HIVE-9710</a></li>
<li><a href="https://issues.apache.org/jira/browse/SPARK-14987">https://issues.apache.org/jira/browse/SPARK-14987</a></li>
<li><a href="https://lists.apache.org/thread/59r4mv7glrxpwkkdjvjbdljfpx3f5zzc">https://lists.apache.org/thread/59r4mv7glrxpwkkdjvjbdljfpx3f5zzc</a></li>
<li><a href="https://lists.apache.org/thread/5o2ljnzrv8zvhjw9vy7b4rwjpc32hgfc">https://lists.apache.org/thread/5o2ljnzrv8zvhjw9vy7b4rwjpc32hgfc</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2024/12/23/2">http://www.openwall.com/lists/oss-security/2024/12/23/2</a></li>
<li><a href="https://github.com/advisories/GHSA-77pm-w3hx-f8mj">https://github.com/advisories/GHSA-77pm-w3hx-f8mj</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-77pm-w3hx-f8mj</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-12-23T18:30:47.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.jboss.hal:hal-console] Cross Site Scripting (XSS) vulnerability while uploading content to a new deployment]]></title>
        <id>https://github.com/advisories/GHSA-64gp-r758-8pfm</id>
        <link href="https://github.com/advisories/GHSA-64gp-r758-8pfm"/>
        <updated>2024-12-23T20:15:17.000Z</updated>
        <content type="html"><![CDATA[<p>A vulnerability was found in the WildFly management console. A user may perform cross-site scripting in the deployment system. An attacker (or insider) may execute a malicious payload which could trigger an undesired behavior against the server.</p>
<h3 id="impact">Impact</h3>
<p>Cross-site scripting (XSS) vulnerability in the management console.</p>
<h3 id="patches">Patches</h3>
<p>Fixed in <a href="https://github.com/hal/console/releases/tag/v3.7.7">HAL 3.7.7.Final</a> </p>
<h3 id="workarounds">Workarounds</h3>
<p>No workaround available</p>
<h3 id="references">References</h3>
<p>See also: <a href="https://issues.redhat.com/browse/WFLY-19969">https://issues.redhat.com/browse/WFLY-19969</a></p>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/hal/console/security/advisories/GHSA-64gp-r758-8pfm">https://github.com/hal/console/security/advisories/GHSA-64gp-r758-8pfm</a></li>
<li><a href="https://github.com/hal/console/releases/tag/v3.7.7">https://github.com/hal/console/releases/tag/v3.7.7</a></li>
<li><a href="https://issues.redhat.com/browse/WFLY-19969">https://issues.redhat.com/browse/WFLY-19969</a></li>
<li><a href="https://github.com/advisories/GHSA-64gp-r758-8pfm">https://github.com/advisories/GHSA-64gp-r758-8pfm</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-64gp-r758-8pfm</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-12-23T20:15:16.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.verapdf:verapdf-library-arlington] veraPDF CLI has potential XXE (XML External Entity Injection) vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-4cx5-89vm-833x</id>
        <link href="https://github.com/advisories/GHSA-4cx5-89vm-833x"/>
        <updated>2024-12-23T17:13:28.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>Executing policy checks using custom schematron files via the CLI invokes an XSL transformation that may theoretically lead to a remote code execution (RCE) vulnerability.</p>
<h3 id="patches">Patches</h3>
<p>We are currently working on a patch that will be released when ready.</p>
<h3 id="workarounds">Workarounds</h3>
<p>This doesn't affect the standard validation and policy checks functionality, veraPDF's common use cases. Most veraPDF users don't insert any custom XSLT code into policy profiles, which are based on Schematron syntax rather than direct XSL transforms. For users who do, only load custom policy files from sources you trust.</p>
<h3 id="references">References</h3>
<p>Original issue: #1488</p>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/veraPDF/veraPDF-library/security/advisories/GHSA-4cx5-89vm-833x">https://github.com/veraPDF/veraPDF-library/security/advisories/GHSA-4cx5-89vm-833x</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-52800">https://nvd.nist.gov/vuln/detail/CVE-2024-52800</a></li>
<li><a href="https://github.com/veraPDF/veraPDF-library/issues/1488">https://github.com/veraPDF/veraPDF-library/issues/1488</a></li>
<li><a href="https://github.com/advisories/GHSA-4cx5-89vm-833x">https://github.com/advisories/GHSA-4cx5-89vm-833x</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-4cx5-89vm-833x</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2024-12-02T17:15:24.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.verapdf:verapdf-library-jakarta] veraPDF CLI has potential XXE (XML External Entity Injection) vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-4cx5-89vm-833x</id>
        <link href="https://github.com/advisories/GHSA-4cx5-89vm-833x"/>
        <updated>2024-12-23T17:13:28.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>Executing policy checks using custom schematron files via the CLI invokes an XSL transformation that may theoretically lead to a remote code execution (RCE) vulnerability.</p>
<h3 id="patches">Patches</h3>
<p>We are currently working on a patch that will be released when ready.</p>
<h3 id="workarounds">Workarounds</h3>
<p>This doesn't affect the standard validation and policy checks functionality, veraPDF's common use cases. Most veraPDF users don't insert any custom XSLT code into policy profiles, which are based on Schematron syntax rather than direct XSL transforms. For users who do, only load custom policy files from sources you trust.</p>
<h3 id="references">References</h3>
<p>Original issue: #1488</p>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/veraPDF/veraPDF-library/security/advisories/GHSA-4cx5-89vm-833x">https://github.com/veraPDF/veraPDF-library/security/advisories/GHSA-4cx5-89vm-833x</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-52800">https://nvd.nist.gov/vuln/detail/CVE-2024-52800</a></li>
<li><a href="https://github.com/veraPDF/veraPDF-library/issues/1488">https://github.com/veraPDF/veraPDF-library/issues/1488</a></li>
<li><a href="https://github.com/advisories/GHSA-4cx5-89vm-833x">https://github.com/advisories/GHSA-4cx5-89vm-833x</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-4cx5-89vm-833x</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2024-12-02T17:15:24.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.verapdf:verapdf.library] veraPDF CLI has potential XXE (XML External Entity Injection) vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-4cx5-89vm-833x</id>
        <link href="https://github.com/advisories/GHSA-4cx5-89vm-833x"/>
        <updated>2024-12-23T17:13:28.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>Executing policy checks using custom schematron files via the CLI invokes an XSL transformation that may theoretically lead to a remote code execution (RCE) vulnerability.</p>
<h3 id="patches">Patches</h3>
<p>We are currently working on a patch that will be released when ready.</p>
<h3 id="workarounds">Workarounds</h3>
<p>This doesn't affect the standard validation and policy checks functionality, veraPDF's common use cases. Most veraPDF users don't insert any custom XSLT code into policy profiles, which are based on Schematron syntax rather than direct XSL transforms. For users who do, only load custom policy files from sources you trust.</p>
<h3 id="references">References</h3>
<p>Original issue: #1488</p>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/veraPDF/veraPDF-library/security/advisories/GHSA-4cx5-89vm-833x">https://github.com/veraPDF/veraPDF-library/security/advisories/GHSA-4cx5-89vm-833x</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-52800">https://nvd.nist.gov/vuln/detail/CVE-2024-52800</a></li>
<li><a href="https://github.com/veraPDF/veraPDF-library/issues/1488">https://github.com/veraPDF/veraPDF-library/issues/1488</a></li>
<li><a href="https://github.com/advisories/GHSA-4cx5-89vm-833x">https://github.com/advisories/GHSA-4cx5-89vm-833x</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-4cx5-89vm-833x</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2024-12-02T17:15:24.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.verapdf:core-arlington] veraPDF CLI has potential XXE (XML External Entity Injection) vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-4cx5-89vm-833x</id>
        <link href="https://github.com/advisories/GHSA-4cx5-89vm-833x"/>
        <updated>2024-12-23T17:13:28.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>Executing policy checks using custom schematron files via the CLI invokes an XSL transformation that may theoretically lead to a remote code execution (RCE) vulnerability.</p>
<h3 id="patches">Patches</h3>
<p>We are currently working on a patch that will be released when ready.</p>
<h3 id="workarounds">Workarounds</h3>
<p>This doesn't affect the standard validation and policy checks functionality, veraPDF's common use cases. Most veraPDF users don't insert any custom XSLT code into policy profiles, which are based on Schematron syntax rather than direct XSL transforms. For users who do, only load custom policy files from sources you trust.</p>
<h3 id="references">References</h3>
<p>Original issue: #1488</p>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/veraPDF/veraPDF-library/security/advisories/GHSA-4cx5-89vm-833x">https://github.com/veraPDF/veraPDF-library/security/advisories/GHSA-4cx5-89vm-833x</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-52800">https://nvd.nist.gov/vuln/detail/CVE-2024-52800</a></li>
<li><a href="https://github.com/veraPDF/veraPDF-library/issues/1488">https://github.com/veraPDF/veraPDF-library/issues/1488</a></li>
<li><a href="https://github.com/advisories/GHSA-4cx5-89vm-833x">https://github.com/advisories/GHSA-4cx5-89vm-833x</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-4cx5-89vm-833x</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2024-12-02T17:15:24.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.verapdf:core-jakarta] veraPDF CLI has potential XXE (XML External Entity Injection) vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-4cx5-89vm-833x</id>
        <link href="https://github.com/advisories/GHSA-4cx5-89vm-833x"/>
        <updated>2024-12-23T17:13:28.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>Executing policy checks using custom schematron files via the CLI invokes an XSL transformation that may theoretically lead to a remote code execution (RCE) vulnerability.</p>
<h3 id="patches">Patches</h3>
<p>We are currently working on a patch that will be released when ready.</p>
<h3 id="workarounds">Workarounds</h3>
<p>This doesn't affect the standard validation and policy checks functionality, veraPDF's common use cases. Most veraPDF users don't insert any custom XSLT code into policy profiles, which are based on Schematron syntax rather than direct XSL transforms. For users who do, only load custom policy files from sources you trust.</p>
<h3 id="references">References</h3>
<p>Original issue: #1488</p>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/veraPDF/veraPDF-library/security/advisories/GHSA-4cx5-89vm-833x">https://github.com/veraPDF/veraPDF-library/security/advisories/GHSA-4cx5-89vm-833x</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-52800">https://nvd.nist.gov/vuln/detail/CVE-2024-52800</a></li>
<li><a href="https://github.com/veraPDF/veraPDF-library/issues/1488">https://github.com/veraPDF/veraPDF-library/issues/1488</a></li>
<li><a href="https://github.com/advisories/GHSA-4cx5-89vm-833x">https://github.com/advisories/GHSA-4cx5-89vm-833x</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-4cx5-89vm-833x</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2024-12-02T17:15:24.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.verapdf:core] veraPDF CLI has potential XXE (XML External Entity Injection) vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-4cx5-89vm-833x</id>
        <link href="https://github.com/advisories/GHSA-4cx5-89vm-833x"/>
        <updated>2024-12-23T17:13:28.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>Executing policy checks using custom schematron files via the CLI invokes an XSL transformation that may theoretically lead to a remote code execution (RCE) vulnerability.</p>
<h3 id="patches">Patches</h3>
<p>We are currently working on a patch that will be released when ready.</p>
<h3 id="workarounds">Workarounds</h3>
<p>This doesn't affect the standard validation and policy checks functionality, veraPDF's common use cases. Most veraPDF users don't insert any custom XSLT code into policy profiles, which are based on Schematron syntax rather than direct XSL transforms. For users who do, only load custom policy files from sources you trust.</p>
<h3 id="references">References</h3>
<p>Original issue: #1488</p>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/veraPDF/veraPDF-library/security/advisories/GHSA-4cx5-89vm-833x">https://github.com/veraPDF/veraPDF-library/security/advisories/GHSA-4cx5-89vm-833x</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-52800">https://nvd.nist.gov/vuln/detail/CVE-2024-52800</a></li>
<li><a href="https://github.com/veraPDF/veraPDF-library/issues/1488">https://github.com/veraPDF/veraPDF-library/issues/1488</a></li>
<li><a href="https://github.com/advisories/GHSA-4cx5-89vm-833x">https://github.com/advisories/GHSA-4cx5-89vm-833x</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-4cx5-89vm-833x</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2024-12-02T17:15:24.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.apache.tomcat:tomcat-catalina] Apache Tomcat Time-of-check Time-of-use (TOCTOU) Race Condition vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-27hp-xhwr-wr2m</id>
        <link href="https://github.com/advisories/GHSA-27hp-xhwr-wr2m"/>
        <updated>2024-12-20T19:50:46.000Z</updated>
        <content type="html"><![CDATA[<p>Time-of-check Time-of-use (TOCTOU) Race Condition vulnerability in Apache Tomcat.</p>
<p>This issue affects Apache Tomcat: from 11.0.0-M1 through 11.0.1, from 10.1.0-M1 through 10.1.33, from 9.0.0.M1 through 9.0.97.</p>
<p>The mitigation for CVE-2024-50379 was incomplete.</p>
<p>Users running Tomcat on a case insensitive file system with the default servlet write enabled (readonly initialisation 
parameter set to the non-default value of false) may need additional configuration to fully mitigate CVE-2024-50379 depending on which version of Java they are using with Tomcat:</p>
<ul>
<li>running on Java 8 or Java 11: the system property&nbsp;sun.io.useCanonCaches must be explicitly set to false (it defaults to true)</li>
<li>running on Java 17: the&nbsp;system property sun.io.useCanonCaches, if set, must be set to false&nbsp;(it defaults to false)</li>
<li>running on Java 21 onwards: no further configuration is required&nbsp;(the system property and the problematic cache have been removed)</li>
</ul>
<p>Tomcat 11.0.3, 10.1.35 and 9.0.99 onwards will include checks that&nbsp;sun.io.useCanonCaches is set appropriately before allowing the default servlet to be write enabled on a case insensitive file system. Tomcat will also set&nbsp;sun.io.useCanonCaches to false by default where it can.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-56337">https://nvd.nist.gov/vuln/detail/CVE-2024-56337</a></li>
<li><a href="https://lists.apache.org/thread/b2b9qrgjrz1kvo4ym8y2wkfdvwoq6qbp">https://lists.apache.org/thread/b2b9qrgjrz1kvo4ym8y2wkfdvwoq6qbp</a></li>
<li><a href="https://www.cve.org/CVERecord?id=CVE-2024-50379">https://www.cve.org/CVERecord?id=CVE-2024-50379</a></li>
<li><a href="https://tomcat.apache.org/security-10.html#Fixed_in_Apache_Tomcat_10.1.34">https://tomcat.apache.org/security-10.html#Fixed_in_Apache_Tomcat_10.1.34</a></li>
<li><a href="https://tomcat.apache.org/security-11.html#Fixed_in_Apache_Tomcat_11.0.2">https://tomcat.apache.org/security-11.html#Fixed_in_Apache_Tomcat_11.0.2</a></li>
<li><a href="https://tomcat.apache.org/security-9.html#Fixed_in_Apache_Tomcat_9.0.98">https://tomcat.apache.org/security-9.html#Fixed_in_Apache_Tomcat_9.0.98</a></li>
<li><a href="https://github.com/advisories/GHSA-27hp-xhwr-wr2m">https://github.com/advisories/GHSA-27hp-xhwr-wr2m</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-27hp-xhwr-wr2m</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-12-20T18:31:32.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.apache.tomcat:tomcat-catalina] Apache Tomcat Time-of-check Time-of-use (TOCTOU) Race Condition vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-27hp-xhwr-wr2m</id>
        <link href="https://github.com/advisories/GHSA-27hp-xhwr-wr2m"/>
        <updated>2024-12-20T19:50:46.000Z</updated>
        <content type="html"><![CDATA[<p>Time-of-check Time-of-use (TOCTOU) Race Condition vulnerability in Apache Tomcat.</p>
<p>This issue affects Apache Tomcat: from 11.0.0-M1 through 11.0.1, from 10.1.0-M1 through 10.1.33, from 9.0.0.M1 through 9.0.97.</p>
<p>The mitigation for CVE-2024-50379 was incomplete.</p>
<p>Users running Tomcat on a case insensitive file system with the default servlet write enabled (readonly initialisation 
parameter set to the non-default value of false) may need additional configuration to fully mitigate CVE-2024-50379 depending on which version of Java they are using with Tomcat:</p>
<ul>
<li>running on Java 8 or Java 11: the system property&nbsp;sun.io.useCanonCaches must be explicitly set to false (it defaults to true)</li>
<li>running on Java 17: the&nbsp;system property sun.io.useCanonCaches, if set, must be set to false&nbsp;(it defaults to false)</li>
<li>running on Java 21 onwards: no further configuration is required&nbsp;(the system property and the problematic cache have been removed)</li>
</ul>
<p>Tomcat 11.0.3, 10.1.35 and 9.0.99 onwards will include checks that&nbsp;sun.io.useCanonCaches is set appropriately before allowing the default servlet to be write enabled on a case insensitive file system. Tomcat will also set&nbsp;sun.io.useCanonCaches to false by default where it can.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-56337">https://nvd.nist.gov/vuln/detail/CVE-2024-56337</a></li>
<li><a href="https://lists.apache.org/thread/b2b9qrgjrz1kvo4ym8y2wkfdvwoq6qbp">https://lists.apache.org/thread/b2b9qrgjrz1kvo4ym8y2wkfdvwoq6qbp</a></li>
<li><a href="https://www.cve.org/CVERecord?id=CVE-2024-50379">https://www.cve.org/CVERecord?id=CVE-2024-50379</a></li>
<li><a href="https://tomcat.apache.org/security-10.html#Fixed_in_Apache_Tomcat_10.1.34">https://tomcat.apache.org/security-10.html#Fixed_in_Apache_Tomcat_10.1.34</a></li>
<li><a href="https://tomcat.apache.org/security-11.html#Fixed_in_Apache_Tomcat_11.0.2">https://tomcat.apache.org/security-11.html#Fixed_in_Apache_Tomcat_11.0.2</a></li>
<li><a href="https://tomcat.apache.org/security-9.html#Fixed_in_Apache_Tomcat_9.0.98">https://tomcat.apache.org/security-9.html#Fixed_in_Apache_Tomcat_9.0.98</a></li>
<li><a href="https://github.com/advisories/GHSA-27hp-xhwr-wr2m">https://github.com/advisories/GHSA-27hp-xhwr-wr2m</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-27hp-xhwr-wr2m</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-12-20T18:31:32.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.apache.tomcat:tomcat-catalina] Apache Tomcat Time-of-check Time-of-use (TOCTOU) Race Condition vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-27hp-xhwr-wr2m</id>
        <link href="https://github.com/advisories/GHSA-27hp-xhwr-wr2m"/>
        <updated>2024-12-20T19:50:46.000Z</updated>
        <content type="html"><![CDATA[<p>Time-of-check Time-of-use (TOCTOU) Race Condition vulnerability in Apache Tomcat.</p>
<p>This issue affects Apache Tomcat: from 11.0.0-M1 through 11.0.1, from 10.1.0-M1 through 10.1.33, from 9.0.0.M1 through 9.0.97.</p>
<p>The mitigation for CVE-2024-50379 was incomplete.</p>
<p>Users running Tomcat on a case insensitive file system with the default servlet write enabled (readonly initialisation 
parameter set to the non-default value of false) may need additional configuration to fully mitigate CVE-2024-50379 depending on which version of Java they are using with Tomcat:</p>
<ul>
<li>running on Java 8 or Java 11: the system property&nbsp;sun.io.useCanonCaches must be explicitly set to false (it defaults to true)</li>
<li>running on Java 17: the&nbsp;system property sun.io.useCanonCaches, if set, must be set to false&nbsp;(it defaults to false)</li>
<li>running on Java 21 onwards: no further configuration is required&nbsp;(the system property and the problematic cache have been removed)</li>
</ul>
<p>Tomcat 11.0.3, 10.1.35 and 9.0.99 onwards will include checks that&nbsp;sun.io.useCanonCaches is set appropriately before allowing the default servlet to be write enabled on a case insensitive file system. Tomcat will also set&nbsp;sun.io.useCanonCaches to false by default where it can.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-56337">https://nvd.nist.gov/vuln/detail/CVE-2024-56337</a></li>
<li><a href="https://lists.apache.org/thread/b2b9qrgjrz1kvo4ym8y2wkfdvwoq6qbp">https://lists.apache.org/thread/b2b9qrgjrz1kvo4ym8y2wkfdvwoq6qbp</a></li>
<li><a href="https://www.cve.org/CVERecord?id=CVE-2024-50379">https://www.cve.org/CVERecord?id=CVE-2024-50379</a></li>
<li><a href="https://tomcat.apache.org/security-10.html#Fixed_in_Apache_Tomcat_10.1.34">https://tomcat.apache.org/security-10.html#Fixed_in_Apache_Tomcat_10.1.34</a></li>
<li><a href="https://tomcat.apache.org/security-11.html#Fixed_in_Apache_Tomcat_11.0.2">https://tomcat.apache.org/security-11.html#Fixed_in_Apache_Tomcat_11.0.2</a></li>
<li><a href="https://tomcat.apache.org/security-9.html#Fixed_in_Apache_Tomcat_9.0.98">https://tomcat.apache.org/security-9.html#Fixed_in_Apache_Tomcat_9.0.98</a></li>
<li><a href="https://github.com/advisories/GHSA-27hp-xhwr-wr2m">https://github.com/advisories/GHSA-27hp-xhwr-wr2m</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-27hp-xhwr-wr2m</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-12-20T18:31:32.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[ch.qos.logback:logback-core] QOS.CH logback-core Expression Language Injection vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-pr98-23f8-jwxv</id>
        <link href="https://github.com/advisories/GHSA-pr98-23f8-jwxv"/>
        <updated>2024-12-20T15:13:26.000Z</updated>
        <content type="html"><![CDATA[<p>ACE vulnerability in JaninoEventEvaluator by QOS.CH logback-core up to and including version 1.5.12 in Java applications allows attackers to execute arbitrary code by compromising an existing logback configuration file or by injecting an environment variable before program execution.</p>
<p>Malicious logback configuration files can allow the attacker to execute arbitrary code using the JaninoEventEvaluator extension.</p>
<p>A successful attack requires the user to have write access to a configuration file. Alternatively, the attacker could inject a malicious environment variable pointing to a malicious configuration file. In both cases, the attack requires existing privilege.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-12798">https://nvd.nist.gov/vuln/detail/CVE-2024-12798</a></li>
<li><a href="https://logback.qos.ch/news.html#1.5.13">https://logback.qos.ch/news.html#1.5.13</a></li>
<li><a href="https://github.com/qos-ch/logback/commit/2cb6d520df7592ef1c3a198f1b5df3c10c93e183">https://github.com/qos-ch/logback/commit/2cb6d520df7592ef1c3a198f1b5df3c10c93e183</a></li>
<li><a href="https://github.com/advisories/GHSA-pr98-23f8-jwxv">https://github.com/advisories/GHSA-pr98-23f8-jwxv</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-pr98-23f8-jwxv</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-12-19T18:31:37.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[ch.qos.logback:logback-core] QOS.CH logback-core Server-Side Request Forgery vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-6v67-2wr5-gvf4</id>
        <link href="https://github.com/advisories/GHSA-6v67-2wr5-gvf4"/>
        <updated>2024-12-20T15:12:55.000Z</updated>
        <content type="html"><![CDATA[<p>Server-Side Request Forgery (SSRF) in SaxEventRecorder by QOS.CH logback version 1.5.12 on the Java platform, allows an attacker to forge requests by compromising logback configuration files in XML.</p>
<p>The attacks involves the modification of DOCTYPE declaration in&nbsp; XML configuration files.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-12801">https://nvd.nist.gov/vuln/detail/CVE-2024-12801</a></li>
<li><a href="https://logback.qos.ch/news.html#1.5.13">https://logback.qos.ch/news.html#1.5.13</a></li>
<li><a href="https://github.com/qos-ch/logback/commit/5f05041cba4c4ac0a62748c5c527a2da48999f2d">https://github.com/qos-ch/logback/commit/5f05041cba4c4ac0a62748c5c527a2da48999f2d</a></li>
<li><a href="https://github.com/advisories/GHSA-6v67-2wr5-gvf4">https://github.com/advisories/GHSA-6v67-2wr5-gvf4</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-6v67-2wr5-gvf4</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2024-12-19T18:31:37.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.springframework:spring-webmvc] Spring Framework Path Traversal vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-g5vr-rgqm-vf78</id>
        <link href="https://github.com/advisories/GHSA-g5vr-rgqm-vf78"/>
        <updated>2024-12-19T22:35:07.000Z</updated>
        <content type="html"><![CDATA[<p>Applications serving static resources through the functional web frameworks WebMvc.fn or WebFlux.fn are vulnerable to path traversal attacks. An attacker can craft malicious HTTP requests and obtain any file on the file system that is also accessible to the process in which the Spring application is running.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-38819">https://nvd.nist.gov/vuln/detail/CVE-2024-38819</a></li>
<li><a href="https://spring.io/security/cve-2024-38819">https://spring.io/security/cve-2024-38819</a></li>
<li><a href="https://github.com/spring-projects/spring-framework/issues/33689">https://github.com/spring-projects/spring-framework/issues/33689</a></li>
<li><a href="https://github.com/spring-projects/spring-framework/commit/3bfbe30a7814c9ea1556d40df9bd87ddb3ba372d">https://github.com/spring-projects/spring-framework/commit/3bfbe30a7814c9ea1556d40df9bd87ddb3ba372d</a></li>
<li><a href="https://github.com/spring-projects/spring-framework/commit/fb7890d73975a3d9e0763e0926df2bd0a608e87e">https://github.com/spring-projects/spring-framework/commit/fb7890d73975a3d9e0763e0926df2bd0a608e87e</a></li>
<li><a href="https://github.com/advisories/GHSA-g5vr-rgqm-vf78">https://github.com/advisories/GHSA-g5vr-rgqm-vf78</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-g5vr-rgqm-vf78</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-12-19T18:31:38.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.springframework:spring-webflux] Spring Framework Path Traversal vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-g5vr-rgqm-vf78</id>
        <link href="https://github.com/advisories/GHSA-g5vr-rgqm-vf78"/>
        <updated>2024-12-19T22:35:07.000Z</updated>
        <content type="html"><![CDATA[<p>Applications serving static resources through the functional web frameworks WebMvc.fn or WebFlux.fn are vulnerable to path traversal attacks. An attacker can craft malicious HTTP requests and obtain any file on the file system that is also accessible to the process in which the Spring application is running.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-38819">https://nvd.nist.gov/vuln/detail/CVE-2024-38819</a></li>
<li><a href="https://spring.io/security/cve-2024-38819">https://spring.io/security/cve-2024-38819</a></li>
<li><a href="https://github.com/spring-projects/spring-framework/issues/33689">https://github.com/spring-projects/spring-framework/issues/33689</a></li>
<li><a href="https://github.com/spring-projects/spring-framework/commit/3bfbe30a7814c9ea1556d40df9bd87ddb3ba372d">https://github.com/spring-projects/spring-framework/commit/3bfbe30a7814c9ea1556d40df9bd87ddb3ba372d</a></li>
<li><a href="https://github.com/spring-projects/spring-framework/commit/fb7890d73975a3d9e0763e0926df2bd0a608e87e">https://github.com/spring-projects/spring-framework/commit/fb7890d73975a3d9e0763e0926df2bd0a608e87e</a></li>
<li><a href="https://github.com/advisories/GHSA-g5vr-rgqm-vf78">https://github.com/advisories/GHSA-g5vr-rgqm-vf78</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-g5vr-rgqm-vf78</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-12-19T18:31:38.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[com.databricks:databricks-jdbc] Databricks JDBC Driver Command Injection vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-jxw2-jvxf-5vrp</id>
        <link href="https://github.com/advisories/GHSA-jxw2-jvxf-5vrp"/>
        <updated>2024-12-18T19:49:42.000Z</updated>
        <content type="html"><![CDATA[<p>Databricks JDBC Driver before 2.6.40 could potentially allow remote code execution (RCE) by triggering a JNDI injection via a JDBC URL parameter. The vulnerability is rooted in the improper handling of the krbJAASFile parameter. An attacker could potentially exploit this vulnerability to achieve Remote Code Execution in the context of the driver by tricking a victim into using a crafted connection URL that uses the property krbJAASFile.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-49194">https://nvd.nist.gov/vuln/detail/CVE-2024-49194</a></li>
<li><a href="https://kb.databricks.com/en_US/data-sources/security-bulletin-databricks-jdbc-driver-vulnerability-advisory-cve-2024-49194">https://kb.databricks.com/en_US/data-sources/security-bulletin-databricks-jdbc-driver-vulnerability-advisory-cve-2024-49194</a></li>
<li><a href="https://github.com/advisories/GHSA-jxw2-jvxf-5vrp">https://github.com/advisories/GHSA-jxw2-jvxf-5vrp</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-jxw2-jvxf-5vrp</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-12-17T21:30:34.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.apache.kafka:kafka] Apache Kafka's SCRAM implementation Incorrectly Implements Authentication Algorithm]]></title>
        <id>https://github.com/advisories/GHSA-p7c9-8xx8-h74f</id>
        <link href="https://github.com/advisories/GHSA-p7c9-8xx8-h74f"/>
        <updated>2024-12-18T19:16:20.000Z</updated>
        <content type="html"><![CDATA[<p>Incorrect Implementation of Authentication Algorithm in Apache Kafka's SCRAM implementation.</p>
<p>Issue Summary:
Apache Kafka's implementation of the Salted Challenge Response Authentication Mechanism (SCRAM) did not fully adhere to the requirements of RFC 5802 [1].
Specifically, as per RFC 5802, the server must verify that the nonce sent by the client in the second message matches the nonce sent by the server in its first message.
However, Kafka's SCRAM implementation did not perform this validation.</p>
<p>Impact:
This vulnerability is exploitable only when an attacker has plaintext access to the SCRAM authentication exchange. However, the usage of SCRAM over plaintext is strongly discouraged as it is considered an insecure practice [2]. Apache Kafka recommends deploying SCRAM exclusively with TLS encryption to protect SCRAM exchanges from interception [3].
Deployments using SCRAM with TLS are not affected by this issue.</p>
<p>How to Detect If You Are Impacted:
If your deployment uses SCRAM authentication over plaintext communication channels (without TLS encryption), you are likely impacted.
To check if TLS is enabled, review your server.properties configuration file for listeners property. If you have SASL_PLAINTEXT in the listeners, then you are likely impacted.</p>
<p>Fix Details:
The issue has been addressed by introducing nonce verification in the final message of the SCRAM authentication exchange to ensure compliance with RFC 5802.</p>
<p>Affected Versions:
Apache Kafka versions 0.10.2.0 through 3.9.0, excluding the fixed versions below.</p>
<p>Fixed Versions:
3.9.0
3.8.1
3.7.2</p>
<p>Users are advised to upgrade to 3.7.2 or later to mitigate this issue.</p>
<p>Recommendations for Mitigation:
Users unable to upgrade to the fixed versions can mitigate the issue by:</p>
<ul>
<li>Using TLS with SCRAM Authentication:
Always deploy SCRAM over TLS to encrypt authentication exchanges and protect against interception.</li>
<li>Considering Alternative Authentication Mechanisms:
Evaluate alternative authentication mechanisms, such as PLAIN, Kerberos or OAuth with TLS, which provide additional layers of security.</li>
</ul>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-56128">https://nvd.nist.gov/vuln/detail/CVE-2024-56128</a></li>
<li><a href="https://datatracker.ietf.org/doc/html/rfc5802">https://datatracker.ietf.org/doc/html/rfc5802</a></li>
<li><a href="https://datatracker.ietf.org/doc/html/rfc5802#section-9">https://datatracker.ietf.org/doc/html/rfc5802#section-9</a></li>
<li><a href="https://kafka.apache.org/documentation/#security_sasl_scram_security">https://kafka.apache.org/documentation/#security_sasl_scram_security</a></li>
<li><a href="https://lists.apache.org/thread/84dh4so32lwn7wr6c5s9mwh381vx9wkw">https://lists.apache.org/thread/84dh4so32lwn7wr6c5s9mwh381vx9wkw</a></li>
<li><a href="https://github.com/apache/kafka/commit/2cbc5bd3ca22185d9cd357c9db23a2cfb43a0fff">https://github.com/apache/kafka/commit/2cbc5bd3ca22185d9cd357c9db23a2cfb43a0fff</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2024/12/18/3">http://www.openwall.com/lists/oss-security/2024/12/18/3</a></li>
<li><a href="https://github.com/advisories/GHSA-p7c9-8xx8-h74f">https://github.com/advisories/GHSA-p7c9-8xx8-h74f</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-p7c9-8xx8-h74f</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2024-12-18T15:33:00.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.apache.kafka:kafka] Apache Kafka's SCRAM implementation Incorrectly Implements Authentication Algorithm]]></title>
        <id>https://github.com/advisories/GHSA-p7c9-8xx8-h74f</id>
        <link href="https://github.com/advisories/GHSA-p7c9-8xx8-h74f"/>
        <updated>2024-12-18T19:16:20.000Z</updated>
        <content type="html"><![CDATA[<p>Incorrect Implementation of Authentication Algorithm in Apache Kafka's SCRAM implementation.</p>
<p>Issue Summary:
Apache Kafka's implementation of the Salted Challenge Response Authentication Mechanism (SCRAM) did not fully adhere to the requirements of RFC 5802 [1].
Specifically, as per RFC 5802, the server must verify that the nonce sent by the client in the second message matches the nonce sent by the server in its first message.
However, Kafka's SCRAM implementation did not perform this validation.</p>
<p>Impact:
This vulnerability is exploitable only when an attacker has plaintext access to the SCRAM authentication exchange. However, the usage of SCRAM over plaintext is strongly discouraged as it is considered an insecure practice [2]. Apache Kafka recommends deploying SCRAM exclusively with TLS encryption to protect SCRAM exchanges from interception [3].
Deployments using SCRAM with TLS are not affected by this issue.</p>
<p>How to Detect If You Are Impacted:
If your deployment uses SCRAM authentication over plaintext communication channels (without TLS encryption), you are likely impacted.
To check if TLS is enabled, review your server.properties configuration file for listeners property. If you have SASL_PLAINTEXT in the listeners, then you are likely impacted.</p>
<p>Fix Details:
The issue has been addressed by introducing nonce verification in the final message of the SCRAM authentication exchange to ensure compliance with RFC 5802.</p>
<p>Affected Versions:
Apache Kafka versions 0.10.2.0 through 3.9.0, excluding the fixed versions below.</p>
<p>Fixed Versions:
3.9.0
3.8.1
3.7.2</p>
<p>Users are advised to upgrade to 3.7.2 or later to mitigate this issue.</p>
<p>Recommendations for Mitigation:
Users unable to upgrade to the fixed versions can mitigate the issue by:</p>
<ul>
<li>Using TLS with SCRAM Authentication:
Always deploy SCRAM over TLS to encrypt authentication exchanges and protect against interception.</li>
<li>Considering Alternative Authentication Mechanisms:
Evaluate alternative authentication mechanisms, such as PLAIN, Kerberos or OAuth with TLS, which provide additional layers of security.</li>
</ul>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-56128">https://nvd.nist.gov/vuln/detail/CVE-2024-56128</a></li>
<li><a href="https://datatracker.ietf.org/doc/html/rfc5802">https://datatracker.ietf.org/doc/html/rfc5802</a></li>
<li><a href="https://datatracker.ietf.org/doc/html/rfc5802#section-9">https://datatracker.ietf.org/doc/html/rfc5802#section-9</a></li>
<li><a href="https://kafka.apache.org/documentation/#security_sasl_scram_security">https://kafka.apache.org/documentation/#security_sasl_scram_security</a></li>
<li><a href="https://lists.apache.org/thread/84dh4so32lwn7wr6c5s9mwh381vx9wkw">https://lists.apache.org/thread/84dh4so32lwn7wr6c5s9mwh381vx9wkw</a></li>
<li><a href="https://github.com/apache/kafka/commit/2cbc5bd3ca22185d9cd357c9db23a2cfb43a0fff">https://github.com/apache/kafka/commit/2cbc5bd3ca22185d9cd357c9db23a2cfb43a0fff</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2024/12/18/3">http://www.openwall.com/lists/oss-security/2024/12/18/3</a></li>
<li><a href="https://github.com/advisories/GHSA-p7c9-8xx8-h74f">https://github.com/advisories/GHSA-p7c9-8xx8-h74f</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-p7c9-8xx8-h74f</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2024-12-18T15:33:00.000Z</published>
    </entry>
</feed>