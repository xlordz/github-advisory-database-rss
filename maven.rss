<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://azu.github.io/github-advisory-database-rss/maven.rss</id>
    <title>Security Advisory for Java artifacts hosted at the Maven central repository</title>
    <updated>2025-01-01T10:01:27.696Z</updated>
    <generator>github-advisory-database-rss</generator>
    <link rel="alternate" href="https://github.com/advisories?query=type%3Areviewed+ecosystem%3Amaven"/>
    <subtitle>Security Advisory for Java artifacts hosted at the Maven central repository on GitHub</subtitle>
    <rights>github-advisory-database-rss</rights>
    <category term="CRITICAL"/>
    <category term="HIGH"/>
    <category term="MODERATE"/>
    <category term="LOW"/>
    <entry>
        <title type="html"><![CDATA[[org.apache.nifi:nifi-framework-core] Apache NiFi: Missing Complete Authorization for Parameter and Service References]]></title>
        <id>https://github.com/advisories/GHSA-mpj7-7mg7-x95j</id>
        <link href="https://github.com/advisories/GHSA-mpj7-7mg7-x95j"/>
        <updated>2024-12-30T16:52:10.000Z</updated>
        <content type="html"><![CDATA[<p>Apache NiFi 1.10.0 through 2.0.0 are missing fine-grained authorization checking for Parameter Contexts, referenced Controller Services, and referenced Parameter Providers, when creating new Process Groups.</p>
<p>Creating a new Process Group can include binding to a Parameter Context, but in cases where the Process Group did not reference any Parameter values, the framework did not check user authorization for the bound Parameter Context. Missing authorization for a bound Parameter Context enabled clients to download non-sensitive Parameter values after creating the Process Group.</p>
<p>Creating a new Process Group can also include referencing existing Controller Services or Parameter Providers. The framework did not check user authorization for referenced Controller Services or Parameter Providers, enabling clients to create Process Groups and use these components that were otherwise unauthorized.</p>
<p>This vulnerability is limited in scope to authenticated users authorized to create Process Groups. The scope is further limited to deployments with component-based authorization policies. Upgrading to Apache NiFi 2.1.0 is the recommended mitigation, which includes authorization checking for Parameter and Controller Service references on Process Group creation.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-56512">https://nvd.nist.gov/vuln/detail/CVE-2024-56512</a></li>
<li><a href="https://lists.apache.org/thread/cjc8fns5kjsho0s7vonlnojokyfx47wn">https://lists.apache.org/thread/cjc8fns5kjsho0s7vonlnojokyfx47wn</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2024/12/28/1">http://www.openwall.com/lists/oss-security/2024/12/28/1</a></li>
<li><a href="https://github.com/apache/nifi/commit/f744deebf9a9effdbbff79ce6073ec329b5f45da">https://github.com/apache/nifi/commit/f744deebf9a9effdbbff79ce6073ec329b5f45da</a></li>
<li><a href="https://github.com/advisories/GHSA-mpj7-7mg7-x95j">https://github.com/advisories/GHSA-mpj7-7mg7-x95j</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-mpj7-7mg7-x95j</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2024-12-28T18:30:48.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.apache.nifi:nifi-framework-components] Apache NiFi: Missing Complete Authorization for Parameter and Service References]]></title>
        <id>https://github.com/advisories/GHSA-mpj7-7mg7-x95j</id>
        <link href="https://github.com/advisories/GHSA-mpj7-7mg7-x95j"/>
        <updated>2024-12-30T16:52:10.000Z</updated>
        <content type="html"><![CDATA[<p>Apache NiFi 1.10.0 through 2.0.0 are missing fine-grained authorization checking for Parameter Contexts, referenced Controller Services, and referenced Parameter Providers, when creating new Process Groups.</p>
<p>Creating a new Process Group can include binding to a Parameter Context, but in cases where the Process Group did not reference any Parameter values, the framework did not check user authorization for the bound Parameter Context. Missing authorization for a bound Parameter Context enabled clients to download non-sensitive Parameter values after creating the Process Group.</p>
<p>Creating a new Process Group can also include referencing existing Controller Services or Parameter Providers. The framework did not check user authorization for referenced Controller Services or Parameter Providers, enabling clients to create Process Groups and use these components that were otherwise unauthorized.</p>
<p>This vulnerability is limited in scope to authenticated users authorized to create Process Groups. The scope is further limited to deployments with component-based authorization policies. Upgrading to Apache NiFi 2.1.0 is the recommended mitigation, which includes authorization checking for Parameter and Controller Service references on Process Group creation.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-56512">https://nvd.nist.gov/vuln/detail/CVE-2024-56512</a></li>
<li><a href="https://lists.apache.org/thread/cjc8fns5kjsho0s7vonlnojokyfx47wn">https://lists.apache.org/thread/cjc8fns5kjsho0s7vonlnojokyfx47wn</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2024/12/28/1">http://www.openwall.com/lists/oss-security/2024/12/28/1</a></li>
<li><a href="https://github.com/apache/nifi/commit/f744deebf9a9effdbbff79ce6073ec329b5f45da">https://github.com/apache/nifi/commit/f744deebf9a9effdbbff79ce6073ec329b5f45da</a></li>
<li><a href="https://github.com/advisories/GHSA-mpj7-7mg7-x95j">https://github.com/advisories/GHSA-mpj7-7mg7-x95j</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-mpj7-7mg7-x95j</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2024-12-28T18:30:48.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.apache.nifi:nifi-framework-cluster] Apache NiFi: Missing Complete Authorization for Parameter and Service References]]></title>
        <id>https://github.com/advisories/GHSA-mpj7-7mg7-x95j</id>
        <link href="https://github.com/advisories/GHSA-mpj7-7mg7-x95j"/>
        <updated>2024-12-30T16:52:10.000Z</updated>
        <content type="html"><![CDATA[<p>Apache NiFi 1.10.0 through 2.0.0 are missing fine-grained authorization checking for Parameter Contexts, referenced Controller Services, and referenced Parameter Providers, when creating new Process Groups.</p>
<p>Creating a new Process Group can include binding to a Parameter Context, but in cases where the Process Group did not reference any Parameter values, the framework did not check user authorization for the bound Parameter Context. Missing authorization for a bound Parameter Context enabled clients to download non-sensitive Parameter values after creating the Process Group.</p>
<p>Creating a new Process Group can also include referencing existing Controller Services or Parameter Providers. The framework did not check user authorization for referenced Controller Services or Parameter Providers, enabling clients to create Process Groups and use these components that were otherwise unauthorized.</p>
<p>This vulnerability is limited in scope to authenticated users authorized to create Process Groups. The scope is further limited to deployments with component-based authorization policies. Upgrading to Apache NiFi 2.1.0 is the recommended mitigation, which includes authorization checking for Parameter and Controller Service references on Process Group creation.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-56512">https://nvd.nist.gov/vuln/detail/CVE-2024-56512</a></li>
<li><a href="https://lists.apache.org/thread/cjc8fns5kjsho0s7vonlnojokyfx47wn">https://lists.apache.org/thread/cjc8fns5kjsho0s7vonlnojokyfx47wn</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2024/12/28/1">http://www.openwall.com/lists/oss-security/2024/12/28/1</a></li>
<li><a href="https://github.com/apache/nifi/commit/f744deebf9a9effdbbff79ce6073ec329b5f45da">https://github.com/apache/nifi/commit/f744deebf9a9effdbbff79ce6073ec329b5f45da</a></li>
<li><a href="https://github.com/advisories/GHSA-mpj7-7mg7-x95j">https://github.com/advisories/GHSA-mpj7-7mg7-x95j</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-mpj7-7mg7-x95j</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2024-12-28T18:30:48.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.apache.nifi:nifi-system-test-suite] Apache NiFi: Missing Complete Authorization for Parameter and Service References]]></title>
        <id>https://github.com/advisories/GHSA-mpj7-7mg7-x95j</id>
        <link href="https://github.com/advisories/GHSA-mpj7-7mg7-x95j"/>
        <updated>2024-12-30T16:52:10.000Z</updated>
        <content type="html"><![CDATA[<p>Apache NiFi 1.10.0 through 2.0.0 are missing fine-grained authorization checking for Parameter Contexts, referenced Controller Services, and referenced Parameter Providers, when creating new Process Groups.</p>
<p>Creating a new Process Group can include binding to a Parameter Context, but in cases where the Process Group did not reference any Parameter values, the framework did not check user authorization for the bound Parameter Context. Missing authorization for a bound Parameter Context enabled clients to download non-sensitive Parameter values after creating the Process Group.</p>
<p>Creating a new Process Group can also include referencing existing Controller Services or Parameter Providers. The framework did not check user authorization for referenced Controller Services or Parameter Providers, enabling clients to create Process Groups and use these components that were otherwise unauthorized.</p>
<p>This vulnerability is limited in scope to authenticated users authorized to create Process Groups. The scope is further limited to deployments with component-based authorization policies. Upgrading to Apache NiFi 2.1.0 is the recommended mitigation, which includes authorization checking for Parameter and Controller Service references on Process Group creation.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-56512">https://nvd.nist.gov/vuln/detail/CVE-2024-56512</a></li>
<li><a href="https://lists.apache.org/thread/cjc8fns5kjsho0s7vonlnojokyfx47wn">https://lists.apache.org/thread/cjc8fns5kjsho0s7vonlnojokyfx47wn</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2024/12/28/1">http://www.openwall.com/lists/oss-security/2024/12/28/1</a></li>
<li><a href="https://github.com/apache/nifi/commit/f744deebf9a9effdbbff79ce6073ec329b5f45da">https://github.com/apache/nifi/commit/f744deebf9a9effdbbff79ce6073ec329b5f45da</a></li>
<li><a href="https://github.com/advisories/GHSA-mpj7-7mg7-x95j">https://github.com/advisories/GHSA-mpj7-7mg7-x95j</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-mpj7-7mg7-x95j</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2024-12-28T18:30:48.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.apache.nifi:nifi-web-api] Apache NiFi: Missing Complete Authorization for Parameter and Service References]]></title>
        <id>https://github.com/advisories/GHSA-mpj7-7mg7-x95j</id>
        <link href="https://github.com/advisories/GHSA-mpj7-7mg7-x95j"/>
        <updated>2024-12-30T16:52:10.000Z</updated>
        <content type="html"><![CDATA[<p>Apache NiFi 1.10.0 through 2.0.0 are missing fine-grained authorization checking for Parameter Contexts, referenced Controller Services, and referenced Parameter Providers, when creating new Process Groups.</p>
<p>Creating a new Process Group can include binding to a Parameter Context, but in cases where the Process Group did not reference any Parameter values, the framework did not check user authorization for the bound Parameter Context. Missing authorization for a bound Parameter Context enabled clients to download non-sensitive Parameter values after creating the Process Group.</p>
<p>Creating a new Process Group can also include referencing existing Controller Services or Parameter Providers. The framework did not check user authorization for referenced Controller Services or Parameter Providers, enabling clients to create Process Groups and use these components that were otherwise unauthorized.</p>
<p>This vulnerability is limited in scope to authenticated users authorized to create Process Groups. The scope is further limited to deployments with component-based authorization policies. Upgrading to Apache NiFi 2.1.0 is the recommended mitigation, which includes authorization checking for Parameter and Controller Service references on Process Group creation.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-56512">https://nvd.nist.gov/vuln/detail/CVE-2024-56512</a></li>
<li><a href="https://lists.apache.org/thread/cjc8fns5kjsho0s7vonlnojokyfx47wn">https://lists.apache.org/thread/cjc8fns5kjsho0s7vonlnojokyfx47wn</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2024/12/28/1">http://www.openwall.com/lists/oss-security/2024/12/28/1</a></li>
<li><a href="https://github.com/apache/nifi/commit/f744deebf9a9effdbbff79ce6073ec329b5f45da">https://github.com/apache/nifi/commit/f744deebf9a9effdbbff79ce6073ec329b5f45da</a></li>
<li><a href="https://github.com/advisories/GHSA-mpj7-7mg7-x95j">https://github.com/advisories/GHSA-mpj7-7mg7-x95j</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-mpj7-7mg7-x95j</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2024-12-28T18:30:48.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.apache.nifi:nifi-client-dto] Apache NiFi: Missing Complete Authorization for Parameter and Service References]]></title>
        <id>https://github.com/advisories/GHSA-mpj7-7mg7-x95j</id>
        <link href="https://github.com/advisories/GHSA-mpj7-7mg7-x95j"/>
        <updated>2024-12-30T16:52:10.000Z</updated>
        <content type="html"><![CDATA[<p>Apache NiFi 1.10.0 through 2.0.0 are missing fine-grained authorization checking for Parameter Contexts, referenced Controller Services, and referenced Parameter Providers, when creating new Process Groups.</p>
<p>Creating a new Process Group can include binding to a Parameter Context, but in cases where the Process Group did not reference any Parameter values, the framework did not check user authorization for the bound Parameter Context. Missing authorization for a bound Parameter Context enabled clients to download non-sensitive Parameter values after creating the Process Group.</p>
<p>Creating a new Process Group can also include referencing existing Controller Services or Parameter Providers. The framework did not check user authorization for referenced Controller Services or Parameter Providers, enabling clients to create Process Groups and use these components that were otherwise unauthorized.</p>
<p>This vulnerability is limited in scope to authenticated users authorized to create Process Groups. The scope is further limited to deployments with component-based authorization policies. Upgrading to Apache NiFi 2.1.0 is the recommended mitigation, which includes authorization checking for Parameter and Controller Service references on Process Group creation.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-56512">https://nvd.nist.gov/vuln/detail/CVE-2024-56512</a></li>
<li><a href="https://lists.apache.org/thread/cjc8fns5kjsho0s7vonlnojokyfx47wn">https://lists.apache.org/thread/cjc8fns5kjsho0s7vonlnojokyfx47wn</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2024/12/28/1">http://www.openwall.com/lists/oss-security/2024/12/28/1</a></li>
<li><a href="https://github.com/apache/nifi/commit/f744deebf9a9effdbbff79ce6073ec329b5f45da">https://github.com/apache/nifi/commit/f744deebf9a9effdbbff79ce6073ec329b5f45da</a></li>
<li><a href="https://github.com/advisories/GHSA-mpj7-7mg7-x95j">https://github.com/advisories/GHSA-mpj7-7mg7-x95j</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-mpj7-7mg7-x95j</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2024-12-28T18:30:48.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[com.amazon.redshift:redshift-jdbc42] Amazon Redshift JDBC Driver vulnerable to SQL Injection]]></title>
        <id>https://github.com/advisories/GHSA-8596-2jgr-ppj7</id>
        <link href="https://github.com/advisories/GHSA-8596-2jgr-ppj7"/>
        <updated>2024-12-26T20:27:12.000Z</updated>
        <content type="html"><![CDATA[<h3 id="summary">Summary</h3>
<p>A SQL injection in the Amazon Redshift JDBC Driver in v2.1.0.31 allows a user to gain escalated privileges via schema injection in the getSchemas, getTables, or getColumns Metadata APIs. Users should upgrade to the driver version 2.1.0.32 or revert to driver version 2.1.0.30.</p>
<h3 id="impact">Impact</h3>
<p>A SQL injection is possible in the Amazon Redshift JDBC Driver, version 2.1.0.31, when leveraging metadata APIs to retrieve information about database schemas, tables, or columns.</p>
<p><strong>Impacted versions:</strong> Amazon Redshift JDBC Driver version 2.1.0.31.</p>
<h3 id="patches">Patches</h3>
<p>The issue described above has been addressed in the Amazon Redshift JDBC Driver, version 2.1.0.32.</p>
<p>The patch implemented in this version ensures that every metadata command input is sent to the Redshift server as part of a parameterized query, using either QUOTE_IDENT(string) or QUOTE_LITERAL(string). After processing all the inputs into quoted identifiers or literals, the metadata command is composed using these inputs and then executed on the server.</p>
<h3 id="workarounds">Workarounds</h3>
<p>Use the previous version of the Amazon Redshift JDBC Driver, 2.1.0.30.</p>
<h3 id="references">References</h3>
<p>If you have any questions or comments about this advisory we ask that you contact AWS/Amazon Security via our vulnerability reporting page [1] or directly via email to <a href="mailto:aws-security@amazon.com">aws-security@amazon.com</a>. Please do not create a public GitHub issue.</p>
<p>[1] Vulnerability reporting page: <a href="https://aws.amazon.com/security/vulnerability-reporting">https://aws.amazon.com/security/vulnerability-reporting</a></p>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/aws/amazon-redshift-jdbc-driver/security/advisories/GHSA-8596-2jgr-ppj7">https://github.com/aws/amazon-redshift-jdbc-driver/security/advisories/GHSA-8596-2jgr-ppj7</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-12744">https://nvd.nist.gov/vuln/detail/CVE-2024-12744</a></li>
<li><a href="https://aws.amazon.com/security/security-bulletins/AWS-2024-015">https://aws.amazon.com/security/security-bulletins/AWS-2024-015</a></li>
<li><a href="https://github.com/advisories/GHSA-8596-2jgr-ppj7">https://github.com/advisories/GHSA-8596-2jgr-ppj7</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-8596-2jgr-ppj7</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-12-26T20:27:10.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.apache.hugegraph:hugegraph-server] Apache HugeGraph-Server: Fixed JWT Token (Secret)]]></title>
        <id>https://github.com/advisories/GHSA-f697-gm3h-xrf9</id>
        <link href="https://github.com/advisories/GHSA-f697-gm3h-xrf9"/>
        <updated>2024-12-26T20:23:59.000Z</updated>
        <content type="html"><![CDATA[<p>Authentication Bypass by Assumed-Immutable Data vulnerability in Apache HugeGraph-Server.</p>
<p>This issue affects Apache HugeGraph-Server: from 1.0.0 before 1.5.0.</p>
<p>Users are recommended to upgrade to version 1.5.0, which fixes the issue.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-43441">https://nvd.nist.gov/vuln/detail/CVE-2024-43441</a></li>
<li><a href="https://lists.apache.org/thread/h2607yv32wgcrywov960jpxhvsmmlf12">https://lists.apache.org/thread/h2607yv32wgcrywov960jpxhvsmmlf12</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2024/12/24/2">http://www.openwall.com/lists/oss-security/2024/12/24/2</a></li>
<li><a href="https://github.com/apache/incubator-hugegraph/commit/03b40a52446218c83e98cb43020e0593a744a246">https://github.com/apache/incubator-hugegraph/commit/03b40a52446218c83e98cb43020e0593a744a246</a></li>
<li><a href="https://github.com/advisories/GHSA-f697-gm3h-xrf9">https://github.com/advisories/GHSA-f697-gm3h-xrf9</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-f697-gm3h-xrf9</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-12-24T12:30:42.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.apache.mina:mina-core] Apache MINA Deserialization RCE Vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-76h9-2vwh-w278</id>
        <link href="https://github.com/advisories/GHSA-76h9-2vwh-w278"/>
        <updated>2024-12-26T17:02:48.000Z</updated>
        <content type="html"><![CDATA[<p>The <code>ObjectSerializationDecoder</code> in Apache MINA uses Java’s native deserialization protocol to process incoming serialized data but lacks the necessary security checks and defenses. This vulnerability allows attackers to exploit the deserialization process by sending specially crafted malicious serialized data, potentially leading to remote code execution (RCE) attacks.</p>
<p>This issue affects MINA core versions 2.0.X, 2.1.X and 2.2.X, and will be fixed by the releases 2.0.27, 2.1.10 and 2.2.4.</p>
<p>It's also important to note that an application using MINA core library will only be affected if the IoBuffer#getObject() method is called, and this specific method is potentially called when adding a ProtocolCodecFilter instance using the <code>ObjectSerializationCodecFactory</code> class in the filter chain. If your application is specifically using those classes, you have to upgrade to the latest version of MINA core library.</p>
<p>Upgrading will&nbsp; not be enough: you also need to explicitly allow the classes the decoder will accept in the ObjectSerializationDecoder instance, using one of the three new methods:</p>
<p>1. 
&nbsp; &nbsp;&nbsp; * Accept class names where the supplied ClassNameMatcher matches for deserialization, unless they are otherwise rejected.
     * <code>@param classNameMatcher</code> the matcher to use
     * / <code>public void accept(ClassNameMatcher classNameMatcher)</code></p>
<p>2. 
     * Accept class names that match the supplied pattern for deserialization, unless they are otherwise rejected.
     * <code>@param</code> pattern standard Java regexp
     * / <code>public void accept(Pattern pattern)</code></p>
<ol start="3">
<li><ul>
<li>Accept the wildcard specified classes for deserialization, unless they are otherwise rejected.</li>
<li><code>@param</code> patterns Wildcard file name patterns as defined by <code>{@link org.apache.commons.io.FilenameUtils#wildcardMatch(String, String) FilenameUtils.wildcardMatch}</code></li>
<li>/ <code>public void accept(String... patterns)</code></li>
</ul>
</li>
</ol>
<p>By default, the decoder will reject <em>all</em> classes that will be present in the incoming data.</p>
<p>Note: The FtpServer, SSHd and Vysper sub-project are not affected by this issue.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-52046">https://nvd.nist.gov/vuln/detail/CVE-2024-52046</a></li>
<li><a href="https://lists.apache.org/thread/4wxktgjpggdbto15d515wdctohb0qmv8">https://lists.apache.org/thread/4wxktgjpggdbto15d515wdctohb0qmv8</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2024/12/25/1">http://www.openwall.com/lists/oss-security/2024/12/25/1</a></li>
<li><a href="https://github.com/advisories/GHSA-76h9-2vwh-w278">https://github.com/advisories/GHSA-76h9-2vwh-w278</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-76h9-2vwh-w278</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2024-12-25T12:30:45.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.apache.mina:mina-core] Apache MINA Deserialization RCE Vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-76h9-2vwh-w278</id>
        <link href="https://github.com/advisories/GHSA-76h9-2vwh-w278"/>
        <updated>2024-12-26T17:02:48.000Z</updated>
        <content type="html"><![CDATA[<p>The <code>ObjectSerializationDecoder</code> in Apache MINA uses Java’s native deserialization protocol to process incoming serialized data but lacks the necessary security checks and defenses. This vulnerability allows attackers to exploit the deserialization process by sending specially crafted malicious serialized data, potentially leading to remote code execution (RCE) attacks.</p>
<p>This issue affects MINA core versions 2.0.X, 2.1.X and 2.2.X, and will be fixed by the releases 2.0.27, 2.1.10 and 2.2.4.</p>
<p>It's also important to note that an application using MINA core library will only be affected if the IoBuffer#getObject() method is called, and this specific method is potentially called when adding a ProtocolCodecFilter instance using the <code>ObjectSerializationCodecFactory</code> class in the filter chain. If your application is specifically using those classes, you have to upgrade to the latest version of MINA core library.</p>
<p>Upgrading will&nbsp; not be enough: you also need to explicitly allow the classes the decoder will accept in the ObjectSerializationDecoder instance, using one of the three new methods:</p>
<p>1. 
&nbsp; &nbsp;&nbsp; * Accept class names where the supplied ClassNameMatcher matches for deserialization, unless they are otherwise rejected.
     * <code>@param classNameMatcher</code> the matcher to use
     * / <code>public void accept(ClassNameMatcher classNameMatcher)</code></p>
<p>2. 
     * Accept class names that match the supplied pattern for deserialization, unless they are otherwise rejected.
     * <code>@param</code> pattern standard Java regexp
     * / <code>public void accept(Pattern pattern)</code></p>
<ol start="3">
<li><ul>
<li>Accept the wildcard specified classes for deserialization, unless they are otherwise rejected.</li>
<li><code>@param</code> patterns Wildcard file name patterns as defined by <code>{@link org.apache.commons.io.FilenameUtils#wildcardMatch(String, String) FilenameUtils.wildcardMatch}</code></li>
<li>/ <code>public void accept(String... patterns)</code></li>
</ul>
</li>
</ol>
<p>By default, the decoder will reject <em>all</em> classes that will be present in the incoming data.</p>
<p>Note: The FtpServer, SSHd and Vysper sub-project are not affected by this issue.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-52046">https://nvd.nist.gov/vuln/detail/CVE-2024-52046</a></li>
<li><a href="https://lists.apache.org/thread/4wxktgjpggdbto15d515wdctohb0qmv8">https://lists.apache.org/thread/4wxktgjpggdbto15d515wdctohb0qmv8</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2024/12/25/1">http://www.openwall.com/lists/oss-security/2024/12/25/1</a></li>
<li><a href="https://github.com/advisories/GHSA-76h9-2vwh-w278">https://github.com/advisories/GHSA-76h9-2vwh-w278</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-76h9-2vwh-w278</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2024-12-25T12:30:45.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.apache.mina:mina-core] Apache MINA Deserialization RCE Vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-76h9-2vwh-w278</id>
        <link href="https://github.com/advisories/GHSA-76h9-2vwh-w278"/>
        <updated>2024-12-26T17:02:48.000Z</updated>
        <content type="html"><![CDATA[<p>The <code>ObjectSerializationDecoder</code> in Apache MINA uses Java’s native deserialization protocol to process incoming serialized data but lacks the necessary security checks and defenses. This vulnerability allows attackers to exploit the deserialization process by sending specially crafted malicious serialized data, potentially leading to remote code execution (RCE) attacks.</p>
<p>This issue affects MINA core versions 2.0.X, 2.1.X and 2.2.X, and will be fixed by the releases 2.0.27, 2.1.10 and 2.2.4.</p>
<p>It's also important to note that an application using MINA core library will only be affected if the IoBuffer#getObject() method is called, and this specific method is potentially called when adding a ProtocolCodecFilter instance using the <code>ObjectSerializationCodecFactory</code> class in the filter chain. If your application is specifically using those classes, you have to upgrade to the latest version of MINA core library.</p>
<p>Upgrading will&nbsp; not be enough: you also need to explicitly allow the classes the decoder will accept in the ObjectSerializationDecoder instance, using one of the three new methods:</p>
<p>1. 
&nbsp; &nbsp;&nbsp; * Accept class names where the supplied ClassNameMatcher matches for deserialization, unless they are otherwise rejected.
     * <code>@param classNameMatcher</code> the matcher to use
     * / <code>public void accept(ClassNameMatcher classNameMatcher)</code></p>
<p>2. 
     * Accept class names that match the supplied pattern for deserialization, unless they are otherwise rejected.
     * <code>@param</code> pattern standard Java regexp
     * / <code>public void accept(Pattern pattern)</code></p>
<ol start="3">
<li><ul>
<li>Accept the wildcard specified classes for deserialization, unless they are otherwise rejected.</li>
<li><code>@param</code> patterns Wildcard file name patterns as defined by <code>{@link org.apache.commons.io.FilenameUtils#wildcardMatch(String, String) FilenameUtils.wildcardMatch}</code></li>
<li>/ <code>public void accept(String... patterns)</code></li>
</ul>
</li>
</ol>
<p>By default, the decoder will reject <em>all</em> classes that will be present in the incoming data.</p>
<p>Note: The FtpServer, SSHd and Vysper sub-project are not affected by this issue.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-52046">https://nvd.nist.gov/vuln/detail/CVE-2024-52046</a></li>
<li><a href="https://lists.apache.org/thread/4wxktgjpggdbto15d515wdctohb0qmv8">https://lists.apache.org/thread/4wxktgjpggdbto15d515wdctohb0qmv8</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2024/12/25/1">http://www.openwall.com/lists/oss-security/2024/12/25/1</a></li>
<li><a href="https://github.com/advisories/GHSA-76h9-2vwh-w278">https://github.com/advisories/GHSA-76h9-2vwh-w278</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-76h9-2vwh-w278</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2024-12-25T12:30:45.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.apache.tomcat.embed:tomcat-embed-core] Apache Tomcat Time-of-check Time-of-use (TOCTOU) Race Condition vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-5j33-cvvr-w245</id>
        <link href="https://github.com/advisories/GHSA-5j33-cvvr-w245"/>
        <updated>2024-12-26T15:29:26.000Z</updated>
        <content type="html"><![CDATA[<p>Time-of-check Time-of-use (TOCTOU) Race Condition vulnerability during JSP compilation in Apache Tomcat permits an RCE on case insensitive file systems when the default servlet is enabled for write (non-default configuration).</p>
<p>This issue affects Apache Tomcat: from 11.0.0-M1 through 11.0.1, from 10.1.0-M1 through 10.1.33, from 9.0.0.M1 through 9.0.97.</p>
<p>Users are recommended to upgrade to version 11.0.2, 10.1.34 or 9.0.98, which fixes the issue.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-50379">https://nvd.nist.gov/vuln/detail/CVE-2024-50379</a></li>
<li><a href="https://lists.apache.org/thread/y6lj6q1xnp822g6ro70tn19sgtjmr80r">https://lists.apache.org/thread/y6lj6q1xnp822g6ro70tn19sgtjmr80r</a></li>
<li><a href="https://github.com/apache/tomcat/commit/05ddeeaa54df1e2dc427d0164bedd6b79f78d81f">https://github.com/apache/tomcat/commit/05ddeeaa54df1e2dc427d0164bedd6b79f78d81f</a></li>
<li><a href="https://github.com/apache/tomcat/commit/43b507ebac9d268b1ea3d908e296cc6e46795c00">https://github.com/apache/tomcat/commit/43b507ebac9d268b1ea3d908e296cc6e46795c00</a></li>
<li><a href="https://github.com/apache/tomcat/commit/631500b0c9b2a2a2abb707e3de2e10a5936e5d41">https://github.com/apache/tomcat/commit/631500b0c9b2a2a2abb707e3de2e10a5936e5d41</a></li>
<li><a href="https://github.com/apache/tomcat/commit/684247ae85fa633b9197b32391de59fc54703842">https://github.com/apache/tomcat/commit/684247ae85fa633b9197b32391de59fc54703842</a></li>
<li><a href="https://github.com/apache/tomcat/commit/8554f6b1722b33a2ce8b0a3fad37825f3a75f2d2">https://github.com/apache/tomcat/commit/8554f6b1722b33a2ce8b0a3fad37825f3a75f2d2</a></li>
<li><a href="https://github.com/apache/tomcat/commit/cc7a98b57c6dc1df21979fcff94a36e068f4456c">https://github.com/apache/tomcat/commit/cc7a98b57c6dc1df21979fcff94a36e068f4456c</a></li>
<li><a href="https://tomcat.apache.org/security-10.html#Fixed_in_Apache_Tomcat_10.1.34">https://tomcat.apache.org/security-10.html#Fixed_in_Apache_Tomcat_10.1.34</a></li>
<li><a href="https://tomcat.apache.org/security-11.html#Fixed_in_Apache_Tomcat_11.0.2">https://tomcat.apache.org/security-11.html#Fixed_in_Apache_Tomcat_11.0.2</a></li>
<li><a href="https://tomcat.apache.org/security-9.html#Fixed_in_Apache_Tomcat_9.0.98">https://tomcat.apache.org/security-9.html#Fixed_in_Apache_Tomcat_9.0.98</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2024/12/17/4">http://www.openwall.com/lists/oss-security/2024/12/17/4</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2024/12/18/2">http://www.openwall.com/lists/oss-security/2024/12/18/2</a></li>
<li><a href="https://github.com/advisories/GHSA-5j33-cvvr-w245">https://github.com/advisories/GHSA-5j33-cvvr-w245</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-5j33-cvvr-w245</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-12-17T15:31:43.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.apache.tomcat.embed:tomcat-embed-core] Apache Tomcat Time-of-check Time-of-use (TOCTOU) Race Condition vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-5j33-cvvr-w245</id>
        <link href="https://github.com/advisories/GHSA-5j33-cvvr-w245"/>
        <updated>2024-12-26T15:29:26.000Z</updated>
        <content type="html"><![CDATA[<p>Time-of-check Time-of-use (TOCTOU) Race Condition vulnerability during JSP compilation in Apache Tomcat permits an RCE on case insensitive file systems when the default servlet is enabled for write (non-default configuration).</p>
<p>This issue affects Apache Tomcat: from 11.0.0-M1 through 11.0.1, from 10.1.0-M1 through 10.1.33, from 9.0.0.M1 through 9.0.97.</p>
<p>Users are recommended to upgrade to version 11.0.2, 10.1.34 or 9.0.98, which fixes the issue.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-50379">https://nvd.nist.gov/vuln/detail/CVE-2024-50379</a></li>
<li><a href="https://lists.apache.org/thread/y6lj6q1xnp822g6ro70tn19sgtjmr80r">https://lists.apache.org/thread/y6lj6q1xnp822g6ro70tn19sgtjmr80r</a></li>
<li><a href="https://github.com/apache/tomcat/commit/05ddeeaa54df1e2dc427d0164bedd6b79f78d81f">https://github.com/apache/tomcat/commit/05ddeeaa54df1e2dc427d0164bedd6b79f78d81f</a></li>
<li><a href="https://github.com/apache/tomcat/commit/43b507ebac9d268b1ea3d908e296cc6e46795c00">https://github.com/apache/tomcat/commit/43b507ebac9d268b1ea3d908e296cc6e46795c00</a></li>
<li><a href="https://github.com/apache/tomcat/commit/631500b0c9b2a2a2abb707e3de2e10a5936e5d41">https://github.com/apache/tomcat/commit/631500b0c9b2a2a2abb707e3de2e10a5936e5d41</a></li>
<li><a href="https://github.com/apache/tomcat/commit/684247ae85fa633b9197b32391de59fc54703842">https://github.com/apache/tomcat/commit/684247ae85fa633b9197b32391de59fc54703842</a></li>
<li><a href="https://github.com/apache/tomcat/commit/8554f6b1722b33a2ce8b0a3fad37825f3a75f2d2">https://github.com/apache/tomcat/commit/8554f6b1722b33a2ce8b0a3fad37825f3a75f2d2</a></li>
<li><a href="https://github.com/apache/tomcat/commit/cc7a98b57c6dc1df21979fcff94a36e068f4456c">https://github.com/apache/tomcat/commit/cc7a98b57c6dc1df21979fcff94a36e068f4456c</a></li>
<li><a href="https://tomcat.apache.org/security-10.html#Fixed_in_Apache_Tomcat_10.1.34">https://tomcat.apache.org/security-10.html#Fixed_in_Apache_Tomcat_10.1.34</a></li>
<li><a href="https://tomcat.apache.org/security-11.html#Fixed_in_Apache_Tomcat_11.0.2">https://tomcat.apache.org/security-11.html#Fixed_in_Apache_Tomcat_11.0.2</a></li>
<li><a href="https://tomcat.apache.org/security-9.html#Fixed_in_Apache_Tomcat_9.0.98">https://tomcat.apache.org/security-9.html#Fixed_in_Apache_Tomcat_9.0.98</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2024/12/17/4">http://www.openwall.com/lists/oss-security/2024/12/17/4</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2024/12/18/2">http://www.openwall.com/lists/oss-security/2024/12/18/2</a></li>
<li><a href="https://github.com/advisories/GHSA-5j33-cvvr-w245">https://github.com/advisories/GHSA-5j33-cvvr-w245</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-5j33-cvvr-w245</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-12-17T15:31:43.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.apache.tomcat.embed:tomcat-embed-core] Apache Tomcat Time-of-check Time-of-use (TOCTOU) Race Condition vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-5j33-cvvr-w245</id>
        <link href="https://github.com/advisories/GHSA-5j33-cvvr-w245"/>
        <updated>2024-12-26T15:29:26.000Z</updated>
        <content type="html"><![CDATA[<p>Time-of-check Time-of-use (TOCTOU) Race Condition vulnerability during JSP compilation in Apache Tomcat permits an RCE on case insensitive file systems when the default servlet is enabled for write (non-default configuration).</p>
<p>This issue affects Apache Tomcat: from 11.0.0-M1 through 11.0.1, from 10.1.0-M1 through 10.1.33, from 9.0.0.M1 through 9.0.97.</p>
<p>Users are recommended to upgrade to version 11.0.2, 10.1.34 or 9.0.98, which fixes the issue.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-50379">https://nvd.nist.gov/vuln/detail/CVE-2024-50379</a></li>
<li><a href="https://lists.apache.org/thread/y6lj6q1xnp822g6ro70tn19sgtjmr80r">https://lists.apache.org/thread/y6lj6q1xnp822g6ro70tn19sgtjmr80r</a></li>
<li><a href="https://github.com/apache/tomcat/commit/05ddeeaa54df1e2dc427d0164bedd6b79f78d81f">https://github.com/apache/tomcat/commit/05ddeeaa54df1e2dc427d0164bedd6b79f78d81f</a></li>
<li><a href="https://github.com/apache/tomcat/commit/43b507ebac9d268b1ea3d908e296cc6e46795c00">https://github.com/apache/tomcat/commit/43b507ebac9d268b1ea3d908e296cc6e46795c00</a></li>
<li><a href="https://github.com/apache/tomcat/commit/631500b0c9b2a2a2abb707e3de2e10a5936e5d41">https://github.com/apache/tomcat/commit/631500b0c9b2a2a2abb707e3de2e10a5936e5d41</a></li>
<li><a href="https://github.com/apache/tomcat/commit/684247ae85fa633b9197b32391de59fc54703842">https://github.com/apache/tomcat/commit/684247ae85fa633b9197b32391de59fc54703842</a></li>
<li><a href="https://github.com/apache/tomcat/commit/8554f6b1722b33a2ce8b0a3fad37825f3a75f2d2">https://github.com/apache/tomcat/commit/8554f6b1722b33a2ce8b0a3fad37825f3a75f2d2</a></li>
<li><a href="https://github.com/apache/tomcat/commit/cc7a98b57c6dc1df21979fcff94a36e068f4456c">https://github.com/apache/tomcat/commit/cc7a98b57c6dc1df21979fcff94a36e068f4456c</a></li>
<li><a href="https://tomcat.apache.org/security-10.html#Fixed_in_Apache_Tomcat_10.1.34">https://tomcat.apache.org/security-10.html#Fixed_in_Apache_Tomcat_10.1.34</a></li>
<li><a href="https://tomcat.apache.org/security-11.html#Fixed_in_Apache_Tomcat_11.0.2">https://tomcat.apache.org/security-11.html#Fixed_in_Apache_Tomcat_11.0.2</a></li>
<li><a href="https://tomcat.apache.org/security-9.html#Fixed_in_Apache_Tomcat_9.0.98">https://tomcat.apache.org/security-9.html#Fixed_in_Apache_Tomcat_9.0.98</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2024/12/17/4">http://www.openwall.com/lists/oss-security/2024/12/17/4</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2024/12/18/2">http://www.openwall.com/lists/oss-security/2024/12/18/2</a></li>
<li><a href="https://github.com/advisories/GHSA-5j33-cvvr-w245">https://github.com/advisories/GHSA-5j33-cvvr-w245</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-5j33-cvvr-w245</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-12-17T15:31:43.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.apache.spark:spark-hive-thriftserver_2.12] Apache Hive and Spark: CookieSigner exposes the correct signature when message verification fails]]></title>
        <id>https://github.com/advisories/GHSA-77pm-w3hx-f8mj</id>
        <link href="https://github.com/advisories/GHSA-77pm-w3hx-f8mj"/>
        <updated>2024-12-26T20:09:21.000Z</updated>
        <content type="html"><![CDATA[<p>Signing cookies is an application security feature that adds a digital signature to cookie data to verify its authenticity and integrity. The signature helps prevent malicious actors from modifying the cookie value, which can lead to security vulnerabilities and exploitation. Apache Hive’s service component accidentally exposes the signed cookie to the end user when there is a mismatch in signature between the current and expected cookie. Exposing the correct cookie signature can lead to further exploitation.</p>
<p>The vulnerable CookieSigner logic was introduced in Apache Hive by&nbsp;HIVE-9710 (1.2.0) and in Apache Spark by SPARK-14987 (2.0.0). The affected components are the following:</p>
<ul>
<li>org.apache.hive:hive-service</li>
<li>org.apache.spark:spark-hive-thriftserver_2.11</li>
<li>org.apache.spark:spark-hive-thriftserver_2.12</li>
</ul>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-23945">https://nvd.nist.gov/vuln/detail/CVE-2024-23945</a></li>
<li><a href="https://github.com/apache/hive/commit/7638cb1a3b07713cc490aa2909a37037f89e08b4">https://github.com/apache/hive/commit/7638cb1a3b07713cc490aa2909a37037f89e08b4</a></li>
<li><a href="https://github.com/apache/spark/commit/cf59b1f51c16301f689b4e0f17ba4dbd140e1b19">https://github.com/apache/spark/commit/cf59b1f51c16301f689b4e0f17ba4dbd140e1b19</a></li>
<li><a href="https://github.com/apache/hive">https://github.com/apache/hive</a></li>
<li><a href="https://github.com/apache/spark">https://github.com/apache/spark</a></li>
<li><a href="https://issues.apache.org/jira/browse/HIVE-9710">https://issues.apache.org/jira/browse/HIVE-9710</a></li>
<li><a href="https://issues.apache.org/jira/browse/SPARK-14987">https://issues.apache.org/jira/browse/SPARK-14987</a></li>
<li><a href="https://lists.apache.org/thread/59r4mv7glrxpwkkdjvjbdljfpx3f5zzc">https://lists.apache.org/thread/59r4mv7glrxpwkkdjvjbdljfpx3f5zzc</a></li>
<li><a href="https://lists.apache.org/thread/5o2ljnzrv8zvhjw9vy7b4rwjpc32hgfc">https://lists.apache.org/thread/5o2ljnzrv8zvhjw9vy7b4rwjpc32hgfc</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2024/12/23/2">http://www.openwall.com/lists/oss-security/2024/12/23/2</a></li>
<li><a href="https://github.com/advisories/GHSA-77pm-w3hx-f8mj">https://github.com/advisories/GHSA-77pm-w3hx-f8mj</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-77pm-w3hx-f8mj</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-12-23T18:30:47.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.apache.spark:spark-hive-thriftserver_2.11] Apache Hive and Spark: CookieSigner exposes the correct signature when message verification fails]]></title>
        <id>https://github.com/advisories/GHSA-77pm-w3hx-f8mj</id>
        <link href="https://github.com/advisories/GHSA-77pm-w3hx-f8mj"/>
        <updated>2024-12-26T20:09:21.000Z</updated>
        <content type="html"><![CDATA[<p>Signing cookies is an application security feature that adds a digital signature to cookie data to verify its authenticity and integrity. The signature helps prevent malicious actors from modifying the cookie value, which can lead to security vulnerabilities and exploitation. Apache Hive’s service component accidentally exposes the signed cookie to the end user when there is a mismatch in signature between the current and expected cookie. Exposing the correct cookie signature can lead to further exploitation.</p>
<p>The vulnerable CookieSigner logic was introduced in Apache Hive by&nbsp;HIVE-9710 (1.2.0) and in Apache Spark by SPARK-14987 (2.0.0). The affected components are the following:</p>
<ul>
<li>org.apache.hive:hive-service</li>
<li>org.apache.spark:spark-hive-thriftserver_2.11</li>
<li>org.apache.spark:spark-hive-thriftserver_2.12</li>
</ul>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-23945">https://nvd.nist.gov/vuln/detail/CVE-2024-23945</a></li>
<li><a href="https://github.com/apache/hive/commit/7638cb1a3b07713cc490aa2909a37037f89e08b4">https://github.com/apache/hive/commit/7638cb1a3b07713cc490aa2909a37037f89e08b4</a></li>
<li><a href="https://github.com/apache/spark/commit/cf59b1f51c16301f689b4e0f17ba4dbd140e1b19">https://github.com/apache/spark/commit/cf59b1f51c16301f689b4e0f17ba4dbd140e1b19</a></li>
<li><a href="https://github.com/apache/hive">https://github.com/apache/hive</a></li>
<li><a href="https://github.com/apache/spark">https://github.com/apache/spark</a></li>
<li><a href="https://issues.apache.org/jira/browse/HIVE-9710">https://issues.apache.org/jira/browse/HIVE-9710</a></li>
<li><a href="https://issues.apache.org/jira/browse/SPARK-14987">https://issues.apache.org/jira/browse/SPARK-14987</a></li>
<li><a href="https://lists.apache.org/thread/59r4mv7glrxpwkkdjvjbdljfpx3f5zzc">https://lists.apache.org/thread/59r4mv7glrxpwkkdjvjbdljfpx3f5zzc</a></li>
<li><a href="https://lists.apache.org/thread/5o2ljnzrv8zvhjw9vy7b4rwjpc32hgfc">https://lists.apache.org/thread/5o2ljnzrv8zvhjw9vy7b4rwjpc32hgfc</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2024/12/23/2">http://www.openwall.com/lists/oss-security/2024/12/23/2</a></li>
<li><a href="https://github.com/advisories/GHSA-77pm-w3hx-f8mj">https://github.com/advisories/GHSA-77pm-w3hx-f8mj</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-77pm-w3hx-f8mj</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-12-23T18:30:47.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.apache.hive:hive-service] Apache Hive and Spark: CookieSigner exposes the correct signature when message verification fails]]></title>
        <id>https://github.com/advisories/GHSA-77pm-w3hx-f8mj</id>
        <link href="https://github.com/advisories/GHSA-77pm-w3hx-f8mj"/>
        <updated>2024-12-26T20:09:21.000Z</updated>
        <content type="html"><![CDATA[<p>Signing cookies is an application security feature that adds a digital signature to cookie data to verify its authenticity and integrity. The signature helps prevent malicious actors from modifying the cookie value, which can lead to security vulnerabilities and exploitation. Apache Hive’s service component accidentally exposes the signed cookie to the end user when there is a mismatch in signature between the current and expected cookie. Exposing the correct cookie signature can lead to further exploitation.</p>
<p>The vulnerable CookieSigner logic was introduced in Apache Hive by&nbsp;HIVE-9710 (1.2.0) and in Apache Spark by SPARK-14987 (2.0.0). The affected components are the following:</p>
<ul>
<li>org.apache.hive:hive-service</li>
<li>org.apache.spark:spark-hive-thriftserver_2.11</li>
<li>org.apache.spark:spark-hive-thriftserver_2.12</li>
</ul>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-23945">https://nvd.nist.gov/vuln/detail/CVE-2024-23945</a></li>
<li><a href="https://github.com/apache/hive/commit/7638cb1a3b07713cc490aa2909a37037f89e08b4">https://github.com/apache/hive/commit/7638cb1a3b07713cc490aa2909a37037f89e08b4</a></li>
<li><a href="https://github.com/apache/spark/commit/cf59b1f51c16301f689b4e0f17ba4dbd140e1b19">https://github.com/apache/spark/commit/cf59b1f51c16301f689b4e0f17ba4dbd140e1b19</a></li>
<li><a href="https://github.com/apache/hive">https://github.com/apache/hive</a></li>
<li><a href="https://github.com/apache/spark">https://github.com/apache/spark</a></li>
<li><a href="https://issues.apache.org/jira/browse/HIVE-9710">https://issues.apache.org/jira/browse/HIVE-9710</a></li>
<li><a href="https://issues.apache.org/jira/browse/SPARK-14987">https://issues.apache.org/jira/browse/SPARK-14987</a></li>
<li><a href="https://lists.apache.org/thread/59r4mv7glrxpwkkdjvjbdljfpx3f5zzc">https://lists.apache.org/thread/59r4mv7glrxpwkkdjvjbdljfpx3f5zzc</a></li>
<li><a href="https://lists.apache.org/thread/5o2ljnzrv8zvhjw9vy7b4rwjpc32hgfc">https://lists.apache.org/thread/5o2ljnzrv8zvhjw9vy7b4rwjpc32hgfc</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2024/12/23/2">http://www.openwall.com/lists/oss-security/2024/12/23/2</a></li>
<li><a href="https://github.com/advisories/GHSA-77pm-w3hx-f8mj">https://github.com/advisories/GHSA-77pm-w3hx-f8mj</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-77pm-w3hx-f8mj</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-12-23T18:30:47.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.jboss.hal:hal-console] Cross Site Scripting (XSS) vulnerability while uploading content to a new deployment]]></title>
        <id>https://github.com/advisories/GHSA-64gp-r758-8pfm</id>
        <link href="https://github.com/advisories/GHSA-64gp-r758-8pfm"/>
        <updated>2024-12-23T20:15:17.000Z</updated>
        <content type="html"><![CDATA[<p>A vulnerability was found in the WildFly management console. A user may perform cross-site scripting in the deployment system. An attacker (or insider) may execute a malicious payload which could trigger an undesired behavior against the server.</p>
<h3 id="impact">Impact</h3>
<p>Cross-site scripting (XSS) vulnerability in the management console.</p>
<h3 id="patches">Patches</h3>
<p>Fixed in <a href="https://github.com/hal/console/releases/tag/v3.7.7">HAL 3.7.7.Final</a> </p>
<h3 id="workarounds">Workarounds</h3>
<p>No workaround available</p>
<h3 id="references">References</h3>
<p>See also: <a href="https://issues.redhat.com/browse/WFLY-19969">https://issues.redhat.com/browse/WFLY-19969</a></p>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/hal/console/security/advisories/GHSA-64gp-r758-8pfm">https://github.com/hal/console/security/advisories/GHSA-64gp-r758-8pfm</a></li>
<li><a href="https://github.com/hal/console/releases/tag/v3.7.7">https://github.com/hal/console/releases/tag/v3.7.7</a></li>
<li><a href="https://issues.redhat.com/browse/WFLY-19969">https://issues.redhat.com/browse/WFLY-19969</a></li>
<li><a href="https://github.com/advisories/GHSA-64gp-r758-8pfm">https://github.com/advisories/GHSA-64gp-r758-8pfm</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-64gp-r758-8pfm</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-12-23T20:15:16.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.verapdf:verapdf-library-arlington] veraPDF CLI has potential XXE (XML External Entity Injection) vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-4cx5-89vm-833x</id>
        <link href="https://github.com/advisories/GHSA-4cx5-89vm-833x"/>
        <updated>2024-12-23T17:13:28.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>Executing policy checks using custom schematron files via the CLI invokes an XSL transformation that may theoretically lead to a remote code execution (RCE) vulnerability.</p>
<h3 id="patches">Patches</h3>
<p>We are currently working on a patch that will be released when ready.</p>
<h3 id="workarounds">Workarounds</h3>
<p>This doesn't affect the standard validation and policy checks functionality, veraPDF's common use cases. Most veraPDF users don't insert any custom XSLT code into policy profiles, which are based on Schematron syntax rather than direct XSL transforms. For users who do, only load custom policy files from sources you trust.</p>
<h3 id="references">References</h3>
<p>Original issue: #1488</p>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/veraPDF/veraPDF-library/security/advisories/GHSA-4cx5-89vm-833x">https://github.com/veraPDF/veraPDF-library/security/advisories/GHSA-4cx5-89vm-833x</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-52800">https://nvd.nist.gov/vuln/detail/CVE-2024-52800</a></li>
<li><a href="https://github.com/veraPDF/veraPDF-library/issues/1488">https://github.com/veraPDF/veraPDF-library/issues/1488</a></li>
<li><a href="https://github.com/advisories/GHSA-4cx5-89vm-833x">https://github.com/advisories/GHSA-4cx5-89vm-833x</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-4cx5-89vm-833x</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2024-12-02T17:15:24.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.verapdf:verapdf-library-jakarta] veraPDF CLI has potential XXE (XML External Entity Injection) vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-4cx5-89vm-833x</id>
        <link href="https://github.com/advisories/GHSA-4cx5-89vm-833x"/>
        <updated>2024-12-23T17:13:28.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>Executing policy checks using custom schematron files via the CLI invokes an XSL transformation that may theoretically lead to a remote code execution (RCE) vulnerability.</p>
<h3 id="patches">Patches</h3>
<p>We are currently working on a patch that will be released when ready.</p>
<h3 id="workarounds">Workarounds</h3>
<p>This doesn't affect the standard validation and policy checks functionality, veraPDF's common use cases. Most veraPDF users don't insert any custom XSLT code into policy profiles, which are based on Schematron syntax rather than direct XSL transforms. For users who do, only load custom policy files from sources you trust.</p>
<h3 id="references">References</h3>
<p>Original issue: #1488</p>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/veraPDF/veraPDF-library/security/advisories/GHSA-4cx5-89vm-833x">https://github.com/veraPDF/veraPDF-library/security/advisories/GHSA-4cx5-89vm-833x</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-52800">https://nvd.nist.gov/vuln/detail/CVE-2024-52800</a></li>
<li><a href="https://github.com/veraPDF/veraPDF-library/issues/1488">https://github.com/veraPDF/veraPDF-library/issues/1488</a></li>
<li><a href="https://github.com/advisories/GHSA-4cx5-89vm-833x">https://github.com/advisories/GHSA-4cx5-89vm-833x</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-4cx5-89vm-833x</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2024-12-02T17:15:24.000Z</published>
    </entry>
</feed>