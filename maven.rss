<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://azu.github.io/github-advisory-database-rss/maven.rss</id>
    <title>Security Advisory for Java artifacts hosted at the Maven central repository</title>
    <updated>2025-05-07T22:01:23.505Z</updated>
    <generator>github-advisory-database-rss</generator>
    <link rel="alternate" href="https://github.com/advisories?query=type%3Areviewed+ecosystem%3Amaven"/>
    <subtitle>Security Advisory for Java artifacts hosted at the Maven central repository on GitHub</subtitle>
    <rights>github-advisory-database-rss</rights>
    <category term="CRITICAL"/>
    <category term="HIGH"/>
    <category term="MODERATE"/>
    <category term="LOW"/>
    <entry>
        <title type="html"><![CDATA[[org.jruby:jruby] JRuby-OpenSSL has hostname verification disabled by default]]></title>
        <id>https://github.com/advisories/GHSA-72qj-48g4-5xgx</id>
        <link href="https://github.com/advisories/GHSA-72qj-48g4-5xgx"/>
        <updated>2025-05-07T19:08:56.000Z</updated>
        <content type="html"><![CDATA[<h3 id="summary">Summary</h3>
<p>When verifying SSL certificates, jruby-openssl is not verifying that the hostname presented in the certificate matches the one we are trying to connect to, meaning a MITM could just present <em>any</em> valid cert for a completely different domain they own, and JRuby wouldn't complain. </p>
<h3 id="details">Details</h3>
<p>n/a</p>
<h3 id="poc">PoC</h3>
<p>An example domain bad.substitutealert.com was created to present the a certificate for the domain s8a.me. The following script run in IRB in CRuby 3.4.3 will fail with <code>certificate verify failed (hostname mismatch)</code>, but will work just fine in JRuby 10.0.0.0 and JRuby 9.4.2.0, both of which use jruby-openssl version 0.15.3</p>
<pre><code class="language-ruby">require "net/http"
require "openssl"

uri   = URI("https://bad.substitutealert.com/")
https = Net::HTTP.new(uri.host, uri.port)
https.use_ssl      = true
https.verify_mode  = OpenSSL::SSL::VERIFY_PEER

body = https.start { https.get(uri.request_uri).body }
puts body
</code></pre>
<h3 id="impact">Impact</h3>
<p>Anybody using JRuby to make requests of external APIs, or scraping the web, that depends on https to connect securely</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/jruby/jruby-openssl/security/advisories/GHSA-72qj-48g4-5xgx">https://github.com/jruby/jruby-openssl/security/advisories/GHSA-72qj-48g4-5xgx</a></li>
<li><a href="https://github.com/jruby/jruby-openssl/commit/b1fc5d645c0d90891b8865925ac1c15e3f15a055">https://github.com/jruby/jruby-openssl/commit/b1fc5d645c0d90891b8865925ac1c15e3f15a055</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2025-46551">https://nvd.nist.gov/vuln/detail/CVE-2025-46551</a></li>
<li><a href="https://github.com/jruby/jruby-openssl/commit/31a56d690ce9b8af47af09aaaf809081949ed285">https://github.com/jruby/jruby-openssl/commit/31a56d690ce9b8af47af09aaaf809081949ed285</a></li>
<li><a href="https://github.com/advisories/GHSA-72qj-48g4-5xgx">https://github.com/advisories/GHSA-72qj-48g4-5xgx</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-72qj-48g4-5xgx</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2025-05-07T17:32:54.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.jruby:jruby] JRuby-OpenSSL has hostname verification disabled by default]]></title>
        <id>https://github.com/advisories/GHSA-72qj-48g4-5xgx</id>
        <link href="https://github.com/advisories/GHSA-72qj-48g4-5xgx"/>
        <updated>2025-05-07T19:08:56.000Z</updated>
        <content type="html"><![CDATA[<h3 id="summary">Summary</h3>
<p>When verifying SSL certificates, jruby-openssl is not verifying that the hostname presented in the certificate matches the one we are trying to connect to, meaning a MITM could just present <em>any</em> valid cert for a completely different domain they own, and JRuby wouldn't complain. </p>
<h3 id="details">Details</h3>
<p>n/a</p>
<h3 id="poc">PoC</h3>
<p>An example domain bad.substitutealert.com was created to present the a certificate for the domain s8a.me. The following script run in IRB in CRuby 3.4.3 will fail with <code>certificate verify failed (hostname mismatch)</code>, but will work just fine in JRuby 10.0.0.0 and JRuby 9.4.2.0, both of which use jruby-openssl version 0.15.3</p>
<pre><code class="language-ruby">require "net/http"
require "openssl"

uri   = URI("https://bad.substitutealert.com/")
https = Net::HTTP.new(uri.host, uri.port)
https.use_ssl      = true
https.verify_mode  = OpenSSL::SSL::VERIFY_PEER

body = https.start { https.get(uri.request_uri).body }
puts body
</code></pre>
<h3 id="impact">Impact</h3>
<p>Anybody using JRuby to make requests of external APIs, or scraping the web, that depends on https to connect securely</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/jruby/jruby-openssl/security/advisories/GHSA-72qj-48g4-5xgx">https://github.com/jruby/jruby-openssl/security/advisories/GHSA-72qj-48g4-5xgx</a></li>
<li><a href="https://github.com/jruby/jruby-openssl/commit/b1fc5d645c0d90891b8865925ac1c15e3f15a055">https://github.com/jruby/jruby-openssl/commit/b1fc5d645c0d90891b8865925ac1c15e3f15a055</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2025-46551">https://nvd.nist.gov/vuln/detail/CVE-2025-46551</a></li>
<li><a href="https://github.com/jruby/jruby-openssl/commit/31a56d690ce9b8af47af09aaaf809081949ed285">https://github.com/jruby/jruby-openssl/commit/31a56d690ce9b8af47af09aaaf809081949ed285</a></li>
<li><a href="https://github.com/advisories/GHSA-72qj-48g4-5xgx">https://github.com/advisories/GHSA-72qj-48g4-5xgx</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-72qj-48g4-5xgx</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2025-05-07T17:32:54.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[rubygems:jruby-openssl] JRuby-OpenSSL has hostname verification disabled by default]]></title>
        <id>https://github.com/advisories/GHSA-72qj-48g4-5xgx</id>
        <link href="https://github.com/advisories/GHSA-72qj-48g4-5xgx"/>
        <updated>2025-05-07T19:08:56.000Z</updated>
        <content type="html"><![CDATA[<h3 id="summary">Summary</h3>
<p>When verifying SSL certificates, jruby-openssl is not verifying that the hostname presented in the certificate matches the one we are trying to connect to, meaning a MITM could just present <em>any</em> valid cert for a completely different domain they own, and JRuby wouldn't complain. </p>
<h3 id="details">Details</h3>
<p>n/a</p>
<h3 id="poc">PoC</h3>
<p>An example domain bad.substitutealert.com was created to present the a certificate for the domain s8a.me. The following script run in IRB in CRuby 3.4.3 will fail with <code>certificate verify failed (hostname mismatch)</code>, but will work just fine in JRuby 10.0.0.0 and JRuby 9.4.2.0, both of which use jruby-openssl version 0.15.3</p>
<pre><code class="language-ruby">require "net/http"
require "openssl"

uri   = URI("https://bad.substitutealert.com/")
https = Net::HTTP.new(uri.host, uri.port)
https.use_ssl      = true
https.verify_mode  = OpenSSL::SSL::VERIFY_PEER

body = https.start { https.get(uri.request_uri).body }
puts body
</code></pre>
<h3 id="impact">Impact</h3>
<p>Anybody using JRuby to make requests of external APIs, or scraping the web, that depends on https to connect securely</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/jruby/jruby-openssl/security/advisories/GHSA-72qj-48g4-5xgx">https://github.com/jruby/jruby-openssl/security/advisories/GHSA-72qj-48g4-5xgx</a></li>
<li><a href="https://github.com/jruby/jruby-openssl/commit/b1fc5d645c0d90891b8865925ac1c15e3f15a055">https://github.com/jruby/jruby-openssl/commit/b1fc5d645c0d90891b8865925ac1c15e3f15a055</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2025-46551">https://nvd.nist.gov/vuln/detail/CVE-2025-46551</a></li>
<li><a href="https://github.com/jruby/jruby-openssl/commit/31a56d690ce9b8af47af09aaaf809081949ed285">https://github.com/jruby/jruby-openssl/commit/31a56d690ce9b8af47af09aaaf809081949ed285</a></li>
<li><a href="https://github.com/advisories/GHSA-72qj-48g4-5xgx">https://github.com/advisories/GHSA-72qj-48g4-5xgx</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-72qj-48g4-5xgx</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2025-05-07T17:32:54.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.graylog2:graylog2-server] Graylog Allows Session Takeover via Insufficient HTML Sanitization]]></title>
        <id>https://github.com/advisories/GHSA-76vf-mpmx-777j</id>
        <link href="https://github.com/advisories/GHSA-76vf-mpmx-777j"/>
        <updated>2025-05-07T19:08:56.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>It is possible to obtain user session cookies by submitting an HTML form as part of an Event Definition Remediation Step field. 
For this attack to succeed, the attacker needs a user account with permissions to create event definitions, while the user must have permissions to view alerts. Additionally, an active Input must be present on the Graylog server that is capable of receiving form data (e.g. a HTTP input, TCP raw or syslog etc).</p>
<h3 id="patches">Patches</h3>
<h3 id="workarounds">Workarounds</h3>
<p>None, as long as the relatively rare prerequisites are met.</p>
<p>Analysis provided by Fabian Yamaguchi - Whirly Labs (Pty) Ltd</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/Graylog2/graylog2-server/security/advisories/GHSA-76vf-mpmx-777j">https://github.com/Graylog2/graylog2-server/security/advisories/GHSA-76vf-mpmx-777j</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2025-46827">https://nvd.nist.gov/vuln/detail/CVE-2025-46827</a></li>
<li><a href="https://github.com/advisories/GHSA-76vf-mpmx-777j">https://github.com/advisories/GHSA-76vf-mpmx-777j</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-76vf-mpmx-777j</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2025-05-07T15:27:24.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.graylog2:graylog2-server] Graylog Allows Session Takeover via Insufficient HTML Sanitization]]></title>
        <id>https://github.com/advisories/GHSA-76vf-mpmx-777j</id>
        <link href="https://github.com/advisories/GHSA-76vf-mpmx-777j"/>
        <updated>2025-05-07T19:08:56.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>It is possible to obtain user session cookies by submitting an HTML form as part of an Event Definition Remediation Step field. 
For this attack to succeed, the attacker needs a user account with permissions to create event definitions, while the user must have permissions to view alerts. Additionally, an active Input must be present on the Graylog server that is capable of receiving form data (e.g. a HTTP input, TCP raw or syslog etc).</p>
<h3 id="patches">Patches</h3>
<h3 id="workarounds">Workarounds</h3>
<p>None, as long as the relatively rare prerequisites are met.</p>
<p>Analysis provided by Fabian Yamaguchi - Whirly Labs (Pty) Ltd</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/Graylog2/graylog2-server/security/advisories/GHSA-76vf-mpmx-777j">https://github.com/Graylog2/graylog2-server/security/advisories/GHSA-76vf-mpmx-777j</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2025-46827">https://nvd.nist.gov/vuln/detail/CVE-2025-46827</a></li>
<li><a href="https://github.com/advisories/GHSA-76vf-mpmx-777j">https://github.com/advisories/GHSA-76vf-mpmx-777j</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-76vf-mpmx-777j</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2025-05-07T15:27:24.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.graylog2:graylog2-server] Graylog Allows Stored Cross-Site Scripting via Files Plugin and API Browser]]></title>
        <id>https://github.com/advisories/GHSA-q9q2-3ppx-mwqf</id>
        <link href="https://github.com/advisories/GHSA-q9q2-3ppx-mwqf"/>
        <updated>2025-05-07T15:27:06.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>Two minor vulnerabilities were identified in the Graylog2 enterprise server, which can be combined to carry out a stored cross-site scripting attack.
An attacker with the permission <code>FILES_CREATE</code> can exploit these vulnerabilities to upload arbitrary Javascript code to the Graylog2 server, which - upon requesting of the file by a user of the API browser - results in the execution of this Javascript code in the context of the Graylog frontend application. 
This enables the attacker to carry out authenticated API requests with the permissions of the logged-in user, thereby taking over the user session.</p>
<h3 id="patches">Patches</h3>
<p>The generic API has been removed in 6.2.0 rendering the attack vector unreachable and additional escaping has been added.</p>
<p>Analysis provided by Fabian Yamaguchi - Whirly Labs (Pty) Ltd</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/Graylog2/graylog2-server/security/advisories/GHSA-q9q2-3ppx-mwqf">https://github.com/Graylog2/graylog2-server/security/advisories/GHSA-q9q2-3ppx-mwqf</a></li>
<li><a href="https://github.com/advisories/GHSA-q9q2-3ppx-mwqf">https://github.com/advisories/GHSA-q9q2-3ppx-mwqf</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-q9q2-3ppx-mwqf</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2025-05-07T15:27:04.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.apache.activemq:activemq-client] Apache ActiveMQ: Unchecked buffer length can cause excessive memory allocation]]></title>
        <id>https://github.com/advisories/GHSA-whxr-3p84-rf3c</id>
        <link href="https://github.com/advisories/GHSA-whxr-3p84-rf3c"/>
        <updated>2025-05-07T15:25:43.000Z</updated>
        <content type="html"><![CDATA[<p>Memory Allocation with Excessive Size Value vulnerability in Apache ActiveMQ.</p>
<p>During unmarshalling of OpenWire commands the size value of buffers was not properly validated which could lead to excessive memory allocation and be exploited to cause a denial of service (DoS) by depleting process memory, thereby affecting applications and services that rely on the availability of the ActiveMQ broker when not using mutual TLS connections.
This issue affects Apache ActiveMQ: from 6.0.0 before 6.1.6, from 5.18.0 before 5.18.7, from 5.17.0 before 5.17.7, before 5.16.8. ActiveMQ 5.19.0 is not affected.</p>
<p>Users are recommended to upgrade to version 6.1.6+, 5.19.0+,  5.18.7+, 5.17.7, or 5.16.8 or which fixes the issue.</p>
<p>Existing users may implement mutual TLS to mitigate the risk on affected brokers.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2025-27533">https://nvd.nist.gov/vuln/detail/CVE-2025-27533</a></li>
<li><a href="https://lists.apache.org/thread/8hcm25vf7mchg4zbbhnlx2lc5bs705hg">https://lists.apache.org/thread/8hcm25vf7mchg4zbbhnlx2lc5bs705hg</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2025/05/06/1">http://www.openwall.com/lists/oss-security/2025/05/06/1</a></li>
<li><a href="https://github.com/apache/activemq/commit/fc4372b9f0f72b8b5eed917f0019c5cea45c5d06">https://github.com/apache/activemq/commit/fc4372b9f0f72b8b5eed917f0019c5cea45c5d06</a></li>
<li><a href="https://issues.apache.org/jira/browse/AMQ-6596">https://issues.apache.org/jira/browse/AMQ-6596</a></li>
<li><a href="https://github.com/advisories/GHSA-whxr-3p84-rf3c">https://github.com/advisories/GHSA-whxr-3p84-rf3c</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-whxr-3p84-rf3c</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2025-05-07T09:31:19.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.apache.activemq:activemq-client] Apache ActiveMQ: Unchecked buffer length can cause excessive memory allocation]]></title>
        <id>https://github.com/advisories/GHSA-whxr-3p84-rf3c</id>
        <link href="https://github.com/advisories/GHSA-whxr-3p84-rf3c"/>
        <updated>2025-05-07T15:25:43.000Z</updated>
        <content type="html"><![CDATA[<p>Memory Allocation with Excessive Size Value vulnerability in Apache ActiveMQ.</p>
<p>During unmarshalling of OpenWire commands the size value of buffers was not properly validated which could lead to excessive memory allocation and be exploited to cause a denial of service (DoS) by depleting process memory, thereby affecting applications and services that rely on the availability of the ActiveMQ broker when not using mutual TLS connections.
This issue affects Apache ActiveMQ: from 6.0.0 before 6.1.6, from 5.18.0 before 5.18.7, from 5.17.0 before 5.17.7, before 5.16.8. ActiveMQ 5.19.0 is not affected.</p>
<p>Users are recommended to upgrade to version 6.1.6+, 5.19.0+,  5.18.7+, 5.17.7, or 5.16.8 or which fixes the issue.</p>
<p>Existing users may implement mutual TLS to mitigate the risk on affected brokers.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2025-27533">https://nvd.nist.gov/vuln/detail/CVE-2025-27533</a></li>
<li><a href="https://lists.apache.org/thread/8hcm25vf7mchg4zbbhnlx2lc5bs705hg">https://lists.apache.org/thread/8hcm25vf7mchg4zbbhnlx2lc5bs705hg</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2025/05/06/1">http://www.openwall.com/lists/oss-security/2025/05/06/1</a></li>
<li><a href="https://github.com/apache/activemq/commit/fc4372b9f0f72b8b5eed917f0019c5cea45c5d06">https://github.com/apache/activemq/commit/fc4372b9f0f72b8b5eed917f0019c5cea45c5d06</a></li>
<li><a href="https://issues.apache.org/jira/browse/AMQ-6596">https://issues.apache.org/jira/browse/AMQ-6596</a></li>
<li><a href="https://github.com/advisories/GHSA-whxr-3p84-rf3c">https://github.com/advisories/GHSA-whxr-3p84-rf3c</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-whxr-3p84-rf3c</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2025-05-07T09:31:19.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.apache.activemq:activemq-client] Apache ActiveMQ: Unchecked buffer length can cause excessive memory allocation]]></title>
        <id>https://github.com/advisories/GHSA-whxr-3p84-rf3c</id>
        <link href="https://github.com/advisories/GHSA-whxr-3p84-rf3c"/>
        <updated>2025-05-07T15:25:43.000Z</updated>
        <content type="html"><![CDATA[<p>Memory Allocation with Excessive Size Value vulnerability in Apache ActiveMQ.</p>
<p>During unmarshalling of OpenWire commands the size value of buffers was not properly validated which could lead to excessive memory allocation and be exploited to cause a denial of service (DoS) by depleting process memory, thereby affecting applications and services that rely on the availability of the ActiveMQ broker when not using mutual TLS connections.
This issue affects Apache ActiveMQ: from 6.0.0 before 6.1.6, from 5.18.0 before 5.18.7, from 5.17.0 before 5.17.7, before 5.16.8. ActiveMQ 5.19.0 is not affected.</p>
<p>Users are recommended to upgrade to version 6.1.6+, 5.19.0+,  5.18.7+, 5.17.7, or 5.16.8 or which fixes the issue.</p>
<p>Existing users may implement mutual TLS to mitigate the risk on affected brokers.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2025-27533">https://nvd.nist.gov/vuln/detail/CVE-2025-27533</a></li>
<li><a href="https://lists.apache.org/thread/8hcm25vf7mchg4zbbhnlx2lc5bs705hg">https://lists.apache.org/thread/8hcm25vf7mchg4zbbhnlx2lc5bs705hg</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2025/05/06/1">http://www.openwall.com/lists/oss-security/2025/05/06/1</a></li>
<li><a href="https://github.com/apache/activemq/commit/fc4372b9f0f72b8b5eed917f0019c5cea45c5d06">https://github.com/apache/activemq/commit/fc4372b9f0f72b8b5eed917f0019c5cea45c5d06</a></li>
<li><a href="https://issues.apache.org/jira/browse/AMQ-6596">https://issues.apache.org/jira/browse/AMQ-6596</a></li>
<li><a href="https://github.com/advisories/GHSA-whxr-3p84-rf3c">https://github.com/advisories/GHSA-whxr-3p84-rf3c</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-whxr-3p84-rf3c</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2025-05-07T09:31:19.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.apache.activemq:activemq-openwire-legacy] Apache ActiveMQ: Unchecked buffer length can cause excessive memory allocation]]></title>
        <id>https://github.com/advisories/GHSA-whxr-3p84-rf3c</id>
        <link href="https://github.com/advisories/GHSA-whxr-3p84-rf3c"/>
        <updated>2025-05-07T15:25:43.000Z</updated>
        <content type="html"><![CDATA[<p>Memory Allocation with Excessive Size Value vulnerability in Apache ActiveMQ.</p>
<p>During unmarshalling of OpenWire commands the size value of buffers was not properly validated which could lead to excessive memory allocation and be exploited to cause a denial of service (DoS) by depleting process memory, thereby affecting applications and services that rely on the availability of the ActiveMQ broker when not using mutual TLS connections.
This issue affects Apache ActiveMQ: from 6.0.0 before 6.1.6, from 5.18.0 before 5.18.7, from 5.17.0 before 5.17.7, before 5.16.8. ActiveMQ 5.19.0 is not affected.</p>
<p>Users are recommended to upgrade to version 6.1.6+, 5.19.0+,  5.18.7+, 5.17.7, or 5.16.8 or which fixes the issue.</p>
<p>Existing users may implement mutual TLS to mitigate the risk on affected brokers.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2025-27533">https://nvd.nist.gov/vuln/detail/CVE-2025-27533</a></li>
<li><a href="https://lists.apache.org/thread/8hcm25vf7mchg4zbbhnlx2lc5bs705hg">https://lists.apache.org/thread/8hcm25vf7mchg4zbbhnlx2lc5bs705hg</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2025/05/06/1">http://www.openwall.com/lists/oss-security/2025/05/06/1</a></li>
<li><a href="https://github.com/apache/activemq/commit/fc4372b9f0f72b8b5eed917f0019c5cea45c5d06">https://github.com/apache/activemq/commit/fc4372b9f0f72b8b5eed917f0019c5cea45c5d06</a></li>
<li><a href="https://issues.apache.org/jira/browse/AMQ-6596">https://issues.apache.org/jira/browse/AMQ-6596</a></li>
<li><a href="https://github.com/advisories/GHSA-whxr-3p84-rf3c">https://github.com/advisories/GHSA-whxr-3p84-rf3c</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-whxr-3p84-rf3c</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2025-05-07T09:31:19.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.apache.activemq:activemq-openwire-legacy] Apache ActiveMQ: Unchecked buffer length can cause excessive memory allocation]]></title>
        <id>https://github.com/advisories/GHSA-whxr-3p84-rf3c</id>
        <link href="https://github.com/advisories/GHSA-whxr-3p84-rf3c"/>
        <updated>2025-05-07T15:25:43.000Z</updated>
        <content type="html"><![CDATA[<p>Memory Allocation with Excessive Size Value vulnerability in Apache ActiveMQ.</p>
<p>During unmarshalling of OpenWire commands the size value of buffers was not properly validated which could lead to excessive memory allocation and be exploited to cause a denial of service (DoS) by depleting process memory, thereby affecting applications and services that rely on the availability of the ActiveMQ broker when not using mutual TLS connections.
This issue affects Apache ActiveMQ: from 6.0.0 before 6.1.6, from 5.18.0 before 5.18.7, from 5.17.0 before 5.17.7, before 5.16.8. ActiveMQ 5.19.0 is not affected.</p>
<p>Users are recommended to upgrade to version 6.1.6+, 5.19.0+,  5.18.7+, 5.17.7, or 5.16.8 or which fixes the issue.</p>
<p>Existing users may implement mutual TLS to mitigate the risk on affected brokers.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2025-27533">https://nvd.nist.gov/vuln/detail/CVE-2025-27533</a></li>
<li><a href="https://lists.apache.org/thread/8hcm25vf7mchg4zbbhnlx2lc5bs705hg">https://lists.apache.org/thread/8hcm25vf7mchg4zbbhnlx2lc5bs705hg</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2025/05/06/1">http://www.openwall.com/lists/oss-security/2025/05/06/1</a></li>
<li><a href="https://github.com/apache/activemq/commit/fc4372b9f0f72b8b5eed917f0019c5cea45c5d06">https://github.com/apache/activemq/commit/fc4372b9f0f72b8b5eed917f0019c5cea45c5d06</a></li>
<li><a href="https://issues.apache.org/jira/browse/AMQ-6596">https://issues.apache.org/jira/browse/AMQ-6596</a></li>
<li><a href="https://github.com/advisories/GHSA-whxr-3p84-rf3c">https://github.com/advisories/GHSA-whxr-3p84-rf3c</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-whxr-3p84-rf3c</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2025-05-07T09:31:19.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.apache.activemq:activemq-openwire-legacy] Apache ActiveMQ: Unchecked buffer length can cause excessive memory allocation]]></title>
        <id>https://github.com/advisories/GHSA-whxr-3p84-rf3c</id>
        <link href="https://github.com/advisories/GHSA-whxr-3p84-rf3c"/>
        <updated>2025-05-07T15:25:43.000Z</updated>
        <content type="html"><![CDATA[<p>Memory Allocation with Excessive Size Value vulnerability in Apache ActiveMQ.</p>
<p>During unmarshalling of OpenWire commands the size value of buffers was not properly validated which could lead to excessive memory allocation and be exploited to cause a denial of service (DoS) by depleting process memory, thereby affecting applications and services that rely on the availability of the ActiveMQ broker when not using mutual TLS connections.
This issue affects Apache ActiveMQ: from 6.0.0 before 6.1.6, from 5.18.0 before 5.18.7, from 5.17.0 before 5.17.7, before 5.16.8. ActiveMQ 5.19.0 is not affected.</p>
<p>Users are recommended to upgrade to version 6.1.6+, 5.19.0+,  5.18.7+, 5.17.7, or 5.16.8 or which fixes the issue.</p>
<p>Existing users may implement mutual TLS to mitigate the risk on affected brokers.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2025-27533">https://nvd.nist.gov/vuln/detail/CVE-2025-27533</a></li>
<li><a href="https://lists.apache.org/thread/8hcm25vf7mchg4zbbhnlx2lc5bs705hg">https://lists.apache.org/thread/8hcm25vf7mchg4zbbhnlx2lc5bs705hg</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2025/05/06/1">http://www.openwall.com/lists/oss-security/2025/05/06/1</a></li>
<li><a href="https://github.com/apache/activemq/commit/fc4372b9f0f72b8b5eed917f0019c5cea45c5d06">https://github.com/apache/activemq/commit/fc4372b9f0f72b8b5eed917f0019c5cea45c5d06</a></li>
<li><a href="https://issues.apache.org/jira/browse/AMQ-6596">https://issues.apache.org/jira/browse/AMQ-6596</a></li>
<li><a href="https://github.com/advisories/GHSA-whxr-3p84-rf3c">https://github.com/advisories/GHSA-whxr-3p84-rf3c</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-whxr-3p84-rf3c</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2025-05-07T09:31:19.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.apache.activemq:activemq-client] Apache ActiveMQ: Unchecked buffer length can cause excessive memory allocation]]></title>
        <id>https://github.com/advisories/GHSA-whxr-3p84-rf3c</id>
        <link href="https://github.com/advisories/GHSA-whxr-3p84-rf3c"/>
        <updated>2025-05-07T15:25:43.000Z</updated>
        <content type="html"><![CDATA[<p>Memory Allocation with Excessive Size Value vulnerability in Apache ActiveMQ.</p>
<p>During unmarshalling of OpenWire commands the size value of buffers was not properly validated which could lead to excessive memory allocation and be exploited to cause a denial of service (DoS) by depleting process memory, thereby affecting applications and services that rely on the availability of the ActiveMQ broker when not using mutual TLS connections.
This issue affects Apache ActiveMQ: from 6.0.0 before 6.1.6, from 5.18.0 before 5.18.7, from 5.17.0 before 5.17.7, before 5.16.8. ActiveMQ 5.19.0 is not affected.</p>
<p>Users are recommended to upgrade to version 6.1.6+, 5.19.0+,  5.18.7+, 5.17.7, or 5.16.8 or which fixes the issue.</p>
<p>Existing users may implement mutual TLS to mitigate the risk on affected brokers.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2025-27533">https://nvd.nist.gov/vuln/detail/CVE-2025-27533</a></li>
<li><a href="https://lists.apache.org/thread/8hcm25vf7mchg4zbbhnlx2lc5bs705hg">https://lists.apache.org/thread/8hcm25vf7mchg4zbbhnlx2lc5bs705hg</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2025/05/06/1">http://www.openwall.com/lists/oss-security/2025/05/06/1</a></li>
<li><a href="https://github.com/apache/activemq/commit/fc4372b9f0f72b8b5eed917f0019c5cea45c5d06">https://github.com/apache/activemq/commit/fc4372b9f0f72b8b5eed917f0019c5cea45c5d06</a></li>
<li><a href="https://issues.apache.org/jira/browse/AMQ-6596">https://issues.apache.org/jira/browse/AMQ-6596</a></li>
<li><a href="https://github.com/advisories/GHSA-whxr-3p84-rf3c">https://github.com/advisories/GHSA-whxr-3p84-rf3c</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-whxr-3p84-rf3c</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2025-05-07T09:31:19.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.apache.activemq:activemq-openwire-legacy] Apache ActiveMQ: Unchecked buffer length can cause excessive memory allocation]]></title>
        <id>https://github.com/advisories/GHSA-whxr-3p84-rf3c</id>
        <link href="https://github.com/advisories/GHSA-whxr-3p84-rf3c"/>
        <updated>2025-05-07T15:25:43.000Z</updated>
        <content type="html"><![CDATA[<p>Memory Allocation with Excessive Size Value vulnerability in Apache ActiveMQ.</p>
<p>During unmarshalling of OpenWire commands the size value of buffers was not properly validated which could lead to excessive memory allocation and be exploited to cause a denial of service (DoS) by depleting process memory, thereby affecting applications and services that rely on the availability of the ActiveMQ broker when not using mutual TLS connections.
This issue affects Apache ActiveMQ: from 6.0.0 before 6.1.6, from 5.18.0 before 5.18.7, from 5.17.0 before 5.17.7, before 5.16.8. ActiveMQ 5.19.0 is not affected.</p>
<p>Users are recommended to upgrade to version 6.1.6+, 5.19.0+,  5.18.7+, 5.17.7, or 5.16.8 or which fixes the issue.</p>
<p>Existing users may implement mutual TLS to mitigate the risk on affected brokers.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2025-27533">https://nvd.nist.gov/vuln/detail/CVE-2025-27533</a></li>
<li><a href="https://lists.apache.org/thread/8hcm25vf7mchg4zbbhnlx2lc5bs705hg">https://lists.apache.org/thread/8hcm25vf7mchg4zbbhnlx2lc5bs705hg</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2025/05/06/1">http://www.openwall.com/lists/oss-security/2025/05/06/1</a></li>
<li><a href="https://github.com/apache/activemq/commit/fc4372b9f0f72b8b5eed917f0019c5cea45c5d06">https://github.com/apache/activemq/commit/fc4372b9f0f72b8b5eed917f0019c5cea45c5d06</a></li>
<li><a href="https://issues.apache.org/jira/browse/AMQ-6596">https://issues.apache.org/jira/browse/AMQ-6596</a></li>
<li><a href="https://github.com/advisories/GHSA-whxr-3p84-rf3c">https://github.com/advisories/GHSA-whxr-3p84-rf3c</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-whxr-3p84-rf3c</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2025-05-07T09:31:19.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[com.liferay:com.liferay.marketplace.app.manager.web] Liferay Portal Reflected XSS in marketplace-app-manager-web]]></title>
        <id>https://github.com/advisories/GHSA-p2f8-vq4r-gqg3</id>
        <link href="https://github.com/advisories/GHSA-p2f8-vq4r-gqg3"/>
        <updated>2025-05-06T20:00:46.000Z</updated>
        <content type="html"><![CDATA[<p>A reflected cross-site scripting (XSS) vulnerability in the Liferay Portal 7.4.0 through 7.4.3.131, and Liferay DXP 2024.Q4.0 through 2024.Q4.5, 2024.Q3.1 through 2024.Q3.13, 2024.Q2.0 through 2024.Q2.13, 2024.Q1.1 through 2024.Q1.12, 7.4 GA through update 92 allows an remote non-authenticated attacker to inject JavaScript into the modules/apps/marketplace/marketplace-app-manager-web.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2025-4388">https://nvd.nist.gov/vuln/detail/CVE-2025-4388</a></li>
<li><a href="https://liferay.dev/portal/security/known-vulnerabilities/-/asset_publisher/jekt/content/CVE-2025-4388">https://liferay.dev/portal/security/known-vulnerabilities/-/asset_publisher/jekt/content/CVE-2025-4388</a></li>
<li><a href="https://github.com/liferay/liferay-portal/commit/0c3ab8936429a1bc48d915fdd801580de592fd9e">https://github.com/liferay/liferay-portal/commit/0c3ab8936429a1bc48d915fdd801580de592fd9e</a></li>
<li><a href="https://github.com/advisories/GHSA-p2f8-vq4r-gqg3">https://github.com/advisories/GHSA-p2f8-vq4r-gqg3</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-p2f8-vq4r-gqg3</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2025-05-06T18:30:39.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.jboss.hal:hal-console] HAL Cross Site Scripting (XSS) vulnerability of user input when storing it in a data store]]></title>
        <id>https://github.com/advisories/GHSA-f7jh-m6wp-jm7f</id>
        <link href="https://github.com/advisories/GHSA-f7jh-m6wp-jm7f"/>
        <updated>2025-05-06T18:51:28.000Z</updated>
        <content type="html"><![CDATA[<p>A flaw was found in the JBoss EAP Management Console, where a stored Cross-site scripting vulnerability occurs when an application improperly sanitizes user input before storing it in a data store. When this stored data is later included in web pages without adequate sanitization, malicious scripts can execute in the context of users who view these pages, leading to potential data theft, session hijacking, or other malicious activities.</p>
<h3 id="impact">Impact</h3>
<p>Cross-site scripting (XSS) vulnerability in the management console.</p>
<h3 id="patches">Patches</h3>
<p>Fixed in <a href="https://github.com/hal/console/releases/tag/v3.7.11">HAL 3.7.11.Final</a></p>
<h3 id="workarounds">Workarounds</h3>
<p>No workaround available</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/hal/console/security/advisories/GHSA-f7jh-m6wp-jm7f">https://github.com/hal/console/security/advisories/GHSA-f7jh-m6wp-jm7f</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2025-2901">https://nvd.nist.gov/vuln/detail/CVE-2025-2901</a></li>
<li><a href="https://github.com/hal/console/commit/216de3b8aa82ea92df10cc296d88c68467cf2c52">https://github.com/hal/console/commit/216de3b8aa82ea92df10cc296d88c68467cf2c52</a></li>
<li><a href="https://access.redhat.com/security/cve/CVE-2025-2901">https://access.redhat.com/security/cve/CVE-2025-2901</a></li>
<li><a href="https://bugzilla.redhat.com/show_bug.cgi?id=2355685">https://bugzilla.redhat.com/show_bug.cgi?id=2355685</a></li>
<li><a href="https://github.com/hal/console/releases/tag/v3.7.11">https://github.com/hal/console/releases/tag/v3.7.11</a></li>
<li><a href="https://github.com/advisories/GHSA-f7jh-m6wp-jm7f">https://github.com/advisories/GHSA-f7jh-m6wp-jm7f</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-f7jh-m6wp-jm7f</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2025-05-06T18:51:27.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.jboss.hal:hal-console] Duplicate Advisory: HAL Cross Site Scripting (XSS) vulnerability of user input when storing it in a data store]]></title>
        <id>https://github.com/advisories/GHSA-hp88-hfjw-2hg4</id>
        <link href="https://github.com/advisories/GHSA-hp88-hfjw-2hg4"/>
        <updated>2025-05-06T18:51:18.000Z</updated>
        <content type="html"><![CDATA[<h1 id="duplicate-advisory">Duplicate Advisory</h1>
<p>This advisory has been withdrawn because it is a duplicate of GHSA-f7jh-m6wp-jm7f. This link is maintained to preserve external references.</p>
<h1 id="original-description">Original Description</h1>
<p>A flaw was found in the JBoss EAP Management Console, where a stored Cross-site scripting vulnerability occurs when an application improperly sanitizes user input before storing it in a data store. When this stored data is later included in web pages without adequate sanitization, malicious scripts can execute in the context of users who view these pages, leading to potential data theft, session hijacking, or other malicious activities.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2025-2901">https://nvd.nist.gov/vuln/detail/CVE-2025-2901</a></li>
<li><a href="https://access.redhat.com/security/cve/CVE-2025-2901">https://access.redhat.com/security/cve/CVE-2025-2901</a></li>
<li><a href="https://bugzilla.redhat.com/show_bug.cgi?id=2355685">https://bugzilla.redhat.com/show_bug.cgi?id=2355685</a></li>
<li><a href="https://github.com/advisories/GHSA-hp88-hfjw-2hg4">https://github.com/advisories/GHSA-hp88-hfjw-2hg4</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-hp88-hfjw-2hg4</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2025-03-28T15:31:56.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[com.baidu.mapp:brcc-core] BRCC Incorrect Access Control vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-w7xj-pj5f-8pwh</id>
        <link href="https://github.com/advisories/GHSA-w7xj-pj5f-8pwh"/>
        <updated>2025-05-06T18:49:14.000Z</updated>
        <content type="html"><![CDATA[<p>Incorrect access control in the /admin/** API of brcc v1.2.0 allows attackers to gain access to Admin rights via a crafted request.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2025-45616">https://nvd.nist.gov/vuln/detail/CVE-2025-45616</a></li>
<li><a href="https://github.com/baidu/brcc/issues/194">https://github.com/baidu/brcc/issues/194</a></li>
<li><a href="https://github.com/advisories/GHSA-w7xj-pj5f-8pwh">https://github.com/advisories/GHSA-w7xj-pj5f-8pwh</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-w7xj-pj5f-8pwh</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2025-05-05T21:31:30.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.apache.parquet:parquet-avro] Apache Parquet Java: Potential malicious code execution from trusted packages in the parquet-avro module when reading an Avro schema from a Parquet file metadata]]></title>
        <id>https://github.com/advisories/GHSA-53wx-pr6q-m3j5</id>
        <link href="https://github.com/advisories/GHSA-53wx-pr6q-m3j5"/>
        <updated>2025-05-06T16:46:17.000Z</updated>
        <content type="html"><![CDATA[<p>Schema parsing in the parquet-avro module of Apache Parquet 1.15.0 and previous versions allows bad actors to execute arbitrary code.</p>
<p>While 1.15.1 introduced a fix to restrict untrusted packages, the default setting of trusted packages still allows malicious classes from these packages to be executed.</p>
<p>The exploit is only applicable if the client code of parquet-avro uses the "specific" or the "reflect" models deliberately for reading Parquet files. ("generic" model is not impacted)</p>
<p>Users are recommended to upgrade to 1.15.2 or set the system property "org.apache.parquet.avro.SERIALIZABLE_PACKAGES" to an empty string on 1.15.1. Both are sufficient to fix the issue.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2025-46762">https://nvd.nist.gov/vuln/detail/CVE-2025-46762</a></li>
<li><a href="https://lists.apache.org/thread/t7724lpvl110xsbgqwsmrdsns0rhycdp">https://lists.apache.org/thread/t7724lpvl110xsbgqwsmrdsns0rhycdp</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2025/05/02/1">http://www.openwall.com/lists/oss-security/2025/05/02/1</a></li>
<li><a href="https://issues.apache.org/jira/browse/AVRO-3985">https://issues.apache.org/jira/browse/AVRO-3985</a></li>
<li><a href="https://github.com/advisories/GHSA-53wx-pr6q-m3j5">https://github.com/advisories/GHSA-53wx-pr6q-m3j5</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-53wx-pr6q-m3j5</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2025-05-06T12:30:23.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.wso2.am:am-distribution-parent] WSO2 API Manager XML External Entity (XXE) vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-h94w-8qhg-3xmc</id>
        <link href="https://github.com/advisories/GHSA-h94w-8qhg-3xmc"/>
        <updated>2025-05-05T19:58:09.000Z</updated>
        <content type="html"><![CDATA[<p>An XML External Entity (XXE) vulnerability exists in the gateway component of WSO2 API Manager due to insufficient validation of XML input in crafted URL paths. User-supplied XML is parsed without appropriate restrictions, enabling external entity resolution.</p>
<p>This vulnerability can be exploited by an unauthenticated remote attacker to read files from the server’s filesystem or perform denial-of-service (DoS) attacks.</p>
<ul>
<li><p>On systems running JDK 7 or early JDK 8, full file contents may be exposed.</p>
</li>
<li><p>On later versions of JDK 8 and newer, only the first line of a file may be read, due to improvements in XML parser behavior.</p>
</li>
<li><p>DoS attacks such as "Billion Laughs" payloads can cause service disruption.</p>
</li>
</ul>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2025-2905">https://nvd.nist.gov/vuln/detail/CVE-2025-2905</a></li>
<li><a href="https://security.docs.wso2.com/en/latest/security-announcements/security-advisories/2025/WSO2-2025-3993">https://security.docs.wso2.com/en/latest/security-announcements/security-advisories/2025/WSO2-2025-3993</a></li>
<li><a href="https://github.com/advisories/GHSA-h94w-8qhg-3xmc">https://github.com/advisories/GHSA-h94w-8qhg-3xmc</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-h94w-8qhg-3xmc</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2025-05-05T09:31:09.000Z</published>
    </entry>
</feed>