<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://azu.github.io/github-advisory-database-rss/maven.rss</id>
    <title>Security Advisory for Java artifacts hosted at the Maven central repository</title>
    <updated>2024-12-04T05:01:33.317Z</updated>
    <generator>github-advisory-database-rss</generator>
    <link rel="alternate" href="https://github.com/advisories?query=type%3Areviewed+ecosystem%3Amaven"/>
    <subtitle>Security Advisory for Java artifacts hosted at the Maven central repository on GitHub</subtitle>
    <rights>github-advisory-database-rss</rights>
    <category term="CRITICAL"/>
    <category term="HIGH"/>
    <category term="MODERATE"/>
    <category term="LOW"/>
    <entry>
        <title type="html"><![CDATA[[org.apache.ozone:ozone] Apache Ozone: Improper authentication when generating S3 secrets]]></title>
        <id>https://github.com/advisories/GHSA-rcq8-9q3j-98mw</id>
        <link href="https://github.com/advisories/GHSA-rcq8-9q3j-98mw"/>
        <updated>2024-12-03T19:09:08.000Z</updated>
        <content type="html"><![CDATA[<p>Improper authentication of an HTTP endpoint in the S3 Gateway of Apache Ozone 1.4.0 allows any authenticated Kerberos user to revoke and regenerate the S3 secrets of any other user. This is only possible if:</p>
<ul>
<li>ozone.s3g.secret.http.enabled is set to true. The default value of this configuration is false.</li>
<li>The user configured in ozone.s3g.kerberos.principal is also configured in ozone.s3.administrators or ozone.administrators.</li>
</ul>
<p>Users are recommended to upgrade to Apache Ozone version 1.4.1 which disables the affected endpoint.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-45106">https://nvd.nist.gov/vuln/detail/CVE-2024-45106</a></li>
<li><a href="https://lists.apache.org/thread/rylnxwttp004kvotpk9j158vb238pfkm">https://lists.apache.org/thread/rylnxwttp004kvotpk9j158vb238pfkm</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2024/12/02/1">http://www.openwall.com/lists/oss-security/2024/12/02/1</a></li>
<li><a href="https://github.com/apache/ozone/pull/5233">https://github.com/apache/ozone/pull/5233</a></li>
<li><a href="https://github.com/advisories/GHSA-rcq8-9q3j-98mw">https://github.com/advisories/GHSA-rcq8-9q3j-98mw</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-rcq8-9q3j-98mw</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-12-03T12:31:11.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[io.antmedia:ant-media-server] Ant-Media-Server vulnerable to Improper Output Neutralization for Logs]]></title>
        <id>https://github.com/advisories/GHSA-2gx6-qrpp-c4p3</id>
        <link href="https://github.com/advisories/GHSA-2gx6-qrpp-c4p3"/>
        <updated>2024-12-02T20:18:26.000Z</updated>
        <content type="html"><![CDATA[<p>Ant-Media-Server v2.8.2 is affected by Improper Output Neutralization for Logs. The vulnerability stems from insufficient input sanitization in the logging mechanism. Without proper filtering or validation, user-controllable data, such as identifiers or other sensitive information, can be included in log entries without restrictions.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-35371">https://nvd.nist.gov/vuln/detail/CVE-2024-35371</a></li>
<li><a href="https://github.com/ant-media/ant-media-server/commit/4d4763bd4fd06e515c19544e5170ca0f34c9ce45">https://github.com/ant-media/ant-media-server/commit/4d4763bd4fd06e515c19544e5170ca0f34c9ce45</a></li>
<li><a href="https://gist.github.com/1047524396/4eb17867f2e375f4824274c5e7b4d384">https://gist.github.com/1047524396/4eb17867f2e375f4824274c5e7b4d384</a></li>
<li><a href="https://github.com/ant-media/Ant-Media-Server/blob/ams-v2.8.2/src/main/java/io/antmedia/rest/RestServiceBase.java#L356">https://github.com/ant-media/Ant-Media-Server/blob/ams-v2.8.2/src/main/java/io/antmedia/rest/RestServiceBase.java#L356</a></li>
<li><a href="https://github.com/advisories/GHSA-2gx6-qrpp-c4p3">https://github.com/advisories/GHSA-2gx6-qrpp-c4p3</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-2gx6-qrpp-c4p3</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-11-29T21:31:04.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.asynchttpclient:async-http-client] AsyncHttpClient (AHC) library's `CookieStore` replaces explicitly defined `Cookie`s]]></title>
        <id>https://github.com/advisories/GHSA-mfj5-cf8g-g2fv</id>
        <link href="https://github.com/advisories/GHSA-mfj5-cf8g-g2fv"/>
        <updated>2024-12-02T20:04:45.000Z</updated>
        <content type="html"><![CDATA[<h3 id="summary">Summary</h3>
<p>When making any HTTP request, the automatically enabled and self-managed <code>CookieStore</code> (aka cookie jar) will silently replace explicitly defined <code>Cookie</code>s with any that have the same name from the cookie jar. For services that operate with multiple users, this can result in one user's <code>Cookie</code> being used for another user's requests.</p>
<h3 id="details">Details</h3>
<p>This issue is described without security warnings here:</p>
<p><a href="https://github.com/AsyncHttpClient/async-http-client/issues/1964">https://github.com/AsyncHttpClient/async-http-client/issues/1964</a></p>
<p>I already have a PR to fix this issue:</p>
<p><a href="https://github.com/AsyncHttpClient/async-http-client/pull/2033">https://github.com/AsyncHttpClient/async-http-client/pull/2033</a></p>
<h3 id="poc">PoC</h3>
<ol>
<li>Add an auth <code>Cookie</code> to the <code>CookieStore</code><ul>
<li>This is identical to receiving an HTTP response that uses <code>Set-Cookie</code>, as shown in issue #1964 above.</li>
</ul>
</li>
<li>Handle a different user's request where the same <code>Cookie</code> is provided as a passthrough, like a JWT, and attempt to use it by explicitly providing it.</li>
<li>Observe that the user's cookie in step 2 is passed as the Cookie in step 1.</li>
</ol>
<h3 id="impact">Impact</h3>
<p>This is generally going to be a problem for developers of backend services that implement third party auth features and use other features like token refresh. The moment a third party service responds by <em>setting</em> a cookie in the response, the <code>CookieStore</code> will effectively break almost every follow-up request (hopefully by being rejected, but possibly by revealing a different user's information).</p>
<p>If your service sets cookies based on the response that happens here, it's possible to lead to even greater levels of exposure.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/AsyncHttpClient/async-http-client/security/advisories/GHSA-mfj5-cf8g-g2fv">https://github.com/AsyncHttpClient/async-http-client/security/advisories/GHSA-mfj5-cf8g-g2fv</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-53990">https://nvd.nist.gov/vuln/detail/CVE-2024-53990</a></li>
<li><a href="https://github.com/AsyncHttpClient/async-http-client/issues/1964">https://github.com/AsyncHttpClient/async-http-client/issues/1964</a></li>
<li><a href="https://github.com/AsyncHttpClient/async-http-client/pull/2033">https://github.com/AsyncHttpClient/async-http-client/pull/2033</a></li>
<li><a href="https://github.com/AsyncHttpClient/async-http-client/commit/d5a83362f7aed81b93ebca559746ac9be0f95425">https://github.com/AsyncHttpClient/async-http-client/commit/d5a83362f7aed81b93ebca559746ac9be0f95425</a></li>
<li><a href="https://github.com/advisories/GHSA-mfj5-cf8g-g2fv">https://github.com/advisories/GHSA-mfj5-cf8g-g2fv</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-mfj5-cf8g-g2fv</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2024-12-02T20:04:43.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.springframework:spring-jdbc] Spring Framework has Authorization Bypass for Case Sensitive Comparisons]]></title>
        <id>https://github.com/advisories/GHSA-q3v6-hm2v-pw99</id>
        <link href="https://github.com/advisories/GHSA-q3v6-hm2v-pw99"/>
        <updated>2024-12-02T20:04:18.000Z</updated>
        <content type="html"><![CDATA[<p>The usage of String.toLowerCase()&nbsp;and String.toUpperCase()&nbsp;has some Locale&nbsp;dependent exceptions that could potentially result in authorization rules not working properly.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-38827">https://nvd.nist.gov/vuln/detail/CVE-2024-38827</a></li>
<li><a href="https://spring.io/security/cve-2024-38827">https://spring.io/security/cve-2024-38827</a></li>
<li><a href="https://github.com/spring-projects/spring-framework/issues/33708">https://github.com/spring-projects/spring-framework/issues/33708</a></li>
<li><a href="https://github.com/spring-projects/spring-framework/commit/11d4272ff48b4a4dabc4b28dfbff0364a4204bc9">https://github.com/spring-projects/spring-framework/commit/11d4272ff48b4a4dabc4b28dfbff0364a4204bc9</a></li>
<li><a href="https://github.com/advisories/GHSA-q3v6-hm2v-pw99">https://github.com/advisories/GHSA-q3v6-hm2v-pw99</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-q3v6-hm2v-pw99</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-12-02T15:31:41.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.springframework:spring-expression] Spring Framework has Authorization Bypass for Case Sensitive Comparisons]]></title>
        <id>https://github.com/advisories/GHSA-q3v6-hm2v-pw99</id>
        <link href="https://github.com/advisories/GHSA-q3v6-hm2v-pw99"/>
        <updated>2024-12-02T20:04:18.000Z</updated>
        <content type="html"><![CDATA[<p>The usage of String.toLowerCase()&nbsp;and String.toUpperCase()&nbsp;has some Locale&nbsp;dependent exceptions that could potentially result in authorization rules not working properly.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-38827">https://nvd.nist.gov/vuln/detail/CVE-2024-38827</a></li>
<li><a href="https://spring.io/security/cve-2024-38827">https://spring.io/security/cve-2024-38827</a></li>
<li><a href="https://github.com/spring-projects/spring-framework/issues/33708">https://github.com/spring-projects/spring-framework/issues/33708</a></li>
<li><a href="https://github.com/spring-projects/spring-framework/commit/11d4272ff48b4a4dabc4b28dfbff0364a4204bc9">https://github.com/spring-projects/spring-framework/commit/11d4272ff48b4a4dabc4b28dfbff0364a4204bc9</a></li>
<li><a href="https://github.com/advisories/GHSA-q3v6-hm2v-pw99">https://github.com/advisories/GHSA-q3v6-hm2v-pw99</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-q3v6-hm2v-pw99</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-12-02T15:31:41.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.springframework:spring-core] Spring Framework has Authorization Bypass for Case Sensitive Comparisons]]></title>
        <id>https://github.com/advisories/GHSA-q3v6-hm2v-pw99</id>
        <link href="https://github.com/advisories/GHSA-q3v6-hm2v-pw99"/>
        <updated>2024-12-02T20:04:18.000Z</updated>
        <content type="html"><![CDATA[<p>The usage of String.toLowerCase()&nbsp;and String.toUpperCase()&nbsp;has some Locale&nbsp;dependent exceptions that could potentially result in authorization rules not working properly.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-38827">https://nvd.nist.gov/vuln/detail/CVE-2024-38827</a></li>
<li><a href="https://spring.io/security/cve-2024-38827">https://spring.io/security/cve-2024-38827</a></li>
<li><a href="https://github.com/spring-projects/spring-framework/issues/33708">https://github.com/spring-projects/spring-framework/issues/33708</a></li>
<li><a href="https://github.com/spring-projects/spring-framework/commit/11d4272ff48b4a4dabc4b28dfbff0364a4204bc9">https://github.com/spring-projects/spring-framework/commit/11d4272ff48b4a4dabc4b28dfbff0364a4204bc9</a></li>
<li><a href="https://github.com/advisories/GHSA-q3v6-hm2v-pw99">https://github.com/advisories/GHSA-q3v6-hm2v-pw99</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-q3v6-hm2v-pw99</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-12-02T15:31:41.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.springframework:spring-context] Spring Framework has Authorization Bypass for Case Sensitive Comparisons]]></title>
        <id>https://github.com/advisories/GHSA-q3v6-hm2v-pw99</id>
        <link href="https://github.com/advisories/GHSA-q3v6-hm2v-pw99"/>
        <updated>2024-12-02T20:04:18.000Z</updated>
        <content type="html"><![CDATA[<p>The usage of String.toLowerCase()&nbsp;and String.toUpperCase()&nbsp;has some Locale&nbsp;dependent exceptions that could potentially result in authorization rules not working properly.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-38827">https://nvd.nist.gov/vuln/detail/CVE-2024-38827</a></li>
<li><a href="https://spring.io/security/cve-2024-38827">https://spring.io/security/cve-2024-38827</a></li>
<li><a href="https://github.com/spring-projects/spring-framework/issues/33708">https://github.com/spring-projects/spring-framework/issues/33708</a></li>
<li><a href="https://github.com/spring-projects/spring-framework/commit/11d4272ff48b4a4dabc4b28dfbff0364a4204bc9">https://github.com/spring-projects/spring-framework/commit/11d4272ff48b4a4dabc4b28dfbff0364a4204bc9</a></li>
<li><a href="https://github.com/advisories/GHSA-q3v6-hm2v-pw99">https://github.com/advisories/GHSA-q3v6-hm2v-pw99</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-q3v6-hm2v-pw99</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-12-02T15:31:41.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.springframework:spring-beans] Spring Framework has Authorization Bypass for Case Sensitive Comparisons]]></title>
        <id>https://github.com/advisories/GHSA-q3v6-hm2v-pw99</id>
        <link href="https://github.com/advisories/GHSA-q3v6-hm2v-pw99"/>
        <updated>2024-12-02T20:04:18.000Z</updated>
        <content type="html"><![CDATA[<p>The usage of String.toLowerCase()&nbsp;and String.toUpperCase()&nbsp;has some Locale&nbsp;dependent exceptions that could potentially result in authorization rules not working properly.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-38827">https://nvd.nist.gov/vuln/detail/CVE-2024-38827</a></li>
<li><a href="https://spring.io/security/cve-2024-38827">https://spring.io/security/cve-2024-38827</a></li>
<li><a href="https://github.com/spring-projects/spring-framework/issues/33708">https://github.com/spring-projects/spring-framework/issues/33708</a></li>
<li><a href="https://github.com/spring-projects/spring-framework/commit/11d4272ff48b4a4dabc4b28dfbff0364a4204bc9">https://github.com/spring-projects/spring-framework/commit/11d4272ff48b4a4dabc4b28dfbff0364a4204bc9</a></li>
<li><a href="https://github.com/advisories/GHSA-q3v6-hm2v-pw99">https://github.com/advisories/GHSA-q3v6-hm2v-pw99</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-q3v6-hm2v-pw99</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-12-02T15:31:41.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[io.lettuce:lettuce-core] Netty vulnerability included in redis lettuce]]></title>
        <id>https://github.com/advisories/GHSA-q4h9-7rxj-7gx2</id>
        <link href="https://github.com/advisories/GHSA-q4h9-7rxj-7gx2"/>
        <updated>2024-12-02T20:03:14.000Z</updated>
        <content type="html"><![CDATA[<h3 id="summary">Summary</h3>
<p>Note: i'm reporting this in this way purely because it's private and i don't want to broadcast vulnerabilities.</p>
<blockquote>
<p>An unsafe reading of environment file could potentially cause a denial of service in Netty. When loaded on an Windows application, Netty attempts to load a file that does not exist. If an attacker creates such a large file, the Netty application crashes. This vulnerability is fixed in 4.1.115.</p>
</blockquote>
<h3 id="details">Details</h3>
<p><a href="https://github.com/redis/lettuce/blob/main/pom.xml#L67C9-L67C53">https://github.com/redis/lettuce/blob/main/pom.xml#L67C9-L67C53</a> The netty version pinned here is currently </p>
<pre><code>&lt;netty.version&gt;4.1.113.Final&lt;/netty.version&gt;
</code></pre>
<p>This version is vulnerable according to Snyk and is affecting one of our products:
<img alt="image" src="https://github.com/user-attachments/assets/a7c78c24-f1e3-4f29-bc49-b252d330002a"></p>
<p>Here is a <a href="https://www.cve.org/CVERecord?id=CVE-2024-47535">link</a> to the CVE</p>
<h3 id="poc">PoC</h3>
<p><em>Complete instructions, including specific configuration details, to reproduce the vulnerability.</em>
Not applicable</p>
<h3 id="impact">Impact</h3>
<p><em>What kind of vulnerability is it? Who is impacted?</em>
Denial of Service, affecting Windows users. </p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/netty/netty/security/advisories/GHSA-xq3w-v528-46rv">https://github.com/netty/netty/security/advisories/GHSA-xq3w-v528-46rv</a></li>
<li><a href="https://github.com/redis/lettuce/security/advisories/GHSA-q4h9-7rxj-7gx2">https://github.com/redis/lettuce/security/advisories/GHSA-q4h9-7rxj-7gx2</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-47535">https://nvd.nist.gov/vuln/detail/CVE-2024-47535</a></li>
<li><a href="https://github.com/advisories/GHSA-q4h9-7rxj-7gx2">https://github.com/advisories/GHSA-q4h9-7rxj-7gx2</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-q4h9-7rxj-7gx2</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-12-02T20:03:03.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.verapdf:verapdf-library-arlington] veraPDF CLI has potential XXE (XML External Entity Injection) vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-4cx5-89vm-833x</id>
        <link href="https://github.com/advisories/GHSA-4cx5-89vm-833x"/>
        <updated>2024-12-02T17:15:26.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>Executing policy checks using custom schematron files via the CLI invokes an XSL transformation that may theoretically lead to a remote code execution (RCE) vulnerability.</p>
<h3 id="patches">Patches</h3>
<p>We are currently working on a patch that will be released when ready.</p>
<h3 id="workarounds">Workarounds</h3>
<p>This doesn't affect the standard validation and policy checks functionality, veraPDF's common use cases. Most veraPDF users don't insert any custom XSLT code into policy profiles, which are based on Schematron syntax rather than direct XSL transforms. For users who do, only load custom policy files from sources you trust.</p>
<h3 id="references">References</h3>
<p>Original issue: #1488</p>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/veraPDF/veraPDF-library/security/advisories/GHSA-4cx5-89vm-833x">https://github.com/veraPDF/veraPDF-library/security/advisories/GHSA-4cx5-89vm-833x</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-52800">https://nvd.nist.gov/vuln/detail/CVE-2024-52800</a></li>
<li><a href="https://github.com/veraPDF/veraPDF-library/issues/1488">https://github.com/veraPDF/veraPDF-library/issues/1488</a></li>
<li><a href="https://github.com/advisories/GHSA-4cx5-89vm-833x">https://github.com/advisories/GHSA-4cx5-89vm-833x</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-4cx5-89vm-833x</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2024-12-02T17:15:24.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.verapdf:verapdf-library-jakarta] veraPDF CLI has potential XXE (XML External Entity Injection) vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-4cx5-89vm-833x</id>
        <link href="https://github.com/advisories/GHSA-4cx5-89vm-833x"/>
        <updated>2024-12-02T17:15:26.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>Executing policy checks using custom schematron files via the CLI invokes an XSL transformation that may theoretically lead to a remote code execution (RCE) vulnerability.</p>
<h3 id="patches">Patches</h3>
<p>We are currently working on a patch that will be released when ready.</p>
<h3 id="workarounds">Workarounds</h3>
<p>This doesn't affect the standard validation and policy checks functionality, veraPDF's common use cases. Most veraPDF users don't insert any custom XSLT code into policy profiles, which are based on Schematron syntax rather than direct XSL transforms. For users who do, only load custom policy files from sources you trust.</p>
<h3 id="references">References</h3>
<p>Original issue: #1488</p>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/veraPDF/veraPDF-library/security/advisories/GHSA-4cx5-89vm-833x">https://github.com/veraPDF/veraPDF-library/security/advisories/GHSA-4cx5-89vm-833x</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-52800">https://nvd.nist.gov/vuln/detail/CVE-2024-52800</a></li>
<li><a href="https://github.com/veraPDF/veraPDF-library/issues/1488">https://github.com/veraPDF/veraPDF-library/issues/1488</a></li>
<li><a href="https://github.com/advisories/GHSA-4cx5-89vm-833x">https://github.com/advisories/GHSA-4cx5-89vm-833x</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-4cx5-89vm-833x</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2024-12-02T17:15:24.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.verapdf:verapdf.library] veraPDF CLI has potential XXE (XML External Entity Injection) vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-4cx5-89vm-833x</id>
        <link href="https://github.com/advisories/GHSA-4cx5-89vm-833x"/>
        <updated>2024-12-02T17:15:26.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>Executing policy checks using custom schematron files via the CLI invokes an XSL transformation that may theoretically lead to a remote code execution (RCE) vulnerability.</p>
<h3 id="patches">Patches</h3>
<p>We are currently working on a patch that will be released when ready.</p>
<h3 id="workarounds">Workarounds</h3>
<p>This doesn't affect the standard validation and policy checks functionality, veraPDF's common use cases. Most veraPDF users don't insert any custom XSLT code into policy profiles, which are based on Schematron syntax rather than direct XSL transforms. For users who do, only load custom policy files from sources you trust.</p>
<h3 id="references">References</h3>
<p>Original issue: #1488</p>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/veraPDF/veraPDF-library/security/advisories/GHSA-4cx5-89vm-833x">https://github.com/veraPDF/veraPDF-library/security/advisories/GHSA-4cx5-89vm-833x</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-52800">https://nvd.nist.gov/vuln/detail/CVE-2024-52800</a></li>
<li><a href="https://github.com/veraPDF/veraPDF-library/issues/1488">https://github.com/veraPDF/veraPDF-library/issues/1488</a></li>
<li><a href="https://github.com/advisories/GHSA-4cx5-89vm-833x">https://github.com/advisories/GHSA-4cx5-89vm-833x</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-4cx5-89vm-833x</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2024-12-02T17:15:24.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.verapdf:core-arlington] veraPDF CLI has potential XXE (XML External Entity Injection) vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-4cx5-89vm-833x</id>
        <link href="https://github.com/advisories/GHSA-4cx5-89vm-833x"/>
        <updated>2024-12-02T17:15:26.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>Executing policy checks using custom schematron files via the CLI invokes an XSL transformation that may theoretically lead to a remote code execution (RCE) vulnerability.</p>
<h3 id="patches">Patches</h3>
<p>We are currently working on a patch that will be released when ready.</p>
<h3 id="workarounds">Workarounds</h3>
<p>This doesn't affect the standard validation and policy checks functionality, veraPDF's common use cases. Most veraPDF users don't insert any custom XSLT code into policy profiles, which are based on Schematron syntax rather than direct XSL transforms. For users who do, only load custom policy files from sources you trust.</p>
<h3 id="references">References</h3>
<p>Original issue: #1488</p>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/veraPDF/veraPDF-library/security/advisories/GHSA-4cx5-89vm-833x">https://github.com/veraPDF/veraPDF-library/security/advisories/GHSA-4cx5-89vm-833x</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-52800">https://nvd.nist.gov/vuln/detail/CVE-2024-52800</a></li>
<li><a href="https://github.com/veraPDF/veraPDF-library/issues/1488">https://github.com/veraPDF/veraPDF-library/issues/1488</a></li>
<li><a href="https://github.com/advisories/GHSA-4cx5-89vm-833x">https://github.com/advisories/GHSA-4cx5-89vm-833x</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-4cx5-89vm-833x</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2024-12-02T17:15:24.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.verapdf:core-jakarta] veraPDF CLI has potential XXE (XML External Entity Injection) vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-4cx5-89vm-833x</id>
        <link href="https://github.com/advisories/GHSA-4cx5-89vm-833x"/>
        <updated>2024-12-02T17:15:26.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>Executing policy checks using custom schematron files via the CLI invokes an XSL transformation that may theoretically lead to a remote code execution (RCE) vulnerability.</p>
<h3 id="patches">Patches</h3>
<p>We are currently working on a patch that will be released when ready.</p>
<h3 id="workarounds">Workarounds</h3>
<p>This doesn't affect the standard validation and policy checks functionality, veraPDF's common use cases. Most veraPDF users don't insert any custom XSLT code into policy profiles, which are based on Schematron syntax rather than direct XSL transforms. For users who do, only load custom policy files from sources you trust.</p>
<h3 id="references">References</h3>
<p>Original issue: #1488</p>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/veraPDF/veraPDF-library/security/advisories/GHSA-4cx5-89vm-833x">https://github.com/veraPDF/veraPDF-library/security/advisories/GHSA-4cx5-89vm-833x</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-52800">https://nvd.nist.gov/vuln/detail/CVE-2024-52800</a></li>
<li><a href="https://github.com/veraPDF/veraPDF-library/issues/1488">https://github.com/veraPDF/veraPDF-library/issues/1488</a></li>
<li><a href="https://github.com/advisories/GHSA-4cx5-89vm-833x">https://github.com/advisories/GHSA-4cx5-89vm-833x</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-4cx5-89vm-833x</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2024-12-02T17:15:24.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.verapdf:core] veraPDF CLI has potential XXE (XML External Entity Injection) vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-4cx5-89vm-833x</id>
        <link href="https://github.com/advisories/GHSA-4cx5-89vm-833x"/>
        <updated>2024-12-02T17:15:26.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>Executing policy checks using custom schematron files via the CLI invokes an XSL transformation that may theoretically lead to a remote code execution (RCE) vulnerability.</p>
<h3 id="patches">Patches</h3>
<p>We are currently working on a patch that will be released when ready.</p>
<h3 id="workarounds">Workarounds</h3>
<p>This doesn't affect the standard validation and policy checks functionality, veraPDF's common use cases. Most veraPDF users don't insert any custom XSLT code into policy profiles, which are based on Schematron syntax rather than direct XSL transforms. For users who do, only load custom policy files from sources you trust.</p>
<h3 id="references">References</h3>
<p>Original issue: #1488</p>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/veraPDF/veraPDF-library/security/advisories/GHSA-4cx5-89vm-833x">https://github.com/veraPDF/veraPDF-library/security/advisories/GHSA-4cx5-89vm-833x</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-52800">https://nvd.nist.gov/vuln/detail/CVE-2024-52800</a></li>
<li><a href="https://github.com/veraPDF/veraPDF-library/issues/1488">https://github.com/veraPDF/veraPDF-library/issues/1488</a></li>
<li><a href="https://github.com/advisories/GHSA-4cx5-89vm-833x">https://github.com/advisories/GHSA-4cx5-89vm-833x</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-4cx5-89vm-833x</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2024-12-02T17:15:24.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.bouncycastle:bctls-jdk15to18] Bouncy Castle crafted signature and public key can be used to trigger an infinite loop]]></title>
        <id>https://github.com/advisories/GHSA-m44j-cfrm-g8qc</id>
        <link href="https://github.com/advisories/GHSA-m44j-cfrm-g8qc"/>
        <updated>2024-12-02T16:27:24.000Z</updated>
        <content type="html"><![CDATA[<p>An issue was discovered in Bouncy Castle Java Cryptography APIs starting in 1.73 and before 1.78. An Ed25519 verification code infinite loop can occur via a crafted signature and public key.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-30172">https://nvd.nist.gov/vuln/detail/CVE-2024-30172</a></li>
<li><a href="https://www.bouncycastle.org/latest_releases.html">https://www.bouncycastle.org/latest_releases.html</a></li>
<li><a href="https://github.com/bcgit/bc-csharp/wiki/CVE%E2%80%902024%E2%80%9030172">https://github.com/bcgit/bc-csharp/wiki/CVE%E2%80%902024%E2%80%9030172</a></li>
<li><a href="https://github.com/bcgit/bc-java/wiki/CVE%E2%80%902024%E2%80%9030172">https://github.com/bcgit/bc-java/wiki/CVE%E2%80%902024%E2%80%9030172</a></li>
<li><a href="https://security.netapp.com/advisory/ntap-20240614-0007">https://security.netapp.com/advisory/ntap-20240614-0007</a></li>
<li><a href="https://github.com/bcgit/bc-java/commit/9c165791b68a204678b48ec11e4e579754c2ea49">https://github.com/bcgit/bc-java/commit/9c165791b68a204678b48ec11e4e579754c2ea49</a></li>
<li><a href="https://github.com/bcgit/bc-java/commit/ebe1c75579170072dc59b8dee2b55ce31663178f">https://github.com/bcgit/bc-java/commit/ebe1c75579170072dc59b8dee2b55ce31663178f</a></li>
<li><a href="https://github.com/bcgit/bc-java/commit/1b9fd9b545e691bfb3941a9f6a797660c8860f02">https://github.com/bcgit/bc-java/commit/1b9fd9b545e691bfb3941a9f6a797660c8860f02</a></li>
<li><a href="https://github.com/advisories/GHSA-m44j-cfrm-g8qc">https://github.com/advisories/GHSA-m44j-cfrm-g8qc</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-m44j-cfrm-g8qc</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-05-14T15:32:54.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.bouncycastle:bctls-jdk14] Bouncy Castle crafted signature and public key can be used to trigger an infinite loop]]></title>
        <id>https://github.com/advisories/GHSA-m44j-cfrm-g8qc</id>
        <link href="https://github.com/advisories/GHSA-m44j-cfrm-g8qc"/>
        <updated>2024-12-02T16:27:24.000Z</updated>
        <content type="html"><![CDATA[<p>An issue was discovered in Bouncy Castle Java Cryptography APIs starting in 1.73 and before 1.78. An Ed25519 verification code infinite loop can occur via a crafted signature and public key.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-30172">https://nvd.nist.gov/vuln/detail/CVE-2024-30172</a></li>
<li><a href="https://www.bouncycastle.org/latest_releases.html">https://www.bouncycastle.org/latest_releases.html</a></li>
<li><a href="https://github.com/bcgit/bc-csharp/wiki/CVE%E2%80%902024%E2%80%9030172">https://github.com/bcgit/bc-csharp/wiki/CVE%E2%80%902024%E2%80%9030172</a></li>
<li><a href="https://github.com/bcgit/bc-java/wiki/CVE%E2%80%902024%E2%80%9030172">https://github.com/bcgit/bc-java/wiki/CVE%E2%80%902024%E2%80%9030172</a></li>
<li><a href="https://security.netapp.com/advisory/ntap-20240614-0007">https://security.netapp.com/advisory/ntap-20240614-0007</a></li>
<li><a href="https://github.com/bcgit/bc-java/commit/9c165791b68a204678b48ec11e4e579754c2ea49">https://github.com/bcgit/bc-java/commit/9c165791b68a204678b48ec11e4e579754c2ea49</a></li>
<li><a href="https://github.com/bcgit/bc-java/commit/ebe1c75579170072dc59b8dee2b55ce31663178f">https://github.com/bcgit/bc-java/commit/ebe1c75579170072dc59b8dee2b55ce31663178f</a></li>
<li><a href="https://github.com/bcgit/bc-java/commit/1b9fd9b545e691bfb3941a9f6a797660c8860f02">https://github.com/bcgit/bc-java/commit/1b9fd9b545e691bfb3941a9f6a797660c8860f02</a></li>
<li><a href="https://github.com/advisories/GHSA-m44j-cfrm-g8qc">https://github.com/advisories/GHSA-m44j-cfrm-g8qc</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-m44j-cfrm-g8qc</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-05-14T15:32:54.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.bouncycastle:bctls-jdk18on] Bouncy Castle crafted signature and public key can be used to trigger an infinite loop]]></title>
        <id>https://github.com/advisories/GHSA-m44j-cfrm-g8qc</id>
        <link href="https://github.com/advisories/GHSA-m44j-cfrm-g8qc"/>
        <updated>2024-12-02T16:27:24.000Z</updated>
        <content type="html"><![CDATA[<p>An issue was discovered in Bouncy Castle Java Cryptography APIs starting in 1.73 and before 1.78. An Ed25519 verification code infinite loop can occur via a crafted signature and public key.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-30172">https://nvd.nist.gov/vuln/detail/CVE-2024-30172</a></li>
<li><a href="https://www.bouncycastle.org/latest_releases.html">https://www.bouncycastle.org/latest_releases.html</a></li>
<li><a href="https://github.com/bcgit/bc-csharp/wiki/CVE%E2%80%902024%E2%80%9030172">https://github.com/bcgit/bc-csharp/wiki/CVE%E2%80%902024%E2%80%9030172</a></li>
<li><a href="https://github.com/bcgit/bc-java/wiki/CVE%E2%80%902024%E2%80%9030172">https://github.com/bcgit/bc-java/wiki/CVE%E2%80%902024%E2%80%9030172</a></li>
<li><a href="https://security.netapp.com/advisory/ntap-20240614-0007">https://security.netapp.com/advisory/ntap-20240614-0007</a></li>
<li><a href="https://github.com/bcgit/bc-java/commit/9c165791b68a204678b48ec11e4e579754c2ea49">https://github.com/bcgit/bc-java/commit/9c165791b68a204678b48ec11e4e579754c2ea49</a></li>
<li><a href="https://github.com/bcgit/bc-java/commit/ebe1c75579170072dc59b8dee2b55ce31663178f">https://github.com/bcgit/bc-java/commit/ebe1c75579170072dc59b8dee2b55ce31663178f</a></li>
<li><a href="https://github.com/bcgit/bc-java/commit/1b9fd9b545e691bfb3941a9f6a797660c8860f02">https://github.com/bcgit/bc-java/commit/1b9fd9b545e691bfb3941a9f6a797660c8860f02</a></li>
<li><a href="https://github.com/advisories/GHSA-m44j-cfrm-g8qc">https://github.com/advisories/GHSA-m44j-cfrm-g8qc</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-m44j-cfrm-g8qc</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-05-14T15:32:54.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.bouncycastle:bcprov-jdk14] Bouncy Castle crafted signature and public key can be used to trigger an infinite loop]]></title>
        <id>https://github.com/advisories/GHSA-m44j-cfrm-g8qc</id>
        <link href="https://github.com/advisories/GHSA-m44j-cfrm-g8qc"/>
        <updated>2024-12-02T16:27:24.000Z</updated>
        <content type="html"><![CDATA[<p>An issue was discovered in Bouncy Castle Java Cryptography APIs starting in 1.73 and before 1.78. An Ed25519 verification code infinite loop can occur via a crafted signature and public key.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-30172">https://nvd.nist.gov/vuln/detail/CVE-2024-30172</a></li>
<li><a href="https://www.bouncycastle.org/latest_releases.html">https://www.bouncycastle.org/latest_releases.html</a></li>
<li><a href="https://github.com/bcgit/bc-csharp/wiki/CVE%E2%80%902024%E2%80%9030172">https://github.com/bcgit/bc-csharp/wiki/CVE%E2%80%902024%E2%80%9030172</a></li>
<li><a href="https://github.com/bcgit/bc-java/wiki/CVE%E2%80%902024%E2%80%9030172">https://github.com/bcgit/bc-java/wiki/CVE%E2%80%902024%E2%80%9030172</a></li>
<li><a href="https://security.netapp.com/advisory/ntap-20240614-0007">https://security.netapp.com/advisory/ntap-20240614-0007</a></li>
<li><a href="https://github.com/bcgit/bc-java/commit/9c165791b68a204678b48ec11e4e579754c2ea49">https://github.com/bcgit/bc-java/commit/9c165791b68a204678b48ec11e4e579754c2ea49</a></li>
<li><a href="https://github.com/bcgit/bc-java/commit/ebe1c75579170072dc59b8dee2b55ce31663178f">https://github.com/bcgit/bc-java/commit/ebe1c75579170072dc59b8dee2b55ce31663178f</a></li>
<li><a href="https://github.com/bcgit/bc-java/commit/1b9fd9b545e691bfb3941a9f6a797660c8860f02">https://github.com/bcgit/bc-java/commit/1b9fd9b545e691bfb3941a9f6a797660c8860f02</a></li>
<li><a href="https://github.com/advisories/GHSA-m44j-cfrm-g8qc">https://github.com/advisories/GHSA-m44j-cfrm-g8qc</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-m44j-cfrm-g8qc</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-05-14T15:32:54.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.bouncycastle:bcprov-jdk15to18] Bouncy Castle crafted signature and public key can be used to trigger an infinite loop]]></title>
        <id>https://github.com/advisories/GHSA-m44j-cfrm-g8qc</id>
        <link href="https://github.com/advisories/GHSA-m44j-cfrm-g8qc"/>
        <updated>2024-12-02T16:27:24.000Z</updated>
        <content type="html"><![CDATA[<p>An issue was discovered in Bouncy Castle Java Cryptography APIs starting in 1.73 and before 1.78. An Ed25519 verification code infinite loop can occur via a crafted signature and public key.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-30172">https://nvd.nist.gov/vuln/detail/CVE-2024-30172</a></li>
<li><a href="https://www.bouncycastle.org/latest_releases.html">https://www.bouncycastle.org/latest_releases.html</a></li>
<li><a href="https://github.com/bcgit/bc-csharp/wiki/CVE%E2%80%902024%E2%80%9030172">https://github.com/bcgit/bc-csharp/wiki/CVE%E2%80%902024%E2%80%9030172</a></li>
<li><a href="https://github.com/bcgit/bc-java/wiki/CVE%E2%80%902024%E2%80%9030172">https://github.com/bcgit/bc-java/wiki/CVE%E2%80%902024%E2%80%9030172</a></li>
<li><a href="https://security.netapp.com/advisory/ntap-20240614-0007">https://security.netapp.com/advisory/ntap-20240614-0007</a></li>
<li><a href="https://github.com/bcgit/bc-java/commit/9c165791b68a204678b48ec11e4e579754c2ea49">https://github.com/bcgit/bc-java/commit/9c165791b68a204678b48ec11e4e579754c2ea49</a></li>
<li><a href="https://github.com/bcgit/bc-java/commit/ebe1c75579170072dc59b8dee2b55ce31663178f">https://github.com/bcgit/bc-java/commit/ebe1c75579170072dc59b8dee2b55ce31663178f</a></li>
<li><a href="https://github.com/bcgit/bc-java/commit/1b9fd9b545e691bfb3941a9f6a797660c8860f02">https://github.com/bcgit/bc-java/commit/1b9fd9b545e691bfb3941a9f6a797660c8860f02</a></li>
<li><a href="https://github.com/advisories/GHSA-m44j-cfrm-g8qc">https://github.com/advisories/GHSA-m44j-cfrm-g8qc</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-m44j-cfrm-g8qc</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-05-14T15:32:54.000Z</published>
    </entry>
</feed>