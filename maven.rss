<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://azu.github.io/github-advisory-database-rss/maven.rss</id>
    <title>Security Advisory for Java artifacts hosted at the Maven central repository</title>
    <updated>2024-12-18T12:01:44.528Z</updated>
    <generator>github-advisory-database-rss</generator>
    <link rel="alternate" href="https://github.com/advisories?query=type%3Areviewed+ecosystem%3Amaven"/>
    <subtitle>Security Advisory for Java artifacts hosted at the Maven central repository on GitHub</subtitle>
    <rights>github-advisory-database-rss</rights>
    <category term="CRITICAL"/>
    <category term="HIGH"/>
    <category term="MODERATE"/>
    <category term="LOW"/>
    <entry>
        <title type="html"><![CDATA[[org.elasticsearch:elasticsearch] Elasticsearch Incorrect Authorization vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-5mpw-4546-2wcr</id>
        <link href="https://github.com/advisories/GHSA-5mpw-4546-2wcr"/>
        <updated>2024-12-17T22:30:17.000Z</updated>
        <content type="html"><![CDATA[<p>An issue was discovered where improper authorization controls affected certain queries that could allow a malicious actor to circumvent Document Level Security in Elasticsearch and get access to documents that their roles would normally not allow.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-12539">https://nvd.nist.gov/vuln/detail/CVE-2024-12539</a></li>
<li><a href="https://discuss.elastic.co/t/elasticsearch-8-16-2-8-17-0-security-update/372091">https://discuss.elastic.co/t/elasticsearch-8-16-2-8-17-0-security-update/372091</a></li>
<li><a href="https://github.com/advisories/GHSA-5mpw-4546-2wcr">https://github.com/advisories/GHSA-5mpw-4546-2wcr</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-5mpw-4546-2wcr</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-12-17T21:30:34.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[com.liferay.portal:release.dxp.bom] Liferay Portal and Liferay DXP vulnerable to Criss-site Scripting]]></title>
        <id>https://github.com/advisories/GHSA-4hxr-28mv-q729</id>
        <link href="https://github.com/advisories/GHSA-4hxr-28mv-q729"/>
        <updated>2024-12-17T22:29:37.000Z</updated>
        <content type="html"><![CDATA[<p>Reflected cross-site scripting (XSS) vulnerability in Liferay Portal 7.1.0 through 7.4.3.38, and Liferay DXP 7.4 GA through update 38, 7.3 GA through update 36, 7.2 GA through fix pack 20 and 7.1 GA through fix pack 28 allows remote attackers to execute arbitrary web script or HTML via Dispatch name field</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-11993">https://nvd.nist.gov/vuln/detail/CVE-2024-11993</a></li>
<li><a href="https://liferay.dev/portal/security/known-vulnerabilities/-/asset_publisher/jekt/content/CVE-2024-11993">https://liferay.dev/portal/security/known-vulnerabilities/-/asset_publisher/jekt/content/CVE-2024-11993</a></li>
<li><a href="https://github.com/advisories/GHSA-4hxr-28mv-q729">https://github.com/advisories/GHSA-4hxr-28mv-q729</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-4hxr-28mv-q729</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-12-17T21:30:34.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[com.liferay.portal:release.portal.bom] Liferay Portal and Liferay DXP vulnerable to Criss-site Scripting]]></title>
        <id>https://github.com/advisories/GHSA-4hxr-28mv-q729</id>
        <link href="https://github.com/advisories/GHSA-4hxr-28mv-q729"/>
        <updated>2024-12-17T22:29:37.000Z</updated>
        <content type="html"><![CDATA[<p>Reflected cross-site scripting (XSS) vulnerability in Liferay Portal 7.1.0 through 7.4.3.38, and Liferay DXP 7.4 GA through update 38, 7.3 GA through update 36, 7.2 GA through fix pack 20 and 7.1 GA through fix pack 28 allows remote attackers to execute arbitrary web script or HTML via Dispatch name field</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-11993">https://nvd.nist.gov/vuln/detail/CVE-2024-11993</a></li>
<li><a href="https://liferay.dev/portal/security/known-vulnerabilities/-/asset_publisher/jekt/content/CVE-2024-11993">https://liferay.dev/portal/security/known-vulnerabilities/-/asset_publisher/jekt/content/CVE-2024-11993</a></li>
<li><a href="https://github.com/advisories/GHSA-4hxr-28mv-q729">https://github.com/advisories/GHSA-4hxr-28mv-q729</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-4hxr-28mv-q729</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-12-17T21:30:34.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.apache.tomcat:tomcat-catalina] Apache Tomcat Uncontrolled Resource Consumption vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-653p-vg55-5652</id>
        <link href="https://github.com/advisories/GHSA-653p-vg55-5652"/>
        <updated>2024-12-17T21:36:04.000Z</updated>
        <content type="html"><![CDATA[<p>Uncontrolled Resource Consumption vulnerability in the examples web application provided with Apache Tomcat leads to denial of service.</p>
<p>This issue affects Apache Tomcat: from 11.0.0-M1 through 11.0.1, from 10.1.0-M1 through 10.1.33, from 9.0.0.M1 through 9.9.97.</p>
<p>Users are recommended to upgrade to version 11.0.2, 10.1.34 or 9.0.98, which fixes the issue.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-54677">https://nvd.nist.gov/vuln/detail/CVE-2024-54677</a></li>
<li><a href="https://lists.apache.org/thread/tdtbbxpg5trdwc2wnopcth9ccvdftq2n">https://lists.apache.org/thread/tdtbbxpg5trdwc2wnopcth9ccvdftq2n</a></li>
<li><a href="https://github.com/apache/tomcat/commit/f57a9d9847c1038be61f5818d73b8be907c460d4">https://github.com/apache/tomcat/commit/f57a9d9847c1038be61f5818d73b8be907c460d4</a></li>
<li><a href="https://github.com/apache/tomcat/commit/e8c16cdba833884e1bd49fff1f1cb699da177585">https://github.com/apache/tomcat/commit/e8c16cdba833884e1bd49fff1f1cb699da177585</a></li>
<li><a href="https://github.com/apache/tomcat/commit/dbec927859d9484cb8bd680a7c67b1a560f48444">https://github.com/apache/tomcat/commit/dbec927859d9484cb8bd680a7c67b1a560f48444</a></li>
<li><a href="https://github.com/apache/tomcat/commit/d63a10afc142b12f462a15f7d10f79fd80ff94eb">https://github.com/apache/tomcat/commit/d63a10afc142b12f462a15f7d10f79fd80ff94eb</a></li>
<li><a href="https://github.com/apache/tomcat/commit/cb1707685472994e9d924746f8c91cb116fa5213">https://github.com/apache/tomcat/commit/cb1707685472994e9d924746f8c91cb116fa5213</a></li>
<li><a href="https://github.com/apache/tomcat/commit/c2f7ce21c3fb12caefee87c517a8bb4f80700044">https://github.com/apache/tomcat/commit/c2f7ce21c3fb12caefee87c517a8bb4f80700044</a></li>
<li><a href="https://github.com/apache/tomcat/commit/c0a23927ea5e061ca3fdff695138464179fe674a">https://github.com/apache/tomcat/commit/c0a23927ea5e061ca3fdff695138464179fe674a</a></li>
<li><a href="https://github.com/apache/tomcat/commit/bbd82e9593314ade4cfd57248f9285fbad686f66">https://github.com/apache/tomcat/commit/bbd82e9593314ade4cfd57248f9285fbad686f66</a></li>
<li><a href="https://github.com/apache/tomcat/commit/aa5b4d0043289cf054f531ec55126c980d3572e1">https://github.com/apache/tomcat/commit/aa5b4d0043289cf054f531ec55126c980d3572e1</a></li>
<li><a href="https://github.com/apache/tomcat/commit/a95bf2b0303442a2c9a1ac364b0e63b56049e33a">https://github.com/apache/tomcat/commit/a95bf2b0303442a2c9a1ac364b0e63b56049e33a</a></li>
<li><a href="https://github.com/apache/tomcat/commit/9ffd23fc27f5d1fc95bf97e5cea175c8968f4533">https://github.com/apache/tomcat/commit/9ffd23fc27f5d1fc95bf97e5cea175c8968f4533</a></li>
<li><a href="https://github.com/apache/tomcat/commit/84c4af76e7a10fc7f8630ce62e6a46632ea4a90e">https://github.com/apache/tomcat/commit/84c4af76e7a10fc7f8630ce62e6a46632ea4a90e</a></li>
<li><a href="https://github.com/apache/tomcat/commit/84065e26ca4555e63a922bb29b13b0a1c86b7654">https://github.com/apache/tomcat/commit/84065e26ca4555e63a922bb29b13b0a1c86b7654</a></li>
<li><a href="https://github.com/apache/tomcat/commit/75ff7e8622edcc024b268677aa789ee8f0880ecc">https://github.com/apache/tomcat/commit/75ff7e8622edcc024b268677aa789ee8f0880ecc</a></li>
<li><a href="https://github.com/apache/tomcat/commit/722814668708c42a61b0c1e340b15bc2b785c0d1">https://github.com/apache/tomcat/commit/722814668708c42a61b0c1e340b15bc2b785c0d1</a></li>
<li><a href="https://github.com/apache/tomcat/commit/721544ea28e92549824b106be954a9f411867a1c">https://github.com/apache/tomcat/commit/721544ea28e92549824b106be954a9f411867a1c</a></li>
<li><a href="https://github.com/apache/tomcat/commit/54e56495e9a106218efe9fc9c79d976c0032bbfd">https://github.com/apache/tomcat/commit/54e56495e9a106218efe9fc9c79d976c0032bbfd</a></li>
<li><a href="https://github.com/apache/tomcat/commit/4f0236606961176257b883213e1621b1859ed746">https://github.com/apache/tomcat/commit/4f0236606961176257b883213e1621b1859ed746</a></li>
<li><a href="https://github.com/apache/tomcat/commit/4d5cc6538d91386f950373ac8120e98c2c78ed3a">https://github.com/apache/tomcat/commit/4d5cc6538d91386f950373ac8120e98c2c78ed3a</a></li>
<li><a href="https://github.com/apache/tomcat/commit/4a335c6dcba8d6f8a54629eda392a50da267bdf4">https://github.com/apache/tomcat/commit/4a335c6dcba8d6f8a54629eda392a50da267bdf4</a></li>
<li><a href="https://github.com/apache/tomcat/commit/3315a9027a7eaab18f42625b97b569940ff1365d">https://github.com/apache/tomcat/commit/3315a9027a7eaab18f42625b97b569940ff1365d</a></li>
<li><a href="https://github.com/apache/tomcat/commit/1d88dd3ffaed76188dd4ee32ce77709ce6e153cd">https://github.com/apache/tomcat/commit/1d88dd3ffaed76188dd4ee32ce77709ce6e153cd</a></li>
<li><a href="https://tomcat.apache.org/security-10.html#Fixed_in_Apache_Tomcat_10.1.34">https://tomcat.apache.org/security-10.html#Fixed_in_Apache_Tomcat_10.1.34</a></li>
<li><a href="https://tomcat.apache.org/security-11.html#Fixed_in_Apache_Tomcat_11.0.2">https://tomcat.apache.org/security-11.html#Fixed_in_Apache_Tomcat_11.0.2</a></li>
<li><a href="https://tomcat.apache.org/security-9.html#Fixed_in_Apache_Tomcat_9.0.98">https://tomcat.apache.org/security-9.html#Fixed_in_Apache_Tomcat_9.0.98</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2024/12/17/5">http://www.openwall.com/lists/oss-security/2024/12/17/5</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2024/12/17/6">http://www.openwall.com/lists/oss-security/2024/12/17/6</a></li>
<li><a href="https://github.com/advisories/GHSA-653p-vg55-5652">https://github.com/advisories/GHSA-653p-vg55-5652</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-653p-vg55-5652</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-12-17T15:31:43.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.apache.tomcat:tomcat-catalina] Apache Tomcat Uncontrolled Resource Consumption vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-653p-vg55-5652</id>
        <link href="https://github.com/advisories/GHSA-653p-vg55-5652"/>
        <updated>2024-12-17T21:36:04.000Z</updated>
        <content type="html"><![CDATA[<p>Uncontrolled Resource Consumption vulnerability in the examples web application provided with Apache Tomcat leads to denial of service.</p>
<p>This issue affects Apache Tomcat: from 11.0.0-M1 through 11.0.1, from 10.1.0-M1 through 10.1.33, from 9.0.0.M1 through 9.9.97.</p>
<p>Users are recommended to upgrade to version 11.0.2, 10.1.34 or 9.0.98, which fixes the issue.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-54677">https://nvd.nist.gov/vuln/detail/CVE-2024-54677</a></li>
<li><a href="https://lists.apache.org/thread/tdtbbxpg5trdwc2wnopcth9ccvdftq2n">https://lists.apache.org/thread/tdtbbxpg5trdwc2wnopcth9ccvdftq2n</a></li>
<li><a href="https://github.com/apache/tomcat/commit/f57a9d9847c1038be61f5818d73b8be907c460d4">https://github.com/apache/tomcat/commit/f57a9d9847c1038be61f5818d73b8be907c460d4</a></li>
<li><a href="https://github.com/apache/tomcat/commit/e8c16cdba833884e1bd49fff1f1cb699da177585">https://github.com/apache/tomcat/commit/e8c16cdba833884e1bd49fff1f1cb699da177585</a></li>
<li><a href="https://github.com/apache/tomcat/commit/dbec927859d9484cb8bd680a7c67b1a560f48444">https://github.com/apache/tomcat/commit/dbec927859d9484cb8bd680a7c67b1a560f48444</a></li>
<li><a href="https://github.com/apache/tomcat/commit/d63a10afc142b12f462a15f7d10f79fd80ff94eb">https://github.com/apache/tomcat/commit/d63a10afc142b12f462a15f7d10f79fd80ff94eb</a></li>
<li><a href="https://github.com/apache/tomcat/commit/cb1707685472994e9d924746f8c91cb116fa5213">https://github.com/apache/tomcat/commit/cb1707685472994e9d924746f8c91cb116fa5213</a></li>
<li><a href="https://github.com/apache/tomcat/commit/c2f7ce21c3fb12caefee87c517a8bb4f80700044">https://github.com/apache/tomcat/commit/c2f7ce21c3fb12caefee87c517a8bb4f80700044</a></li>
<li><a href="https://github.com/apache/tomcat/commit/c0a23927ea5e061ca3fdff695138464179fe674a">https://github.com/apache/tomcat/commit/c0a23927ea5e061ca3fdff695138464179fe674a</a></li>
<li><a href="https://github.com/apache/tomcat/commit/bbd82e9593314ade4cfd57248f9285fbad686f66">https://github.com/apache/tomcat/commit/bbd82e9593314ade4cfd57248f9285fbad686f66</a></li>
<li><a href="https://github.com/apache/tomcat/commit/aa5b4d0043289cf054f531ec55126c980d3572e1">https://github.com/apache/tomcat/commit/aa5b4d0043289cf054f531ec55126c980d3572e1</a></li>
<li><a href="https://github.com/apache/tomcat/commit/a95bf2b0303442a2c9a1ac364b0e63b56049e33a">https://github.com/apache/tomcat/commit/a95bf2b0303442a2c9a1ac364b0e63b56049e33a</a></li>
<li><a href="https://github.com/apache/tomcat/commit/9ffd23fc27f5d1fc95bf97e5cea175c8968f4533">https://github.com/apache/tomcat/commit/9ffd23fc27f5d1fc95bf97e5cea175c8968f4533</a></li>
<li><a href="https://github.com/apache/tomcat/commit/84c4af76e7a10fc7f8630ce62e6a46632ea4a90e">https://github.com/apache/tomcat/commit/84c4af76e7a10fc7f8630ce62e6a46632ea4a90e</a></li>
<li><a href="https://github.com/apache/tomcat/commit/84065e26ca4555e63a922bb29b13b0a1c86b7654">https://github.com/apache/tomcat/commit/84065e26ca4555e63a922bb29b13b0a1c86b7654</a></li>
<li><a href="https://github.com/apache/tomcat/commit/75ff7e8622edcc024b268677aa789ee8f0880ecc">https://github.com/apache/tomcat/commit/75ff7e8622edcc024b268677aa789ee8f0880ecc</a></li>
<li><a href="https://github.com/apache/tomcat/commit/722814668708c42a61b0c1e340b15bc2b785c0d1">https://github.com/apache/tomcat/commit/722814668708c42a61b0c1e340b15bc2b785c0d1</a></li>
<li><a href="https://github.com/apache/tomcat/commit/721544ea28e92549824b106be954a9f411867a1c">https://github.com/apache/tomcat/commit/721544ea28e92549824b106be954a9f411867a1c</a></li>
<li><a href="https://github.com/apache/tomcat/commit/54e56495e9a106218efe9fc9c79d976c0032bbfd">https://github.com/apache/tomcat/commit/54e56495e9a106218efe9fc9c79d976c0032bbfd</a></li>
<li><a href="https://github.com/apache/tomcat/commit/4f0236606961176257b883213e1621b1859ed746">https://github.com/apache/tomcat/commit/4f0236606961176257b883213e1621b1859ed746</a></li>
<li><a href="https://github.com/apache/tomcat/commit/4d5cc6538d91386f950373ac8120e98c2c78ed3a">https://github.com/apache/tomcat/commit/4d5cc6538d91386f950373ac8120e98c2c78ed3a</a></li>
<li><a href="https://github.com/apache/tomcat/commit/4a335c6dcba8d6f8a54629eda392a50da267bdf4">https://github.com/apache/tomcat/commit/4a335c6dcba8d6f8a54629eda392a50da267bdf4</a></li>
<li><a href="https://github.com/apache/tomcat/commit/3315a9027a7eaab18f42625b97b569940ff1365d">https://github.com/apache/tomcat/commit/3315a9027a7eaab18f42625b97b569940ff1365d</a></li>
<li><a href="https://github.com/apache/tomcat/commit/1d88dd3ffaed76188dd4ee32ce77709ce6e153cd">https://github.com/apache/tomcat/commit/1d88dd3ffaed76188dd4ee32ce77709ce6e153cd</a></li>
<li><a href="https://tomcat.apache.org/security-10.html#Fixed_in_Apache_Tomcat_10.1.34">https://tomcat.apache.org/security-10.html#Fixed_in_Apache_Tomcat_10.1.34</a></li>
<li><a href="https://tomcat.apache.org/security-11.html#Fixed_in_Apache_Tomcat_11.0.2">https://tomcat.apache.org/security-11.html#Fixed_in_Apache_Tomcat_11.0.2</a></li>
<li><a href="https://tomcat.apache.org/security-9.html#Fixed_in_Apache_Tomcat_9.0.98">https://tomcat.apache.org/security-9.html#Fixed_in_Apache_Tomcat_9.0.98</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2024/12/17/5">http://www.openwall.com/lists/oss-security/2024/12/17/5</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2024/12/17/6">http://www.openwall.com/lists/oss-security/2024/12/17/6</a></li>
<li><a href="https://github.com/advisories/GHSA-653p-vg55-5652">https://github.com/advisories/GHSA-653p-vg55-5652</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-653p-vg55-5652</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-12-17T15:31:43.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.apache.tomcat:tomcat-catalina] Apache Tomcat Uncontrolled Resource Consumption vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-653p-vg55-5652</id>
        <link href="https://github.com/advisories/GHSA-653p-vg55-5652"/>
        <updated>2024-12-17T21:36:04.000Z</updated>
        <content type="html"><![CDATA[<p>Uncontrolled Resource Consumption vulnerability in the examples web application provided with Apache Tomcat leads to denial of service.</p>
<p>This issue affects Apache Tomcat: from 11.0.0-M1 through 11.0.1, from 10.1.0-M1 through 10.1.33, from 9.0.0.M1 through 9.9.97.</p>
<p>Users are recommended to upgrade to version 11.0.2, 10.1.34 or 9.0.98, which fixes the issue.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-54677">https://nvd.nist.gov/vuln/detail/CVE-2024-54677</a></li>
<li><a href="https://lists.apache.org/thread/tdtbbxpg5trdwc2wnopcth9ccvdftq2n">https://lists.apache.org/thread/tdtbbxpg5trdwc2wnopcth9ccvdftq2n</a></li>
<li><a href="https://github.com/apache/tomcat/commit/f57a9d9847c1038be61f5818d73b8be907c460d4">https://github.com/apache/tomcat/commit/f57a9d9847c1038be61f5818d73b8be907c460d4</a></li>
<li><a href="https://github.com/apache/tomcat/commit/e8c16cdba833884e1bd49fff1f1cb699da177585">https://github.com/apache/tomcat/commit/e8c16cdba833884e1bd49fff1f1cb699da177585</a></li>
<li><a href="https://github.com/apache/tomcat/commit/dbec927859d9484cb8bd680a7c67b1a560f48444">https://github.com/apache/tomcat/commit/dbec927859d9484cb8bd680a7c67b1a560f48444</a></li>
<li><a href="https://github.com/apache/tomcat/commit/d63a10afc142b12f462a15f7d10f79fd80ff94eb">https://github.com/apache/tomcat/commit/d63a10afc142b12f462a15f7d10f79fd80ff94eb</a></li>
<li><a href="https://github.com/apache/tomcat/commit/cb1707685472994e9d924746f8c91cb116fa5213">https://github.com/apache/tomcat/commit/cb1707685472994e9d924746f8c91cb116fa5213</a></li>
<li><a href="https://github.com/apache/tomcat/commit/c2f7ce21c3fb12caefee87c517a8bb4f80700044">https://github.com/apache/tomcat/commit/c2f7ce21c3fb12caefee87c517a8bb4f80700044</a></li>
<li><a href="https://github.com/apache/tomcat/commit/c0a23927ea5e061ca3fdff695138464179fe674a">https://github.com/apache/tomcat/commit/c0a23927ea5e061ca3fdff695138464179fe674a</a></li>
<li><a href="https://github.com/apache/tomcat/commit/bbd82e9593314ade4cfd57248f9285fbad686f66">https://github.com/apache/tomcat/commit/bbd82e9593314ade4cfd57248f9285fbad686f66</a></li>
<li><a href="https://github.com/apache/tomcat/commit/aa5b4d0043289cf054f531ec55126c980d3572e1">https://github.com/apache/tomcat/commit/aa5b4d0043289cf054f531ec55126c980d3572e1</a></li>
<li><a href="https://github.com/apache/tomcat/commit/a95bf2b0303442a2c9a1ac364b0e63b56049e33a">https://github.com/apache/tomcat/commit/a95bf2b0303442a2c9a1ac364b0e63b56049e33a</a></li>
<li><a href="https://github.com/apache/tomcat/commit/9ffd23fc27f5d1fc95bf97e5cea175c8968f4533">https://github.com/apache/tomcat/commit/9ffd23fc27f5d1fc95bf97e5cea175c8968f4533</a></li>
<li><a href="https://github.com/apache/tomcat/commit/84c4af76e7a10fc7f8630ce62e6a46632ea4a90e">https://github.com/apache/tomcat/commit/84c4af76e7a10fc7f8630ce62e6a46632ea4a90e</a></li>
<li><a href="https://github.com/apache/tomcat/commit/84065e26ca4555e63a922bb29b13b0a1c86b7654">https://github.com/apache/tomcat/commit/84065e26ca4555e63a922bb29b13b0a1c86b7654</a></li>
<li><a href="https://github.com/apache/tomcat/commit/75ff7e8622edcc024b268677aa789ee8f0880ecc">https://github.com/apache/tomcat/commit/75ff7e8622edcc024b268677aa789ee8f0880ecc</a></li>
<li><a href="https://github.com/apache/tomcat/commit/722814668708c42a61b0c1e340b15bc2b785c0d1">https://github.com/apache/tomcat/commit/722814668708c42a61b0c1e340b15bc2b785c0d1</a></li>
<li><a href="https://github.com/apache/tomcat/commit/721544ea28e92549824b106be954a9f411867a1c">https://github.com/apache/tomcat/commit/721544ea28e92549824b106be954a9f411867a1c</a></li>
<li><a href="https://github.com/apache/tomcat/commit/54e56495e9a106218efe9fc9c79d976c0032bbfd">https://github.com/apache/tomcat/commit/54e56495e9a106218efe9fc9c79d976c0032bbfd</a></li>
<li><a href="https://github.com/apache/tomcat/commit/4f0236606961176257b883213e1621b1859ed746">https://github.com/apache/tomcat/commit/4f0236606961176257b883213e1621b1859ed746</a></li>
<li><a href="https://github.com/apache/tomcat/commit/4d5cc6538d91386f950373ac8120e98c2c78ed3a">https://github.com/apache/tomcat/commit/4d5cc6538d91386f950373ac8120e98c2c78ed3a</a></li>
<li><a href="https://github.com/apache/tomcat/commit/4a335c6dcba8d6f8a54629eda392a50da267bdf4">https://github.com/apache/tomcat/commit/4a335c6dcba8d6f8a54629eda392a50da267bdf4</a></li>
<li><a href="https://github.com/apache/tomcat/commit/3315a9027a7eaab18f42625b97b569940ff1365d">https://github.com/apache/tomcat/commit/3315a9027a7eaab18f42625b97b569940ff1365d</a></li>
<li><a href="https://github.com/apache/tomcat/commit/1d88dd3ffaed76188dd4ee32ce77709ce6e153cd">https://github.com/apache/tomcat/commit/1d88dd3ffaed76188dd4ee32ce77709ce6e153cd</a></li>
<li><a href="https://tomcat.apache.org/security-10.html#Fixed_in_Apache_Tomcat_10.1.34">https://tomcat.apache.org/security-10.html#Fixed_in_Apache_Tomcat_10.1.34</a></li>
<li><a href="https://tomcat.apache.org/security-11.html#Fixed_in_Apache_Tomcat_11.0.2">https://tomcat.apache.org/security-11.html#Fixed_in_Apache_Tomcat_11.0.2</a></li>
<li><a href="https://tomcat.apache.org/security-9.html#Fixed_in_Apache_Tomcat_9.0.98">https://tomcat.apache.org/security-9.html#Fixed_in_Apache_Tomcat_9.0.98</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2024/12/17/5">http://www.openwall.com/lists/oss-security/2024/12/17/5</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2024/12/17/6">http://www.openwall.com/lists/oss-security/2024/12/17/6</a></li>
<li><a href="https://github.com/advisories/GHSA-653p-vg55-5652">https://github.com/advisories/GHSA-653p-vg55-5652</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-653p-vg55-5652</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-12-17T15:31:43.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.apache.tomcat:tomcat-catalina] Apache Tomcat Time-of-check Time-of-use (TOCTOU) Race Condition vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-5j33-cvvr-w245</id>
        <link href="https://github.com/advisories/GHSA-5j33-cvvr-w245"/>
        <updated>2024-12-17T20:07:21.000Z</updated>
        <content type="html"><![CDATA[<p>Time-of-check Time-of-use (TOCTOU) Race Condition vulnerability during JSP compilation in Apache Tomcat permits an RCE on case insensitive file systems when the default servlet is enabled for write (non-default configuration).</p>
<p>This issue affects Apache Tomcat: from 11.0.0-M1 through 11.0.1, from 10.1.0-M1 through 10.1.33, from 9.0.0.M1 through 9.0.97.</p>
<p>Users are recommended to upgrade to version 11.0.2, 10.1.34 or 9.0.98, which fixes the issue.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-50379">https://nvd.nist.gov/vuln/detail/CVE-2024-50379</a></li>
<li><a href="https://lists.apache.org/thread/y6lj6q1xnp822g6ro70tn19sgtjmr80r">https://lists.apache.org/thread/y6lj6q1xnp822g6ro70tn19sgtjmr80r</a></li>
<li><a href="https://github.com/apache/tomcat/commit/05ddeeaa54df1e2dc427d0164bedd6b79f78d81f">https://github.com/apache/tomcat/commit/05ddeeaa54df1e2dc427d0164bedd6b79f78d81f</a></li>
<li><a href="https://github.com/apache/tomcat/commit/43b507ebac9d268b1ea3d908e296cc6e46795c00">https://github.com/apache/tomcat/commit/43b507ebac9d268b1ea3d908e296cc6e46795c00</a></li>
<li><a href="https://github.com/apache/tomcat/commit/631500b0c9b2a2a2abb707e3de2e10a5936e5d41">https://github.com/apache/tomcat/commit/631500b0c9b2a2a2abb707e3de2e10a5936e5d41</a></li>
<li><a href="https://github.com/apache/tomcat/commit/684247ae85fa633b9197b32391de59fc54703842">https://github.com/apache/tomcat/commit/684247ae85fa633b9197b32391de59fc54703842</a></li>
<li><a href="https://github.com/apache/tomcat/commit/8554f6b1722b33a2ce8b0a3fad37825f3a75f2d2">https://github.com/apache/tomcat/commit/8554f6b1722b33a2ce8b0a3fad37825f3a75f2d2</a></li>
<li><a href="https://github.com/apache/tomcat/commit/cc7a98b57c6dc1df21979fcff94a36e068f4456c">https://github.com/apache/tomcat/commit/cc7a98b57c6dc1df21979fcff94a36e068f4456c</a></li>
<li><a href="https://tomcat.apache.org/security-10.html#Fixed_in_Apache_Tomcat_10.1.34">https://tomcat.apache.org/security-10.html#Fixed_in_Apache_Tomcat_10.1.34</a></li>
<li><a href="https://tomcat.apache.org/security-11.html#Fixed_in_Apache_Tomcat_11.0.2">https://tomcat.apache.org/security-11.html#Fixed_in_Apache_Tomcat_11.0.2</a></li>
<li><a href="https://tomcat.apache.org/security-9.html#Fixed_in_Apache_Tomcat_9.0.98">https://tomcat.apache.org/security-9.html#Fixed_in_Apache_Tomcat_9.0.98</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2024/12/17/4">http://www.openwall.com/lists/oss-security/2024/12/17/4</a></li>
<li><a href="https://github.com/advisories/GHSA-5j33-cvvr-w245">https://github.com/advisories/GHSA-5j33-cvvr-w245</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-5j33-cvvr-w245</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-12-17T15:31:43.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.apache.tomcat:tomcat-catalina] Apache Tomcat Time-of-check Time-of-use (TOCTOU) Race Condition vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-5j33-cvvr-w245</id>
        <link href="https://github.com/advisories/GHSA-5j33-cvvr-w245"/>
        <updated>2024-12-17T20:07:21.000Z</updated>
        <content type="html"><![CDATA[<p>Time-of-check Time-of-use (TOCTOU) Race Condition vulnerability during JSP compilation in Apache Tomcat permits an RCE on case insensitive file systems when the default servlet is enabled for write (non-default configuration).</p>
<p>This issue affects Apache Tomcat: from 11.0.0-M1 through 11.0.1, from 10.1.0-M1 through 10.1.33, from 9.0.0.M1 through 9.0.97.</p>
<p>Users are recommended to upgrade to version 11.0.2, 10.1.34 or 9.0.98, which fixes the issue.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-50379">https://nvd.nist.gov/vuln/detail/CVE-2024-50379</a></li>
<li><a href="https://lists.apache.org/thread/y6lj6q1xnp822g6ro70tn19sgtjmr80r">https://lists.apache.org/thread/y6lj6q1xnp822g6ro70tn19sgtjmr80r</a></li>
<li><a href="https://github.com/apache/tomcat/commit/05ddeeaa54df1e2dc427d0164bedd6b79f78d81f">https://github.com/apache/tomcat/commit/05ddeeaa54df1e2dc427d0164bedd6b79f78d81f</a></li>
<li><a href="https://github.com/apache/tomcat/commit/43b507ebac9d268b1ea3d908e296cc6e46795c00">https://github.com/apache/tomcat/commit/43b507ebac9d268b1ea3d908e296cc6e46795c00</a></li>
<li><a href="https://github.com/apache/tomcat/commit/631500b0c9b2a2a2abb707e3de2e10a5936e5d41">https://github.com/apache/tomcat/commit/631500b0c9b2a2a2abb707e3de2e10a5936e5d41</a></li>
<li><a href="https://github.com/apache/tomcat/commit/684247ae85fa633b9197b32391de59fc54703842">https://github.com/apache/tomcat/commit/684247ae85fa633b9197b32391de59fc54703842</a></li>
<li><a href="https://github.com/apache/tomcat/commit/8554f6b1722b33a2ce8b0a3fad37825f3a75f2d2">https://github.com/apache/tomcat/commit/8554f6b1722b33a2ce8b0a3fad37825f3a75f2d2</a></li>
<li><a href="https://github.com/apache/tomcat/commit/cc7a98b57c6dc1df21979fcff94a36e068f4456c">https://github.com/apache/tomcat/commit/cc7a98b57c6dc1df21979fcff94a36e068f4456c</a></li>
<li><a href="https://tomcat.apache.org/security-10.html#Fixed_in_Apache_Tomcat_10.1.34">https://tomcat.apache.org/security-10.html#Fixed_in_Apache_Tomcat_10.1.34</a></li>
<li><a href="https://tomcat.apache.org/security-11.html#Fixed_in_Apache_Tomcat_11.0.2">https://tomcat.apache.org/security-11.html#Fixed_in_Apache_Tomcat_11.0.2</a></li>
<li><a href="https://tomcat.apache.org/security-9.html#Fixed_in_Apache_Tomcat_9.0.98">https://tomcat.apache.org/security-9.html#Fixed_in_Apache_Tomcat_9.0.98</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2024/12/17/4">http://www.openwall.com/lists/oss-security/2024/12/17/4</a></li>
<li><a href="https://github.com/advisories/GHSA-5j33-cvvr-w245">https://github.com/advisories/GHSA-5j33-cvvr-w245</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-5j33-cvvr-w245</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-12-17T15:31:43.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.apache.tomcat:tomcat-catalina] Apache Tomcat Time-of-check Time-of-use (TOCTOU) Race Condition vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-5j33-cvvr-w245</id>
        <link href="https://github.com/advisories/GHSA-5j33-cvvr-w245"/>
        <updated>2024-12-17T20:07:21.000Z</updated>
        <content type="html"><![CDATA[<p>Time-of-check Time-of-use (TOCTOU) Race Condition vulnerability during JSP compilation in Apache Tomcat permits an RCE on case insensitive file systems when the default servlet is enabled for write (non-default configuration).</p>
<p>This issue affects Apache Tomcat: from 11.0.0-M1 through 11.0.1, from 10.1.0-M1 through 10.1.33, from 9.0.0.M1 through 9.0.97.</p>
<p>Users are recommended to upgrade to version 11.0.2, 10.1.34 or 9.0.98, which fixes the issue.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-50379">https://nvd.nist.gov/vuln/detail/CVE-2024-50379</a></li>
<li><a href="https://lists.apache.org/thread/y6lj6q1xnp822g6ro70tn19sgtjmr80r">https://lists.apache.org/thread/y6lj6q1xnp822g6ro70tn19sgtjmr80r</a></li>
<li><a href="https://github.com/apache/tomcat/commit/05ddeeaa54df1e2dc427d0164bedd6b79f78d81f">https://github.com/apache/tomcat/commit/05ddeeaa54df1e2dc427d0164bedd6b79f78d81f</a></li>
<li><a href="https://github.com/apache/tomcat/commit/43b507ebac9d268b1ea3d908e296cc6e46795c00">https://github.com/apache/tomcat/commit/43b507ebac9d268b1ea3d908e296cc6e46795c00</a></li>
<li><a href="https://github.com/apache/tomcat/commit/631500b0c9b2a2a2abb707e3de2e10a5936e5d41">https://github.com/apache/tomcat/commit/631500b0c9b2a2a2abb707e3de2e10a5936e5d41</a></li>
<li><a href="https://github.com/apache/tomcat/commit/684247ae85fa633b9197b32391de59fc54703842">https://github.com/apache/tomcat/commit/684247ae85fa633b9197b32391de59fc54703842</a></li>
<li><a href="https://github.com/apache/tomcat/commit/8554f6b1722b33a2ce8b0a3fad37825f3a75f2d2">https://github.com/apache/tomcat/commit/8554f6b1722b33a2ce8b0a3fad37825f3a75f2d2</a></li>
<li><a href="https://github.com/apache/tomcat/commit/cc7a98b57c6dc1df21979fcff94a36e068f4456c">https://github.com/apache/tomcat/commit/cc7a98b57c6dc1df21979fcff94a36e068f4456c</a></li>
<li><a href="https://tomcat.apache.org/security-10.html#Fixed_in_Apache_Tomcat_10.1.34">https://tomcat.apache.org/security-10.html#Fixed_in_Apache_Tomcat_10.1.34</a></li>
<li><a href="https://tomcat.apache.org/security-11.html#Fixed_in_Apache_Tomcat_11.0.2">https://tomcat.apache.org/security-11.html#Fixed_in_Apache_Tomcat_11.0.2</a></li>
<li><a href="https://tomcat.apache.org/security-9.html#Fixed_in_Apache_Tomcat_9.0.98">https://tomcat.apache.org/security-9.html#Fixed_in_Apache_Tomcat_9.0.98</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2024/12/17/4">http://www.openwall.com/lists/oss-security/2024/12/17/4</a></li>
<li><a href="https://github.com/advisories/GHSA-5j33-cvvr-w245">https://github.com/advisories/GHSA-5j33-cvvr-w245</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-5j33-cvvr-w245</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-12-17T15:31:43.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.asynchttpclient:async-http-client] AsyncHttpClient (AHC) library's `CookieStore` replaces explicitly defined `Cookie`s]]></title>
        <id>https://github.com/advisories/GHSA-mfj5-cf8g-g2fv</id>
        <link href="https://github.com/advisories/GHSA-mfj5-cf8g-g2fv"/>
        <updated>2024-12-16T22:51:15.000Z</updated>
        <content type="html"><![CDATA[<h3 id="summary">Summary</h3>
<p>When making any HTTP request, the automatically enabled and self-managed <code>CookieStore</code> (aka cookie jar) will silently replace explicitly defined <code>Cookie</code>s with any that have the same name from the cookie jar. For services that operate with multiple users, this can result in one user's <code>Cookie</code> being used for another user's requests.</p>
<h3 id="details">Details</h3>
<p>This issue is described without security warnings here:</p>
<p><a href="https://github.com/AsyncHttpClient/async-http-client/issues/1964">https://github.com/AsyncHttpClient/async-http-client/issues/1964</a></p>
<p>A PR to fix this issue has been made:</p>
<p><a href="https://github.com/AsyncHttpClient/async-http-client/pull/2033">https://github.com/AsyncHttpClient/async-http-client/pull/2033</a></p>
<h3 id="poc">PoC</h3>
<ol>
<li>Add an auth <code>Cookie</code> to the <code>CookieStore</code><ul>
<li>This is identical to receiving an HTTP response that uses <code>Set-Cookie</code>, as shown in issue #1964 above.</li>
</ul>
</li>
<li>Handle a different user's request where the same <code>Cookie</code> is provided as a passthrough, like a JWT, and attempt to use it by explicitly providing it.</li>
<li>Observe that the user's cookie in step 2 is passed as the Cookie in step 1.</li>
</ol>
<h3 id="impact">Impact</h3>
<p>This is generally going to be a problem for developers of backend services that implement third party auth features and use other features like token refresh. The moment a third party service responds by <em>setting</em> a cookie in the response, the <code>CookieStore</code> will effectively break almost every follow-up request (hopefully by being rejected, but possibly by revealing a different user's information).</p>
<p>If your service sets cookies based on the response that happens here, it's possible to lead to even greater levels of exposure.</p>
<h3 id="workaroud">Workaroud</h3>
<p>You can avoid this issue by disabling the <code>CookieStore</code> during client creation:</p>
<pre><code class="language-java">DefaultAsyncHttpClientConfig.Builder clientBuilder = Dsl.config()
 .setCookieStore(null)
 // other configuration
 ;
### References

- &lt;https://github.com/AsyncHttpClient/async-http-client/security/advisories/GHSA-mfj5-cf8g-g2fv&gt;
- &lt;https://nvd.nist.gov/vuln/detail/CVE-2024-53990&gt;
- &lt;https://github.com/AsyncHttpClient/async-http-client/issues/1964&gt;
- &lt;https://github.com/AsyncHttpClient/async-http-client/pull/2033&gt;
- &lt;https://github.com/AsyncHttpClient/async-http-client/commit/d5a83362f7aed81b93ebca559746ac9be0f95425&gt;
- &lt;https://github.com/AsyncHttpClient/async-http-client/blob/main/CHANGES.md#from-20-to-21&gt;
- &lt;https://github.com/advisories/GHSA-mfj5-cf8g-g2fv&gt;
</code></pre>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-mfj5-cf8g-g2fv</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2024-12-02T20:04:43.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.asynchttpclient:async-http-client] AsyncHttpClient (AHC) library's `CookieStore` replaces explicitly defined `Cookie`s]]></title>
        <id>https://github.com/advisories/GHSA-mfj5-cf8g-g2fv</id>
        <link href="https://github.com/advisories/GHSA-mfj5-cf8g-g2fv"/>
        <updated>2024-12-16T22:51:15.000Z</updated>
        <content type="html"><![CDATA[<h3 id="summary">Summary</h3>
<p>When making any HTTP request, the automatically enabled and self-managed <code>CookieStore</code> (aka cookie jar) will silently replace explicitly defined <code>Cookie</code>s with any that have the same name from the cookie jar. For services that operate with multiple users, this can result in one user's <code>Cookie</code> being used for another user's requests.</p>
<h3 id="details">Details</h3>
<p>This issue is described without security warnings here:</p>
<p><a href="https://github.com/AsyncHttpClient/async-http-client/issues/1964">https://github.com/AsyncHttpClient/async-http-client/issues/1964</a></p>
<p>A PR to fix this issue has been made:</p>
<p><a href="https://github.com/AsyncHttpClient/async-http-client/pull/2033">https://github.com/AsyncHttpClient/async-http-client/pull/2033</a></p>
<h3 id="poc">PoC</h3>
<ol>
<li>Add an auth <code>Cookie</code> to the <code>CookieStore</code><ul>
<li>This is identical to receiving an HTTP response that uses <code>Set-Cookie</code>, as shown in issue #1964 above.</li>
</ul>
</li>
<li>Handle a different user's request where the same <code>Cookie</code> is provided as a passthrough, like a JWT, and attempt to use it by explicitly providing it.</li>
<li>Observe that the user's cookie in step 2 is passed as the Cookie in step 1.</li>
</ol>
<h3 id="impact">Impact</h3>
<p>This is generally going to be a problem for developers of backend services that implement third party auth features and use other features like token refresh. The moment a third party service responds by <em>setting</em> a cookie in the response, the <code>CookieStore</code> will effectively break almost every follow-up request (hopefully by being rejected, but possibly by revealing a different user's information).</p>
<p>If your service sets cookies based on the response that happens here, it's possible to lead to even greater levels of exposure.</p>
<h3 id="workaroud">Workaroud</h3>
<p>You can avoid this issue by disabling the <code>CookieStore</code> during client creation:</p>
<pre><code class="language-java">DefaultAsyncHttpClientConfig.Builder clientBuilder = Dsl.config()
 .setCookieStore(null)
 // other configuration
 ;
### References

- &lt;https://github.com/AsyncHttpClient/async-http-client/security/advisories/GHSA-mfj5-cf8g-g2fv&gt;
- &lt;https://nvd.nist.gov/vuln/detail/CVE-2024-53990&gt;
- &lt;https://github.com/AsyncHttpClient/async-http-client/issues/1964&gt;
- &lt;https://github.com/AsyncHttpClient/async-http-client/pull/2033&gt;
- &lt;https://github.com/AsyncHttpClient/async-http-client/commit/d5a83362f7aed81b93ebca559746ac9be0f95425&gt;
- &lt;https://github.com/AsyncHttpClient/async-http-client/blob/main/CHANGES.md#from-20-to-21&gt;
- &lt;https://github.com/advisories/GHSA-mfj5-cf8g-g2fv&gt;
</code></pre>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-mfj5-cf8g-g2fv</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2024-12-02T20:04:43.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.geoserver.web:gs-web-core] Welcome and About GeoServer pages communicate version and revision information]]></title>
        <id>https://github.com/advisories/GHSA-6pfc-w86r-54q6</id>
        <link href="https://github.com/advisories/GHSA-6pfc-w86r-54q6"/>
        <updated>2024-12-17T14:38:09.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>The welcome and about page includes version and revision information about the software in use (including library and components used).</p>
<p>This information is sensitive from a security point of view because it allows software used by the server to be easily identified.</p>
<h3 id="proof-of-concept">Proof of Concept</h3>
<ol>
<li><p>Welcome page footer: </p>
<img src="https://github.com/geoserver/geoserver/assets/629681/a7fd5151-55d5-432b-9d5d-79136833609f" alt="image" width="432">
</li>
<li><p>About page <em>build information</em>. </p>
<img src="https://github.com/geoserver/geoserver/assets/629681/59fcd8dd-eaee-4bf8-9578-a2a94b2864db" alt="image" width="401"></li>
</ol>
<h3 id="patches">Patches</h3>
<p>No patch presently available.</p>
<h3 id="workarounds">Workarounds</h3>
<p>No workaround available, although the ADMIN_CONSOLE can be disabled completely.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://docs.geoserver.org/latest/en/user/webadmin/about.html">About GeoServer</a></li>
</ul>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/geoserver/geoserver/security/advisories/GHSA-6pfc-w86r-54q6">https://github.com/geoserver/geoserver/security/advisories/GHSA-6pfc-w86r-54q6</a></li>
<li><a href="https://github.com/geoserver/geoserver/commit/5fd5f35ae176eff3cc4667a5cf48e4bf5dc4ea99">https://github.com/geoserver/geoserver/commit/5fd5f35ae176eff3cc4667a5cf48e4bf5dc4ea99</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-35230">https://nvd.nist.gov/vuln/detail/CVE-2024-35230</a></li>
<li><a href="https://github.com/geoserver/geoserver/commit/74fdab745a5deff20ac99abca24d8695fe1a52f8">https://github.com/geoserver/geoserver/commit/74fdab745a5deff20ac99abca24d8695fe1a52f8</a></li>
<li><a href="https://github.com/geoserver/geoserver/commit/8cd1590a604a10875de67b04995f1952f631f920">https://github.com/geoserver/geoserver/commit/8cd1590a604a10875de67b04995f1952f631f920</a></li>
<li><a href="https://github.com/advisories/GHSA-6pfc-w86r-54q6">https://github.com/advisories/GHSA-6pfc-w86r-54q6</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-6pfc-w86r-54q6</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-12-16T22:18:29.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.geoserver.web:gs-web-app] Welcome and About GeoServer pages communicate version and revision information]]></title>
        <id>https://github.com/advisories/GHSA-6pfc-w86r-54q6</id>
        <link href="https://github.com/advisories/GHSA-6pfc-w86r-54q6"/>
        <updated>2024-12-17T14:38:09.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>The welcome and about page includes version and revision information about the software in use (including library and components used).</p>
<p>This information is sensitive from a security point of view because it allows software used by the server to be easily identified.</p>
<h3 id="proof-of-concept">Proof of Concept</h3>
<ol>
<li><p>Welcome page footer: </p>
<img src="https://github.com/geoserver/geoserver/assets/629681/a7fd5151-55d5-432b-9d5d-79136833609f" alt="image" width="432">
</li>
<li><p>About page <em>build information</em>. </p>
<img src="https://github.com/geoserver/geoserver/assets/629681/59fcd8dd-eaee-4bf8-9578-a2a94b2864db" alt="image" width="401"></li>
</ol>
<h3 id="patches">Patches</h3>
<p>No patch presently available.</p>
<h3 id="workarounds">Workarounds</h3>
<p>No workaround available, although the ADMIN_CONSOLE can be disabled completely.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://docs.geoserver.org/latest/en/user/webadmin/about.html">About GeoServer</a></li>
</ul>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/geoserver/geoserver/security/advisories/GHSA-6pfc-w86r-54q6">https://github.com/geoserver/geoserver/security/advisories/GHSA-6pfc-w86r-54q6</a></li>
<li><a href="https://github.com/geoserver/geoserver/commit/5fd5f35ae176eff3cc4667a5cf48e4bf5dc4ea99">https://github.com/geoserver/geoserver/commit/5fd5f35ae176eff3cc4667a5cf48e4bf5dc4ea99</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-35230">https://nvd.nist.gov/vuln/detail/CVE-2024-35230</a></li>
<li><a href="https://github.com/geoserver/geoserver/commit/74fdab745a5deff20ac99abca24d8695fe1a52f8">https://github.com/geoserver/geoserver/commit/74fdab745a5deff20ac99abca24d8695fe1a52f8</a></li>
<li><a href="https://github.com/geoserver/geoserver/commit/8cd1590a604a10875de67b04995f1952f631f920">https://github.com/geoserver/geoserver/commit/8cd1590a604a10875de67b04995f1952f631f920</a></li>
<li><a href="https://github.com/advisories/GHSA-6pfc-w86r-54q6">https://github.com/advisories/GHSA-6pfc-w86r-54q6</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-6pfc-w86r-54q6</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-12-16T22:18:29.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[com.querydsl:querydsl-apt] Querydsl vulnerable to HQL injection trough orderBy]]></title>
        <id>https://github.com/advisories/GHSA-6q3q-6v5j-h6vg</id>
        <link href="https://github.com/advisories/GHSA-6q3q-6v5j-h6vg"/>
        <updated>2024-12-16T21:26:13.000Z</updated>
        <content type="html"><![CDATA[<h3 id="summary">Summary</h3>
<p>The order by method enables injecting HQL queries. This may cause blind HQL injection, which could lead to leakage of sensitive information, and potentially also Denial Of Service. This vulnerability is present since the original querydsl repository(<a href="https://github.com/querydsl/querydsl">https://github.com/querydsl/querydsl</a>) where it was assigned preliminary CVE identifier <strong>CVE-2024-49203</strong>.</p>
<h3 id="details">Details</h3>
<p>Vulnerable code may look as follows:</p>
<pre><code>@GetMapping
public List&lt;Test&gt; getProducts(@RequestParam("orderBy") String orderBy) {
    JPAQuery&lt;Test&gt; query = new JPAQuery&lt;Test&gt;(entityManager).from(test);
    PathBuilder&lt;Test&gt; pathBuilder = new PathBuilder&lt;&gt;(Test.class, "test");

    OrderSpecifier order = new OrderSpecifier(Order.ASC, pathBuilder.get(orderBy));
    JPAQuery&lt;Test&gt; orderedQuery = query.orderBy(order);
    return orderedQuery.fetch();
}
</code></pre>
<p>Where vulnerability is either caused by <code>pathBuilder.get(orderBy)</code> or the <code>orderBy(order)</code> method itself, based on where the security checks are expected.</p>
<h3 id="poc">PoC</h3>
<p>Full POC code is available in repository:
<a href="https://github.com/CSIRTTrizna/CVE-2024-49203/">https://github.com/CSIRTTrizna/CVE-2024-49203/</a>
When we take a look at source code shown in Details section the functionality is as follows:</p>
<ol>
<li>Create JPAQuery object instance:</li>
</ol>
<pre><code>JPAQuery&lt;Test&gt; query = new JPAQuery&lt;Test&gt;(entityManager).from(test);
</code></pre>
<ol start="2">
<li>Create OrderSpecifier object instance:</li>
</ol>
<pre><code>PathBuilder&lt;Test&gt; pathBuilder = new PathBuilder&lt;&gt;(Test.class, "test");
OrderSpecifier order = new OrderSpecifier(Order.ASC, pathBuilder.get(orderBy));
</code></pre>
<p>Where orderBy variable is user provided input.</p>
<ol start="3">
<li>order and run the query</li>
</ol>
<pre><code>JPAQuery&lt;Test&gt; orderedQuery = query.orderBy(order);
orderedQuery.fetch();
</code></pre>
<p>When user goes to URL 
<code>/products?orderBy=name+INTERSECT+SELECT+t+FROM+Test+t+WHERE+(SELECT+cast(pg_sleep(10) AS text))='2'+ORDER+BY+t.id</code>
The generated query will look something like this:</p>
<pre><code>select test                                                                                                                                     
from Test test
order by test.name INTERSECT SELECT t FROM Test t WHERE (SELECT cast(pg_sleep(10) AS text))='2' ORDER BY t.id asc
</code></pre>
<h4 id="environment">Environment</h4>
<p>Library versions used in proof of concept to reproduce the vulnerability:</p>
<pre><code>querydsl-jpa: 6.8.0
querydsl-apt: 6.8.0
hibernate-core: 6.1.1.Final
jakarta.persistence-api: 3.1.0
postgresql: 42.7.4
</code></pre>
<h3 id="impact">Impact</h3>
<p>The vulnerability is HQL injection, so anyone using source code similar to one provided in details is exposed to potentional information leakage and denial of service.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/OpenFeign/querydsl/security/advisories/GHSA-6q3q-6v5j-h6vg">https://github.com/OpenFeign/querydsl/security/advisories/GHSA-6q3q-6v5j-h6vg</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-49203">https://nvd.nist.gov/vuln/detail/CVE-2024-49203</a></li>
<li><a href="https://github.com/querydsl/querydsl/issues/3757">https://github.com/querydsl/querydsl/issues/3757</a></li>
<li><a href="https://github.com/CSIRTTrizna/CVE-2024-49203">https://github.com/CSIRTTrizna/CVE-2024-49203</a></li>
<li><a href="https://github.com/querydsl/querydsl/releases/tag/QUERYDSL_5_1_0">https://github.com/querydsl/querydsl/releases/tag/QUERYDSL_5_1_0</a></li>
<li><a href="https://www.csirt.sk/querydsl-java-library-vulnerability-permits-sql-hql-injection.html">https://www.csirt.sk/querydsl-java-library-vulnerability-permits-sql-hql-injection.html</a></li>
<li><a href="https://github.com/OpenFeign/querydsl/releases/tag/5.6.1">https://github.com/OpenFeign/querydsl/releases/tag/5.6.1</a></li>
<li><a href="https://github.com/OpenFeign/querydsl/releases/tag/6.10.1">https://github.com/OpenFeign/querydsl/releases/tag/6.10.1</a></li>
<li><a href="https://github.com/advisories/GHSA-6q3q-6v5j-h6vg">https://github.com/advisories/GHSA-6q3q-6v5j-h6vg</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-6q3q-6v5j-h6vg</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-11-27T19:00:53.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[com.querydsl:querydsl-jpa] Querydsl vulnerable to HQL injection trough orderBy]]></title>
        <id>https://github.com/advisories/GHSA-6q3q-6v5j-h6vg</id>
        <link href="https://github.com/advisories/GHSA-6q3q-6v5j-h6vg"/>
        <updated>2024-12-16T21:26:13.000Z</updated>
        <content type="html"><![CDATA[<h3 id="summary">Summary</h3>
<p>The order by method enables injecting HQL queries. This may cause blind HQL injection, which could lead to leakage of sensitive information, and potentially also Denial Of Service. This vulnerability is present since the original querydsl repository(<a href="https://github.com/querydsl/querydsl">https://github.com/querydsl/querydsl</a>) where it was assigned preliminary CVE identifier <strong>CVE-2024-49203</strong>.</p>
<h3 id="details">Details</h3>
<p>Vulnerable code may look as follows:</p>
<pre><code>@GetMapping
public List&lt;Test&gt; getProducts(@RequestParam("orderBy") String orderBy) {
    JPAQuery&lt;Test&gt; query = new JPAQuery&lt;Test&gt;(entityManager).from(test);
    PathBuilder&lt;Test&gt; pathBuilder = new PathBuilder&lt;&gt;(Test.class, "test");

    OrderSpecifier order = new OrderSpecifier(Order.ASC, pathBuilder.get(orderBy));
    JPAQuery&lt;Test&gt; orderedQuery = query.orderBy(order);
    return orderedQuery.fetch();
}
</code></pre>
<p>Where vulnerability is either caused by <code>pathBuilder.get(orderBy)</code> or the <code>orderBy(order)</code> method itself, based on where the security checks are expected.</p>
<h3 id="poc">PoC</h3>
<p>Full POC code is available in repository:
<a href="https://github.com/CSIRTTrizna/CVE-2024-49203/">https://github.com/CSIRTTrizna/CVE-2024-49203/</a>
When we take a look at source code shown in Details section the functionality is as follows:</p>
<ol>
<li>Create JPAQuery object instance:</li>
</ol>
<pre><code>JPAQuery&lt;Test&gt; query = new JPAQuery&lt;Test&gt;(entityManager).from(test);
</code></pre>
<ol start="2">
<li>Create OrderSpecifier object instance:</li>
</ol>
<pre><code>PathBuilder&lt;Test&gt; pathBuilder = new PathBuilder&lt;&gt;(Test.class, "test");
OrderSpecifier order = new OrderSpecifier(Order.ASC, pathBuilder.get(orderBy));
</code></pre>
<p>Where orderBy variable is user provided input.</p>
<ol start="3">
<li>order and run the query</li>
</ol>
<pre><code>JPAQuery&lt;Test&gt; orderedQuery = query.orderBy(order);
orderedQuery.fetch();
</code></pre>
<p>When user goes to URL 
<code>/products?orderBy=name+INTERSECT+SELECT+t+FROM+Test+t+WHERE+(SELECT+cast(pg_sleep(10) AS text))='2'+ORDER+BY+t.id</code>
The generated query will look something like this:</p>
<pre><code>select test                                                                                                                                     
from Test test
order by test.name INTERSECT SELECT t FROM Test t WHERE (SELECT cast(pg_sleep(10) AS text))='2' ORDER BY t.id asc
</code></pre>
<h4 id="environment">Environment</h4>
<p>Library versions used in proof of concept to reproduce the vulnerability:</p>
<pre><code>querydsl-jpa: 6.8.0
querydsl-apt: 6.8.0
hibernate-core: 6.1.1.Final
jakarta.persistence-api: 3.1.0
postgresql: 42.7.4
</code></pre>
<h3 id="impact">Impact</h3>
<p>The vulnerability is HQL injection, so anyone using source code similar to one provided in details is exposed to potentional information leakage and denial of service.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/OpenFeign/querydsl/security/advisories/GHSA-6q3q-6v5j-h6vg">https://github.com/OpenFeign/querydsl/security/advisories/GHSA-6q3q-6v5j-h6vg</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-49203">https://nvd.nist.gov/vuln/detail/CVE-2024-49203</a></li>
<li><a href="https://github.com/querydsl/querydsl/issues/3757">https://github.com/querydsl/querydsl/issues/3757</a></li>
<li><a href="https://github.com/CSIRTTrizna/CVE-2024-49203">https://github.com/CSIRTTrizna/CVE-2024-49203</a></li>
<li><a href="https://github.com/querydsl/querydsl/releases/tag/QUERYDSL_5_1_0">https://github.com/querydsl/querydsl/releases/tag/QUERYDSL_5_1_0</a></li>
<li><a href="https://www.csirt.sk/querydsl-java-library-vulnerability-permits-sql-hql-injection.html">https://www.csirt.sk/querydsl-java-library-vulnerability-permits-sql-hql-injection.html</a></li>
<li><a href="https://github.com/OpenFeign/querydsl/releases/tag/5.6.1">https://github.com/OpenFeign/querydsl/releases/tag/5.6.1</a></li>
<li><a href="https://github.com/OpenFeign/querydsl/releases/tag/6.10.1">https://github.com/OpenFeign/querydsl/releases/tag/6.10.1</a></li>
<li><a href="https://github.com/advisories/GHSA-6q3q-6v5j-h6vg">https://github.com/advisories/GHSA-6q3q-6v5j-h6vg</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-6q3q-6v5j-h6vg</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-11-27T19:00:53.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[io.github.openfeign.querydsl:querydsl-apt] Querydsl vulnerable to HQL injection trough orderBy]]></title>
        <id>https://github.com/advisories/GHSA-6q3q-6v5j-h6vg</id>
        <link href="https://github.com/advisories/GHSA-6q3q-6v5j-h6vg"/>
        <updated>2024-12-16T21:26:13.000Z</updated>
        <content type="html"><![CDATA[<h3 id="summary">Summary</h3>
<p>The order by method enables injecting HQL queries. This may cause blind HQL injection, which could lead to leakage of sensitive information, and potentially also Denial Of Service. This vulnerability is present since the original querydsl repository(<a href="https://github.com/querydsl/querydsl">https://github.com/querydsl/querydsl</a>) where it was assigned preliminary CVE identifier <strong>CVE-2024-49203</strong>.</p>
<h3 id="details">Details</h3>
<p>Vulnerable code may look as follows:</p>
<pre><code>@GetMapping
public List&lt;Test&gt; getProducts(@RequestParam("orderBy") String orderBy) {
    JPAQuery&lt;Test&gt; query = new JPAQuery&lt;Test&gt;(entityManager).from(test);
    PathBuilder&lt;Test&gt; pathBuilder = new PathBuilder&lt;&gt;(Test.class, "test");

    OrderSpecifier order = new OrderSpecifier(Order.ASC, pathBuilder.get(orderBy));
    JPAQuery&lt;Test&gt; orderedQuery = query.orderBy(order);
    return orderedQuery.fetch();
}
</code></pre>
<p>Where vulnerability is either caused by <code>pathBuilder.get(orderBy)</code> or the <code>orderBy(order)</code> method itself, based on where the security checks are expected.</p>
<h3 id="poc">PoC</h3>
<p>Full POC code is available in repository:
<a href="https://github.com/CSIRTTrizna/CVE-2024-49203/">https://github.com/CSIRTTrizna/CVE-2024-49203/</a>
When we take a look at source code shown in Details section the functionality is as follows:</p>
<ol>
<li>Create JPAQuery object instance:</li>
</ol>
<pre><code>JPAQuery&lt;Test&gt; query = new JPAQuery&lt;Test&gt;(entityManager).from(test);
</code></pre>
<ol start="2">
<li>Create OrderSpecifier object instance:</li>
</ol>
<pre><code>PathBuilder&lt;Test&gt; pathBuilder = new PathBuilder&lt;&gt;(Test.class, "test");
OrderSpecifier order = new OrderSpecifier(Order.ASC, pathBuilder.get(orderBy));
</code></pre>
<p>Where orderBy variable is user provided input.</p>
<ol start="3">
<li>order and run the query</li>
</ol>
<pre><code>JPAQuery&lt;Test&gt; orderedQuery = query.orderBy(order);
orderedQuery.fetch();
</code></pre>
<p>When user goes to URL 
<code>/products?orderBy=name+INTERSECT+SELECT+t+FROM+Test+t+WHERE+(SELECT+cast(pg_sleep(10) AS text))='2'+ORDER+BY+t.id</code>
The generated query will look something like this:</p>
<pre><code>select test                                                                                                                                     
from Test test
order by test.name INTERSECT SELECT t FROM Test t WHERE (SELECT cast(pg_sleep(10) AS text))='2' ORDER BY t.id asc
</code></pre>
<h4 id="environment">Environment</h4>
<p>Library versions used in proof of concept to reproduce the vulnerability:</p>
<pre><code>querydsl-jpa: 6.8.0
querydsl-apt: 6.8.0
hibernate-core: 6.1.1.Final
jakarta.persistence-api: 3.1.0
postgresql: 42.7.4
</code></pre>
<h3 id="impact">Impact</h3>
<p>The vulnerability is HQL injection, so anyone using source code similar to one provided in details is exposed to potentional information leakage and denial of service.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/OpenFeign/querydsl/security/advisories/GHSA-6q3q-6v5j-h6vg">https://github.com/OpenFeign/querydsl/security/advisories/GHSA-6q3q-6v5j-h6vg</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-49203">https://nvd.nist.gov/vuln/detail/CVE-2024-49203</a></li>
<li><a href="https://github.com/querydsl/querydsl/issues/3757">https://github.com/querydsl/querydsl/issues/3757</a></li>
<li><a href="https://github.com/CSIRTTrizna/CVE-2024-49203">https://github.com/CSIRTTrizna/CVE-2024-49203</a></li>
<li><a href="https://github.com/querydsl/querydsl/releases/tag/QUERYDSL_5_1_0">https://github.com/querydsl/querydsl/releases/tag/QUERYDSL_5_1_0</a></li>
<li><a href="https://www.csirt.sk/querydsl-java-library-vulnerability-permits-sql-hql-injection.html">https://www.csirt.sk/querydsl-java-library-vulnerability-permits-sql-hql-injection.html</a></li>
<li><a href="https://github.com/OpenFeign/querydsl/releases/tag/5.6.1">https://github.com/OpenFeign/querydsl/releases/tag/5.6.1</a></li>
<li><a href="https://github.com/OpenFeign/querydsl/releases/tag/6.10.1">https://github.com/OpenFeign/querydsl/releases/tag/6.10.1</a></li>
<li><a href="https://github.com/advisories/GHSA-6q3q-6v5j-h6vg">https://github.com/advisories/GHSA-6q3q-6v5j-h6vg</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-6q3q-6v5j-h6vg</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-11-27T19:00:53.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[io.github.openfeign.querydsl:querydsl-jpa] Querydsl vulnerable to HQL injection trough orderBy]]></title>
        <id>https://github.com/advisories/GHSA-6q3q-6v5j-h6vg</id>
        <link href="https://github.com/advisories/GHSA-6q3q-6v5j-h6vg"/>
        <updated>2024-12-16T21:26:13.000Z</updated>
        <content type="html"><![CDATA[<h3 id="summary">Summary</h3>
<p>The order by method enables injecting HQL queries. This may cause blind HQL injection, which could lead to leakage of sensitive information, and potentially also Denial Of Service. This vulnerability is present since the original querydsl repository(<a href="https://github.com/querydsl/querydsl">https://github.com/querydsl/querydsl</a>) where it was assigned preliminary CVE identifier <strong>CVE-2024-49203</strong>.</p>
<h3 id="details">Details</h3>
<p>Vulnerable code may look as follows:</p>
<pre><code>@GetMapping
public List&lt;Test&gt; getProducts(@RequestParam("orderBy") String orderBy) {
    JPAQuery&lt;Test&gt; query = new JPAQuery&lt;Test&gt;(entityManager).from(test);
    PathBuilder&lt;Test&gt; pathBuilder = new PathBuilder&lt;&gt;(Test.class, "test");

    OrderSpecifier order = new OrderSpecifier(Order.ASC, pathBuilder.get(orderBy));
    JPAQuery&lt;Test&gt; orderedQuery = query.orderBy(order);
    return orderedQuery.fetch();
}
</code></pre>
<p>Where vulnerability is either caused by <code>pathBuilder.get(orderBy)</code> or the <code>orderBy(order)</code> method itself, based on where the security checks are expected.</p>
<h3 id="poc">PoC</h3>
<p>Full POC code is available in repository:
<a href="https://github.com/CSIRTTrizna/CVE-2024-49203/">https://github.com/CSIRTTrizna/CVE-2024-49203/</a>
When we take a look at source code shown in Details section the functionality is as follows:</p>
<ol>
<li>Create JPAQuery object instance:</li>
</ol>
<pre><code>JPAQuery&lt;Test&gt; query = new JPAQuery&lt;Test&gt;(entityManager).from(test);
</code></pre>
<ol start="2">
<li>Create OrderSpecifier object instance:</li>
</ol>
<pre><code>PathBuilder&lt;Test&gt; pathBuilder = new PathBuilder&lt;&gt;(Test.class, "test");
OrderSpecifier order = new OrderSpecifier(Order.ASC, pathBuilder.get(orderBy));
</code></pre>
<p>Where orderBy variable is user provided input.</p>
<ol start="3">
<li>order and run the query</li>
</ol>
<pre><code>JPAQuery&lt;Test&gt; orderedQuery = query.orderBy(order);
orderedQuery.fetch();
</code></pre>
<p>When user goes to URL 
<code>/products?orderBy=name+INTERSECT+SELECT+t+FROM+Test+t+WHERE+(SELECT+cast(pg_sleep(10) AS text))='2'+ORDER+BY+t.id</code>
The generated query will look something like this:</p>
<pre><code>select test                                                                                                                                     
from Test test
order by test.name INTERSECT SELECT t FROM Test t WHERE (SELECT cast(pg_sleep(10) AS text))='2' ORDER BY t.id asc
</code></pre>
<h4 id="environment">Environment</h4>
<p>Library versions used in proof of concept to reproduce the vulnerability:</p>
<pre><code>querydsl-jpa: 6.8.0
querydsl-apt: 6.8.0
hibernate-core: 6.1.1.Final
jakarta.persistence-api: 3.1.0
postgresql: 42.7.4
</code></pre>
<h3 id="impact">Impact</h3>
<p>The vulnerability is HQL injection, so anyone using source code similar to one provided in details is exposed to potentional information leakage and denial of service.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/OpenFeign/querydsl/security/advisories/GHSA-6q3q-6v5j-h6vg">https://github.com/OpenFeign/querydsl/security/advisories/GHSA-6q3q-6v5j-h6vg</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-49203">https://nvd.nist.gov/vuln/detail/CVE-2024-49203</a></li>
<li><a href="https://github.com/querydsl/querydsl/issues/3757">https://github.com/querydsl/querydsl/issues/3757</a></li>
<li><a href="https://github.com/CSIRTTrizna/CVE-2024-49203">https://github.com/CSIRTTrizna/CVE-2024-49203</a></li>
<li><a href="https://github.com/querydsl/querydsl/releases/tag/QUERYDSL_5_1_0">https://github.com/querydsl/querydsl/releases/tag/QUERYDSL_5_1_0</a></li>
<li><a href="https://www.csirt.sk/querydsl-java-library-vulnerability-permits-sql-hql-injection.html">https://www.csirt.sk/querydsl-java-library-vulnerability-permits-sql-hql-injection.html</a></li>
<li><a href="https://github.com/OpenFeign/querydsl/releases/tag/5.6.1">https://github.com/OpenFeign/querydsl/releases/tag/5.6.1</a></li>
<li><a href="https://github.com/OpenFeign/querydsl/releases/tag/6.10.1">https://github.com/OpenFeign/querydsl/releases/tag/6.10.1</a></li>
<li><a href="https://github.com/advisories/GHSA-6q3q-6v5j-h6vg">https://github.com/advisories/GHSA-6q3q-6v5j-h6vg</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-6q3q-6v5j-h6vg</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-11-27T19:00:53.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[io.github.openfeign.querydsl:querydsl-apt] Querydsl vulnerable to HQL injection trough orderBy]]></title>
        <id>https://github.com/advisories/GHSA-6q3q-6v5j-h6vg</id>
        <link href="https://github.com/advisories/GHSA-6q3q-6v5j-h6vg"/>
        <updated>2024-12-16T21:26:13.000Z</updated>
        <content type="html"><![CDATA[<h3 id="summary">Summary</h3>
<p>The order by method enables injecting HQL queries. This may cause blind HQL injection, which could lead to leakage of sensitive information, and potentially also Denial Of Service. This vulnerability is present since the original querydsl repository(<a href="https://github.com/querydsl/querydsl">https://github.com/querydsl/querydsl</a>) where it was assigned preliminary CVE identifier <strong>CVE-2024-49203</strong>.</p>
<h3 id="details">Details</h3>
<p>Vulnerable code may look as follows:</p>
<pre><code>@GetMapping
public List&lt;Test&gt; getProducts(@RequestParam("orderBy") String orderBy) {
    JPAQuery&lt;Test&gt; query = new JPAQuery&lt;Test&gt;(entityManager).from(test);
    PathBuilder&lt;Test&gt; pathBuilder = new PathBuilder&lt;&gt;(Test.class, "test");

    OrderSpecifier order = new OrderSpecifier(Order.ASC, pathBuilder.get(orderBy));
    JPAQuery&lt;Test&gt; orderedQuery = query.orderBy(order);
    return orderedQuery.fetch();
}
</code></pre>
<p>Where vulnerability is either caused by <code>pathBuilder.get(orderBy)</code> or the <code>orderBy(order)</code> method itself, based on where the security checks are expected.</p>
<h3 id="poc">PoC</h3>
<p>Full POC code is available in repository:
<a href="https://github.com/CSIRTTrizna/CVE-2024-49203/">https://github.com/CSIRTTrizna/CVE-2024-49203/</a>
When we take a look at source code shown in Details section the functionality is as follows:</p>
<ol>
<li>Create JPAQuery object instance:</li>
</ol>
<pre><code>JPAQuery&lt;Test&gt; query = new JPAQuery&lt;Test&gt;(entityManager).from(test);
</code></pre>
<ol start="2">
<li>Create OrderSpecifier object instance:</li>
</ol>
<pre><code>PathBuilder&lt;Test&gt; pathBuilder = new PathBuilder&lt;&gt;(Test.class, "test");
OrderSpecifier order = new OrderSpecifier(Order.ASC, pathBuilder.get(orderBy));
</code></pre>
<p>Where orderBy variable is user provided input.</p>
<ol start="3">
<li>order and run the query</li>
</ol>
<pre><code>JPAQuery&lt;Test&gt; orderedQuery = query.orderBy(order);
orderedQuery.fetch();
</code></pre>
<p>When user goes to URL 
<code>/products?orderBy=name+INTERSECT+SELECT+t+FROM+Test+t+WHERE+(SELECT+cast(pg_sleep(10) AS text))='2'+ORDER+BY+t.id</code>
The generated query will look something like this:</p>
<pre><code>select test                                                                                                                                     
from Test test
order by test.name INTERSECT SELECT t FROM Test t WHERE (SELECT cast(pg_sleep(10) AS text))='2' ORDER BY t.id asc
</code></pre>
<h4 id="environment">Environment</h4>
<p>Library versions used in proof of concept to reproduce the vulnerability:</p>
<pre><code>querydsl-jpa: 6.8.0
querydsl-apt: 6.8.0
hibernate-core: 6.1.1.Final
jakarta.persistence-api: 3.1.0
postgresql: 42.7.4
</code></pre>
<h3 id="impact">Impact</h3>
<p>The vulnerability is HQL injection, so anyone using source code similar to one provided in details is exposed to potentional information leakage and denial of service.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/OpenFeign/querydsl/security/advisories/GHSA-6q3q-6v5j-h6vg">https://github.com/OpenFeign/querydsl/security/advisories/GHSA-6q3q-6v5j-h6vg</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-49203">https://nvd.nist.gov/vuln/detail/CVE-2024-49203</a></li>
<li><a href="https://github.com/querydsl/querydsl/issues/3757">https://github.com/querydsl/querydsl/issues/3757</a></li>
<li><a href="https://github.com/CSIRTTrizna/CVE-2024-49203">https://github.com/CSIRTTrizna/CVE-2024-49203</a></li>
<li><a href="https://github.com/querydsl/querydsl/releases/tag/QUERYDSL_5_1_0">https://github.com/querydsl/querydsl/releases/tag/QUERYDSL_5_1_0</a></li>
<li><a href="https://www.csirt.sk/querydsl-java-library-vulnerability-permits-sql-hql-injection.html">https://www.csirt.sk/querydsl-java-library-vulnerability-permits-sql-hql-injection.html</a></li>
<li><a href="https://github.com/OpenFeign/querydsl/releases/tag/5.6.1">https://github.com/OpenFeign/querydsl/releases/tag/5.6.1</a></li>
<li><a href="https://github.com/OpenFeign/querydsl/releases/tag/6.10.1">https://github.com/OpenFeign/querydsl/releases/tag/6.10.1</a></li>
<li><a href="https://github.com/advisories/GHSA-6q3q-6v5j-h6vg">https://github.com/advisories/GHSA-6q3q-6v5j-h6vg</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-6q3q-6v5j-h6vg</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-11-27T19:00:53.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[io.github.openfeign.querydsl:querydsl-jpa] Querydsl vulnerable to HQL injection trough orderBy]]></title>
        <id>https://github.com/advisories/GHSA-6q3q-6v5j-h6vg</id>
        <link href="https://github.com/advisories/GHSA-6q3q-6v5j-h6vg"/>
        <updated>2024-12-16T21:26:13.000Z</updated>
        <content type="html"><![CDATA[<h3 id="summary">Summary</h3>
<p>The order by method enables injecting HQL queries. This may cause blind HQL injection, which could lead to leakage of sensitive information, and potentially also Denial Of Service. This vulnerability is present since the original querydsl repository(<a href="https://github.com/querydsl/querydsl">https://github.com/querydsl/querydsl</a>) where it was assigned preliminary CVE identifier <strong>CVE-2024-49203</strong>.</p>
<h3 id="details">Details</h3>
<p>Vulnerable code may look as follows:</p>
<pre><code>@GetMapping
public List&lt;Test&gt; getProducts(@RequestParam("orderBy") String orderBy) {
    JPAQuery&lt;Test&gt; query = new JPAQuery&lt;Test&gt;(entityManager).from(test);
    PathBuilder&lt;Test&gt; pathBuilder = new PathBuilder&lt;&gt;(Test.class, "test");

    OrderSpecifier order = new OrderSpecifier(Order.ASC, pathBuilder.get(orderBy));
    JPAQuery&lt;Test&gt; orderedQuery = query.orderBy(order);
    return orderedQuery.fetch();
}
</code></pre>
<p>Where vulnerability is either caused by <code>pathBuilder.get(orderBy)</code> or the <code>orderBy(order)</code> method itself, based on where the security checks are expected.</p>
<h3 id="poc">PoC</h3>
<p>Full POC code is available in repository:
<a href="https://github.com/CSIRTTrizna/CVE-2024-49203/">https://github.com/CSIRTTrizna/CVE-2024-49203/</a>
When we take a look at source code shown in Details section the functionality is as follows:</p>
<ol>
<li>Create JPAQuery object instance:</li>
</ol>
<pre><code>JPAQuery&lt;Test&gt; query = new JPAQuery&lt;Test&gt;(entityManager).from(test);
</code></pre>
<ol start="2">
<li>Create OrderSpecifier object instance:</li>
</ol>
<pre><code>PathBuilder&lt;Test&gt; pathBuilder = new PathBuilder&lt;&gt;(Test.class, "test");
OrderSpecifier order = new OrderSpecifier(Order.ASC, pathBuilder.get(orderBy));
</code></pre>
<p>Where orderBy variable is user provided input.</p>
<ol start="3">
<li>order and run the query</li>
</ol>
<pre><code>JPAQuery&lt;Test&gt; orderedQuery = query.orderBy(order);
orderedQuery.fetch();
</code></pre>
<p>When user goes to URL 
<code>/products?orderBy=name+INTERSECT+SELECT+t+FROM+Test+t+WHERE+(SELECT+cast(pg_sleep(10) AS text))='2'+ORDER+BY+t.id</code>
The generated query will look something like this:</p>
<pre><code>select test                                                                                                                                     
from Test test
order by test.name INTERSECT SELECT t FROM Test t WHERE (SELECT cast(pg_sleep(10) AS text))='2' ORDER BY t.id asc
</code></pre>
<h4 id="environment">Environment</h4>
<p>Library versions used in proof of concept to reproduce the vulnerability:</p>
<pre><code>querydsl-jpa: 6.8.0
querydsl-apt: 6.8.0
hibernate-core: 6.1.1.Final
jakarta.persistence-api: 3.1.0
postgresql: 42.7.4
</code></pre>
<h3 id="impact">Impact</h3>
<p>The vulnerability is HQL injection, so anyone using source code similar to one provided in details is exposed to potentional information leakage and denial of service.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/OpenFeign/querydsl/security/advisories/GHSA-6q3q-6v5j-h6vg">https://github.com/OpenFeign/querydsl/security/advisories/GHSA-6q3q-6v5j-h6vg</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-49203">https://nvd.nist.gov/vuln/detail/CVE-2024-49203</a></li>
<li><a href="https://github.com/querydsl/querydsl/issues/3757">https://github.com/querydsl/querydsl/issues/3757</a></li>
<li><a href="https://github.com/CSIRTTrizna/CVE-2024-49203">https://github.com/CSIRTTrizna/CVE-2024-49203</a></li>
<li><a href="https://github.com/querydsl/querydsl/releases/tag/QUERYDSL_5_1_0">https://github.com/querydsl/querydsl/releases/tag/QUERYDSL_5_1_0</a></li>
<li><a href="https://www.csirt.sk/querydsl-java-library-vulnerability-permits-sql-hql-injection.html">https://www.csirt.sk/querydsl-java-library-vulnerability-permits-sql-hql-injection.html</a></li>
<li><a href="https://github.com/OpenFeign/querydsl/releases/tag/5.6.1">https://github.com/OpenFeign/querydsl/releases/tag/5.6.1</a></li>
<li><a href="https://github.com/OpenFeign/querydsl/releases/tag/6.10.1">https://github.com/OpenFeign/querydsl/releases/tag/6.10.1</a></li>
<li><a href="https://github.com/advisories/GHSA-6q3q-6v5j-h6vg">https://github.com/advisories/GHSA-6q3q-6v5j-h6vg</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-6q3q-6v5j-h6vg</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-11-27T19:00:53.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.xwiki.platform:xwiki-platform-distribution-war] XWiki Platform has an SQL injection in getdocuments.vm with sort parameter]]></title>
        <id>https://github.com/advisories/GHSA-wh34-m772-5398</id>
        <link href="https://github.com/advisories/GHSA-wh34-m772-5398"/>
        <updated>2024-12-16T18:08:47.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>In <code>getdocument.vm</code> ; the ordering of the returned documents is defined from an unsanitized request parameter (request.sort) and can allow any user to inject HQL.</p>
<p>Depending on the used database backend, the attacker may be able to not only obtain confidential information such as password hashes from the database, but also execute UPDATE/INSERT/DELETE queries.</p>
<p>It's possible to employ database backend dependent techniques of breaking out of HQL query context, described, for example, here: <a href="https://www.sonarsource.com/blog/exploiting-hibernate-injections">https://www.sonarsource.com/blog/exploiting-hibernate-injections</a>.</p>
<h3 id="patches">Patches</h3>
<p>This has been patched in 13.10.5 and 14.3-rc-1.</p>
<h3 id="workarounds">Workarounds</h3>
<p>There is no known workaround, other than upgrading XWiki.</p>
<h3 id="references">References</h3>
<p><a href="https://jira.xwiki.org/browse/XWIKI-17568">https://jira.xwiki.org/browse/XWIKI-17568</a></p>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory:</p>
<ul>
<li>Open an issue in <a href="https://jira.xwiki.org/">Jira XWiki.org</a></li>
<li>Email us at <a href="mailto:security@xwiki.org">Security Mailing List</a></li>
</ul>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/xwiki/xwiki-platform/security/advisories/GHSA-wh34-m772-5398">https://github.com/xwiki/xwiki-platform/security/advisories/GHSA-wh34-m772-5398</a></li>
<li><a href="https://github.com/xwiki/xwiki-platform/commit/673076e2e8b88a36cdeaf7007843aa9ca1a068a0">https://github.com/xwiki/xwiki-platform/commit/673076e2e8b88a36cdeaf7007843aa9ca1a068a0</a></li>
<li><a href="https://jira.xwiki.org/browse/XWIKI-17568">https://jira.xwiki.org/browse/XWIKI-17568</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-55663">https://nvd.nist.gov/vuln/detail/CVE-2024-55663</a></li>
<li><a href="https://github.com/advisories/GHSA-wh34-m772-5398">https://github.com/advisories/GHSA-wh34-m772-5398</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-wh34-m772-5398</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-12-12T19:22:12.000Z</published>
    </entry>
</feed>