<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://azu.github.io/github-advisory-database-rss/maven.rss</id>
    <title>Security Advisory for Java artifacts hosted at the Maven central repository</title>
    <updated>2025-04-27T09:01:15.708Z</updated>
    <generator>github-advisory-database-rss</generator>
    <link rel="alternate" href="https://github.com/advisories?query=type%3Areviewed+ecosystem%3Amaven"/>
    <subtitle>Security Advisory for Java artifacts hosted at the Maven central repository on GitHub</subtitle>
    <rights>github-advisory-database-rss</rights>
    <category term="CRITICAL"/>
    <category term="HIGH"/>
    <category term="MODERATE"/>
    <category term="LOW"/>
    <entry>
        <title type="html"><![CDATA[[org.apache.httpcomponents.client5:httpclient5] Apache HttpClient disables domain checks]]></title>
        <id>https://github.com/advisories/GHSA-73m2-qfq3-56cx</id>
        <link href="https://github.com/advisories/GHSA-73m2-qfq3-56cx"/>
        <updated>2025-04-24T16:36:11.000Z</updated>
        <content type="html"><![CDATA[<p>A bug in PSL validation logic in Apache HttpClient 5.4.x disables domain checks, affecting cookie management and host name verification. Discovered by the Apache HttpClient team. Fixed in the 5.4.3 release.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2025-27820">https://nvd.nist.gov/vuln/detail/CVE-2025-27820</a></li>
<li><a href="https://github.com/apache/httpcomponents-client/pull/574">https://github.com/apache/httpcomponents-client/pull/574</a></li>
<li><a href="https://github.com/apache/httpcomponents-client/pull/621">https://github.com/apache/httpcomponents-client/pull/621</a></li>
<li><a href="https://hc.apache.org/httpcomponents-client-5.4.x/index.html">https://hc.apache.org/httpcomponents-client-5.4.x/index.html</a></li>
<li><a href="https://lists.apache.org/thread/55xhs40ncqv97qvoocok44995xp5kqn8">https://lists.apache.org/thread/55xhs40ncqv97qvoocok44995xp5kqn8</a></li>
<li><a href="https://github.com/advisories/GHSA-73m2-qfq3-56cx">https://github.com/advisories/GHSA-73m2-qfq3-56cx</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-73m2-qfq3-56cx</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2025-04-24T12:31:28.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.open-metadata:openmetadata-service] OpenMetadata SQL Injection]]></title>
        <id>https://github.com/advisories/GHSA-x8pm-wrg2-mqmx</id>
        <link href="https://github.com/advisories/GHSA-x8pm-wrg2-mqmx"/>
        <updated>2025-04-24T16:32:31.000Z</updated>
        <content type="html"><![CDATA[<p>OpenMetadata &lt;=1.4.1 is vulnerable to SQL Injection. An attacker can extract information from the database in function listCount in the WorkflowDAO interface. The workflowtype and status parameters can be used to build a SQL query.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-55238">https://nvd.nist.gov/vuln/detail/CVE-2024-55238</a></li>
<li><a href="https://gist.github.com/javadk/68c597cdb94768dab31a3219c2ad9904">https://gist.github.com/javadk/68c597cdb94768dab31a3219c2ad9904</a></li>
<li><a href="https://github.com/open-metadata/OpenMetadata/blob/98945cb2db87ebb325d3a72131f049abffcba345/openmetadata-service/src/main/java/org/openmetadata/service/jdbi3/CollectionDAO.java#L4243">https://github.com/open-metadata/OpenMetadata/blob/98945cb2db87ebb325d3a72131f049abffcba345/openmetadata-service/src/main/java/org/openmetadata/service/jdbi3/CollectionDAO.java#L4243</a></li>
<li><a href="https://github.com/open-metadata/OpenMetadata/blob/98945cb2db87ebb325d3a72131f049abffcba345/openmetadata-service/src/main/java/org/openmetadata/service/jdbi3/CollectionDAO.java#L4247">https://github.com/open-metadata/OpenMetadata/blob/98945cb2db87ebb325d3a72131f049abffcba345/openmetadata-service/src/main/java/org/openmetadata/service/jdbi3/CollectionDAO.java#L4247</a></li>
<li><a href="https://github.com/open-metadata/OpenMetadata/commit/47a13e27cf24465c44044ac79654b87dde8d39a8">https://github.com/open-metadata/OpenMetadata/commit/47a13e27cf24465c44044ac79654b87dde8d39a8</a></li>
<li><a href="https://github.com/advisories/GHSA-x8pm-wrg2-mqmx">https://github.com/advisories/GHSA-x8pm-wrg2-mqmx</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-x8pm-wrg2-mqmx</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2025-04-17T18:31:12.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.xwiki.platform:xwiki-platform-rest-server] org.xwiki.platform:xwiki-platform-rest-server allows SQL injection in query endpoint of REST API]]></title>
        <id>https://github.com/advisories/GHSA-f69v-xrj8-rhxf</id>
        <link href="https://github.com/advisories/GHSA-f69v-xrj8-rhxf"/>
        <updated>2025-04-23T19:15:38.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>It is possible for a remote unauthenticated user to escape from the HQL execution context and perform a blind SQL injection to execute arbitrary SQL statements on the database backend, including when "Prevent unregistered users from viewing pages, regardless of the page rights" and "Prevent unregistered users from editing pages, regardless of the page rights" options are enabled.</p>
<p>Depending on the used database backend, the attacker may be able to not only obtain confidential information such as password hashes from the database, but also execute UPDATE/INSERT/DELETE queries.</p>
<p>The vulnerability may be tested in a default installation of XWIki Standard Flavor, including using the official Docker containers.</p>
<p>An example query, which leads to SQL injection with MySQL/MariaDB backend is shown below:</p>
<pre><code>time curl "http://127.0.0.1:8080/rest/wikis/xwiki/query?q=where%20doc.name=length('a')*org.apache.logging.log4j.util.Chars.SPACE%20or%201%3C%3E%271%5C%27%27%20union%20select%201,2,3,sleep(10)%20%23%27&amp;type=hql&amp;distinct=0"
</code></pre>
<p>When executed, the response from the server will come after a delay of 10 extra seconds, indicating successful execution of the injected SQL statement.</p>
<p>An example of a query for the PostgreSQL database backend is shown below:</p>
<pre><code>curl "https://127.0.0.1:8080/rest/wikis/xwiki/query?q=where%20%24%24='%24%24=concat(%20chr(%2061%20),(chr(%2039%20))%20)%20;select%201%20--%20comment'&amp;type=hql&amp;distinct=0"
</code></pre>
<p>Both requests employ database backend dependent techniques of breaking out of HQL query context, described, for example, here: <a href="https://www.sonarsource.com/blog/exploiting-hibernate-injections">https://www.sonarsource.com/blog/exploiting-hibernate-injections</a>.</p>
<h3 id="patches">Patches</h3>
<p>This has been patched in 16.10.1, 16.4.6 and 15.10.16.</p>
<h3 id="workarounds">Workarounds</h3>
<p>There is no known workaround, other than upgrading XWiki.</p>
<h3 id="references">References</h3>
<p><a href="https://jira.xwiki.org/browse/XWIKI-22691">https://jira.xwiki.org/browse/XWIKI-22691</a></p>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory:</p>
<ul>
<li>Open an issue in <a href="https://jira.xwiki.org/">Jira XWiki.org</a></li>
<li>Email us at <a href="mailto:security@xwiki.org">Security Mailing List</a></li>
</ul>
<h3 id="attribution">Attribution</h3>
<p>Sergey Anufrienko from Kaspersky ICS-CERT vulnerability research team reported this vulnerability.</p>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/xwiki/xwiki-platform/security/advisories/GHSA-f69v-xrj8-rhxf">https://github.com/xwiki/xwiki-platform/security/advisories/GHSA-f69v-xrj8-rhxf</a></li>
<li><a href="https://github.com/xwiki/xwiki-platform/commit/5c11a874bd24a581f534d283186e209bbccd8113">https://github.com/xwiki/xwiki-platform/commit/5c11a874bd24a581f534d283186e209bbccd8113</a></li>
<li><a href="https://jira.xwiki.org/browse/XWIKI-22691">https://jira.xwiki.org/browse/XWIKI-22691</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2025-32969">https://nvd.nist.gov/vuln/detail/CVE-2025-32969</a></li>
<li><a href="https://github.com/advisories/GHSA-f69v-xrj8-rhxf">https://github.com/advisories/GHSA-f69v-xrj8-rhxf</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-f69v-xrj8-rhxf</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2025-04-23T14:42:42.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.xwiki.platform:xwiki-platform-rest-server] org.xwiki.platform:xwiki-platform-rest-server allows SQL injection in query endpoint of REST API]]></title>
        <id>https://github.com/advisories/GHSA-f69v-xrj8-rhxf</id>
        <link href="https://github.com/advisories/GHSA-f69v-xrj8-rhxf"/>
        <updated>2025-04-23T19:15:38.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>It is possible for a remote unauthenticated user to escape from the HQL execution context and perform a blind SQL injection to execute arbitrary SQL statements on the database backend, including when "Prevent unregistered users from viewing pages, regardless of the page rights" and "Prevent unregistered users from editing pages, regardless of the page rights" options are enabled.</p>
<p>Depending on the used database backend, the attacker may be able to not only obtain confidential information such as password hashes from the database, but also execute UPDATE/INSERT/DELETE queries.</p>
<p>The vulnerability may be tested in a default installation of XWIki Standard Flavor, including using the official Docker containers.</p>
<p>An example query, which leads to SQL injection with MySQL/MariaDB backend is shown below:</p>
<pre><code>time curl "http://127.0.0.1:8080/rest/wikis/xwiki/query?q=where%20doc.name=length('a')*org.apache.logging.log4j.util.Chars.SPACE%20or%201%3C%3E%271%5C%27%27%20union%20select%201,2,3,sleep(10)%20%23%27&amp;type=hql&amp;distinct=0"
</code></pre>
<p>When executed, the response from the server will come after a delay of 10 extra seconds, indicating successful execution of the injected SQL statement.</p>
<p>An example of a query for the PostgreSQL database backend is shown below:</p>
<pre><code>curl "https://127.0.0.1:8080/rest/wikis/xwiki/query?q=where%20%24%24='%24%24=concat(%20chr(%2061%20),(chr(%2039%20))%20)%20;select%201%20--%20comment'&amp;type=hql&amp;distinct=0"
</code></pre>
<p>Both requests employ database backend dependent techniques of breaking out of HQL query context, described, for example, here: <a href="https://www.sonarsource.com/blog/exploiting-hibernate-injections">https://www.sonarsource.com/blog/exploiting-hibernate-injections</a>.</p>
<h3 id="patches">Patches</h3>
<p>This has been patched in 16.10.1, 16.4.6 and 15.10.16.</p>
<h3 id="workarounds">Workarounds</h3>
<p>There is no known workaround, other than upgrading XWiki.</p>
<h3 id="references">References</h3>
<p><a href="https://jira.xwiki.org/browse/XWIKI-22691">https://jira.xwiki.org/browse/XWIKI-22691</a></p>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory:</p>
<ul>
<li>Open an issue in <a href="https://jira.xwiki.org/">Jira XWiki.org</a></li>
<li>Email us at <a href="mailto:security@xwiki.org">Security Mailing List</a></li>
</ul>
<h3 id="attribution">Attribution</h3>
<p>Sergey Anufrienko from Kaspersky ICS-CERT vulnerability research team reported this vulnerability.</p>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/xwiki/xwiki-platform/security/advisories/GHSA-f69v-xrj8-rhxf">https://github.com/xwiki/xwiki-platform/security/advisories/GHSA-f69v-xrj8-rhxf</a></li>
<li><a href="https://github.com/xwiki/xwiki-platform/commit/5c11a874bd24a581f534d283186e209bbccd8113">https://github.com/xwiki/xwiki-platform/commit/5c11a874bd24a581f534d283186e209bbccd8113</a></li>
<li><a href="https://jira.xwiki.org/browse/XWIKI-22691">https://jira.xwiki.org/browse/XWIKI-22691</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2025-32969">https://nvd.nist.gov/vuln/detail/CVE-2025-32969</a></li>
<li><a href="https://github.com/advisories/GHSA-f69v-xrj8-rhxf">https://github.com/advisories/GHSA-f69v-xrj8-rhxf</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-f69v-xrj8-rhxf</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2025-04-23T14:42:42.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.xwiki.platform:xwiki-platform-rest-server] org.xwiki.platform:xwiki-platform-rest-server allows SQL injection in query endpoint of REST API]]></title>
        <id>https://github.com/advisories/GHSA-f69v-xrj8-rhxf</id>
        <link href="https://github.com/advisories/GHSA-f69v-xrj8-rhxf"/>
        <updated>2025-04-23T19:15:38.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>It is possible for a remote unauthenticated user to escape from the HQL execution context and perform a blind SQL injection to execute arbitrary SQL statements on the database backend, including when "Prevent unregistered users from viewing pages, regardless of the page rights" and "Prevent unregistered users from editing pages, regardless of the page rights" options are enabled.</p>
<p>Depending on the used database backend, the attacker may be able to not only obtain confidential information such as password hashes from the database, but also execute UPDATE/INSERT/DELETE queries.</p>
<p>The vulnerability may be tested in a default installation of XWIki Standard Flavor, including using the official Docker containers.</p>
<p>An example query, which leads to SQL injection with MySQL/MariaDB backend is shown below:</p>
<pre><code>time curl "http://127.0.0.1:8080/rest/wikis/xwiki/query?q=where%20doc.name=length('a')*org.apache.logging.log4j.util.Chars.SPACE%20or%201%3C%3E%271%5C%27%27%20union%20select%201,2,3,sleep(10)%20%23%27&amp;type=hql&amp;distinct=0"
</code></pre>
<p>When executed, the response from the server will come after a delay of 10 extra seconds, indicating successful execution of the injected SQL statement.</p>
<p>An example of a query for the PostgreSQL database backend is shown below:</p>
<pre><code>curl "https://127.0.0.1:8080/rest/wikis/xwiki/query?q=where%20%24%24='%24%24=concat(%20chr(%2061%20),(chr(%2039%20))%20)%20;select%201%20--%20comment'&amp;type=hql&amp;distinct=0"
</code></pre>
<p>Both requests employ database backend dependent techniques of breaking out of HQL query context, described, for example, here: <a href="https://www.sonarsource.com/blog/exploiting-hibernate-injections">https://www.sonarsource.com/blog/exploiting-hibernate-injections</a>.</p>
<h3 id="patches">Patches</h3>
<p>This has been patched in 16.10.1, 16.4.6 and 15.10.16.</p>
<h3 id="workarounds">Workarounds</h3>
<p>There is no known workaround, other than upgrading XWiki.</p>
<h3 id="references">References</h3>
<p><a href="https://jira.xwiki.org/browse/XWIKI-22691">https://jira.xwiki.org/browse/XWIKI-22691</a></p>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory:</p>
<ul>
<li>Open an issue in <a href="https://jira.xwiki.org/">Jira XWiki.org</a></li>
<li>Email us at <a href="mailto:security@xwiki.org">Security Mailing List</a></li>
</ul>
<h3 id="attribution">Attribution</h3>
<p>Sergey Anufrienko from Kaspersky ICS-CERT vulnerability research team reported this vulnerability.</p>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/xwiki/xwiki-platform/security/advisories/GHSA-f69v-xrj8-rhxf">https://github.com/xwiki/xwiki-platform/security/advisories/GHSA-f69v-xrj8-rhxf</a></li>
<li><a href="https://github.com/xwiki/xwiki-platform/commit/5c11a874bd24a581f534d283186e209bbccd8113">https://github.com/xwiki/xwiki-platform/commit/5c11a874bd24a581f534d283186e209bbccd8113</a></li>
<li><a href="https://jira.xwiki.org/browse/XWIKI-22691">https://jira.xwiki.org/browse/XWIKI-22691</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2025-32969">https://nvd.nist.gov/vuln/detail/CVE-2025-32969</a></li>
<li><a href="https://github.com/advisories/GHSA-f69v-xrj8-rhxf">https://github.com/advisories/GHSA-f69v-xrj8-rhxf</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-f69v-xrj8-rhxf</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2025-04-23T14:42:42.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.xwiki.platform:xwiki-platform-oldcore] org.xwiki.platform:xwiki-platform-oldcore allows SQL injection in short form select requests through the script query API]]></title>
        <id>https://github.com/advisories/GHSA-g9jj-75mx-wjcx</id>
        <link href="https://github.com/advisories/GHSA-g9jj-75mx-wjcx"/>
        <updated>2025-04-23T19:15:52.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>It is possible for a user with SCRIPT right to escape from the HQL execution context and perform a blind SQL injection to execute arbitrary SQL statements on the database backend.</p>
<p>Depending on the used database backend, the attacker may be able to not only obtain confidential information such as password hashes from the database, but also execute UPDATE/INSERT/DELETE queries.</p>
<p>The vulnerability may be tested in a default installation of XWIki Standard Flavor, including using the official Docker containers.</p>
<p>For example, with a MySQL or MariaDB database, you can use the following script (which a user having SCRIPT right but not PROGRAMMING right) to get the content of the xwikistrings table (which contain all the short string fields stored in objects, including passwords):</p>
<pre><code>{{velocity}}
$services.query.hql("where 1&lt;&gt;'1\'' union select concat(XWS_NAME, XWS_VALUE) from xwikistrings #'").execute()
{{/velocity}}
</code></pre>
<h3 id="patches">Patches</h3>
<p>This has been patched in 16.10.1, 16.4.6 and 15.10.16.</p>
<h3 id="workarounds">Workarounds</h3>
<p>There is no known workaround, other than upgrading XWiki.</p>
<p>The protection added to this REST API is the same as the one used to validate complete select queries, making it more consistent. However, while the script API always had this protection for complete queries, it's important to note that it's a very strict protection and some valid, but complex, queries might suddenly require the author to have programming right.</p>
<h3 id="references">References</h3>
<p><a href="https://jira.xwiki.org/browse/XWIKI-22718">https://jira.xwiki.org/browse/XWIKI-22718</a></p>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory:</p>
<ul>
<li>Open an issue in <a href="https://jira.xwiki.org/">Jira XWiki.org</a></li>
<li>Email us at <a href="mailto:security@xwiki.org">Security Mailing List</a></li>
</ul>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/xwiki/xwiki-platform/security/advisories/GHSA-g9jj-75mx-wjcx">https://github.com/xwiki/xwiki-platform/security/advisories/GHSA-g9jj-75mx-wjcx</a></li>
<li><a href="https://jira.xwiki.org/browse/XWIKI-22718">https://jira.xwiki.org/browse/XWIKI-22718</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2025-32968">https://nvd.nist.gov/vuln/detail/CVE-2025-32968</a></li>
<li><a href="https://github.com/advisories/GHSA-g9jj-75mx-wjcx">https://github.com/advisories/GHSA-g9jj-75mx-wjcx</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-g9jj-75mx-wjcx</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2025-04-23T14:41:54.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.xwiki.platform:xwiki-platform-oldcore] org.xwiki.platform:xwiki-platform-oldcore allows SQL injection in short form select requests through the script query API]]></title>
        <id>https://github.com/advisories/GHSA-g9jj-75mx-wjcx</id>
        <link href="https://github.com/advisories/GHSA-g9jj-75mx-wjcx"/>
        <updated>2025-04-23T19:15:52.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>It is possible for a user with SCRIPT right to escape from the HQL execution context and perform a blind SQL injection to execute arbitrary SQL statements on the database backend.</p>
<p>Depending on the used database backend, the attacker may be able to not only obtain confidential information such as password hashes from the database, but also execute UPDATE/INSERT/DELETE queries.</p>
<p>The vulnerability may be tested in a default installation of XWIki Standard Flavor, including using the official Docker containers.</p>
<p>For example, with a MySQL or MariaDB database, you can use the following script (which a user having SCRIPT right but not PROGRAMMING right) to get the content of the xwikistrings table (which contain all the short string fields stored in objects, including passwords):</p>
<pre><code>{{velocity}}
$services.query.hql("where 1&lt;&gt;'1\'' union select concat(XWS_NAME, XWS_VALUE) from xwikistrings #'").execute()
{{/velocity}}
</code></pre>
<h3 id="patches">Patches</h3>
<p>This has been patched in 16.10.1, 16.4.6 and 15.10.16.</p>
<h3 id="workarounds">Workarounds</h3>
<p>There is no known workaround, other than upgrading XWiki.</p>
<p>The protection added to this REST API is the same as the one used to validate complete select queries, making it more consistent. However, while the script API always had this protection for complete queries, it's important to note that it's a very strict protection and some valid, but complex, queries might suddenly require the author to have programming right.</p>
<h3 id="references">References</h3>
<p><a href="https://jira.xwiki.org/browse/XWIKI-22718">https://jira.xwiki.org/browse/XWIKI-22718</a></p>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory:</p>
<ul>
<li>Open an issue in <a href="https://jira.xwiki.org/">Jira XWiki.org</a></li>
<li>Email us at <a href="mailto:security@xwiki.org">Security Mailing List</a></li>
</ul>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/xwiki/xwiki-platform/security/advisories/GHSA-g9jj-75mx-wjcx">https://github.com/xwiki/xwiki-platform/security/advisories/GHSA-g9jj-75mx-wjcx</a></li>
<li><a href="https://jira.xwiki.org/browse/XWIKI-22718">https://jira.xwiki.org/browse/XWIKI-22718</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2025-32968">https://nvd.nist.gov/vuln/detail/CVE-2025-32968</a></li>
<li><a href="https://github.com/advisories/GHSA-g9jj-75mx-wjcx">https://github.com/advisories/GHSA-g9jj-75mx-wjcx</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-g9jj-75mx-wjcx</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2025-04-23T14:41:54.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.xwiki.platform:xwiki-platform-oldcore] org.xwiki.platform:xwiki-platform-oldcore allows SQL injection in short form select requests through the script query API]]></title>
        <id>https://github.com/advisories/GHSA-g9jj-75mx-wjcx</id>
        <link href="https://github.com/advisories/GHSA-g9jj-75mx-wjcx"/>
        <updated>2025-04-23T19:15:52.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>It is possible for a user with SCRIPT right to escape from the HQL execution context and perform a blind SQL injection to execute arbitrary SQL statements on the database backend.</p>
<p>Depending on the used database backend, the attacker may be able to not only obtain confidential information such as password hashes from the database, but also execute UPDATE/INSERT/DELETE queries.</p>
<p>The vulnerability may be tested in a default installation of XWIki Standard Flavor, including using the official Docker containers.</p>
<p>For example, with a MySQL or MariaDB database, you can use the following script (which a user having SCRIPT right but not PROGRAMMING right) to get the content of the xwikistrings table (which contain all the short string fields stored in objects, including passwords):</p>
<pre><code>{{velocity}}
$services.query.hql("where 1&lt;&gt;'1\'' union select concat(XWS_NAME, XWS_VALUE) from xwikistrings #'").execute()
{{/velocity}}
</code></pre>
<h3 id="patches">Patches</h3>
<p>This has been patched in 16.10.1, 16.4.6 and 15.10.16.</p>
<h3 id="workarounds">Workarounds</h3>
<p>There is no known workaround, other than upgrading XWiki.</p>
<p>The protection added to this REST API is the same as the one used to validate complete select queries, making it more consistent. However, while the script API always had this protection for complete queries, it's important to note that it's a very strict protection and some valid, but complex, queries might suddenly require the author to have programming right.</p>
<h3 id="references">References</h3>
<p><a href="https://jira.xwiki.org/browse/XWIKI-22718">https://jira.xwiki.org/browse/XWIKI-22718</a></p>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory:</p>
<ul>
<li>Open an issue in <a href="https://jira.xwiki.org/">Jira XWiki.org</a></li>
<li>Email us at <a href="mailto:security@xwiki.org">Security Mailing List</a></li>
</ul>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/xwiki/xwiki-platform/security/advisories/GHSA-g9jj-75mx-wjcx">https://github.com/xwiki/xwiki-platform/security/advisories/GHSA-g9jj-75mx-wjcx</a></li>
<li><a href="https://jira.xwiki.org/browse/XWIKI-22718">https://jira.xwiki.org/browse/XWIKI-22718</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2025-32968">https://nvd.nist.gov/vuln/detail/CVE-2025-32968</a></li>
<li><a href="https://github.com/advisories/GHSA-g9jj-75mx-wjcx">https://github.com/advisories/GHSA-g9jj-75mx-wjcx</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-g9jj-75mx-wjcx</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2025-04-23T14:41:54.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.apache.struts:struts2-core] Apache Struts forced double OGNL evaluation]]></title>
        <id>https://github.com/advisories/GHSA-864w-r5qj-h6fj</id>
        <link href="https://github.com/advisories/GHSA-864w-r5qj-h6fj"/>
        <updated>2025-04-23T02:23:17.000Z</updated>
        <content type="html"><![CDATA[<p>Apache Struts 2.x before 2.3.29 allows remote attackers to execute arbitrary code via a "%{}" sequence in a tag attribute, aka forced double OGNL evaluation.  NOTE: this vulnerability exists because of an incomplete fix for CVE-2016-0785.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2016-4461">https://nvd.nist.gov/vuln/detail/CVE-2016-4461</a></li>
<li><a href="https://struts.apache.org/docs/s2-036.html">https://struts.apache.org/docs/s2-036.html</a></li>
<li><a href="https://security.netapp.com/advisory/ntap-20180629-0004">https://security.netapp.com/advisory/ntap-20180629-0004</a></li>
<li><a href="https://github.com/advisories/GHSA-864w-r5qj-h6fj">https://github.com/advisories/GHSA-864w-r5qj-h6fj</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-864w-r5qj-h6fj</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-05-14T01:05:57.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.apache.wicket:wicket-core] Apache Wicket vulnerable to CSRF attacks]]></title>
        <id>https://github.com/advisories/GHSA-xc66-mg8r-q6r5</id>
        <link href="https://github.com/advisories/GHSA-xc66-mg8r-q6r5"/>
        <updated>2025-04-23T02:21:07.000Z</updated>
        <content type="html"><![CDATA[<p>Apache Wicket 6.x before 6.25.0, 7.x before 7.5.0, and 8.0.0-M1 provide a CSRF prevention measure that fails to discover some cross origin requests. The mitigation is to not only check the Origin HTTP header, but also take the Referer HTTP header into account when no Origin was provided. Furthermore, not all Wicket server side targets were subjected to the CSRF check. This was also fixed.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2016-6806">https://nvd.nist.gov/vuln/detail/CVE-2016-6806</a></li>
<li><a href="https://lists.apache.org/thread.html/074b72585f4b7c6adda1af52aecbfe1be23c6d6f5bb9382270f059cd@%3Cannounce.apache.org%3E">https://lists.apache.org/thread.html/074b72585f4b7c6adda1af52aecbfe1be23c6d6f5bb9382270f059cd@%3Cannounce.apache.org%3E</a></li>
<li><a href="https://github.com/advisories/GHSA-xc66-mg8r-q6r5">https://github.com/advisories/GHSA-xc66-mg8r-q6r5</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-xc66-mg8r-q6r5</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-05-17T00:31:42.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.apache.wicket:wicket-core] Apache Wicket vulnerable to CSRF attacks]]></title>
        <id>https://github.com/advisories/GHSA-xc66-mg8r-q6r5</id>
        <link href="https://github.com/advisories/GHSA-xc66-mg8r-q6r5"/>
        <updated>2025-04-23T02:21:07.000Z</updated>
        <content type="html"><![CDATA[<p>Apache Wicket 6.x before 6.25.0, 7.x before 7.5.0, and 8.0.0-M1 provide a CSRF prevention measure that fails to discover some cross origin requests. The mitigation is to not only check the Origin HTTP header, but also take the Referer HTTP header into account when no Origin was provided. Furthermore, not all Wicket server side targets were subjected to the CSRF check. This was also fixed.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2016-6806">https://nvd.nist.gov/vuln/detail/CVE-2016-6806</a></li>
<li><a href="https://lists.apache.org/thread.html/074b72585f4b7c6adda1af52aecbfe1be23c6d6f5bb9382270f059cd@%3Cannounce.apache.org%3E">https://lists.apache.org/thread.html/074b72585f4b7c6adda1af52aecbfe1be23c6d6f5bb9382270f059cd@%3Cannounce.apache.org%3E</a></li>
<li><a href="https://github.com/advisories/GHSA-xc66-mg8r-q6r5">https://github.com/advisories/GHSA-xc66-mg8r-q6r5</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-xc66-mg8r-q6r5</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-05-17T00:31:42.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.apache.wicket:wicket-core] Apache Wicket vulnerable to CSRF attacks]]></title>
        <id>https://github.com/advisories/GHSA-xc66-mg8r-q6r5</id>
        <link href="https://github.com/advisories/GHSA-xc66-mg8r-q6r5"/>
        <updated>2025-04-23T02:21:07.000Z</updated>
        <content type="html"><![CDATA[<p>Apache Wicket 6.x before 6.25.0, 7.x before 7.5.0, and 8.0.0-M1 provide a CSRF prevention measure that fails to discover some cross origin requests. The mitigation is to not only check the Origin HTTP header, but also take the Referer HTTP header into account when no Origin was provided. Furthermore, not all Wicket server side targets were subjected to the CSRF check. This was also fixed.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2016-6806">https://nvd.nist.gov/vuln/detail/CVE-2016-6806</a></li>
<li><a href="https://lists.apache.org/thread.html/074b72585f4b7c6adda1af52aecbfe1be23c6d6f5bb9382270f059cd@%3Cannounce.apache.org%3E">https://lists.apache.org/thread.html/074b72585f4b7c6adda1af52aecbfe1be23c6d6f5bb9382270f059cd@%3Cannounce.apache.org%3E</a></li>
<li><a href="https://github.com/advisories/GHSA-xc66-mg8r-q6r5">https://github.com/advisories/GHSA-xc66-mg8r-q6r5</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-xc66-mg8r-q6r5</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-05-17T00:31:42.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.apache.wicket:wicket-core] Apache Wicket allows attackers to check for third-party libraries]]></title>
        <id>https://github.com/advisories/GHSA-244g-8368-6wr9</id>
        <link href="https://github.com/advisories/GHSA-244g-8368-6wr9"/>
        <updated>2025-04-23T02:20:02.000Z</updated>
        <content type="html"><![CDATA[<p>In Apache Wicket 1.5.10 or 6.13.0, by issuing requests to special urls handled by Wicket, it is possible to check for the existence of particular classes in the classpath and thus check whether a third party library with a known security vulnerability is in use.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2014-0043">https://nvd.nist.gov/vuln/detail/CVE-2014-0043</a></li>
<li><a href="https://lists.apache.org/thread.html/d95e962f2f059a09f5abf7086c3f4ed22d2ae2c21499d0de95d4435d@1392986987@%3Cannounce.wicket.apache.org%3E">https://lists.apache.org/thread.html/d95e962f2f059a09f5abf7086c3f4ed22d2ae2c21499d0de95d4435d@1392986987@%3Cannounce.wicket.apache.org%3E</a></li>
<li><a href="https://github.com/advisories/GHSA-244g-8368-6wr9">https://github.com/advisories/GHSA-244g-8368-6wr9</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-244g-8368-6wr9</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-05-17T00:33:50.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.apache.wicket:wicket-core] Apache Wicket allows attackers to check for third-party libraries]]></title>
        <id>https://github.com/advisories/GHSA-244g-8368-6wr9</id>
        <link href="https://github.com/advisories/GHSA-244g-8368-6wr9"/>
        <updated>2025-04-23T02:20:02.000Z</updated>
        <content type="html"><![CDATA[<p>In Apache Wicket 1.5.10 or 6.13.0, by issuing requests to special urls handled by Wicket, it is possible to check for the existence of particular classes in the classpath and thus check whether a third party library with a known security vulnerability is in use.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2014-0043">https://nvd.nist.gov/vuln/detail/CVE-2014-0043</a></li>
<li><a href="https://lists.apache.org/thread.html/d95e962f2f059a09f5abf7086c3f4ed22d2ae2c21499d0de95d4435d@1392986987@%3Cannounce.wicket.apache.org%3E">https://lists.apache.org/thread.html/d95e962f2f059a09f5abf7086c3f4ed22d2ae2c21499d0de95d4435d@1392986987@%3Cannounce.wicket.apache.org%3E</a></li>
<li><a href="https://github.com/advisories/GHSA-244g-8368-6wr9">https://github.com/advisories/GHSA-244g-8368-6wr9</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-244g-8368-6wr9</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-05-17T00:33:50.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.apache.wicket:wicket-core] Apache Wicket insecure defaults]]></title>
        <id>https://github.com/advisories/GHSA-vfmm-jm4v-7frq</id>
        <link href="https://github.com/advisories/GHSA-vfmm-jm4v-7frq"/>
        <updated>2025-04-22T22:16:02.000Z</updated>
        <content type="html"><![CDATA[<p>Apache Wicket before 1.5.13, 6.x before 6.19.0, and 7.x before 7.0.0-M5 make it easier for attackers to defeat a cryptographic protection mechanism and predict encrypted URLs by leveraging use of CryptoMapper as the default encryption provider.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2014-7808">https://nvd.nist.gov/vuln/detail/CVE-2014-7808</a></li>
<li><a href="https://github.com/apache/wicket/commit/d2b8848346b8f806e747dca18799d70c37fc893f">https://github.com/apache/wicket/commit/d2b8848346b8f806e747dca18799d70c37fc893f</a></li>
<li><a href="https://lists.apache.org/thread/rqy6lpo5mzco85cbf65r53vdh87gz77b">https://lists.apache.org/thread/rqy6lpo5mzco85cbf65r53vdh87gz77b</a></li>
<li><a href="https://web.archive.org/web/20180830051017/https://www.smrrd.de/cve-2014-7808-apache-wicket-csrf-2014.html">https://web.archive.org/web/20180830051017/https://www.smrrd.de/cve-2014-7808-apache-wicket-csrf-2014.html</a></li>
<li><a href="https://github.com/advisories/GHSA-vfmm-jm4v-7frq">https://github.com/advisories/GHSA-vfmm-jm4v-7frq</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-vfmm-jm4v-7frq</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-05-13T01:27:48.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.apache.wicket:wicket-core] Apache Wicket insecure defaults]]></title>
        <id>https://github.com/advisories/GHSA-vfmm-jm4v-7frq</id>
        <link href="https://github.com/advisories/GHSA-vfmm-jm4v-7frq"/>
        <updated>2025-04-22T22:16:02.000Z</updated>
        <content type="html"><![CDATA[<p>Apache Wicket before 1.5.13, 6.x before 6.19.0, and 7.x before 7.0.0-M5 make it easier for attackers to defeat a cryptographic protection mechanism and predict encrypted URLs by leveraging use of CryptoMapper as the default encryption provider.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2014-7808">https://nvd.nist.gov/vuln/detail/CVE-2014-7808</a></li>
<li><a href="https://github.com/apache/wicket/commit/d2b8848346b8f806e747dca18799d70c37fc893f">https://github.com/apache/wicket/commit/d2b8848346b8f806e747dca18799d70c37fc893f</a></li>
<li><a href="https://lists.apache.org/thread/rqy6lpo5mzco85cbf65r53vdh87gz77b">https://lists.apache.org/thread/rqy6lpo5mzco85cbf65r53vdh87gz77b</a></li>
<li><a href="https://web.archive.org/web/20180830051017/https://www.smrrd.de/cve-2014-7808-apache-wicket-csrf-2014.html">https://web.archive.org/web/20180830051017/https://www.smrrd.de/cve-2014-7808-apache-wicket-csrf-2014.html</a></li>
<li><a href="https://github.com/advisories/GHSA-vfmm-jm4v-7frq">https://github.com/advisories/GHSA-vfmm-jm4v-7frq</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-vfmm-jm4v-7frq</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-05-13T01:27:48.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.apache.wicket:wicket-core] Apache Wicket insecure defaults]]></title>
        <id>https://github.com/advisories/GHSA-vfmm-jm4v-7frq</id>
        <link href="https://github.com/advisories/GHSA-vfmm-jm4v-7frq"/>
        <updated>2025-04-22T22:16:02.000Z</updated>
        <content type="html"><![CDATA[<p>Apache Wicket before 1.5.13, 6.x before 6.19.0, and 7.x before 7.0.0-M5 make it easier for attackers to defeat a cryptographic protection mechanism and predict encrypted URLs by leveraging use of CryptoMapper as the default encryption provider.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2014-7808">https://nvd.nist.gov/vuln/detail/CVE-2014-7808</a></li>
<li><a href="https://github.com/apache/wicket/commit/d2b8848346b8f806e747dca18799d70c37fc893f">https://github.com/apache/wicket/commit/d2b8848346b8f806e747dca18799d70c37fc893f</a></li>
<li><a href="https://lists.apache.org/thread/rqy6lpo5mzco85cbf65r53vdh87gz77b">https://lists.apache.org/thread/rqy6lpo5mzco85cbf65r53vdh87gz77b</a></li>
<li><a href="https://web.archive.org/web/20180830051017/https://www.smrrd.de/cve-2014-7808-apache-wicket-csrf-2014.html">https://web.archive.org/web/20180830051017/https://www.smrrd.de/cve-2014-7808-apache-wicket-csrf-2014.html</a></li>
<li><a href="https://github.com/advisories/GHSA-vfmm-jm4v-7frq">https://github.com/advisories/GHSA-vfmm-jm4v-7frq</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-vfmm-jm4v-7frq</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-05-13T01:27:48.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.apache.brooklyn:brooklyn-jsgui] Apache Brooklyn is vulnerable to cross-site request forgery (CSRF)]]></title>
        <id>https://github.com/advisories/GHSA-g2hf-g7fh-vg92</id>
        <link href="https://github.com/advisories/GHSA-g2hf-g7fh-vg92"/>
        <updated>2025-04-22T22:15:51.000Z</updated>
        <content type="html"><![CDATA[<p>In Apache Brooklyn before 0.10.0, the REST server is vulnerable to cross-site request forgery (CSRF), which could permit a malicious web site to produce a link which, if clicked whilst a user is logged in to Brooklyn, would cause the server to execute the attacker's commands as the user. There is known to be a proof-of-concept exploit using this vulnerability.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2016-8737">https://nvd.nist.gov/vuln/detail/CVE-2016-8737</a></li>
<li><a href="https://brooklyn.apache.org/community/security/CVE-2016-8737.html">https://brooklyn.apache.org/community/security/CVE-2016-8737.html</a></li>
<li><a href="https://lists.apache.org/thread.html/877813aaaa0e636adbc36106b89a54e0e6918f0884e9c8b67d5d5953%40%3Cdev.brooklyn.apache.org%3E">https://lists.apache.org/thread.html/877813aaaa0e636adbc36106b89a54e0e6918f0884e9c8b67d5d5953%40%3Cdev.brooklyn.apache.org%3E</a></li>
<li><a href="https://github.com/apache/brooklyn-server/pull/430">https://github.com/apache/brooklyn-server/pull/430</a></li>
<li><a href="https://github.com/apache/brooklyn-ui/pull/37">https://github.com/apache/brooklyn-ui/pull/37</a></li>
<li><a href="https://github.com/advisories/GHSA-g2hf-g7fh-vg92">https://github.com/advisories/GHSA-g2hf-g7fh-vg92</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-g2hf-g7fh-vg92</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-05-17T00:50:35.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.apache.brooklyn:brooklyn-rest-resources] Apache Brooklyn is vulnerable to cross-site request forgery (CSRF)]]></title>
        <id>https://github.com/advisories/GHSA-g2hf-g7fh-vg92</id>
        <link href="https://github.com/advisories/GHSA-g2hf-g7fh-vg92"/>
        <updated>2025-04-22T22:15:51.000Z</updated>
        <content type="html"><![CDATA[<p>In Apache Brooklyn before 0.10.0, the REST server is vulnerable to cross-site request forgery (CSRF), which could permit a malicious web site to produce a link which, if clicked whilst a user is logged in to Brooklyn, would cause the server to execute the attacker's commands as the user. There is known to be a proof-of-concept exploit using this vulnerability.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2016-8737">https://nvd.nist.gov/vuln/detail/CVE-2016-8737</a></li>
<li><a href="https://brooklyn.apache.org/community/security/CVE-2016-8737.html">https://brooklyn.apache.org/community/security/CVE-2016-8737.html</a></li>
<li><a href="https://lists.apache.org/thread.html/877813aaaa0e636adbc36106b89a54e0e6918f0884e9c8b67d5d5953%40%3Cdev.brooklyn.apache.org%3E">https://lists.apache.org/thread.html/877813aaaa0e636adbc36106b89a54e0e6918f0884e9c8b67d5d5953%40%3Cdev.brooklyn.apache.org%3E</a></li>
<li><a href="https://github.com/apache/brooklyn-server/pull/430">https://github.com/apache/brooklyn-server/pull/430</a></li>
<li><a href="https://github.com/apache/brooklyn-ui/pull/37">https://github.com/apache/brooklyn-ui/pull/37</a></li>
<li><a href="https://github.com/advisories/GHSA-g2hf-g7fh-vg92">https://github.com/advisories/GHSA-g2hf-g7fh-vg92</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-g2hf-g7fh-vg92</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-05-17T00:50:35.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.opendaylight.odlparent:opendaylight-karaf-resources] Opendaylight will authenticate any username and password combination]]></title>
        <id>https://github.com/advisories/GHSA-qm24-4869-99pj</id>
        <link href="https://github.com/advisories/GHSA-qm24-4869-99pj"/>
        <updated>2025-04-22T20:02:05.000Z</updated>
        <content type="html"><![CDATA[<p>The custom authentication realm used by karaf-tomcat's "opendaylight" realm in Opendaylight before Helium SR3 will authenticate any username and password combination.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2015-1778">https://nvd.nist.gov/vuln/detail/CVE-2015-1778</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2015/03/20/3">http://www.openwall.com/lists/oss-security/2015/03/20/3</a></li>
<li><a href="https://web.archive.org/web/20150510044305/https://git.opendaylight.org/gerrit/#/c/16307">https://web.archive.org/web/20150510044305/https://git.opendaylight.org/gerrit/#/c/16307</a></li>
<li><a href="https://web.archive.org/web/20150510044305/https://wiki.opendaylight.org/view/Security_Advisories#.5BImportant.5D_CVE-2015-1778_OpenDaylight:_authentication_bypass">https://web.archive.org/web/20150510044305/https://wiki.opendaylight.org/view/Security_Advisories#.5BImportant.5D_CVE-2015-1778_OpenDaylight:_authentication_bypass</a></li>
<li><a href="https://github.com/advisories/GHSA-qm24-4869-99pj">https://github.com/advisories/GHSA-qm24-4869-99pj</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-qm24-4869-99pj</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2022-05-17T02:36:11.000Z</published>
    </entry>
</feed>