<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://azu.github.io/github-advisory-database-rss/go.rss</id>
    <title>Security Advisory for Go modules</title>
    <updated>2025-03-19T20:01:30.131Z</updated>
    <generator>github-advisory-database-rss</generator>
    <link rel="alternate" href="https://github.com/advisories?query=type%3Areviewed+ecosystem%3Ago"/>
    <subtitle>Security Advisory for Go modules on GitHub</subtitle>
    <rights>github-advisory-database-rss</rights>
    <category term="CRITICAL"/>
    <category term="HIGH"/>
    <category term="MODERATE"/>
    <category term="LOW"/>
    <entry>
        <title type="html"><![CDATA[[github.com/getkin/kin-openapi/openapi3filter] Improper Handling of Highly Compressed Data (Data Amplification) in github.com/getkin/kin-openapi/openapi3filter]]></title>
        <id>https://github.com/advisories/GHSA-wq9g-9vfc-cfq9</id>
        <link href="https://github.com/advisories/GHSA-wq9g-9vfc-cfq9"/>
        <updated>2025-03-19T18:12:54.000Z</updated>
        <content type="html"><![CDATA[<h3 id="summary">Summary</h3>
<p>When validating a request with a multipart/form-data schema, if the OpenAPI schema allows it, an attacker can upload a crafted ZIP file (e.g., a ZIP bomb), causing the server to consume all available system memory.</p>
<h3 id="details">Details</h3>
<p>The root cause comes from the <a href="https://github.com/getkin/kin-openapi/blob/6da871e0e170b7637eb568c265c08bc2b5d6e7a3/openapi3filter/req_resp_decoder.go#L1523">ZipFileBodyDecoder</a>, which is registered <a href="https://github.com/getkin/kin-openapi/blob/6da871e0e170b7637eb568c265c08bc2b5d6e7a3/openapi3filter/req_resp_decoder.go#L1275">automatically</a> by the module (contrary to what the <a href="https://github.com/getkin/kin-openapi?tab=readme-ov-file#custom-content-type-for-body-of-http-requestresponse">documentation says</a>.</p>
<h3 id="poc">PoC</h3>
<p>To reproduce the vulnerability, you can use the following OpenAPI schema:</p>
<pre><code class="language-yaml">openapi: 3.0.0
info:
  title: 'Validator'
  version: 0.0.1
paths:
  /:
    post:
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              required:
                - file
              properties:
                file:
                  type: string
                  format: binary
      responses:
        '200':
          description: Created
</code></pre>
<p>And this code to validate the request (nothing fancy, it basically only calls the <code>openapi3filter.ValidateRequest</code> function`):</p>
<pre><code class="language-go">package main

import (
    "fmt"
    "log"
    "net/http"

    "github.com/getkin/kin-openapi/openapi3filter"
    legacyrouter "github.com/getkin/kin-openapi/routers/legacy"

    "github.com/getkin/kin-openapi/openapi3"
)

func handler(w http.ResponseWriter, r *http.Request) {
    loader := openapi3.NewLoader()

    doc, err := loader.LoadFromFile("schema.yaml")
    if err != nil {
        http.Error(w, "Failed to load OpenAPI document", http.StatusInternalServerError)
        return
    }

    if err := doc.Validate(r.Context()); err != nil {
        http.Error(w, "Invalid OpenAPI document", http.StatusBadRequest)
        return
    }

    router, err := legacyrouter.NewRouter(doc)
    if err != nil {
        http.Error(w, "Failed to create router", http.StatusInternalServerError)
        return
    }

    route, pathParams, err := router.FindRoute(r)
    if err != nil {
        http.Error(w, "Failed to find route", http.StatusNotFound)
        return
    }

    input := &amp;openapi3filter.RequestValidationInput{
        Request:     r,
        QueryParams: r.URL.Query(),
        Route:       route,
        PathParams:  pathParams,
    }

    if err := openapi3filter.ValidateRequest(r.Context(), input); err != nil {
        http.Error(w, fmt.Sprintf("Request validation failed: %v", err), http.StatusBadRequest)
        return
    }

    w.Write([]byte("request ok !"))
}

func main() {
    http.HandleFunc("/", handler)
    log.Fatal(http.ListenAndServe(":8080", nil))

}
</code></pre>
<p>We also need to create a zip bomb. This command will create a 4.7GB file and compress it to to 4.7MB zip archive:</p>
<pre><code class="language-shell">perl -e 'print "0" x 5000000000' &gt; /tmp/bigfile.txt; zip -9 /tmp/bomb.zip /tmp/bigfile.txt
</code></pre>
<p>Run the PoC provided, and upload the zip bomb with <code>curl localhost:8080/  -F file="@/tmp/bomb.zip;type=application/zip" -v</code>.</p>
<p>Observe the memory consumption of the test server during and after the upload (it jumped to a bit over 22GB in my testing, with only a 4.7MB input file, you can reduce the size of the generated file to not kill your test machine when reproducing.) </p>
<h3 id="impact">Impact</h3>
<p>An attacker can trigger an out-of-memory (OOM) condition, leading to server crashes or degraded performance.
It seems to only be exploitable if the OpenAPI schema allows for multipart upload.</p>
<h3 id="remediation">Remediation</h3>
<p>I see at least 2 potential fixes/improvements:</p>
<ul>
<li>Do not register by default the zip file decoder (I honestly was a bit surprised to see it was enabled by default, it seems to be quite a niche use-case ?)</li>
<li>Update <code>ZipFileBodyDecoder</code> to enforce a maximum size of the decompressed archive and bailout as soon as it's reached (probably with a small default value and allow the users to configure it through the input options ?)</li>
</ul>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/getkin/kin-openapi/security/advisories/GHSA-wq9g-9vfc-cfq9">https://github.com/getkin/kin-openapi/security/advisories/GHSA-wq9g-9vfc-cfq9</a></li>
<li><a href="https://github.com/getkin/kin-openapi/pull/1059">https://github.com/getkin/kin-openapi/pull/1059</a></li>
<li><a href="https://github.com/getkin/kin-openapi/commit/67f0b233ffc01332f7d993f79490fbea5f4455f1">https://github.com/getkin/kin-openapi/commit/67f0b233ffc01332f7d993f79490fbea5f4455f1</a></li>
<li><a href="https://github.com/getkin/kin-openapi/blob/6da871e0e170b7637eb568c265c08bc2b5d6e7a3/openapi3filter/req_resp_decoder.go#L1275">https://github.com/getkin/kin-openapi/blob/6da871e0e170b7637eb568c265c08bc2b5d6e7a3/openapi3filter/req_resp_decoder.go#L1275</a></li>
<li><a href="https://github.com/getkin/kin-openapi/blob/6da871e0e170b7637eb568c265c08bc2b5d6e7a3/openapi3filter/req_resp_decoder.go#L1523">https://github.com/getkin/kin-openapi/blob/6da871e0e170b7637eb568c265c08bc2b5d6e7a3/openapi3filter/req_resp_decoder.go#L1523</a></li>
<li><a href="https://github.com/getkin/kin-openapi?tab=readme-ov-file#custom-content-type-for-body-of-http-requestresponse">https://github.com/getkin/kin-openapi?tab=readme-ov-file#custom-content-type-for-body-of-http-requestresponse</a></li>
<li><a href="https://github.com/advisories/GHSA-wq9g-9vfc-cfq9">https://github.com/advisories/GHSA-wq9g-9vfc-cfq9</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-wq9g-9vfc-cfq9</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2025-03-19T18:12:53.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/openshift/hive] Openshift Hive Exposes VCenter Credentials via ClusterProvision]]></title>
        <id>https://github.com/advisories/GHSA-c339-mwfc-fmr2</id>
        <link href="https://github.com/advisories/GHSA-c339-mwfc-fmr2"/>
        <updated>2025-03-17T21:27:58.000Z</updated>
        <content type="html"><![CDATA[<p>A flaw was found in Hive, a component of Multicluster Engine (MCE) and Advanced Cluster Management (ACM). This vulnerability causes VCenter credentials to be exposed in the ClusterProvision object after provisioning a VSphere cluster. Users with read access to ClusterProvision objects can extract sensitive credentials even if they do not have direct access to Kubernetes Secrets. This issue can lead to unauthorized VCenter access, cluster management, and privilege escalation.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2025-2241">https://nvd.nist.gov/vuln/detail/CVE-2025-2241</a></li>
<li><a href="https://access.redhat.com/security/cve/CVE-2025-2241">https://access.redhat.com/security/cve/CVE-2025-2241</a></li>
<li><a href="https://bugzilla.redhat.com/show_bug.cgi?id=2351350">https://bugzilla.redhat.com/show_bug.cgi?id=2351350</a></li>
<li><a href="https://github.com/advisories/GHSA-c339-mwfc-fmr2">https://github.com/advisories/GHSA-c339-mwfc-fmr2</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-c339-mwfc-fmr2</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2025-03-17T18:31:53.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/docker/buildx] buildx allows a possible credential leakage to telemetry endpoint]]></title>
        <id>https://github.com/advisories/GHSA-m4gq-fm9h-8q75</id>
        <link href="https://github.com/advisories/GHSA-m4gq-fm9h-8q75"/>
        <updated>2025-03-17T21:51:51.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>Some cache backends allow configuring their credentials by setting secrets directly as attribute values in <code>cache-to/cache-from</code> configuration. If this was done by the user, these secure values could be captured together with OpenTelemetry trace as part of the arguments and flags for the traced CLI command. Passing tokens to Github cache backend via environment variables or using registry authentication is not affected.</p>
<p>If you passed a token value like this and use a custom OpenTelemetry collector for computing traces you should make sure that your traces are kept secure. OpenTelemetry traces are also saved in BuildKit daemon's history records.</p>
<h3 id="patches">Patches</h3>
<p>Issue has been fixed in Buildx v0.21.3 or newer.</p>
<h3 id="workarounds">Workarounds</h3>
<p>Avoid passing cache backend credentials with CLI arguments. Make sure access to traces and BuildKit history records is kept secure.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/docker/buildx/security/advisories/GHSA-m4gq-fm9h-8q75">https://github.com/docker/buildx/security/advisories/GHSA-m4gq-fm9h-8q75</a></li>
<li><a href="https://github.com/docker/buildx/commit/18ccba072076ddbfb0aeedd6746d7719b0729b58">https://github.com/docker/buildx/commit/18ccba072076ddbfb0aeedd6746d7719b0729b58</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2025-0495">https://nvd.nist.gov/vuln/detail/CVE-2025-0495</a></li>
<li><a href="https://github.com/docker/buildx">https://github.com/docker/buildx</a></li>
<li><a href="https://github.com/advisories/GHSA-m4gq-fm9h-8q75">https://github.com/advisories/GHSA-m4gq-fm9h-8q75</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-m4gq-fm9h-8q75</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2025-03-17T21:27:43.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/expr-lang/expr] Memory Exhaustion in Expr Parser with Unrestricted Input]]></title>
        <id>https://github.com/advisories/GHSA-93mq-9ffx-83m2</id>
        <link href="https://github.com/advisories/GHSA-93mq-9ffx-83m2"/>
        <updated>2025-03-17T21:26:25.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>If the Expr expression parser is given an <strong>unbounded input string</strong>, it will attempt to compile the <em>entire</em> string and generate an Abstract Syntax Tree (AST) node for each part of the expression. In scenarios where input size isn’t limited, a malicious or inadvertent extremely large expression can consume excessive memory as the parser builds a huge AST. This can ultimately lead to <strong>excessive memory usage</strong> and an <strong>Out-Of-Memory (OOM) crash</strong> of the process. This issue is relatively uncommon and will only manifest when there are <strong>no restrictions on the input size</strong>, i.e. the expression length is allowed to grow arbitrarily large. In typical use cases where inputs are bounded or validated, this problem would not occur.</p>
<h3 id="patches">Patches</h3>
<p>The problem has been <strong>patched</strong> in the latest versions of the Expr library. The fix introduces compile-time limits on the number of AST nodes and memory usage during parsing, preventing any single expression from exhausting resources. Users should upgrade to <strong>Expr version 1.17.0 or later</strong>, as this release includes the new node budget and memory limit safeguards. Upgrading to v1.17.0 ensures that extremely deep or large expressions are detected and safely aborted during compilation, avoiding the OOM condition.</p>
<h3 id="workarounds">Workarounds</h3>
<p>For users who cannot immediately upgrade, the recommended workaround is to <strong>impose an input size restriction before parsing</strong>. In practice, this means validating or limiting the length of expression strings that your application will accept. For example, set a maximum allowable number of characters (or nodes) for any expression and reject or truncate inputs that exceed this limit. By ensuring no unbounded-length expression is ever fed into the parser, you can prevent the parser from constructing a pathologically large AST and avoid potential memory exhaustion. In short, <strong>pre-validate and cap input size</strong> as a safeguard in the absence of the patch.</p>
<h3 id="references">References</h3>
<ul>
<li>#762</li>
</ul>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/expr-lang/expr/security/advisories/GHSA-93mq-9ffx-83m2">https://github.com/expr-lang/expr/security/advisories/GHSA-93mq-9ffx-83m2</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2025-29786">https://nvd.nist.gov/vuln/detail/CVE-2025-29786</a></li>
<li><a href="https://github.com/expr-lang/expr/pull/762">https://github.com/expr-lang/expr/pull/762</a></li>
<li><a href="https://github.com/expr-lang/expr/commit/0d19441454426d2f58edb22c31f3ba5f99c7a26e">https://github.com/expr-lang/expr/commit/0d19441454426d2f58edb22c31f3ba5f99c7a26e</a></li>
<li><a href="https://github.com/advisories/GHSA-93mq-9ffx-83m2">https://github.com/advisories/GHSA-93mq-9ffx-83m2</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-93mq-9ffx-83m2</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2025-03-17T21:26:22.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/metal3-io/baremetal-operator/apis] Bare Metal Operator (BMO) can expose any secret from other namespaces via BMCEventSubscription CRD]]></title>
        <id>https://github.com/advisories/GHSA-c98h-7hp9-v9hq</id>
        <link href="https://github.com/advisories/GHSA-c98h-7hp9-v9hq"/>
        <updated>2025-03-19T14:59:19.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>The Bare Metal Operator (BMO) implements a Kubernetes API for managing bare metal hosts in Metal3. </p>
<p>Baremetal Operator enables users to load Secret from arbitrary namespaces upon deployment of the namespace scoped Custom Resource <code>BMCEventSubscription</code> (BMCES). An adversary Kubernetes account with only namespace level roles (e.g. a tenant controlling a namespace) may create a BMCES in their authorized namespace and then load Secrets from their unauthorized namespaces to their authorized namespace via the Baremetal Operator controller's cluster scoped privileges, causing Secret leakage.</p>
<h3 id="patches">Patches</h3>
<p>The patch makes BMO refuse to read Secrets from other namespace than where the corresponding Bare Metal Host (BMH) resource is. The patch does not change the <code>BMCEventSubscription</code> API in BMO, but stricter validation will deny the request at admission time. It will also prevent the controller reading such Secrets, in case the BMCES resource has already been deployed.</p>
<p>The issue exists for all versions of BMO, and is patched in BMO releases v0.9.1 and v0.8.1. Prior upgrading to patched BMO version, duplicate any existing Secret pointed to by <code>BMCEventSubscription</code>'s <code>httpHeadersRef</code> to the same namespace where the corresponding BMH exists. After upgrade, remove the old Secrets.</p>
<h3 id="workarounds">Workarounds</h3>
<p>Operator can configure BMO RBAC to be namespace scoped, instead of cluster scoped, to prevent BMO from accessing Secrets from other namespaces, and/or use <code>WATCH_NAMESPACE</code> configuration option to limit BMO to single namespace.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/metal3-io/baremetal-operator/commit/19f8443b1fe182f76dd81b43122e8dd102f8b94c">patch to main</a></li>
<li><a href="https://github.com/metal3-io/baremetal-operator/pull/2321">patch to release-0.9</a></li>
<li><a href="https://github.com/metal3-io/baremetal-operator/pull/2322">patch to release-0.8</a></li>
<li><a href="https://github.com/metal3-io/metal3-docs/blob/main/design/baremetal-operator/bmc-events.md">BMCEventSubscription design document</a></li>
</ul>
<h3 id="credits">Credits</h3>
<p>Metal3 Security Team thanks <a href="https://github.com/WHALEEYE">WHALEEYE</a> and <a href="https://github.com/debuggerchen">debuggerchen</a> of <a href="https://users.cs.northwestern.edu/~list/">Lab for Internet and Security Technology</a> for responsible vulnerability disclosure.</p>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/metal3-io/baremetal-operator/security/advisories/GHSA-c98h-7hp9-v9hq">https://github.com/metal3-io/baremetal-operator/security/advisories/GHSA-c98h-7hp9-v9hq</a></li>
<li><a href="https://github.com/metal3-io/baremetal-operator/pull/2321">https://github.com/metal3-io/baremetal-operator/pull/2321</a></li>
<li><a href="https://github.com/metal3-io/baremetal-operator/pull/2322">https://github.com/metal3-io/baremetal-operator/pull/2322</a></li>
<li><a href="https://github.com/metal3-io/baremetal-operator/commit/19f8443b1fe182f76dd81b43122e8dd102f8b94c">https://github.com/metal3-io/baremetal-operator/commit/19f8443b1fe182f76dd81b43122e8dd102f8b94c</a></li>
<li><a href="https://github.com/metal3-io/metal3-docs/blob/main/design/baremetal-operator/bmc-events.md">https://github.com/metal3-io/metal3-docs/blob/main/design/baremetal-operator/bmc-events.md</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2025-29781">https://nvd.nist.gov/vuln/detail/CVE-2025-29781</a></li>
<li><a href="https://github.com/advisories/GHSA-c98h-7hp9-v9hq">https://github.com/advisories/GHSA-c98h-7hp9-v9hq</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-c98h-7hp9-v9hq</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2025-03-17T21:26:14.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/metal3-io/baremetal-operator/apis] Bare Metal Operator (BMO) can expose any secret from other namespaces via BMCEventSubscription CRD]]></title>
        <id>https://github.com/advisories/GHSA-c98h-7hp9-v9hq</id>
        <link href="https://github.com/advisories/GHSA-c98h-7hp9-v9hq"/>
        <updated>2025-03-19T14:59:19.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>The Bare Metal Operator (BMO) implements a Kubernetes API for managing bare metal hosts in Metal3. </p>
<p>Baremetal Operator enables users to load Secret from arbitrary namespaces upon deployment of the namespace scoped Custom Resource <code>BMCEventSubscription</code> (BMCES). An adversary Kubernetes account with only namespace level roles (e.g. a tenant controlling a namespace) may create a BMCES in their authorized namespace and then load Secrets from their unauthorized namespaces to their authorized namespace via the Baremetal Operator controller's cluster scoped privileges, causing Secret leakage.</p>
<h3 id="patches">Patches</h3>
<p>The patch makes BMO refuse to read Secrets from other namespace than where the corresponding Bare Metal Host (BMH) resource is. The patch does not change the <code>BMCEventSubscription</code> API in BMO, but stricter validation will deny the request at admission time. It will also prevent the controller reading such Secrets, in case the BMCES resource has already been deployed.</p>
<p>The issue exists for all versions of BMO, and is patched in BMO releases v0.9.1 and v0.8.1. Prior upgrading to patched BMO version, duplicate any existing Secret pointed to by <code>BMCEventSubscription</code>'s <code>httpHeadersRef</code> to the same namespace where the corresponding BMH exists. After upgrade, remove the old Secrets.</p>
<h3 id="workarounds">Workarounds</h3>
<p>Operator can configure BMO RBAC to be namespace scoped, instead of cluster scoped, to prevent BMO from accessing Secrets from other namespaces, and/or use <code>WATCH_NAMESPACE</code> configuration option to limit BMO to single namespace.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/metal3-io/baremetal-operator/commit/19f8443b1fe182f76dd81b43122e8dd102f8b94c">patch to main</a></li>
<li><a href="https://github.com/metal3-io/baremetal-operator/pull/2321">patch to release-0.9</a></li>
<li><a href="https://github.com/metal3-io/baremetal-operator/pull/2322">patch to release-0.8</a></li>
<li><a href="https://github.com/metal3-io/metal3-docs/blob/main/design/baremetal-operator/bmc-events.md">BMCEventSubscription design document</a></li>
</ul>
<h3 id="credits">Credits</h3>
<p>Metal3 Security Team thanks <a href="https://github.com/WHALEEYE">WHALEEYE</a> and <a href="https://github.com/debuggerchen">debuggerchen</a> of <a href="https://users.cs.northwestern.edu/~list/">Lab for Internet and Security Technology</a> for responsible vulnerability disclosure.</p>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/metal3-io/baremetal-operator/security/advisories/GHSA-c98h-7hp9-v9hq">https://github.com/metal3-io/baremetal-operator/security/advisories/GHSA-c98h-7hp9-v9hq</a></li>
<li><a href="https://github.com/metal3-io/baremetal-operator/pull/2321">https://github.com/metal3-io/baremetal-operator/pull/2321</a></li>
<li><a href="https://github.com/metal3-io/baremetal-operator/pull/2322">https://github.com/metal3-io/baremetal-operator/pull/2322</a></li>
<li><a href="https://github.com/metal3-io/baremetal-operator/commit/19f8443b1fe182f76dd81b43122e8dd102f8b94c">https://github.com/metal3-io/baremetal-operator/commit/19f8443b1fe182f76dd81b43122e8dd102f8b94c</a></li>
<li><a href="https://github.com/metal3-io/metal3-docs/blob/main/design/baremetal-operator/bmc-events.md">https://github.com/metal3-io/metal3-docs/blob/main/design/baremetal-operator/bmc-events.md</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2025-29781">https://nvd.nist.gov/vuln/detail/CVE-2025-29781</a></li>
<li><a href="https://github.com/advisories/GHSA-c98h-7hp9-v9hq">https://github.com/advisories/GHSA-c98h-7hp9-v9hq</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-c98h-7hp9-v9hq</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2025-03-17T21:26:14.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/containerd/containerd] containerd has an integer overflow in User ID handling]]></title>
        <id>https://github.com/advisories/GHSA-265r-hfxg-fhmg</id>
        <link href="https://github.com/advisories/GHSA-265r-hfxg-fhmg"/>
        <updated>2025-03-19T14:59:05.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>A bug was found in containerd where containers launched with a User set as a <code>UID:GID</code> larger than the maximum 32-bit signed integer can cause an overflow condition where the container ultimately runs as root (UID 0). This could cause unexpected behavior for environments that require containers to run as a non-root user.</p>
<h3 id="patches">Patches</h3>
<p>This bug has been fixed in the following containerd versions: </p>
<ul>
<li>2.0.4 (Fixed in <a href="https://github.com/containerd/containerd/commit/1a43cb6a1035441f9aca8f5666a9b3ef9e70ab20">https://github.com/containerd/containerd/commit/1a43cb6a1035441f9aca8f5666a9b3ef9e70ab20</a>)</li>
<li>1.7.27 (Fixed in <a href="https://github.com/containerd/containerd/commit/05044ec0a9a75232cad458027ca83437aae3f4da">https://github.com/containerd/containerd/commit/05044ec0a9a75232cad458027ca83437aae3f4da</a>)</li>
<li>1.6.38 (Fixed in <a href="https://github.com/containerd/containerd/commit/cf158e884cfe4812a6c371b59e4ea9bc4c46e51a">https://github.com/containerd/containerd/commit/cf158e884cfe4812a6c371b59e4ea9bc4c46e51a</a>)</li>
</ul>
<p>Users should update to these versions to resolve the issue.</p>
<h3 id="workarounds">Workarounds</h3>
<p>Ensure that only trusted images are used and that only trusted users have permissions to import images.</p>
<h3 id="credits">Credits</h3>
<p>The containerd project would like to thank <a href="https://github.com/p4ck3t0">Benjamin Koltermann</a> and <a href="https://github.com/emxll">emxll</a> for responsibly disclosing this issue in accordance with the <a href="https://github.com/containerd/project/blob/main/SECURITY.md">containerd security policy</a>.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-40635">https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-40635</a></li>
</ul>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory:</p>
<ul>
<li>Open an issue in <a href="https://github.com/containerd/containerd/issues/new/choose">containerd</a></li>
<li>Email us at <a href="mailto:security@containerd.io">security@containerd.io</a></li>
</ul>
<p>To report a security issue in containerd:</p>
<ul>
<li><a href="https://github.com/containerd/containerd/security/advisories/new">Report a new vulnerability</a></li>
<li>Email us at <a href="mailto:security@containerd.io">security@containerd.io</a></li>
</ul>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/containerd/containerd/security/advisories/GHSA-265r-hfxg-fhmg">https://github.com/containerd/containerd/security/advisories/GHSA-265r-hfxg-fhmg</a></li>
<li><a href="https://github.com/containerd/containerd/commit/05044ec0a9a75232cad458027ca83437aae3f4da">https://github.com/containerd/containerd/commit/05044ec0a9a75232cad458027ca83437aae3f4da</a></li>
<li><a href="https://github.com/containerd/containerd/commit/1a43cb6a1035441f9aca8f5666a9b3ef9e70ab20">https://github.com/containerd/containerd/commit/1a43cb6a1035441f9aca8f5666a9b3ef9e70ab20</a></li>
<li><a href="https://github.com/containerd/containerd/commit/cf158e884cfe4812a6c371b59e4ea9bc4c46e51a">https://github.com/containerd/containerd/commit/cf158e884cfe4812a6c371b59e4ea9bc4c46e51a</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-40635">https://nvd.nist.gov/vuln/detail/CVE-2024-40635</a></li>
<li><a href="https://github.com/advisories/GHSA-265r-hfxg-fhmg">https://github.com/advisories/GHSA-265r-hfxg-fhmg</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-265r-hfxg-fhmg</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2025-03-17T21:24:42.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/containerd/containerd] containerd has an integer overflow in User ID handling]]></title>
        <id>https://github.com/advisories/GHSA-265r-hfxg-fhmg</id>
        <link href="https://github.com/advisories/GHSA-265r-hfxg-fhmg"/>
        <updated>2025-03-19T14:59:05.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>A bug was found in containerd where containers launched with a User set as a <code>UID:GID</code> larger than the maximum 32-bit signed integer can cause an overflow condition where the container ultimately runs as root (UID 0). This could cause unexpected behavior for environments that require containers to run as a non-root user.</p>
<h3 id="patches">Patches</h3>
<p>This bug has been fixed in the following containerd versions: </p>
<ul>
<li>2.0.4 (Fixed in <a href="https://github.com/containerd/containerd/commit/1a43cb6a1035441f9aca8f5666a9b3ef9e70ab20">https://github.com/containerd/containerd/commit/1a43cb6a1035441f9aca8f5666a9b3ef9e70ab20</a>)</li>
<li>1.7.27 (Fixed in <a href="https://github.com/containerd/containerd/commit/05044ec0a9a75232cad458027ca83437aae3f4da">https://github.com/containerd/containerd/commit/05044ec0a9a75232cad458027ca83437aae3f4da</a>)</li>
<li>1.6.38 (Fixed in <a href="https://github.com/containerd/containerd/commit/cf158e884cfe4812a6c371b59e4ea9bc4c46e51a">https://github.com/containerd/containerd/commit/cf158e884cfe4812a6c371b59e4ea9bc4c46e51a</a>)</li>
</ul>
<p>Users should update to these versions to resolve the issue.</p>
<h3 id="workarounds">Workarounds</h3>
<p>Ensure that only trusted images are used and that only trusted users have permissions to import images.</p>
<h3 id="credits">Credits</h3>
<p>The containerd project would like to thank <a href="https://github.com/p4ck3t0">Benjamin Koltermann</a> and <a href="https://github.com/emxll">emxll</a> for responsibly disclosing this issue in accordance with the <a href="https://github.com/containerd/project/blob/main/SECURITY.md">containerd security policy</a>.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-40635">https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-40635</a></li>
</ul>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory:</p>
<ul>
<li>Open an issue in <a href="https://github.com/containerd/containerd/issues/new/choose">containerd</a></li>
<li>Email us at <a href="mailto:security@containerd.io">security@containerd.io</a></li>
</ul>
<p>To report a security issue in containerd:</p>
<ul>
<li><a href="https://github.com/containerd/containerd/security/advisories/new">Report a new vulnerability</a></li>
<li>Email us at <a href="mailto:security@containerd.io">security@containerd.io</a></li>
</ul>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/containerd/containerd/security/advisories/GHSA-265r-hfxg-fhmg">https://github.com/containerd/containerd/security/advisories/GHSA-265r-hfxg-fhmg</a></li>
<li><a href="https://github.com/containerd/containerd/commit/05044ec0a9a75232cad458027ca83437aae3f4da">https://github.com/containerd/containerd/commit/05044ec0a9a75232cad458027ca83437aae3f4da</a></li>
<li><a href="https://github.com/containerd/containerd/commit/1a43cb6a1035441f9aca8f5666a9b3ef9e70ab20">https://github.com/containerd/containerd/commit/1a43cb6a1035441f9aca8f5666a9b3ef9e70ab20</a></li>
<li><a href="https://github.com/containerd/containerd/commit/cf158e884cfe4812a6c371b59e4ea9bc4c46e51a">https://github.com/containerd/containerd/commit/cf158e884cfe4812a6c371b59e4ea9bc4c46e51a</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-40635">https://nvd.nist.gov/vuln/detail/CVE-2024-40635</a></li>
<li><a href="https://github.com/advisories/GHSA-265r-hfxg-fhmg">https://github.com/advisories/GHSA-265r-hfxg-fhmg</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-265r-hfxg-fhmg</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2025-03-17T21:24:42.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/containerd/containerd/v2] containerd has an integer overflow in User ID handling]]></title>
        <id>https://github.com/advisories/GHSA-265r-hfxg-fhmg</id>
        <link href="https://github.com/advisories/GHSA-265r-hfxg-fhmg"/>
        <updated>2025-03-19T14:59:05.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>A bug was found in containerd where containers launched with a User set as a <code>UID:GID</code> larger than the maximum 32-bit signed integer can cause an overflow condition where the container ultimately runs as root (UID 0). This could cause unexpected behavior for environments that require containers to run as a non-root user.</p>
<h3 id="patches">Patches</h3>
<p>This bug has been fixed in the following containerd versions: </p>
<ul>
<li>2.0.4 (Fixed in <a href="https://github.com/containerd/containerd/commit/1a43cb6a1035441f9aca8f5666a9b3ef9e70ab20">https://github.com/containerd/containerd/commit/1a43cb6a1035441f9aca8f5666a9b3ef9e70ab20</a>)</li>
<li>1.7.27 (Fixed in <a href="https://github.com/containerd/containerd/commit/05044ec0a9a75232cad458027ca83437aae3f4da">https://github.com/containerd/containerd/commit/05044ec0a9a75232cad458027ca83437aae3f4da</a>)</li>
<li>1.6.38 (Fixed in <a href="https://github.com/containerd/containerd/commit/cf158e884cfe4812a6c371b59e4ea9bc4c46e51a">https://github.com/containerd/containerd/commit/cf158e884cfe4812a6c371b59e4ea9bc4c46e51a</a>)</li>
</ul>
<p>Users should update to these versions to resolve the issue.</p>
<h3 id="workarounds">Workarounds</h3>
<p>Ensure that only trusted images are used and that only trusted users have permissions to import images.</p>
<h3 id="credits">Credits</h3>
<p>The containerd project would like to thank <a href="https://github.com/p4ck3t0">Benjamin Koltermann</a> and <a href="https://github.com/emxll">emxll</a> for responsibly disclosing this issue in accordance with the <a href="https://github.com/containerd/project/blob/main/SECURITY.md">containerd security policy</a>.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-40635">https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-40635</a></li>
</ul>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory:</p>
<ul>
<li>Open an issue in <a href="https://github.com/containerd/containerd/issues/new/choose">containerd</a></li>
<li>Email us at <a href="mailto:security@containerd.io">security@containerd.io</a></li>
</ul>
<p>To report a security issue in containerd:</p>
<ul>
<li><a href="https://github.com/containerd/containerd/security/advisories/new">Report a new vulnerability</a></li>
<li>Email us at <a href="mailto:security@containerd.io">security@containerd.io</a></li>
</ul>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/containerd/containerd/security/advisories/GHSA-265r-hfxg-fhmg">https://github.com/containerd/containerd/security/advisories/GHSA-265r-hfxg-fhmg</a></li>
<li><a href="https://github.com/containerd/containerd/commit/05044ec0a9a75232cad458027ca83437aae3f4da">https://github.com/containerd/containerd/commit/05044ec0a9a75232cad458027ca83437aae3f4da</a></li>
<li><a href="https://github.com/containerd/containerd/commit/1a43cb6a1035441f9aca8f5666a9b3ef9e70ab20">https://github.com/containerd/containerd/commit/1a43cb6a1035441f9aca8f5666a9b3ef9e70ab20</a></li>
<li><a href="https://github.com/containerd/containerd/commit/cf158e884cfe4812a6c371b59e4ea9bc4c46e51a">https://github.com/containerd/containerd/commit/cf158e884cfe4812a6c371b59e4ea9bc4c46e51a</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-40635">https://nvd.nist.gov/vuln/detail/CVE-2024-40635</a></li>
<li><a href="https://github.com/advisories/GHSA-265r-hfxg-fhmg">https://github.com/advisories/GHSA-265r-hfxg-fhmg</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-265r-hfxg-fhmg</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2025-03-17T21:24:42.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/onosproject/onos-lib-go] onos-lib-go allows an index out-of-range panic]]></title>
        <id>https://github.com/advisories/GHSA-jrqj-6vq2-7r63</id>
        <link href="https://github.com/advisories/GHSA-jrqj-6vq2-7r63"/>
        <updated>2025-03-17T15:35:37.000Z</updated>
        <content type="html"><![CDATA[<p>Open Networking Foundation SD-RAN ONOS onos-lib-go 0.10.28 allows an index out-of-range panic in asn1/aper GetBitString via a zero value of numBits.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2025-30077">https://nvd.nist.gov/vuln/detail/CVE-2025-30077</a></li>
<li><a href="https://github.com/onosproject/onos-lib-go/issues/295">https://github.com/onosproject/onos-lib-go/issues/295</a></li>
<li><a href="https://github.com/onosproject/onos-lib-go/commit/55579ffad35f59a5945c7861d944cd57a3b4b3d0">https://github.com/onosproject/onos-lib-go/commit/55579ffad35f59a5945c7861d944cd57a3b4b3d0</a></li>
<li><a href="https://github.com/advisories/GHSA-jrqj-6vq2-7r63">https://github.com/advisories/GHSA-jrqj-6vq2-7r63</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-jrqj-6vq2-7r63</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2025-03-16T03:31:32.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[golang.org/x/net/html] Non-linear parsing of case-insensitive content in golang.org/x/net/html]]></title>
        <id>https://github.com/advisories/GHSA-w32m-9786-jp63</id>
        <link href="https://github.com/advisories/GHSA-w32m-9786-jp63"/>
        <updated>2025-03-16T17:25:11.000Z</updated>
        <content type="html"><![CDATA[<p>An attacker can craft an input to the Parse functions that would be processed non-linearly with respect to its length, resulting in extremely slow parsing. This could cause a denial of service.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-45338">https://nvd.nist.gov/vuln/detail/CVE-2024-45338</a></li>
<li><a href="https://github.com/golang/go/issues/70906">https://github.com/golang/go/issues/70906</a></li>
<li><a href="https://go.dev/cl/637536">https://go.dev/cl/637536</a></li>
<li><a href="https://go.dev/issue/70906">https://go.dev/issue/70906</a></li>
<li><a href="https://groups.google.com/g/golang-announce/c/wSCRmFnNmPA/m/Lvcd0mRMAwAJ">https://groups.google.com/g/golang-announce/c/wSCRmFnNmPA/m/Lvcd0mRMAwAJ</a></li>
<li><a href="https://pkg.go.dev/vuln/GO-2024-3333">https://pkg.go.dev/vuln/GO-2024-3333</a></li>
<li><a href="https://github.com/advisories/GHSA-w32m-9786-jp63">https://github.com/advisories/GHSA-w32m-9786-jp63</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-w32m-9786-jp63</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-12-18T21:59:48.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/go-vela/server] Vela Server Has Insufficient Webhook Payload Data Verification]]></title>
        <id>https://github.com/advisories/GHSA-9m63-33q3-xq5x</id>
        <link href="https://github.com/advisories/GHSA-9m63-33q3-xq5x"/>
        <updated>2025-03-14T20:02:47.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>Users with an enabled repository with access to repo level CI secrets in Vela are vulnerable to the exploit. </p>
<p>Any user with access to the CI instance and the linked source control manager can perform the exploit.</p>
<h3>Method</h3>
<p>By spoofing a webhook payload with a specific set of headers and body data, an attacker could transfer ownership of a repository and its repo level secrets to a separate repository. </p>
<p>These secrets could be exfiltrated by follow up builds to the repository.</p>
<h3 id="patches">Patches</h3>
<p><code>v0.26.3</code> — Image: <code>target/vela-server:v0.26.3</code>
<code>v0.25.3</code> — Image: <code>target/vela-server:v0.25.3</code></p>
<h3 id="workarounds">Workarounds</h3>
<p><em>Is there a way for users to fix or remediate the vulnerability without upgrading?</em></p>
<p>There are no workarounds to the issue.</p>
<h3 id="references">References</h3>
<p><em>Are there any links users can visit to find out more?</em></p>
<p>Please see linked CWEs (common weakness enumerators) for more information.</p>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/go-vela/server/security/advisories/GHSA-9m63-33q3-xq5x">https://github.com/go-vela/server/security/advisories/GHSA-9m63-33q3-xq5x</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2025-27616">https://nvd.nist.gov/vuln/detail/CVE-2025-27616</a></li>
<li><a href="https://github.com/go-vela/server/commit/257886e5a3eea518548387885894e239668584f5">https://github.com/go-vela/server/commit/257886e5a3eea518548387885894e239668584f5</a></li>
<li><a href="https://github.com/go-vela/server/commit/67c1892e2464dc54b8d2588815dfb7819222500b">https://github.com/go-vela/server/commit/67c1892e2464dc54b8d2588815dfb7819222500b</a></li>
<li><a href="https://github.com/go-vela/server/releases/tag/v0.25.3">https://github.com/go-vela/server/releases/tag/v0.25.3</a></li>
<li><a href="https://github.com/go-vela/server/releases/tag/v0.26.3">https://github.com/go-vela/server/releases/tag/v0.26.3</a></li>
<li><a href="https://pkg.go.dev/vuln/GO-2025-3509">https://pkg.go.dev/vuln/GO-2025-3509</a></li>
<li><a href="https://github.com/advisories/GHSA-9m63-33q3-xq5x">https://github.com/advisories/GHSA-9m63-33q3-xq5x</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-9m63-33q3-xq5x</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2025-03-10T22:24:35.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/deislabs/ratify] Ratify Azure authentication providers can leak authentication tokens to non-Azure container registries]]></title>
        <id>https://github.com/advisories/GHSA-44f7-5fj5-h4px</id>
        <link href="https://github.com/advisories/GHSA-44f7-5fj5-h4px"/>
        <updated>2025-03-14T20:00:48.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>In a Kubernetes environment, Ratify can be configured to authenticate to a private Azure Container Registry (ACR). The Azure workload identity and Azure managed identity authentication providers are configured in this setup. Users that configure a private ACR to be used with the Azure authentication providers may be impacted.
Both Azure authentication providers attempt to exchange an Entra ID (EID) token for an ACR refresh token. However, Ratify’s Azure authentication providers did not verify that the target registry is an ACR. This could have led to the EID token being presented to a non-ACR registry during token exchange. EID tokens with ACR access can potentially be extracted and abused if a user workload contains an image reference to a malicious registry.</p>
<h3 id="patches">Patches</h3>
<p>The Azure workload identity and Azure managed identity authentication providers are updated to add new validation prior to EID token exchange. Validation relies upon registry domain validation against a pre-configured list of well-known ACR endpoints. EID token exchange will be executed only if at least one of the configured well-known domain suffixes (wildcard support included) matches the registry domain of the image reference.</p>
<h3 id="credits">Credits</h3>
<p>The <code>ratify</code> project would like to thank Shiwei Zhang (@shizhMSFT) and Binbin Li (@binbin-li) for responsibly disclosing the issue and thank Binbin Li (@binbin-li) and Akash Singhal (@akashsinghal) for actively mitigating the issue.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/ratify-project/ratify/security/advisories/GHSA-44f7-5fj5-h4px">https://github.com/ratify-project/ratify/security/advisories/GHSA-44f7-5fj5-h4px</a></li>
<li><a href="https://github.com/ratify-project/ratify/commit/84c7c48fa76bb9a1c9583635d1e90bc25b1a546c">https://github.com/ratify-project/ratify/commit/84c7c48fa76bb9a1c9583635d1e90bc25b1a546c</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2025-27403">https://nvd.nist.gov/vuln/detail/CVE-2025-27403</a></li>
<li><a href="https://github.com/ratify-project/ratify/commit/0ec0c08490e3d672ae64b1a220c90d5484f1c93f">https://github.com/ratify-project/ratify/commit/0ec0c08490e3d672ae64b1a220c90d5484f1c93f</a></li>
<li><a href="https://pkg.go.dev/vuln/GO-2025-3511">https://pkg.go.dev/vuln/GO-2025-3511</a></li>
<li><a href="https://github.com/advisories/GHSA-44f7-5fj5-h4px">https://github.com/advisories/GHSA-44f7-5fj5-h4px</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-44f7-5fj5-h4px</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2025-03-11T15:27:16.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[k8s.io/kubernetes] Kubernetes GitRepo Volume Inadvertent Local Repository Access]]></title>
        <id>https://github.com/advisories/GHSA-3wgm-2gw2-vh5m</id>
        <link href="https://github.com/advisories/GHSA-3wgm-2gw2-vh5m"/>
        <updated>2025-03-14T17:30:07.000Z</updated>
        <content type="html"><![CDATA[<p>A security vulnerability was discovered in Kubernetes that could allow a user with create pod permission to exploit gitRepo volumes to access local git repositories belonging to other pods on the same node. This CVE only affects Kubernetes clusters that utilize the in-tree gitRepo volume to clone git repositories from other pods within the same node. Since the in-tree gitRepo volume feature has been deprecated and will not receive security updates upstream, any cluster still using this feature remains vulnerable.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2025-1767">https://nvd.nist.gov/vuln/detail/CVE-2025-1767</a></li>
<li><a href="https://github.com/kubernetes/kubernetes/pull/130786">https://github.com/kubernetes/kubernetes/pull/130786</a></li>
<li><a href="https://groups.google.com/g/kubernetes-security-announce/c/19irihsKg7s">https://groups.google.com/g/kubernetes-security-announce/c/19irihsKg7s</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2025/03/13/9">http://www.openwall.com/lists/oss-security/2025/03/13/9</a></li>
<li><a href="https://github.com/advisories/GHSA-3wgm-2gw2-vh5m">https://github.com/advisories/GHSA-3wgm-2gw2-vh5m</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-3wgm-2gw2-vh5m</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2025-03-13T18:32:22.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[k8s.io/kubernetes] Kubernetes allows Command Injection affecting Windows nodes via nodes/*/logs/query API]]></title>
        <id>https://github.com/advisories/GHSA-vv39-3w5q-974q</id>
        <link href="https://github.com/advisories/GHSA-vv39-3w5q-974q"/>
        <updated>2025-03-13T21:24:16.000Z</updated>
        <content type="html"><![CDATA[<p>A security vulnerability has been discovered in Kubernetes windows nodes that could allow a user with the ability to query a node's '/logs' endpoint to execute arbitrary commands on the host.  This CVE affects only Windows worker nodes. Your worker node is vulnerable to this issue if it is running one of the affected versions listed below.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-9042">https://nvd.nist.gov/vuln/detail/CVE-2024-9042</a></li>
<li><a href="https://github.com/kubernetes/kubernetes/issues/129654">https://github.com/kubernetes/kubernetes/issues/129654</a></li>
<li><a href="https://groups.google.com/g/kubernetes-security-announce/c/9C3vn6aCSVg">https://groups.google.com/g/kubernetes-security-announce/c/9C3vn6aCSVg</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2025/01/16/1">http://www.openwall.com/lists/oss-security/2025/01/16/1</a></li>
<li><a href="https://github.com/kubernetes/kubernetes/commit/45f4ccc2153bbb782253704cbe24c05e22b5d60c">https://github.com/kubernetes/kubernetes/commit/45f4ccc2153bbb782253704cbe24c05e22b5d60c</a></li>
<li><a href="https://github.com/kubernetes/kubernetes/commit/5fe148234f8ab1184f26069c4f7bef6c37efe347">https://github.com/kubernetes/kubernetes/commit/5fe148234f8ab1184f26069c4f7bef6c37efe347</a></li>
<li><a href="https://github.com/kubernetes/kubernetes/commit/75c83a6871dc030675288c6d63c275a43c2f0d55">https://github.com/kubernetes/kubernetes/commit/75c83a6871dc030675288c6d63c275a43c2f0d55</a></li>
<li><a href="https://github.com/kubernetes/kubernetes/commit/fb0187c2bf7061258bb89891edb1237261eb7abc">https://github.com/kubernetes/kubernetes/commit/fb0187c2bf7061258bb89891edb1237261eb7abc</a></li>
<li><a href="https://github.com/advisories/GHSA-vv39-3w5q-974q">https://github.com/advisories/GHSA-vv39-3w5q-974q</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-vv39-3w5q-974q</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2025-03-13T18:32:22.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[k8s.io/kubernetes] Kubernetes allows Command Injection affecting Windows nodes via nodes/*/logs/query API]]></title>
        <id>https://github.com/advisories/GHSA-vv39-3w5q-974q</id>
        <link href="https://github.com/advisories/GHSA-vv39-3w5q-974q"/>
        <updated>2025-03-13T21:24:16.000Z</updated>
        <content type="html"><![CDATA[<p>A security vulnerability has been discovered in Kubernetes windows nodes that could allow a user with the ability to query a node's '/logs' endpoint to execute arbitrary commands on the host.  This CVE affects only Windows worker nodes. Your worker node is vulnerable to this issue if it is running one of the affected versions listed below.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-9042">https://nvd.nist.gov/vuln/detail/CVE-2024-9042</a></li>
<li><a href="https://github.com/kubernetes/kubernetes/issues/129654">https://github.com/kubernetes/kubernetes/issues/129654</a></li>
<li><a href="https://groups.google.com/g/kubernetes-security-announce/c/9C3vn6aCSVg">https://groups.google.com/g/kubernetes-security-announce/c/9C3vn6aCSVg</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2025/01/16/1">http://www.openwall.com/lists/oss-security/2025/01/16/1</a></li>
<li><a href="https://github.com/kubernetes/kubernetes/commit/45f4ccc2153bbb782253704cbe24c05e22b5d60c">https://github.com/kubernetes/kubernetes/commit/45f4ccc2153bbb782253704cbe24c05e22b5d60c</a></li>
<li><a href="https://github.com/kubernetes/kubernetes/commit/5fe148234f8ab1184f26069c4f7bef6c37efe347">https://github.com/kubernetes/kubernetes/commit/5fe148234f8ab1184f26069c4f7bef6c37efe347</a></li>
<li><a href="https://github.com/kubernetes/kubernetes/commit/75c83a6871dc030675288c6d63c275a43c2f0d55">https://github.com/kubernetes/kubernetes/commit/75c83a6871dc030675288c6d63c275a43c2f0d55</a></li>
<li><a href="https://github.com/kubernetes/kubernetes/commit/fb0187c2bf7061258bb89891edb1237261eb7abc">https://github.com/kubernetes/kubernetes/commit/fb0187c2bf7061258bb89891edb1237261eb7abc</a></li>
<li><a href="https://github.com/advisories/GHSA-vv39-3w5q-974q">https://github.com/advisories/GHSA-vv39-3w5q-974q</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-vv39-3w5q-974q</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2025-03-13T18:32:22.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[k8s.io/kubernetes] Kubernetes allows Command Injection affecting Windows nodes via nodes/*/logs/query API]]></title>
        <id>https://github.com/advisories/GHSA-vv39-3w5q-974q</id>
        <link href="https://github.com/advisories/GHSA-vv39-3w5q-974q"/>
        <updated>2025-03-13T21:24:16.000Z</updated>
        <content type="html"><![CDATA[<p>A security vulnerability has been discovered in Kubernetes windows nodes that could allow a user with the ability to query a node's '/logs' endpoint to execute arbitrary commands on the host.  This CVE affects only Windows worker nodes. Your worker node is vulnerable to this issue if it is running one of the affected versions listed below.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-9042">https://nvd.nist.gov/vuln/detail/CVE-2024-9042</a></li>
<li><a href="https://github.com/kubernetes/kubernetes/issues/129654">https://github.com/kubernetes/kubernetes/issues/129654</a></li>
<li><a href="https://groups.google.com/g/kubernetes-security-announce/c/9C3vn6aCSVg">https://groups.google.com/g/kubernetes-security-announce/c/9C3vn6aCSVg</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2025/01/16/1">http://www.openwall.com/lists/oss-security/2025/01/16/1</a></li>
<li><a href="https://github.com/kubernetes/kubernetes/commit/45f4ccc2153bbb782253704cbe24c05e22b5d60c">https://github.com/kubernetes/kubernetes/commit/45f4ccc2153bbb782253704cbe24c05e22b5d60c</a></li>
<li><a href="https://github.com/kubernetes/kubernetes/commit/5fe148234f8ab1184f26069c4f7bef6c37efe347">https://github.com/kubernetes/kubernetes/commit/5fe148234f8ab1184f26069c4f7bef6c37efe347</a></li>
<li><a href="https://github.com/kubernetes/kubernetes/commit/75c83a6871dc030675288c6d63c275a43c2f0d55">https://github.com/kubernetes/kubernetes/commit/75c83a6871dc030675288c6d63c275a43c2f0d55</a></li>
<li><a href="https://github.com/kubernetes/kubernetes/commit/fb0187c2bf7061258bb89891edb1237261eb7abc">https://github.com/kubernetes/kubernetes/commit/fb0187c2bf7061258bb89891edb1237261eb7abc</a></li>
<li><a href="https://github.com/advisories/GHSA-vv39-3w5q-974q">https://github.com/advisories/GHSA-vv39-3w5q-974q</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-vv39-3w5q-974q</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2025-03-13T18:32:22.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[k8s.io/kubernetes] Kubernetes allows Command Injection affecting Windows nodes via nodes/*/logs/query API]]></title>
        <id>https://github.com/advisories/GHSA-vv39-3w5q-974q</id>
        <link href="https://github.com/advisories/GHSA-vv39-3w5q-974q"/>
        <updated>2025-03-13T21:24:16.000Z</updated>
        <content type="html"><![CDATA[<p>A security vulnerability has been discovered in Kubernetes windows nodes that could allow a user with the ability to query a node's '/logs' endpoint to execute arbitrary commands on the host.  This CVE affects only Windows worker nodes. Your worker node is vulnerable to this issue if it is running one of the affected versions listed below.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-9042">https://nvd.nist.gov/vuln/detail/CVE-2024-9042</a></li>
<li><a href="https://github.com/kubernetes/kubernetes/issues/129654">https://github.com/kubernetes/kubernetes/issues/129654</a></li>
<li><a href="https://groups.google.com/g/kubernetes-security-announce/c/9C3vn6aCSVg">https://groups.google.com/g/kubernetes-security-announce/c/9C3vn6aCSVg</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2025/01/16/1">http://www.openwall.com/lists/oss-security/2025/01/16/1</a></li>
<li><a href="https://github.com/kubernetes/kubernetes/commit/45f4ccc2153bbb782253704cbe24c05e22b5d60c">https://github.com/kubernetes/kubernetes/commit/45f4ccc2153bbb782253704cbe24c05e22b5d60c</a></li>
<li><a href="https://github.com/kubernetes/kubernetes/commit/5fe148234f8ab1184f26069c4f7bef6c37efe347">https://github.com/kubernetes/kubernetes/commit/5fe148234f8ab1184f26069c4f7bef6c37efe347</a></li>
<li><a href="https://github.com/kubernetes/kubernetes/commit/75c83a6871dc030675288c6d63c275a43c2f0d55">https://github.com/kubernetes/kubernetes/commit/75c83a6871dc030675288c6d63c275a43c2f0d55</a></li>
<li><a href="https://github.com/kubernetes/kubernetes/commit/fb0187c2bf7061258bb89891edb1237261eb7abc">https://github.com/kubernetes/kubernetes/commit/fb0187c2bf7061258bb89891edb1237261eb7abc</a></li>
<li><a href="https://github.com/advisories/GHSA-vv39-3w5q-974q">https://github.com/advisories/GHSA-vv39-3w5q-974q</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-vv39-3w5q-974q</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2025-03-13T18:32:22.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/cheqd/cheqd-node] cheqd-node Security patch for upstream vulnerabilities in IBC-Go (ISA-2025-001) and Cosmos SDK (ISA-2025-002)]]></title>
        <id>https://github.com/advisories/GHSA-h2rp-8vpx-q9r4</id>
        <link href="https://github.com/advisories/GHSA-h2rp-8vpx-q9r4"/>
        <updated>2025-03-13T16:26:14.000Z</updated>
        <content type="html"><![CDATA[<h1 id="description">Description</h1>
<p>There have been two upstream security advisories and associated patches published under <a href="https://github.com/cosmos/ibc-go/security/advisories/GHSA-4wf3-5qj9-368v">ISA-2025-001</a> and <a href="https://github.com/cosmos/cosmos-sdk/security/advisories/GHSA-47ww-ff84-4jrg">ISA-2025-002</a>.</p>
<p><strong><a href="https://github.com/cosmos/ibc-go/security/advisories/GHSA-4wf3-5qj9-368v">ISA-2025-001</a></strong> affects the IBC-Go package., where non-deterministic JSON unmarshalling of IBC Acknowledgements can result in a chain halt. </p>
<p><strong><a href="https://github.com/cosmos/cosmos-sdk/security/advisories/GHSA-47ww-ff84-4jrg">ISA-2025-002</a></strong> affects the Cosmos SDK package, where <code>x/group</code> can halt when erroring in <code>EndBlocker</code>.</p>
<h3 id="impact">Impact</h3>
<p>If unaddressed, this could result in a chain halt.</p>
<h3 id="patches">Patches</h3>
<p>Validators, full nodes, and IBC relayers should upgrade to <a href="https://github.com/cheqd/cheqd-node/releases/tag/v3.1.8">cheqd-node v3.1.8</a>. This upgrade does not require a software upgrade proposal on-chain and is meant to be non state-breaking.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/cheqd/cheqd-node/security/advisories/GHSA-h2rp-8vpx-q9r4">https://github.com/cheqd/cheqd-node/security/advisories/GHSA-h2rp-8vpx-q9r4</a></li>
<li><a href="https://github.com/cosmos/cosmos-sdk/security/advisories/GHSA-47ww-ff84-4jrg">https://github.com/cosmos/cosmos-sdk/security/advisories/GHSA-47ww-ff84-4jrg</a></li>
<li><a href="https://github.com/cosmos/ibc-go/security/advisories/GHSA-4wf3-5qj9-368v">https://github.com/cosmos/ibc-go/security/advisories/GHSA-4wf3-5qj9-368v</a></li>
<li><a href="https://github.com/cheqd/cheqd-node/commit/5a58b08dfb8dfc24631fb85b641cb75e9178d07f">https://github.com/cheqd/cheqd-node/commit/5a58b08dfb8dfc24631fb85b641cb75e9178d07f</a></li>
<li><a href="https://github.com/cheqd/cheqd-node/releases/tag/v3.1.8">https://github.com/cheqd/cheqd-node/releases/tag/v3.1.8</a></li>
<li><a href="https://github.com/advisories/GHSA-h2rp-8vpx-q9r4">https://github.com/advisories/GHSA-h2rp-8vpx-q9r4</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-h2rp-8vpx-q9r4</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2025-03-13T16:26:11.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[golang.org/x/net] HTTP Proxy bypass using IPv6 Zone IDs in golang.org/x/net]]></title>
        <id>https://github.com/advisories/GHSA-qxp5-gwg8-xv66</id>
        <link href="https://github.com/advisories/GHSA-qxp5-gwg8-xv66"/>
        <updated>2025-03-19T15:36:21.000Z</updated>
        <content type="html"><![CDATA[<p>Matching of hosts against proxy patterns can improperly treat an IPv6 zone ID as a hostname component. For example, when the NO_PROXY environment variable is set to "*.example.com", a request to "[::1%25.example.com]:80` will incorrectly match and not be proxied.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2025-22870">https://nvd.nist.gov/vuln/detail/CVE-2025-22870</a></li>
<li><a href="https://go.dev/cl/654697">https://go.dev/cl/654697</a></li>
<li><a href="https://go.dev/issue/71984">https://go.dev/issue/71984</a></li>
<li><a href="https://pkg.go.dev/vuln/GO-2025-3503">https://pkg.go.dev/vuln/GO-2025-3503</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2025/03/07/2">http://www.openwall.com/lists/oss-security/2025/03/07/2</a></li>
<li><a href="https://github.com/advisories/GHSA-qxp5-gwg8-xv66">https://github.com/advisories/GHSA-qxp5-gwg8-xv66</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-qxp5-gwg8-xv66</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2025-03-12T22:06:40.000Z</published>
    </entry>
</feed>