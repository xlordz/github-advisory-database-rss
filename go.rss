<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://azu.github.io/github-advisory-database-rss/go.rss</id>
    <title>Security Advisory for Go modules</title>
    <updated>2024-12-01T11:01:19.147Z</updated>
    <generator>github-advisory-database-rss</generator>
    <link rel="alternate" href="https://github.com/advisories?query=type%3Areviewed+ecosystem%3Ago"/>
    <subtitle>Security Advisory for Go modules on GitHub</subtitle>
    <rights>github-advisory-database-rss</rights>
    <category term="CRITICAL"/>
    <category term="HIGH"/>
    <category term="MODERATE"/>
    <category term="LOW"/>
    <entry>
        <title type="html"><![CDATA[[github.com/cli/cli/v2] Recursive repository cloning can leak authentication tokens to non-GitHub submodule hosts]]></title>
        <id>https://github.com/advisories/GHSA-jwcm-9g39-pmcw</id>
        <link href="https://github.com/advisories/GHSA-jwcm-9g39-pmcw"/>
        <updated>2024-11-28T07:38:13.000Z</updated>
        <content type="html"><![CDATA[<h3 id="summary">Summary</h3>
<p>A security vulnerability has been identified in the GitHub CLI that could leak authentication tokens when cloning repositories containing <code>git</code> submodules hosted outside of GitHub.com and ghe.com.</p>
<h3 id="details">Details</h3>
<p>This vulnerability stems from several <code>gh</code> commands used to clone a repository with submodules from a non-GitHub host including <code>gh repo clone</code>, <code>gh repo fork</code>, <code>gh pr checkout</code>. These GitHub CLI commands invoke <code>git</code> with instructions to retrieve authentication tokens using the <a href="https://git-scm.com/docs/gitcredentials"><code>credential.helper</code></a> configuration variable for any host encountered.</p>
<p>Prior to <code>2.63.0</code>, hosts other than GitHub.com and ghe.com are treated as GitHub Enterprise Server hosts and have tokens sourced from the following environment variables before falling back to host-specific tokens stored within system-specific secured storage:</p>
<ul>
<li><code>GITHUB_ENTERPRISE_TOKEN</code></li>
<li><code>GH_ENTERPRISE_TOKEN</code></li>
<li><code>GITHUB_TOKEN</code> <em>when <code>CODESPACES</code> environment variable is set</em></li>
</ul>
<p>The result being <code>git</code> sending authentication tokens when cloning submodules.</p>
<p>In <code>2.63.0</code>, these GitHub CLI commands will limit the hosts for which <code>gh</code> acts as a credential helper to source authentication tokens. Additionally, <code>GITHUB_TOKEN</code> will only be used for GitHub.com and ghe.com.</p>
<h3 id="impact">Impact</h3>
<p>Successful exploitation could lead to a third-party using leaked authentication tokens to access privileged resources.</p>
<h3 id="remediation-and-mitigation">Remediation and mitigation</h3>
<ol>
<li>Upgrade <code>gh</code> to <code>2.63.0</code></li>
<li>Revoke authentication tokens used with the GitHub CLI: <ul>
<li><a href="https://docs.github.com/en/enterprise-cloud@latest/authentication/keeping-your-account-and-data-secure/managing-your-personal-access-tokens">Personal access tokens</a></li>
<li><a href="https://docs.github.com/en/apps/using-github-apps/reviewing-and-revoking-authorization-of-github-apps#reviewing-your-authorized-github-apps">GitHub CLI OAuth app</a></li>
</ul>
</li>
<li>Review your personal <a href="https://docs.github.com/en/authentication/keeping-your-account-and-data-secure/reviewing-your-security-log">security log</a> and any relevant <a href="https://docs.github.com/en/enterprise-cloud@latest/admin/monitoring-activity-in-your-enterprise/reviewing-audit-logs-for-your-enterprise/identifying-audit-log-events-performed-by-an-access-token">audit logs</a> for actions associated with your account or enterprise</li>
</ol>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/cli/cli/security/advisories/GHSA-jwcm-9g39-pmcw">https://github.com/cli/cli/security/advisories/GHSA-jwcm-9g39-pmcw</a></li>
<li><a href="https://github.com/advisories/GHSA-jwcm-9g39-pmcw">https://github.com/advisories/GHSA-jwcm-9g39-pmcw</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-jwcm-9g39-pmcw</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-11-27T21:43:05.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/cli/go-gh/v2] `auth.TokenForHost` violates GitHub host security boundary when sourcing authentication token within a codespace]]></title>
        <id>https://github.com/advisories/GHSA-55v3-xh23-96gh</id>
        <link href="https://github.com/advisories/GHSA-55v3-xh23-96gh"/>
        <updated>2024-11-28T07:37:51.000Z</updated>
        <content type="html"><![CDATA[<h3 id="summary">Summary</h3>
<p>A security vulnerability has been identified in <code>go-gh</code> that could leak authentication tokens intended for GitHub hosts to non-GitHub hosts when within a codespace.</p>
<h3 id="details">Details</h3>
<p><code>go-gh</code> sources authentication tokens from different environment variables depending on the host involved:</p>
<ul>
<li><code>GITHUB_TOKEN</code>, <code>GH_TOKEN</code> for GitHub.com and ghe.com</li>
<li><code>GITHUB_ENTERPRISE_TOKEN</code>, <code>GH_ENTERPRISE_TOKEN</code> for GitHub Enterprise Server</li>
</ul>
<p>Prior to <code>2.11.1</code>, <code>auth.TokenForHost</code> could source a token from the <code>GITHUB_TOKEN</code> environment variable for a host other than GitHub.com or ghe.com when <a href="https://github.com/cli/go-gh/blob/71770357e0cb12867d3e3e288854c0aa09d440b7/pkg/auth/auth.go#L73-L77">within a codespace</a>.</p>
<p>In <code>2.11.1</code>, <code>auth.TokenForHost</code> will only source a token from the <code>GITHUB_TOKEN</code> environment variable for GitHub.com or ghe.com hosts.</p>
<h3 id="impact">Impact</h3>
<p>Successful exploitation could send authentication token to an unintended host. </p>
<h3 id="remediation-and-mitigation">Remediation and mitigation</h3>
<ol>
<li>Upgrade <code>go-gh</code> to <code>2.11.1</code></li>
<li>Advise extension users to regenerate authentication tokens:<ul>
<li><a href="https://docs.github.com/en/enterprise-cloud@latest/authentication/keeping-your-account-and-data-secure/managing-your-personal-access-tokens">Personal access tokens</a></li>
<li><a href="https://docs.github.com/en/apps/using-github-apps/reviewing-and-revoking-authorization-of-github-apps#reviewing-your-authorized-github-apps">GitHub CLI OAuth app</a></li>
</ul>
</li>
<li>Advise extension users to review their personal <a href="https://docs.github.com/en/authentication/keeping-your-account-and-data-secure/reviewing-your-security-log">security log</a> and any relevant <a href="https://docs.github.com/en/enterprise-cloud@latest/admin/monitoring-activity-in-your-enterprise/reviewing-audit-logs-for-your-enterprise/identifying-audit-log-events-performed-by-an-access-token">audit logs</a> for actions associated with their account or enterprise</li>
</ol>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/cli/go-gh/security/advisories/GHSA-55v3-xh23-96gh">https://github.com/cli/go-gh/security/advisories/GHSA-55v3-xh23-96gh</a></li>
<li><a href="https://github.com/advisories/GHSA-55v3-xh23-96gh">https://github.com/advisories/GHSA-55v3-xh23-96gh</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-55v3-xh23-96gh</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-11-27T21:43:03.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/cri-o/cri-o] CRI-O: Maliciously structured checkpoint file can gain arbitrary node access]]></title>
        <id>https://github.com/advisories/GHSA-7p9f-6x8j-gxxp</id>
        <link href="https://github.com/advisories/GHSA-7p9f-6x8j-gxxp"/>
        <updated>2024-11-26T21:50:33.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<h3 id="patches">Patches</h3>
<p>1.31.1, 1.30.6, 1.29.8</p>
<h3 id="workarounds">Workarounds</h3>
<p>set <code>enable_criu_support = false</code> </p>
<h3 id="references">References</h3>
<p><em>Are there any links users can visit to find out more?</em></p>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/cri-o/cri-o/security/advisories/GHSA-7p9f-6x8j-gxxp">https://github.com/cri-o/cri-o/security/advisories/GHSA-7p9f-6x8j-gxxp</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-8676">https://nvd.nist.gov/vuln/detail/CVE-2024-8676</a></li>
<li><a href="https://github.com/cri-o/cri-o/commit/e8e7dcb7838d11b5157976bf3e31a5840bb77de7">https://github.com/cri-o/cri-o/commit/e8e7dcb7838d11b5157976bf3e31a5840bb77de7</a></li>
<li><a href="https://access.redhat.com/security/cve/CVE-2024-8676">https://access.redhat.com/security/cve/CVE-2024-8676</a></li>
<li><a href="https://bugzilla.redhat.com/show_bug.cgi?id=2313842">https://bugzilla.redhat.com/show_bug.cgi?id=2313842</a></li>
<li><a href="https://github.com/advisories/GHSA-7p9f-6x8j-gxxp">https://github.com/advisories/GHSA-7p9f-6x8j-gxxp</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-7p9f-6x8j-gxxp</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-11-26T21:50:30.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/cri-o/cri-o] CRI-O: Maliciously structured checkpoint file can gain arbitrary node access]]></title>
        <id>https://github.com/advisories/GHSA-7p9f-6x8j-gxxp</id>
        <link href="https://github.com/advisories/GHSA-7p9f-6x8j-gxxp"/>
        <updated>2024-11-26T21:50:33.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<h3 id="patches">Patches</h3>
<p>1.31.1, 1.30.6, 1.29.8</p>
<h3 id="workarounds">Workarounds</h3>
<p>set <code>enable_criu_support = false</code> </p>
<h3 id="references">References</h3>
<p><em>Are there any links users can visit to find out more?</em></p>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/cri-o/cri-o/security/advisories/GHSA-7p9f-6x8j-gxxp">https://github.com/cri-o/cri-o/security/advisories/GHSA-7p9f-6x8j-gxxp</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-8676">https://nvd.nist.gov/vuln/detail/CVE-2024-8676</a></li>
<li><a href="https://github.com/cri-o/cri-o/commit/e8e7dcb7838d11b5157976bf3e31a5840bb77de7">https://github.com/cri-o/cri-o/commit/e8e7dcb7838d11b5157976bf3e31a5840bb77de7</a></li>
<li><a href="https://access.redhat.com/security/cve/CVE-2024-8676">https://access.redhat.com/security/cve/CVE-2024-8676</a></li>
<li><a href="https://bugzilla.redhat.com/show_bug.cgi?id=2313842">https://bugzilla.redhat.com/show_bug.cgi?id=2313842</a></li>
<li><a href="https://github.com/advisories/GHSA-7p9f-6x8j-gxxp">https://github.com/advisories/GHSA-7p9f-6x8j-gxxp</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-7p9f-6x8j-gxxp</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-11-26T21:50:30.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/cri-o/cri-o] CRI-O: Maliciously structured checkpoint file can gain arbitrary node access]]></title>
        <id>https://github.com/advisories/GHSA-7p9f-6x8j-gxxp</id>
        <link href="https://github.com/advisories/GHSA-7p9f-6x8j-gxxp"/>
        <updated>2024-11-26T21:50:33.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<h3 id="patches">Patches</h3>
<p>1.31.1, 1.30.6, 1.29.8</p>
<h3 id="workarounds">Workarounds</h3>
<p>set <code>enable_criu_support = false</code> </p>
<h3 id="references">References</h3>
<p><em>Are there any links users can visit to find out more?</em></p>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/cri-o/cri-o/security/advisories/GHSA-7p9f-6x8j-gxxp">https://github.com/cri-o/cri-o/security/advisories/GHSA-7p9f-6x8j-gxxp</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-8676">https://nvd.nist.gov/vuln/detail/CVE-2024-8676</a></li>
<li><a href="https://github.com/cri-o/cri-o/commit/e8e7dcb7838d11b5157976bf3e31a5840bb77de7">https://github.com/cri-o/cri-o/commit/e8e7dcb7838d11b5157976bf3e31a5840bb77de7</a></li>
<li><a href="https://access.redhat.com/security/cve/CVE-2024-8676">https://access.redhat.com/security/cve/CVE-2024-8676</a></li>
<li><a href="https://bugzilla.redhat.com/show_bug.cgi?id=2313842">https://bugzilla.redhat.com/show_bug.cgi?id=2313842</a></li>
<li><a href="https://github.com/advisories/GHSA-7p9f-6x8j-gxxp">https://github.com/advisories/GHSA-7p9f-6x8j-gxxp</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-7p9f-6x8j-gxxp</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-11-26T21:50:30.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/treeverse/lakefs] Re-creating a deleted user in lakeFS will re-enable previous user credentials that existed prior to its deletion]]></title>
        <id>https://github.com/advisories/GHSA-hh33-46q4-hwm2</id>
        <link href="https://github.com/advisories/GHSA-hh33-46q4-hwm2"/>
        <updated>2024-11-26T21:43:47.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>Existing lakeFS users who have issued credentials to users who have been deleted.
Creating a new user with the same username, that user will inherit all of the previous user's credentials lakeFS needs to delete user credentials upon user deletion.</p>
<h3 id="patches">Patches</h3>
<p><em>Has the problem been patched? What versions should users upgrade to?</em></p>
<h3 id="workarounds">Workarounds</h3>
<p>A possible workaround will be not to reuse usernames that were previously deleted</p>
<h3 id="references">References</h3>
<p><em>Are there any links users can visit to find out more?</em></p>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/treeverse/lakeFS/security/advisories/GHSA-hh33-46q4-hwm2">https://github.com/treeverse/lakeFS/security/advisories/GHSA-hh33-46q4-hwm2</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-43784">https://nvd.nist.gov/vuln/detail/CVE-2024-43784</a></li>
<li><a href="https://github.com/treeverse/lakeFS/releases/tag/v1.33.0">https://github.com/treeverse/lakeFS/releases/tag/v1.33.0</a></li>
<li><a href="https://github.com/advisories/GHSA-hh33-46q4-hwm2">https://github.com/advisories/GHSA-hh33-46q4-hwm2</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-hh33-46q4-hwm2</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-11-26T19:58:20.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/cilium/cilium] Cilium's Layer 7 policy enforcement may not occur in policies with wildcarded port ranges]]></title>
        <id>https://github.com/advisories/GHSA-xg58-75qf-9r67</id>
        <link href="https://github.com/advisories/GHSA-xg58-75qf-9r67"/>
        <updated>2024-11-25T21:46:56.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>For users with the following configuration:</p>
<ul>
<li>An allow policy that selects a <a href="https://docs.cilium.io/en/v1.14/security/policy/language/#layer-3-examples">Layer 3 destination</a> and a <a href="https://docs.cilium.io/en/stable/security/policy/language/#example-port-ranges">port range</a> <strong>AND</strong></li>
<li>A <a href="https://docs.cilium.io/en/latest/security/policy/language/#layer-7-examples">Layer 7 allow policy</a> that selects a specific port within the first policy's range</li>
</ul>
<p>then Layer 7 enforcement would not occur for the traffic selected by the Layer 7 policy.</p>
<p>This issue only affects users who use Cilium's port range functionality, which was introduced in Cilium v1.16.</p>
<p>For reference, an example of a pair of policies that would trigger this issue is:</p>
<pre><code>apiVersion: "cilium.io/v2"
kind: CiliumNetworkPolicy
metadata:
  name: "l3-port-range-rule"
spec:
  endpointSelector:
    matchLabels:
      app: service
  ingress:
    - fromCIDR:
      - 192.168.60.0/24
      toPorts:
      - ports:
        - port: "80"
          endPort: 444
          protocol: TCP
</code></pre>
<p>and</p>
<pre><code>apiVersion: "cilium.io/v2"
kind: CiliumNetworkPolicy
metadata:
  name: "l7-port-range-rule"
spec:
  endpointSelector:
    matchLabels:
      app: service
  ingress:
    toPorts:
    - ports:
      - port: "80"
        protocol: TCP
      rules:
        http:
        - method: "GET"
          path: "/public"
</code></pre>
<p>In the above example, requests would be permitted to all HTTP paths on matching endpoints, rather than just <code>GET</code> requests to the <code>/public</code> path as intentded by the <code>l7-port-range-rule</code> policy. In patched versions of Cilium, the <code>l7-port-range-rule</code> would take precedence over the <code>l3-port-range-rule</code>.</p>
<h3 id="patches">Patches</h3>
<p>This issue is patched in <a href="https://github.com/cilium/cilium/pull/35150">https://github.com/cilium/cilium/pull/35150</a>.</p>
<p>This issue affects Cilium v1.16 between v1.16.0 and v1.16.3 inclusive.</p>
<p>This issue is patched in Cilium v1.16.4.</p>
<h3 id="workarounds">Workarounds</h3>
<p>Users with network policies that match the pattern described above can work around the issue by rewriting any policies that use port ranges to individually specify the ports permitted for traffic.</p>
<h3 id="acknowledgements">Acknowledgements</h3>
<p>The Cilium community has worked together with members of Isovalent to prepare these mitigations. Special thanks to @jrajahalme for resolving this issue.</p>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory, please reach out on <a href="https://docs.cilium.io/en/latest/community/community/#slack">Slack</a>.</p>
<p>If you think you have found a vulnerability affecting Cilium, we strongly encourage you to report it to our security mailing list at <a href="mailto:security@cilium.io">security@cilium.io</a>. This is a private mailing list for the Cilium security team, and your report will be treated as top priority.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/cilium/cilium/security/advisories/GHSA-xg58-75qf-9r67">https://github.com/cilium/cilium/security/advisories/GHSA-xg58-75qf-9r67</a></li>
<li><a href="https://github.com/cilium/cilium/pull/35150">https://github.com/cilium/cilium/pull/35150</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-52529">https://nvd.nist.gov/vuln/detail/CVE-2024-52529</a></li>
<li><a href="https://github.com/advisories/GHSA-xg58-75qf-9r67">https://github.com/advisories/GHSA-xg58-75qf-9r67</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-xg58-75qf-9r67</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-11-25T19:35:10.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/openshift/console] OpenShift Console Server Side Request Forgery vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-v3w7-g6p2-mpx7</id>
        <link href="https://github.com/advisories/GHSA-v3w7-g6p2-mpx7"/>
        <updated>2024-11-25T17:25:20.000Z</updated>
        <content type="html"><![CDATA[<p>A flaw was found in OpenShift Console. A Server Side Request Forgery (SSRF) attack can happen if an attacker supplies all or part of a URL to the server to query. The server is considered to be in a privileged network position and can often reach exposed services that aren't readily available to clients due to network filtering. Leveraging such an attack vector, the attacker can have an impact on other services and potentially disclose information or have other nefarious effects on the system.
The /api/dev-console/proxy/internet endpoint on the OpenShit Console allows authenticated users to have the console's pod perform arbitrary and fully controlled HTTP(s) requests. The full response to these requests is returned by the endpoint.
While the name of this endpoint suggests the requests are only bound to the internet, no such checks are in place. An authenticated user can therefore ask the console to perform arbitrary HTTP requests from outside the cluster to a service inside the cluster.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-6538">https://nvd.nist.gov/vuln/detail/CVE-2024-6538</a></li>
<li><a href="https://access.redhat.com/security/cve/CVE-2024-6538">https://access.redhat.com/security/cve/CVE-2024-6538</a></li>
<li><a href="https://bugzilla.redhat.com/show_bug.cgi?id=2296057">https://bugzilla.redhat.com/show_bug.cgi?id=2296057</a></li>
<li><a href="https://github.com/advisories/GHSA-v3w7-g6p2-mpx7">https://github.com/advisories/GHSA-v3w7-g6p2-mpx7</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-v3w7-g6p2-mpx7</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-11-25T09:30:58.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/taurusgroup/multi-party-sig] Taurus multi-party-sig has OT-based ECDSA protocol implementation flaws]]></title>
        <id>https://github.com/advisories/GHSA-7f6p-phw2-8253</id>
        <link href="https://github.com/advisories/GHSA-7f6p-phw2-8253"/>
        <updated>2024-11-25T15:11:12.000Z</updated>
        <content type="html"><![CDATA[<p>Coinbase researchers reported 2 security issues in our implementation of the oblivious transfer (OT) based protocol <a href="https://eprint.iacr.org/2018/499.pdf">DKLS</a>:</p>
<h3 id="1-secret-share-recovery-attack">1. Secret share recovery attack</h3>
<p>If the base OT setup of the protocol is reused for another execution of the OT extension, then a malicious participant can extract a bit of the secret of another participant. By repeating the execution they can eventually recover the whole secret.</p>
<p>Therefore, unlike our comments suggested, you <strong>must not reuse an OT setup</strong> for multiple protocol executions. </p>
<p>We're adding a warning in the code:</p>
<p><a href="https://github.com/taurushq-io/multi-party-sig/blob/9e4400fccee89be6195d0a12dd0ed052288d5040/internal/ot/extended.go#L114">https://github.com/taurushq-io/multi-party-sig/blob/9e4400fccee89be6195d0a12dd0ed052288d5040/internal/ot/extended.go#L114</a></p>
<h3 id="2-invalid-security-proof-due-to-incorrect-operator">2. Invalid security proof due to incorrect operator</h3>
<p>The original 2018 version of the DKLS had a typo in the OT extension protocol when computing the check value in the OT extension: the paper noted a XOR whereas it should be a field multiplication. This erroneous behavior was implemented <a href="https://github.com/taurushq-io/multi-party-sig/blob/4d84aafb57b437da1b933db9a265fb7ce4e7c138/internal/ot/extended.go#L188">in our code</a>. </p>
<p>The proof of security fails in this case. No concrete attack is known, however.</p>
<p>The <a href="https://eprint.iacr.org/2018/499.pdf">2023 update</a> of the DKLS paper reported that typo and updated the protocol definition.</p>
<p>As of 20241124, patching is in progress (branch <a href="https://github.com/taurushq-io/multi-party-sig/tree/otfix">otfix</a>), but not merged to the main branch yes as the tests fail to pass. We're troubleshooting the issue and will merge into the main branch when it's resolved.</p>
<h3 id="workarounds">Workarounds</h3>
<p>Do not reuse an OT setup, to eliminate the secret recovery attack.</p>
<p>Avoid using our implementation of the DKLS protocol until we patch it, and maybe avoid DKLS altogether.</p>
<h3 id="credits">Credits</h3>
<p>Thank you to the Coinbase researchers Yi-Hsiu Chen and Samuel Ranellucci for discovering these issues and providing a comprehensive write-up. Thank you to Yehuda Lindell for coordinating the disclosure.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/taurushq-io/multi-party-sig/security/advisories/GHSA-7f6p-phw2-8253">https://github.com/taurushq-io/multi-party-sig/security/advisories/GHSA-7f6p-phw2-8253</a></li>
<li><a href="https://eprint.iacr.org/2018/499.pdf">https://eprint.iacr.org/2018/499.pdf</a></li>
<li><a href="https://github.com/taurushq-io/multi-party-sig/blob/4d84aafb57b437da1b933db9a265fb7ce4e7c138/internal/ot/extended.go#L188">https://github.com/taurushq-io/multi-party-sig/blob/4d84aafb57b437da1b933db9a265fb7ce4e7c138/internal/ot/extended.go#L188</a></li>
<li><a href="https://github.com/taurushq-io/multi-party-sig/blob/9e4400fccee89be6195d0a12dd0ed052288d5040/internal/ot/extended.go#L114">https://github.com/taurushq-io/multi-party-sig/blob/9e4400fccee89be6195d0a12dd0ed052288d5040/internal/ot/extended.go#L114</a></li>
<li><a href="https://github.com/taurushq-io/multi-party-sig/tree/otfix">https://github.com/taurushq-io/multi-party-sig/tree/otfix</a></li>
<li><a href="https://github.com/advisories/GHSA-7f6p-phw2-8253">https://github.com/advisories/GHSA-7f6p-phw2-8253</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-7f6p-phw2-8253</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-11-25T15:11:11.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/kanisterio/kanister] Withdrawn Advisory: Kanister vulnerable to cluster-level privilege escalation]]></title>
        <id>https://github.com/advisories/GHSA-h27c-6xm3-mcqp</id>
        <link href="https://github.com/advisories/GHSA-h27c-6xm3-mcqp"/>
        <updated>2024-11-25T20:50:12.000Z</updated>
        <content type="html"><![CDATA[<h1 id="withdrawn-advisory">Withdrawn Advisory</h1>
<p>This advisory has been withdrawn because the vulnerability does not affect a released Go package. For more information, see github/advisory-database/issues/5029.</p>
<h1 id="original-advisory">Original Advisory</h1>
<h3 id="summary">Summary</h3>
<p>This advisory affects the Kanister helm charts and not the go package</p>
<h3 id="details">Details</h3>
<p>The kanister has a deployment called default-kanister-operator, which is bound with a ClusterRole called edit via ClusterRoleBinding(<a href="https://github.com/kanisterio/kanister/blob/master/helm/kanister-operator/templates/rbac.yaml#L49">https://github.com/kanisterio/kanister/blob/master/helm/kanister-operator/templates/rbac.yaml#L49</a>). The "edit" ClusterRole is one of Kubernetes default-created ClusterRole, and it have create/patch/udpate verbs of daemonset resources, create verb of serviceaccount/token resources, and impersonate verb of serviceaccounts resources. If a malicious user can access the worker node which has this component, he/she can:</p>
<p>For the create/patch/update verbs of daemonset resources, the malicious user can abuse it to create or modify a set of Pods to mount a high-privilege service account (e.g., the cluster-admin service account). After that, he/she can abuse the high-privilege SA token of created Pod to take over the whole cluster.</p>
<p>For the create verb of serviceaccount/token resources, a malicious user can abuse this permission to generate new Service Account tokens and use them to operate with high-privilege roles, such as cluster administrators. These tokens can be used to access and manipulate any resources within the cluster.</p>
<p>For the impersonate verb of serviceaccounts resources, a malicious user can impersonate high-privilege Service Accounts, thereby gaining access to roles such as cluster administrators. This enables the attacker to perform all actions that the high-privilege account can, including creating, modifying, and deleting critical resources within the cluster.</p>
<h3 id="poc">PoC</h3>
<p>We have discussed in the "Details" section</p>
<h3 id="impact">Impact</h3>
<p>Privilege escalation</p>
<h3 id="mitigation">Mitigation</h3>
<p>Currently kanister helm chart provides rbac.create flag (true by default), which controls whether the rbac rules for kanister service account will be created <a href="https://github.com/kanisterio/kanister/blob/master/helm/kanister-operator/values.yaml#L17">https://github.com/kanisterio/kanister/blob/master/helm/kanister-operator/values.yaml#L17</a>
If this value set to false, the user needs to create rbac rules themselves and they can limit the role bindings for kanister service account, for example scope it to specific namespace.
Service account can also be configured via helm <a href="https://github.com/kanisterio/kanister/blob/master/helm/kanister-operator/values.yaml#L19">https://github.com/kanisterio/kanister/blob/master/helm/kanister-operator/values.yaml#L19</a></p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/kanisterio/kanister/security/advisories/GHSA-h27c-6xm3-mcqp">https://github.com/kanisterio/kanister/security/advisories/GHSA-h27c-6xm3-mcqp</a></li>
<li><a href="https://github.com/kanisterio/kanister/blob/master/helm/kanister-operator/templates/rbac.yaml#L49">https://github.com/kanisterio/kanister/blob/master/helm/kanister-operator/templates/rbac.yaml#L49</a></li>
<li><a href="https://github.com/kanisterio/kanister/wiki/2023%E2%80%9024-Community-Meeting-Notes">https://github.com/kanisterio/kanister/wiki/2023%E2%80%9024-Community-Meeting-Notes</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-43403">https://nvd.nist.gov/vuln/detail/CVE-2024-43403</a></li>
<li><a href="https://github.com/advisories/GHSA-h27c-6xm3-mcqp">https://github.com/advisories/GHSA-h27c-6xm3-mcqp</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-h27c-6xm3-mcqp</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-08-20T22:13:02.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[k8s.io/kubernetes]  Kubernetes kubelet arbitrary command execution]]></title>
        <id>https://github.com/advisories/GHSA-27wf-5967-98gx</id>
        <link href="https://github.com/advisories/GHSA-27wf-5967-98gx"/>
        <updated>2024-11-27T21:57:08.000Z</updated>
        <content type="html"><![CDATA[<p>The Kubernetes kubelet component allows arbitrary command execution via specially crafted gitRepo volumes.This issue affects kubelet: through 1.28.11, from 1.29.0 through 1.29.6, from 1.30.0 through 1.30.2.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-10220">https://nvd.nist.gov/vuln/detail/CVE-2024-10220</a></li>
<li><a href="https://github.com/kubernetes/kubernetes/issues/128885">https://github.com/kubernetes/kubernetes/issues/128885</a></li>
<li><a href="https://groups.google.com/g/kubernetes-security-announce/c/ptNgV5Necko">https://groups.google.com/g/kubernetes-security-announce/c/ptNgV5Necko</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2024/11/20/1">http://www.openwall.com/lists/oss-security/2024/11/20/1</a></li>
<li><a href="https://github.com/kubernetes/kubernetes/commit/1ab06efe92d8e898ca1931471c9533ce94aba29b">https://github.com/kubernetes/kubernetes/commit/1ab06efe92d8e898ca1931471c9533ce94aba29b</a></li>
<li><a href="https://github.com/advisories/GHSA-27wf-5967-98gx">https://github.com/advisories/GHSA-27wf-5967-98gx</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-27wf-5967-98gx</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-11-22T21:32:15.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[k8s.io/kubernetes]  Kubernetes kubelet arbitrary command execution]]></title>
        <id>https://github.com/advisories/GHSA-27wf-5967-98gx</id>
        <link href="https://github.com/advisories/GHSA-27wf-5967-98gx"/>
        <updated>2024-11-27T21:57:08.000Z</updated>
        <content type="html"><![CDATA[<p>The Kubernetes kubelet component allows arbitrary command execution via specially crafted gitRepo volumes.This issue affects kubelet: through 1.28.11, from 1.29.0 through 1.29.6, from 1.30.0 through 1.30.2.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-10220">https://nvd.nist.gov/vuln/detail/CVE-2024-10220</a></li>
<li><a href="https://github.com/kubernetes/kubernetes/issues/128885">https://github.com/kubernetes/kubernetes/issues/128885</a></li>
<li><a href="https://groups.google.com/g/kubernetes-security-announce/c/ptNgV5Necko">https://groups.google.com/g/kubernetes-security-announce/c/ptNgV5Necko</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2024/11/20/1">http://www.openwall.com/lists/oss-security/2024/11/20/1</a></li>
<li><a href="https://github.com/kubernetes/kubernetes/commit/1ab06efe92d8e898ca1931471c9533ce94aba29b">https://github.com/kubernetes/kubernetes/commit/1ab06efe92d8e898ca1931471c9533ce94aba29b</a></li>
<li><a href="https://github.com/advisories/GHSA-27wf-5967-98gx">https://github.com/advisories/GHSA-27wf-5967-98gx</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-27wf-5967-98gx</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-11-22T21:32:15.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[k8s.io/kubernetes]  Kubernetes kubelet arbitrary command execution]]></title>
        <id>https://github.com/advisories/GHSA-27wf-5967-98gx</id>
        <link href="https://github.com/advisories/GHSA-27wf-5967-98gx"/>
        <updated>2024-11-27T21:57:08.000Z</updated>
        <content type="html"><![CDATA[<p>The Kubernetes kubelet component allows arbitrary command execution via specially crafted gitRepo volumes.This issue affects kubelet: through 1.28.11, from 1.29.0 through 1.29.6, from 1.30.0 through 1.30.2.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-10220">https://nvd.nist.gov/vuln/detail/CVE-2024-10220</a></li>
<li><a href="https://github.com/kubernetes/kubernetes/issues/128885">https://github.com/kubernetes/kubernetes/issues/128885</a></li>
<li><a href="https://groups.google.com/g/kubernetes-security-announce/c/ptNgV5Necko">https://groups.google.com/g/kubernetes-security-announce/c/ptNgV5Necko</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2024/11/20/1">http://www.openwall.com/lists/oss-security/2024/11/20/1</a></li>
<li><a href="https://github.com/kubernetes/kubernetes/commit/1ab06efe92d8e898ca1931471c9533ce94aba29b">https://github.com/kubernetes/kubernetes/commit/1ab06efe92d8e898ca1931471c9533ce94aba29b</a></li>
<li><a href="https://github.com/advisories/GHSA-27wf-5967-98gx">https://github.com/advisories/GHSA-27wf-5967-98gx</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-27wf-5967-98gx</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-11-22T21:32:15.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/apache/incubator-answer] Apache Answer: Predictable Authorization Token Using UUIDv1]]></title>
        <id>https://github.com/advisories/GHSA-mr95-vfcf-fx9p</id>
        <link href="https://github.com/advisories/GHSA-mr95-vfcf-fx9p"/>
        <updated>2024-11-27T21:56:48.000Z</updated>
        <content type="html"><![CDATA[<p>Inadequate Encryption Strength vulnerability in Apache Answer.</p>
<p>This issue affects Apache Answer: through 1.4.0.</p>
<p>The ids generated using the UUID v1 version are to some extent not secure enough. It can cause the generated token to be predictable.
Users are recommended to upgrade to version 1.4.1, which fixes the issue.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-45719">https://nvd.nist.gov/vuln/detail/CVE-2024-45719</a></li>
<li><a href="https://lists.apache.org/thread/sz2d0z39k01nbx3r9pj65t76o1hy9491">https://lists.apache.org/thread/sz2d0z39k01nbx3r9pj65t76o1hy9491</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2024/11/22/1">http://www.openwall.com/lists/oss-security/2024/11/22/1</a></li>
<li><a href="https://github.com/advisories/GHSA-mr95-vfcf-fx9p">https://github.com/advisories/GHSA-mr95-vfcf-fx9p</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-mr95-vfcf-fx9p</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2024-11-22T21:32:14.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/pingcap/tidb] PingCAP TiDB nil pointer dereference]]></title>
        <id>https://github.com/advisories/GHSA-9g6g-xqv5-8g5w</id>
        <link href="https://github.com/advisories/GHSA-9g6g-xqv5-8g5w"/>
        <updated>2024-11-27T21:55:58.000Z</updated>
        <content type="html"><![CDATA[<p>A nil pointer dereference in PingCAP TiDB v8.2.0-alpha-216-gfe5858b allows attackers to crash the application via expression.inferCollation.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-37820">https://nvd.nist.gov/vuln/detail/CVE-2024-37820</a></li>
<li><a href="https://github.com/pingcap/tidb/issues/53580">https://github.com/pingcap/tidb/issues/53580</a></li>
<li><a href="https://gist.github.com/ycybfhb/a9c1e14ce281f2f553adca84d384b761">https://gist.github.com/ycybfhb/a9c1e14ce281f2f553adca84d384b761</a></li>
<li><a href="https://github.com/pingcap/tidb/commit/3d68bd21240c610c6307713e2bd54a5e71c32608">https://github.com/pingcap/tidb/commit/3d68bd21240c610c6307713e2bd54a5e71c32608</a></li>
<li><a href="https://github.com/advisories/GHSA-9g6g-xqv5-8g5w">https://github.com/advisories/GHSA-9g6g-xqv5-8g5w</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-9g6g-xqv5-8g5w</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-06-25T21:31:15.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/drakkan/sftpgo/v2] SFTPGo allows administrators to restrict command execution from the EventManager]]></title>
        <id>https://github.com/advisories/GHSA-49cc-xrjf-9qf7</id>
        <link href="https://github.com/advisories/GHSA-49cc-xrjf-9qf7"/>
        <updated>2024-11-21T23:19:07.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>One powerful feature of SFTPGo is the ability to have the EventManager execute scripts or run applications in response to certain events.
This feature is very common in all software similar to SFTPGo and is generally unrestricted. </p>
<p>However, any SFTPGo administrator with permission to run a script has access to the underlying OS/container with the same permissions as the user running SFTPGo.</p>
<p>This is unexpected for some SFTPGo administrators who think that there is a clear distinction between accessing the system shell and accessing the SFTPGo WebAdmin UI.</p>
<h3 id="patches">Patches</h3>
<p>To avoid this confusion, running system commands is now disabled by default, and an allow list has been added so that system administrators configuring SFTPGo must explicitly define which commands are allowed to be configured from the WebAdmin UI.</p>
<p><a href="https://github.com/drakkan/sftpgo/commit/88b1850b5806eee81150873d4e565144b21021fb">https://github.com/drakkan/sftpgo/commit/88b1850b5806eee81150873d4e565144b21021fb</a>
<a href="https://github.com/drakkan/sftpgo/commit/b524da11e9466d05fe03304713ee1c61bb276ec4">https://github.com/drakkan/sftpgo/commit/b524da11e9466d05fe03304713ee1c61bb276ec4</a></p>
<h3 id="workarounds">Workarounds</h3>
<p>Allow EventManager to be used only by SFTPGo administrators who also have shell access.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/drakkan/sftpgo/security/advisories/GHSA-49cc-xrjf-9qf7">https://github.com/drakkan/sftpgo/security/advisories/GHSA-49cc-xrjf-9qf7</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-52309">https://nvd.nist.gov/vuln/detail/CVE-2024-52309</a></li>
<li><a href="https://github.com/drakkan/sftpgo/commit/88b1850b5806eee81150873d4e565144b21021fb">https://github.com/drakkan/sftpgo/commit/88b1850b5806eee81150873d4e565144b21021fb</a></li>
<li><a href="https://github.com/drakkan/sftpgo/commit/b524da11e9466d05fe03304713ee1c61bb276ec4">https://github.com/drakkan/sftpgo/commit/b524da11e9466d05fe03304713ee1c61bb276ec4</a></li>
<li><a href="https://pkg.go.dev/vuln/GO-2024-3283">https://pkg.go.dev/vuln/GO-2024-3283</a></li>
<li><a href="https://github.com/advisories/GHSA-49cc-xrjf-9qf7">https://github.com/advisories/GHSA-49cc-xrjf-9qf7</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-49cc-xrjf-9qf7</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-11-21T23:19:07.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/cert-manager/cert-manager] cert-manager ha a potential slowdown / DoS when parsing specially crafted PEM inputs]]></title>
        <id>https://github.com/advisories/GHSA-r4pg-vg54-wxx4</id>
        <link href="https://github.com/advisories/GHSA-r4pg-vg54-wxx4"/>
        <updated>2024-11-22T20:50:10.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>cert-manager packages which call the standard library <code>pem.Decode()</code> function  can take a long time to process specially crafted invalid PEM data.</p>
<p>If an attacker is able to modify PEM data which cert-manager reads (e.g. in a Secret resource), they may be able to use large amounts of CPU in the cert-manager controller pod to effectively create a denial-of-service (DoS) vector for cert-manager in the cluster.</p>
<p>Secrets are limited in size to <a href="https://kubernetes.io/docs/concepts/configuration/secret/#restriction-data-size">1MiB</a>, which reduces the impact of this issue; it was discovered through an ~856kB fuzz test input which causes <code>pem.Decode</code> to take roughly 750ms to reject the input on an M2 Max Macbook Pro. By way of comparison, a valid PEM-encoded 4096-bit RSA key takes roughly 70µs to parse on the same machine.</p>
<p>Given the required size of PEM data needed to present a realistic DoS vector, an attacker would need to create or insert many different large sized resources in the cluster, and so the best secondary defense is to ensure that sensible limits are placed via RBAC.</p>
<p>This issue affects all versions of cert-manager to have been released since at least v0.1.0 (since <code>pem.Decode</code> is core functionality for cert-manager). All <a href="https://cert-manager.io/docs/releases/">supported releases</a> are patched.</p>
<h3 id="patches">Patches</h3>
<p>The fixed versions are v1.16.2, v1.15.4 and v1.12.14.</p>
<ul>
<li>master branch: <a href="https://github.com/cert-manager/cert-manager/pull/7400">https://github.com/cert-manager/cert-manager/pull/7400</a></li>
<li>release-1.16 branch: <a href="https://github.com/cert-manager/cert-manager/pull/7401">https://github.com/cert-manager/cert-manager/pull/7401</a></li>
<li>release-1.15 branch: <a href="https://github.com/cert-manager/cert-manager/pull/7402">https://github.com/cert-manager/cert-manager/pull/7402</a></li>
<li>release-1.12 branch: <a href="https://github.com/cert-manager/cert-manager/pull/7403">https://github.com/cert-manager/cert-manager/pull/7403</a></li>
</ul>
<h3 id="workarounds">Workarounds</h3>
<p>Ensure that RBAC is scoped correctly in your cluster. If a user is able to modify resources containing PEM data to be able to exploit this, it's like that those permissions are a bigger security threat than this issue - especially for Secret resources.</p>
<h3 id="references">References</h3>
<ul>
<li>Upstream issue: <a href="https://github.com/golang/go/issues/50116">https://github.com/golang/go/issues/50116</a></li>
<li>Similar issue: <a href="https://github.com/sigstore/sigstore/issues/198">https://github.com/sigstore/sigstore/issues/198</a></li>
<li>Google OSSFuzz: <a href="https://issues.oss-fuzz.com/issues/376728466">https://issues.oss-fuzz.com/issues/376728466</a></li>
</ul>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/cert-manager/cert-manager/security/advisories/GHSA-r4pg-vg54-wxx4">https://github.com/cert-manager/cert-manager/security/advisories/GHSA-r4pg-vg54-wxx4</a></li>
<li><a href="https://github.com/golang/go/issues/50116">https://github.com/golang/go/issues/50116</a></li>
<li><a href="https://github.com/cert-manager/cert-manager/pull/7400">https://github.com/cert-manager/cert-manager/pull/7400</a></li>
<li><a href="https://github.com/cert-manager/cert-manager/pull/7401">https://github.com/cert-manager/cert-manager/pull/7401</a></li>
<li><a href="https://github.com/cert-manager/cert-manager/pull/7402">https://github.com/cert-manager/cert-manager/pull/7402</a></li>
<li><a href="https://github.com/cert-manager/cert-manager/pull/7403">https://github.com/cert-manager/cert-manager/pull/7403</a></li>
<li><a href="https://go.dev/issue/50116">https://go.dev/issue/50116</a></li>
<li><a href="https://pkg.go.dev/vuln/GO-2024-3282">https://pkg.go.dev/vuln/GO-2024-3282</a></li>
<li><a href="https://github.com/advisories/GHSA-r4pg-vg54-wxx4">https://github.com/advisories/GHSA-r4pg-vg54-wxx4</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-r4pg-vg54-wxx4</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-11-20T20:48:11.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/cert-manager/cert-manager] cert-manager ha a potential slowdown / DoS when parsing specially crafted PEM inputs]]></title>
        <id>https://github.com/advisories/GHSA-r4pg-vg54-wxx4</id>
        <link href="https://github.com/advisories/GHSA-r4pg-vg54-wxx4"/>
        <updated>2024-11-22T20:50:10.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>cert-manager packages which call the standard library <code>pem.Decode()</code> function  can take a long time to process specially crafted invalid PEM data.</p>
<p>If an attacker is able to modify PEM data which cert-manager reads (e.g. in a Secret resource), they may be able to use large amounts of CPU in the cert-manager controller pod to effectively create a denial-of-service (DoS) vector for cert-manager in the cluster.</p>
<p>Secrets are limited in size to <a href="https://kubernetes.io/docs/concepts/configuration/secret/#restriction-data-size">1MiB</a>, which reduces the impact of this issue; it was discovered through an ~856kB fuzz test input which causes <code>pem.Decode</code> to take roughly 750ms to reject the input on an M2 Max Macbook Pro. By way of comparison, a valid PEM-encoded 4096-bit RSA key takes roughly 70µs to parse on the same machine.</p>
<p>Given the required size of PEM data needed to present a realistic DoS vector, an attacker would need to create or insert many different large sized resources in the cluster, and so the best secondary defense is to ensure that sensible limits are placed via RBAC.</p>
<p>This issue affects all versions of cert-manager to have been released since at least v0.1.0 (since <code>pem.Decode</code> is core functionality for cert-manager). All <a href="https://cert-manager.io/docs/releases/">supported releases</a> are patched.</p>
<h3 id="patches">Patches</h3>
<p>The fixed versions are v1.16.2, v1.15.4 and v1.12.14.</p>
<ul>
<li>master branch: <a href="https://github.com/cert-manager/cert-manager/pull/7400">https://github.com/cert-manager/cert-manager/pull/7400</a></li>
<li>release-1.16 branch: <a href="https://github.com/cert-manager/cert-manager/pull/7401">https://github.com/cert-manager/cert-manager/pull/7401</a></li>
<li>release-1.15 branch: <a href="https://github.com/cert-manager/cert-manager/pull/7402">https://github.com/cert-manager/cert-manager/pull/7402</a></li>
<li>release-1.12 branch: <a href="https://github.com/cert-manager/cert-manager/pull/7403">https://github.com/cert-manager/cert-manager/pull/7403</a></li>
</ul>
<h3 id="workarounds">Workarounds</h3>
<p>Ensure that RBAC is scoped correctly in your cluster. If a user is able to modify resources containing PEM data to be able to exploit this, it's like that those permissions are a bigger security threat than this issue - especially for Secret resources.</p>
<h3 id="references">References</h3>
<ul>
<li>Upstream issue: <a href="https://github.com/golang/go/issues/50116">https://github.com/golang/go/issues/50116</a></li>
<li>Similar issue: <a href="https://github.com/sigstore/sigstore/issues/198">https://github.com/sigstore/sigstore/issues/198</a></li>
<li>Google OSSFuzz: <a href="https://issues.oss-fuzz.com/issues/376728466">https://issues.oss-fuzz.com/issues/376728466</a></li>
</ul>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/cert-manager/cert-manager/security/advisories/GHSA-r4pg-vg54-wxx4">https://github.com/cert-manager/cert-manager/security/advisories/GHSA-r4pg-vg54-wxx4</a></li>
<li><a href="https://github.com/golang/go/issues/50116">https://github.com/golang/go/issues/50116</a></li>
<li><a href="https://github.com/cert-manager/cert-manager/pull/7400">https://github.com/cert-manager/cert-manager/pull/7400</a></li>
<li><a href="https://github.com/cert-manager/cert-manager/pull/7401">https://github.com/cert-manager/cert-manager/pull/7401</a></li>
<li><a href="https://github.com/cert-manager/cert-manager/pull/7402">https://github.com/cert-manager/cert-manager/pull/7402</a></li>
<li><a href="https://github.com/cert-manager/cert-manager/pull/7403">https://github.com/cert-manager/cert-manager/pull/7403</a></li>
<li><a href="https://go.dev/issue/50116">https://go.dev/issue/50116</a></li>
<li><a href="https://pkg.go.dev/vuln/GO-2024-3282">https://pkg.go.dev/vuln/GO-2024-3282</a></li>
<li><a href="https://github.com/advisories/GHSA-r4pg-vg54-wxx4">https://github.com/advisories/GHSA-r4pg-vg54-wxx4</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-r4pg-vg54-wxx4</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-11-20T20:48:11.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/cert-manager/cert-manager] cert-manager ha a potential slowdown / DoS when parsing specially crafted PEM inputs]]></title>
        <id>https://github.com/advisories/GHSA-r4pg-vg54-wxx4</id>
        <link href="https://github.com/advisories/GHSA-r4pg-vg54-wxx4"/>
        <updated>2024-11-22T20:50:10.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>cert-manager packages which call the standard library <code>pem.Decode()</code> function  can take a long time to process specially crafted invalid PEM data.</p>
<p>If an attacker is able to modify PEM data which cert-manager reads (e.g. in a Secret resource), they may be able to use large amounts of CPU in the cert-manager controller pod to effectively create a denial-of-service (DoS) vector for cert-manager in the cluster.</p>
<p>Secrets are limited in size to <a href="https://kubernetes.io/docs/concepts/configuration/secret/#restriction-data-size">1MiB</a>, which reduces the impact of this issue; it was discovered through an ~856kB fuzz test input which causes <code>pem.Decode</code> to take roughly 750ms to reject the input on an M2 Max Macbook Pro. By way of comparison, a valid PEM-encoded 4096-bit RSA key takes roughly 70µs to parse on the same machine.</p>
<p>Given the required size of PEM data needed to present a realistic DoS vector, an attacker would need to create or insert many different large sized resources in the cluster, and so the best secondary defense is to ensure that sensible limits are placed via RBAC.</p>
<p>This issue affects all versions of cert-manager to have been released since at least v0.1.0 (since <code>pem.Decode</code> is core functionality for cert-manager). All <a href="https://cert-manager.io/docs/releases/">supported releases</a> are patched.</p>
<h3 id="patches">Patches</h3>
<p>The fixed versions are v1.16.2, v1.15.4 and v1.12.14.</p>
<ul>
<li>master branch: <a href="https://github.com/cert-manager/cert-manager/pull/7400">https://github.com/cert-manager/cert-manager/pull/7400</a></li>
<li>release-1.16 branch: <a href="https://github.com/cert-manager/cert-manager/pull/7401">https://github.com/cert-manager/cert-manager/pull/7401</a></li>
<li>release-1.15 branch: <a href="https://github.com/cert-manager/cert-manager/pull/7402">https://github.com/cert-manager/cert-manager/pull/7402</a></li>
<li>release-1.12 branch: <a href="https://github.com/cert-manager/cert-manager/pull/7403">https://github.com/cert-manager/cert-manager/pull/7403</a></li>
</ul>
<h3 id="workarounds">Workarounds</h3>
<p>Ensure that RBAC is scoped correctly in your cluster. If a user is able to modify resources containing PEM data to be able to exploit this, it's like that those permissions are a bigger security threat than this issue - especially for Secret resources.</p>
<h3 id="references">References</h3>
<ul>
<li>Upstream issue: <a href="https://github.com/golang/go/issues/50116">https://github.com/golang/go/issues/50116</a></li>
<li>Similar issue: <a href="https://github.com/sigstore/sigstore/issues/198">https://github.com/sigstore/sigstore/issues/198</a></li>
<li>Google OSSFuzz: <a href="https://issues.oss-fuzz.com/issues/376728466">https://issues.oss-fuzz.com/issues/376728466</a></li>
</ul>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/cert-manager/cert-manager/security/advisories/GHSA-r4pg-vg54-wxx4">https://github.com/cert-manager/cert-manager/security/advisories/GHSA-r4pg-vg54-wxx4</a></li>
<li><a href="https://github.com/golang/go/issues/50116">https://github.com/golang/go/issues/50116</a></li>
<li><a href="https://github.com/cert-manager/cert-manager/pull/7400">https://github.com/cert-manager/cert-manager/pull/7400</a></li>
<li><a href="https://github.com/cert-manager/cert-manager/pull/7401">https://github.com/cert-manager/cert-manager/pull/7401</a></li>
<li><a href="https://github.com/cert-manager/cert-manager/pull/7402">https://github.com/cert-manager/cert-manager/pull/7402</a></li>
<li><a href="https://github.com/cert-manager/cert-manager/pull/7403">https://github.com/cert-manager/cert-manager/pull/7403</a></li>
<li><a href="https://go.dev/issue/50116">https://go.dev/issue/50116</a></li>
<li><a href="https://pkg.go.dev/vuln/GO-2024-3282">https://pkg.go.dev/vuln/GO-2024-3282</a></li>
<li><a href="https://github.com/advisories/GHSA-r4pg-vg54-wxx4">https://github.com/advisories/GHSA-r4pg-vg54-wxx4</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-r4pg-vg54-wxx4</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-11-20T20:48:11.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/rancher/rancher] Rancher Helm Applications may have sensitive values leaked]]></title>
        <id>https://github.com/advisories/GHSA-9c5p-35gj-jqp4</id>
        <link href="https://github.com/advisories/GHSA-9c5p-35gj-jqp4"/>
        <updated>2024-11-22T20:48:05.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>A vulnerability has been identified within Rancher Manager whereby applications installed via Rancher Manager Apps Catalog store their Helm values directly into the <code>Apps</code> Custom Resource Definition, resulting in any users with <code>GET</code> access to it to be able to read any sensitive information that are contained within the Apps’ values. Additionally, the same information leaks into auditing logs when the audit level is set to equal or above 2.</p>
<p>Application charts without sensitive data are not affected by this vulnerability.
This vulnerability impacts any Helm applications installed on a Rancher Manager cluster, regardless of it being installed via the Marketplace or using the helm cli.</p>
<p>Please consult the associated <a href="https://attack.mitre.org/techniques/T1068/">MITRE ATT&amp;CK - Technique - Exploitation for Privilege Escalation</a> for further information about this category of attack.</p>
<h3 id="patches">Patches</h3>
<p>Patched versions include Rancher Manager <code>2.9.5</code> and <code>2.8.10</code>. The fix ensures that all Helm values for each App are stored as Kubernetes Secrets. After the upgrade, users are recommended to rotate passwords and secrets that may have been leaked while using the affected versions.</p>
<h3 id="workarounds">Workarounds</h3>
<p>No workarounds are available, therefore users are advised to upgrade to a patched version of Rancher Manager.
For deployments that can’t be upgraded in a timely fashion, admins are advised to limit the impact by reducing the amount of users who can get or list the Apps’ CRD. Additionally, the same applies to the auditing logs if the Rancher Manager has audit logs enabled and set to level 2 or above.</p>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory:</p>
<ul>
<li>Reach out to the <a href="https://github.com/rancher/rancher/security/policy">SUSE Rancher Security team</a> for security related inquiries.</li>
<li>Open an issue in the <a href="https://github.com/rancher/rancher/issues/new/choose">Rancher</a> repository.</li>
<li>Verify with our <a href="https://www.suse.com/suse-rancher/support-matrix/all-supported-versions/">support matrix</a> and <a href="https://www.suse.com/lifecycle/">product support lifecycle</a>.</li>
</ul>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/rancher/rancher/security/advisories/GHSA-9c5p-35gj-jqp4">https://github.com/rancher/rancher/security/advisories/GHSA-9c5p-35gj-jqp4</a></li>
<li><a href="https://pkg.go.dev/vuln/GO-2024-3280">https://pkg.go.dev/vuln/GO-2024-3280</a></li>
<li><a href="https://github.com/advisories/GHSA-9c5p-35gj-jqp4">https://github.com/advisories/GHSA-9c5p-35gj-jqp4</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-9c5p-35gj-jqp4</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-11-20T18:24:53.000Z</published>
    </entry>
</feed>