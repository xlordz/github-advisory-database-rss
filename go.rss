<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://azu.github.io/github-advisory-database-rss/go.rss</id>
    <title>Security Advisory for Go modules</title>
    <updated>2025-02-28T14:01:29.910Z</updated>
    <generator>github-advisory-database-rss</generator>
    <link rel="alternate" href="https://github.com/advisories?query=type%3Areviewed+ecosystem%3Ago"/>
    <subtitle>Security Advisory for Go modules on GitHub</subtitle>
    <rights>github-advisory-database-rss</rights>
    <category term="CRITICAL"/>
    <category term="HIGH"/>
    <category term="MODERATE"/>
    <category term="LOW"/>
    <entry>
        <title type="html"><![CDATA[[github.com/rancher/rancher] Rancher does not Properly Validate Account Bindings in SAML Authentication Enables User Impersonation on First Login]]></title>
        <id>https://github.com/advisories/GHSA-mq23-vvg7-xfm4</id>
        <link href="https://github.com/advisories/GHSA-mq23-vvg7-xfm4"/>
        <updated>2025-02-27T18:27:57.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>A vulnerability in Rancher has been discovered, leading to a local user impersonation through SAML Authentication on first login.</p>
<p>The issue occurs when a SAML authentication provider (AP) is configured (e.g. Keycloak). A newly created AP user can impersonate any user on Rancher by manipulating cookie values during their initial login to Rancher. This vulnerability could also be exploited if a Rancher user (present on the AP) is removed, either manually or automatically via the <a href="https://ranchermanager.docs.rancher.com/how-to-guides/advanced-user-guides/enable-user-retention">User Retention feature</a> with delete-inactive-user-after.</p>
<p>More precisely, Rancher validates only a subset of input from the SAML assertion request; however, it trusts and uses values that are not properly validated. An attacker could then configure the saml_Rancher_UserID cookie and the saml_Rancher_Action cookie so that the user principal from the AP will be added to the user specified by the attacker (from saml_Rancher_UserID). Rancher can then be deceived by setting saml_Rancher_UserID to the admin's user ID and saml_Rancher_Action to testAndEnable, thereby executing the vulnerable code path and leading to privilege escalation.</p>
<p>Note that the vulnerability impacts all SAML APs available in Rancher. However the following Rancher deployments are not affected :
Rancher deployments not using SAML-based AP.
Rancher deployments using SAML-based AP, where all SAML users are already signed in and linked to a Rancher account.</p>
<p>Please consult the associated  <a href="https://attack.mitre.org/techniques/T1134/001/">MITRE ATT&amp;CK - Technique - Access Token Manipulation: Token Impersonation/Theft</a> for further information about this category of attack.</p>
<h3 id="patches">Patches</h3>
<p>This vulnerability is addressed by adding the UserID claim to a JWT signed token, which is protected against tampering. </p>
<p>Patched versions include releases <code>v2.8.13</code>, <code>v2.9.7</code> and <code>v2.10.3</code>.</p>
<h3 id="workarounds">Workarounds</h3>
<p>Rancher deployments that can't upgrade, could temporarily disable the SAML-based AP as a temporary workaround. However, upgrading is recommended.</p>
<h3 id="references">References</h3>
<p>If you have any questions or comments about this advisory:</p>
<ul>
<li>Reach out to the <a href="https://github.com/rancher/rancher/security/policy">SUSE Rancher Security team</a> for security related inquiries.</li>
<li>Open an issue in the <a href="https://github.com/rancher/rancher/issues/new/choose">Rancher</a> repository.</li>
<li>Verify with our <a href="https://www.suse.com/suse-rancher/support-matrix/all-supported-versions/">support matrix</a> and <a href="https://www.suse.com/lifecycle/">product support lifecycle</a>.</li>
</ul>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/rancher/rancher/security/advisories/GHSA-mq23-vvg7-xfm4">https://github.com/rancher/rancher/security/advisories/GHSA-mq23-vvg7-xfm4</a></li>
<li><a href="https://github.com/advisories/GHSA-mq23-vvg7-xfm4">https://github.com/advisories/GHSA-mq23-vvg7-xfm4</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-mq23-vvg7-xfm4</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2025-02-27T18:27:56.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/rancher/rancher] Rancher does not Properly Validate Account Bindings in SAML Authentication Enables User Impersonation on First Login]]></title>
        <id>https://github.com/advisories/GHSA-mq23-vvg7-xfm4</id>
        <link href="https://github.com/advisories/GHSA-mq23-vvg7-xfm4"/>
        <updated>2025-02-27T18:27:57.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>A vulnerability in Rancher has been discovered, leading to a local user impersonation through SAML Authentication on first login.</p>
<p>The issue occurs when a SAML authentication provider (AP) is configured (e.g. Keycloak). A newly created AP user can impersonate any user on Rancher by manipulating cookie values during their initial login to Rancher. This vulnerability could also be exploited if a Rancher user (present on the AP) is removed, either manually or automatically via the <a href="https://ranchermanager.docs.rancher.com/how-to-guides/advanced-user-guides/enable-user-retention">User Retention feature</a> with delete-inactive-user-after.</p>
<p>More precisely, Rancher validates only a subset of input from the SAML assertion request; however, it trusts and uses values that are not properly validated. An attacker could then configure the saml_Rancher_UserID cookie and the saml_Rancher_Action cookie so that the user principal from the AP will be added to the user specified by the attacker (from saml_Rancher_UserID). Rancher can then be deceived by setting saml_Rancher_UserID to the admin's user ID and saml_Rancher_Action to testAndEnable, thereby executing the vulnerable code path and leading to privilege escalation.</p>
<p>Note that the vulnerability impacts all SAML APs available in Rancher. However the following Rancher deployments are not affected :
Rancher deployments not using SAML-based AP.
Rancher deployments using SAML-based AP, where all SAML users are already signed in and linked to a Rancher account.</p>
<p>Please consult the associated  <a href="https://attack.mitre.org/techniques/T1134/001/">MITRE ATT&amp;CK - Technique - Access Token Manipulation: Token Impersonation/Theft</a> for further information about this category of attack.</p>
<h3 id="patches">Patches</h3>
<p>This vulnerability is addressed by adding the UserID claim to a JWT signed token, which is protected against tampering. </p>
<p>Patched versions include releases <code>v2.8.13</code>, <code>v2.9.7</code> and <code>v2.10.3</code>.</p>
<h3 id="workarounds">Workarounds</h3>
<p>Rancher deployments that can't upgrade, could temporarily disable the SAML-based AP as a temporary workaround. However, upgrading is recommended.</p>
<h3 id="references">References</h3>
<p>If you have any questions or comments about this advisory:</p>
<ul>
<li>Reach out to the <a href="https://github.com/rancher/rancher/security/policy">SUSE Rancher Security team</a> for security related inquiries.</li>
<li>Open an issue in the <a href="https://github.com/rancher/rancher/issues/new/choose">Rancher</a> repository.</li>
<li>Verify with our <a href="https://www.suse.com/suse-rancher/support-matrix/all-supported-versions/">support matrix</a> and <a href="https://www.suse.com/lifecycle/">product support lifecycle</a>.</li>
</ul>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/rancher/rancher/security/advisories/GHSA-mq23-vvg7-xfm4">https://github.com/rancher/rancher/security/advisories/GHSA-mq23-vvg7-xfm4</a></li>
<li><a href="https://github.com/advisories/GHSA-mq23-vvg7-xfm4">https://github.com/advisories/GHSA-mq23-vvg7-xfm4</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-mq23-vvg7-xfm4</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2025-02-27T18:27:56.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/rancher/rancher] Rancher does not Properly Validate Account Bindings in SAML Authentication Enables User Impersonation on First Login]]></title>
        <id>https://github.com/advisories/GHSA-mq23-vvg7-xfm4</id>
        <link href="https://github.com/advisories/GHSA-mq23-vvg7-xfm4"/>
        <updated>2025-02-27T18:27:57.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>A vulnerability in Rancher has been discovered, leading to a local user impersonation through SAML Authentication on first login.</p>
<p>The issue occurs when a SAML authentication provider (AP) is configured (e.g. Keycloak). A newly created AP user can impersonate any user on Rancher by manipulating cookie values during their initial login to Rancher. This vulnerability could also be exploited if a Rancher user (present on the AP) is removed, either manually or automatically via the <a href="https://ranchermanager.docs.rancher.com/how-to-guides/advanced-user-guides/enable-user-retention">User Retention feature</a> with delete-inactive-user-after.</p>
<p>More precisely, Rancher validates only a subset of input from the SAML assertion request; however, it trusts and uses values that are not properly validated. An attacker could then configure the saml_Rancher_UserID cookie and the saml_Rancher_Action cookie so that the user principal from the AP will be added to the user specified by the attacker (from saml_Rancher_UserID). Rancher can then be deceived by setting saml_Rancher_UserID to the admin's user ID and saml_Rancher_Action to testAndEnable, thereby executing the vulnerable code path and leading to privilege escalation.</p>
<p>Note that the vulnerability impacts all SAML APs available in Rancher. However the following Rancher deployments are not affected :
Rancher deployments not using SAML-based AP.
Rancher deployments using SAML-based AP, where all SAML users are already signed in and linked to a Rancher account.</p>
<p>Please consult the associated  <a href="https://attack.mitre.org/techniques/T1134/001/">MITRE ATT&amp;CK - Technique - Access Token Manipulation: Token Impersonation/Theft</a> for further information about this category of attack.</p>
<h3 id="patches">Patches</h3>
<p>This vulnerability is addressed by adding the UserID claim to a JWT signed token, which is protected against tampering. </p>
<p>Patched versions include releases <code>v2.8.13</code>, <code>v2.9.7</code> and <code>v2.10.3</code>.</p>
<h3 id="workarounds">Workarounds</h3>
<p>Rancher deployments that can't upgrade, could temporarily disable the SAML-based AP as a temporary workaround. However, upgrading is recommended.</p>
<h3 id="references">References</h3>
<p>If you have any questions or comments about this advisory:</p>
<ul>
<li>Reach out to the <a href="https://github.com/rancher/rancher/security/policy">SUSE Rancher Security team</a> for security related inquiries.</li>
<li>Open an issue in the <a href="https://github.com/rancher/rancher/issues/new/choose">Rancher</a> repository.</li>
<li>Verify with our <a href="https://www.suse.com/suse-rancher/support-matrix/all-supported-versions/">support matrix</a> and <a href="https://www.suse.com/lifecycle/">product support lifecycle</a>.</li>
</ul>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/rancher/rancher/security/advisories/GHSA-mq23-vvg7-xfm4">https://github.com/rancher/rancher/security/advisories/GHSA-mq23-vvg7-xfm4</a></li>
<li><a href="https://github.com/advisories/GHSA-mq23-vvg7-xfm4">https://github.com/advisories/GHSA-mq23-vvg7-xfm4</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-mq23-vvg7-xfm4</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2025-02-27T18:27:56.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/rancher/rancher] Rancher allows an unauthenticated stack overflow in /v3-public/authproviders API]]></title>
        <id>https://github.com/advisories/GHSA-xr9q-h9c7-xw8q</id>
        <link href="https://github.com/advisories/GHSA-xr9q-h9c7-xw8q"/>
        <updated>2025-02-27T18:27:50.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>An unauthenticated stack overflow crash, leading to a denial of service (DoS), was identified in Rancher’s <code>/v3-public/authproviders</code> public API endpoint. A malicious user could submit data to the API which would cause the Rancher server to crash, but no malicious or incorrect data would actually be written in the API. The downstream clusters, i.e., the clusters managed by Rancher, are not affected by this issue.</p>
<p>This vulnerability affects those using external authentication providers as well as Rancher’s local authentication.</p>
<h3 id="patches">Patches</h3>
<p>The patch includes the removal of unnecessary HTTP methods of the specific API.</p>
<p>Patched versions include releases <code>v2.8.13</code>, <code>v2.9.7</code> and <code>v2.10.3</code>.</p>
<h3 id="workarounds">Workarounds</h3>
<p>There are no workarounds for this issue. Users are recommended to upgrade, as soon as possible, to a version of Rancher Manager that contains the fix.</p>
<h3 id="references">References</h3>
<p>If you have any questions or comments about this advisory:</p>
<ul>
<li>Reach out to the <a href="https://github.com/rancher/rancher/security/policy">SUSE Rancher Security team</a> for security related inquiries.</li>
<li>Open an issue in the <a href="https://github.com/rancher/rancher/issues/new/choose">Rancher</a> repository.</li>
<li>Verify with our <a href="https://www.suse.com/suse-rancher/support-matrix/all-supported-versions/">support matrix</a> and <a href="https://www.suse.com/lifecycle/">product support lifecycle</a>.</li>
</ul>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/rancher/rancher/security/advisories/GHSA-xr9q-h9c7-xw8q">https://github.com/rancher/rancher/security/advisories/GHSA-xr9q-h9c7-xw8q</a></li>
<li><a href="https://github.com/advisories/GHSA-xr9q-h9c7-xw8q">https://github.com/advisories/GHSA-xr9q-h9c7-xw8q</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-xr9q-h9c7-xw8q</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2025-02-27T18:27:49.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/rancher/rancher] Rancher allows an unauthenticated stack overflow in /v3-public/authproviders API]]></title>
        <id>https://github.com/advisories/GHSA-xr9q-h9c7-xw8q</id>
        <link href="https://github.com/advisories/GHSA-xr9q-h9c7-xw8q"/>
        <updated>2025-02-27T18:27:50.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>An unauthenticated stack overflow crash, leading to a denial of service (DoS), was identified in Rancher’s <code>/v3-public/authproviders</code> public API endpoint. A malicious user could submit data to the API which would cause the Rancher server to crash, but no malicious or incorrect data would actually be written in the API. The downstream clusters, i.e., the clusters managed by Rancher, are not affected by this issue.</p>
<p>This vulnerability affects those using external authentication providers as well as Rancher’s local authentication.</p>
<h3 id="patches">Patches</h3>
<p>The patch includes the removal of unnecessary HTTP methods of the specific API.</p>
<p>Patched versions include releases <code>v2.8.13</code>, <code>v2.9.7</code> and <code>v2.10.3</code>.</p>
<h3 id="workarounds">Workarounds</h3>
<p>There are no workarounds for this issue. Users are recommended to upgrade, as soon as possible, to a version of Rancher Manager that contains the fix.</p>
<h3 id="references">References</h3>
<p>If you have any questions or comments about this advisory:</p>
<ul>
<li>Reach out to the <a href="https://github.com/rancher/rancher/security/policy">SUSE Rancher Security team</a> for security related inquiries.</li>
<li>Open an issue in the <a href="https://github.com/rancher/rancher/issues/new/choose">Rancher</a> repository.</li>
<li>Verify with our <a href="https://www.suse.com/suse-rancher/support-matrix/all-supported-versions/">support matrix</a> and <a href="https://www.suse.com/lifecycle/">product support lifecycle</a>.</li>
</ul>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/rancher/rancher/security/advisories/GHSA-xr9q-h9c7-xw8q">https://github.com/rancher/rancher/security/advisories/GHSA-xr9q-h9c7-xw8q</a></li>
<li><a href="https://github.com/advisories/GHSA-xr9q-h9c7-xw8q">https://github.com/advisories/GHSA-xr9q-h9c7-xw8q</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-xr9q-h9c7-xw8q</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2025-02-27T18:27:49.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/rancher/rancher] Rancher allows an unauthenticated stack overflow in /v3-public/authproviders API]]></title>
        <id>https://github.com/advisories/GHSA-xr9q-h9c7-xw8q</id>
        <link href="https://github.com/advisories/GHSA-xr9q-h9c7-xw8q"/>
        <updated>2025-02-27T18:27:50.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>An unauthenticated stack overflow crash, leading to a denial of service (DoS), was identified in Rancher’s <code>/v3-public/authproviders</code> public API endpoint. A malicious user could submit data to the API which would cause the Rancher server to crash, but no malicious or incorrect data would actually be written in the API. The downstream clusters, i.e., the clusters managed by Rancher, are not affected by this issue.</p>
<p>This vulnerability affects those using external authentication providers as well as Rancher’s local authentication.</p>
<h3 id="patches">Patches</h3>
<p>The patch includes the removal of unnecessary HTTP methods of the specific API.</p>
<p>Patched versions include releases <code>v2.8.13</code>, <code>v2.9.7</code> and <code>v2.10.3</code>.</p>
<h3 id="workarounds">Workarounds</h3>
<p>There are no workarounds for this issue. Users are recommended to upgrade, as soon as possible, to a version of Rancher Manager that contains the fix.</p>
<h3 id="references">References</h3>
<p>If you have any questions or comments about this advisory:</p>
<ul>
<li>Reach out to the <a href="https://github.com/rancher/rancher/security/policy">SUSE Rancher Security team</a> for security related inquiries.</li>
<li>Open an issue in the <a href="https://github.com/rancher/rancher/issues/new/choose">Rancher</a> repository.</li>
<li>Verify with our <a href="https://www.suse.com/suse-rancher/support-matrix/all-supported-versions/">support matrix</a> and <a href="https://www.suse.com/lifecycle/">product support lifecycle</a>.</li>
</ul>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/rancher/rancher/security/advisories/GHSA-xr9q-h9c7-xw8q">https://github.com/rancher/rancher/security/advisories/GHSA-xr9q-h9c7-xw8q</a></li>
<li><a href="https://github.com/advisories/GHSA-xr9q-h9c7-xw8q">https://github.com/advisories/GHSA-xr9q-h9c7-xw8q</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-xr9q-h9c7-xw8q</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2025-02-27T18:27:49.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/rancher/rancher] Rancher's SAML-based login via CLI can be denied by unauthenticated users]]></title>
        <id>https://github.com/advisories/GHSA-5qmp-9x47-92q8</id>
        <link href="https://github.com/advisories/GHSA-5qmp-9x47-92q8"/>
        <updated>2025-02-27T18:27:42.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>A vulnerability has been identified within Rancher where it is possible for an unauthenticated user to list all CLI authentication tokens and delete them before the CLI is able to get the token value. This effectively prevents users from logging in via the CLI when using rancher token as the execution command (instead of the token directly being in the kubeconfig). </p>
<p>Note that this token is not the kubeconfig token and if an attacker is able to intercept it they can't use it to impersonate a real user since it is encrypted.</p>
<p>This happens because for SAML-based authentication providers, the login flow from the CLI works by generating a link to be pasted in the browser, and then polling every 10 seconds for the <code>/v3-public/authTokens/&lt;token name&gt;</code> endpoint.  The <code>&lt;token name&gt;</code> is randomly generated by the CLI. Once the login flow succeeds, Rancher creates an auth token (with an encrypted token value). The CLI then deletes the authToken.</p>
<p>Rancher deployments using only the local authentication provider, or non-SAML-based authentication providers, are not impacted by this vulnerability. SAML-based users not using the CLI are also not impacted.</p>
<p>Please consult the associated  <a href="https://attack.mitre.org/techniques/T1531/">MITRE ATT&amp;CK - Technique - Account Access Removal</a> for further information about this category of attack.</p>
<h3 id="patches">Patches</h3>
<p>The fix involves removing GET and DELETE methods for the authTokens collection.</p>
<p>Patched versions include releases <code>v2.8.13</code>, <code>v2.9.7</code> and <code>v2.10.3</code>.</p>
<h3 id="workarounds">Workarounds</h3>
<p>Users can refrain from using the Rancher CLI to log in as a workaround. Otherwise, users are advised to upgrade to a patched version of Rancher Manager.</p>
<h3 id="references">References</h3>
<p>If you have any questions or comments about this advisory:</p>
<ul>
<li>Reach out to the <a href="https://github.com/rancher/rancher/security/policy">SUSE Rancher Security team</a> for security related inquiries.</li>
<li>Open an issue in the <a href="https://github.com/rancher/rancher/issues/new/choose">Rancher</a> repository.</li>
<li>Verify with our <a href="https://www.suse.com/suse-rancher/support-matrix/all-supported-versions/">support matrix</a> and <a href="https://www.suse.com/lifecycle/">product support lifecycle</a>.</li>
</ul>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/rancher/rancher/security/advisories/GHSA-5qmp-9x47-92q8">https://github.com/rancher/rancher/security/advisories/GHSA-5qmp-9x47-92q8</a></li>
<li><a href="https://github.com/advisories/GHSA-5qmp-9x47-92q8">https://github.com/advisories/GHSA-5qmp-9x47-92q8</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-5qmp-9x47-92q8</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2025-02-27T18:27:41.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/rancher/rancher] Rancher's SAML-based login via CLI can be denied by unauthenticated users]]></title>
        <id>https://github.com/advisories/GHSA-5qmp-9x47-92q8</id>
        <link href="https://github.com/advisories/GHSA-5qmp-9x47-92q8"/>
        <updated>2025-02-27T18:27:42.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>A vulnerability has been identified within Rancher where it is possible for an unauthenticated user to list all CLI authentication tokens and delete them before the CLI is able to get the token value. This effectively prevents users from logging in via the CLI when using rancher token as the execution command (instead of the token directly being in the kubeconfig). </p>
<p>Note that this token is not the kubeconfig token and if an attacker is able to intercept it they can't use it to impersonate a real user since it is encrypted.</p>
<p>This happens because for SAML-based authentication providers, the login flow from the CLI works by generating a link to be pasted in the browser, and then polling every 10 seconds for the <code>/v3-public/authTokens/&lt;token name&gt;</code> endpoint.  The <code>&lt;token name&gt;</code> is randomly generated by the CLI. Once the login flow succeeds, Rancher creates an auth token (with an encrypted token value). The CLI then deletes the authToken.</p>
<p>Rancher deployments using only the local authentication provider, or non-SAML-based authentication providers, are not impacted by this vulnerability. SAML-based users not using the CLI are also not impacted.</p>
<p>Please consult the associated  <a href="https://attack.mitre.org/techniques/T1531/">MITRE ATT&amp;CK - Technique - Account Access Removal</a> for further information about this category of attack.</p>
<h3 id="patches">Patches</h3>
<p>The fix involves removing GET and DELETE methods for the authTokens collection.</p>
<p>Patched versions include releases <code>v2.8.13</code>, <code>v2.9.7</code> and <code>v2.10.3</code>.</p>
<h3 id="workarounds">Workarounds</h3>
<p>Users can refrain from using the Rancher CLI to log in as a workaround. Otherwise, users are advised to upgrade to a patched version of Rancher Manager.</p>
<h3 id="references">References</h3>
<p>If you have any questions or comments about this advisory:</p>
<ul>
<li>Reach out to the <a href="https://github.com/rancher/rancher/security/policy">SUSE Rancher Security team</a> for security related inquiries.</li>
<li>Open an issue in the <a href="https://github.com/rancher/rancher/issues/new/choose">Rancher</a> repository.</li>
<li>Verify with our <a href="https://www.suse.com/suse-rancher/support-matrix/all-supported-versions/">support matrix</a> and <a href="https://www.suse.com/lifecycle/">product support lifecycle</a>.</li>
</ul>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/rancher/rancher/security/advisories/GHSA-5qmp-9x47-92q8">https://github.com/rancher/rancher/security/advisories/GHSA-5qmp-9x47-92q8</a></li>
<li><a href="https://github.com/advisories/GHSA-5qmp-9x47-92q8">https://github.com/advisories/GHSA-5qmp-9x47-92q8</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-5qmp-9x47-92q8</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2025-02-27T18:27:41.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/rancher/rancher] Rancher's SAML-based login via CLI can be denied by unauthenticated users]]></title>
        <id>https://github.com/advisories/GHSA-5qmp-9x47-92q8</id>
        <link href="https://github.com/advisories/GHSA-5qmp-9x47-92q8"/>
        <updated>2025-02-27T18:27:42.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>A vulnerability has been identified within Rancher where it is possible for an unauthenticated user to list all CLI authentication tokens and delete them before the CLI is able to get the token value. This effectively prevents users from logging in via the CLI when using rancher token as the execution command (instead of the token directly being in the kubeconfig). </p>
<p>Note that this token is not the kubeconfig token and if an attacker is able to intercept it they can't use it to impersonate a real user since it is encrypted.</p>
<p>This happens because for SAML-based authentication providers, the login flow from the CLI works by generating a link to be pasted in the browser, and then polling every 10 seconds for the <code>/v3-public/authTokens/&lt;token name&gt;</code> endpoint.  The <code>&lt;token name&gt;</code> is randomly generated by the CLI. Once the login flow succeeds, Rancher creates an auth token (with an encrypted token value). The CLI then deletes the authToken.</p>
<p>Rancher deployments using only the local authentication provider, or non-SAML-based authentication providers, are not impacted by this vulnerability. SAML-based users not using the CLI are also not impacted.</p>
<p>Please consult the associated  <a href="https://attack.mitre.org/techniques/T1531/">MITRE ATT&amp;CK - Technique - Account Access Removal</a> for further information about this category of attack.</p>
<h3 id="patches">Patches</h3>
<p>The fix involves removing GET and DELETE methods for the authTokens collection.</p>
<p>Patched versions include releases <code>v2.8.13</code>, <code>v2.9.7</code> and <code>v2.10.3</code>.</p>
<h3 id="workarounds">Workarounds</h3>
<p>Users can refrain from using the Rancher CLI to log in as a workaround. Otherwise, users are advised to upgrade to a patched version of Rancher Manager.</p>
<h3 id="references">References</h3>
<p>If you have any questions or comments about this advisory:</p>
<ul>
<li>Reach out to the <a href="https://github.com/rancher/rancher/security/policy">SUSE Rancher Security team</a> for security related inquiries.</li>
<li>Open an issue in the <a href="https://github.com/rancher/rancher/issues/new/choose">Rancher</a> repository.</li>
<li>Verify with our <a href="https://www.suse.com/suse-rancher/support-matrix/all-supported-versions/">support matrix</a> and <a href="https://www.suse.com/lifecycle/">product support lifecycle</a>.</li>
</ul>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/rancher/rancher/security/advisories/GHSA-5qmp-9x47-92q8">https://github.com/rancher/rancher/security/advisories/GHSA-5qmp-9x47-92q8</a></li>
<li><a href="https://github.com/advisories/GHSA-5qmp-9x47-92q8">https://github.com/advisories/GHSA-5qmp-9x47-92q8</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-5qmp-9x47-92q8</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2025-02-27T18:27:41.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/go-jose/go-jose] DoS in go-jose Parsing]]></title>
        <id>https://github.com/advisories/GHSA-c6gw-w398-hv78</id>
        <link href="https://github.com/advisories/GHSA-c6gw-w398-hv78"/>
        <updated>2025-02-26T22:16:38.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>When parsing compact JWS or JWE input, go-jose could use excessive memory. The code used strings.Split(token, ".") to split JWT tokens, which is vulnerable to excessive memory consumption when processing maliciously crafted tokens with a large number of '.' characters.  An attacker could exploit this by sending numerous malformed tokens, leading to memory exhaustion and a Denial of Service.</p>
<h3 id="patches">Patches</h3>
<p>Version 4.0.5 fixes this issue</p>
<h3 id="workarounds">Workarounds</h3>
<p>Applications could pre-validate payloads passed to go-jose do not contain an excessive number of '.' characters.</p>
<h3 id="references">References</h3>
<p>This is the same sort of issue as in the golang.org/x/oauth2/jws package as CVE-2025-22868 and Go issue <a href="https://go.dev/issue/71490">https://go.dev/issue/71490</a>.</p>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/go-jose/go-jose/security/advisories/GHSA-c6gw-w398-hv78">https://github.com/go-jose/go-jose/security/advisories/GHSA-c6gw-w398-hv78</a></li>
<li><a href="https://github.com/golang/go/issues/71490">https://github.com/golang/go/issues/71490</a></li>
<li><a href="https://github.com/go-jose/go-jose/commit/99b346cec4e86d102284642c5dcbe9bb0cacfc22">https://github.com/go-jose/go-jose/commit/99b346cec4e86d102284642c5dcbe9bb0cacfc22</a></li>
<li><a href="https://go.dev/issue/71490">https://go.dev/issue/71490</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2025-27144">https://nvd.nist.gov/vuln/detail/CVE-2025-27144</a></li>
<li><a href="https://github.com/go-jose/go-jose/releases/tag/v4.0.5">https://github.com/go-jose/go-jose/releases/tag/v4.0.5</a></li>
<li><a href="https://github.com/advisories/GHSA-c6gw-w398-hv78">https://github.com/advisories/GHSA-c6gw-w398-hv78</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-c6gw-w398-hv78</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2025-02-24T22:49:19.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/go-jose/go-jose/v3] DoS in go-jose Parsing]]></title>
        <id>https://github.com/advisories/GHSA-c6gw-w398-hv78</id>
        <link href="https://github.com/advisories/GHSA-c6gw-w398-hv78"/>
        <updated>2025-02-26T22:16:38.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>When parsing compact JWS or JWE input, go-jose could use excessive memory. The code used strings.Split(token, ".") to split JWT tokens, which is vulnerable to excessive memory consumption when processing maliciously crafted tokens with a large number of '.' characters.  An attacker could exploit this by sending numerous malformed tokens, leading to memory exhaustion and a Denial of Service.</p>
<h3 id="patches">Patches</h3>
<p>Version 4.0.5 fixes this issue</p>
<h3 id="workarounds">Workarounds</h3>
<p>Applications could pre-validate payloads passed to go-jose do not contain an excessive number of '.' characters.</p>
<h3 id="references">References</h3>
<p>This is the same sort of issue as in the golang.org/x/oauth2/jws package as CVE-2025-22868 and Go issue <a href="https://go.dev/issue/71490">https://go.dev/issue/71490</a>.</p>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/go-jose/go-jose/security/advisories/GHSA-c6gw-w398-hv78">https://github.com/go-jose/go-jose/security/advisories/GHSA-c6gw-w398-hv78</a></li>
<li><a href="https://github.com/golang/go/issues/71490">https://github.com/golang/go/issues/71490</a></li>
<li><a href="https://github.com/go-jose/go-jose/commit/99b346cec4e86d102284642c5dcbe9bb0cacfc22">https://github.com/go-jose/go-jose/commit/99b346cec4e86d102284642c5dcbe9bb0cacfc22</a></li>
<li><a href="https://go.dev/issue/71490">https://go.dev/issue/71490</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2025-27144">https://nvd.nist.gov/vuln/detail/CVE-2025-27144</a></li>
<li><a href="https://github.com/go-jose/go-jose/releases/tag/v4.0.5">https://github.com/go-jose/go-jose/releases/tag/v4.0.5</a></li>
<li><a href="https://github.com/advisories/GHSA-c6gw-w398-hv78">https://github.com/advisories/GHSA-c6gw-w398-hv78</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-c6gw-w398-hv78</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2025-02-24T22:49:19.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/navidrome/navidrome] Navidrome allows an authentication bypass in Subsonic API with non-existent username]]></title>
        <id>https://github.com/advisories/GHSA-c3p4-vm8f-386p</id>
        <link href="https://github.com/advisories/GHSA-c3p4-vm8f-386p"/>
        <updated>2025-02-25T17:49:09.000Z</updated>
        <content type="html"><![CDATA[<h3 id="summary">Summary</h3>
<p>In certain Subsonic API endpoints, authentication can be bypassed by using a non-existent username combined with an empty (salted) password hash. This allows read-only access to the server’s resources, though attempts at write operations fail with a “permission denied” error.</p>
<h3 id="details">Details</h3>
<p>A flaw in the authentication check process allows an attacker to specify any arbitrary username that does not exist on the system, along with a salted hash of an empty password. Under these conditions, Navidrome treats the request as authenticated, granting access to various Subsonic endpoints without requiring valid credentials.</p>
<h3 id="proof-of-concept-poc">Proof of Concept (PoC)</h3>
<ol>
<li><p>Generate a random salt:</p>
<pre><code class="language-javascript">// e.g., salt = "x1vbudn1m6d"
Math.random().toString(36).substring(2, 15)
</code></pre>
</li>
<li><p>Calculate the MD5 hash of an empty password plus the salt:</p>
<pre><code class="language-shell"># Using the example salt above
echo -n "x1vbudn1m6d" | md5sum
81f0c0fb5d202ab0d012e6eaeb722d79  -
</code></pre>
</li>
<li><p>Send a request specifying a fake user, with the hash and salt values:</p>
<pre><code>GET https://[host]/rest/getPlaylists?u=FakeUser&amp;t=81f0c0fb5d202ab0d012e6eaeb722d79&amp;s=x1vbudn1m6d&amp;v=1.16.1&amp;c=castafiore&amp;f=json
</code></pre>
</li>
</ol>
<h3 id="impact">Impact</h3>
<p>An attacker can use any non-existent username to bypass the authentication system and gain access to various read-only data in Navidrome, such as user playlists. However, any attempt to modify data fails due to insufficient permissions, limiting the impact to unauthorized viewing of information.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/navidrome/navidrome/security/advisories/GHSA-c3p4-vm8f-386p">https://github.com/navidrome/navidrome/security/advisories/GHSA-c3p4-vm8f-386p</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2025-27112">https://nvd.nist.gov/vuln/detail/CVE-2025-27112</a></li>
<li><a href="https://github.com/navidrome/navidrome/commit/09ae41a2da66264c60ef307882362d2e2d8d8b89">https://github.com/navidrome/navidrome/commit/09ae41a2da66264c60ef307882362d2e2d8d8b89</a></li>
<li><a href="https://github.com/navidrome/navidrome/commit/287079a9e409fb6b9708ca384d7daa7b5185c1a0">https://github.com/navidrome/navidrome/commit/287079a9e409fb6b9708ca384d7daa7b5185c1a0</a></li>
<li><a href="https://github.com/advisories/GHSA-c3p4-vm8f-386p">https://github.com/advisories/GHSA-c3p4-vm8f-386p</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-c3p4-vm8f-386p</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2025-02-25T17:49:07.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/go-jose/go-jose/v4] DoS in go-jose Parsing]]></title>
        <id>https://github.com/advisories/GHSA-c6gw-w398-hv78</id>
        <link href="https://github.com/advisories/GHSA-c6gw-w398-hv78"/>
        <updated>2025-02-26T22:16:38.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>When parsing compact JWS or JWE input, go-jose could use excessive memory. The code used strings.Split(token, ".") to split JWT tokens, which is vulnerable to excessive memory consumption when processing maliciously crafted tokens with a large number of '.' characters.  An attacker could exploit this by sending numerous malformed tokens, leading to memory exhaustion and a Denial of Service.</p>
<h3 id="patches">Patches</h3>
<p>Version 4.0.5 fixes this issue</p>
<h3 id="workarounds">Workarounds</h3>
<p>Applications could pre-validate payloads passed to go-jose do not contain an excessive number of '.' characters.</p>
<h3 id="references">References</h3>
<p>This is the same sort of issue as in the golang.org/x/oauth2/jws package as CVE-2025-22868 and Go issue <a href="https://go.dev/issue/71490">https://go.dev/issue/71490</a>.</p>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/go-jose/go-jose/security/advisories/GHSA-c6gw-w398-hv78">https://github.com/go-jose/go-jose/security/advisories/GHSA-c6gw-w398-hv78</a></li>
<li><a href="https://github.com/golang/go/issues/71490">https://github.com/golang/go/issues/71490</a></li>
<li><a href="https://github.com/go-jose/go-jose/commit/99b346cec4e86d102284642c5dcbe9bb0cacfc22">https://github.com/go-jose/go-jose/commit/99b346cec4e86d102284642c5dcbe9bb0cacfc22</a></li>
<li><a href="https://go.dev/issue/71490">https://go.dev/issue/71490</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2025-27144">https://nvd.nist.gov/vuln/detail/CVE-2025-27144</a></li>
<li><a href="https://github.com/go-jose/go-jose/releases/tag/v4.0.5">https://github.com/go-jose/go-jose/releases/tag/v4.0.5</a></li>
<li><a href="https://github.com/advisories/GHSA-c6gw-w398-hv78">https://github.com/advisories/GHSA-c6gw-w398-hv78</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-c6gw-w398-hv78</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2025-02-24T22:49:19.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/mattermost/mattermost/server/v8] Mattermost fails to invalidate all active sessions when converting a user to a bot]]></title>
        <id>https://github.com/advisories/GHSA-rhvr-6w8c-6v7w</id>
        <link href="https://github.com/advisories/GHSA-rhvr-6w8c-6v7w"/>
        <updated>2025-02-24T18:28:25.000Z</updated>
        <content type="html"><![CDATA[<p>Mattermost versions 9.11.x &lt;= 9.11.6, 10.4.x &lt;= 10.4.1 fail to invalidate all active sessions when converting a user to a bot, with allows the converted user to escalate their privileges depending on the permissions granted to the bot.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2025-1412">https://nvd.nist.gov/vuln/detail/CVE-2025-1412</a></li>
<li><a href="https://mattermost.com/security-updates">https://mattermost.com/security-updates</a></li>
<li><a href="https://github.com/mattermost/mattermost/commit/faa7e4f2ea0cca2fd2aba271912b9fc3be788842">https://github.com/mattermost/mattermost/commit/faa7e4f2ea0cca2fd2aba271912b9fc3be788842</a></li>
<li><a href="https://github.com/advisories/GHSA-rhvr-6w8c-6v7w">https://github.com/advisories/GHSA-rhvr-6w8c-6v7w</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-rhvr-6w8c-6v7w</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2025-02-24T09:35:45.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/mattermost/mattermost/server/v8] Mattermost fails to invalidate all active sessions when converting a user to a bot]]></title>
        <id>https://github.com/advisories/GHSA-rhvr-6w8c-6v7w</id>
        <link href="https://github.com/advisories/GHSA-rhvr-6w8c-6v7w"/>
        <updated>2025-02-24T18:28:25.000Z</updated>
        <content type="html"><![CDATA[<p>Mattermost versions 9.11.x &lt;= 9.11.6, 10.4.x &lt;= 10.4.1 fail to invalidate all active sessions when converting a user to a bot, with allows the converted user to escalate their privileges depending on the permissions granted to the bot.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2025-1412">https://nvd.nist.gov/vuln/detail/CVE-2025-1412</a></li>
<li><a href="https://mattermost.com/security-updates">https://mattermost.com/security-updates</a></li>
<li><a href="https://github.com/mattermost/mattermost/commit/faa7e4f2ea0cca2fd2aba271912b9fc3be788842">https://github.com/mattermost/mattermost/commit/faa7e4f2ea0cca2fd2aba271912b9fc3be788842</a></li>
<li><a href="https://github.com/advisories/GHSA-rhvr-6w8c-6v7w">https://github.com/advisories/GHSA-rhvr-6w8c-6v7w</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-rhvr-6w8c-6v7w</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2025-02-24T09:35:45.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/mattermost/mattermost/server/v8] Mattermost fails to invalidate all active sessions when converting a user to a bot]]></title>
        <id>https://github.com/advisories/GHSA-rhvr-6w8c-6v7w</id>
        <link href="https://github.com/advisories/GHSA-rhvr-6w8c-6v7w"/>
        <updated>2025-02-24T18:28:25.000Z</updated>
        <content type="html"><![CDATA[<p>Mattermost versions 9.11.x &lt;= 9.11.6, 10.4.x &lt;= 10.4.1 fail to invalidate all active sessions when converting a user to a bot, with allows the converted user to escalate their privileges depending on the permissions granted to the bot.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2025-1412">https://nvd.nist.gov/vuln/detail/CVE-2025-1412</a></li>
<li><a href="https://mattermost.com/security-updates">https://mattermost.com/security-updates</a></li>
<li><a href="https://github.com/mattermost/mattermost/commit/faa7e4f2ea0cca2fd2aba271912b9fc3be788842">https://github.com/mattermost/mattermost/commit/faa7e4f2ea0cca2fd2aba271912b9fc3be788842</a></li>
<li><a href="https://github.com/advisories/GHSA-rhvr-6w8c-6v7w">https://github.com/advisories/GHSA-rhvr-6w8c-6v7w</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-rhvr-6w8c-6v7w</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2025-02-24T09:35:45.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/mattermost/mattermost/server/v8] Mattermost allows reading arbitrary files]]></title>
        <id>https://github.com/advisories/GHSA-v469-7wp6-7cvp</id>
        <link href="https://github.com/advisories/GHSA-v469-7wp6-7cvp"/>
        <updated>2025-02-24T18:28:23.000Z</updated>
        <content type="html"><![CDATA[<p>Mattermost versions 10.4.x &lt;= 10.4.1, 9.11.x &lt;= 9.11.7, 10.3.x &lt;= 10.3.2, 10.2.x &lt;= 10.2.2 fail to properly validate input when patching and duplicating a board, which allows a user to read any arbitrary file on the system via duplicating a specially crafted block in Boards.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2025-20051">https://nvd.nist.gov/vuln/detail/CVE-2025-20051</a></li>
<li><a href="https://mattermost.com/security-updates">https://mattermost.com/security-updates</a></li>
<li><a href="https://github.com/mattermost/mattermost-plugin-boards/commit/025ce8d363a054473bc002f43f602a4032d38c06">https://github.com/mattermost/mattermost-plugin-boards/commit/025ce8d363a054473bc002f43f602a4032d38c06</a></li>
<li><a href="https://github.com/mattermost/mattermost/commit/4ed702ccff4ec3c9eff832a9b6060f9f4454141d">https://github.com/mattermost/mattermost/commit/4ed702ccff4ec3c9eff832a9b6060f9f4454141d</a></li>
<li><a href="https://github.com/advisories/GHSA-v469-7wp6-7cvp">https://github.com/advisories/GHSA-v469-7wp6-7cvp</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-v469-7wp6-7cvp</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2025-02-24T09:35:45.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/mattermost/mattermost/server/v8] Mattermost allows reading arbitrary files]]></title>
        <id>https://github.com/advisories/GHSA-v469-7wp6-7cvp</id>
        <link href="https://github.com/advisories/GHSA-v469-7wp6-7cvp"/>
        <updated>2025-02-24T18:28:23.000Z</updated>
        <content type="html"><![CDATA[<p>Mattermost versions 10.4.x &lt;= 10.4.1, 9.11.x &lt;= 9.11.7, 10.3.x &lt;= 10.3.2, 10.2.x &lt;= 10.2.2 fail to properly validate input when patching and duplicating a board, which allows a user to read any arbitrary file on the system via duplicating a specially crafted block in Boards.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2025-20051">https://nvd.nist.gov/vuln/detail/CVE-2025-20051</a></li>
<li><a href="https://mattermost.com/security-updates">https://mattermost.com/security-updates</a></li>
<li><a href="https://github.com/mattermost/mattermost-plugin-boards/commit/025ce8d363a054473bc002f43f602a4032d38c06">https://github.com/mattermost/mattermost-plugin-boards/commit/025ce8d363a054473bc002f43f602a4032d38c06</a></li>
<li><a href="https://github.com/mattermost/mattermost/commit/4ed702ccff4ec3c9eff832a9b6060f9f4454141d">https://github.com/mattermost/mattermost/commit/4ed702ccff4ec3c9eff832a9b6060f9f4454141d</a></li>
<li><a href="https://github.com/advisories/GHSA-v469-7wp6-7cvp">https://github.com/advisories/GHSA-v469-7wp6-7cvp</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-v469-7wp6-7cvp</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2025-02-24T09:35:45.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/mattermost/mattermost/server/v8] Mattermost allows reading arbitrary files]]></title>
        <id>https://github.com/advisories/GHSA-v469-7wp6-7cvp</id>
        <link href="https://github.com/advisories/GHSA-v469-7wp6-7cvp"/>
        <updated>2025-02-24T18:28:23.000Z</updated>
        <content type="html"><![CDATA[<p>Mattermost versions 10.4.x &lt;= 10.4.1, 9.11.x &lt;= 9.11.7, 10.3.x &lt;= 10.3.2, 10.2.x &lt;= 10.2.2 fail to properly validate input when patching and duplicating a board, which allows a user to read any arbitrary file on the system via duplicating a specially crafted block in Boards.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2025-20051">https://nvd.nist.gov/vuln/detail/CVE-2025-20051</a></li>
<li><a href="https://mattermost.com/security-updates">https://mattermost.com/security-updates</a></li>
<li><a href="https://github.com/mattermost/mattermost-plugin-boards/commit/025ce8d363a054473bc002f43f602a4032d38c06">https://github.com/mattermost/mattermost-plugin-boards/commit/025ce8d363a054473bc002f43f602a4032d38c06</a></li>
<li><a href="https://github.com/mattermost/mattermost/commit/4ed702ccff4ec3c9eff832a9b6060f9f4454141d">https://github.com/mattermost/mattermost/commit/4ed702ccff4ec3c9eff832a9b6060f9f4454141d</a></li>
<li><a href="https://github.com/advisories/GHSA-v469-7wp6-7cvp">https://github.com/advisories/GHSA-v469-7wp6-7cvp</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-v469-7wp6-7cvp</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2025-02-24T09:35:45.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/mattermost/mattermost/server/v8] Mattermost allows reading arbitrary files]]></title>
        <id>https://github.com/advisories/GHSA-v469-7wp6-7cvp</id>
        <link href="https://github.com/advisories/GHSA-v469-7wp6-7cvp"/>
        <updated>2025-02-24T18:28:23.000Z</updated>
        <content type="html"><![CDATA[<p>Mattermost versions 10.4.x &lt;= 10.4.1, 9.11.x &lt;= 9.11.7, 10.3.x &lt;= 10.3.2, 10.2.x &lt;= 10.2.2 fail to properly validate input when patching and duplicating a board, which allows a user to read any arbitrary file on the system via duplicating a specially crafted block in Boards.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2025-20051">https://nvd.nist.gov/vuln/detail/CVE-2025-20051</a></li>
<li><a href="https://mattermost.com/security-updates">https://mattermost.com/security-updates</a></li>
<li><a href="https://github.com/mattermost/mattermost-plugin-boards/commit/025ce8d363a054473bc002f43f602a4032d38c06">https://github.com/mattermost/mattermost-plugin-boards/commit/025ce8d363a054473bc002f43f602a4032d38c06</a></li>
<li><a href="https://github.com/mattermost/mattermost/commit/4ed702ccff4ec3c9eff832a9b6060f9f4454141d">https://github.com/mattermost/mattermost/commit/4ed702ccff4ec3c9eff832a9b6060f9f4454141d</a></li>
<li><a href="https://github.com/advisories/GHSA-v469-7wp6-7cvp">https://github.com/advisories/GHSA-v469-7wp6-7cvp</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-v469-7wp6-7cvp</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2025-02-24T09:35:45.000Z</published>
    </entry>
</feed>