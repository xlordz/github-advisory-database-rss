<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://azu.github.io/github-advisory-database-rss/go.rss</id>
    <title>Security Advisory for Go modules</title>
    <updated>2024-11-04T16:01:30.533Z</updated>
    <generator>github-advisory-database-rss</generator>
    <link rel="alternate" href="https://github.com/advisories?query=type%3Areviewed+ecosystem%3Ago"/>
    <subtitle>Security Advisory for Go modules on GitHub</subtitle>
    <rights>github-advisory-database-rss</rights>
    <category term="CRITICAL"/>
    <category term="HIGH"/>
    <category term="MODERATE"/>
    <category term="LOW"/>
    <entry>
        <title type="html"><![CDATA[[github.com/tacquito/tacquito] Duplicate Advisory: Permissive Regular Expression in tacquito]]></title>
        <id>https://github.com/advisories/GHSA-j42f-wc6v-5xpq</id>
        <link href="https://github.com/advisories/GHSA-j42f-wc6v-5xpq"/>
        <updated>2024-11-01T21:47:03.000Z</updated>
        <content type="html"><![CDATA[<p>Tacquito prior to commit 07b49d1358e6ec0b5aa482fcd284f509191119e2 was not properly performing regex matches on authorized commands and arguments. Configured allowed commands/arguments were intended to require a match on the entire string, but instead only enforced a match on a sub-string. That would have potentially allowed unauthorized commands to be executed.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-49400">https://nvd.nist.gov/vuln/detail/CVE-2024-49400</a></li>
<li><a href="https://www.facebook.com/security/advisories/cve-2024-49400">https://www.facebook.com/security/advisories/cve-2024-49400</a></li>
<li><a href="https://github.com/advisories/GHSA-j42f-wc6v-5xpq">https://github.com/advisories/GHSA-j42f-wc6v-5xpq</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-j42f-wc6v-5xpq</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2024-10-17T18:31:37.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/kubesphere/kubesphere] KubeSphere IDOR vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-p26r-gfgc-c47h</id>
        <link href="https://github.com/advisories/GHSA-p26r-gfgc-c47h"/>
        <updated>2024-11-01T20:35:15.000Z</updated>
        <content type="html"><![CDATA[<p>An Insecure Direct Object Reference (IDOR) vulnerability in KubeSphere v3.4.1 and v4.1.1 allows low-privileged authenticated attackers to access sensitive resources without proper authorization checks.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-46528">https://nvd.nist.gov/vuln/detail/CVE-2024-46528</a></li>
<li><a href="https://okankurtulus.com.tr/2024/09/09/idor-vulnerability-in-kubesphere">https://okankurtulus.com.tr/2024/09/09/idor-vulnerability-in-kubesphere</a></li>
<li><a href="http://kubesphere.com">http://kubesphere.com</a></li>
<li><a href="https://github.com/kubesphere/kubesphere/issues/6227">https://github.com/kubesphere/kubesphere/issues/6227</a></li>
<li><a href="https://kubesphere.io">https://kubesphere.io</a></li>
<li><a href="https://www.kubesphere.io/news/kubesphere-cve-2024-46528">https://www.kubesphere.io/news/kubesphere-cve-2024-46528</a></li>
<li><a href="https://github.com/advisories/GHSA-p26r-gfgc-c47h">https://github.com/advisories/GHSA-p26r-gfgc-c47h</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-p26r-gfgc-c47h</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-10-14T18:30:26.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/kubesphere/kubesphere] KubeSphere IDOR vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-p26r-gfgc-c47h</id>
        <link href="https://github.com/advisories/GHSA-p26r-gfgc-c47h"/>
        <updated>2024-11-01T20:35:15.000Z</updated>
        <content type="html"><![CDATA[<p>An Insecure Direct Object Reference (IDOR) vulnerability in KubeSphere v3.4.1 and v4.1.1 allows low-privileged authenticated attackers to access sensitive resources without proper authorization checks.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-46528">https://nvd.nist.gov/vuln/detail/CVE-2024-46528</a></li>
<li><a href="https://okankurtulus.com.tr/2024/09/09/idor-vulnerability-in-kubesphere">https://okankurtulus.com.tr/2024/09/09/idor-vulnerability-in-kubesphere</a></li>
<li><a href="http://kubesphere.com">http://kubesphere.com</a></li>
<li><a href="https://github.com/kubesphere/kubesphere/issues/6227">https://github.com/kubesphere/kubesphere/issues/6227</a></li>
<li><a href="https://kubesphere.io">https://kubesphere.io</a></li>
<li><a href="https://www.kubesphere.io/news/kubesphere-cve-2024-46528">https://www.kubesphere.io/news/kubesphere-cve-2024-46528</a></li>
<li><a href="https://github.com/advisories/GHSA-p26r-gfgc-c47h">https://github.com/advisories/GHSA-p26r-gfgc-c47h</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-p26r-gfgc-c47h</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-10-14T18:30:26.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/plentico/plenti] Plenti arbitrary file deletion vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-6h8w-hrfp-pffx</id>
        <link href="https://github.com/advisories/GHSA-6h8w-hrfp-pffx"/>
        <updated>2024-10-31T21:49:44.000Z</updated>
        <content type="html"><![CDATA[<p>Plenti, a static site generator, has an arbitrary file deletion vulnerability in versions prior to 0.7.2. The <code>/postLocal</code> endpoint is vulnerable to an arbitrary file write deletion when a plenti user serves their website. This issue may lead to information loss. Version 0.7.2 fixes the vulnerability.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-49381">https://nvd.nist.gov/vuln/detail/CVE-2024-49381</a></li>
<li><a href="https://github.com/plentico/plenti/blob/01825e0dcd3505fac57adc2edf29f772d585c008/cmd/serve.go#L205">https://github.com/plentico/plenti/blob/01825e0dcd3505fac57adc2edf29f772d585c008/cmd/serve.go#L205</a></li>
<li><a href="https://github.com/plentico/plenti/releases/tag/v0.7.2">https://github.com/plentico/plenti/releases/tag/v0.7.2</a></li>
<li><a href="https://securitylab.github.com/advisories/GHSL-2024-297_GHSL-2024-298_plenti">https://securitylab.github.com/advisories/GHSL-2024-297_GHSL-2024-298_plenti</a></li>
<li><a href="https://github.com/advisories/GHSA-6h8w-hrfp-pffx">https://github.com/advisories/GHSA-6h8w-hrfp-pffx</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-6h8w-hrfp-pffx</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-10-31T21:49:42.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/plentico/plenti] Plenti arbitrary file write vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-2p96-p7qh-4rgr</id>
        <link href="https://github.com/advisories/GHSA-2p96-p7qh-4rgr"/>
        <updated>2024-10-31T21:48:54.000Z</updated>
        <content type="html"><![CDATA[<p>Plenti, a static site generator, has an arbitrary file write vulnerability in versions prior to 0.7.2. The <code>/postLocal</code> endpoint is vulnerable to an arbitrary file write vulnerability when a plenti user serves their website. This issue may lead to Remote Code Execution. Version 0.7.2 fixes the vulnerability.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-49380">https://nvd.nist.gov/vuln/detail/CVE-2024-49380</a></li>
<li><a href="https://github.com/plentico/plenti/blob/01825e0dcd3505fac57adc2edf29f772d585c008/cmd/serve.go#L205">https://github.com/plentico/plenti/blob/01825e0dcd3505fac57adc2edf29f772d585c008/cmd/serve.go#L205</a></li>
<li><a href="https://github.com/plentico/plenti/releases/tag/v0.7.2">https://github.com/plentico/plenti/releases/tag/v0.7.2</a></li>
<li><a href="https://securitylab.github.com/advisories/GHSL-2024-297_GHSL-2024-298_plenti">https://securitylab.github.com/advisories/GHSL-2024-297_GHSL-2024-298_plenti</a></li>
<li><a href="https://github.com/advisories/GHSA-2p96-p7qh-4rgr">https://github.com/advisories/GHSA-2p96-p7qh-4rgr</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-2p96-p7qh-4rgr</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-10-31T21:48:53.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/hashicorp/vault] Hashicorp Vault vulnerable to denial of service through memory exhaustion]]></title>
        <id>https://github.com/advisories/GHSA-g233-2p4r-3q7v</id>
        <link href="https://github.com/advisories/GHSA-g233-2p4r-3q7v"/>
        <updated>2024-10-31T20:46:35.000Z</updated>
        <content type="html"><![CDATA[<p>Vault Community and Vault Enterprise (“Vault”) clusters using Vault’s Integrated Storage backend are vulnerable to a denial-of-service (DoS) attack through memory exhaustion through a Raft cluster join API endpoint. An attacker may send a large volume of requests to the endpoint which may cause Vault to consume excessive system memory resources, potentially leading to a crash of the underlying system and the Vault process itself.</p>
<p>This vulnerability, CVE-2024-8185, is fixed in Vault Community 1.18.1 and Vault Enterprise 1.18.1, 1.17.8, and 1.16.12.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-8185">https://nvd.nist.gov/vuln/detail/CVE-2024-8185</a></li>
<li><a href="https://discuss.hashicorp.com/t/hcsec-2024-26-vault-vulnerable-to-denial-of-service-through-memory-exhaustion-when-processing-raft-cluster-join-requests/71047">https://discuss.hashicorp.com/t/hcsec-2024-26-vault-vulnerable-to-denial-of-service-through-memory-exhaustion-when-processing-raft-cluster-join-requests/71047</a></li>
<li><a href="https://github.com/hashicorp/vault/commit/195dfca433028887973f5bd82d173d91fe9dab4a">https://github.com/hashicorp/vault/commit/195dfca433028887973f5bd82d173d91fe9dab4a</a></li>
<li><a href="https://github.com/advisories/GHSA-g233-2p4r-3q7v">https://github.com/advisories/GHSA-g233-2p4r-3q7v</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-g233-2p4r-3q7v</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-10-31T18:31:19.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/consensys/gnark] Gnark out-of-memory during deserialization with crafted inputs]]></title>
        <id>https://github.com/advisories/GHSA-cph5-3pgr-c82g</id>
        <link href="https://github.com/advisories/GHSA-cph5-3pgr-c82g"/>
        <updated>2024-11-04T13:48:59.000Z</updated>
        <content type="html"><![CDATA[<p>Thanks @pventuzelo for reporting.</p>
<p>From the correspondence:</p>
<blockquote>
<p>Hi,</p>
<p>We (Fuzzinglabs &amp; Lambdaclass) found that during deserialization of certain files representing a <code>VerifyingKey</code>, an excessive memory allocation is happening consuming a lot of resources and even triggering a crash with the error <code>fatal error: runtime: out of memory</code>.</p>
<p>Please find the details below:</p>
<h2 id="vulnerability-details">Vulnerability Details</h2>
<ul>
<li><strong>Severity:</strong> Critical -&gt; DoS</li>
<li><strong>Affected Component:</strong> Deserialization</li>
</ul>
<h2 id="environment">Environment</h2>
<ul>
<li><p><strong>Compiler Version:</strong> go version go1.22.2 linux/amd64</p>
</li>
<li><p><strong>Distro Version:</strong> Ubuntu 24.04.1 LTS</p>
</li>
<li><p><strong>Additional Environment Details:</strong></p>
<ul>
<li><code>[github.com/consensys/gnark](http://github.com/consensys/gnark) v0.11.0</code></li>
<li><code>[github.com/consensys/gnark-crypto](http://github.com/consensys/gnark-crypto) v0.14.1-0.20240909142611-e6b99e74cec1</code></li>
</ul>
</li>
</ul>
<h2 id="steps-to-reproduce">Steps to Reproduce</h2>
<p>You can download the needed files here: <a href="https://drive.google.com/drive/folders/1KQ5I3vv4bUllvqbatGappwbAkIcR2NI_?usp=sharing">https://drive.google.com/drive/folders/1KQ5I3vv4bUllvqbatGappwbAkIcR2NI_?usp=sharing</a></p>
<p>You have to run</p>
<pre><code class="language-shell">go run gnark_poc.go
</code></pre>
<p>in a terminal.</p>
<p>Running the provided code will result in a memory crash or an extremely large memory allocation, which can be observed using the following command:</p>
<pre><code class="language-shell">go tool pprof -web mem.pprof
</code></pre>
<h2 id="root-cause-analysis">Root Cause Analysis</h2>
<p>The provided code loads a <code>VerifyingKey</code> from <code>old.vk</code> by calling the <code>ReadFrom</code> function. This function is implemented in <a href="https://github.com/Consensys/gnark/blob/ca8e1568f47ae6b717eda0a6734d87645edaecf7/backend/groth16/bn254/marshal.go#L174C2-L174C25">backend/groth16/bn254/marshal.go</a> within the <a href="https://github.com/Consensys/gnark">gnark</a> library.</p>
<p>The provided example uses the elliptic curve BN-254, so the code resides in the <a href="https://github.com/Consensys/gnark/blob/ca8e1568f47ae6b717eda0a6734d87645edaecf7/backend/groth16/bn254/">backend/groth16/bn254/</a> repertory. However, the same error exists in other repertories, such as <a href="https://github.com/Consensys/gnark/blob/ca8e1568f47ae6b717eda0a6734d87645edaecf7/backend/groth16/bls12-377/">backend/groth16/bls12-377/</a>.</p>
<p>At <a href="https://github.com/Consensys/gnark/blob/ca8e1568f47ae6b717eda0a6734d87645edaecf7/backend/groth16/bn254/marshal.go#L207">line 207</a>, a slice is allocated with a length of <code>nbCommitments</code>. This variable is directly extracted from the deserialized file, which, in our case, has a value of <code>2,327,186,600</code>. This large value may be too big for some configurations, leading to memory allocations of approximately ±1 TB, as observed with <code>pprof</code>.</p>
<h2 id="detailed-behavior">Detailed Behavior</h2>
<pre><code class="language-shell">go run gnark_poc.go
</code></pre>
<pre><code>fatal error: runtime: out of memory

runtime stack:
runtime.throw({0x5fe946?, 0x2052ae?})
/usr/lib/go-1.22/src/runtime/panic.go:1023 +0x5c fp=0x7ffd65b321a0 sp=0x7ffd65b32170 pc=0x438a9c
runtime.sysMapOS(0xc000400000, 0x8ab6400000)
/usr/lib/go-1.22/src/runtime/mem_linux.go:167 +0x11b fp=0x7ffd65b321e0 sp=0x7ffd65b321a0 pc=0x418bbb
runtime.sysMap(0xc000400000, 0x8ab6400000, 0x7b19c8?)
/usr/lib/go-1.22/src/runtime/mem.go:155 +0x34 fp=0x7ffd65b32200 sp=0x7ffd65b321e0 pc=0x418634
runtime.(*mheap).grow(0x7a17c0, 0x455b066?)
/usr/lib/go-1.22/src/runtime/mheap.go:1534 +0x236 fp=0x7ffd65b32270 sp=0x7ffd65b32200 pc=0x42b176
runtime.(*mheap).allocSpan(0x7a17c0, 0x455b066, 0x0, 0x1)
/usr/lib/go-1.22/src/runtime/mheap.go:1246 +0x1b0 fp=0x7ffd65b32310 sp=0x7ffd65b32270 pc=0x42a850
runtime.(*mheap).alloc.func1()
/usr/lib/go-1.22/src/runtime/mheap.go:964 +0x5c fp=0x7ffd65b32358 sp=0x7ffd65b32310 pc=0x42a2fc
runtime.systemstack(0x46d79f)
/usr/lib/go-1.22/src/runtime/asm_amd64.s:509 +0x4a fp=0x7ffd65b32368 sp=0x7ffd65b32358 pc=0x46912a

goroutine 1 gp=0xc0000061c0 m=0 mp=0x798ca0 [running]:
runtime.systemstack_switch()
/usr/lib/go-1.22/src/runtime/asm_amd64.s:474 +0x8 fp=0xc000031b68 sp=0xc000031b58 pc=0x4690c8
runtime.(*mheap).alloc(0x5bc040?, 0xc00012bb08?, 0xa0?)
/usr/lib/go-1.22/src/runtime/mheap.go:958 +0x5b fp=0xc000031bb0 sp=0xc000031b68 pc=0x42a25b
runtime.(*mcache).allocLarge(0xc000126510?, 0x8ab60ca800, 0x1)
/usr/lib/go-1.22/src/runtime/mcache.go:234 +0x87 fp=0xc000031c00 sp=0xc000031bb0 pc=0x4176e7
runtime.mallocgc(0x8ab60ca800, 0x5d92a0, 0x1)
/usr/lib/go-1.22/src/runtime/malloc.go:1165 +0x597 fp=0xc000031c88 sp=0xc000031c00 pc=0x40ef97
runtime.makeslice(0xc00011c180?, 0x0?, 0x2?)
/usr/lib/go-1.22/src/runtime/slice.go:107 +0x49 fp=0xc000031cb0 sp=0xc000031c88 pc=0x4500c9
[github.com/consensys/gnark/backend/groth16/bn254.(*VerifyingKey).readFrom(0xc0001b7088](http://github.com/consensys/gnark/backend/groth16/bn254.(*VerifyingKey).readFrom(0xc0001b7088), {0x6598a0, 0xc00011dc50}, 0x0)
/home/raunan/go/pkg/mod/[github.com/!ronan!thoraval/gnark@v0.0.0-20241007163125-4c0a7511c3d1/backend/groth16/bn254/marshal.go:214](http://github.com/!ronan!thoraval/gnark@v0.0.0-20241007163125-4c0a7511c3d1/backend/groth16/bn254/marshal.go:214) +0x765 fp=0xc000031ea8 sp=0xc000031cb0 pc=0x59b205
[github.com/consensys/gnark/backend/groth16/bn254.(*VerifyingKey).ReadFrom(0x100469020](http://github.com/consensys/gnark/backend/groth16/bn254.(*VerifyingKey).ReadFrom(0x100469020)?, {0x6598a0?, 0xc00011dc50?})
/home/raunan/go/pkg/mod/[github.com/!ronan!thoraval/gnark@v0.0.0-20241007163125-4c0a7511c3d1/backend/groth16/bn254/marshal.go:166](http://github.com/!ronan!thoraval/gnark@v0.0.0-20241007163125-4c0a7511c3d1/backend/groth16/bn254/marshal.go:166) +0x1f fp=0xc000031ed8 sp=0xc000031ea8 pc=0x59aa5f
main.main()
/home/raunan/gnark_poc/gnark_poc/gnark_poc.go:19 +0xba fp=0xc000031f50 sp=0xc000031ed8 pc=0x5addda
runtime.main()
/usr/lib/go-1.22/src/runtime/proc.go:271 +0x29d fp=0xc000031fe0 sp=0xc000031f50 pc=0x43b55d
runtime.goexit({})
/usr/lib/go-1.22/src/runtime/asm_amd64.s:1695 +0x1 fp=0xc000031fe8 sp=0xc000031fe0 pc=0x46b0e1

goroutine 2 gp=0xc000006c40 m=nil [force gc (idle)]:
runtime.gopark(0x0?, 0x0?, 0x0?, 0x0?, 0x0?)
/usr/lib/go-1.22/src/runtime/proc.go:402 +0xce fp=0xc000074fa8 sp=0xc000074f88 pc=0x43b98e
runtime.goparkunlock(...)
/usr/lib/go-1.22/src/runtime/proc.go:408
runtime.forcegchelper()
/usr/lib/go-1.22/src/runtime/proc.go:326 +0xb3 fp=0xc000074fe0 sp=0xc000074fa8 pc=0x43b813
runtime.goexit({})
/usr/lib/go-1.22/src/runtime/asm_amd64.s:1695 +0x1 fp=0xc000074fe8 sp=0xc000074fe0 pc=0x46b0e1
created by runtime.init.6 in goroutine 1
/usr/lib/go-1.22/src/runtime/proc.go:314 +0x1a

goroutine 3 gp=0xc000007180 m=nil [GC sweep wait]:
runtime.gopark(0x0?, 0x0?, 0x0?, 0x0?, 0x0?)
/usr/lib/go-1.22/src/runtime/proc.go:402 +0xce fp=0xc000075780 sp=0xc000075760 pc=0x43b98e
runtime.goparkunlock(...)
/usr/lib/go-1.22/src/runtime/proc.go:408
runtime.bgsweep(0xc0000240e0)
/usr/lib/go-1.22/src/runtime/mgcsweep.go:278 +0x94 fp=0xc0000757c8 sp=0xc000075780 pc=0x426cf4
runtime.gcenable.gowrap1()
/usr/lib/go-1.22/src/runtime/mgc.go:203 +0x25 fp=0xc0000757e0 sp=0xc0000757c8 pc=0x41b845
runtime.goexit({})
/usr/lib/go-1.22/src/runtime/asm_amd64.s:1695 +0x1 fp=0xc0000757e8 sp=0xc0000757e0 pc=0x46b0e1
created by runtime.gcenable in goroutine 1
/usr/lib/go-1.22/src/runtime/mgc.go:203 +0x66

goroutine 4 gp=0xc000007340 m=nil [GC scavenge wait]:
runtime.gopark(0xc0000240e0?, 0x657100?, 0x1?, 0x0?, 0xc000007340?)
/usr/lib/go-1.22/src/runtime/proc.go:402 +0xce fp=0xc000075f78 sp=0xc000075f58 pc=0x43b98e
runtime.goparkunlock(...)
/usr/lib/go-1.22/src/runtime/proc.go:408
runtime.(*scavengerState).park(0x797520)
/usr/lib/go-1.22/src/runtime/mgcscavenge.go:425 +0x49 fp=0xc000075fa8 sp=0xc000075f78 pc=0x4246e9
runtime.bgscavenge(0xc0000240e0)
/usr/lib/go-1.22/src/runtime/mgcscavenge.go:653 +0x3c fp=0xc000075fc8 sp=0xc000075fa8 pc=0x424c7c
runtime.gcenable.gowrap2()
/usr/lib/go-1.22/src/runtime/mgc.go:204 +0x25 fp=0xc000075fe0 sp=0xc000075fc8 pc=0x41b7e5
runtime.goexit({})
/usr/lib/go-1.22/src/runtime/asm_amd64.s:1695 +0x1 fp=0xc000075fe8 sp=0xc000075fe0 pc=0x46b0e1
created by runtime.gcenable in goroutine 1
/usr/lib/go-1.22/src/runtime/mgc.go:204 +0xa5

goroutine 18 gp=0xc000102700 m=nil [finalizer wait]:
runtime.gopark(0xc000074648?, 0x40f445?, 0xa8?, 0x1?, 0xc0000061c0?)
/usr/lib/go-1.22/src/runtime/proc.go:402 +0xce fp=0xc000074620 sp=0xc000074600 pc=0x43b98e
runtime.runfinq()
/usr/lib/go-1.22/src/runtime/mfinal.go:194 +0x107 fp=0xc0000747e0 sp=0xc000074620 pc=0x41a887
runtime.goexit({})
/usr/lib/go-1.22/src/runtime/asm_amd64.s:1695 +0x1 fp=0xc0000747e8 sp=0xc0000747e0 pc=0x46b0e1
created by runtime.createfing in goroutine 1
/usr/lib/go-1.22/src/runtime/mfinal.go:164 +0x3d
exit status 2
</code></pre>
<h2 id="appendices">Appendices</h2>
<p>This problem can also happen with <code>ProvingKey</code>.</p>
</blockquote>
<h3 id="impact">Impact</h3>
<p>Prover and verifier denial of service in case of maliciously crafted inputs (public key, verification key).</p>
<h3 id="patches">Patches</h3>
<p>The issue is patched in <a href="https://github.com/Consensys/gnark/pull/1307">https://github.com/Consensys/gnark/pull/1307</a>. It was merged to gnark master at <a href="https://github.com/Consensys/gnark/commit/47ae846339add2bdf9983e499342bfdfe195191d">https://github.com/Consensys/gnark/commit/47ae846339add2bdf9983e499342bfdfe195191d</a>. The fix will be incorporated in the next minor release of gnark (v0.11.1).</p>
<h3 id="workarounds">Workarounds</h3>
<p>There are no convenient work-arounds currently. The best approach currently is to run key verification as a separate service which halts the verification pipeline in case of OOM when verification keys come from untrusted sources.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/Consensys/gnark/security/advisories/GHSA-cph5-3pgr-c82g">https://github.com/Consensys/gnark/security/advisories/GHSA-cph5-3pgr-c82g</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-50354">https://nvd.nist.gov/vuln/detail/CVE-2024-50354</a></li>
<li><a href="https://github.com/Consensys/gnark/pull/1307">https://github.com/Consensys/gnark/pull/1307</a></li>
<li><a href="https://github.com/Consensys/gnark/commit/47ae846339add2bdf9983e499342bfdfe195191d">https://github.com/Consensys/gnark/commit/47ae846339add2bdf9983e499342bfdfe195191d</a></li>
<li><a href="https://github.com/advisories/GHSA-cph5-3pgr-c82g">https://github.com/advisories/GHSA-cph5-3pgr-c82g</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-cph5-3pgr-c82g</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-10-31T20:37:00.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/hashicorp/consul] Hashicorp Consul Cross-site Scripting vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-99wr-c2px-grmh</id>
        <link href="https://github.com/advisories/GHSA-99wr-c2px-grmh"/>
        <updated>2024-10-31T14:55:00.000Z</updated>
        <content type="html"><![CDATA[<p>A vulnerability was identified in Consul and Consul Enterprise such that the server response did not explicitly set a Content-Type HTTP header, allowing user-provided inputs to be misinterpreted and lead to reflected XSS.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-10086">https://nvd.nist.gov/vuln/detail/CVE-2024-10086</a></li>
<li><a href="https://discuss.hashicorp.com/t/hcsec-2024-24-consul-vulnerable-to-reflected-xss-on-content-type-error-manipulation">https://discuss.hashicorp.com/t/hcsec-2024-24-consul-vulnerable-to-reflected-xss-on-content-type-error-manipulation</a></li>
<li><a href="https://github.com/hashicorp/consul/commit/07fae7bb0be8593cc98c38b1ef4a49ed9188932f">https://github.com/hashicorp/consul/commit/07fae7bb0be8593cc98c38b1ef4a49ed9188932f</a></li>
<li><a href="https://github.com/advisories/GHSA-99wr-c2px-grmh">https://github.com/advisories/GHSA-99wr-c2px-grmh</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-99wr-c2px-grmh</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-10-31T00:30:36.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/hashicorp/consul] Hashicorp Consul Improper Neutralization of HTTP Headers for Scripting Syntax vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-5c4w-8hhh-3c3h</id>
        <link href="https://github.com/advisories/GHSA-5c4w-8hhh-3c3h"/>
        <updated>2024-10-31T14:49:34.000Z</updated>
        <content type="html"><![CDATA[<p>A vulnerability was identified in Consul and Consul Enterprise ("Consul") such that using Headers in L7 traffic intentions could bypass HTTP header based access rules.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-10006">https://nvd.nist.gov/vuln/detail/CVE-2024-10006</a></li>
<li><a href="https://discuss.hashicorp.com/t/hcsec-2024-23-consul-l7-intentions-vulnerable-to-headers-bypass">https://discuss.hashicorp.com/t/hcsec-2024-23-consul-l7-intentions-vulnerable-to-headers-bypass</a></li>
<li><a href="https://github.com/hashicorp/consul/pull/21816">https://github.com/hashicorp/consul/pull/21816</a></li>
<li><a href="https://github.com/hashicorp/consul/commit/d9206fc7e284a9244af4d62f8653a63ca30bd00c">https://github.com/hashicorp/consul/commit/d9206fc7e284a9244af4d62f8653a63ca30bd00c</a></li>
<li><a href="https://github.com/advisories/GHSA-5c4w-8hhh-3c3h">https://github.com/advisories/GHSA-5c4w-8hhh-3c3h</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-5c4w-8hhh-3c3h</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-10-31T00:30:36.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/hashicorp/consul] Hashicorp Consul Path Traversal vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-chgm-7r52-whjj</id>
        <link href="https://github.com/advisories/GHSA-chgm-7r52-whjj"/>
        <updated>2024-10-31T14:49:28.000Z</updated>
        <content type="html"><![CDATA[<p>A vulnerability was identified in Consul and Consul Enterprise ("Consul") such that using URL paths in L7 traffic intentions could bypass HTTP request path-based access rules.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-10005">https://nvd.nist.gov/vuln/detail/CVE-2024-10005</a></li>
<li><a href="https://discuss.hashicorp.com/t/hcsec-2024-22-consul-l7-intentions-vulnerable-to-url-path-bypass">https://discuss.hashicorp.com/t/hcsec-2024-22-consul-l7-intentions-vulnerable-to-url-path-bypass</a></li>
<li><a href="https://github.com/hashicorp/consul/pull/21816">https://github.com/hashicorp/consul/pull/21816</a></li>
<li><a href="https://github.com/hashicorp/consul/commit/d9206fc7e284a9244af4d62f8653a63ca30bd00c">https://github.com/hashicorp/consul/commit/d9206fc7e284a9244af4d62f8653a63ca30bd00c</a></li>
<li><a href="https://github.com/advisories/GHSA-chgm-7r52-whjj">https://github.com/advisories/GHSA-chgm-7r52-whjj</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-chgm-7r52-whjj</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-10-31T00:30:36.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/grafana/grafana] Grafana org admin can delete pending invites in different org]]></title>
        <id>https://github.com/advisories/GHSA-66c4-2g2v-54qw</id>
        <link href="https://github.com/advisories/GHSA-66c4-2g2v-54qw"/>
        <updated>2024-10-29T20:29:54.000Z</updated>
        <content type="html"><![CDATA[<p>Organization admins can delete pending invites created in an organization they are not part of.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-10452">https://nvd.nist.gov/vuln/detail/CVE-2024-10452</a></li>
<li><a href="https://grafana.com/security/security-advisories/cve-2024-10452">https://grafana.com/security/security-advisories/cve-2024-10452</a></li>
<li><a href="https://www.cve.org/CVERecord?id=CVE-2024-10452">https://www.cve.org/CVERecord?id=CVE-2024-10452</a></li>
<li><a href="https://github.com/advisories/GHSA-66c4-2g2v-54qw">https://github.com/advisories/GHSA-66c4-2g2v-54qw</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-66c4-2g2v-54qw</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2024-10-29T18:30:36.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/NVIDIA/nvidia-container-toolkit] NVIDIA Container Toolkit allows specially crafted container image to create empty files on the host file system]]></title>
        <id>https://github.com/advisories/GHSA-f748-7hpg-88ch</id>
        <link href="https://github.com/advisories/GHSA-f748-7hpg-88ch"/>
        <updated>2024-10-29T19:52:42.000Z</updated>
        <content type="html"><![CDATA[<p>NVIDIA Container Toolkit 1.16.1 or earlier contains a vulnerability in the default mode of operation allowing a specially crafted container image to create empty files on the host file system. This does not impact use cases where CDI is used. A successful exploit of this vulnerability may lead to data tampering.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/NVIDIA/libnvidia-container/security/advisories/GHSA-xff4-h7r9-vrpf">https://github.com/NVIDIA/libnvidia-container/security/advisories/GHSA-xff4-h7r9-vrpf</a></li>
<li><a href="https://github.com/NVIDIA/nvidia-container-toolkit/security/advisories/GHSA-f748-7hpg-88ch">https://github.com/NVIDIA/nvidia-container-toolkit/security/advisories/GHSA-f748-7hpg-88ch</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-0133">https://nvd.nist.gov/vuln/detail/CVE-2024-0133</a></li>
<li><a href="https://advisory-inbox.githubapp.com/advisory_reviews/GHSA-wqq7-v22c-gpfp">https://advisory-inbox.githubapp.com/advisory_reviews/GHSA-wqq7-v22c-gpfp</a></li>
<li><a href="https://nvidia.custhelp.com/app/answers/detail/a_id/5582">https://nvidia.custhelp.com/app/answers/detail/a_id/5582</a></li>
<li><a href="https://github.com/advisories/GHSA-f748-7hpg-88ch">https://github.com/advisories/GHSA-f748-7hpg-88ch</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-f748-7hpg-88ch</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-10-29T19:52:41.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/NVIDIA/nvidia-container-toolkit] Duplicate Advisory: NVIDIA Container Toolkit allows specially crafted container image to create empty files on the host file system]]></title>
        <id>https://github.com/advisories/GHSA-g4pj-mx9f-m2mh</id>
        <link href="https://github.com/advisories/GHSA-g4pj-mx9f-m2mh"/>
        <updated>2024-10-29T19:52:31.000Z</updated>
        <content type="html"><![CDATA[<h2 id="duplicate-advisory">Duplicate Advisory</h2>
<p>This advisory has been withdrawn because it is a duplicate of GHSA-f748-7hpg-88ch. This link is maintained to preserve external references.</p>
<h2 id="original-description">Original Description</h2>
<p>NVIDIA Container Toolkit 1.16.1 or earlier contains a vulnerability in the default mode of operation allowing a specially crafted container image to create empty files on the host file system. This does not impact use cases where CDI is used. A successful exploit of this vulnerability may lead to data tampering.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-0133">https://nvd.nist.gov/vuln/detail/CVE-2024-0133</a></li>
<li><a href="https://nvidia.custhelp.com/app/answers/detail/a_id/5582">https://nvidia.custhelp.com/app/answers/detail/a_id/5582</a></li>
<li><a href="https://github.com/advisories/GHSA-g4pj-mx9f-m2mh">https://github.com/advisories/GHSA-g4pj-mx9f-m2mh</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-g4pj-mx9f-m2mh</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-09-26T06:30:48.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/NVIDIA/nvidia-container-toolkit] NVIDIA Container Toolkit contains a Time-of-check Time-of-Use (TOCTOU) vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-mjjw-553x-87pq</id>
        <link href="https://github.com/advisories/GHSA-mjjw-553x-87pq"/>
        <updated>2024-10-29T19:48:12.000Z</updated>
        <content type="html"><![CDATA[<p>NVIDIA Container Toolkit 1.16.1 or earlier contains a Time-of-check Time-of-Use (TOCTOU) vulnerability when used with default configuration where a specifically crafted container image may gain access to the host file system. This does not impact use cases where CDI is used. A successful exploit of this vulnerability may lead to code execution, denial of service, escalation of privileges, information disclosure, and data tampering.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/NVIDIA/gpu-operator/security/advisories/GHSA-95rf-r6p4-44h7">https://github.com/NVIDIA/gpu-operator/security/advisories/GHSA-95rf-r6p4-44h7</a></li>
<li><a href="https://github.com/NVIDIA/libnvidia-container/security/advisories/GHSA-q2v4-jw5g-9xxj">https://github.com/NVIDIA/libnvidia-container/security/advisories/GHSA-q2v4-jw5g-9xxj</a></li>
<li><a href="https://github.com/NVIDIA/nvidia-container-toolkit/security/advisories/GHSA-mjjw-553x-87pq">https://github.com/NVIDIA/nvidia-container-toolkit/security/advisories/GHSA-mjjw-553x-87pq</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-0132">https://nvd.nist.gov/vuln/detail/CVE-2024-0132</a></li>
<li><a href="https://nvidia.custhelp.com/app/answers/detail/a_id/5582">https://nvidia.custhelp.com/app/answers/detail/a_id/5582</a></li>
<li><a href="https://github.com/advisories/GHSA-mjjw-553x-87pq">https://github.com/advisories/GHSA-mjjw-553x-87pq</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-mjjw-553x-87pq</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2024-10-29T19:48:11.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/NVIDIA/nvidia-container-toolkit] Duplicate Advisory: NVIDIA Container Toolkit contains a Time-of-check Time-of-Use (TOCTOU) vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-536j-xxhg-6pgg</id>
        <link href="https://github.com/advisories/GHSA-536j-xxhg-6pgg"/>
        <updated>2024-10-29T19:48:00.000Z</updated>
        <content type="html"><![CDATA[<h2 id="duplicate-advisory">Duplicate Advisory</h2>
<p>This advisory has been withdrawn because it is a duplicate of GHSA-mjjw-553x-87pq. This link is maintained to preserve external references.</p>
<h2 id="original-description">Original Description</h2>
<p>NVIDIA Container Toolkit 1.16.1 or earlier contains a Time-of-check Time-of-Use (TOCTOU) vulnerability when used with default configuration where a specifically crafted container image may gain access to the host file system. This does not impact use cases where CDI is used. A successful exploit of this vulnerability may lead to code execution, denial of service, escalation of privileges, information disclosure, and data tampering.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-0132">https://nvd.nist.gov/vuln/detail/CVE-2024-0132</a></li>
<li><a href="https://nvidia.custhelp.com/app/answers/detail/a_id/5582">https://nvidia.custhelp.com/app/answers/detail/a_id/5582</a></li>
<li><a href="https://github.com/advisories/GHSA-536j-xxhg-6pgg">https://github.com/advisories/GHSA-536j-xxhg-6pgg</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-536j-xxhg-6pgg</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2024-09-26T06:30:48.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/mattermost/mattermost/server/v8] Mattermost Server vulnerable to application crash from attacker-generated large response]]></title>
        <id>https://github.com/advisories/GHSA-762v-rq7q-ff97</id>
        <link href="https://github.com/advisories/GHSA-762v-rq7q-ff97"/>
        <updated>2024-10-29T16:13:16.000Z</updated>
        <content type="html"><![CDATA[<p>Mattermost versions 9.10.x &lt;= 9.10.2, 9.11.x &lt;= 9.11.1 and 9.5.x &lt;= 9.5.9 fail to&nbsp;prevent detailed error messages from being displayed&nbsp;in Playbooks which allows an attacker to generate a large response and cause an amplified GraphQL response which in turn could cause the application to crash by sending a specially crafted request to Playbooks.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-47401">https://nvd.nist.gov/vuln/detail/CVE-2024-47401</a></li>
<li><a href="https://mattermost.com/security-updates">https://mattermost.com/security-updates</a></li>
<li><a href="https://github.com/advisories/GHSA-762v-rq7q-ff97">https://github.com/advisories/GHSA-762v-rq7q-ff97</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-762v-rq7q-ff97</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-10-29T09:30:51.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/mattermost/mattermost/server/v8] Mattermost server allows authenticated user to delete arbitrary post]]></title>
        <id>https://github.com/advisories/GHSA-g376-m3h3-mj4r</id>
        <link href="https://github.com/advisories/GHSA-g376-m3h3-mj4r"/>
        <updated>2024-10-29T16:13:14.000Z</updated>
        <content type="html"><![CDATA[<p>Mattermost versions 9.10.x &lt;= 9.10.2, 9.11.x &lt;= 9.11.1, 9.5.x &lt;= 9.5.9 fail to&nbsp;check that the origin of the message in an integration action matches with the original post metadata&nbsp;which allows an authenticated user to delete an arbitrary post.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-50052">https://nvd.nist.gov/vuln/detail/CVE-2024-50052</a></li>
<li><a href="https://mattermost.com/security-updates">https://mattermost.com/security-updates</a></li>
<li><a href="https://github.com/advisories/GHSA-g376-m3h3-mj4r">https://github.com/advisories/GHSA-g376-m3h3-mj4r</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-g376-m3h3-mj4r</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-10-29T09:30:51.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/mattermost/mattermost/server/v8] Mattermost Server Path Traversal vulnerability that leads to Cross-Site Request Forgery]]></title>
        <id>https://github.com/advisories/GHSA-762g-9p7f-mrww</id>
        <link href="https://github.com/advisories/GHSA-762g-9p7f-mrww"/>
        <updated>2024-10-29T16:13:08.000Z</updated>
        <content type="html"><![CDATA[<p>Mattermost versions 9.10.x &lt;= 9.10.2, 9.11.x &lt;= 9.11.1, 9.5.x &lt;= 9.5.9 fail to sanitize user inputs in the frontend that are used for redirection which allows for a one-click client-side path traversal that is leading to CSRF in Playbooks</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-46872">https://nvd.nist.gov/vuln/detail/CVE-2024-46872</a></li>
<li><a href="https://mattermost.com/security-updates">https://mattermost.com/security-updates</a></li>
<li><a href="https://github.com/advisories/GHSA-762g-9p7f-mrww">https://github.com/advisories/GHSA-762g-9p7f-mrww</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-762g-9p7f-mrww</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-10-29T09:30:51.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/mattermost/mattermost/server/v8] Mattermost Server allows user to get private channel names]]></title>
        <id>https://github.com/advisories/GHSA-6mvp-gh77-7vwh</id>
        <link href="https://github.com/advisories/GHSA-6mvp-gh77-7vwh"/>
        <updated>2024-10-29T16:06:29.000Z</updated>
        <content type="html"><![CDATA[<p>Mattermost versions 9.5.x &lt;= 9.5.9 fail to properly filter the channel data when ElasticSearch is enabled which allows a user to get&nbsp;private channel names by using cmd+K/ctrl+K.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-10241">https://nvd.nist.gov/vuln/detail/CVE-2024-10241</a></li>
<li><a href="https://mattermost.com/security-updates">https://mattermost.com/security-updates</a></li>
<li><a href="https://github.com/advisories/GHSA-6mvp-gh77-7vwh">https://github.com/advisories/GHSA-6mvp-gh77-7vwh</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-6mvp-gh77-7vwh</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-10-29T09:30:51.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/kyverno/kyverno] Kyverno's PolicyException objects can be created in any namespace by default]]></title>
        <id>https://github.com/advisories/GHSA-qjvc-p88j-j9rm</id>
        <link href="https://github.com/advisories/GHSA-qjvc-p88j-j9rm"/>
        <updated>2024-10-29T20:00:13.000Z</updated>
        <content type="html"><![CDATA[<h3 id="summary">Summary</h3>
<p>A kyverno ClusterPolicy, ie. "disallow-privileged-containers," can be overridden by the creation of a PolicyException in a random namespace.</p>
<h3 id="details">Details</h3>
<p>By design, PolicyExceptions are consumed from any namespace. Administrators may not recognize that this allows users with privileges to non-kyverno namespaces to create exceptions.</p>
<h3 id="poc">PoC</h3>
<ol>
<li>Administrator creates "disallow-privileged-containers" ClusterPolicy that applies to resources in the namespace "ubuntu-restricted"</li>
<li>Cluster user creates a PolicyException object for "disallow-privileged-containers" in namespace "ubuntu-restricted"</li>
<li>Cluster user creates a pod with a privileged container in "ubuntu-restricted" </li>
<li>Cluster user escalates to root on the node from the privileged container</li>
</ol>
<h3 id="impact">Impact</h3>
<p>Administrators attempting to enforce cluster security through kyverno policies, but that allow less privileged users to create resources</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/kyverno/kyverno/security/advisories/GHSA-qjvc-p88j-j9rm">https://github.com/kyverno/kyverno/security/advisories/GHSA-qjvc-p88j-j9rm</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-48921">https://nvd.nist.gov/vuln/detail/CVE-2024-48921</a></li>
<li><a href="https://github.com/advisories/GHSA-qjvc-p88j-j9rm">https://github.com/advisories/GHSA-qjvc-p88j-j9rm</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-qjvc-p88j-j9rm</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-10-29T14:44:36.000Z</published>
    </entry>
</feed>