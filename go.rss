<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://azu.github.io/github-advisory-database-rss/go.rss</id>
    <title>Security Advisory for Go modules</title>
    <updated>2025-01-22T06:01:35.801Z</updated>
    <generator>github-advisory-database-rss</generator>
    <link rel="alternate" href="https://github.com/advisories?query=type%3Areviewed+ecosystem%3Ago"/>
    <subtitle>Security Advisory for Go modules on GitHub</subtitle>
    <rights>github-advisory-database-rss</rights>
    <category term="CRITICAL"/>
    <category term="HIGH"/>
    <category term="MODERATE"/>
    <category term="LOW"/>
    <entry>
        <title type="html"><![CDATA[[github.com/submariner-io/submariner-operator] Submariner Operator sets unnecessary RBAC permissions]]></title>
        <id>https://github.com/advisories/GHSA-2rhx-qhxp-5jpw</id>
        <link href="https://github.com/advisories/GHSA-2rhx-qhxp-5jpw"/>
        <updated>2025-01-21T21:38:10.000Z</updated>
        <content type="html"><![CDATA[<p>A flaw was found in the Submariner project. Due to unnecessary role-based access control permissions, a privileged attacker can run a malicious container on a node that may allow them to steal service account tokens and further compromise other nodes and potentially the entire cluster.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-5042">https://nvd.nist.gov/vuln/detail/CVE-2024-5042</a></li>
<li><a href="https://access.redhat.com/security/cve/CVE-2024-5042">https://access.redhat.com/security/cve/CVE-2024-5042</a></li>
<li><a href="https://bugzilla.redhat.com/show_bug.cgi?id=2280921">https://bugzilla.redhat.com/show_bug.cgi?id=2280921</a></li>
<li><a href="https://github.com/submariner-io/submariner-operator/issues/3041">https://github.com/submariner-io/submariner-operator/issues/3041</a></li>
<li><a href="https://github.com/submariner-io/submariner-operator/pull/3040">https://github.com/submariner-io/submariner-operator/pull/3040</a></li>
<li><a href="https://github.com/submariner-io/submariner-operator/commit/b27a04c4270e53cbff6ff8ac6245db10c204bcab">https://github.com/submariner-io/submariner-operator/commit/b27a04c4270e53cbff6ff8ac6245db10c204bcab</a></li>
<li><a href="https://access.redhat.com/errata/RHSA-2024:4591">https://access.redhat.com/errata/RHSA-2024:4591</a></li>
<li><a href="https://github.com/submariner-io/submariner-operator/pull/3045">https://github.com/submariner-io/submariner-operator/pull/3045</a></li>
<li><a href="https://github.com/submariner-io/submariner-operator/pull/3046">https://github.com/submariner-io/submariner-operator/pull/3046</a></li>
<li><a href="https://github.com/submariner-io/submariner-operator/pull/3049">https://github.com/submariner-io/submariner-operator/pull/3049</a></li>
<li><a href="https://github.com/advisories/GHSA-2rhx-qhxp-5jpw">https://github.com/advisories/GHSA-2rhx-qhxp-5jpw</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-2rhx-qhxp-5jpw</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-05-17T15:31:10.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/submariner-io/submariner-operator] Submariner Operator sets unnecessary RBAC permissions]]></title>
        <id>https://github.com/advisories/GHSA-2rhx-qhxp-5jpw</id>
        <link href="https://github.com/advisories/GHSA-2rhx-qhxp-5jpw"/>
        <updated>2025-01-21T21:38:10.000Z</updated>
        <content type="html"><![CDATA[<p>A flaw was found in the Submariner project. Due to unnecessary role-based access control permissions, a privileged attacker can run a malicious container on a node that may allow them to steal service account tokens and further compromise other nodes and potentially the entire cluster.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-5042">https://nvd.nist.gov/vuln/detail/CVE-2024-5042</a></li>
<li><a href="https://access.redhat.com/security/cve/CVE-2024-5042">https://access.redhat.com/security/cve/CVE-2024-5042</a></li>
<li><a href="https://bugzilla.redhat.com/show_bug.cgi?id=2280921">https://bugzilla.redhat.com/show_bug.cgi?id=2280921</a></li>
<li><a href="https://github.com/submariner-io/submariner-operator/issues/3041">https://github.com/submariner-io/submariner-operator/issues/3041</a></li>
<li><a href="https://github.com/submariner-io/submariner-operator/pull/3040">https://github.com/submariner-io/submariner-operator/pull/3040</a></li>
<li><a href="https://github.com/submariner-io/submariner-operator/commit/b27a04c4270e53cbff6ff8ac6245db10c204bcab">https://github.com/submariner-io/submariner-operator/commit/b27a04c4270e53cbff6ff8ac6245db10c204bcab</a></li>
<li><a href="https://access.redhat.com/errata/RHSA-2024:4591">https://access.redhat.com/errata/RHSA-2024:4591</a></li>
<li><a href="https://github.com/submariner-io/submariner-operator/pull/3045">https://github.com/submariner-io/submariner-operator/pull/3045</a></li>
<li><a href="https://github.com/submariner-io/submariner-operator/pull/3046">https://github.com/submariner-io/submariner-operator/pull/3046</a></li>
<li><a href="https://github.com/submariner-io/submariner-operator/pull/3049">https://github.com/submariner-io/submariner-operator/pull/3049</a></li>
<li><a href="https://github.com/advisories/GHSA-2rhx-qhxp-5jpw">https://github.com/advisories/GHSA-2rhx-qhxp-5jpw</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-2rhx-qhxp-5jpw</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-05-17T15:31:10.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/submariner-io/submariner-operator] Submariner Operator sets unnecessary RBAC permissions]]></title>
        <id>https://github.com/advisories/GHSA-2rhx-qhxp-5jpw</id>
        <link href="https://github.com/advisories/GHSA-2rhx-qhxp-5jpw"/>
        <updated>2025-01-21T21:38:10.000Z</updated>
        <content type="html"><![CDATA[<p>A flaw was found in the Submariner project. Due to unnecessary role-based access control permissions, a privileged attacker can run a malicious container on a node that may allow them to steal service account tokens and further compromise other nodes and potentially the entire cluster.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-5042">https://nvd.nist.gov/vuln/detail/CVE-2024-5042</a></li>
<li><a href="https://access.redhat.com/security/cve/CVE-2024-5042">https://access.redhat.com/security/cve/CVE-2024-5042</a></li>
<li><a href="https://bugzilla.redhat.com/show_bug.cgi?id=2280921">https://bugzilla.redhat.com/show_bug.cgi?id=2280921</a></li>
<li><a href="https://github.com/submariner-io/submariner-operator/issues/3041">https://github.com/submariner-io/submariner-operator/issues/3041</a></li>
<li><a href="https://github.com/submariner-io/submariner-operator/pull/3040">https://github.com/submariner-io/submariner-operator/pull/3040</a></li>
<li><a href="https://github.com/submariner-io/submariner-operator/commit/b27a04c4270e53cbff6ff8ac6245db10c204bcab">https://github.com/submariner-io/submariner-operator/commit/b27a04c4270e53cbff6ff8ac6245db10c204bcab</a></li>
<li><a href="https://access.redhat.com/errata/RHSA-2024:4591">https://access.redhat.com/errata/RHSA-2024:4591</a></li>
<li><a href="https://github.com/submariner-io/submariner-operator/pull/3045">https://github.com/submariner-io/submariner-operator/pull/3045</a></li>
<li><a href="https://github.com/submariner-io/submariner-operator/pull/3046">https://github.com/submariner-io/submariner-operator/pull/3046</a></li>
<li><a href="https://github.com/submariner-io/submariner-operator/pull/3049">https://github.com/submariner-io/submariner-operator/pull/3049</a></li>
<li><a href="https://github.com/advisories/GHSA-2rhx-qhxp-5jpw">https://github.com/advisories/GHSA-2rhx-qhxp-5jpw</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-2rhx-qhxp-5jpw</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-05-17T15:31:10.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/submariner-io/submariner-operator] Submariner Operator sets unnecessary RBAC permissions]]></title>
        <id>https://github.com/advisories/GHSA-2rhx-qhxp-5jpw</id>
        <link href="https://github.com/advisories/GHSA-2rhx-qhxp-5jpw"/>
        <updated>2025-01-21T21:38:10.000Z</updated>
        <content type="html"><![CDATA[<p>A flaw was found in the Submariner project. Due to unnecessary role-based access control permissions, a privileged attacker can run a malicious container on a node that may allow them to steal service account tokens and further compromise other nodes and potentially the entire cluster.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-5042">https://nvd.nist.gov/vuln/detail/CVE-2024-5042</a></li>
<li><a href="https://access.redhat.com/security/cve/CVE-2024-5042">https://access.redhat.com/security/cve/CVE-2024-5042</a></li>
<li><a href="https://bugzilla.redhat.com/show_bug.cgi?id=2280921">https://bugzilla.redhat.com/show_bug.cgi?id=2280921</a></li>
<li><a href="https://github.com/submariner-io/submariner-operator/issues/3041">https://github.com/submariner-io/submariner-operator/issues/3041</a></li>
<li><a href="https://github.com/submariner-io/submariner-operator/pull/3040">https://github.com/submariner-io/submariner-operator/pull/3040</a></li>
<li><a href="https://github.com/submariner-io/submariner-operator/commit/b27a04c4270e53cbff6ff8ac6245db10c204bcab">https://github.com/submariner-io/submariner-operator/commit/b27a04c4270e53cbff6ff8ac6245db10c204bcab</a></li>
<li><a href="https://access.redhat.com/errata/RHSA-2024:4591">https://access.redhat.com/errata/RHSA-2024:4591</a></li>
<li><a href="https://github.com/submariner-io/submariner-operator/pull/3045">https://github.com/submariner-io/submariner-operator/pull/3045</a></li>
<li><a href="https://github.com/submariner-io/submariner-operator/pull/3046">https://github.com/submariner-io/submariner-operator/pull/3046</a></li>
<li><a href="https://github.com/submariner-io/submariner-operator/pull/3049">https://github.com/submariner-io/submariner-operator/pull/3049</a></li>
<li><a href="https://github.com/advisories/GHSA-2rhx-qhxp-5jpw">https://github.com/advisories/GHSA-2rhx-qhxp-5jpw</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-2rhx-qhxp-5jpw</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-05-17T15:31:10.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/containers/buildah] Buildah allows build breakout using malicious Containerfiles and concurrent builds]]></title>
        <id>https://github.com/advisories/GHSA-5vpc-35f4-r8w6</id>
        <link href="https://github.com/advisories/GHSA-5vpc-35f4-r8w6"/>
        <updated>2025-01-21T21:22:50.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>With careful use of the <code>--mount</code> flag in RUN instructions in Containerfiles, and by using either multi-stage builds with use of concurrently-executing build stages (e.g., using the <code>--jobs</code> CLI flag) or multiple separate but concurrently-executing builds, a malicious Containerfile can be used to expose content from the build host to the command being run using the RUN instruction.  This can be used to read or write contents using the privileges of the process which is performing the build.  When that process is a root-owned podman system service which is provided for use by unprivileged users, this includes the ability to read and write contents which the client should not be allowed to read and write, including setuid executables in locations where they can be later accessed by unprivileged users.</p>
<h3 id="patches">Patches</h3>
<p>Patches have been merged to the main branch, and will be added to upcoming releases on the release-1.38, release-1.37, release-1.35, and release-1.33 branches.</p>
<p>This addressed a number of Jira cards, but primarily <a href="https://issues.redhat.com/browse/RHEL-67616">https://issues.redhat.com/browse/RHEL-67616</a> and <a href="https://issues.redhat.com/browse/RHEL-67618">https://issues.redhat.com/browse/RHEL-67618</a>, which were then vendored into Podman and backported into olde rbranches.</p>
<h3 id="workarounds">Workarounds</h3>
<p>Mandatory access controls should limit the access of the process performing the build, on systems where they are enabled.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/containers/buildah/security/advisories/GHSA-5vpc-35f4-r8w6">https://github.com/containers/buildah/security/advisories/GHSA-5vpc-35f4-r8w6</a></li>
<li><a href="https://issues.redhat.com/browse/RHEL-67616">https://issues.redhat.com/browse/RHEL-67616</a></li>
<li><a href="https://issues.redhat.com/browse/RHEL-67618">https://issues.redhat.com/browse/RHEL-67618</a></li>
<li><a href="https://github.com/advisories/GHSA-5vpc-35f4-r8w6">https://github.com/advisories/GHSA-5vpc-35f4-r8w6</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-5vpc-35f4-r8w6</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2025-01-21T21:22:49.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/containers/buildah] Buildah allows build breakout using malicious Containerfiles and concurrent builds]]></title>
        <id>https://github.com/advisories/GHSA-5vpc-35f4-r8w6</id>
        <link href="https://github.com/advisories/GHSA-5vpc-35f4-r8w6"/>
        <updated>2025-01-21T21:22:50.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>With careful use of the <code>--mount</code> flag in RUN instructions in Containerfiles, and by using either multi-stage builds with use of concurrently-executing build stages (e.g., using the <code>--jobs</code> CLI flag) or multiple separate but concurrently-executing builds, a malicious Containerfile can be used to expose content from the build host to the command being run using the RUN instruction.  This can be used to read or write contents using the privileges of the process which is performing the build.  When that process is a root-owned podman system service which is provided for use by unprivileged users, this includes the ability to read and write contents which the client should not be allowed to read and write, including setuid executables in locations where they can be later accessed by unprivileged users.</p>
<h3 id="patches">Patches</h3>
<p>Patches have been merged to the main branch, and will be added to upcoming releases on the release-1.38, release-1.37, release-1.35, and release-1.33 branches.</p>
<p>This addressed a number of Jira cards, but primarily <a href="https://issues.redhat.com/browse/RHEL-67616">https://issues.redhat.com/browse/RHEL-67616</a> and <a href="https://issues.redhat.com/browse/RHEL-67618">https://issues.redhat.com/browse/RHEL-67618</a>, which were then vendored into Podman and backported into olde rbranches.</p>
<h3 id="workarounds">Workarounds</h3>
<p>Mandatory access controls should limit the access of the process performing the build, on systems where they are enabled.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/containers/buildah/security/advisories/GHSA-5vpc-35f4-r8w6">https://github.com/containers/buildah/security/advisories/GHSA-5vpc-35f4-r8w6</a></li>
<li><a href="https://issues.redhat.com/browse/RHEL-67616">https://issues.redhat.com/browse/RHEL-67616</a></li>
<li><a href="https://issues.redhat.com/browse/RHEL-67618">https://issues.redhat.com/browse/RHEL-67618</a></li>
<li><a href="https://github.com/advisories/GHSA-5vpc-35f4-r8w6">https://github.com/advisories/GHSA-5vpc-35f4-r8w6</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-5vpc-35f4-r8w6</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2025-01-21T21:22:49.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/containers/buildah] Buildah allows build breakout using malicious Containerfiles and concurrent builds]]></title>
        <id>https://github.com/advisories/GHSA-5vpc-35f4-r8w6</id>
        <link href="https://github.com/advisories/GHSA-5vpc-35f4-r8w6"/>
        <updated>2025-01-21T21:22:50.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>With careful use of the <code>--mount</code> flag in RUN instructions in Containerfiles, and by using either multi-stage builds with use of concurrently-executing build stages (e.g., using the <code>--jobs</code> CLI flag) or multiple separate but concurrently-executing builds, a malicious Containerfile can be used to expose content from the build host to the command being run using the RUN instruction.  This can be used to read or write contents using the privileges of the process which is performing the build.  When that process is a root-owned podman system service which is provided for use by unprivileged users, this includes the ability to read and write contents which the client should not be allowed to read and write, including setuid executables in locations where they can be later accessed by unprivileged users.</p>
<h3 id="patches">Patches</h3>
<p>Patches have been merged to the main branch, and will be added to upcoming releases on the release-1.38, release-1.37, release-1.35, and release-1.33 branches.</p>
<p>This addressed a number of Jira cards, but primarily <a href="https://issues.redhat.com/browse/RHEL-67616">https://issues.redhat.com/browse/RHEL-67616</a> and <a href="https://issues.redhat.com/browse/RHEL-67618">https://issues.redhat.com/browse/RHEL-67618</a>, which were then vendored into Podman and backported into olde rbranches.</p>
<h3 id="workarounds">Workarounds</h3>
<p>Mandatory access controls should limit the access of the process performing the build, on systems where they are enabled.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/containers/buildah/security/advisories/GHSA-5vpc-35f4-r8w6">https://github.com/containers/buildah/security/advisories/GHSA-5vpc-35f4-r8w6</a></li>
<li><a href="https://issues.redhat.com/browse/RHEL-67616">https://issues.redhat.com/browse/RHEL-67616</a></li>
<li><a href="https://issues.redhat.com/browse/RHEL-67618">https://issues.redhat.com/browse/RHEL-67618</a></li>
<li><a href="https://github.com/advisories/GHSA-5vpc-35f4-r8w6">https://github.com/advisories/GHSA-5vpc-35f4-r8w6</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-5vpc-35f4-r8w6</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2025-01-21T21:22:49.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/containers/buildah] Buildah allows build breakout using malicious Containerfiles and concurrent builds]]></title>
        <id>https://github.com/advisories/GHSA-5vpc-35f4-r8w6</id>
        <link href="https://github.com/advisories/GHSA-5vpc-35f4-r8w6"/>
        <updated>2025-01-21T21:22:50.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>With careful use of the <code>--mount</code> flag in RUN instructions in Containerfiles, and by using either multi-stage builds with use of concurrently-executing build stages (e.g., using the <code>--jobs</code> CLI flag) or multiple separate but concurrently-executing builds, a malicious Containerfile can be used to expose content from the build host to the command being run using the RUN instruction.  This can be used to read or write contents using the privileges of the process which is performing the build.  When that process is a root-owned podman system service which is provided for use by unprivileged users, this includes the ability to read and write contents which the client should not be allowed to read and write, including setuid executables in locations where they can be later accessed by unprivileged users.</p>
<h3 id="patches">Patches</h3>
<p>Patches have been merged to the main branch, and will be added to upcoming releases on the release-1.38, release-1.37, release-1.35, and release-1.33 branches.</p>
<p>This addressed a number of Jira cards, but primarily <a href="https://issues.redhat.com/browse/RHEL-67616">https://issues.redhat.com/browse/RHEL-67616</a> and <a href="https://issues.redhat.com/browse/RHEL-67618">https://issues.redhat.com/browse/RHEL-67618</a>, which were then vendored into Podman and backported into olde rbranches.</p>
<h3 id="workarounds">Workarounds</h3>
<p>Mandatory access controls should limit the access of the process performing the build, on systems where they are enabled.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/containers/buildah/security/advisories/GHSA-5vpc-35f4-r8w6">https://github.com/containers/buildah/security/advisories/GHSA-5vpc-35f4-r8w6</a></li>
<li><a href="https://issues.redhat.com/browse/RHEL-67616">https://issues.redhat.com/browse/RHEL-67616</a></li>
<li><a href="https://issues.redhat.com/browse/RHEL-67618">https://issues.redhat.com/browse/RHEL-67618</a></li>
<li><a href="https://github.com/advisories/GHSA-5vpc-35f4-r8w6">https://github.com/advisories/GHSA-5vpc-35f4-r8w6</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-5vpc-35f4-r8w6</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2025-01-21T21:22:49.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/hashicorp/go-slug] HashiCorp go-slug Vulnerable to Zip Slip Attack]]></title>
        <id>https://github.com/advisories/GHSA-wpfp-cm49-9m9q</id>
        <link href="https://github.com/advisories/GHSA-wpfp-cm49-9m9q"/>
        <updated>2025-01-21T20:27:09.000Z</updated>
        <content type="html"><![CDATA[<h2 id="summary">Summary</h2>
<p>HashiCorp’s go-slug library is vulnerable to a zip-slip style attack when a non-existing user-provided path is extracted from the tar entry. This vulnerability, identified as CVE-2025-0377, is fixed in go-slug 0.16.3.</p>
<h2 id="background">Background</h2>
<p>HashiCorp’s go-slug shared library offers functions for packing and unpacking Terraform Enterprise compatible slugs. Slugs are gzip compressed tar files containing Terraform configuration files.</p>
<h2 id="details">Details</h2>
<p>When go-slug performs an extraction, the filename/extraction path is taken from the tar entry via the header.Name. It was discovered that the unpacking step improperly validated paths, potentially leading to path traversal, allowing an attacker to write an arbitrary file during extraction.</p>
<h2 id="remediation">Remediation</h2>
<p>Consumers of the go-slug shared library should evaluate the risk associated with this issue in the context of their go-slug usage and upgrade go-slug to 0.16.3 or later.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2025-0377">https://nvd.nist.gov/vuln/detail/CVE-2025-0377</a></li>
<li><a href="https://discuss.hashicorp.com/t/hcsec-2025-01-hashicorp-go-slug-vulnerable-to-zip-slip-attack">https://discuss.hashicorp.com/t/hcsec-2025-01-hashicorp-go-slug-vulnerable-to-zip-slip-attack</a></li>
<li><a href="https://github.com/advisories/GHSA-wpfp-cm49-9m9q">https://github.com/advisories/GHSA-wpfp-cm49-9m9q</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-wpfp-cm49-9m9q</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2025-01-21T18:31:07.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/compose-spec/compose-go/v2] Excessive Platform Resource Consumption within a Loop when unmarshalling Compose file having recursive loop]]></title>
        <id>https://github.com/advisories/GHSA-36gq-35j3-p9r9</id>
        <link href="https://github.com/advisories/GHSA-36gq-35j3-p9r9"/>
        <updated>2025-01-21T20:24:02.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>The <code>compose-go</code> library component in versions <code>v2.10-v2.4.0</code> allows an authorized user who sends malicious YAML payloads to cause the <code>compose-go</code> to consume excessive amount of Memory and CPU cycles while parsing YAML, such as used by Docker Compose from versions <code> v2.27.0</code> to <code>v2.29.7</code> included</p>
<h3 id="patches">Patches</h3>
<p>compose-go <code>v2.24.1</code> fixed the issue</p>
<h3 id="workarounds">Workarounds</h3>
<p>There isn't any known workaround.</p>
<h3 id="references">References</h3>
<ul>
<li><p><a href="https://github.com/docker/compose/issues/12235">https://github.com/docker/compose/issues/12235</a></p>
</li>
<li><p><a href="https://github.com/compose-spec/compose-go/pull/703">https://github.com/compose-spec/compose-go/pull/703</a></p>
</li>
<li><p><a href="https://github.com/compose-spec/compose-go/pull/618">https://github.com/compose-spec/compose-go/pull/618</a></p>
</li>
<li><p><a href="https://github.com/docker/compose/commit/d239f0f3187a2ed5404c61f83bd5e995c81600ff#diff-33ef32bf6c23acb95f5902d7097b7a1d5128ca061167ec0716715b0b9eeaa5f6R10">https://github.com/docker/compose/commit/d239f0f3187a2ed5404c61f83bd5e995c81600ff#diff-33ef32bf6c23acb95f5902d7097b7a1d5128ca061167ec0716715b0b9eeaa5f6R10</a></p>
</li>
</ul>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/compose-spec/compose-go/security/advisories/GHSA-36gq-35j3-p9r9">https://github.com/compose-spec/compose-go/security/advisories/GHSA-36gq-35j3-p9r9</a></li>
<li><a href="https://github.com/docker/compose/issues/12235">https://github.com/docker/compose/issues/12235</a></li>
<li><a href="https://github.com/compose-spec/compose-go/pull/618">https://github.com/compose-spec/compose-go/pull/618</a></li>
<li><a href="https://github.com/compose-spec/compose-go/pull/703">https://github.com/compose-spec/compose-go/pull/703</a></li>
<li><a href="https://github.com/docker/compose/commit/d239f0f3187a2ed5404c61f83bd5e995c81600ff#diff-33ef32bf6c23acb95f5902d7097b7a1d5128ca061167ec0716715b0b9eeaa5f6R10">https://github.com/docker/compose/commit/d239f0f3187a2ed5404c61f83bd5e995c81600ff#diff-33ef32bf6c23acb95f5902d7097b7a1d5128ca061167ec0716715b0b9eeaa5f6R10</a></li>
<li><a href="https://github.com/advisories/GHSA-36gq-35j3-p9r9">https://github.com/advisories/GHSA-36gq-35j3-p9r9</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-36gq-35j3-p9r9</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2025-01-21T20:24:02.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/writefreely/writefreely] Insecure default config access in WriteFreely]]></title>
        <id>https://github.com/advisories/GHSA-3qc3-mx6x-267h</id>
        <link href="https://github.com/advisories/GHSA-3qc3-mx6x-267h"/>
        <updated>2025-01-21T20:03:19.000Z</updated>
        <content type="html"><![CDATA[<p>WriteFreely through 0.15.1, when MySQL is used, allows local users to discover credentials by reading config.ini.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2025-24337">https://nvd.nist.gov/vuln/detail/CVE-2025-24337</a></li>
<li><a href="https://github.com/writefreely/writefreely/releases/tag/v0.15.1">https://github.com/writefreely/writefreely/releases/tag/v0.15.1</a></li>
<li><a href="https://raphus.social/@TV4Fun/113846757112643161">https://raphus.social/@TV4Fun/113846757112643161</a></li>
<li><a href="https://www.openwall.com/lists/oss-security/2025/01/18/1">https://www.openwall.com/lists/oss-security/2025/01/18/1</a></li>
<li><a href="https://github.com/advisories/GHSA-3qc3-mx6x-267h">https://github.com/advisories/GHSA-3qc3-mx6x-267h</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-3qc3-mx6x-267h</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2025-01-20T15:31:24.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/ubuntu/authd] PAM module may allow accessing with the credentials of another user]]></title>
        <id>https://github.com/advisories/GHSA-x5q3-c8rm-w787</id>
        <link href="https://github.com/advisories/GHSA-x5q3-c8rm-w787"/>
        <updated>2025-01-21T17:19:31.000Z</updated>
        <content type="html"><![CDATA[<p>Authd PAM module up to version 0.3.4 can allow broker-managed users to impersonate any other user managed by the same broker and perform any PAM operation with it, including authenticating as them.</p>
<p>This is possible using tools such as <code>su</code>, <code>sudo</code> or <code>ssh</code> (and potentially others) that, so far, do not ensure that the PAM user at the end of the transaction is matching the one who initiated the transaction.</p>
<p>Authd 0.3.5 fixes this by not allowing changing the user unless it was never set before in the PAM stack.</p>
<p><code>su</code> version that will include <a href="https://github.com/util-linux/util-linux/pull/3206">https://github.com/util-linux/util-linux/pull/3206</a> will not be affected
<code>ssh</code> version that will include <a href="https://github.com/openssh/openssh-portable/pull/521">https://github.com/openssh/openssh-portable/pull/521</a> will not be affected
<code>sudo</code> version that will include <a href="https://github.com/sudo-project/sudo/pull/412">https://github.com/sudo-project/sudo/pull/412</a> will not be affected
<code>login</code> not affected
<code>passwd</code> not affected</p>
<details>
<summary>Old report</summary>

<h3 id="summary">Summary</h3>
<p>An user can access as another user using its own credentials</p>
<h3 id="details">Details</h3>
<p>I feel we’ve a security issue that is due to the fact that we allow changing the user in the cases in which that’s already provided by PAM, I’ve not tested this using the entra-id broker but it’s reproducible with the example one, but unless I’m missing something it should be independent from the broker in use.</p>
<p>Basically, by going to the user selection page we allow to login as any user by entering the use own credentials.</p>
<p>See for example: <a href="https://asciinema.org/a/VIcjpDImomaGu0wxsJJxNdmlf">https://asciinema.org/a/VIcjpDImomaGu0wxsJJxNdmlf</a> or <a href="https://asciinema.org/a/CV3D1gaEhn2yclqSMKCnifYPo">https://asciinema.org/a/CV3D1gaEhn2yclqSMKCnifYPo</a>  </p>
<p>Basically it’s possible to logging in as <code>user1</code> using the credentials of <code>user2</code> or <code>user3</code>.</p>
<p>The issue doesn’t affect login or passwd, but it does affect <code>su</code> and <code>sshd</code>, since in both cases they don’t check if the <code>PAM_USER</code> changed before the final authentication.</p>
<p>Now, while those tools should likely be fixed to only read the PAM_USER once pam gave them the final ok, I think authd should not allow changing the user at all when it has been provided by PAM.</p>
</details>
### References

<ul>
<li><a href="https://github.com/ubuntu/authd/security/advisories/GHSA-x5q3-c8rm-w787">https://github.com/ubuntu/authd/security/advisories/GHSA-x5q3-c8rm-w787</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-9313">https://nvd.nist.gov/vuln/detail/CVE-2024-9313</a></li>
<li><a href="https://github.com/ubuntu/authd/commit/63e527496b013bed46904c1c58be593c13ebdce5">https://github.com/ubuntu/authd/commit/63e527496b013bed46904c1c58be593c13ebdce5</a></li>
<li><a href="https://www.cve.org/CVERecord?id=CVE-2024-9313">https://www.cve.org/CVERecord?id=CVE-2024-9313</a></li>
<li><a href="https://pkg.go.dev/vuln/GO-2024-3181">https://pkg.go.dev/vuln/GO-2024-3181</a></li>
<li><a href="https://github.com/advisories/GHSA-x5q3-c8rm-w787">https://github.com/advisories/GHSA-x5q3-c8rm-w787</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-x5q3-c8rm-w787</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-10-03T16:53:07.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[zotregistry.dev/zot] Zot IdP group membership revocation ignored]]></title>
        <id>https://github.com/advisories/GHSA-c9p4-xwr9-rfhx</id>
        <link href="https://github.com/advisories/GHSA-c9p4-xwr9-rfhx"/>
        <updated>2025-01-21T18:31:05.000Z</updated>
        <content type="html"><![CDATA[<h3 id="summary">Summary</h3>
<p>The group data stored for users in the boltdb database (meta.db) is an append-list so group revocations/removals are ignored in the API.</p>
<h3 id="details">Details</h3>
<p><a href="https://github.com/project-zot/zot/blob/5e30fec65c49e3139907e2819ccb39b2e3bd784e/pkg/meta/boltdb/boltdb.go#L1665">SetUserGroups</a> is alled on login, but instead of replacing the group memberships, they are appended. This may be due to some conflict with the group definitions in the config file, but that wasn't obvious to me if it were the case.</p>
<h3 id="poc">PoC</h3>
<p>Login with group claims, logout, remove the user from a group from at IdP and log in again, the API still grants access and the new list of groups is appended creating meaningless duplicate entries and no longer mathing the expected groups from the IdP. The behavior can be verified by seeing the API or UI still presenting images it should not or by viewing the data directly:  <code>bbolt get meta.db UserData &lt;user&gt;</code>, eg:</p>
<p><img alt="image" src="https://github.com/user-attachments/assets/3491cbd2-c7d9-414d-bc33-3efc35ed0582"></p>
<p>Note this example also has duplicates due to group hierarchy changes that were left in the database.</p>
<h3 id="impact">Impact</h3>
<p>Any Zot configuration that relies on group-based authorization will not respect group remove/revocation by an IdP.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/project-zot/zot/security/advisories/GHSA-c9p4-xwr9-rfhx">https://github.com/project-zot/zot/security/advisories/GHSA-c9p4-xwr9-rfhx</a></li>
<li><a href="https://github.com/project-zot/zot/commit/002ac62d8a15bf0cba010b3ba7bde86f9837b613">https://github.com/project-zot/zot/commit/002ac62d8a15bf0cba010b3ba7bde86f9837b613</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2025-23208">https://nvd.nist.gov/vuln/detail/CVE-2025-23208</a></li>
<li><a href="https://github.com/project-zot/zot/blob/5e30fec65c49e3139907e2819ccb39b2e3bd784e/pkg/meta/boltdb/boltdb.go#L1665">https://github.com/project-zot/zot/blob/5e30fec65c49e3139907e2819ccb39b2e3bd784e/pkg/meta/boltdb/boltdb.go#L1665</a></li>
<li><a href="https://github.com/advisories/GHSA-c9p4-xwr9-rfhx">https://github.com/advisories/GHSA-c9p4-xwr9-rfhx</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-c9p4-xwr9-rfhx</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2025-01-17T22:02:26.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/mattermost/mattermost/server/v8] Mattermost webapp crash via a crafted post]]></title>
        <id>https://github.com/advisories/GHSA-w6xh-c82w-h997</id>
        <link href="https://github.com/advisories/GHSA-w6xh-c82w-h997"/>
        <updated>2025-01-16T23:09:10.000Z</updated>
        <content type="html"><![CDATA[<p>Mattermost versions 10.2.x &lt;= 10.2.0, 9.11.x &lt;= 9.11.5, 10.0.x &lt;= 10.0.3, 10.1.x &lt;= 10.1.3 fail to properly handle posts with attachments containing fields that cannot be cast to a String, which allows an attacker to cause the webapp to crash via creating and sending such a post to a channel.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2025-20621">https://nvd.nist.gov/vuln/detail/CVE-2025-20621</a></li>
<li><a href="https://mattermost.com/security-updates">https://mattermost.com/security-updates</a></li>
<li><a href="https://github.com/advisories/GHSA-w6xh-c82w-h997">https://github.com/advisories/GHSA-w6xh-c82w-h997</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-w6xh-c82w-h997</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2025-01-16T21:30:58.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/mattermost/mattermost/server/v8] Mattermost webapp crash via a crafted post]]></title>
        <id>https://github.com/advisories/GHSA-w6xh-c82w-h997</id>
        <link href="https://github.com/advisories/GHSA-w6xh-c82w-h997"/>
        <updated>2025-01-16T23:09:10.000Z</updated>
        <content type="html"><![CDATA[<p>Mattermost versions 10.2.x &lt;= 10.2.0, 9.11.x &lt;= 9.11.5, 10.0.x &lt;= 10.0.3, 10.1.x &lt;= 10.1.3 fail to properly handle posts with attachments containing fields that cannot be cast to a String, which allows an attacker to cause the webapp to crash via creating and sending such a post to a channel.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2025-20621">https://nvd.nist.gov/vuln/detail/CVE-2025-20621</a></li>
<li><a href="https://mattermost.com/security-updates">https://mattermost.com/security-updates</a></li>
<li><a href="https://github.com/advisories/GHSA-w6xh-c82w-h997">https://github.com/advisories/GHSA-w6xh-c82w-h997</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-w6xh-c82w-h997</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2025-01-16T21:30:58.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/mattermost/mattermost/server/v8] Mattermost webapp crash via a crafted post]]></title>
        <id>https://github.com/advisories/GHSA-w6xh-c82w-h997</id>
        <link href="https://github.com/advisories/GHSA-w6xh-c82w-h997"/>
        <updated>2025-01-16T23:09:10.000Z</updated>
        <content type="html"><![CDATA[<p>Mattermost versions 10.2.x &lt;= 10.2.0, 9.11.x &lt;= 9.11.5, 10.0.x &lt;= 10.0.3, 10.1.x &lt;= 10.1.3 fail to properly handle posts with attachments containing fields that cannot be cast to a String, which allows an attacker to cause the webapp to crash via creating and sending such a post to a channel.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2025-20621">https://nvd.nist.gov/vuln/detail/CVE-2025-20621</a></li>
<li><a href="https://mattermost.com/security-updates">https://mattermost.com/security-updates</a></li>
<li><a href="https://github.com/advisories/GHSA-w6xh-c82w-h997">https://github.com/advisories/GHSA-w6xh-c82w-h997</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-w6xh-c82w-h997</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2025-01-16T21:30:58.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/mattermost/mattermost/server/v8] Mattermost webapp crash via a crafted post]]></title>
        <id>https://github.com/advisories/GHSA-w6xh-c82w-h997</id>
        <link href="https://github.com/advisories/GHSA-w6xh-c82w-h997"/>
        <updated>2025-01-16T23:09:10.000Z</updated>
        <content type="html"><![CDATA[<p>Mattermost versions 10.2.x &lt;= 10.2.0, 9.11.x &lt;= 9.11.5, 10.0.x &lt;= 10.0.3, 10.1.x &lt;= 10.1.3 fail to properly handle posts with attachments containing fields that cannot be cast to a String, which allows an attacker to cause the webapp to crash via creating and sending such a post to a channel.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2025-20621">https://nvd.nist.gov/vuln/detail/CVE-2025-20621</a></li>
<li><a href="https://mattermost.com/security-updates">https://mattermost.com/security-updates</a></li>
<li><a href="https://github.com/advisories/GHSA-w6xh-c82w-h997">https://github.com/advisories/GHSA-w6xh-c82w-h997</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-w6xh-c82w-h997</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2025-01-16T21:30:58.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/mattermost/mattermost/server/v8] Mattermost webapp crash via a crafted post]]></title>
        <id>https://github.com/advisories/GHSA-w6xh-c82w-h997</id>
        <link href="https://github.com/advisories/GHSA-w6xh-c82w-h997"/>
        <updated>2025-01-16T23:09:10.000Z</updated>
        <content type="html"><![CDATA[<p>Mattermost versions 10.2.x &lt;= 10.2.0, 9.11.x &lt;= 9.11.5, 10.0.x &lt;= 10.0.3, 10.1.x &lt;= 10.1.3 fail to properly handle posts with attachments containing fields that cannot be cast to a String, which allows an attacker to cause the webapp to crash via creating and sending such a post to a channel.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2025-20621">https://nvd.nist.gov/vuln/detail/CVE-2025-20621</a></li>
<li><a href="https://mattermost.com/security-updates">https://mattermost.com/security-updates</a></li>
<li><a href="https://github.com/advisories/GHSA-w6xh-c82w-h997">https://github.com/advisories/GHSA-w6xh-c82w-h997</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-w6xh-c82w-h997</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2025-01-16T21:30:58.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/matrix-org/gomatrixserverlib] Gomatrixserverlib Server-Side Request Forgery (SSRF) on redirects and federation]]></title>
        <id>https://github.com/advisories/GHSA-4ff6-858j-r822</id>
        <link href="https://github.com/advisories/GHSA-4ff6-858j-r822"/>
        <updated>2025-01-17T15:41:23.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>Gomatrixserverlib is vulnerable to server-side request forgery, serving content from a private network it can access, under certain conditions.</p>
<h3 id="patches">Patches</h3>
<p>c4f1e01eab0dd435709ad15463ed38a079ad6128 fixes this issue.</p>
<h3 id="workarounds">Workarounds</h3>
<p>Use a local firewall to limit the network segments and hosts the service using gomatrixserverlib can access.</p>
<h3 id="references">References</h3>
<p>N/A</p>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/matrix-org/gomatrixserverlib/security/advisories/GHSA-4ff6-858j-r822">https://github.com/matrix-org/gomatrixserverlib/security/advisories/GHSA-4ff6-858j-r822</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-52594">https://nvd.nist.gov/vuln/detail/CVE-2024-52594</a></li>
<li><a href="https://github.com/matrix-org/gomatrixserverlib/commit/c4f1e01eab0dd435709ad15463ed38a079ad6128">https://github.com/matrix-org/gomatrixserverlib/commit/c4f1e01eab0dd435709ad15463ed38a079ad6128</a></li>
<li><a href="https://pkg.go.dev/vuln/GO-2025-3396">https://pkg.go.dev/vuln/GO-2025-3396</a></li>
<li><a href="https://github.com/advisories/GHSA-4ff6-858j-r822">https://github.com/advisories/GHSA-4ff6-858j-r822</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-4ff6-858j-r822</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2025-01-16T23:08:32.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/t2bot/matrix-media-repo] Matrix Media Repo (MMR) allows untrusted file formats can be thumbnailed, invoking potentially further untrusted decoders]]></title>
        <id>https://github.com/advisories/GHSA-rcxc-wjgw-579r</id>
        <link href="https://github.com/advisories/GHSA-rcxc-wjgw-579r"/>
        <updated>2025-01-17T15:43:34.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>If SVG or JPEGXL thumbnailers are enabled (they are disabled by default), a user may upload a file which claims to be either of these types and request a thumbnail to invoke a different decoder in ImageMagick. In some ImageMagick installations, this includes the capability to run Ghostscript to decode the image/file.</p>
<p>If MP4 thumbnailers are enabled (also disabled by default), the same issue as above may occur with the ffmpeg installation instead.</p>
<p>MMR uses a number of other decoders for all other file types when preparing thumbnails. Theoretical issues are possible with these decoders, however in testing they were not possible to exploit.</p>
<h3 id="patches">Patches</h3>
<p>This is fixed in <a href="https://github.com/t2bot/matrix-media-repo/releases/tag/v1.3.8">MMR v1.3.8</a>. MMR now inspects the mimetype of media prior to thumbnailing, and picks a thumbnailer based on those results instead of relying on user-supplied values. This may lead to fewer thumbnails when obscure file shapes are used. This also helps narrow scope of theoretical issues with all decoders MMR uses for thumbnails.</p>
<h3 id="workarounds">Workarounds</h3>
<p>Disabling the SVG, JPEGXL, and MP4 thumbnail types in the MMR config prevents the decoders from being invoked. Further disabling uncommon file types on the server is recommended to limit risk surface. </p>
<p>Containers and other similar technologies may also be used to limit the impact of vulnerabilities in external decoders, like ImageMagick and ffmpeg. </p>
<p>Some installations of ImageMagick may disable "unsafe" file types, like PDFs, already. This option can be replicated to other environments as needed. ffmpeg may be compiled with limited decoders/codecs. The Docker image for MMR disables PDFs and similar formats by default.</p>
<h3 id="references">References</h3>
<p>A similar issue was discovered in Synapse: <a href="https://github.com/element-hq/synapse/security/advisories/GHSA-vp6v-whfm-rv3g">https://github.com/element-hq/synapse/security/advisories/GHSA-vp6v-whfm-rv3g</a></p>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/t2bot/matrix-media-repo/security/advisories/GHSA-rcxc-wjgw-579r">https://github.com/t2bot/matrix-media-repo/security/advisories/GHSA-rcxc-wjgw-579r</a></li>
<li><a href="https://github.com/t2bot/matrix-media-repo/releases/tag/v1.3.8">https://github.com/t2bot/matrix-media-repo/releases/tag/v1.3.8</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-56515">https://nvd.nist.gov/vuln/detail/CVE-2024-56515</a></li>
<li><a href="https://pkg.go.dev/vuln/GO-2025-3400">https://pkg.go.dev/vuln/GO-2025-3400</a></li>
<li><a href="https://github.com/advisories/GHSA-rcxc-wjgw-579r">https://github.com/advisories/GHSA-rcxc-wjgw-579r</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-rcxc-wjgw-579r</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2025-01-16T19:35:09.000Z</published>
    </entry>
</feed>