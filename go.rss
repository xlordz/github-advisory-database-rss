<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://xlordz.github.io/github-advisory-database-rss/go.rss</id>
    <title>Security Advisory for Go modules</title>
    <updated>2025-06-11T03:40:03.487Z</updated>
    <generator>github-advisory-database-rss</generator>
    <link rel="alternate" href="https://github.com/advisories?query=type%3Areviewed+ecosystem%3Ago"/>
    <subtitle>Security Advisory for Go modules on GitHub</subtitle>
    <rights>github-advisory-database-rss</rights>
    <category term="CRITICAL"/>
    <category term="HIGH"/>
    <category term="MODERATE"/>
    <category term="LOW"/>
    <entry>
        <title type="html"><![CDATA[[github.com/cloudflare/circl] CIRCL-Fourq: Missing and wrong validation can lead to incorrect results]]></title>
        <id>https://github.com/advisories/GHSA-2x5j-vhc8-9cwm</id>
        <link href="https://github.com/advisories/GHSA-2x5j-vhc8-9cwm"/>
        <updated>2025-06-10T21:18:35.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>The CIRCL implementation of FourQ fails to validate user-supplied low-order points during Diffie-Hellman key exchange, potentially allowing attackers to force the identity point and compromise session security.</p>
<p>Moreover, there is an incorrect point validation in ScalarMult can lead to incorrect results in the isEqual function and if a point is on the curve.</p>
<h3 id="patches">Patches</h3>
<p>Version 1.6.1 (<a href="https://github.com/cloudflare/circl/tree/v1.6.1">https://github.com/cloudflare/circl/tree/v1.6.1</a>) mitigates the identified issues.</p>
<p>We acknowledge Alon Livne (Botanica Software Labs) for the reported findings.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/cloudflare/circl/security/advisories/GHSA-2x5j-vhc8-9cwm">https://github.com/cloudflare/circl/security/advisories/GHSA-2x5j-vhc8-9cwm</a></li>
<li><a href="https://github.com/cloudflare/circl/tree/v1.6.1">https://github.com/cloudflare/circl/tree/v1.6.1</a></li>
<li><a href="https://github.com/advisories/GHSA-2x5j-vhc8-9cwm">https://github.com/advisories/GHSA-2x5j-vhc8-9cwm</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-2x5j-vhc8-9cwm</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2025-06-10T21:18:33.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/coredns/coredns] CoreDNS Vulnerable to DoQ Memory Exhaustion via Stream Amplification]]></title>
        <id>https://github.com/advisories/GHSA-cvx7-x8pj-x2gw</id>
        <link href="https://github.com/advisories/GHSA-cvx7-x8pj-x2gw"/>
        <updated>2025-06-09T21:39:34.000Z</updated>
        <content type="html"><![CDATA[<h3 id="summary">Summary</h3>
<p>A <strong>Denial of Service (DoS)</strong> vulnerability was discovered in the CoreDNS DNS-over-QUIC (DoQ) server implementation. The server previously created a new goroutine for every incoming QUIC stream without imposing any limits on the number of concurrent streams or goroutines. A remote, unauthenticated attacker could open a large number of streams, leading to uncontrolled memory consumption and eventually causing an Out Of Memory (OOM) crash — especially in containerized or memory-constrained environments.</p>
<h3 id="impact">Impact</h3>
<ul>
<li><strong>Component</strong>: <code>server_quic.go</code></li>
<li><strong>Attack Vector</strong>: Remote, network-based</li>
<li><strong>Attack Complexity</strong>: Low</li>
<li><strong>Privileges Required</strong>: None</li>
<li><strong>User Interaction</strong>: None</li>
<li><strong>Impact</strong>: High availability loss (OOM kill or unresponsiveness)</li>
</ul>
<p>This issue affects deployments with <code>quic://</code> enabled in the Corefile. A single attacker can cause the CoreDNS instance to become unresponsive using minimal bandwidth and CPU.</p>
<h3 id="patches">Patches</h3>
<p>The patch introduces two key mitigation mechanisms:</p>
<ul>
<li><strong><code>max_streams</code></strong>: Caps the number of concurrent QUIC streams per connection. Default: <code>256</code>.</li>
<li><strong><code>worker_pool_size</code></strong>: Introduces a server-wide, bounded worker pool to process incoming streams. Default: <code>1024</code>.</li>
</ul>
<p>This eliminates the 1:1 stream-to-goroutine model and ensures that CoreDNS remains resilient under high concurrency. The new configuration options are exposed through the <code>quic</code> Corefile block:</p>
<pre><code>quic {
    max_streams 256
    worker_pool_size 1024
}
</code></pre>
<p>These defaults are generous and aligned with typical DNS-over-QUIC client behavior.</p>
<h3 id="workarounds">Workarounds</h3>
<p>If you're unable to upgrade immediately, you can:</p>
<ul>
<li>Disable QUIC support by removing or commenting out the <code>quic://</code> block in your Corefile</li>
<li>Use container runtime resource limits to detect and isolate excessive memory usage</li>
<li>Monitor QUIC connection patterns and alert on anomalies</li>
</ul>
<h3 id="references">References</h3>
<ul>
<li><a href="https://datatracker.ietf.org/doc/html/rfc9250">RFC 9250 - DNS over Dedicated QUIC Connections</a></li>
<li><a href="https://github.com/quic-go/quic-go">quic-go GitHub project</a></li>
<li><a href="https://www.usenix.org/conference/usenixsecurity23/presentation/botella">QUIC stream exhaustion class of vulnerabilities (related)</a></li>
</ul>
<h3 id="credit">Credit</h3>
<p>Thanks to <a href="https://github.com/thevilledev">@thevilledev</a> for disclovering this vulnerability and contributing a high-quality fix.</p>
<h3 id="for-more-information">For more information</h3>
<p>Please consult our <a href="https://github.com/coredns/coredns/blob/master/.github/SECURITY.md">security guide</a> for more information regarding our security process.</p>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/coredns/coredns/security/advisories/GHSA-cvx7-x8pj-x2gw">https://github.com/coredns/coredns/security/advisories/GHSA-cvx7-x8pj-x2gw</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2025-47950">https://nvd.nist.gov/vuln/detail/CVE-2025-47950</a></li>
<li><a href="https://github.com/coredns/coredns/commit/efaed02c6a480ec147b1f799aab7cf815b17dfe1">https://github.com/coredns/coredns/commit/efaed02c6a480ec147b1f799aab7cf815b17dfe1</a></li>
<li><a href="https://datatracker.ietf.org/doc/html/rfc9250">https://datatracker.ietf.org/doc/html/rfc9250</a></li>
<li><a href="https://github.com/quic-go/quic-go">https://github.com/quic-go/quic-go</a></li>
<li><a href="https://www.usenix.org/conference/usenixsecurity23/presentation/botella">https://www.usenix.org/conference/usenixsecurity23/presentation/botella</a></li>
<li><a href="https://github.com/advisories/GHSA-cvx7-x8pj-x2gw">https://github.com/advisories/GHSA-cvx7-x8pj-x2gw</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-cvx7-x8pj-x2gw</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2025-06-06T21:27:27.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/pion/interceptor] Pion Interceptor's improper RTP padding handling allows remote crash for SFU users (DoS)]]></title>
        <id>https://github.com/advisories/GHSA-f26w-gh5m-qq77</id>
        <link href="https://github.com/advisories/GHSA-f26w-gh5m-qq77"/>
        <updated>2025-06-10T14:45:08.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>Pion Interceptor versions v0.1.36 through v0.1.38 contain a bug in a RTP packet factory that can be exploited to trigger a panic with Pion based SFU via crafted RTP packets, This only affect users that use pion/interceptor.</p>
<h3 id="patches">Patches</h3>
<p>Upgrade to v0.1.39 or later, which includes PR <a href="https://github.com/pion/interceptor/pull/338">#338</a> which validates that: <code>padLen &gt; 0 &amp;&amp; padLen &lt;= payloadLength</code> and return error  on overflow, avoiding panic.</p>
<p>If upgrading is not possible, apply the patch from the pull request manually or drop packets whose P-bit is set but whose padLen is zero or larger than the remaining payload.</p>
<h3 id="workarounds">Workarounds</h3>
<p>At the application layer, reject any RTP packet where:</p>
<pre><code>hasPadding (P-bit field) == true  &amp;&amp;  (padLen == 0 || padLen &gt; packetLen – headerLen)
</code></pre>
<p>before passing it to Pion’s packet factories.</p>
<h3 id="references">References</h3>
<p>Commit fixing the bug: <a href="https://github.com/pion/interceptor/commit/fa5b35ea867389cec33a9c82fffbd459ca8958e5">https://github.com/pion/interceptor/commit/fa5b35ea867389cec33a9c82fffbd459ca8958e5</a>
Pull request: <a href="https://github.com/pion/interceptor/pull/338">https://github.com/pion/interceptor/pull/338</a>
Issue: <a href="https://github.com/pion/webrtc/issues/3148">https://github.com/pion/webrtc/issues/3148</a></p>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/pion/interceptor/security/advisories/GHSA-f26w-gh5m-qq77">https://github.com/pion/interceptor/security/advisories/GHSA-f26w-gh5m-qq77</a></li>
<li><a href="https://github.com/pion/webrtc/issues/3148">https://github.com/pion/webrtc/issues/3148</a></li>
<li><a href="https://github.com/pion/interceptor/pull/338">https://github.com/pion/interceptor/pull/338</a></li>
<li><a href="https://github.com/pion/interceptor/commit/fa5b35ea867389cec33a9c82fffbd459ca8958e5">https://github.com/pion/interceptor/commit/fa5b35ea867389cec33a9c82fffbd459ca8958e5</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2025-49140">https://nvd.nist.gov/vuln/detail/CVE-2025-49140</a></li>
<li><a href="https://github.com/advisories/GHSA-f26w-gh5m-qq77">https://github.com/advisories/GHSA-f26w-gh5m-qq77</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-f26w-gh5m-qq77</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2025-06-09T20:29:40.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/kuadrant/authorino] Authorino Uncontrolled Resource Consumption vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-vqvv-2wj5-q34w</id>
        <link href="https://github.com/advisories/GHSA-vqvv-2wj5-q34w"/>
        <updated>2025-06-09T13:13:28.000Z</updated>
        <content type="html"><![CDATA[<p>A Developer persona can bring down the Authorino service, preventing the evaluation of all AuthPolicies on the cluster</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2025-25208">https://nvd.nist.gov/vuln/detail/CVE-2025-25208</a></li>
<li><a href="https://access.redhat.com/security/cve/CVE-2025-25208">https://access.redhat.com/security/cve/CVE-2025-25208</a></li>
<li><a href="https://bugzilla.redhat.com/show_bug.cgi?id=2347436">https://bugzilla.redhat.com/show_bug.cgi?id=2347436</a></li>
<li><a href="https://github.com/advisories/GHSA-vqvv-2wj5-q34w">https://github.com/advisories/GHSA-vqvv-2wj5-q34w</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-vqvv-2wj5-q34w</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2025-06-09T06:30:22.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/kuadrant/authorino] Authorino Uncontrolled Resource Consumption vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-r8xr-pgv5-gxw3</id>
        <link href="https://github.com/advisories/GHSA-r8xr-pgv5-gxw3"/>
        <updated>2025-06-09T13:10:36.000Z</updated>
        <content type="html"><![CDATA[<p>The Authorino service in the Red Hat Connectivity Link is the authorization service for zero trust API security. Authorino allows the users with developer persona to add callbacks to be executed to HTTP endpoints once the authorization process is completed. It was found that an attacker with developer persona access can add a large number of those callbacks to be executed by Authorino and as the authentication policy is enforced by a single instance of the service, this leada to a Denial of Service in Authorino while processing the post-authorization callbacks.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2025-25207">https://nvd.nist.gov/vuln/detail/CVE-2025-25207</a></li>
<li><a href="https://access.redhat.com/security/cve/CVE-2025-25207">https://access.redhat.com/security/cve/CVE-2025-25207</a></li>
<li><a href="https://bugzilla.redhat.com/show_bug.cgi?id=2347421">https://bugzilla.redhat.com/show_bug.cgi?id=2347421</a></li>
<li><a href="https://github.com/advisories/GHSA-r8xr-pgv5-gxw3">https://github.com/advisories/GHSA-r8xr-pgv5-gxw3</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-r8xr-pgv5-gxw3</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2025-06-09T06:30:21.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/knadh/listmonk] listmonk's Sprig template Injection vulnerability leads to reading of Environment Variable for low privilege user]]></title>
        <id>https://github.com/advisories/GHSA-jc7g-x28f-3v3h</id>
        <link href="https://github.com/advisories/GHSA-jc7g-x28f-3v3h"/>
        <updated>2025-06-09T18:35:39.000Z</updated>
        <content type="html"><![CDATA[<h3 id="summary">Summary</h3>
<p>The <code>env</code> and <code>expandenv</code> template functions which is enabled by default in <a href="https://masterminds.github.io/sprig/">Sprig</a> enables capturing of env variables on the host. While this may not be a problem on single-user (super admin) installations, on multi-user installations, this allows non-super-admin users with campaign or template permissions to use the <code>{{ env }}</code> template expression to capture sensitive environment variables.</p>
<p><strong>Upgrade to <a href="https://github.com/knadh/listmonk/releases/tag/v5.0.2">v5.0.2</a></strong> to mitigate.</p>
<hr>
<h1 id="demonstration">Demonstration</h1>
<h3 id="description">Description</h3>
<p>A critical template injection vulnerability exists in Listmonk's campaign preview functionality that allows authenticated users with minimal privileges (campaigns:get &amp; campaigns:get_all) to extract sensitive system data, including database credentials, SMTP passwords, and admin credentials due to some dangerous function being allowed.</p>
<h3 id="proof-of-concept">Proof of Concept</h3>
<ul>
<li>Create a user and give him <code>campaigns:get</code> and <code>campaigns:get_all</code> privileges</li>
</ul>
<p><img alt="image" src="https://github.com/user-attachments/assets/05333695-14d9-498e-9f73-2137d6eca55b"></p>
<ul>
<li><p>Now login with that user, go to any campaign, go the Content section and here lies the vulnerability, we're able to execute template content which allows us to get environment variables, execute Sprig functions...</p>
</li>
<li><p>Now in the text field you can input the following and press Preview:</p>
</li>
</ul>
<pre><code>{{ env "AWS_KEY" }}
{{ env "LISTMONK_db__user" }}
{{ env "LISTMONK_db__password" }}
</code></pre>
<p><img alt="image" src="https://github.com/user-attachments/assets/ac963f54-5982-47d4-99d0-59030917f548"></p>
<h1 id="preview">Preview:</h1>
<p><img alt="image" src="https://github.com/user-attachments/assets/99558ca4-81c6-4e1a-bd0d-6bc57830f4d0"></p>
<p>I had the AWS_KEY variable set like that to confirm the vulnerability:</p>
<p><img alt="image" src="https://github.com/user-attachments/assets/16382998-2402-436a-9bb0-db09fb13dd79"></p>
<h3 id="impact">Impact</h3>
<ul>
<li>Through these environment variables the attacker can access, they can fully compromise the database, cloud accounts, admin credentials, and more depending on what was setup leading to total system takeover and data breach.</li>
</ul>
<h3 id="suggested-fix">Suggested Fix</h3>
<ul>
<li>Blacklist some function for templates like env, expandEnv and fail as they can be used to leak environment variables which leads to a full takeover.</li>
</ul>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/knadh/listmonk/security/advisories/GHSA-jc7g-x28f-3v3h">https://github.com/knadh/listmonk/security/advisories/GHSA-jc7g-x28f-3v3h</a></li>
<li><a href="https://github.com/knadh/listmonk/commit/d27d2c32cf3af2d0b24e29ea5a686ba149b49b3e">https://github.com/knadh/listmonk/commit/d27d2c32cf3af2d0b24e29ea5a686ba149b49b3e</a></li>
<li><a href="https://github.com/knadh/listmonk/releases/tag/v5.0.2">https://github.com/knadh/listmonk/releases/tag/v5.0.2</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2025-49136">https://nvd.nist.gov/vuln/detail/CVE-2025-49136</a></li>
<li><a href="https://github.com/advisories/GHSA-jc7g-x28f-3v3h">https://github.com/advisories/GHSA-jc7g-x28f-3v3h</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-jc7g-x28f-3v3h</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2025-06-09T13:09:24.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/authzed/spicedb] SpiceDB checks involving relations with caveats can result in no permission when permission is expected]]></title>
        <id>https://github.com/advisories/GHSA-cwwm-hr97-qfxm</id>
        <link href="https://github.com/advisories/GHSA-cwwm-hr97-qfxm"/>
        <updated>2025-06-06T21:41:01.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>On schemas involving arrows with caveats on the arrow’ed relation, when the path to resolve a CheckPermission request involves the evaluation of multiple caveated branches, requests may return a negative response when a positive response is expected.</p>
<p>For example, given this schema:</p>
<pre><code>definition user {}

definition office {
    relation parent: office
    relation manager: user
    permission read = manager + parent-&gt;read
}

definition group {
    relation parent: office
    permission read = parent-&gt;read
}

definition document {
    relation owner: group with equals
    permission read = owner-&gt;read
}

caveat equals(actual string, required string) {
    actual == required
}
</code></pre>
<p>and these relationships:</p>
<pre><code>office:headoffice#manager@user:maria
office:branch1#parent@office:headoffice
group:admins#parent@office:branch1
group:managers#parent@office:headoffice
document:budget#owner@group:admins[equals:{"required":"admin"}]
document:budget#owner@group:managers[equals:{"required":"manager"}]
</code></pre>
<p>Permission for <code>'document:budget#read@user:maria with {"actual" : "admin"}'</code> is returned as NO_PERMISSION when HAS_PERMISSION is the correct answer.</p>
<h3 id="patches">Patches</h3>
<p>Upgrade to v1.44.2.</p>
<h3 id="workarounds">Workarounds</h3>
<p>Do not use caveats in your schema over an arrow’ed relation.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/authzed/spicedb/security/advisories/GHSA-cwwm-hr97-qfxm">https://github.com/authzed/spicedb/security/advisories/GHSA-cwwm-hr97-qfxm</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2025-49011">https://nvd.nist.gov/vuln/detail/CVE-2025-49011</a></li>
<li><a href="https://github.com/authzed/spicedb/commit/fe8dd9f491f6975b3408c401e413a530eb181a67">https://github.com/authzed/spicedb/commit/fe8dd9f491f6975b3408c401e413a530eb181a67</a></li>
<li><a href="https://github.com/authzed/spicedb/releases/tag/v1.44.2">https://github.com/authzed/spicedb/releases/tag/v1.44.2</a></li>
<li><a href="https://github.com/advisories/GHSA-cwwm-hr97-qfxm">https://github.com/advisories/GHSA-cwwm-hr97-qfxm</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-cwwm-hr97-qfxm</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2025-06-06T21:41:00.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/grafana/grafana] Grafana's datasource proxy API allows authorization checks to be bypassed]]></title>
        <id>https://github.com/advisories/GHSA-9j65-rv5x-4vrf</id>
        <link href="https://github.com/advisories/GHSA-9j65-rv5x-4vrf"/>
        <updated>2025-06-05T05:42:48.000Z</updated>
        <content type="html"><![CDATA[<p>This vulnerability in Grafana's datasource proxy API allows authorization checks to be bypassed by adding an extra slash character in the URL path.</p>
<p>Users with minimal permissions could gain unauthorized read access to GET endpoints in Alertmanager and Prometheus datasources.</p>
<p>The issue primarily affects datasources that implement route-specific permissions, including Alertmanager and certain Prometheus-based datasources.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2025-3454">https://nvd.nist.gov/vuln/detail/CVE-2025-3454</a></li>
<li><a href="https://grafana.com/security/security-advisories/cve-2025-3454">https://grafana.com/security/security-advisories/cve-2025-3454</a></li>
<li><a href="https://github.com/grafana/grafana/blob/be8d153dc33734caba4f617ff571d18253e68fa0/CHANGELOG.md#10417security-01-2025-04-22">https://github.com/grafana/grafana/blob/be8d153dc33734caba4f617ff571d18253e68fa0/CHANGELOG.md#10417security-01-2025-04-22</a></li>
<li><a href="https://grafana.com/blog/2025/04/22/grafana-security-release-medium-and-high-severity-fixes-for-cve-2025-3260-cve-2025-2703-cve-2025-3454">https://grafana.com/blog/2025/04/22/grafana-security-release-medium-and-high-severity-fixes-for-cve-2025-3260-cve-2025-2703-cve-2025-3454</a></li>
<li><a href="https://github.com/advisories/GHSA-9j65-rv5x-4vrf">https://github.com/advisories/GHSA-9j65-rv5x-4vrf</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-9j65-rv5x-4vrf</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2025-06-02T12:30:33.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/kro-run/kro] kro Confused Deputy vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-7633-x85h-5mqh</id>
        <link href="https://github.com/advisories/GHSA-7633-x85h-5mqh"/>
        <updated>2025-06-05T05:10:15.000Z</updated>
        <content type="html"><![CDATA[<p>kro (Kube Resource Orchestrator) 0.1.0 before 0.2.1 allows users (with permission to create or modify ResourceGraphDefinition resources) to supply arbitrary container images. This can lead to a confused-deputy scenario where kro's controllers deploy and run attacker-controlled images, resulting in unauthenticated remote code execution on cluster nodes.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2025-48710">https://nvd.nist.gov/vuln/detail/CVE-2025-48710</a></li>
<li><a href="https://github.com/kro-run/kro/compare/v0.2.1...v0.2.2">https://github.com/kro-run/kro/compare/v0.2.1...v0.2.2</a></li>
<li><a href="https://orca.security/resources/blog/kubernetes-crd-abstraction-risks-kro">https://orca.security/resources/blog/kubernetes-crd-abstraction-risks-kro</a></li>
<li><a href="https://github.com/advisories/GHSA-7633-x85h-5mqh">https://github.com/advisories/GHSA-7633-x85h-5mqh</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-7633-x85h-5mqh</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2025-06-04T06:30:26.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/grafana/grafana] Grafana vulnerable to authenticated users bypassing dashboard, folder permissions]]></title>
        <id>https://github.com/advisories/GHSA-3px7-c4j3-576r</id>
        <link href="https://github.com/advisories/GHSA-3px7-c4j3-576r"/>
        <updated>2025-06-05T01:04:02.000Z</updated>
        <content type="html"><![CDATA[<p>A security vulnerability in the /apis/dashboard.grafana.app/* endpoints allows authenticated users to bypass dashboard and folder permissions. The vulnerability affects all API versions (v0alpha1, v1alpha1, v2alpha1).</p>
<p>Impact:</p>
<ul>
<li><p>Viewers can view all dashboards/folders regardless of permissions</p>
</li>
<li><p>Editors can view/edit/delete all dashboards/folders regardless of permissions</p>
</li>
<li><p>Editors can create dashboards in any folder regardless of permissions</p>
</li>
<li><p>Anonymous users with viewer/editor roles are similarly affected</p>
</li>
</ul>
<p>Organization isolation boundaries remain intact. The vulnerability only affects dashboard access and does not grant access to datasources.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2025-3260">https://nvd.nist.gov/vuln/detail/CVE-2025-3260</a></li>
<li><a href="https://grafana.com/security/security-advisories/CVE-2025-3260">https://grafana.com/security/security-advisories/CVE-2025-3260</a></li>
<li><a href="https://github.com/grafana/grafana/blob/be8d153dc33734caba4f617ff571d18253e68fa0/CHANGELOG.md#1161-2025-04-23">https://github.com/grafana/grafana/blob/be8d153dc33734caba4f617ff571d18253e68fa0/CHANGELOG.md#1161-2025-04-23</a></li>
<li><a href="https://grafana.com/blog/2025/04/22/grafana-security-release-medium-and-high-severity-fixes-for-cve-2025-3260-cve-2025-2703-cve-2025-3454">https://grafana.com/blog/2025/04/22/grafana-security-release-medium-and-high-severity-fixes-for-cve-2025-3260-cve-2025-2703-cve-2025-3454</a></li>
<li><a href="https://github.com/advisories/GHSA-3px7-c4j3-576r">https://github.com/advisories/GHSA-3px7-c4j3-576r</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-3px7-c4j3-576r</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2025-06-02T12:30:33.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/cli/go-gh/v2] Prevent GitHub CLI and extensions from executing arbitrary commands from compromised GitHub Enterprise Server]]></title>
        <id>https://github.com/advisories/GHSA-g9f5-x53j-h563</id>
        <link href="https://github.com/advisories/GHSA-g9f5-x53j-h563"/>
        <updated>2025-06-04T21:00:36.000Z</updated>
        <content type="html"><![CDATA[<h3 id="summary">Summary</h3>
<p>A security vulnerability has been identified in <code>go-gh</code> where an attacker-controlled GitHub Enterprise Server could result in executing arbitrary commands on a user's machine by replacing HTTP URLs provided by GitHub with local file paths for browsing. </p>
<h3 id="details">Details</h3>
<p>The GitHub CLI and CLI extensions allow users to transition from their terminal for a variety of use cases through the <a href="https://github.com/cli/go-gh/blob/61bf393cf4aeea6d00a6251390f5f67f5b67e727/pkg/browser/browser.go"><code>Browser</code> capability in <code>github.com/cli/go-gh/v2/pkg/browser</code></a>:</p>
<ul>
<li>Using the <code>-w, --web</code> flag, GitHub CLI users can view GitHub repositories, issues, pull requests, and more using their web browser</li>
<li>Using the <code>gh codespace</code> command set, GitHub CLI users can transition to Visual Studio Code to work with GitHub Codespaces</li>
</ul>
<p>This is done by using URLs provided through API responses from authenticated GitHub hosts when users execute <code>gh</code> commands.</p>
<p>Prior to <code>2.12.1</code>, <code>Browser.Browse()</code> would attempt to open the provided URL using a variety of OS-specific approaches regardless of the scheme.  An attacker-controlled GitHub Enterprise Server could modify API responses to use a specially tailored local executable path instead of HTTP URLs to resources.  This could allow the attacker to execute arbitrary executables on the user's machine. </p>
<p>In <code>2.12.1</code>, <code>Browser.Browse()</code> has been enhanced to allow and disallow a variety of scenarios to avoid opening or executing files on the filesystem without unduly impacting HTTP URLs:</p>
<ol>
<li>URLs with <code>http://</code>, <code>https://</code>, <code>vscode://</code>, <code>vscode-insiders://</code> protocols are supported</li>
<li>URLs with <code>file://</code> protocol are unsupported</li>
<li>URLs matching files or directories on the filesystem are unsupported</li>
<li>URLs matching executables in the user's path are unsupported</li>
</ol>
<p>URLs without protocols will be browsable if none of these other conditions apply.</p>
<p>As we have more information about use cases, maintainers can expand these capabilities for an improved user experience that allows configuring allowed URL schemes and/or prompt the user for an unexpected user case and confirming whether to continue.</p>
<h3 id="impact">Impact</h3>
<p>Successful exploitation could cause users of the attacker-controlled GitHub Enterprise Server to execute arbitrary commands.</p>
<h3 id="remediation-and-mitigation">Remediation and Mitigation</h3>
<ol>
<li>Upgrade <code>go-gh</code> to <code>2.12.1</code></li>
</ol>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/cli/go-gh/security/advisories/GHSA-g9f5-x53j-h563">https://github.com/cli/go-gh/security/advisories/GHSA-g9f5-x53j-h563</a></li>
<li><a href="https://github.com/cli/go-gh/commit/a08820a13f257d6c5b4cb86d37db559ec6d14577">https://github.com/cli/go-gh/commit/a08820a13f257d6c5b4cb86d37db559ec6d14577</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2025-48938">https://nvd.nist.gov/vuln/detail/CVE-2025-48938</a></li>
<li><a href="https://github.com/advisories/GHSA-g9f5-x53j-h563">https://github.com/advisories/GHSA-g9f5-x53j-h563</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-g9f5-x53j-h563</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2025-05-30T15:30:39.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/quic-go/quic-go] quic-go Has Panic in Path Probe Loss Recovery Handling]]></title>
        <id>https://github.com/advisories/GHSA-j972-j939-p2v3</id>
        <link href="https://github.com/advisories/GHSA-j972-j939-p2v3"/>
        <updated>2025-06-04T20:57:27.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>The loss recovery logic for path probe packets that was added in the v0.50.0 release can be used to trigger a nil-pointer dereference by a malicious QUIC client.</p>
<p>In order to do so, the attacker first sends valid QUIC packets from different remote addresses (thereby triggering the newly added path validation logic: the server sends path probe packets), and then sending ACKs for packets received from the server specifically crafted to trigger the nil-pointer dereference.</p>
<h3 id="patches">Patches</h3>
<p>v0.50.1 contains a patch that fixes the vulnerability.</p>
<p>This release contains a test that generates random sequences of sent packets (both regular and path probe packets), that was used to verify that the patch actually covers all corner cases.</p>
<h3 id="workarounds">Workarounds</h3>
<p>No.</p>
<h3 id="references">References</h3>
<p>This issue has been reported publicly, but without any context, in <a href="https://github.com/quic-go/quic-go/issues/4981">https://github.com/quic-go/quic-go/issues/4981</a>.</p>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/quic-go/quic-go/security/advisories/GHSA-j972-j939-p2v3">https://github.com/quic-go/quic-go/security/advisories/GHSA-j972-j939-p2v3</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2025-29785">https://nvd.nist.gov/vuln/detail/CVE-2025-29785</a></li>
<li><a href="https://github.com/quic-go/quic-go/issues/4981">https://github.com/quic-go/quic-go/issues/4981</a></li>
<li><a href="https://github.com/quic-go/quic-go/commit/b90058aba5f65f48e0e150c89bbaa21a72dda4de">https://github.com/quic-go/quic-go/commit/b90058aba5f65f48e0e150c89bbaa21a72dda4de</a></li>
<li><a href="https://github.com/advisories/GHSA-j972-j939-p2v3">https://github.com/advisories/GHSA-j972-j939-p2v3</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-j972-j939-p2v3</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2025-06-03T06:09:56.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/forceu/gokapi] Gokapi vulnerable to stored XSS via uploading file with malicious file name]]></title>
        <id>https://github.com/advisories/GHSA-95rc-wc32-gm53</id>
        <link href="https://github.com/advisories/GHSA-95rc-wc32-gm53"/>
        <updated>2025-06-03T06:28:10.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>When using end-to-end encryption, a stored XSS vulnerability can be exploited by uploading a file with JavaScript code embedded in the filename. After upload and every time someone opens the upload list, the script is then parsed.</p>
<p>With the affected versions &lt;v2.0, there was no user permission system implemented, therefore all authenticated users were already able to see and modify all resources, even if end-to-end encrypted, as the encryption key had to be the same for all users with &lt;v2.0. Nethertheless with XSS, other attack vectors like redirection or crypto mining would be possble.</p>
<h3 id="patches">Patches</h3>
<p>This CVE has been fixed in v2.0.0</p>
<h3 id="workarounds">Workarounds</h3>
<p>If you are the only authenticated user using Gokapi, you are not affected. A workaround would be to disable end-to-end encryption.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/Forceu/Gokapi/security/advisories/GHSA-95rc-wc32-gm53">https://github.com/Forceu/Gokapi/security/advisories/GHSA-95rc-wc32-gm53</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2025-48494">https://nvd.nist.gov/vuln/detail/CVE-2025-48494</a></li>
<li><a href="https://github.com/Forceu/Gokapi/commit/343cc566cfd7f4efcd522c92371561d494aed6b0">https://github.com/Forceu/Gokapi/commit/343cc566cfd7f4efcd522c92371561d494aed6b0</a></li>
<li><a href="https://github.com/Forceu/Gokapi/releases/tag/v2.0.0">https://github.com/Forceu/Gokapi/releases/tag/v2.0.0</a></li>
<li><a href="https://github.com/advisories/GHSA-95rc-wc32-gm53">https://github.com/advisories/GHSA-95rc-wc32-gm53</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-95rc-wc32-gm53</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2025-06-03T06:28:08.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/forceu/gokapi] Gokapi vulnerable to stored XSS via uploading file with malicious file name]]></title>
        <id>https://github.com/advisories/GHSA-95rc-wc32-gm53</id>
        <link href="https://github.com/advisories/GHSA-95rc-wc32-gm53"/>
        <updated>2025-06-03T06:28:10.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>When using end-to-end encryption, a stored XSS vulnerability can be exploited by uploading a file with JavaScript code embedded in the filename. After upload and every time someone opens the upload list, the script is then parsed.</p>
<p>With the affected versions &lt;v2.0, there was no user permission system implemented, therefore all authenticated users were already able to see and modify all resources, even if end-to-end encrypted, as the encryption key had to be the same for all users with &lt;v2.0. Nethertheless with XSS, other attack vectors like redirection or crypto mining would be possble.</p>
<h3 id="patches">Patches</h3>
<p>This CVE has been fixed in v2.0.0</p>
<h3 id="workarounds">Workarounds</h3>
<p>If you are the only authenticated user using Gokapi, you are not affected. A workaround would be to disable end-to-end encryption.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/Forceu/Gokapi/security/advisories/GHSA-95rc-wc32-gm53">https://github.com/Forceu/Gokapi/security/advisories/GHSA-95rc-wc32-gm53</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2025-48494">https://nvd.nist.gov/vuln/detail/CVE-2025-48494</a></li>
<li><a href="https://github.com/Forceu/Gokapi/commit/343cc566cfd7f4efcd522c92371561d494aed6b0">https://github.com/Forceu/Gokapi/commit/343cc566cfd7f4efcd522c92371561d494aed6b0</a></li>
<li><a href="https://github.com/Forceu/Gokapi/releases/tag/v2.0.0">https://github.com/Forceu/Gokapi/releases/tag/v2.0.0</a></li>
<li><a href="https://github.com/advisories/GHSA-95rc-wc32-gm53">https://github.com/advisories/GHSA-95rc-wc32-gm53</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-95rc-wc32-gm53</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2025-06-03T06:28:08.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/forceu/gokapi] Gokapi has stored XSS vulnerability in friendly name for API keys]]></title>
        <id>https://github.com/advisories/GHSA-4xg4-54hm-9j77</id>
        <link href="https://github.com/advisories/GHSA-4xg4-54hm-9j77"/>
        <updated>2025-06-03T06:27:29.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>By renaming the friendly name of an API key, an authenticated user could inject JS into the API key overview, which would also be executed when another user clicks on his API tab.
With the affected versions &lt;v2.0, there was no user permission system implemented, therefore all authenticated users were already able to see and modify all resources, even if end-to-end encrypted, as the encryption key had to be the same for all users with &lt;v2.0. Nethertheless with XSS, other attack vectors like redirection or crypto mining would be possble.</p>
<h3 id="patches">Patches</h3>
<p>This CVE has been fixed in v2.0.0</p>
<h3 id="workarounds">Workarounds</h3>
<p>If you are the only authenticated user using Gokapi, you are not affected. A workaround would be to not open the API page if you suspect that another user might have injected code.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/Forceu/Gokapi/security/advisories/GHSA-4xg4-54hm-9j77">https://github.com/Forceu/Gokapi/security/advisories/GHSA-4xg4-54hm-9j77</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2025-48495">https://nvd.nist.gov/vuln/detail/CVE-2025-48495</a></li>
<li><a href="https://github.com/Forceu/Gokapi/commit/65ddbc68fbfdf1c80cadb477f4bcbb7f2c4fdbf8">https://github.com/Forceu/Gokapi/commit/65ddbc68fbfdf1c80cadb477f4bcbb7f2c4fdbf8</a></li>
<li><a href="https://github.com/advisories/GHSA-4xg4-54hm-9j77">https://github.com/advisories/GHSA-4xg4-54hm-9j77</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-4xg4-54hm-9j77</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2025-06-03T06:27:28.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/forceu/gokapi] Gokapi has stored XSS vulnerability in friendly name for API keys]]></title>
        <id>https://github.com/advisories/GHSA-4xg4-54hm-9j77</id>
        <link href="https://github.com/advisories/GHSA-4xg4-54hm-9j77"/>
        <updated>2025-06-03T06:27:29.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>By renaming the friendly name of an API key, an authenticated user could inject JS into the API key overview, which would also be executed when another user clicks on his API tab.
With the affected versions &lt;v2.0, there was no user permission system implemented, therefore all authenticated users were already able to see and modify all resources, even if end-to-end encrypted, as the encryption key had to be the same for all users with &lt;v2.0. Nethertheless with XSS, other attack vectors like redirection or crypto mining would be possble.</p>
<h3 id="patches">Patches</h3>
<p>This CVE has been fixed in v2.0.0</p>
<h3 id="workarounds">Workarounds</h3>
<p>If you are the only authenticated user using Gokapi, you are not affected. A workaround would be to not open the API page if you suspect that another user might have injected code.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/Forceu/Gokapi/security/advisories/GHSA-4xg4-54hm-9j77">https://github.com/Forceu/Gokapi/security/advisories/GHSA-4xg4-54hm-9j77</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2025-48495">https://nvd.nist.gov/vuln/detail/CVE-2025-48495</a></li>
<li><a href="https://github.com/Forceu/Gokapi/commit/65ddbc68fbfdf1c80cadb477f4bcbb7f2c4fdbf8">https://github.com/Forceu/Gokapi/commit/65ddbc68fbfdf1c80cadb477f4bcbb7f2c4fdbf8</a></li>
<li><a href="https://github.com/advisories/GHSA-4xg4-54hm-9j77">https://github.com/advisories/GHSA-4xg4-54hm-9j77</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-4xg4-54hm-9j77</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2025-06-03T06:27:28.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/mattermost/mattermost/server/v8] Mattermost fails to properly enforce access control restrictions for System Manager roles]]></title>
        <id>https://github.com/advisories/GHSA-86jg-35xj-3vv5</id>
        <link href="https://github.com/advisories/GHSA-86jg-35xj-3vv5"/>
        <updated>2025-05-30T18:48:34.000Z</updated>
        <content type="html"><![CDATA[<p>Mattermost versions 10.7.x &lt;= 10.7.0, 10.5.x &lt;= 10.5.3, 9.11.x &lt;= 9.11.12 fails to properly enforce access control restrictions for System Manager roles, allowing authenticated users with System Manager privileges to view team details they should not have access to via direct API requests to team endpoints, even when explicitly configured with 'No access' to Teams in the System Console.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2025-3611">https://nvd.nist.gov/vuln/detail/CVE-2025-3611</a></li>
<li><a href="https://mattermost.com/security-updates">https://mattermost.com/security-updates</a></li>
<li><a href="https://github.com/mattermost/mattermost/commit/6f33b721de76b39a7714bfe0d5e9c1306869a3e3">https://github.com/mattermost/mattermost/commit/6f33b721de76b39a7714bfe0d5e9c1306869a3e3</a></li>
<li><a href="https://github.com/advisories/GHSA-86jg-35xj-3vv5">https://github.com/advisories/GHSA-86jg-35xj-3vv5</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-86jg-35xj-3vv5</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2025-05-30T15:30:32.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/mattermost/mattermost/server/v8] Mattermost fails to properly enforce access control restrictions for System Manager roles]]></title>
        <id>https://github.com/advisories/GHSA-86jg-35xj-3vv5</id>
        <link href="https://github.com/advisories/GHSA-86jg-35xj-3vv5"/>
        <updated>2025-05-30T18:48:34.000Z</updated>
        <content type="html"><![CDATA[<p>Mattermost versions 10.7.x &lt;= 10.7.0, 10.5.x &lt;= 10.5.3, 9.11.x &lt;= 9.11.12 fails to properly enforce access control restrictions for System Manager roles, allowing authenticated users with System Manager privileges to view team details they should not have access to via direct API requests to team endpoints, even when explicitly configured with 'No access' to Teams in the System Console.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2025-3611">https://nvd.nist.gov/vuln/detail/CVE-2025-3611</a></li>
<li><a href="https://mattermost.com/security-updates">https://mattermost.com/security-updates</a></li>
<li><a href="https://github.com/mattermost/mattermost/commit/6f33b721de76b39a7714bfe0d5e9c1306869a3e3">https://github.com/mattermost/mattermost/commit/6f33b721de76b39a7714bfe0d5e9c1306869a3e3</a></li>
<li><a href="https://github.com/advisories/GHSA-86jg-35xj-3vv5">https://github.com/advisories/GHSA-86jg-35xj-3vv5</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-86jg-35xj-3vv5</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2025-05-30T15:30:32.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/mattermost/mattermost/server/v8] Mattermost fails to properly enforce access control restrictions for System Manager roles]]></title>
        <id>https://github.com/advisories/GHSA-86jg-35xj-3vv5</id>
        <link href="https://github.com/advisories/GHSA-86jg-35xj-3vv5"/>
        <updated>2025-05-30T18:48:34.000Z</updated>
        <content type="html"><![CDATA[<p>Mattermost versions 10.7.x &lt;= 10.7.0, 10.5.x &lt;= 10.5.3, 9.11.x &lt;= 9.11.12 fails to properly enforce access control restrictions for System Manager roles, allowing authenticated users with System Manager privileges to view team details they should not have access to via direct API requests to team endpoints, even when explicitly configured with 'No access' to Teams in the System Console.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2025-3611">https://nvd.nist.gov/vuln/detail/CVE-2025-3611</a></li>
<li><a href="https://mattermost.com/security-updates">https://mattermost.com/security-updates</a></li>
<li><a href="https://github.com/mattermost/mattermost/commit/6f33b721de76b39a7714bfe0d5e9c1306869a3e3">https://github.com/mattermost/mattermost/commit/6f33b721de76b39a7714bfe0d5e9c1306869a3e3</a></li>
<li><a href="https://github.com/advisories/GHSA-86jg-35xj-3vv5">https://github.com/advisories/GHSA-86jg-35xj-3vv5</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-86jg-35xj-3vv5</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2025-05-30T15:30:32.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/mattermost/mattermost/server/v8] Mattermost fails to properly enforce access control restrictions for System Manager roles]]></title>
        <id>https://github.com/advisories/GHSA-86jg-35xj-3vv5</id>
        <link href="https://github.com/advisories/GHSA-86jg-35xj-3vv5"/>
        <updated>2025-05-30T18:48:34.000Z</updated>
        <content type="html"><![CDATA[<p>Mattermost versions 10.7.x &lt;= 10.7.0, 10.5.x &lt;= 10.5.3, 9.11.x &lt;= 9.11.12 fails to properly enforce access control restrictions for System Manager roles, allowing authenticated users with System Manager privileges to view team details they should not have access to via direct API requests to team endpoints, even when explicitly configured with 'No access' to Teams in the System Console.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2025-3611">https://nvd.nist.gov/vuln/detail/CVE-2025-3611</a></li>
<li><a href="https://mattermost.com/security-updates">https://mattermost.com/security-updates</a></li>
<li><a href="https://github.com/mattermost/mattermost/commit/6f33b721de76b39a7714bfe0d5e9c1306869a3e3">https://github.com/mattermost/mattermost/commit/6f33b721de76b39a7714bfe0d5e9c1306869a3e3</a></li>
<li><a href="https://github.com/advisories/GHSA-86jg-35xj-3vv5">https://github.com/advisories/GHSA-86jg-35xj-3vv5</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-86jg-35xj-3vv5</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2025-05-30T15:30:32.000Z</published>
    </entry>
</feed>