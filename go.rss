<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://azu.github.io/github-advisory-database-rss/go.rss</id>
    <title>Security Advisory for Go modules</title>
    <updated>2025-02-05T17:01:20.390Z</updated>
    <generator>github-advisory-database-rss</generator>
    <link rel="alternate" href="https://github.com/advisories?query=type%3Areviewed+ecosystem%3Ago"/>
    <subtitle>Security Advisory for Go modules on GitHub</subtitle>
    <rights>github-advisory-database-rss</rights>
    <category term="CRITICAL"/>
    <category term="HIGH"/>
    <category term="MODERATE"/>
    <category term="LOW"/>
    <entry>
        <title type="html"><![CDATA[[github.com/RichardoC/kube-audit-rest] kube-audit-rest's example logging configuration could disclose secret values in the audit log]]></title>
        <id>https://github.com/advisories/GHSA-hcr5-wv4p-h2g2</id>
        <link href="https://github.com/advisories/GHSA-hcr5-wv4p-h2g2"/>
        <updated>2025-02-05T16:28:49.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p><em>What kind of vulnerability is it? Who is impacted?</em>
If the "full-elastic-stack" example vector configuration was used for a real cluster, the previous values of kubernetes secrets would have been disclosed in the audit messages.</p>
<h3 id="patches">Patches</h3>
<p><em>Has the problem been patched? What versions should users upgrade to?</em>
The example has been updated to fix this in commit 9df8886b4819409f566233adc7c3b7a43a4096ba</p>
<h3 id="workarounds">Workarounds</h3>
<p><em>Is there a way for users to fix or remediate the vulnerability without upgrading?</em>
Replace </p>
<pre><code class="language-yaml">
          if .request.requestKind.kind == "Secret" {
            del(.request.object.data)
            .request.object.data.redacted = "REDACTED"
            del(.request.oldObject.data)
            .request.oldObject.data.redacted = "REDACTED"
          }
</code></pre>
<p>In the vector "audit-files-json-parser-and-redaction" step
with</p>
<pre><code class="language-yaml">
          if .request.requestKind.kind == "Secret" {
            # Redact the secret data
            del(.request.object.data)
            .request.object.data.redacted = "REDACTED"
            del(.request.oldObject.data)
            .request.oldObject.data.redacted = "REDACTED"
            # Remove the previously set secret data - Not bothering to parse it as this annotation shouldn't ever be needed
            del(.request.object.metadata.annotations.["kubectl.kubernetes.io/last-applied-configuration"])
            del(.request.oldObject.metadata.annotations.["kubectl.kubernetes.io/last-applied-configuration"])
          }
</code></pre>
<h3 id="references">References</h3>
<p><em>Are there any links users can visit to find out more?</em></p>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/RichardoC/kube-audit-rest/security/advisories/GHSA-hcr5-wv4p-h2g2">https://github.com/RichardoC/kube-audit-rest/security/advisories/GHSA-hcr5-wv4p-h2g2</a></li>
<li><a href="https://github.com/RichardoC/kube-audit-rest/commit/db1aa5b867256b0a7bf206544c6981ab068b73dc">https://github.com/RichardoC/kube-audit-rest/commit/db1aa5b867256b0a7bf206544c6981ab068b73dc</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2025-24884">https://nvd.nist.gov/vuln/detail/CVE-2025-24884</a></li>
<li><a href="https://pkg.go.dev/vuln/GO-2025-3431">https://pkg.go.dev/vuln/GO-2025-3431</a></li>
<li><a href="https://github.com/advisories/GHSA-hcr5-wv4p-h2g2">https://github.com/advisories/GHSA-hcr5-wv4p-h2g2</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-hcr5-wv4p-h2g2</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2025-01-29T20:47:51.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/argoproj/argo-cd] Argo CD does not scrub secret values from patch errors]]></title>
        <id>https://github.com/advisories/GHSA-47g2-qmh2-749v</id>
        <link href="https://github.com/advisories/GHSA-47g2-qmh2-749v"/>
        <updated>2025-02-05T16:21:47.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>A vulnerability was discovered in Argo CD that exposed secret values in error messages and the diff view when an invalid Kubernetes Secret resource was synced from a repository. </p>
<p>The vulnerability assumes the user has write access to the repository and can exploit it, either intentionally or unintentionally, by committing an invalid Secret to repository and triggering a Sync. Once exploited, any user with read access to Argo CD can view the exposed secret data.</p>
<h3 id="patches">Patches</h3>
<p>A patch for this vulnerability is available in the following Argo CD versions:</p>
<ul>
<li>v2.13.4</li>
<li>v2.12.10</li>
<li>v2.11.13</li>
</ul>
<h3 id="workarounds">Workarounds</h3>
<p>There is no workaround other than upgrading.</p>
<h3 id="references">References</h3>
<p>Fixed with commit <a href="https://github.com/argoproj/argo-cd/commit/6f5537bdf15ddbaa0f27a1a678632ff0743e4107">https://github.com/argoproj/argo-cd/commit/6f5537bdf15ddbaa0f27a1a678632ff0743e4107</a> &amp; <a href="https://github.com/argoproj/gitops-engine/commit/7e21b91e9d0f64104c8a661f3f390c5e6d73ddca">https://github.com/argoproj/gitops-engine/commit/7e21b91e9d0f64104c8a661f3f390c5e6d73ddca</a></p>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/argoproj/argo-cd/security/advisories/GHSA-47g2-qmh2-749v">https://github.com/argoproj/argo-cd/security/advisories/GHSA-47g2-qmh2-749v</a></li>
<li><a href="https://github.com/argoproj/gitops-engine/security/advisories/GHSA-274v-mgcv-cm8j">https://github.com/argoproj/gitops-engine/security/advisories/GHSA-274v-mgcv-cm8j</a></li>
<li><a href="https://github.com/argoproj/argo-cd/commit/6f5537bdf15ddbaa0f27a1a678632ff0743e4107">https://github.com/argoproj/argo-cd/commit/6f5537bdf15ddbaa0f27a1a678632ff0743e4107</a></li>
<li><a href="https://github.com/argoproj/gitops-engine/commit/7e21b91e9d0f64104c8a661f3f390c5e6d73ddca">https://github.com/argoproj/gitops-engine/commit/7e21b91e9d0f64104c8a661f3f390c5e6d73ddca</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2025-23216">https://nvd.nist.gov/vuln/detail/CVE-2025-23216</a></li>
<li><a href="https://github.com/advisories/GHSA-47g2-qmh2-749v">https://github.com/advisories/GHSA-47g2-qmh2-749v</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-47g2-qmh2-749v</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2025-01-30T17:52:45.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/edgelesssys/marblerun] MarbleRun unauthenticated recovery allows Coordinator impersonation]]></title>
        <id>https://github.com/advisories/GHSA-w7wm-2425-7p2h</id>
        <link href="https://github.com/advisories/GHSA-w7wm-2425-7p2h"/>
        <updated>2025-02-04T21:23:48.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>During recovery, a Coordinator only verifies that a given recovery key decrypts the sealed state, not if this key was provided by a party with access to one of the recovery keys defined in the manifest.
This allows an attacker to manually craft a sealed state using their own recovery keys, and a manifest that does not match the rest of the state.</p>
<p>If network traffic is redirected from the legitimate coordinator to the attacker's Coordinator, a remote party is susceptible to impersonation if they verify the Coordinator without comparing the root certificate of the Coordinator against a trusted reference.</p>
<p>Under these circumstances, an attacker can trick a remote party into trusting the malicious Coordinator by presenting a manifest that does not match the actual state of the deployment.</p>
<p>This issue does <strong>not</strong> affect the following:</p>
<ul>
<li>secrets and state of the legitimate Coordinator instances</li>
<li>integrity of workloads</li>
<li>certificates chaining back to the legitimate Coordinator root certificate</li>
</ul>
<h3 id="patches">Patches</h3>
<p>The issue has been patched in <a href="https://github.com/edgelesssys/marblerun/releases/tag/v1.7.0"><code>v1.7.0</code></a>.</p>
<h3 id="workarounds">Workarounds</h3>
<p>Connections that purely authenticate based on a known Coordinator's root certificate, e.g. the one retrieved when using the <code>marblerun manifest set</code> CLI command, are not affected.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/edgelesssys/marblerun/security/advisories/GHSA-w7wm-2425-7p2h">https://github.com/edgelesssys/marblerun/security/advisories/GHSA-w7wm-2425-7p2h</a></li>
<li><a href="https://github.com/edgelesssys/marblerun/commit/e4864f9f1d0f12a4a7d28514da43bcc75603a5b5">https://github.com/edgelesssys/marblerun/commit/e4864f9f1d0f12a4a7d28514da43bcc75603a5b5</a></li>
<li><a href="https://github.com/edgelesssys/marblerun/releases/tag/v1.7.0">https://github.com/edgelesssys/marblerun/releases/tag/v1.7.0</a></li>
<li><a href="https://github.com/advisories/GHSA-w7wm-2425-7p2h">https://github.com/advisories/GHSA-w7wm-2425-7p2h</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-w7wm-2425-7p2h</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2025-02-04T21:23:48.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/CosmWasm/wasmvm/v2] wasmvm: Malicious smart contract can slow down block production]]></title>
        <id>https://github.com/advisories/GHSA-mx2j-7cmv-353c</id>
        <link href="https://github.com/advisories/GHSA-mx2j-7cmv-353c"/>
        <updated>2025-02-04T18:57:25.000Z</updated>
        <content type="html"><![CDATA[<h1 id="cwa-2025-002">CWA-2025-002</h1>
<p><strong>Severity</strong></p>
<p>Medium (Moderate + Likely)[^1]</p>
<p><strong>Affected versions:</strong></p>
<ul>
<li>wasmvm &gt;= 2.2.0, &lt; 2.2.2</li>
<li>wasmvm &gt;= 2.1.0, &lt; 2.1.5</li>
<li>wasmvm &gt;= 2.0.0, &lt; 2.0.6</li>
<li>wasmvm &lt; 1.5.8</li>
</ul>
<p><strong>Patched versions:</strong></p>
<ul>
<li>wasmvm 1.5.8, 2.0.6, 2.1.5, 2.2.2</li>
</ul>
<h2 id="description-of-the-bug">Description of the bug</h2>
<p>The vulnerability can be used to slow down block production. The attack requires a malicious contract,
so permissioned chains are unlikely to be affected.</p>
<p>(We'll add more detail once chains had a chance to upgrade.)</p>
<h2 id="patch">Patch</h2>
<ul>
<li>1.5: <a href="https://github.com/CosmWasm/cosmwasm/commit/2b7f2faa57a1efc8207455c37f87f1eee6035a27">https://github.com/CosmWasm/cosmwasm/commit/2b7f2faa57a1efc8207455c37f87f1eee6035a27</a></li>
<li>2.0: <a href="https://github.com/CosmWasm/cosmwasm/commit/d6143b0aff16a39bbea4be37597d8e9d9b213d3b">https://github.com/CosmWasm/cosmwasm/commit/d6143b0aff16a39bbea4be37597d8e9d9b213d3b</a></li>
<li>2.1: <a href="https://github.com/CosmWasm/cosmwasm/commit/f0c04c03cbe2557634c1bbcdc2ce203fe7caca58">https://github.com/CosmWasm/cosmwasm/commit/f0c04c03cbe2557634c1bbcdc2ce203fe7caca58</a></li>
<li>2.2: <a href="https://github.com/CosmWasm/cosmwasm/commit/a5d62f65b5eb947ebe40e2085b1c48a9d0a244d0">https://github.com/CosmWasm/cosmwasm/commit/a5d62f65b5eb947ebe40e2085b1c48a9d0a244d0</a></li>
</ul>
<h2 id="applying-the-patch">Applying the patch</h2>
<p>The patch will be shipped in releases of wasmvm. You can update more or less as follows:</p>
<ol>
<li>Check the current wasmvm version: <code>go list -m github.com/CosmWasm/wasmvm</code></li>
<li>Bump the <code>github.com/CosmWasm/wasmvm</code> dependency in your go.mod to one of the patched version
depending on which minor version you are on; <code>go mod tidy</code>; commit.</li>
<li>If you use the static libraries <code>libwasmvm_muslc.aarch64.a</code>/<code>libwasmvm_muslc.x86_64.a</code>, update them accordingly.</li>
<li>Check the updated wasmvm version: <code>go list -m github.com/CosmWasm/wasmvm</code> and ensure you see 1.5.8, 2.0.6, 2.1.5 or 2.2.2.</li>
<li>Follow your regular practices to deploy chain upgrades.</li>
</ol>
<p>The patch is consensus breaking and requires a coordinated upgrade.</p>
<h2 id="acknowledgement">Acknowledgement</h2>
<p>This issue was found by meadow101 who reported it to the Cosmos Bug Bounty Program on HackerOne.</p>
<p>If you believe you have found a bug in the Interchain Stack or would like to contribute to the
program by reporting a bug, please see <a href="https://hackerone.com/cosmos">https://hackerone.com/cosmos</a>.</p>
<h2 id="timeline">Timeline</h2>
<ul>
<li>2024-11-24: Confio receives a report through the Cosmos bug bounty program maintained by Amulet.</li>
<li>2024-12-20: Confio security contributors confirm the report.</li>
<li>2024-01-27: Confio developed the patch internally.</li>
<li>2025-02-04: Patch gets released.</li>
</ul>
<p>[^1]: following Amulet's Severity Classification Framework ACMv1.2: <a href="https://github.com/interchainio/security/blob/0295254e8645301ccb606d46108a45cede0a73e0/resources/CLASSIFICATION_MATRIX.md">https://github.com/interchainio/security/blob/0295254e8645301ccb606d46108a45cede0a73e0/resources/CLASSIFICATION_MATRIX.md</a></p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/CosmWasm/wasmvm/security/advisories/GHSA-mx2j-7cmv-353c">https://github.com/CosmWasm/wasmvm/security/advisories/GHSA-mx2j-7cmv-353c</a></li>
<li><a href="https://github.com/CosmWasm/cosmwasm/commit/2b7f2faa57a1efc8207455c37f87f1eee6035a27">https://github.com/CosmWasm/cosmwasm/commit/2b7f2faa57a1efc8207455c37f87f1eee6035a27</a></li>
<li><a href="https://github.com/CosmWasm/cosmwasm/commit/a5d62f65b5eb947ebe40e2085b1c48a9d0a244d0">https://github.com/CosmWasm/cosmwasm/commit/a5d62f65b5eb947ebe40e2085b1c48a9d0a244d0</a></li>
<li><a href="https://github.com/CosmWasm/cosmwasm/commit/d6143b0aff16a39bbea4be37597d8e9d9b213d3b">https://github.com/CosmWasm/cosmwasm/commit/d6143b0aff16a39bbea4be37597d8e9d9b213d3b</a></li>
<li><a href="https://github.com/CosmWasm/cosmwasm/commit/f0c04c03cbe2557634c1bbcdc2ce203fe7caca58">https://github.com/CosmWasm/cosmwasm/commit/f0c04c03cbe2557634c1bbcdc2ce203fe7caca58</a></li>
<li><a href="https://github.com/CosmWasm/advisories/blob/main/CWAs/CWA-2025-002.md">https://github.com/CosmWasm/advisories/blob/main/CWAs/CWA-2025-002.md</a></li>
<li><a href="https://github.com/advisories/GHSA-mx2j-7cmv-353c">https://github.com/advisories/GHSA-mx2j-7cmv-353c</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-mx2j-7cmv-353c</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2025-02-04T18:57:21.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/CosmWasm/wasmvm/v2] wasmvm: Malicious smart contract can slow down block production]]></title>
        <id>https://github.com/advisories/GHSA-mx2j-7cmv-353c</id>
        <link href="https://github.com/advisories/GHSA-mx2j-7cmv-353c"/>
        <updated>2025-02-04T18:57:25.000Z</updated>
        <content type="html"><![CDATA[<h1 id="cwa-2025-002">CWA-2025-002</h1>
<p><strong>Severity</strong></p>
<p>Medium (Moderate + Likely)[^1]</p>
<p><strong>Affected versions:</strong></p>
<ul>
<li>wasmvm &gt;= 2.2.0, &lt; 2.2.2</li>
<li>wasmvm &gt;= 2.1.0, &lt; 2.1.5</li>
<li>wasmvm &gt;= 2.0.0, &lt; 2.0.6</li>
<li>wasmvm &lt; 1.5.8</li>
</ul>
<p><strong>Patched versions:</strong></p>
<ul>
<li>wasmvm 1.5.8, 2.0.6, 2.1.5, 2.2.2</li>
</ul>
<h2 id="description-of-the-bug">Description of the bug</h2>
<p>The vulnerability can be used to slow down block production. The attack requires a malicious contract,
so permissioned chains are unlikely to be affected.</p>
<p>(We'll add more detail once chains had a chance to upgrade.)</p>
<h2 id="patch">Patch</h2>
<ul>
<li>1.5: <a href="https://github.com/CosmWasm/cosmwasm/commit/2b7f2faa57a1efc8207455c37f87f1eee6035a27">https://github.com/CosmWasm/cosmwasm/commit/2b7f2faa57a1efc8207455c37f87f1eee6035a27</a></li>
<li>2.0: <a href="https://github.com/CosmWasm/cosmwasm/commit/d6143b0aff16a39bbea4be37597d8e9d9b213d3b">https://github.com/CosmWasm/cosmwasm/commit/d6143b0aff16a39bbea4be37597d8e9d9b213d3b</a></li>
<li>2.1: <a href="https://github.com/CosmWasm/cosmwasm/commit/f0c04c03cbe2557634c1bbcdc2ce203fe7caca58">https://github.com/CosmWasm/cosmwasm/commit/f0c04c03cbe2557634c1bbcdc2ce203fe7caca58</a></li>
<li>2.2: <a href="https://github.com/CosmWasm/cosmwasm/commit/a5d62f65b5eb947ebe40e2085b1c48a9d0a244d0">https://github.com/CosmWasm/cosmwasm/commit/a5d62f65b5eb947ebe40e2085b1c48a9d0a244d0</a></li>
</ul>
<h2 id="applying-the-patch">Applying the patch</h2>
<p>The patch will be shipped in releases of wasmvm. You can update more or less as follows:</p>
<ol>
<li>Check the current wasmvm version: <code>go list -m github.com/CosmWasm/wasmvm</code></li>
<li>Bump the <code>github.com/CosmWasm/wasmvm</code> dependency in your go.mod to one of the patched version
depending on which minor version you are on; <code>go mod tidy</code>; commit.</li>
<li>If you use the static libraries <code>libwasmvm_muslc.aarch64.a</code>/<code>libwasmvm_muslc.x86_64.a</code>, update them accordingly.</li>
<li>Check the updated wasmvm version: <code>go list -m github.com/CosmWasm/wasmvm</code> and ensure you see 1.5.8, 2.0.6, 2.1.5 or 2.2.2.</li>
<li>Follow your regular practices to deploy chain upgrades.</li>
</ol>
<p>The patch is consensus breaking and requires a coordinated upgrade.</p>
<h2 id="acknowledgement">Acknowledgement</h2>
<p>This issue was found by meadow101 who reported it to the Cosmos Bug Bounty Program on HackerOne.</p>
<p>If you believe you have found a bug in the Interchain Stack or would like to contribute to the
program by reporting a bug, please see <a href="https://hackerone.com/cosmos">https://hackerone.com/cosmos</a>.</p>
<h2 id="timeline">Timeline</h2>
<ul>
<li>2024-11-24: Confio receives a report through the Cosmos bug bounty program maintained by Amulet.</li>
<li>2024-12-20: Confio security contributors confirm the report.</li>
<li>2024-01-27: Confio developed the patch internally.</li>
<li>2025-02-04: Patch gets released.</li>
</ul>
<p>[^1]: following Amulet's Severity Classification Framework ACMv1.2: <a href="https://github.com/interchainio/security/blob/0295254e8645301ccb606d46108a45cede0a73e0/resources/CLASSIFICATION_MATRIX.md">https://github.com/interchainio/security/blob/0295254e8645301ccb606d46108a45cede0a73e0/resources/CLASSIFICATION_MATRIX.md</a></p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/CosmWasm/wasmvm/security/advisories/GHSA-mx2j-7cmv-353c">https://github.com/CosmWasm/wasmvm/security/advisories/GHSA-mx2j-7cmv-353c</a></li>
<li><a href="https://github.com/CosmWasm/cosmwasm/commit/2b7f2faa57a1efc8207455c37f87f1eee6035a27">https://github.com/CosmWasm/cosmwasm/commit/2b7f2faa57a1efc8207455c37f87f1eee6035a27</a></li>
<li><a href="https://github.com/CosmWasm/cosmwasm/commit/a5d62f65b5eb947ebe40e2085b1c48a9d0a244d0">https://github.com/CosmWasm/cosmwasm/commit/a5d62f65b5eb947ebe40e2085b1c48a9d0a244d0</a></li>
<li><a href="https://github.com/CosmWasm/cosmwasm/commit/d6143b0aff16a39bbea4be37597d8e9d9b213d3b">https://github.com/CosmWasm/cosmwasm/commit/d6143b0aff16a39bbea4be37597d8e9d9b213d3b</a></li>
<li><a href="https://github.com/CosmWasm/cosmwasm/commit/f0c04c03cbe2557634c1bbcdc2ce203fe7caca58">https://github.com/CosmWasm/cosmwasm/commit/f0c04c03cbe2557634c1bbcdc2ce203fe7caca58</a></li>
<li><a href="https://github.com/CosmWasm/advisories/blob/main/CWAs/CWA-2025-002.md">https://github.com/CosmWasm/advisories/blob/main/CWAs/CWA-2025-002.md</a></li>
<li><a href="https://github.com/advisories/GHSA-mx2j-7cmv-353c">https://github.com/advisories/GHSA-mx2j-7cmv-353c</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-mx2j-7cmv-353c</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2025-02-04T18:57:21.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/CosmWasm/wasmvm/v2] wasmvm: Malicious smart contract can slow down block production]]></title>
        <id>https://github.com/advisories/GHSA-mx2j-7cmv-353c</id>
        <link href="https://github.com/advisories/GHSA-mx2j-7cmv-353c"/>
        <updated>2025-02-04T18:57:25.000Z</updated>
        <content type="html"><![CDATA[<h1 id="cwa-2025-002">CWA-2025-002</h1>
<p><strong>Severity</strong></p>
<p>Medium (Moderate + Likely)[^1]</p>
<p><strong>Affected versions:</strong></p>
<ul>
<li>wasmvm &gt;= 2.2.0, &lt; 2.2.2</li>
<li>wasmvm &gt;= 2.1.0, &lt; 2.1.5</li>
<li>wasmvm &gt;= 2.0.0, &lt; 2.0.6</li>
<li>wasmvm &lt; 1.5.8</li>
</ul>
<p><strong>Patched versions:</strong></p>
<ul>
<li>wasmvm 1.5.8, 2.0.6, 2.1.5, 2.2.2</li>
</ul>
<h2 id="description-of-the-bug">Description of the bug</h2>
<p>The vulnerability can be used to slow down block production. The attack requires a malicious contract,
so permissioned chains are unlikely to be affected.</p>
<p>(We'll add more detail once chains had a chance to upgrade.)</p>
<h2 id="patch">Patch</h2>
<ul>
<li>1.5: <a href="https://github.com/CosmWasm/cosmwasm/commit/2b7f2faa57a1efc8207455c37f87f1eee6035a27">https://github.com/CosmWasm/cosmwasm/commit/2b7f2faa57a1efc8207455c37f87f1eee6035a27</a></li>
<li>2.0: <a href="https://github.com/CosmWasm/cosmwasm/commit/d6143b0aff16a39bbea4be37597d8e9d9b213d3b">https://github.com/CosmWasm/cosmwasm/commit/d6143b0aff16a39bbea4be37597d8e9d9b213d3b</a></li>
<li>2.1: <a href="https://github.com/CosmWasm/cosmwasm/commit/f0c04c03cbe2557634c1bbcdc2ce203fe7caca58">https://github.com/CosmWasm/cosmwasm/commit/f0c04c03cbe2557634c1bbcdc2ce203fe7caca58</a></li>
<li>2.2: <a href="https://github.com/CosmWasm/cosmwasm/commit/a5d62f65b5eb947ebe40e2085b1c48a9d0a244d0">https://github.com/CosmWasm/cosmwasm/commit/a5d62f65b5eb947ebe40e2085b1c48a9d0a244d0</a></li>
</ul>
<h2 id="applying-the-patch">Applying the patch</h2>
<p>The patch will be shipped in releases of wasmvm. You can update more or less as follows:</p>
<ol>
<li>Check the current wasmvm version: <code>go list -m github.com/CosmWasm/wasmvm</code></li>
<li>Bump the <code>github.com/CosmWasm/wasmvm</code> dependency in your go.mod to one of the patched version
depending on which minor version you are on; <code>go mod tidy</code>; commit.</li>
<li>If you use the static libraries <code>libwasmvm_muslc.aarch64.a</code>/<code>libwasmvm_muslc.x86_64.a</code>, update them accordingly.</li>
<li>Check the updated wasmvm version: <code>go list -m github.com/CosmWasm/wasmvm</code> and ensure you see 1.5.8, 2.0.6, 2.1.5 or 2.2.2.</li>
<li>Follow your regular practices to deploy chain upgrades.</li>
</ol>
<p>The patch is consensus breaking and requires a coordinated upgrade.</p>
<h2 id="acknowledgement">Acknowledgement</h2>
<p>This issue was found by meadow101 who reported it to the Cosmos Bug Bounty Program on HackerOne.</p>
<p>If you believe you have found a bug in the Interchain Stack or would like to contribute to the
program by reporting a bug, please see <a href="https://hackerone.com/cosmos">https://hackerone.com/cosmos</a>.</p>
<h2 id="timeline">Timeline</h2>
<ul>
<li>2024-11-24: Confio receives a report through the Cosmos bug bounty program maintained by Amulet.</li>
<li>2024-12-20: Confio security contributors confirm the report.</li>
<li>2024-01-27: Confio developed the patch internally.</li>
<li>2025-02-04: Patch gets released.</li>
</ul>
<p>[^1]: following Amulet's Severity Classification Framework ACMv1.2: <a href="https://github.com/interchainio/security/blob/0295254e8645301ccb606d46108a45cede0a73e0/resources/CLASSIFICATION_MATRIX.md">https://github.com/interchainio/security/blob/0295254e8645301ccb606d46108a45cede0a73e0/resources/CLASSIFICATION_MATRIX.md</a></p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/CosmWasm/wasmvm/security/advisories/GHSA-mx2j-7cmv-353c">https://github.com/CosmWasm/wasmvm/security/advisories/GHSA-mx2j-7cmv-353c</a></li>
<li><a href="https://github.com/CosmWasm/cosmwasm/commit/2b7f2faa57a1efc8207455c37f87f1eee6035a27">https://github.com/CosmWasm/cosmwasm/commit/2b7f2faa57a1efc8207455c37f87f1eee6035a27</a></li>
<li><a href="https://github.com/CosmWasm/cosmwasm/commit/a5d62f65b5eb947ebe40e2085b1c48a9d0a244d0">https://github.com/CosmWasm/cosmwasm/commit/a5d62f65b5eb947ebe40e2085b1c48a9d0a244d0</a></li>
<li><a href="https://github.com/CosmWasm/cosmwasm/commit/d6143b0aff16a39bbea4be37597d8e9d9b213d3b">https://github.com/CosmWasm/cosmwasm/commit/d6143b0aff16a39bbea4be37597d8e9d9b213d3b</a></li>
<li><a href="https://github.com/CosmWasm/cosmwasm/commit/f0c04c03cbe2557634c1bbcdc2ce203fe7caca58">https://github.com/CosmWasm/cosmwasm/commit/f0c04c03cbe2557634c1bbcdc2ce203fe7caca58</a></li>
<li><a href="https://github.com/CosmWasm/advisories/blob/main/CWAs/CWA-2025-002.md">https://github.com/CosmWasm/advisories/blob/main/CWAs/CWA-2025-002.md</a></li>
<li><a href="https://github.com/advisories/GHSA-mx2j-7cmv-353c">https://github.com/advisories/GHSA-mx2j-7cmv-353c</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-mx2j-7cmv-353c</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2025-02-04T18:57:21.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/CosmWasm/wasmvm] wasmvm: Malicious smart contract can slow down block production]]></title>
        <id>https://github.com/advisories/GHSA-mx2j-7cmv-353c</id>
        <link href="https://github.com/advisories/GHSA-mx2j-7cmv-353c"/>
        <updated>2025-02-04T18:57:25.000Z</updated>
        <content type="html"><![CDATA[<h1 id="cwa-2025-002">CWA-2025-002</h1>
<p><strong>Severity</strong></p>
<p>Medium (Moderate + Likely)[^1]</p>
<p><strong>Affected versions:</strong></p>
<ul>
<li>wasmvm &gt;= 2.2.0, &lt; 2.2.2</li>
<li>wasmvm &gt;= 2.1.0, &lt; 2.1.5</li>
<li>wasmvm &gt;= 2.0.0, &lt; 2.0.6</li>
<li>wasmvm &lt; 1.5.8</li>
</ul>
<p><strong>Patched versions:</strong></p>
<ul>
<li>wasmvm 1.5.8, 2.0.6, 2.1.5, 2.2.2</li>
</ul>
<h2 id="description-of-the-bug">Description of the bug</h2>
<p>The vulnerability can be used to slow down block production. The attack requires a malicious contract,
so permissioned chains are unlikely to be affected.</p>
<p>(We'll add more detail once chains had a chance to upgrade.)</p>
<h2 id="patch">Patch</h2>
<ul>
<li>1.5: <a href="https://github.com/CosmWasm/cosmwasm/commit/2b7f2faa57a1efc8207455c37f87f1eee6035a27">https://github.com/CosmWasm/cosmwasm/commit/2b7f2faa57a1efc8207455c37f87f1eee6035a27</a></li>
<li>2.0: <a href="https://github.com/CosmWasm/cosmwasm/commit/d6143b0aff16a39bbea4be37597d8e9d9b213d3b">https://github.com/CosmWasm/cosmwasm/commit/d6143b0aff16a39bbea4be37597d8e9d9b213d3b</a></li>
<li>2.1: <a href="https://github.com/CosmWasm/cosmwasm/commit/f0c04c03cbe2557634c1bbcdc2ce203fe7caca58">https://github.com/CosmWasm/cosmwasm/commit/f0c04c03cbe2557634c1bbcdc2ce203fe7caca58</a></li>
<li>2.2: <a href="https://github.com/CosmWasm/cosmwasm/commit/a5d62f65b5eb947ebe40e2085b1c48a9d0a244d0">https://github.com/CosmWasm/cosmwasm/commit/a5d62f65b5eb947ebe40e2085b1c48a9d0a244d0</a></li>
</ul>
<h2 id="applying-the-patch">Applying the patch</h2>
<p>The patch will be shipped in releases of wasmvm. You can update more or less as follows:</p>
<ol>
<li>Check the current wasmvm version: <code>go list -m github.com/CosmWasm/wasmvm</code></li>
<li>Bump the <code>github.com/CosmWasm/wasmvm</code> dependency in your go.mod to one of the patched version
depending on which minor version you are on; <code>go mod tidy</code>; commit.</li>
<li>If you use the static libraries <code>libwasmvm_muslc.aarch64.a</code>/<code>libwasmvm_muslc.x86_64.a</code>, update them accordingly.</li>
<li>Check the updated wasmvm version: <code>go list -m github.com/CosmWasm/wasmvm</code> and ensure you see 1.5.8, 2.0.6, 2.1.5 or 2.2.2.</li>
<li>Follow your regular practices to deploy chain upgrades.</li>
</ol>
<p>The patch is consensus breaking and requires a coordinated upgrade.</p>
<h2 id="acknowledgement">Acknowledgement</h2>
<p>This issue was found by meadow101 who reported it to the Cosmos Bug Bounty Program on HackerOne.</p>
<p>If you believe you have found a bug in the Interchain Stack or would like to contribute to the
program by reporting a bug, please see <a href="https://hackerone.com/cosmos">https://hackerone.com/cosmos</a>.</p>
<h2 id="timeline">Timeline</h2>
<ul>
<li>2024-11-24: Confio receives a report through the Cosmos bug bounty program maintained by Amulet.</li>
<li>2024-12-20: Confio security contributors confirm the report.</li>
<li>2024-01-27: Confio developed the patch internally.</li>
<li>2025-02-04: Patch gets released.</li>
</ul>
<p>[^1]: following Amulet's Severity Classification Framework ACMv1.2: <a href="https://github.com/interchainio/security/blob/0295254e8645301ccb606d46108a45cede0a73e0/resources/CLASSIFICATION_MATRIX.md">https://github.com/interchainio/security/blob/0295254e8645301ccb606d46108a45cede0a73e0/resources/CLASSIFICATION_MATRIX.md</a></p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/CosmWasm/wasmvm/security/advisories/GHSA-mx2j-7cmv-353c">https://github.com/CosmWasm/wasmvm/security/advisories/GHSA-mx2j-7cmv-353c</a></li>
<li><a href="https://github.com/CosmWasm/cosmwasm/commit/2b7f2faa57a1efc8207455c37f87f1eee6035a27">https://github.com/CosmWasm/cosmwasm/commit/2b7f2faa57a1efc8207455c37f87f1eee6035a27</a></li>
<li><a href="https://github.com/CosmWasm/cosmwasm/commit/a5d62f65b5eb947ebe40e2085b1c48a9d0a244d0">https://github.com/CosmWasm/cosmwasm/commit/a5d62f65b5eb947ebe40e2085b1c48a9d0a244d0</a></li>
<li><a href="https://github.com/CosmWasm/cosmwasm/commit/d6143b0aff16a39bbea4be37597d8e9d9b213d3b">https://github.com/CosmWasm/cosmwasm/commit/d6143b0aff16a39bbea4be37597d8e9d9b213d3b</a></li>
<li><a href="https://github.com/CosmWasm/cosmwasm/commit/f0c04c03cbe2557634c1bbcdc2ce203fe7caca58">https://github.com/CosmWasm/cosmwasm/commit/f0c04c03cbe2557634c1bbcdc2ce203fe7caca58</a></li>
<li><a href="https://github.com/CosmWasm/advisories/blob/main/CWAs/CWA-2025-002.md">https://github.com/CosmWasm/advisories/blob/main/CWAs/CWA-2025-002.md</a></li>
<li><a href="https://github.com/advisories/GHSA-mx2j-7cmv-353c">https://github.com/advisories/GHSA-mx2j-7cmv-353c</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-mx2j-7cmv-353c</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2025-02-04T18:57:21.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/CosmWasm/wasmvm/v2] wasmvm: Malicious smart contract can crash the chain]]></title>
        <id>https://github.com/advisories/GHSA-23qp-3c2m-xx6w</id>
        <link href="https://github.com/advisories/GHSA-23qp-3c2m-xx6w"/>
        <updated>2025-02-04T18:54:14.000Z</updated>
        <content type="html"><![CDATA[<h1 id="cwa-2025-001">CWA-2025-001</h1>
<p><strong>Severity</strong></p>
<p>Medium (Moderate + Likely)[^1]</p>
<p><strong>Affected versions:</strong></p>
<ul>
<li>wasmvm &gt;= 2.2.0, &lt; 2.2.2</li>
<li>wasmvm &gt;= 2.1.0, &lt; 2.1.5</li>
<li>wasmvm &gt;= 2.0.0, &lt; 2.0.6</li>
<li>wasmvm &lt; 1.5.8</li>
</ul>
<p><strong>Patched versions:</strong></p>
<ul>
<li>wasmvm 1.5.8, 2.0.6, 2.1.5, 2.2.2</li>
</ul>
<h2 id="description-of-the-bug">Description of the bug</h2>
<p>The vulnerability can be used to crash the chain. The underlying bug that causes this is present on both permissioned and premissionless chains, but it can only be triggered <em>reliably</em> with a malicious contract, so permissioned chains are much less likely to be affected.</p>
<p>(We'll add more detail once chains had a chance to upgrade.)</p>
<h2 id="patch">Patch</h2>
<ul>
<li>1.5: <a href="https://github.com/CosmWasm/wasmvm/commit/1151bc6df7d02d1889b8da37cf8510eaf4198eea">https://github.com/CosmWasm/wasmvm/commit/1151bc6df7d02d1889b8da37cf8510eaf4198eea</a></li>
<li>2.0: <a href="https://github.com/CosmWasm/wasmvm/commit/d4ff2adee44e6b9f7415a5dfbb3de745ab9b7678">https://github.com/CosmWasm/wasmvm/commit/d4ff2adee44e6b9f7415a5dfbb3de745ab9b7678</a></li>
<li>2.1: <a href="https://github.com/CosmWasm/wasmvm/commit/8d44a286fabc793a2fba93752e58cd0fd5b88a2d">https://github.com/CosmWasm/wasmvm/commit/8d44a286fabc793a2fba93752e58cd0fd5b88a2d</a></li>
<li>2.2: <a href="https://github.com/CosmWasm/wasmvm/commit/0aefa4c378457aeb3c07e7975b875be38872c56d">https://github.com/CosmWasm/wasmvm/commit/0aefa4c378457aeb3c07e7975b875be38872c56d</a></li>
</ul>
<h2 id="applying-the-patch">Applying the patch</h2>
<p>The patch will be shipped in releases of wasmvm. You can update more or less as follows:</p>
<ol>
<li>Check the current wasmvm version: <code>go list -m github.com/CosmWasm/wasmvm</code></li>
<li>Bump the <code>github.com/CosmWasm/wasmvm</code> dependency in your go.mod to one of the patched version
depending on which minor version you are on; <code>go mod tidy</code>; commit.</li>
<li>If you use the static libraries <code>libwasmvm_muslc.aarch64.a</code>/<code>libwasmvm_muslc.x86_64.a</code>, update them accordingly.</li>
<li>Check the updated wasmvm version: <code>go list -m github.com/CosmWasm/wasmvm</code> and ensure you see 1.5.8, 2.0.6, 2.1.5 or 2.2.2.</li>
<li>Follow your regular practices to deploy chain upgrades.</li>
</ol>
<p>While the fix for this issue is not consensus breaking, the patch contains another
consensus breaking fix and requires a coordinated upgrade.</p>
<h2 id="acknowledgement">Acknowledgement</h2>
<p>This issue was found by meadow101 who reported it to the Cosmos Bug Bounty Program on HackerOne.</p>
<p>If you believe you have found a bug in the Interchain Stack or would like to contribute to the
program by reporting a bug, please see <a href="https://hackerone.com/cosmos">https://hackerone.com/cosmos</a>.</p>
<h2 id="timeline">Timeline</h2>
<ul>
<li>2024-11-25: Confio receives a report through the Cosmos bug bounty program maintained by Amulet.</li>
<li>2024-11-28: Confio security contributors confirm the report.</li>
<li>2024-11-28: Confio developed the patch internally.</li>
<li>2025-02-04: Patch gets released.</li>
</ul>
<p>[^1]: following Amulet's Severity Classification Framework ACMv1.2: <a href="https://github.com/interchainio/security/blob/0295254e8645301ccb606d46108a45cede0a73e0/resources/CLASSIFICATION_MATRIX.md">https://github.com/interchainio/security/blob/0295254e8645301ccb606d46108a45cede0a73e0/resources/CLASSIFICATION_MATRIX.md</a></p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/CosmWasm/wasmvm/security/advisories/GHSA-23qp-3c2m-xx6w">https://github.com/CosmWasm/wasmvm/security/advisories/GHSA-23qp-3c2m-xx6w</a></li>
<li><a href="https://github.com/CosmWasm/wasmvm/commit/0aefa4c378457aeb3c07e7975b875be38872c56d">https://github.com/CosmWasm/wasmvm/commit/0aefa4c378457aeb3c07e7975b875be38872c56d</a></li>
<li><a href="https://github.com/CosmWasm/wasmvm/commit/1151bc6df7d02d1889b8da37cf8510eaf4198eea">https://github.com/CosmWasm/wasmvm/commit/1151bc6df7d02d1889b8da37cf8510eaf4198eea</a></li>
<li><a href="https://github.com/CosmWasm/wasmvm/commit/8d44a286fabc793a2fba93752e58cd0fd5b88a2d">https://github.com/CosmWasm/wasmvm/commit/8d44a286fabc793a2fba93752e58cd0fd5b88a2d</a></li>
<li><a href="https://github.com/CosmWasm/wasmvm/commit/d4ff2adee44e6b9f7415a5dfbb3de745ab9b7678">https://github.com/CosmWasm/wasmvm/commit/d4ff2adee44e6b9f7415a5dfbb3de745ab9b7678</a></li>
<li><a href="https://github.com/CosmWasm/advisories/blob/main/CWAs/CWA-2025-001.md">https://github.com/CosmWasm/advisories/blob/main/CWAs/CWA-2025-001.md</a></li>
<li><a href="https://github.com/advisories/GHSA-23qp-3c2m-xx6w">https://github.com/advisories/GHSA-23qp-3c2m-xx6w</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-23qp-3c2m-xx6w</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2025-02-04T18:54:13.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/CosmWasm/wasmvm/v2] wasmvm: Malicious smart contract can crash the chain]]></title>
        <id>https://github.com/advisories/GHSA-23qp-3c2m-xx6w</id>
        <link href="https://github.com/advisories/GHSA-23qp-3c2m-xx6w"/>
        <updated>2025-02-04T18:54:14.000Z</updated>
        <content type="html"><![CDATA[<h1 id="cwa-2025-001">CWA-2025-001</h1>
<p><strong>Severity</strong></p>
<p>Medium (Moderate + Likely)[^1]</p>
<p><strong>Affected versions:</strong></p>
<ul>
<li>wasmvm &gt;= 2.2.0, &lt; 2.2.2</li>
<li>wasmvm &gt;= 2.1.0, &lt; 2.1.5</li>
<li>wasmvm &gt;= 2.0.0, &lt; 2.0.6</li>
<li>wasmvm &lt; 1.5.8</li>
</ul>
<p><strong>Patched versions:</strong></p>
<ul>
<li>wasmvm 1.5.8, 2.0.6, 2.1.5, 2.2.2</li>
</ul>
<h2 id="description-of-the-bug">Description of the bug</h2>
<p>The vulnerability can be used to crash the chain. The underlying bug that causes this is present on both permissioned and premissionless chains, but it can only be triggered <em>reliably</em> with a malicious contract, so permissioned chains are much less likely to be affected.</p>
<p>(We'll add more detail once chains had a chance to upgrade.)</p>
<h2 id="patch">Patch</h2>
<ul>
<li>1.5: <a href="https://github.com/CosmWasm/wasmvm/commit/1151bc6df7d02d1889b8da37cf8510eaf4198eea">https://github.com/CosmWasm/wasmvm/commit/1151bc6df7d02d1889b8da37cf8510eaf4198eea</a></li>
<li>2.0: <a href="https://github.com/CosmWasm/wasmvm/commit/d4ff2adee44e6b9f7415a5dfbb3de745ab9b7678">https://github.com/CosmWasm/wasmvm/commit/d4ff2adee44e6b9f7415a5dfbb3de745ab9b7678</a></li>
<li>2.1: <a href="https://github.com/CosmWasm/wasmvm/commit/8d44a286fabc793a2fba93752e58cd0fd5b88a2d">https://github.com/CosmWasm/wasmvm/commit/8d44a286fabc793a2fba93752e58cd0fd5b88a2d</a></li>
<li>2.2: <a href="https://github.com/CosmWasm/wasmvm/commit/0aefa4c378457aeb3c07e7975b875be38872c56d">https://github.com/CosmWasm/wasmvm/commit/0aefa4c378457aeb3c07e7975b875be38872c56d</a></li>
</ul>
<h2 id="applying-the-patch">Applying the patch</h2>
<p>The patch will be shipped in releases of wasmvm. You can update more or less as follows:</p>
<ol>
<li>Check the current wasmvm version: <code>go list -m github.com/CosmWasm/wasmvm</code></li>
<li>Bump the <code>github.com/CosmWasm/wasmvm</code> dependency in your go.mod to one of the patched version
depending on which minor version you are on; <code>go mod tidy</code>; commit.</li>
<li>If you use the static libraries <code>libwasmvm_muslc.aarch64.a</code>/<code>libwasmvm_muslc.x86_64.a</code>, update them accordingly.</li>
<li>Check the updated wasmvm version: <code>go list -m github.com/CosmWasm/wasmvm</code> and ensure you see 1.5.8, 2.0.6, 2.1.5 or 2.2.2.</li>
<li>Follow your regular practices to deploy chain upgrades.</li>
</ol>
<p>While the fix for this issue is not consensus breaking, the patch contains another
consensus breaking fix and requires a coordinated upgrade.</p>
<h2 id="acknowledgement">Acknowledgement</h2>
<p>This issue was found by meadow101 who reported it to the Cosmos Bug Bounty Program on HackerOne.</p>
<p>If you believe you have found a bug in the Interchain Stack or would like to contribute to the
program by reporting a bug, please see <a href="https://hackerone.com/cosmos">https://hackerone.com/cosmos</a>.</p>
<h2 id="timeline">Timeline</h2>
<ul>
<li>2024-11-25: Confio receives a report through the Cosmos bug bounty program maintained by Amulet.</li>
<li>2024-11-28: Confio security contributors confirm the report.</li>
<li>2024-11-28: Confio developed the patch internally.</li>
<li>2025-02-04: Patch gets released.</li>
</ul>
<p>[^1]: following Amulet's Severity Classification Framework ACMv1.2: <a href="https://github.com/interchainio/security/blob/0295254e8645301ccb606d46108a45cede0a73e0/resources/CLASSIFICATION_MATRIX.md">https://github.com/interchainio/security/blob/0295254e8645301ccb606d46108a45cede0a73e0/resources/CLASSIFICATION_MATRIX.md</a></p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/CosmWasm/wasmvm/security/advisories/GHSA-23qp-3c2m-xx6w">https://github.com/CosmWasm/wasmvm/security/advisories/GHSA-23qp-3c2m-xx6w</a></li>
<li><a href="https://github.com/CosmWasm/wasmvm/commit/0aefa4c378457aeb3c07e7975b875be38872c56d">https://github.com/CosmWasm/wasmvm/commit/0aefa4c378457aeb3c07e7975b875be38872c56d</a></li>
<li><a href="https://github.com/CosmWasm/wasmvm/commit/1151bc6df7d02d1889b8da37cf8510eaf4198eea">https://github.com/CosmWasm/wasmvm/commit/1151bc6df7d02d1889b8da37cf8510eaf4198eea</a></li>
<li><a href="https://github.com/CosmWasm/wasmvm/commit/8d44a286fabc793a2fba93752e58cd0fd5b88a2d">https://github.com/CosmWasm/wasmvm/commit/8d44a286fabc793a2fba93752e58cd0fd5b88a2d</a></li>
<li><a href="https://github.com/CosmWasm/wasmvm/commit/d4ff2adee44e6b9f7415a5dfbb3de745ab9b7678">https://github.com/CosmWasm/wasmvm/commit/d4ff2adee44e6b9f7415a5dfbb3de745ab9b7678</a></li>
<li><a href="https://github.com/CosmWasm/advisories/blob/main/CWAs/CWA-2025-001.md">https://github.com/CosmWasm/advisories/blob/main/CWAs/CWA-2025-001.md</a></li>
<li><a href="https://github.com/advisories/GHSA-23qp-3c2m-xx6w">https://github.com/advisories/GHSA-23qp-3c2m-xx6w</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-23qp-3c2m-xx6w</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2025-02-04T18:54:13.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/CosmWasm/wasmvm/v2] wasmvm: Malicious smart contract can crash the chain]]></title>
        <id>https://github.com/advisories/GHSA-23qp-3c2m-xx6w</id>
        <link href="https://github.com/advisories/GHSA-23qp-3c2m-xx6w"/>
        <updated>2025-02-04T18:54:14.000Z</updated>
        <content type="html"><![CDATA[<h1 id="cwa-2025-001">CWA-2025-001</h1>
<p><strong>Severity</strong></p>
<p>Medium (Moderate + Likely)[^1]</p>
<p><strong>Affected versions:</strong></p>
<ul>
<li>wasmvm &gt;= 2.2.0, &lt; 2.2.2</li>
<li>wasmvm &gt;= 2.1.0, &lt; 2.1.5</li>
<li>wasmvm &gt;= 2.0.0, &lt; 2.0.6</li>
<li>wasmvm &lt; 1.5.8</li>
</ul>
<p><strong>Patched versions:</strong></p>
<ul>
<li>wasmvm 1.5.8, 2.0.6, 2.1.5, 2.2.2</li>
</ul>
<h2 id="description-of-the-bug">Description of the bug</h2>
<p>The vulnerability can be used to crash the chain. The underlying bug that causes this is present on both permissioned and premissionless chains, but it can only be triggered <em>reliably</em> with a malicious contract, so permissioned chains are much less likely to be affected.</p>
<p>(We'll add more detail once chains had a chance to upgrade.)</p>
<h2 id="patch">Patch</h2>
<ul>
<li>1.5: <a href="https://github.com/CosmWasm/wasmvm/commit/1151bc6df7d02d1889b8da37cf8510eaf4198eea">https://github.com/CosmWasm/wasmvm/commit/1151bc6df7d02d1889b8da37cf8510eaf4198eea</a></li>
<li>2.0: <a href="https://github.com/CosmWasm/wasmvm/commit/d4ff2adee44e6b9f7415a5dfbb3de745ab9b7678">https://github.com/CosmWasm/wasmvm/commit/d4ff2adee44e6b9f7415a5dfbb3de745ab9b7678</a></li>
<li>2.1: <a href="https://github.com/CosmWasm/wasmvm/commit/8d44a286fabc793a2fba93752e58cd0fd5b88a2d">https://github.com/CosmWasm/wasmvm/commit/8d44a286fabc793a2fba93752e58cd0fd5b88a2d</a></li>
<li>2.2: <a href="https://github.com/CosmWasm/wasmvm/commit/0aefa4c378457aeb3c07e7975b875be38872c56d">https://github.com/CosmWasm/wasmvm/commit/0aefa4c378457aeb3c07e7975b875be38872c56d</a></li>
</ul>
<h2 id="applying-the-patch">Applying the patch</h2>
<p>The patch will be shipped in releases of wasmvm. You can update more or less as follows:</p>
<ol>
<li>Check the current wasmvm version: <code>go list -m github.com/CosmWasm/wasmvm</code></li>
<li>Bump the <code>github.com/CosmWasm/wasmvm</code> dependency in your go.mod to one of the patched version
depending on which minor version you are on; <code>go mod tidy</code>; commit.</li>
<li>If you use the static libraries <code>libwasmvm_muslc.aarch64.a</code>/<code>libwasmvm_muslc.x86_64.a</code>, update them accordingly.</li>
<li>Check the updated wasmvm version: <code>go list -m github.com/CosmWasm/wasmvm</code> and ensure you see 1.5.8, 2.0.6, 2.1.5 or 2.2.2.</li>
<li>Follow your regular practices to deploy chain upgrades.</li>
</ol>
<p>While the fix for this issue is not consensus breaking, the patch contains another
consensus breaking fix and requires a coordinated upgrade.</p>
<h2 id="acknowledgement">Acknowledgement</h2>
<p>This issue was found by meadow101 who reported it to the Cosmos Bug Bounty Program on HackerOne.</p>
<p>If you believe you have found a bug in the Interchain Stack or would like to contribute to the
program by reporting a bug, please see <a href="https://hackerone.com/cosmos">https://hackerone.com/cosmos</a>.</p>
<h2 id="timeline">Timeline</h2>
<ul>
<li>2024-11-25: Confio receives a report through the Cosmos bug bounty program maintained by Amulet.</li>
<li>2024-11-28: Confio security contributors confirm the report.</li>
<li>2024-11-28: Confio developed the patch internally.</li>
<li>2025-02-04: Patch gets released.</li>
</ul>
<p>[^1]: following Amulet's Severity Classification Framework ACMv1.2: <a href="https://github.com/interchainio/security/blob/0295254e8645301ccb606d46108a45cede0a73e0/resources/CLASSIFICATION_MATRIX.md">https://github.com/interchainio/security/blob/0295254e8645301ccb606d46108a45cede0a73e0/resources/CLASSIFICATION_MATRIX.md</a></p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/CosmWasm/wasmvm/security/advisories/GHSA-23qp-3c2m-xx6w">https://github.com/CosmWasm/wasmvm/security/advisories/GHSA-23qp-3c2m-xx6w</a></li>
<li><a href="https://github.com/CosmWasm/wasmvm/commit/0aefa4c378457aeb3c07e7975b875be38872c56d">https://github.com/CosmWasm/wasmvm/commit/0aefa4c378457aeb3c07e7975b875be38872c56d</a></li>
<li><a href="https://github.com/CosmWasm/wasmvm/commit/1151bc6df7d02d1889b8da37cf8510eaf4198eea">https://github.com/CosmWasm/wasmvm/commit/1151bc6df7d02d1889b8da37cf8510eaf4198eea</a></li>
<li><a href="https://github.com/CosmWasm/wasmvm/commit/8d44a286fabc793a2fba93752e58cd0fd5b88a2d">https://github.com/CosmWasm/wasmvm/commit/8d44a286fabc793a2fba93752e58cd0fd5b88a2d</a></li>
<li><a href="https://github.com/CosmWasm/wasmvm/commit/d4ff2adee44e6b9f7415a5dfbb3de745ab9b7678">https://github.com/CosmWasm/wasmvm/commit/d4ff2adee44e6b9f7415a5dfbb3de745ab9b7678</a></li>
<li><a href="https://github.com/CosmWasm/advisories/blob/main/CWAs/CWA-2025-001.md">https://github.com/CosmWasm/advisories/blob/main/CWAs/CWA-2025-001.md</a></li>
<li><a href="https://github.com/advisories/GHSA-23qp-3c2m-xx6w">https://github.com/advisories/GHSA-23qp-3c2m-xx6w</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-23qp-3c2m-xx6w</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2025-02-04T18:54:13.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/CosmWasm/wasmvm] wasmvm: Malicious smart contract can crash the chain]]></title>
        <id>https://github.com/advisories/GHSA-23qp-3c2m-xx6w</id>
        <link href="https://github.com/advisories/GHSA-23qp-3c2m-xx6w"/>
        <updated>2025-02-04T18:54:14.000Z</updated>
        <content type="html"><![CDATA[<h1 id="cwa-2025-001">CWA-2025-001</h1>
<p><strong>Severity</strong></p>
<p>Medium (Moderate + Likely)[^1]</p>
<p><strong>Affected versions:</strong></p>
<ul>
<li>wasmvm &gt;= 2.2.0, &lt; 2.2.2</li>
<li>wasmvm &gt;= 2.1.0, &lt; 2.1.5</li>
<li>wasmvm &gt;= 2.0.0, &lt; 2.0.6</li>
<li>wasmvm &lt; 1.5.8</li>
</ul>
<p><strong>Patched versions:</strong></p>
<ul>
<li>wasmvm 1.5.8, 2.0.6, 2.1.5, 2.2.2</li>
</ul>
<h2 id="description-of-the-bug">Description of the bug</h2>
<p>The vulnerability can be used to crash the chain. The underlying bug that causes this is present on both permissioned and premissionless chains, but it can only be triggered <em>reliably</em> with a malicious contract, so permissioned chains are much less likely to be affected.</p>
<p>(We'll add more detail once chains had a chance to upgrade.)</p>
<h2 id="patch">Patch</h2>
<ul>
<li>1.5: <a href="https://github.com/CosmWasm/wasmvm/commit/1151bc6df7d02d1889b8da37cf8510eaf4198eea">https://github.com/CosmWasm/wasmvm/commit/1151bc6df7d02d1889b8da37cf8510eaf4198eea</a></li>
<li>2.0: <a href="https://github.com/CosmWasm/wasmvm/commit/d4ff2adee44e6b9f7415a5dfbb3de745ab9b7678">https://github.com/CosmWasm/wasmvm/commit/d4ff2adee44e6b9f7415a5dfbb3de745ab9b7678</a></li>
<li>2.1: <a href="https://github.com/CosmWasm/wasmvm/commit/8d44a286fabc793a2fba93752e58cd0fd5b88a2d">https://github.com/CosmWasm/wasmvm/commit/8d44a286fabc793a2fba93752e58cd0fd5b88a2d</a></li>
<li>2.2: <a href="https://github.com/CosmWasm/wasmvm/commit/0aefa4c378457aeb3c07e7975b875be38872c56d">https://github.com/CosmWasm/wasmvm/commit/0aefa4c378457aeb3c07e7975b875be38872c56d</a></li>
</ul>
<h2 id="applying-the-patch">Applying the patch</h2>
<p>The patch will be shipped in releases of wasmvm. You can update more or less as follows:</p>
<ol>
<li>Check the current wasmvm version: <code>go list -m github.com/CosmWasm/wasmvm</code></li>
<li>Bump the <code>github.com/CosmWasm/wasmvm</code> dependency in your go.mod to one of the patched version
depending on which minor version you are on; <code>go mod tidy</code>; commit.</li>
<li>If you use the static libraries <code>libwasmvm_muslc.aarch64.a</code>/<code>libwasmvm_muslc.x86_64.a</code>, update them accordingly.</li>
<li>Check the updated wasmvm version: <code>go list -m github.com/CosmWasm/wasmvm</code> and ensure you see 1.5.8, 2.0.6, 2.1.5 or 2.2.2.</li>
<li>Follow your regular practices to deploy chain upgrades.</li>
</ol>
<p>While the fix for this issue is not consensus breaking, the patch contains another
consensus breaking fix and requires a coordinated upgrade.</p>
<h2 id="acknowledgement">Acknowledgement</h2>
<p>This issue was found by meadow101 who reported it to the Cosmos Bug Bounty Program on HackerOne.</p>
<p>If you believe you have found a bug in the Interchain Stack or would like to contribute to the
program by reporting a bug, please see <a href="https://hackerone.com/cosmos">https://hackerone.com/cosmos</a>.</p>
<h2 id="timeline">Timeline</h2>
<ul>
<li>2024-11-25: Confio receives a report through the Cosmos bug bounty program maintained by Amulet.</li>
<li>2024-11-28: Confio security contributors confirm the report.</li>
<li>2024-11-28: Confio developed the patch internally.</li>
<li>2025-02-04: Patch gets released.</li>
</ul>
<p>[^1]: following Amulet's Severity Classification Framework ACMv1.2: <a href="https://github.com/interchainio/security/blob/0295254e8645301ccb606d46108a45cede0a73e0/resources/CLASSIFICATION_MATRIX.md">https://github.com/interchainio/security/blob/0295254e8645301ccb606d46108a45cede0a73e0/resources/CLASSIFICATION_MATRIX.md</a></p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/CosmWasm/wasmvm/security/advisories/GHSA-23qp-3c2m-xx6w">https://github.com/CosmWasm/wasmvm/security/advisories/GHSA-23qp-3c2m-xx6w</a></li>
<li><a href="https://github.com/CosmWasm/wasmvm/commit/0aefa4c378457aeb3c07e7975b875be38872c56d">https://github.com/CosmWasm/wasmvm/commit/0aefa4c378457aeb3c07e7975b875be38872c56d</a></li>
<li><a href="https://github.com/CosmWasm/wasmvm/commit/1151bc6df7d02d1889b8da37cf8510eaf4198eea">https://github.com/CosmWasm/wasmvm/commit/1151bc6df7d02d1889b8da37cf8510eaf4198eea</a></li>
<li><a href="https://github.com/CosmWasm/wasmvm/commit/8d44a286fabc793a2fba93752e58cd0fd5b88a2d">https://github.com/CosmWasm/wasmvm/commit/8d44a286fabc793a2fba93752e58cd0fd5b88a2d</a></li>
<li><a href="https://github.com/CosmWasm/wasmvm/commit/d4ff2adee44e6b9f7415a5dfbb3de745ab9b7678">https://github.com/CosmWasm/wasmvm/commit/d4ff2adee44e6b9f7415a5dfbb3de745ab9b7678</a></li>
<li><a href="https://github.com/CosmWasm/advisories/blob/main/CWAs/CWA-2025-001.md">https://github.com/CosmWasm/advisories/blob/main/CWAs/CWA-2025-001.md</a></li>
<li><a href="https://github.com/advisories/GHSA-23qp-3c2m-xx6w">https://github.com/advisories/GHSA-23qp-3c2m-xx6w</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-23qp-3c2m-xx6w</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2025-02-04T18:54:13.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/cometbft/cometbft] CometBFT allows a malicious peer to stall the network by disseminating seemingly valid block parts]]></title>
        <id>https://github.com/advisories/GHSA-r3r4-g7hq-pq4f</id>
        <link href="https://github.com/advisories/GHSA-r3r4-g7hq-pq4f"/>
        <updated>2025-02-05T16:34:59.000Z</updated>
        <content type="html"><![CDATA[<p>Name: ASA-2025-002: Malicious peer can stall network by disseminating seemingly valid block parts
Component: CometBFT
Criticality: High (Catastrophic Impact; Possible Likelihood per <a href="https://github.com/interchainio/security/blob/main/resources/CLASSIFICATION_MATRIX.md">ACMv1.2</a>)
Affected versions: &lt;= v0.38.16, v1.0.0
Affected users: Validators, Full nodes, Users</p>
<h3 id="description">Description</h3>
<p>A bug was identified in the CometBFT validation of block part indices and the corresponding proof part indices that can lead to incorrect processing and dissemination of invalid parts, which in turn could lead to a network halt. Additional validation was added to prevent this condition from happening.</p>
<h3 id="patches">Patches</h3>
<p>The new CometBFT releases <a href="https://github.com/cometbft/cometbft/releases/tag/v1.0.1">v1.0.1</a> and <a href="https://github.com/cometbft/cometbft/releases/tag/v0.38.17">v0.38.17</a> fix this issue.</p>
<p>Unreleased code in the main branch is patched as well.</p>
<h3 id="workarounds">Workarounds</h3>
<p>There are no known workarounds for this issue. If a node is producing these malicious proofs, the only mitigation is to upgrade CometBFT. After upgrading, the validators then will eventually conclude the correct value.</p>
<h3 id="technical-deep-dive">Technical Deep-Dive</h3>
<p>When the next proposer creates a block, it is split into many block parts (64kB each). Each block part is then disseminated via p2p layer in a gossip fashion. The block part contains the following fields:</p>
<pre><code class="language-go">type Part struct {
    Index uint32            `json:"index"`
    Bytes cmtbytes.HexBytes `json:"bytes"`
    Proof merkle.Proof      `json:"proof"`
}
</code></pre>
<ul>
<li><code>Index</code> - represents the index of a block part</li>
<li><code>Bytes</code> - the actual content</li>
<li><code>Proof</code> - Merkle proof, which allows the receiving node to quickly verify that a <code>Part</code> is indeed a piece of the proposed block.</li>
</ul>
<p>The <code>Proof</code> contains the following fields:</p>
<pre><code class="language-go">type Proof struct {
    Total    int64    `json:"total"`           // Total number of items.
    Index    int64    `json:"index"`           // Index of item to prove.
    LeafHash []byte   `json:"leaf_hash"`       // Hash of item value.
    Aunts    [][]byte `json:"aunts,omitempty"` // Hashes from leaf's sibling to a root's child.
}
</code></pre>
<p>Note that the total number of leaves in the Merkle tree equals the number of parts in the proposed block. Previously, CometBFT did not validate the <code>Index</code> field and specifically that <code>Part.Index</code> must be equal to <code>Part.Proof.Index</code>. This leads to a condition where, it is possible to use the proof from a different part and CometBFT accept it, even though the proof proves the different part is a piece of the proposed block and not the part that the peer actually sent to us.</p>
<p>This condition is problematic because: </p>
<ol>
<li>it would disseminate the invalid block part to its neighboring nodes (because it deemed it as correct)</li>
<li>it would mark the block part as received and ask the neighboring nodes not to relay it in the future, making it impossible to receive the correct block part.</li>
</ol>
<p>To address this, CometBFT was patched to verify that <code>Part.Index</code> is equal to <code>Part.Proof.Index</code>, preventing the above condition.</p>
<h3 id="timeline">Timeline</h3>
<ul>
<li>January 15, 2025, 12:12pm PST: Issue reported to the Cosmos Bug Bounty program</li>
<li>January 15, 2025, 12:31pm PST: Issue triaged by Amulet on-call, and distributed to Core team</li>
<li>January 27, 2025, 11:28pm PST: Core team completes validation of issue</li>
<li>January 31, 2024, 2:15pm PST: Pre-notification delivered</li>
<li>February 3rd, 2024, 9:00am UTC+4: Patch made available</li>
</ul>
<p>This issue was reported by <a href="https://github.com/unknownfeature">unknown_feature</a> to the Cosmos Bug Bounty Program on HackerOne on January 15, 2025. If you believe you have found a bug in the Interchain Stack or would like to contribute to the program by reporting a bug, please see <a href="https://hackerone.com/cosmos">https://hackerone.com/cosmos</a>.</p>
<p>If you have questions about Interchain security efforts, please reach out to our official communication channel at <a href="mailto:security@interchain.io">security@interchain.io</a>. For more information about the Interchain Foundation’s engagement with Amulet, and to sign up for security notification emails, please see <a href="https://github.com/interchainio/security">https://github.com/interchainio/security</a>.  </p>
<p>A Github Security Advisory for this issue is available in the CometBFT <a href="https://github.com/cometbft/cometbft/security/advisories/GHSA-r3r4-g7hq-pq4f">repository</a>. For more information about CometBFT, see <a href="https://docs.cometbft.com/">https://docs.cometbft.com/</a>.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/cometbft/cometbft/security/advisories/GHSA-r3r4-g7hq-pq4f">https://github.com/cometbft/cometbft/security/advisories/GHSA-r3r4-g7hq-pq4f</a></li>
<li><a href="https://github.com/cometbft/cometbft/commit/f943aabc7b9201ea1089ff3381479929435ce424">https://github.com/cometbft/cometbft/commit/f943aabc7b9201ea1089ff3381479929435ce424</a></li>
<li><a href="https://github.com/cometbft/cometbft/commit/415c0da223bb7694608913f725fa45bd7a7a46bf">https://github.com/cometbft/cometbft/commit/415c0da223bb7694608913f725fa45bd7a7a46bf</a></li>
<li><a href="https://pkg.go.dev/vuln/GO-2025-3443">https://pkg.go.dev/vuln/GO-2025-3443</a></li>
<li><a href="https://github.com/advisories/GHSA-r3r4-g7hq-pq4f">https://github.com/advisories/GHSA-r3r4-g7hq-pq4f</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-r3r4-g7hq-pq4f</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2025-02-03T16:48:59.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/cometbft/cometbft] CometBFT allows a malicious peer to stall the network by disseminating seemingly valid block parts]]></title>
        <id>https://github.com/advisories/GHSA-r3r4-g7hq-pq4f</id>
        <link href="https://github.com/advisories/GHSA-r3r4-g7hq-pq4f"/>
        <updated>2025-02-05T16:34:59.000Z</updated>
        <content type="html"><![CDATA[<p>Name: ASA-2025-002: Malicious peer can stall network by disseminating seemingly valid block parts
Component: CometBFT
Criticality: High (Catastrophic Impact; Possible Likelihood per <a href="https://github.com/interchainio/security/blob/main/resources/CLASSIFICATION_MATRIX.md">ACMv1.2</a>)
Affected versions: &lt;= v0.38.16, v1.0.0
Affected users: Validators, Full nodes, Users</p>
<h3 id="description">Description</h3>
<p>A bug was identified in the CometBFT validation of block part indices and the corresponding proof part indices that can lead to incorrect processing and dissemination of invalid parts, which in turn could lead to a network halt. Additional validation was added to prevent this condition from happening.</p>
<h3 id="patches">Patches</h3>
<p>The new CometBFT releases <a href="https://github.com/cometbft/cometbft/releases/tag/v1.0.1">v1.0.1</a> and <a href="https://github.com/cometbft/cometbft/releases/tag/v0.38.17">v0.38.17</a> fix this issue.</p>
<p>Unreleased code in the main branch is patched as well.</p>
<h3 id="workarounds">Workarounds</h3>
<p>There are no known workarounds for this issue. If a node is producing these malicious proofs, the only mitigation is to upgrade CometBFT. After upgrading, the validators then will eventually conclude the correct value.</p>
<h3 id="technical-deep-dive">Technical Deep-Dive</h3>
<p>When the next proposer creates a block, it is split into many block parts (64kB each). Each block part is then disseminated via p2p layer in a gossip fashion. The block part contains the following fields:</p>
<pre><code class="language-go">type Part struct {
    Index uint32            `json:"index"`
    Bytes cmtbytes.HexBytes `json:"bytes"`
    Proof merkle.Proof      `json:"proof"`
}
</code></pre>
<ul>
<li><code>Index</code> - represents the index of a block part</li>
<li><code>Bytes</code> - the actual content</li>
<li><code>Proof</code> - Merkle proof, which allows the receiving node to quickly verify that a <code>Part</code> is indeed a piece of the proposed block.</li>
</ul>
<p>The <code>Proof</code> contains the following fields:</p>
<pre><code class="language-go">type Proof struct {
    Total    int64    `json:"total"`           // Total number of items.
    Index    int64    `json:"index"`           // Index of item to prove.
    LeafHash []byte   `json:"leaf_hash"`       // Hash of item value.
    Aunts    [][]byte `json:"aunts,omitempty"` // Hashes from leaf's sibling to a root's child.
}
</code></pre>
<p>Note that the total number of leaves in the Merkle tree equals the number of parts in the proposed block. Previously, CometBFT did not validate the <code>Index</code> field and specifically that <code>Part.Index</code> must be equal to <code>Part.Proof.Index</code>. This leads to a condition where, it is possible to use the proof from a different part and CometBFT accept it, even though the proof proves the different part is a piece of the proposed block and not the part that the peer actually sent to us.</p>
<p>This condition is problematic because: </p>
<ol>
<li>it would disseminate the invalid block part to its neighboring nodes (because it deemed it as correct)</li>
<li>it would mark the block part as received and ask the neighboring nodes not to relay it in the future, making it impossible to receive the correct block part.</li>
</ol>
<p>To address this, CometBFT was patched to verify that <code>Part.Index</code> is equal to <code>Part.Proof.Index</code>, preventing the above condition.</p>
<h3 id="timeline">Timeline</h3>
<ul>
<li>January 15, 2025, 12:12pm PST: Issue reported to the Cosmos Bug Bounty program</li>
<li>January 15, 2025, 12:31pm PST: Issue triaged by Amulet on-call, and distributed to Core team</li>
<li>January 27, 2025, 11:28pm PST: Core team completes validation of issue</li>
<li>January 31, 2024, 2:15pm PST: Pre-notification delivered</li>
<li>February 3rd, 2024, 9:00am UTC+4: Patch made available</li>
</ul>
<p>This issue was reported by <a href="https://github.com/unknownfeature">unknown_feature</a> to the Cosmos Bug Bounty Program on HackerOne on January 15, 2025. If you believe you have found a bug in the Interchain Stack or would like to contribute to the program by reporting a bug, please see <a href="https://hackerone.com/cosmos">https://hackerone.com/cosmos</a>.</p>
<p>If you have questions about Interchain security efforts, please reach out to our official communication channel at <a href="mailto:security@interchain.io">security@interchain.io</a>. For more information about the Interchain Foundation’s engagement with Amulet, and to sign up for security notification emails, please see <a href="https://github.com/interchainio/security">https://github.com/interchainio/security</a>.  </p>
<p>A Github Security Advisory for this issue is available in the CometBFT <a href="https://github.com/cometbft/cometbft/security/advisories/GHSA-r3r4-g7hq-pq4f">repository</a>. For more information about CometBFT, see <a href="https://docs.cometbft.com/">https://docs.cometbft.com/</a>.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/cometbft/cometbft/security/advisories/GHSA-r3r4-g7hq-pq4f">https://github.com/cometbft/cometbft/security/advisories/GHSA-r3r4-g7hq-pq4f</a></li>
<li><a href="https://github.com/cometbft/cometbft/commit/f943aabc7b9201ea1089ff3381479929435ce424">https://github.com/cometbft/cometbft/commit/f943aabc7b9201ea1089ff3381479929435ce424</a></li>
<li><a href="https://github.com/cometbft/cometbft/commit/415c0da223bb7694608913f725fa45bd7a7a46bf">https://github.com/cometbft/cometbft/commit/415c0da223bb7694608913f725fa45bd7a7a46bf</a></li>
<li><a href="https://pkg.go.dev/vuln/GO-2025-3443">https://pkg.go.dev/vuln/GO-2025-3443</a></li>
<li><a href="https://github.com/advisories/GHSA-r3r4-g7hq-pq4f">https://github.com/advisories/GHSA-r3r4-g7hq-pq4f</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-r3r4-g7hq-pq4f</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2025-02-03T16:48:59.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/cometbft/cometbft] CometBFT allows a malicious peer to make node stuck in blocksync]]></title>
        <id>https://github.com/advisories/GHSA-22qq-3xwm-r5x4</id>
        <link href="https://github.com/advisories/GHSA-22qq-3xwm-r5x4"/>
        <updated>2025-02-05T16:32:34.000Z</updated>
        <content type="html"><![CDATA[<p>Name: ASA-2025-001: Malicious peer can disrupt node's ability to sync via blocksync
Component: CometBFT
Criticality: Medium (Considerable Impact; Possible Likelihood per <a href="https://github.com/interchainio/security/blob/main/resources/CLASSIFICATION_MATRIX.md">ACMv1.2</a>)
Affected versions: &lt;= v0.38.16, v1.0.0
Affected users: Validators, Full nodes</p>
<h3 id="impact">Impact</h3>
<p>A malicious peer may be able to interfere with a node's ability to sync blocks with peers via the blocksync mechanism. </p>
<p>In the <code>blocksync</code> protocol peers send their <code>base</code> and <code>latest</code> heights when they connect to a new node (<code>A</code>), which is syncing to the tip of a network. <code>base</code> acts as a lower ground and informs <code>A</code> that the peer only has blocks starting from height <code>base</code>. <code>latest</code> height informs <code>A</code> about the latest block in a network. Normally, nodes would only report increasing heights:</p>
<pre><code>B: {base: 100, latest: 1000}
B: {base: 100, latest: 1001}
B: {base: 100, latest: 1002}
...
</code></pre>
<p>If <code>B</code> fails to provide the latest block, <code>B</code> is removed and the <code>latest</code> height (target height) is recalculated based on other nodes <code>latest</code> heights.</p>
<p>The existing code hovewer doesn't check for the case where <code>B</code> first reports <code>latest</code> height <code>X</code> and immediately after height <code>Y</code>, where <code>X &gt; Y</code>. For example:</p>
<pre><code>B: {base: 100, latest: 2000}
B: {base: 100, latest: 1001}
B: {base: 100, latest: 1002}
...
</code></pre>
<p><code>A</code> will be trying to catch up to 2000 indefinitely. Even if <code>B</code> disconnects, the <code>latest</code> height (target height) won't be recalculated because <code>A</code> "doesn't know where 2000" came from per see.</p>
<h4 id="impact-qualification">Impact Qualification</h4>
<p>This condition requires the introduction of malicious code in the full node first reporting a non-existing <code>latest</code> height, then reporting lower <code>latest</code> height and nodes which are syncing using <code>blocksync</code> protocol.</p>
<h3 id="patches">Patches</h3>
<p>The new CometBFT releases <a href="https://github.com/cometbft/cometbft/releases/tag/v1.0.1">v1.0.1</a> and <a href="https://github.com/cometbft/cometbft/releases/tag/v0.38.17">v0.38.17</a> fix this issue.</p>
<p>Unreleased code in the main is patched as well.</p>
<h3 id="workarounds">Workarounds</h3>
<p>When the operator notices <code>blocksync</code> is stuck, they can identify the peer from which that message with "invalid" height was received. This may require increasing the logging level of the <code>blocksync</code> module. This peer can then be subsequently banned at the p2p layer as a temporary mitigation.</p>
<h3 id="references">References</h3>
<p>If you have questions about Interchain security efforts, please reach out to our official communication channel at <a href="mailto:security@interchain.io">security@interchain.io</a>.  For more information about the Interchain Foundation’s engagement with Amulet, and to sign up for security notification emails, please see <a href="https://github.com/interchainio/security">https://github.com/interchainio/security</a>.  </p>
<p>A Github Security Advisory for this issue is available in the CometBFT <a href="https://github.com/cometbft/cometbft/security/advisories/GHSA-22qq-3xwm-r5x4">repository</a>. For more information about CometBFT, see <a href="https://docs.cometbft.com/">https://docs.cometbft.com/</a>.</p>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/cometbft/cometbft/security/advisories/GHSA-22qq-3xwm-r5x4">https://github.com/cometbft/cometbft/security/advisories/GHSA-22qq-3xwm-r5x4</a></li>
<li><a href="https://github.com/cometbft/cometbft/commit/0ee80cd609c7ae9fe856bdd1c6d38553fdae90ce">https://github.com/cometbft/cometbft/commit/0ee80cd609c7ae9fe856bdd1c6d38553fdae90ce</a></li>
<li><a href="https://github.com/cometbft/cometbft/commit/2cebfde06ae5073c0b296a9d2ca6ab4b95397ea5">https://github.com/cometbft/cometbft/commit/2cebfde06ae5073c0b296a9d2ca6ab4b95397ea5</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2025-24371">https://nvd.nist.gov/vuln/detail/CVE-2025-24371</a></li>
<li><a href="https://github.com/cometbft/cometbft/releases/tag/v0.38.17">https://github.com/cometbft/cometbft/releases/tag/v0.38.17</a></li>
<li><a href="https://github.com/cometbft/cometbft/releases/tag/v1.0.1">https://github.com/cometbft/cometbft/releases/tag/v1.0.1</a></li>
<li><a href="https://pkg.go.dev/vuln/GO-2025-3442">https://pkg.go.dev/vuln/GO-2025-3442</a></li>
<li><a href="https://github.com/advisories/GHSA-22qq-3xwm-r5x4">https://github.com/advisories/GHSA-22qq-3xwm-r5x4</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-22qq-3xwm-r5x4</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2025-02-03T15:55:28.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/cometbft/cometbft] CometBFT allows a malicious peer to make node stuck in blocksync]]></title>
        <id>https://github.com/advisories/GHSA-22qq-3xwm-r5x4</id>
        <link href="https://github.com/advisories/GHSA-22qq-3xwm-r5x4"/>
        <updated>2025-02-05T16:32:34.000Z</updated>
        <content type="html"><![CDATA[<p>Name: ASA-2025-001: Malicious peer can disrupt node's ability to sync via blocksync
Component: CometBFT
Criticality: Medium (Considerable Impact; Possible Likelihood per <a href="https://github.com/interchainio/security/blob/main/resources/CLASSIFICATION_MATRIX.md">ACMv1.2</a>)
Affected versions: &lt;= v0.38.16, v1.0.0
Affected users: Validators, Full nodes</p>
<h3 id="impact">Impact</h3>
<p>A malicious peer may be able to interfere with a node's ability to sync blocks with peers via the blocksync mechanism. </p>
<p>In the <code>blocksync</code> protocol peers send their <code>base</code> and <code>latest</code> heights when they connect to a new node (<code>A</code>), which is syncing to the tip of a network. <code>base</code> acts as a lower ground and informs <code>A</code> that the peer only has blocks starting from height <code>base</code>. <code>latest</code> height informs <code>A</code> about the latest block in a network. Normally, nodes would only report increasing heights:</p>
<pre><code>B: {base: 100, latest: 1000}
B: {base: 100, latest: 1001}
B: {base: 100, latest: 1002}
...
</code></pre>
<p>If <code>B</code> fails to provide the latest block, <code>B</code> is removed and the <code>latest</code> height (target height) is recalculated based on other nodes <code>latest</code> heights.</p>
<p>The existing code hovewer doesn't check for the case where <code>B</code> first reports <code>latest</code> height <code>X</code> and immediately after height <code>Y</code>, where <code>X &gt; Y</code>. For example:</p>
<pre><code>B: {base: 100, latest: 2000}
B: {base: 100, latest: 1001}
B: {base: 100, latest: 1002}
...
</code></pre>
<p><code>A</code> will be trying to catch up to 2000 indefinitely. Even if <code>B</code> disconnects, the <code>latest</code> height (target height) won't be recalculated because <code>A</code> "doesn't know where 2000" came from per see.</p>
<h4 id="impact-qualification">Impact Qualification</h4>
<p>This condition requires the introduction of malicious code in the full node first reporting a non-existing <code>latest</code> height, then reporting lower <code>latest</code> height and nodes which are syncing using <code>blocksync</code> protocol.</p>
<h3 id="patches">Patches</h3>
<p>The new CometBFT releases <a href="https://github.com/cometbft/cometbft/releases/tag/v1.0.1">v1.0.1</a> and <a href="https://github.com/cometbft/cometbft/releases/tag/v0.38.17">v0.38.17</a> fix this issue.</p>
<p>Unreleased code in the main is patched as well.</p>
<h3 id="workarounds">Workarounds</h3>
<p>When the operator notices <code>blocksync</code> is stuck, they can identify the peer from which that message with "invalid" height was received. This may require increasing the logging level of the <code>blocksync</code> module. This peer can then be subsequently banned at the p2p layer as a temporary mitigation.</p>
<h3 id="references">References</h3>
<p>If you have questions about Interchain security efforts, please reach out to our official communication channel at <a href="mailto:security@interchain.io">security@interchain.io</a>.  For more information about the Interchain Foundation’s engagement with Amulet, and to sign up for security notification emails, please see <a href="https://github.com/interchainio/security">https://github.com/interchainio/security</a>.  </p>
<p>A Github Security Advisory for this issue is available in the CometBFT <a href="https://github.com/cometbft/cometbft/security/advisories/GHSA-22qq-3xwm-r5x4">repository</a>. For more information about CometBFT, see <a href="https://docs.cometbft.com/">https://docs.cometbft.com/</a>.</p>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/cometbft/cometbft/security/advisories/GHSA-22qq-3xwm-r5x4">https://github.com/cometbft/cometbft/security/advisories/GHSA-22qq-3xwm-r5x4</a></li>
<li><a href="https://github.com/cometbft/cometbft/commit/0ee80cd609c7ae9fe856bdd1c6d38553fdae90ce">https://github.com/cometbft/cometbft/commit/0ee80cd609c7ae9fe856bdd1c6d38553fdae90ce</a></li>
<li><a href="https://github.com/cometbft/cometbft/commit/2cebfde06ae5073c0b296a9d2ca6ab4b95397ea5">https://github.com/cometbft/cometbft/commit/2cebfde06ae5073c0b296a9d2ca6ab4b95397ea5</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2025-24371">https://nvd.nist.gov/vuln/detail/CVE-2025-24371</a></li>
<li><a href="https://github.com/cometbft/cometbft/releases/tag/v0.38.17">https://github.com/cometbft/cometbft/releases/tag/v0.38.17</a></li>
<li><a href="https://github.com/cometbft/cometbft/releases/tag/v1.0.1">https://github.com/cometbft/cometbft/releases/tag/v1.0.1</a></li>
<li><a href="https://pkg.go.dev/vuln/GO-2025-3442">https://pkg.go.dev/vuln/GO-2025-3442</a></li>
<li><a href="https://github.com/advisories/GHSA-22qq-3xwm-r5x4">https://github.com/advisories/GHSA-22qq-3xwm-r5x4</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-22qq-3xwm-r5x4</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2025-02-03T15:55:28.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/grafana/grafana] Grafana Alerting VictorOps integration could be exposed to users with Viewer permission]]></title>
        <id>https://github.com/advisories/GHSA-wxcc-2f3q-4h58</id>
        <link href="https://github.com/advisories/GHSA-wxcc-2f3q-4h58"/>
        <updated>2025-02-05T16:33:44.000Z</updated>
        <content type="html"><![CDATA[<p>Grafana is an open-source platform for monitoring and observability. 
The Grafana Alerting VictorOps integration was not properly protected and could be exposed to users with Viewer permission. 
Fixed in versions 11.5.0, 11.4.1, 11.3.3,&nbsp;11.2.6, 11.1.11, 11.0.11 and 10.4.15</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-11741">https://nvd.nist.gov/vuln/detail/CVE-2024-11741</a></li>
<li><a href="https://grafana.com/security/security-advisories/cve-2024-11741">https://grafana.com/security/security-advisories/cve-2024-11741</a></li>
<li><a href="https://pkg.go.dev/vuln/GO-2025-3438">https://pkg.go.dev/vuln/GO-2025-3438</a></li>
<li><a href="https://github.com/advisories/GHSA-wxcc-2f3q-4h58">https://github.com/advisories/GHSA-wxcc-2f3q-4h58</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-wxcc-2f3q-4h58</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2025-01-31T18:31:07.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/grafana/grafana] Grafana Alerting VictorOps integration could be exposed to users with Viewer permission]]></title>
        <id>https://github.com/advisories/GHSA-wxcc-2f3q-4h58</id>
        <link href="https://github.com/advisories/GHSA-wxcc-2f3q-4h58"/>
        <updated>2025-02-05T16:33:44.000Z</updated>
        <content type="html"><![CDATA[<p>Grafana is an open-source platform for monitoring and observability. 
The Grafana Alerting VictorOps integration was not properly protected and could be exposed to users with Viewer permission. 
Fixed in versions 11.5.0, 11.4.1, 11.3.3,&nbsp;11.2.6, 11.1.11, 11.0.11 and 10.4.15</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-11741">https://nvd.nist.gov/vuln/detail/CVE-2024-11741</a></li>
<li><a href="https://grafana.com/security/security-advisories/cve-2024-11741">https://grafana.com/security/security-advisories/cve-2024-11741</a></li>
<li><a href="https://pkg.go.dev/vuln/GO-2025-3438">https://pkg.go.dev/vuln/GO-2025-3438</a></li>
<li><a href="https://github.com/advisories/GHSA-wxcc-2f3q-4h58">https://github.com/advisories/GHSA-wxcc-2f3q-4h58</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-wxcc-2f3q-4h58</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2025-01-31T18:31:07.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/grafana/grafana] Grafana Alerting VictorOps integration could be exposed to users with Viewer permission]]></title>
        <id>https://github.com/advisories/GHSA-wxcc-2f3q-4h58</id>
        <link href="https://github.com/advisories/GHSA-wxcc-2f3q-4h58"/>
        <updated>2025-02-05T16:33:44.000Z</updated>
        <content type="html"><![CDATA[<p>Grafana is an open-source platform for monitoring and observability. 
The Grafana Alerting VictorOps integration was not properly protected and could be exposed to users with Viewer permission. 
Fixed in versions 11.5.0, 11.4.1, 11.3.3,&nbsp;11.2.6, 11.1.11, 11.0.11 and 10.4.15</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-11741">https://nvd.nist.gov/vuln/detail/CVE-2024-11741</a></li>
<li><a href="https://grafana.com/security/security-advisories/cve-2024-11741">https://grafana.com/security/security-advisories/cve-2024-11741</a></li>
<li><a href="https://pkg.go.dev/vuln/GO-2025-3438">https://pkg.go.dev/vuln/GO-2025-3438</a></li>
<li><a href="https://github.com/advisories/GHSA-wxcc-2f3q-4h58">https://github.com/advisories/GHSA-wxcc-2f3q-4h58</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-wxcc-2f3q-4h58</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2025-01-31T18:31:07.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/grafana/grafana] Grafana Alerting VictorOps integration could be exposed to users with Viewer permission]]></title>
        <id>https://github.com/advisories/GHSA-wxcc-2f3q-4h58</id>
        <link href="https://github.com/advisories/GHSA-wxcc-2f3q-4h58"/>
        <updated>2025-02-05T16:33:44.000Z</updated>
        <content type="html"><![CDATA[<p>Grafana is an open-source platform for monitoring and observability. 
The Grafana Alerting VictorOps integration was not properly protected and could be exposed to users with Viewer permission. 
Fixed in versions 11.5.0, 11.4.1, 11.3.3,&nbsp;11.2.6, 11.1.11, 11.0.11 and 10.4.15</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-11741">https://nvd.nist.gov/vuln/detail/CVE-2024-11741</a></li>
<li><a href="https://grafana.com/security/security-advisories/cve-2024-11741">https://grafana.com/security/security-advisories/cve-2024-11741</a></li>
<li><a href="https://pkg.go.dev/vuln/GO-2025-3438">https://pkg.go.dev/vuln/GO-2025-3438</a></li>
<li><a href="https://github.com/advisories/GHSA-wxcc-2f3q-4h58">https://github.com/advisories/GHSA-wxcc-2f3q-4h58</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-wxcc-2f3q-4h58</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2025-01-31T18:31:07.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/grafana/grafana] Grafana Alerting VictorOps integration could be exposed to users with Viewer permission]]></title>
        <id>https://github.com/advisories/GHSA-wxcc-2f3q-4h58</id>
        <link href="https://github.com/advisories/GHSA-wxcc-2f3q-4h58"/>
        <updated>2025-02-05T16:33:44.000Z</updated>
        <content type="html"><![CDATA[<p>Grafana is an open-source platform for monitoring and observability. 
The Grafana Alerting VictorOps integration was not properly protected and could be exposed to users with Viewer permission. 
Fixed in versions 11.5.0, 11.4.1, 11.3.3,&nbsp;11.2.6, 11.1.11, 11.0.11 and 10.4.15</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-11741">https://nvd.nist.gov/vuln/detail/CVE-2024-11741</a></li>
<li><a href="https://grafana.com/security/security-advisories/cve-2024-11741">https://grafana.com/security/security-advisories/cve-2024-11741</a></li>
<li><a href="https://pkg.go.dev/vuln/GO-2025-3438">https://pkg.go.dev/vuln/GO-2025-3438</a></li>
<li><a href="https://github.com/advisories/GHSA-wxcc-2f3q-4h58">https://github.com/advisories/GHSA-wxcc-2f3q-4h58</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-wxcc-2f3q-4h58</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2025-01-31T18:31:07.000Z</published>
    </entry>
</feed>