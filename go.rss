<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://azu.github.io/github-advisory-database-rss/go.rss</id>
    <title>Security Advisory for Go modules</title>
    <updated>2025-03-28T03:13:26.276Z</updated>
    <generator>github-advisory-database-rss</generator>
    <link rel="alternate" href="https://github.com/advisories?query=type%3Areviewed+ecosystem%3Ago"/>
    <subtitle>Security Advisory for Go modules on GitHub</subtitle>
    <rights>github-advisory-database-rss</rights>
    <category term="CRITICAL"/>
    <category term="HIGH"/>
    <category term="MODERATE"/>
    <category term="LOW"/>
    <entry>
        <title type="html"><![CDATA[[k8s.io/ingress-nginx] ingress-nginx admission controller RCE escalation]]></title>
        <id>https://github.com/advisories/GHSA-mgvx-rpfc-9mpv</id>
        <link href="https://github.com/advisories/GHSA-mgvx-rpfc-9mpv"/>
        <updated>2025-03-25T15:10:16.000Z</updated>
        <content type="html"><![CDATA[<p>A security issue was discovered in Kubernetes where under certain conditions, an unauthenticated attacker with access to the pod network can achieve arbitrary code execution in the context of the ingress-nginx controller. This can lead to disclosure of Secrets accessible to the controller. (Note that in the default installation, the controller can access all Secrets cluster-wide.)</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2025-1974">https://nvd.nist.gov/vuln/detail/CVE-2025-1974</a></li>
<li><a href="https://github.com/kubernetes/kubernetes/issues/131009">https://github.com/kubernetes/kubernetes/issues/131009</a></li>
<li><a href="https://github.com/kubernetes/ingress-nginx/releases/tag/controller-v1.11.5">https://github.com/kubernetes/ingress-nginx/releases/tag/controller-v1.11.5</a></li>
<li><a href="https://github.com/kubernetes/ingress-nginx/releases/tag/controller-v1.12.1">https://github.com/kubernetes/ingress-nginx/releases/tag/controller-v1.12.1</a></li>
<li><a href="https://groups.google.com/g/kubernetes-security-announce/c/2qa9DFtN0cQ">https://groups.google.com/g/kubernetes-security-announce/c/2qa9DFtN0cQ</a></li>
<li><a href="https://github.com/advisories/GHSA-mgvx-rpfc-9mpv">https://github.com/advisories/GHSA-mgvx-rpfc-9mpv</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-mgvx-rpfc-9mpv</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2025-03-25T00:30:26.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[k8s.io/ingress-nginx] ingress-nginx admission controller RCE escalation]]></title>
        <id>https://github.com/advisories/GHSA-mgvx-rpfc-9mpv</id>
        <link href="https://github.com/advisories/GHSA-mgvx-rpfc-9mpv"/>
        <updated>2025-03-25T15:10:16.000Z</updated>
        <content type="html"><![CDATA[<p>A security issue was discovered in Kubernetes where under certain conditions, an unauthenticated attacker with access to the pod network can achieve arbitrary code execution in the context of the ingress-nginx controller. This can lead to disclosure of Secrets accessible to the controller. (Note that in the default installation, the controller can access all Secrets cluster-wide.)</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2025-1974">https://nvd.nist.gov/vuln/detail/CVE-2025-1974</a></li>
<li><a href="https://github.com/kubernetes/kubernetes/issues/131009">https://github.com/kubernetes/kubernetes/issues/131009</a></li>
<li><a href="https://github.com/kubernetes/ingress-nginx/releases/tag/controller-v1.11.5">https://github.com/kubernetes/ingress-nginx/releases/tag/controller-v1.11.5</a></li>
<li><a href="https://github.com/kubernetes/ingress-nginx/releases/tag/controller-v1.12.1">https://github.com/kubernetes/ingress-nginx/releases/tag/controller-v1.12.1</a></li>
<li><a href="https://groups.google.com/g/kubernetes-security-announce/c/2qa9DFtN0cQ">https://groups.google.com/g/kubernetes-security-announce/c/2qa9DFtN0cQ</a></li>
<li><a href="https://github.com/advisories/GHSA-mgvx-rpfc-9mpv">https://github.com/advisories/GHSA-mgvx-rpfc-9mpv</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-mgvx-rpfc-9mpv</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2025-03-25T00:30:26.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[k8s.io/ingress-nginx] ingress-nginx controller - auth secret file path traversal vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-242m-6h72-7hgp</id>
        <link href="https://github.com/advisories/GHSA-242m-6h72-7hgp"/>
        <updated>2025-03-25T15:10:09.000Z</updated>
        <content type="html"><![CDATA[<p>A security issue was discovered in <a href="https://github.com/kubernetes/ingress-nginx">ingress-nginx</a> where attacker-provided data are included in a filename by the ingress-nginx Admission Controller feature, resulting in directory traversal within the container. This could result in denial of service, or when combined with other vulnerabilities, limited disclosure of Secret objects from the cluster.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2025-24513">https://nvd.nist.gov/vuln/detail/CVE-2025-24513</a></li>
<li><a href="https://github.com/kubernetes/kubernetes/issues/131005">https://github.com/kubernetes/kubernetes/issues/131005</a></li>
<li><a href="https://github.com/kubernetes/ingress-nginx/releases/tag/controller-v1.11.5">https://github.com/kubernetes/ingress-nginx/releases/tag/controller-v1.11.5</a></li>
<li><a href="https://github.com/kubernetes/ingress-nginx/releases/tag/controller-v1.12.1">https://github.com/kubernetes/ingress-nginx/releases/tag/controller-v1.12.1</a></li>
<li><a href="https://groups.google.com/g/kubernetes-security-announce/c/2qa9DFtN0cQ">https://groups.google.com/g/kubernetes-security-announce/c/2qa9DFtN0cQ</a></li>
<li><a href="https://github.com/advisories/GHSA-242m-6h72-7hgp">https://github.com/advisories/GHSA-242m-6h72-7hgp</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-242m-6h72-7hgp</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2025-03-25T00:30:26.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[k8s.io/ingress-nginx] ingress-nginx controller - auth secret file path traversal vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-242m-6h72-7hgp</id>
        <link href="https://github.com/advisories/GHSA-242m-6h72-7hgp"/>
        <updated>2025-03-25T15:10:09.000Z</updated>
        <content type="html"><![CDATA[<p>A security issue was discovered in <a href="https://github.com/kubernetes/ingress-nginx">ingress-nginx</a> where attacker-provided data are included in a filename by the ingress-nginx Admission Controller feature, resulting in directory traversal within the container. This could result in denial of service, or when combined with other vulnerabilities, limited disclosure of Secret objects from the cluster.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2025-24513">https://nvd.nist.gov/vuln/detail/CVE-2025-24513</a></li>
<li><a href="https://github.com/kubernetes/kubernetes/issues/131005">https://github.com/kubernetes/kubernetes/issues/131005</a></li>
<li><a href="https://github.com/kubernetes/ingress-nginx/releases/tag/controller-v1.11.5">https://github.com/kubernetes/ingress-nginx/releases/tag/controller-v1.11.5</a></li>
<li><a href="https://github.com/kubernetes/ingress-nginx/releases/tag/controller-v1.12.1">https://github.com/kubernetes/ingress-nginx/releases/tag/controller-v1.12.1</a></li>
<li><a href="https://groups.google.com/g/kubernetes-security-announce/c/2qa9DFtN0cQ">https://groups.google.com/g/kubernetes-security-announce/c/2qa9DFtN0cQ</a></li>
<li><a href="https://github.com/advisories/GHSA-242m-6h72-7hgp">https://github.com/advisories/GHSA-242m-6h72-7hgp</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-242m-6h72-7hgp</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2025-03-25T00:30:26.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[k8s.io/ingress-nginx] ingress-nginx controller - configuration injection via unsanitized auth-url annotation]]></title>
        <id>https://github.com/advisories/GHSA-fwwp-xcxw-39vq</id>
        <link href="https://github.com/advisories/GHSA-fwwp-xcxw-39vq"/>
        <updated>2025-03-25T15:10:03.000Z</updated>
        <content type="html"><![CDATA[<p>A security issue was discovered in <a href="https://github.com/kubernetes/ingress-nginx">ingress-nginx</a> where the <code>auth-url</code> Ingress annotation can be used to inject configuration into nginx. This can lead to arbitrary code execution in the context of the ingress-nginx controller, and disclosure of Secrets accessible to the controller. (Note that in the default installation, the controller can access all Secrets cluster-wide.)</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2025-24514">https://nvd.nist.gov/vuln/detail/CVE-2025-24514</a></li>
<li><a href="https://github.com/kubernetes/kubernetes/issues/131006">https://github.com/kubernetes/kubernetes/issues/131006</a></li>
<li><a href="https://github.com/kubernetes/ingress-nginx/releases/tag/controller-v1.11.5">https://github.com/kubernetes/ingress-nginx/releases/tag/controller-v1.11.5</a></li>
<li><a href="https://github.com/kubernetes/ingress-nginx/releases/tag/controller-v1.12.1">https://github.com/kubernetes/ingress-nginx/releases/tag/controller-v1.12.1</a></li>
<li><a href="https://groups.google.com/g/kubernetes-security-announce/c/2qa9DFtN0cQ">https://groups.google.com/g/kubernetes-security-announce/c/2qa9DFtN0cQ</a></li>
<li><a href="https://github.com/advisories/GHSA-fwwp-xcxw-39vq">https://github.com/advisories/GHSA-fwwp-xcxw-39vq</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-fwwp-xcxw-39vq</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2025-03-25T00:30:26.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[k8s.io/ingress-nginx] ingress-nginx controller - configuration injection via unsanitized auth-url annotation]]></title>
        <id>https://github.com/advisories/GHSA-fwwp-xcxw-39vq</id>
        <link href="https://github.com/advisories/GHSA-fwwp-xcxw-39vq"/>
        <updated>2025-03-25T15:10:03.000Z</updated>
        <content type="html"><![CDATA[<p>A security issue was discovered in <a href="https://github.com/kubernetes/ingress-nginx">ingress-nginx</a> where the <code>auth-url</code> Ingress annotation can be used to inject configuration into nginx. This can lead to arbitrary code execution in the context of the ingress-nginx controller, and disclosure of Secrets accessible to the controller. (Note that in the default installation, the controller can access all Secrets cluster-wide.)</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2025-24514">https://nvd.nist.gov/vuln/detail/CVE-2025-24514</a></li>
<li><a href="https://github.com/kubernetes/kubernetes/issues/131006">https://github.com/kubernetes/kubernetes/issues/131006</a></li>
<li><a href="https://github.com/kubernetes/ingress-nginx/releases/tag/controller-v1.11.5">https://github.com/kubernetes/ingress-nginx/releases/tag/controller-v1.11.5</a></li>
<li><a href="https://github.com/kubernetes/ingress-nginx/releases/tag/controller-v1.12.1">https://github.com/kubernetes/ingress-nginx/releases/tag/controller-v1.12.1</a></li>
<li><a href="https://groups.google.com/g/kubernetes-security-announce/c/2qa9DFtN0cQ">https://groups.google.com/g/kubernetes-security-announce/c/2qa9DFtN0cQ</a></li>
<li><a href="https://github.com/advisories/GHSA-fwwp-xcxw-39vq">https://github.com/advisories/GHSA-fwwp-xcxw-39vq</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-fwwp-xcxw-39vq</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2025-03-25T00:30:26.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[k8s.io/ingress-nginx] ngress-nginx controller - configuration injection via unsanitized auth-tls-match-cn annotation]]></title>
        <id>https://github.com/advisories/GHSA-823x-fv5p-h7hw</id>
        <link href="https://github.com/advisories/GHSA-823x-fv5p-h7hw"/>
        <updated>2025-03-25T15:07:13.000Z</updated>
        <content type="html"><![CDATA[<p>A security issue was discovered in <a href="https://github.com/kubernetes/ingress-nginx">ingress-nginx</a> where the <code>auth-tls-match-cn</code> Ingress annotation can be used to inject configuration into nginx. This can lead to arbitrary code execution in the context of the ingress-nginx controller, and disclosure of Secrets accessible to the controller. (Note that in the default installation, the controller can access all Secrets cluster-wide.)</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2025-1097">https://nvd.nist.gov/vuln/detail/CVE-2025-1097</a></li>
<li><a href="https://github.com/kubernetes/kubernetes/issues/131007">https://github.com/kubernetes/kubernetes/issues/131007</a></li>
<li><a href="https://github.com/kubernetes/ingress-nginx/releases/tag/controller-v1.11.5">https://github.com/kubernetes/ingress-nginx/releases/tag/controller-v1.11.5</a></li>
<li><a href="https://github.com/kubernetes/ingress-nginx/releases/tag/controller-v1.12.1">https://github.com/kubernetes/ingress-nginx/releases/tag/controller-v1.12.1</a></li>
<li><a href="https://groups.google.com/g/kubernetes-security-announce/c/2qa9DFtN0cQ">https://groups.google.com/g/kubernetes-security-announce/c/2qa9DFtN0cQ</a></li>
<li><a href="https://github.com/advisories/GHSA-823x-fv5p-h7hw">https://github.com/advisories/GHSA-823x-fv5p-h7hw</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-823x-fv5p-h7hw</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2025-03-25T00:30:26.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[k8s.io/ingress-nginx] ngress-nginx controller - configuration injection via unsanitized auth-tls-match-cn annotation]]></title>
        <id>https://github.com/advisories/GHSA-823x-fv5p-h7hw</id>
        <link href="https://github.com/advisories/GHSA-823x-fv5p-h7hw"/>
        <updated>2025-03-25T15:07:13.000Z</updated>
        <content type="html"><![CDATA[<p>A security issue was discovered in <a href="https://github.com/kubernetes/ingress-nginx">ingress-nginx</a> where the <code>auth-tls-match-cn</code> Ingress annotation can be used to inject configuration into nginx. This can lead to arbitrary code execution in the context of the ingress-nginx controller, and disclosure of Secrets accessible to the controller. (Note that in the default installation, the controller can access all Secrets cluster-wide.)</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2025-1097">https://nvd.nist.gov/vuln/detail/CVE-2025-1097</a></li>
<li><a href="https://github.com/kubernetes/kubernetes/issues/131007">https://github.com/kubernetes/kubernetes/issues/131007</a></li>
<li><a href="https://github.com/kubernetes/ingress-nginx/releases/tag/controller-v1.11.5">https://github.com/kubernetes/ingress-nginx/releases/tag/controller-v1.11.5</a></li>
<li><a href="https://github.com/kubernetes/ingress-nginx/releases/tag/controller-v1.12.1">https://github.com/kubernetes/ingress-nginx/releases/tag/controller-v1.12.1</a></li>
<li><a href="https://groups.google.com/g/kubernetes-security-announce/c/2qa9DFtN0cQ">https://groups.google.com/g/kubernetes-security-announce/c/2qa9DFtN0cQ</a></li>
<li><a href="https://github.com/advisories/GHSA-823x-fv5p-h7hw">https://github.com/advisories/GHSA-823x-fv5p-h7hw</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-823x-fv5p-h7hw</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2025-03-25T00:30:26.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[k8s.io/ingress-nginx] ingress-nginx controller - configuration injection via unsanitized mirror annotations]]></title>
        <id>https://github.com/advisories/GHSA-vg63-w3p9-jc9m</id>
        <link href="https://github.com/advisories/GHSA-vg63-w3p9-jc9m"/>
        <updated>2025-03-25T15:06:45.000Z</updated>
        <content type="html"><![CDATA[<p>A security issue was discovered in <a href="https://github.com/kubernetes/ingress-nginx">ingress-nginx</a> where the <code>mirror-target</code> and <code>mirror-host</code> Ingress annotations can be used to inject arbitrary configuration into nginx. This can lead to arbitrary code execution in the context of the ingress-nginx controller, and disclosure of Secrets accessible to the controller. (Note that in the default installation, the controller can access all Secrets cluster-wide.)</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2025-1098">https://nvd.nist.gov/vuln/detail/CVE-2025-1098</a></li>
<li><a href="https://github.com/kubernetes/kubernetes/issues/131008">https://github.com/kubernetes/kubernetes/issues/131008</a></li>
<li><a href="https://github.com/kubernetes/ingress-nginx/releases/tag/controller-v1.11.5">https://github.com/kubernetes/ingress-nginx/releases/tag/controller-v1.11.5</a></li>
<li><a href="https://github.com/kubernetes/ingress-nginx/releases/tag/controller-v1.12.1">https://github.com/kubernetes/ingress-nginx/releases/tag/controller-v1.12.1</a></li>
<li><a href="https://groups.google.com/g/kubernetes-security-announce/c/2qa9DFtN0cQ">https://groups.google.com/g/kubernetes-security-announce/c/2qa9DFtN0cQ</a></li>
<li><a href="https://github.com/advisories/GHSA-vg63-w3p9-jc9m">https://github.com/advisories/GHSA-vg63-w3p9-jc9m</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-vg63-w3p9-jc9m</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2025-03-25T00:30:26.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[k8s.io/ingress-nginx] ingress-nginx controller - configuration injection via unsanitized mirror annotations]]></title>
        <id>https://github.com/advisories/GHSA-vg63-w3p9-jc9m</id>
        <link href="https://github.com/advisories/GHSA-vg63-w3p9-jc9m"/>
        <updated>2025-03-25T15:06:45.000Z</updated>
        <content type="html"><![CDATA[<p>A security issue was discovered in <a href="https://github.com/kubernetes/ingress-nginx">ingress-nginx</a> where the <code>mirror-target</code> and <code>mirror-host</code> Ingress annotations can be used to inject arbitrary configuration into nginx. This can lead to arbitrary code execution in the context of the ingress-nginx controller, and disclosure of Secrets accessible to the controller. (Note that in the default installation, the controller can access all Secrets cluster-wide.)</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2025-1098">https://nvd.nist.gov/vuln/detail/CVE-2025-1098</a></li>
<li><a href="https://github.com/kubernetes/kubernetes/issues/131008">https://github.com/kubernetes/kubernetes/issues/131008</a></li>
<li><a href="https://github.com/kubernetes/ingress-nginx/releases/tag/controller-v1.11.5">https://github.com/kubernetes/ingress-nginx/releases/tag/controller-v1.11.5</a></li>
<li><a href="https://github.com/kubernetes/ingress-nginx/releases/tag/controller-v1.12.1">https://github.com/kubernetes/ingress-nginx/releases/tag/controller-v1.12.1</a></li>
<li><a href="https://groups.google.com/g/kubernetes-security-announce/c/2qa9DFtN0cQ">https://groups.google.com/g/kubernetes-security-announce/c/2qa9DFtN0cQ</a></li>
<li><a href="https://github.com/advisories/GHSA-vg63-w3p9-jc9m">https://github.com/advisories/GHSA-vg63-w3p9-jc9m</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-vg63-w3p9-jc9m</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2025-03-25T00:30:26.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[Ciliumgithub.com/cilium/cilium] Cilium node based network policies may incorrectly allow workload traffic]]></title>
        <id>https://github.com/advisories/GHSA-c6pf-2v8j-96mc</id>
        <link href="https://github.com/advisories/GHSA-c6pf-2v8j-96mc"/>
        <updated>2025-03-24T21:47:47.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p><a href="https://docs.cilium.io/en/stable/security/policy/language/#node-based">Node based network policies</a> (<code>fromNodes</code> and <code>toNodes</code>) will incorrectly permit traffic to/from non-node endpoints that share the labels specified in <code>fromNodes</code> and <code>toNodes</code> sections of network policies. Node based network policy is disabled by default in Cilium.</p>
<h3 id="patches">Patches</h3>
<p>This issue was fixed by <a href="https://github.com/cilium/cilium/pull/36657">https://github.com/cilium/cilium/pull/36657</a>.</p>
<p>This issue affects:</p>
<ul>
<li>Cilium v1.16 between v1.16.0 and v1.16.7 inclusive</li>
<li>Cilium v1.17 between v1.17.0 and v1.17.1 inclusive</li>
</ul>
<p>This issue is fixed in:</p>
<ul>
<li>Cilium v1.16.8</li>
<li>Cilium v1.17.2</li>
</ul>
<h3 id="workarounds">Workarounds</h3>
<p>Users can work around this issue by ensuring that the labels used in <code>fromNodes</code> and <code>toNodes</code> fields are used exclusively by nodes and not by other endpoints.</p>
<h3 id="acknowledgements">Acknowledgements</h3>
<p>The Cilium community has worked together with members of Isovalent to prepare these mitigations. Special thanks to @oblazek  for reporting and fixing this issue.</p>
<h3 id="for-more-information">For more information</h3>
<p>If you think you have found a vulnerability affecting Cilium, we strongly encourage you to report it to our security mailing list at <a href="mailto:security@cilium.io">security@cilium.io</a>. This is a private mailing list for the Cilium security team, and your report will be treated as top priority. Please also address any comments or questions on this advisory to the same mailing list.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/cilium/cilium/security/advisories/GHSA-c6pf-2v8j-96mc">https://github.com/cilium/cilium/security/advisories/GHSA-c6pf-2v8j-96mc</a></li>
<li><a href="https://github.com/cilium/cilium/pull/36657">https://github.com/cilium/cilium/pull/36657</a></li>
<li><a href="https://docs.cilium.io/en/stable/security/policy/language/#node-based">https://docs.cilium.io/en/stable/security/policy/language/#node-based</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2025-30163">https://nvd.nist.gov/vuln/detail/CVE-2025-30163</a></li>
<li><a href="https://github.com/advisories/GHSA-c6pf-2v8j-96mc">https://github.com/advisories/GHSA-c6pf-2v8j-96mc</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-c6pf-2v8j-96mc</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2025-03-24T19:36:21.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/cilium/cilium] Cilium node based network policies may incorrectly allow workload traffic]]></title>
        <id>https://github.com/advisories/GHSA-c6pf-2v8j-96mc</id>
        <link href="https://github.com/advisories/GHSA-c6pf-2v8j-96mc"/>
        <updated>2025-03-24T21:47:47.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p><a href="https://docs.cilium.io/en/stable/security/policy/language/#node-based">Node based network policies</a> (<code>fromNodes</code> and <code>toNodes</code>) will incorrectly permit traffic to/from non-node endpoints that share the labels specified in <code>fromNodes</code> and <code>toNodes</code> sections of network policies. Node based network policy is disabled by default in Cilium.</p>
<h3 id="patches">Patches</h3>
<p>This issue was fixed by <a href="https://github.com/cilium/cilium/pull/36657">https://github.com/cilium/cilium/pull/36657</a>.</p>
<p>This issue affects:</p>
<ul>
<li>Cilium v1.16 between v1.16.0 and v1.16.7 inclusive</li>
<li>Cilium v1.17 between v1.17.0 and v1.17.1 inclusive</li>
</ul>
<p>This issue is fixed in:</p>
<ul>
<li>Cilium v1.16.8</li>
<li>Cilium v1.17.2</li>
</ul>
<h3 id="workarounds">Workarounds</h3>
<p>Users can work around this issue by ensuring that the labels used in <code>fromNodes</code> and <code>toNodes</code> fields are used exclusively by nodes and not by other endpoints.</p>
<h3 id="acknowledgements">Acknowledgements</h3>
<p>The Cilium community has worked together with members of Isovalent to prepare these mitigations. Special thanks to @oblazek  for reporting and fixing this issue.</p>
<h3 id="for-more-information">For more information</h3>
<p>If you think you have found a vulnerability affecting Cilium, we strongly encourage you to report it to our security mailing list at <a href="mailto:security@cilium.io">security@cilium.io</a>. This is a private mailing list for the Cilium security team, and your report will be treated as top priority. Please also address any comments or questions on this advisory to the same mailing list.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/cilium/cilium/security/advisories/GHSA-c6pf-2v8j-96mc">https://github.com/cilium/cilium/security/advisories/GHSA-c6pf-2v8j-96mc</a></li>
<li><a href="https://github.com/cilium/cilium/pull/36657">https://github.com/cilium/cilium/pull/36657</a></li>
<li><a href="https://docs.cilium.io/en/stable/security/policy/language/#node-based">https://docs.cilium.io/en/stable/security/policy/language/#node-based</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2025-30163">https://nvd.nist.gov/vuln/detail/CVE-2025-30163</a></li>
<li><a href="https://github.com/advisories/GHSA-c6pf-2v8j-96mc">https://github.com/advisories/GHSA-c6pf-2v8j-96mc</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-c6pf-2v8j-96mc</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2025-03-24T19:36:21.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/kyverno/kyverno] Kyverno ignores subjectRegExp and IssuerRegExp]]></title>
        <id>https://github.com/advisories/GHSA-46mp-8w32-6g94</id>
        <link href="https://github.com/advisories/GHSA-46mp-8w32-6g94"/>
        <updated>2025-03-24T19:07:29.000Z</updated>
        <content type="html"><![CDATA[<h3 id="summary">Summary</h3>
<p>Kyverno ignores subjectRegExp and IssuerRegExp while verifying artifact's sign with keyless mode. It allows the attacker to deploy kubernetes resources with the artifacts that were signed by unexpected certificate.</p>
<h3 id="details">Details</h3>
<p>Kyverno checks only subject and issuer fields when verifying an artifact's signature: <a href="https://github.com/Mohdcode/kyverno/blob/373f942ea9fa8b63140d0eb0e101b9a5f71033f3/pkg/cosign/cosign.go#L537">https://github.com/Mohdcode/kyverno/blob/373f942ea9fa8b63140d0eb0e101b9a5f71033f3/pkg/cosign/cosign.go#L537</a>. While there are subjectRegExp and issuerRegExp fields that can also be used for the defining expected subject and issue values. If the last ones are used then their values are not taken in count and there is no actually restriction for the certificate that was used for the image sign.</p>
<h3 id="poc">PoC</h3>
<p>For the successful exploitation attacker needs:</p>
<ul>
<li>Private key of any certificate in the certificate chain that trusted by cosign. It can be certificate that signed by company's self-signed Root CA if they are using their own PKI.</li>
<li>Access to container registry to push artifacts images </li>
<li>Availability to deploy malicious artifacts to the kubernetes cluster</li>
</ul>
<ol>
<li>Generate certificate that will be used for the image signing with the oidcissuer url. That can be done with the Fulcio or manually by using openssl</li>
</ol>
<pre><code># Create self-signed RootCA
openssl req -x509 -newkey rsa:4096 -keyout root-ca-key.pem -sha256 -noenc -days 9999 -subj "/C=AA/L=Location/O=IT/OU=Security/CN=Root Certificate Authority" -out root-ca.pem


# Create request for the intermediate certificate
openssl req -noenc -newkey rsa:4096 -keyout intermediate-ca-key.pem -addext "subjectKeyIdentifier = hash" -addext "keyUsage = critical,keyCertSign" -addext "basicConstraints = critical,CA:TRUE,pathlen:2" -subj "/C=AA/L=Location/O=IT/OU=Security/CN=Intermediate Certificate Authority" -out intermediate-ca.csr

# Issue intermediate cert with RootCA
openssl x509 -req -days 9999 -sha256 -in intermediate-ca.csr -CA root-ca.pem -CAkey root-ca-key.pem -copy_extensions copy -out intermediate-ca.pem

# OID_1_1 is the hexadecimal representation of the oidcissuer url
OID_1_1=$(echo -n "https://me.net" | xxd -p -u)

# Create request for the leaf certificate
openssl req -noenc -newkey rsa:4096 -keyout my-key.pem -addext "subjectKeyIdentifier = hash" -addext "basicConstraints = critical,CA:FALSE" -addext "keyUsage = critical,digitalSignature" -addext "subjectAltName = email:me@me.net" -addext "1.3.6.1.4.1.57264.1.1 = DER:${OID_1_1}" -addext "1.3.6.1.4.1.57264.1.8 = ASN1:UTF8String:https://me.net" -subj "/C=AA/L=Location/O=IT/OU=Security/CN=My Cosign Certificate" -out my-cert.csr

# Issue leaf cert with Intermediate CA
openssl x509 -req -in my-cert.csr -CA intermediate-ca.pem -CAkey intermediate-ca-key.pem -copy_extensions copy -days 9999 -sha256 -out my-cert.pem

# Generate certificates chain
cat intermediate-ca.pem root-ca.pem &gt; cert-chain.pem
</code></pre>
<ol start="2">
<li>Build and push container image</li>
<li>Import key and sign the image with the generated certificate</li>
</ol>
<pre><code>COSIGN_PASSWORD="" cosign import-key-pair --key my-key.pem --output-key-prefix=import-my-key
COSIGN_PASSWORD="" cosign sign $IMAGE_WITH_HASH --tlog-upload=false --cert my-cert.pem --cert-chain cert-chain.pem --key import-my-key.key
</code></pre>
<ol start="3">
<li>Add ClusterPolicy for the Kyverno with the wrong subject and issuer regexp. Adding (Fulcio) Root CA as secret and using it in policy is optional only if cosign cannot trust it:</li>
</ol>
<pre><code>apiVersion: kyverno.io/v1
kind: ClusterPolicy
metadata:
  name: check-image-keyless
spec:
  validationFailureAction: Enforce
  webhookTimeoutSeconds: 30
  rules:
    - name: check-image-keyless
      match:
        any:
        - resources:
            kinds:
              - Pod
      context:
        - name: encodedCert
          apiCall:
            urlPath: "/api/v1/namespaces/kyverno/secrets/fulcio-ca"
            method: GET
            jmesPath: "data.\"fulcio-ca.pem\""
        - name: root
          variable:
            jmesPath: "base64_decode(encodedCert)"
      verifyImages:
      - imageReferences:
        - "&lt;IMAGE_REGEXP&gt;"
        attestors:
        - entries:
          - keyless:
              subjectRegExp: https://ivalid
              issuerRegExp: https://ivalid
              roots: "{{root}}"
              rekor:
                url: &lt;URL_TO_REKOR&gt;
                pubkey: |-
                  -----BEGIN PUBLIC KEY-----
                  ...
                  -----END PUBLIC KEY-----
              ctlog:
                pubkey: |-
                  -----BEGIN PUBLIC KEY-----
                  ...
                  -----END PUBLIC KEY-----
</code></pre>
<ol start="4">
<li>Deploy previously signed image</li>
</ol>
<pre><code>apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: image-sign
  name: image-sign
  namespace: default
spec:
  replicas: 2
  selector:
    matchLabels:
      app: image-sign
  strategy: {}
  template:
    metadata:
      annotations:
      labels:
        app: image-sign
    spec:
      containers:
        - image: &lt;YOUR_IMAGE&gt;
          imagePullPolicy: Always
          name: image-signing
          ports:
            - containerPort: 5000
          resources:
            requests:
              memory: 500Mi
              cpu: 0.1
            limits:
              memory: 2Gi
              cpu: 0.2
      restartPolicy: Always
status: {}
</code></pre>
<ol start="5">
<li>The deployment with pods will be create successfully due to not checking subjectRegExp and issuerRegExp fields validation</li>
</ol>
<h3 id="impact">Impact</h3>
<p>Deploying unauthorized kubernetes resources that can lead to full compromise of kubernetes cluster</p>
<h3 id="ps">P.S.</h3>
<p>Problem was discovered by me when testing image sign verifying with keyless signing: 
<a href="https://kubernetes.slack.com/archives/CLGR9BJU9/p1740136401365279?thread_ts=1740136401.365279&amp;cid=CLGR9BJU9">https://kubernetes.slack.com/archives/CLGR9BJU9/p1740136401365279?thread_ts=1740136401.365279&amp;cid=CLGR9BJU9</a>. Then it was <a href="https://github.com/kyverno/policies/issues/1246">verified</a> and <a href="https://github.com/kyverno/kyverno/pull/12237">fixed</a> by <a href="https://github.com/Mohdcode">Mohcode</a>. But i think it should be registered as security problem such as it allows to bypass part of the verification mechanism and Kyverno users should be aware of it.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/kyverno/kyverno/security/advisories/GHSA-46mp-8w32-6g94">https://github.com/kyverno/kyverno/security/advisories/GHSA-46mp-8w32-6g94</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2025-29778">https://nvd.nist.gov/vuln/detail/CVE-2025-29778</a></li>
<li><a href="https://github.com/kyverno/policies/issues/1246">https://github.com/kyverno/policies/issues/1246</a></li>
<li><a href="https://github.com/kyverno/kyverno/pull/12237">https://github.com/kyverno/kyverno/pull/12237</a></li>
<li><a href="https://github.com/kyverno/kyverno/commit/8777672fb17bdf252bd2e7d8de3441e240404a60">https://github.com/kyverno/kyverno/commit/8777672fb17bdf252bd2e7d8de3441e240404a60</a></li>
<li><a href="https://github.com/Mohdcode/kyverno/blob/373f942ea9fa8b63140d0eb0e101b9a5f71033f3/pkg/cosign/cosign.go#L537">https://github.com/Mohdcode/kyverno/blob/373f942ea9fa8b63140d0eb0e101b9a5f71033f3/pkg/cosign/cosign.go#L537</a></li>
<li><a href="https://github.com/advisories/GHSA-46mp-8w32-6g94">https://github.com/advisories/GHSA-46mp-8w32-6g94</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-46mp-8w32-6g94</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2025-03-24T19:07:28.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/cilium/cilium] Cilium East-west traffic not subject to egress policy enforcement for requests via Gateway API load balancers]]></title>
        <id>https://github.com/advisories/GHSA-24qp-4xx8-3jvj</id>
        <link href="https://github.com/advisories/GHSA-24qp-4xx8-3jvj"/>
        <updated>2025-03-24T21:47:17.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>For Cilium users who:</p>
<ul>
<li>Use Gateway API for Ingress for some services <strong>AND</strong></li>
<li>Use <a href="https://docs.cilium.io/en/stable/network/lb-ipam/">LB-IPAM</a> or BGP for LB Service implementation <strong>AND</strong></li>
<li>Use network policies to block egress traffic from workloads in a namespace to workloads in other namespaces</li>
</ul>
<p>Egress traffic from workloads covered by such network policies to LoadBalancers configured by <code>Gateway</code> resources will incorrectly be allowed.</p>
<p>LoadBalancer resources not deployed via a Gateway API configuration are not affected by this issue.</p>
<h3 id="patches">Patches</h3>
<p>This issue was fixed by <a href="https://github.com/cilium/proxy/pull/1172">https://github.com/cilium/proxy/pull/1172</a>.</p>
<p>This issue affects:</p>
<ul>
<li>Cilium v1.15 between v1.15.0 and v1.15.14 inclusive</li>
<li>Cilium v1.16 between v1.16.0 and v1.16.7 inclusive</li>
<li>Cilium v1.17 between v1.17.0 and v1.17.1 inclusive</li>
</ul>
<p>This issue is fixed in:</p>
<ul>
<li>Cilium v1.15.15</li>
<li>Cilium v1.16.8</li>
<li>Cilium v1.17.2</li>
</ul>
<h3 id="workarounds">Workarounds</h3>
<p>A Clusterwide Cilium Network Policy can be used to work around this issue for users who are unable to upgrade. An outline of such a policy is provided below:</p>
<pre><code>apiVersion: "cilium.io/v2"
kind: CiliumClusterwideNetworkPolicy
metadata:
  name: "workaround"
spec:
  endpointSelector:
    matchExpressions:
    - key: reserved:ingress
      operator: Exists
  ingress:
  - fromEntities:
    - world
</code></pre>
<ul>
<li>The policy opens up connectivity from all locations outside the cluster into the Cilium Ingress Gateway.</li>
<li>The policy establishes a default deny for all other traffic towards the Cilium Ingress Gateway, including all in-cluster sources.</li>
<li>It is possible to tailor the policy to more narrowly allow inbound traffic while creating a default deny posture for traffic between namespaces. Users should edit the policy to bring it in line with the security requirements particular to their environments.</li>
</ul>
<h3 id="acknowledgements">Acknowledgements</h3>
<p>The Cilium community has worked together with members of the Isovalent team to prepare these mitigations. Special thanks to @jrajahalme for the fix.</p>
<h3 id="for-more-information">For more information</h3>
<p>If you think you have found a vulnerability affecting Cilium, we strongly encourage you to report it to our security mailing list at <a href="mailto:security@cilium.io">security@cilium.io</a>. This is a private mailing list for the Cilium security team, and your report will be treated as top priority.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/cilium/cilium/security/advisories/GHSA-24qp-4xx8-3jvj">https://github.com/cilium/cilium/security/advisories/GHSA-24qp-4xx8-3jvj</a></li>
<li><a href="https://github.com/cilium/proxy/pull/1172">https://github.com/cilium/proxy/pull/1172</a></li>
<li><a href="https://docs.cilium.io/en/stable/network/lb-ipam">https://docs.cilium.io/en/stable/network/lb-ipam</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2025-30162">https://nvd.nist.gov/vuln/detail/CVE-2025-30162</a></li>
<li><a href="https://github.com/advisories/GHSA-24qp-4xx8-3jvj">https://github.com/advisories/GHSA-24qp-4xx8-3jvj</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-24qp-4xx8-3jvj</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2025-03-24T19:05:04.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/cilium/cilium] Cilium East-west traffic not subject to egress policy enforcement for requests via Gateway API load balancers]]></title>
        <id>https://github.com/advisories/GHSA-24qp-4xx8-3jvj</id>
        <link href="https://github.com/advisories/GHSA-24qp-4xx8-3jvj"/>
        <updated>2025-03-24T21:47:17.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>For Cilium users who:</p>
<ul>
<li>Use Gateway API for Ingress for some services <strong>AND</strong></li>
<li>Use <a href="https://docs.cilium.io/en/stable/network/lb-ipam/">LB-IPAM</a> or BGP for LB Service implementation <strong>AND</strong></li>
<li>Use network policies to block egress traffic from workloads in a namespace to workloads in other namespaces</li>
</ul>
<p>Egress traffic from workloads covered by such network policies to LoadBalancers configured by <code>Gateway</code> resources will incorrectly be allowed.</p>
<p>LoadBalancer resources not deployed via a Gateway API configuration are not affected by this issue.</p>
<h3 id="patches">Patches</h3>
<p>This issue was fixed by <a href="https://github.com/cilium/proxy/pull/1172">https://github.com/cilium/proxy/pull/1172</a>.</p>
<p>This issue affects:</p>
<ul>
<li>Cilium v1.15 between v1.15.0 and v1.15.14 inclusive</li>
<li>Cilium v1.16 between v1.16.0 and v1.16.7 inclusive</li>
<li>Cilium v1.17 between v1.17.0 and v1.17.1 inclusive</li>
</ul>
<p>This issue is fixed in:</p>
<ul>
<li>Cilium v1.15.15</li>
<li>Cilium v1.16.8</li>
<li>Cilium v1.17.2</li>
</ul>
<h3 id="workarounds">Workarounds</h3>
<p>A Clusterwide Cilium Network Policy can be used to work around this issue for users who are unable to upgrade. An outline of such a policy is provided below:</p>
<pre><code>apiVersion: "cilium.io/v2"
kind: CiliumClusterwideNetworkPolicy
metadata:
  name: "workaround"
spec:
  endpointSelector:
    matchExpressions:
    - key: reserved:ingress
      operator: Exists
  ingress:
  - fromEntities:
    - world
</code></pre>
<ul>
<li>The policy opens up connectivity from all locations outside the cluster into the Cilium Ingress Gateway.</li>
<li>The policy establishes a default deny for all other traffic towards the Cilium Ingress Gateway, including all in-cluster sources.</li>
<li>It is possible to tailor the policy to more narrowly allow inbound traffic while creating a default deny posture for traffic between namespaces. Users should edit the policy to bring it in line with the security requirements particular to their environments.</li>
</ul>
<h3 id="acknowledgements">Acknowledgements</h3>
<p>The Cilium community has worked together with members of the Isovalent team to prepare these mitigations. Special thanks to @jrajahalme for the fix.</p>
<h3 id="for-more-information">For more information</h3>
<p>If you think you have found a vulnerability affecting Cilium, we strongly encourage you to report it to our security mailing list at <a href="mailto:security@cilium.io">security@cilium.io</a>. This is a private mailing list for the Cilium security team, and your report will be treated as top priority.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/cilium/cilium/security/advisories/GHSA-24qp-4xx8-3jvj">https://github.com/cilium/cilium/security/advisories/GHSA-24qp-4xx8-3jvj</a></li>
<li><a href="https://github.com/cilium/proxy/pull/1172">https://github.com/cilium/proxy/pull/1172</a></li>
<li><a href="https://docs.cilium.io/en/stable/network/lb-ipam">https://docs.cilium.io/en/stable/network/lb-ipam</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2025-30162">https://nvd.nist.gov/vuln/detail/CVE-2025-30162</a></li>
<li><a href="https://github.com/advisories/GHSA-24qp-4xx8-3jvj">https://github.com/advisories/GHSA-24qp-4xx8-3jvj</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-24qp-4xx8-3jvj</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2025-03-24T19:05:04.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/cilium/cilium] Cilium East-west traffic not subject to egress policy enforcement for requests via Gateway API load balancers]]></title>
        <id>https://github.com/advisories/GHSA-24qp-4xx8-3jvj</id>
        <link href="https://github.com/advisories/GHSA-24qp-4xx8-3jvj"/>
        <updated>2025-03-24T21:47:17.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>For Cilium users who:</p>
<ul>
<li>Use Gateway API for Ingress for some services <strong>AND</strong></li>
<li>Use <a href="https://docs.cilium.io/en/stable/network/lb-ipam/">LB-IPAM</a> or BGP for LB Service implementation <strong>AND</strong></li>
<li>Use network policies to block egress traffic from workloads in a namespace to workloads in other namespaces</li>
</ul>
<p>Egress traffic from workloads covered by such network policies to LoadBalancers configured by <code>Gateway</code> resources will incorrectly be allowed.</p>
<p>LoadBalancer resources not deployed via a Gateway API configuration are not affected by this issue.</p>
<h3 id="patches">Patches</h3>
<p>This issue was fixed by <a href="https://github.com/cilium/proxy/pull/1172">https://github.com/cilium/proxy/pull/1172</a>.</p>
<p>This issue affects:</p>
<ul>
<li>Cilium v1.15 between v1.15.0 and v1.15.14 inclusive</li>
<li>Cilium v1.16 between v1.16.0 and v1.16.7 inclusive</li>
<li>Cilium v1.17 between v1.17.0 and v1.17.1 inclusive</li>
</ul>
<p>This issue is fixed in:</p>
<ul>
<li>Cilium v1.15.15</li>
<li>Cilium v1.16.8</li>
<li>Cilium v1.17.2</li>
</ul>
<h3 id="workarounds">Workarounds</h3>
<p>A Clusterwide Cilium Network Policy can be used to work around this issue for users who are unable to upgrade. An outline of such a policy is provided below:</p>
<pre><code>apiVersion: "cilium.io/v2"
kind: CiliumClusterwideNetworkPolicy
metadata:
  name: "workaround"
spec:
  endpointSelector:
    matchExpressions:
    - key: reserved:ingress
      operator: Exists
  ingress:
  - fromEntities:
    - world
</code></pre>
<ul>
<li>The policy opens up connectivity from all locations outside the cluster into the Cilium Ingress Gateway.</li>
<li>The policy establishes a default deny for all other traffic towards the Cilium Ingress Gateway, including all in-cluster sources.</li>
<li>It is possible to tailor the policy to more narrowly allow inbound traffic while creating a default deny posture for traffic between namespaces. Users should edit the policy to bring it in line with the security requirements particular to their environments.</li>
</ul>
<h3 id="acknowledgements">Acknowledgements</h3>
<p>The Cilium community has worked together with members of the Isovalent team to prepare these mitigations. Special thanks to @jrajahalme for the fix.</p>
<h3 id="for-more-information">For more information</h3>
<p>If you think you have found a vulnerability affecting Cilium, we strongly encourage you to report it to our security mailing list at <a href="mailto:security@cilium.io">security@cilium.io</a>. This is a private mailing list for the Cilium security team, and your report will be treated as top priority.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/cilium/cilium/security/advisories/GHSA-24qp-4xx8-3jvj">https://github.com/cilium/cilium/security/advisories/GHSA-24qp-4xx8-3jvj</a></li>
<li><a href="https://github.com/cilium/proxy/pull/1172">https://github.com/cilium/proxy/pull/1172</a></li>
<li><a href="https://docs.cilium.io/en/stable/network/lb-ipam">https://docs.cilium.io/en/stable/network/lb-ipam</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2025-30162">https://nvd.nist.gov/vuln/detail/CVE-2025-30162</a></li>
<li><a href="https://github.com/advisories/GHSA-24qp-4xx8-3jvj">https://github.com/advisories/GHSA-24qp-4xx8-3jvj</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-24qp-4xx8-3jvj</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2025-03-24T19:05:04.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/ollama/ollama] Ollama Allows Out-of-Bounds Read]]></title>
        <id>https://github.com/advisories/GHSA-89qx-m49c-8crf</id>
        <link href="https://github.com/advisories/GHSA-89qx-m49c-8crf"/>
        <updated>2025-03-22T00:19:55.000Z</updated>
        <content type="html"><![CDATA[<p>A vulnerability in Ollama versions &lt;=0.3.14 allows a malicious user to create a customized gguf model file that can be uploaded to the public Ollama server. When the server processes this malicious model, it crashes, leading to a Denial of Service (DoS) attack. The root cause of the issue is an out-of-bounds read in the gguf.go file.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-12055">https://nvd.nist.gov/vuln/detail/CVE-2024-12055</a></li>
<li><a href="https://huntr.com/bounties/7b111d55-8215-4727-8807-c5ed4cf1bfbe">https://huntr.com/bounties/7b111d55-8215-4727-8807-c5ed4cf1bfbe</a></li>
<li><a href="https://github.com/advisories/GHSA-89qx-m49c-8crf">https://github.com/advisories/GHSA-89qx-m49c-8crf</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-89qx-m49c-8crf</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2025-03-20T12:32:42.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/ollama/ollama] Ollama Divide By Zero vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-9gcr-28rp-cc24</id>
        <link href="https://github.com/advisories/GHSA-9gcr-28rp-cc24"/>
        <updated>2025-03-22T00:01:45.000Z</updated>
        <content type="html"><![CDATA[<p>A vulnerability in ollama/ollama versions &lt;=0.3.14 allows a malicious user to upload and create a customized GGUF model file on the Ollama server. This can lead to a division by zero error in the ggufPadding function, causing the server to crash and resulting in a Denial of Service (DoS) attack.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2025-0317">https://nvd.nist.gov/vuln/detail/CVE-2025-0317</a></li>
<li><a href="https://huntr.com/bounties/a9951bca-9bd8-49b2-b143-4cd4219f9fa0">https://huntr.com/bounties/a9951bca-9bd8-49b2-b143-4cd4219f9fa0</a></li>
<li><a href="https://github.com/advisories/GHSA-9gcr-28rp-cc24">https://github.com/advisories/GHSA-9gcr-28rp-cc24</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-9gcr-28rp-cc24</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2025-03-20T12:32:52.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/ollama/ollama] Ollama Allocation of Resources Without Limits or Throttling vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-fccc-8m69-8r78</id>
        <link href="https://github.com/advisories/GHSA-fccc-8m69-8r78"/>
        <updated>2025-03-21T23:59:27.000Z</updated>
        <content type="html"><![CDATA[<p>A vulnerability in ollama/ollama &lt;=0.3.14 allows a malicious user to create a customized GGUF model file, upload it to the Ollama server, and create it. This can cause the server to allocate unlimited memory, leading to a Denial of Service (DoS) attack.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2025-0315">https://nvd.nist.gov/vuln/detail/CVE-2025-0315</a></li>
<li><a href="https://huntr.com/bounties/da414d29-b55a-496f-b135-17e0fcec67bc">https://huntr.com/bounties/da414d29-b55a-496f-b135-17e0fcec67bc</a></li>
<li><a href="https://github.com/advisories/GHSA-fccc-8m69-8r78">https://github.com/advisories/GHSA-fccc-8m69-8r78</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-fccc-8m69-8r78</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2025-03-20T12:32:52.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/mattermost/mattermost/server/v8] Mattermost fail to prompt for explicit approval before adding a team admin to a private channel]]></title>
        <id>https://github.com/advisories/GHSA-cw7q-5cgc-h3h9</id>
        <link href="https://github.com/advisories/GHSA-cw7q-5cgc-h3h9"/>
        <updated>2025-03-21T22:38:11.000Z</updated>
        <content type="html"><![CDATA[<p>Mattermost versions 9.11.x &lt;= 9.11.8 fail to prompt for explicit approval before adding a team admin to a private channel, which team admins to joining private channels via crafted permalink links without explicit consent from them.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2025-27715">https://nvd.nist.gov/vuln/detail/CVE-2025-27715</a></li>
<li><a href="https://mattermost.com/security-updates">https://mattermost.com/security-updates</a></li>
<li><a href="https://github.com/advisories/GHSA-cw7q-5cgc-h3h9">https://github.com/advisories/GHSA-cw7q-5cgc-h3h9</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-cw7q-5cgc-h3h9</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2025-03-21T09:30:35.000Z</published>
    </entry>
</feed>