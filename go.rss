<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://xlordz.github.io/github-advisory-database-rss/go.rss</id>
    <title>Security Advisory for Go modules</title>
    <updated>2025-07-02T20:32:30.850Z</updated>
    <generator>github-advisory-database-rss</generator>
    <link rel="alternate" href="https://github.com/advisories?query=type%3Areviewed+ecosystem%3Ago"/>
    <subtitle>Security Advisory for Go modules on GitHub</subtitle>
    <rights>github-advisory-database-rss</rights>
    <category term="CRITICAL"/>
    <category term="HIGH"/>
    <category term="MODERATE"/>
    <category term="LOW"/>
    <entry>
        <title type="html"><![CDATA[[github.com/juju/utils/v4/cert] juju/utils leaks private key in certs]]></title>
        <id>https://github.com/advisories/GHSA-h34r-jxqm-qgpr</id>
        <link href="https://github.com/advisories/GHSA-h34r-jxqm-qgpr"/>
        <updated>2025-07-01T17:35:18.000Z</updated>
        <content type="html"><![CDATA[<h3 id="summary">Summary</h3>
<p>Certs generated by v4 contain their private key.</p>
<h2 id="details">Details</h2>
<h3 id="background">Background</h3>
<p>Recently, I encountered an API in Go that’s easy to misuse: sha512.Sum384 and sha512.New384().Sum look very similar and behave very differently. <a href="https://go.dev/play/p/kDCqqoYk84k">https://go.dev/play/p/kDCqqoYk84k</a> demonstrates this. I want to discuss extending static analysis to detect this case with the go community, but before I do that, I want to make a best-effort pass at open-source projects to fix the existing bugs. I figured that if there were any vulnerabilities out there, they would be easy to find once that discussion begins, so it’s better to address them early. </p>
<p>This work is a hobby project and has no affiliation with my employer, so I may be slow to respond due to existing commitments. </p>
<h3 id="poc">PoC</h3>
<p><a href="https://go.dev/play/p/vSW0U3Hq4qk">https://go.dev/play/p/vSW0U3Hq4qk</a></p>
<h3 id="impact">Impact</h3>
<p><a href="https://github.com/juju/utils/blob/0141ef0ee74a0cac603c5c9e4aff194008722f41/cert/cert.go#L120">This code</a> (cert.NewLeaf) generates certs with the SubjectKeyId set to <code>sha512.New384().Sum(/* private */ key)</code>.</p>
<p>If a cert which was generated by cert.NewLeaf is transferred over the network in plaintext, as is often the case in TLS handshakes, an attacker listening on that network may sniff the cert and trivially extract the private key from it. This applies to client and server TLS certs generated by vulnerable versions of this library.</p>
<p>Getting the server cert and its key would only require performing a TLS handshake (with a matching SNI) with the server. At that point, the attacker could impersonate the server.</p>
<p>Similarly, getting the client cert and its key would require getting the client to perform a TLS handshake against an attacker-controlled server. At that point, an attacker could impersonate the client.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/juju/utils/security/advisories/GHSA-h34r-jxqm-qgpr">https://github.com/juju/utils/security/advisories/GHSA-h34r-jxqm-qgpr</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2025-6224">https://nvd.nist.gov/vuln/detail/CVE-2025-6224</a></li>
<li><a href="https://github.com/juju/utils/commit/766f27d7bcd10433453a9764509a864c17a46a76">https://github.com/juju/utils/commit/766f27d7bcd10433453a9764509a864c17a46a76</a></li>
<li><a href="https://github.com/juju/utils/releases/tag/v4.0.4">https://github.com/juju/utils/releases/tag/v4.0.4</a></li>
<li><a href="https://github.com/advisories/GHSA-h34r-jxqm-qgpr">https://github.com/advisories/GHSA-h34r-jxqm-qgpr</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-h34r-jxqm-qgpr</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2025-07-01T17:35:16.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/mattermost/mattermost/server/v8] Mattermost Incorrect Authorization vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-wgvp-jj4w-88hf</id>
        <link href="https://github.com/advisories/GHSA-wgvp-jj4w-88hf"/>
        <updated>2025-06-30T20:40:42.000Z</updated>
        <content type="html"><![CDATA[<p>Mattermost versions 10.5.x &lt;= 10.5.5, 9.11.x &lt;= 9.11.15, 10.8.x &lt;= 10.8.0, 10.7.x &lt;= 10.7.2, 10.6.x &lt;= 10.6.5 fail to properly validate channel membership when retrieving playbook run metadata, allowing authenticated users who are playbook members but not channel members to access sensitive information about linked private channels including channel name, display name, and participant count through the run metadata API endpoint.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2025-47871">https://nvd.nist.gov/vuln/detail/CVE-2025-47871</a></li>
<li><a href="https://mattermost.com/security-updates">https://mattermost.com/security-updates</a></li>
<li><a href="https://github.com/advisories/GHSA-wgvp-jj4w-88hf">https://github.com/advisories/GHSA-wgvp-jj4w-88hf</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-wgvp-jj4w-88hf</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2025-06-30T18:31:50.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/mattermost/mattermost/server/v8] Mattermost Incorrect Authorization vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-wgvp-jj4w-88hf</id>
        <link href="https://github.com/advisories/GHSA-wgvp-jj4w-88hf"/>
        <updated>2025-06-30T20:40:42.000Z</updated>
        <content type="html"><![CDATA[<p>Mattermost versions 10.5.x &lt;= 10.5.5, 9.11.x &lt;= 9.11.15, 10.8.x &lt;= 10.8.0, 10.7.x &lt;= 10.7.2, 10.6.x &lt;= 10.6.5 fail to properly validate channel membership when retrieving playbook run metadata, allowing authenticated users who are playbook members but not channel members to access sensitive information about linked private channels including channel name, display name, and participant count through the run metadata API endpoint.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2025-47871">https://nvd.nist.gov/vuln/detail/CVE-2025-47871</a></li>
<li><a href="https://mattermost.com/security-updates">https://mattermost.com/security-updates</a></li>
<li><a href="https://github.com/advisories/GHSA-wgvp-jj4w-88hf">https://github.com/advisories/GHSA-wgvp-jj4w-88hf</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-wgvp-jj4w-88hf</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2025-06-30T18:31:50.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/mattermost/mattermost/server/v8] Mattermost Incorrect Authorization vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-wgvp-jj4w-88hf</id>
        <link href="https://github.com/advisories/GHSA-wgvp-jj4w-88hf"/>
        <updated>2025-06-30T20:40:42.000Z</updated>
        <content type="html"><![CDATA[<p>Mattermost versions 10.5.x &lt;= 10.5.5, 9.11.x &lt;= 9.11.15, 10.8.x &lt;= 10.8.0, 10.7.x &lt;= 10.7.2, 10.6.x &lt;= 10.6.5 fail to properly validate channel membership when retrieving playbook run metadata, allowing authenticated users who are playbook members but not channel members to access sensitive information about linked private channels including channel name, display name, and participant count through the run metadata API endpoint.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2025-47871">https://nvd.nist.gov/vuln/detail/CVE-2025-47871</a></li>
<li><a href="https://mattermost.com/security-updates">https://mattermost.com/security-updates</a></li>
<li><a href="https://github.com/advisories/GHSA-wgvp-jj4w-88hf">https://github.com/advisories/GHSA-wgvp-jj4w-88hf</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-wgvp-jj4w-88hf</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2025-06-30T18:31:50.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/mattermost/mattermost/server/v8] Mattermost Incorrect Authorization vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-wgvp-jj4w-88hf</id>
        <link href="https://github.com/advisories/GHSA-wgvp-jj4w-88hf"/>
        <updated>2025-06-30T20:40:42.000Z</updated>
        <content type="html"><![CDATA[<p>Mattermost versions 10.5.x &lt;= 10.5.5, 9.11.x &lt;= 9.11.15, 10.8.x &lt;= 10.8.0, 10.7.x &lt;= 10.7.2, 10.6.x &lt;= 10.6.5 fail to properly validate channel membership when retrieving playbook run metadata, allowing authenticated users who are playbook members but not channel members to access sensitive information about linked private channels including channel name, display name, and participant count through the run metadata API endpoint.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2025-47871">https://nvd.nist.gov/vuln/detail/CVE-2025-47871</a></li>
<li><a href="https://mattermost.com/security-updates">https://mattermost.com/security-updates</a></li>
<li><a href="https://github.com/advisories/GHSA-wgvp-jj4w-88hf">https://github.com/advisories/GHSA-wgvp-jj4w-88hf</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-wgvp-jj4w-88hf</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2025-06-30T18:31:50.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/mattermost/mattermost/server/v8] Mattermost Incorrect Authorization vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-wgvp-jj4w-88hf</id>
        <link href="https://github.com/advisories/GHSA-wgvp-jj4w-88hf"/>
        <updated>2025-06-30T20:40:42.000Z</updated>
        <content type="html"><![CDATA[<p>Mattermost versions 10.5.x &lt;= 10.5.5, 9.11.x &lt;= 9.11.15, 10.8.x &lt;= 10.8.0, 10.7.x &lt;= 10.7.2, 10.6.x &lt;= 10.6.5 fail to properly validate channel membership when retrieving playbook run metadata, allowing authenticated users who are playbook members but not channel members to access sensitive information about linked private channels including channel name, display name, and participant count through the run metadata API endpoint.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2025-47871">https://nvd.nist.gov/vuln/detail/CVE-2025-47871</a></li>
<li><a href="https://mattermost.com/security-updates">https://mattermost.com/security-updates</a></li>
<li><a href="https://github.com/advisories/GHSA-wgvp-jj4w-88hf">https://github.com/advisories/GHSA-wgvp-jj4w-88hf</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-wgvp-jj4w-88hf</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2025-06-30T18:31:50.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/mattermost/mattermost/server/v8] Mattermost Incorrect Authorization vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-wgvp-jj4w-88hf</id>
        <link href="https://github.com/advisories/GHSA-wgvp-jj4w-88hf"/>
        <updated>2025-06-30T20:40:42.000Z</updated>
        <content type="html"><![CDATA[<p>Mattermost versions 10.5.x &lt;= 10.5.5, 9.11.x &lt;= 9.11.15, 10.8.x &lt;= 10.8.0, 10.7.x &lt;= 10.7.2, 10.6.x &lt;= 10.6.5 fail to properly validate channel membership when retrieving playbook run metadata, allowing authenticated users who are playbook members but not channel members to access sensitive information about linked private channels including channel name, display name, and participant count through the run metadata API endpoint.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2025-47871">https://nvd.nist.gov/vuln/detail/CVE-2025-47871</a></li>
<li><a href="https://mattermost.com/security-updates">https://mattermost.com/security-updates</a></li>
<li><a href="https://github.com/advisories/GHSA-wgvp-jj4w-88hf">https://github.com/advisories/GHSA-wgvp-jj4w-88hf</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-wgvp-jj4w-88hf</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2025-06-30T18:31:50.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/mattermost/mattermost-server] Mattermost Incorrect Authorization vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-wgvp-jj4w-88hf</id>
        <link href="https://github.com/advisories/GHSA-wgvp-jj4w-88hf"/>
        <updated>2025-06-30T20:40:42.000Z</updated>
        <content type="html"><![CDATA[<p>Mattermost versions 10.5.x &lt;= 10.5.5, 9.11.x &lt;= 9.11.15, 10.8.x &lt;= 10.8.0, 10.7.x &lt;= 10.7.2, 10.6.x &lt;= 10.6.5 fail to properly validate channel membership when retrieving playbook run metadata, allowing authenticated users who are playbook members but not channel members to access sensitive information about linked private channels including channel name, display name, and participant count through the run metadata API endpoint.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2025-47871">https://nvd.nist.gov/vuln/detail/CVE-2025-47871</a></li>
<li><a href="https://mattermost.com/security-updates">https://mattermost.com/security-updates</a></li>
<li><a href="https://github.com/advisories/GHSA-wgvp-jj4w-88hf">https://github.com/advisories/GHSA-wgvp-jj4w-88hf</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-wgvp-jj4w-88hf</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2025-06-30T18:31:50.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/mattermost/mattermost/server/v8] Mattermost Incorrect Authorization vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-v8fr-vxmw-6mf6</id>
        <link href="https://github.com/advisories/GHSA-v8fr-vxmw-6mf6"/>
        <updated>2025-06-30T20:40:34.000Z</updated>
        <content type="html"><![CDATA[<p>Mattermost versions 10.5.x &lt;= 10.5.5, 9.11.x &lt;= 9.11.15, 10.8.x &lt;= 10.8.0, 10.7.x &lt;= 10.7.2, 10.6.x &lt;= 10.6.5 fail to properly enforce channel member management permissions when adding participants to playbook runs. This allows authenticated users with member-level permissions to bypass system admin restrictions and add or remove users to/from private channels via the playbook run participants feature, even when the 'Manage Members' permission has been explicitly removed. This can lead to unauthorized access to sensitive channel content and allow guest users to gain channel management privileges.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2025-46702">https://nvd.nist.gov/vuln/detail/CVE-2025-46702</a></li>
<li><a href="https://mattermost.com/security-updates">https://mattermost.com/security-updates</a></li>
<li><a href="https://github.com/mattermost/mattermost/commit/31142f101e3cce6171e2b6cb4980a1aa8eaefae0">https://github.com/mattermost/mattermost/commit/31142f101e3cce6171e2b6cb4980a1aa8eaefae0</a></li>
<li><a href="https://github.com/mattermost/mattermost/commit/4ae5d647fb8893d77dccbb57d114855939a775ce">https://github.com/mattermost/mattermost/commit/4ae5d647fb8893d77dccbb57d114855939a775ce</a></li>
<li><a href="https://github.com/advisories/GHSA-v8fr-vxmw-6mf6">https://github.com/advisories/GHSA-v8fr-vxmw-6mf6</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-v8fr-vxmw-6mf6</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2025-06-30T18:31:50.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/mattermost/mattermost/server/v8] Mattermost Incorrect Authorization vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-v8fr-vxmw-6mf6</id>
        <link href="https://github.com/advisories/GHSA-v8fr-vxmw-6mf6"/>
        <updated>2025-06-30T20:40:34.000Z</updated>
        <content type="html"><![CDATA[<p>Mattermost versions 10.5.x &lt;= 10.5.5, 9.11.x &lt;= 9.11.15, 10.8.x &lt;= 10.8.0, 10.7.x &lt;= 10.7.2, 10.6.x &lt;= 10.6.5 fail to properly enforce channel member management permissions when adding participants to playbook runs. This allows authenticated users with member-level permissions to bypass system admin restrictions and add or remove users to/from private channels via the playbook run participants feature, even when the 'Manage Members' permission has been explicitly removed. This can lead to unauthorized access to sensitive channel content and allow guest users to gain channel management privileges.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2025-46702">https://nvd.nist.gov/vuln/detail/CVE-2025-46702</a></li>
<li><a href="https://mattermost.com/security-updates">https://mattermost.com/security-updates</a></li>
<li><a href="https://github.com/mattermost/mattermost/commit/31142f101e3cce6171e2b6cb4980a1aa8eaefae0">https://github.com/mattermost/mattermost/commit/31142f101e3cce6171e2b6cb4980a1aa8eaefae0</a></li>
<li><a href="https://github.com/mattermost/mattermost/commit/4ae5d647fb8893d77dccbb57d114855939a775ce">https://github.com/mattermost/mattermost/commit/4ae5d647fb8893d77dccbb57d114855939a775ce</a></li>
<li><a href="https://github.com/advisories/GHSA-v8fr-vxmw-6mf6">https://github.com/advisories/GHSA-v8fr-vxmw-6mf6</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-v8fr-vxmw-6mf6</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2025-06-30T18:31:50.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/mattermost/mattermost/server/v8] Mattermost Incorrect Authorization vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-v8fr-vxmw-6mf6</id>
        <link href="https://github.com/advisories/GHSA-v8fr-vxmw-6mf6"/>
        <updated>2025-06-30T20:40:34.000Z</updated>
        <content type="html"><![CDATA[<p>Mattermost versions 10.5.x &lt;= 10.5.5, 9.11.x &lt;= 9.11.15, 10.8.x &lt;= 10.8.0, 10.7.x &lt;= 10.7.2, 10.6.x &lt;= 10.6.5 fail to properly enforce channel member management permissions when adding participants to playbook runs. This allows authenticated users with member-level permissions to bypass system admin restrictions and add or remove users to/from private channels via the playbook run participants feature, even when the 'Manage Members' permission has been explicitly removed. This can lead to unauthorized access to sensitive channel content and allow guest users to gain channel management privileges.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2025-46702">https://nvd.nist.gov/vuln/detail/CVE-2025-46702</a></li>
<li><a href="https://mattermost.com/security-updates">https://mattermost.com/security-updates</a></li>
<li><a href="https://github.com/mattermost/mattermost/commit/31142f101e3cce6171e2b6cb4980a1aa8eaefae0">https://github.com/mattermost/mattermost/commit/31142f101e3cce6171e2b6cb4980a1aa8eaefae0</a></li>
<li><a href="https://github.com/mattermost/mattermost/commit/4ae5d647fb8893d77dccbb57d114855939a775ce">https://github.com/mattermost/mattermost/commit/4ae5d647fb8893d77dccbb57d114855939a775ce</a></li>
<li><a href="https://github.com/advisories/GHSA-v8fr-vxmw-6mf6">https://github.com/advisories/GHSA-v8fr-vxmw-6mf6</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-v8fr-vxmw-6mf6</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2025-06-30T18:31:50.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/mattermost/mattermost/server/v8] Mattermost Incorrect Authorization vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-v8fr-vxmw-6mf6</id>
        <link href="https://github.com/advisories/GHSA-v8fr-vxmw-6mf6"/>
        <updated>2025-06-30T20:40:34.000Z</updated>
        <content type="html"><![CDATA[<p>Mattermost versions 10.5.x &lt;= 10.5.5, 9.11.x &lt;= 9.11.15, 10.8.x &lt;= 10.8.0, 10.7.x &lt;= 10.7.2, 10.6.x &lt;= 10.6.5 fail to properly enforce channel member management permissions when adding participants to playbook runs. This allows authenticated users with member-level permissions to bypass system admin restrictions and add or remove users to/from private channels via the playbook run participants feature, even when the 'Manage Members' permission has been explicitly removed. This can lead to unauthorized access to sensitive channel content and allow guest users to gain channel management privileges.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2025-46702">https://nvd.nist.gov/vuln/detail/CVE-2025-46702</a></li>
<li><a href="https://mattermost.com/security-updates">https://mattermost.com/security-updates</a></li>
<li><a href="https://github.com/mattermost/mattermost/commit/31142f101e3cce6171e2b6cb4980a1aa8eaefae0">https://github.com/mattermost/mattermost/commit/31142f101e3cce6171e2b6cb4980a1aa8eaefae0</a></li>
<li><a href="https://github.com/mattermost/mattermost/commit/4ae5d647fb8893d77dccbb57d114855939a775ce">https://github.com/mattermost/mattermost/commit/4ae5d647fb8893d77dccbb57d114855939a775ce</a></li>
<li><a href="https://github.com/advisories/GHSA-v8fr-vxmw-6mf6">https://github.com/advisories/GHSA-v8fr-vxmw-6mf6</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-v8fr-vxmw-6mf6</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2025-06-30T18:31:50.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/mattermost/mattermost/server/v8] Mattermost Incorrect Authorization vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-v8fr-vxmw-6mf6</id>
        <link href="https://github.com/advisories/GHSA-v8fr-vxmw-6mf6"/>
        <updated>2025-06-30T20:40:34.000Z</updated>
        <content type="html"><![CDATA[<p>Mattermost versions 10.5.x &lt;= 10.5.5, 9.11.x &lt;= 9.11.15, 10.8.x &lt;= 10.8.0, 10.7.x &lt;= 10.7.2, 10.6.x &lt;= 10.6.5 fail to properly enforce channel member management permissions when adding participants to playbook runs. This allows authenticated users with member-level permissions to bypass system admin restrictions and add or remove users to/from private channels via the playbook run participants feature, even when the 'Manage Members' permission has been explicitly removed. This can lead to unauthorized access to sensitive channel content and allow guest users to gain channel management privileges.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2025-46702">https://nvd.nist.gov/vuln/detail/CVE-2025-46702</a></li>
<li><a href="https://mattermost.com/security-updates">https://mattermost.com/security-updates</a></li>
<li><a href="https://github.com/mattermost/mattermost/commit/31142f101e3cce6171e2b6cb4980a1aa8eaefae0">https://github.com/mattermost/mattermost/commit/31142f101e3cce6171e2b6cb4980a1aa8eaefae0</a></li>
<li><a href="https://github.com/mattermost/mattermost/commit/4ae5d647fb8893d77dccbb57d114855939a775ce">https://github.com/mattermost/mattermost/commit/4ae5d647fb8893d77dccbb57d114855939a775ce</a></li>
<li><a href="https://github.com/advisories/GHSA-v8fr-vxmw-6mf6">https://github.com/advisories/GHSA-v8fr-vxmw-6mf6</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-v8fr-vxmw-6mf6</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2025-06-30T18:31:50.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/mattermost/mattermost/server/v8] Mattermost Incorrect Authorization vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-v8fr-vxmw-6mf6</id>
        <link href="https://github.com/advisories/GHSA-v8fr-vxmw-6mf6"/>
        <updated>2025-06-30T20:40:34.000Z</updated>
        <content type="html"><![CDATA[<p>Mattermost versions 10.5.x &lt;= 10.5.5, 9.11.x &lt;= 9.11.15, 10.8.x &lt;= 10.8.0, 10.7.x &lt;= 10.7.2, 10.6.x &lt;= 10.6.5 fail to properly enforce channel member management permissions when adding participants to playbook runs. This allows authenticated users with member-level permissions to bypass system admin restrictions and add or remove users to/from private channels via the playbook run participants feature, even when the 'Manage Members' permission has been explicitly removed. This can lead to unauthorized access to sensitive channel content and allow guest users to gain channel management privileges.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2025-46702">https://nvd.nist.gov/vuln/detail/CVE-2025-46702</a></li>
<li><a href="https://mattermost.com/security-updates">https://mattermost.com/security-updates</a></li>
<li><a href="https://github.com/mattermost/mattermost/commit/31142f101e3cce6171e2b6cb4980a1aa8eaefae0">https://github.com/mattermost/mattermost/commit/31142f101e3cce6171e2b6cb4980a1aa8eaefae0</a></li>
<li><a href="https://github.com/mattermost/mattermost/commit/4ae5d647fb8893d77dccbb57d114855939a775ce">https://github.com/mattermost/mattermost/commit/4ae5d647fb8893d77dccbb57d114855939a775ce</a></li>
<li><a href="https://github.com/advisories/GHSA-v8fr-vxmw-6mf6">https://github.com/advisories/GHSA-v8fr-vxmw-6mf6</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-v8fr-vxmw-6mf6</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2025-06-30T18:31:50.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/mattermost/mattermost-server] Mattermost Incorrect Authorization vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-v8fr-vxmw-6mf6</id>
        <link href="https://github.com/advisories/GHSA-v8fr-vxmw-6mf6"/>
        <updated>2025-06-30T20:40:34.000Z</updated>
        <content type="html"><![CDATA[<p>Mattermost versions 10.5.x &lt;= 10.5.5, 9.11.x &lt;= 9.11.15, 10.8.x &lt;= 10.8.0, 10.7.x &lt;= 10.7.2, 10.6.x &lt;= 10.6.5 fail to properly enforce channel member management permissions when adding participants to playbook runs. This allows authenticated users with member-level permissions to bypass system admin restrictions and add or remove users to/from private channels via the playbook run participants feature, even when the 'Manage Members' permission has been explicitly removed. This can lead to unauthorized access to sensitive channel content and allow guest users to gain channel management privileges.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2025-46702">https://nvd.nist.gov/vuln/detail/CVE-2025-46702</a></li>
<li><a href="https://mattermost.com/security-updates">https://mattermost.com/security-updates</a></li>
<li><a href="https://github.com/mattermost/mattermost/commit/31142f101e3cce6171e2b6cb4980a1aa8eaefae0">https://github.com/mattermost/mattermost/commit/31142f101e3cce6171e2b6cb4980a1aa8eaefae0</a></li>
<li><a href="https://github.com/mattermost/mattermost/commit/4ae5d647fb8893d77dccbb57d114855939a775ce">https://github.com/mattermost/mattermost/commit/4ae5d647fb8893d77dccbb57d114855939a775ce</a></li>
<li><a href="https://github.com/advisories/GHSA-v8fr-vxmw-6mf6">https://github.com/advisories/GHSA-v8fr-vxmw-6mf6</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-v8fr-vxmw-6mf6</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2025-06-30T18:31:50.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/babylonlabs-io/babylon/v2] Babylon vulnerable to chain half when transaction has fees different than `ubbn`]]></title>
        <id>https://github.com/advisories/GHSA-56j4-446m-qrf6</id>
        <link href="https://github.com/advisories/GHSA-56j4-446m-qrf6"/>
        <updated>2025-06-30T17:54:03.000Z</updated>
        <content type="html"><![CDATA[<h3 id="summary">Summary</h3>
<p>Sending transactions with fees different than native Babylon genesis denom (<code>ubbn</code>) leads to chain halt.</p>
<h3 id="impact">Impact</h3>
<p>Denial of Service - Due to panic in the <code>x/distribution</code> module <code>BeginBlocker</code> triggered by a error when sending fees  from <code>feeCollector</code> to <code>x/distribution</code> module - <a href="https://github.com/cosmos/cosmos-sdk/blob/main/x/distribution/keeper/allocation.go#L28">https://github.com/cosmos/cosmos-sdk/blob/main/x/distribution/keeper/allocation.go#L28</a> Babylon Genesis will halt</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/babylonlabs-io/babylon/security/advisories/GHSA-56j4-446m-qrf6">https://github.com/babylonlabs-io/babylon/security/advisories/GHSA-56j4-446m-qrf6</a></li>
<li><a href="https://github.com/babylonlabs-io/babylon/commit/fe67aebd5216e7d3afa1d7dee2a3f82e548556f3">https://github.com/babylonlabs-io/babylon/commit/fe67aebd5216e7d3afa1d7dee2a3f82e548556f3</a></li>
<li><a href="https://github.com/cosmos/cosmos-sdk/blob/main/x/distribution/keeper/allocation.go#L28">https://github.com/cosmos/cosmos-sdk/blob/main/x/distribution/keeper/allocation.go#L28</a></li>
<li><a href="https://github.com/advisories/GHSA-56j4-446m-qrf6">https://github.com/advisories/GHSA-56j4-446m-qrf6</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-56j4-446m-qrf6</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2025-06-30T17:54:02.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/filebrowser/filebrowser] File Browser vulnerable to insecure password handling]]></title>
        <id>https://github.com/advisories/GHSA-cm2r-rg7r-p7gg</id>
        <link href="https://github.com/advisories/GHSA-cm2r-rg7r-p7gg"/>
        <updated>2025-07-02T14:20:00.000Z</updated>
        <content type="html"><![CDATA[<h2 id="summary">Summary</h2>
<p>All user accounts authenticate towards a <em>File Browser</em> instance with a password. A missing password policy and brute-force protection makes it impossible for administrators to properly secure the authentication process.</p>
<h2 id="impact">Impact</h2>
<p>Attackers can mount a brute-force attack against the passwords of all accounts of an instance. Since the application is lacking the ability to prevent users from choosing a weak password, the attack is likely to succeed.</p>
<h2 id="vulnerability-description">Vulnerability Description</h2>
<p>The application implement a classical authentication scheme using a username and password combination. While employed by many systems, this scheme is quite error-prone and a common cause for vulnerabilities. File Browser's implementation has multiple weak points:</p>
<ol>
<li>Since the application is missing the capability for administrators to define a password policy, users are at liberty to set trivial and well-known passwords such as <code>secret</code> or even ones with only single digit like <code>1</code>.</li>
<li>New instances are set up with a default password of <code>admin</code> for the initial administrative account. This password is well known and easily guessable. While the documentation advises to change this password, the application does not technically enforce it.</li>
<li>The application does not implement any brute-force protection for the authentication endpoint. Attackers can make as many guesses for a password as the network bandwidth allows.</li>
</ol>
<p>The combination of these problems makes it likely, that an attacker will succeed in compromising at least one account in a <em>File Browser</em> instance, possibly even one with administrative privileges. The likelihood of such an attack increases substantially for internet-facing instances.</p>
<h2 id="proof-of-concept">Proof of Concept</h2>
<p>The insecure default credentials are documented on the application's website:</p>
<p><img alt="image" src="https://github.com/user-attachments/assets/46c07d99-dc7b-4d6e-ac27-7eb002229201"></p>
<p>The following HTTP communication shows, that a trivial password of <code>1</code> can be configured by a user:</p>
<pre><code class="language-http">PUT /api/users/2 HTTP/1.1
Host: filebrowser.local:8080
User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://filebrowser.local:8080/settings/profile
X-Auth: eyJ[...]
Content-Type: text/plain;charset=UTF-8
Content-Length: 319
Origin: http://filebrowser.local:8080
Connection: keep-alive
Cookie: auth=eyJ[...]
X-PwnFox-Color: cyan
Priority: u=0

{"what":"user","which":["password"],"data":{"id":2,"locale":"en","viewMode":"mosaic","singleClick":false,"perm":{"admin":false,"execute":true,"create":true,"rename":true,"modify":true,"delete":true,"share":true,"download":true},"commands":[],"lockPassword":false,"hideDotfiles":false,"dateFormat":false,"password":"1"}}

HTTP/1.1 200 OK
Cache-Control: no-cache, no-store, must-revalidate
Content-Security-Policy: default-src 'self'; style-src 'unsafe-inline';
Content-Type: text/plain; charset=utf-8
X-Content-Type-Options: nosniff
Date: Thu, 27 Mar 2025 08:31:34 GMT
Content-Length: 7

200 OK
</code></pre>
<p>The missing brute-force protection can easily be tested by repeatedly sending the following request to the application with a tool such as Burp or hydra.</p>
<pre><code>POST /api/login HTTP/1.1
Host: filebrowser.local:8080
User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Content-Type: application/json
Content-Length: 52
Origin: http://filebrowser.local:8080

{"username":"admin","password":"myPasswordGuess","recaptcha":""}

HTTP/1.1 403 Forbidden
Cache-Control: no-cache, no-store, must-revalidate
Content-Security-Policy: default-src 'self'; style-src 'unsafe-inline';
Content-Type: text/plain; charset=utf-8
X-Content-Type-Options: nosniff
Date: Thu, 27 Mar 2025 08:39:48 GMT
Content-Length: 14

403 Forbidden
</code></pre>
<p>After sending 3000 bad passwords to the application within a few seconds, a successful authentication is still possible for the account:</p>
<pre><code class="language-http">POST /api/login HTTP/1.1
Host: filebrowser.local:8080
User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Content-Type: application/json
Content-Length: 54
Origin: http://filebrowser.local:8080
Connection: keep-alive

{"username":"admin","password":"myCorrectPassword","recaptcha":""}

HTTP/1.1 200 OK
Cache-Control: no-cache, no-store, must-revalidate
Content-Security-Policy: default-src 'self'; style-src 'unsafe-inline';
Content-Type: text/plain
Date: Thu, 27 Mar 2025 08:39:58 GMT
Content-Length: 508

eyJ[...]
</code></pre>
<h2 id="recommended-countermeasures">Recommended Countermeasures</h2>
<p>The application should add an option to define a password policy in its administrative interface which allows to set a minimum length for passwords.
The default settings should be in line with the NIST publication SP 800-63B. This means, that now passwords of fewer than 8 characters should ever be allowed by the application.
Whenever a user sets a new password, the application should verify whether that password is part of a "known passwords" list.</p>
<p>The application should either create a secure and random password for the <code>admin</code> account upon initialization or enforce an immediate password change when that user logs in for the first time using the default password.</p>
<p>A brute-force protection needs to be implemented, which limits the allowed amount of authentication attempts per user within a certain timeframe. This implementation should employ <em>device tokens</em> to prevent targeted lockout attacks.</p>
<p>In addition, it would be advisable to allow the integration of the application into and existing <em>Identity Provider</em> using protocols like LDAP or OIDC.</p>
<h2 id="timeline">Timeline</h2>
<ul>
<li><code>2025-03-27</code> Identified the vulnerability in version 2.32.0</li>
<li><code>2025-04-11</code> Contacted the project</li>
<li><code>2025-04-29</code> Vulnerability disclosed to the project</li>
<li><code>2025-06-25</code> Uploaded advisories to the project's GitHub repository</li>
<li><code>2025-06-26</code> CVE ID assigned by GitHub</li>
<li><code>2025-06-29</code> Fix released in version 2.34.1. 12 minimum characters as default has been chosen since the implementation does not include protection against brute force attacks.</li>
</ul>
<h2 id="references">References</h2>
<ul>
<li><a href="https://cheatsheetseries.owasp.org/cheatsheets/Authentication_Cheat_Sheet.html#implement-proper-password-strength-controls">OWASP Authentication Cheat Sheet</a></li>
<li><a href="https://pages.nist.gov/800-63-4/sp800-63b.html#password">NIST Special Publication 800-63B. Digital Identity Guidelines. Passwords</a></li>
<li><a href="https://haveibeenpwned.com/Passwords">Pwned Passwords</a></li>
<li><a href="https://github.com/danielmiessler/SecLists/tree/master/Passwords/Common-Credentials">Common Credentials</a></li>
<li><a href="https://cwe.mitre.org/data/definitions/307.html">CWE-307: Improper Restriction of Excessive Authentication Attempts</a></li>
<li><a href="https://cwe.mitre.org/data/definitions/521.html">CWE-521: Weak Password Requirements</a></li>
<li><a href="https://cwe.mitre.org/data/definitions/1392.html">CWE-1392: Use of Default Credentials</a></li>
</ul>
<h2 id="credits">Credits</h2>
<ul>
<li>Mathias Tausig (<a href="https://www.sba-research.org/">SBA Research</a>)</li>
</ul>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/filebrowser/filebrowser/security/advisories/GHSA-cm2r-rg7r-p7gg">https://github.com/filebrowser/filebrowser/security/advisories/GHSA-cm2r-rg7r-p7gg</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2025-52997">https://nvd.nist.gov/vuln/detail/CVE-2025-52997</a></li>
<li><a href="https://github.com/filebrowser/filebrowser/commit/bf37f88c32222ad9c186482bb97338a9c9b4a93c">https://github.com/filebrowser/filebrowser/commit/bf37f88c32222ad9c186482bb97338a9c9b4a93c</a></li>
<li><a href="https://github.com/advisories/GHSA-cm2r-rg7r-p7gg">https://github.com/advisories/GHSA-cm2r-rg7r-p7gg</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-cm2r-rg7r-p7gg</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2025-06-30T17:50:01.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/filebrowser/filebrowser/v2] File Browser vulnerable to insecure password handling]]></title>
        <id>https://github.com/advisories/GHSA-cm2r-rg7r-p7gg</id>
        <link href="https://github.com/advisories/GHSA-cm2r-rg7r-p7gg"/>
        <updated>2025-07-02T14:20:00.000Z</updated>
        <content type="html"><![CDATA[<h2 id="summary">Summary</h2>
<p>All user accounts authenticate towards a <em>File Browser</em> instance with a password. A missing password policy and brute-force protection makes it impossible for administrators to properly secure the authentication process.</p>
<h2 id="impact">Impact</h2>
<p>Attackers can mount a brute-force attack against the passwords of all accounts of an instance. Since the application is lacking the ability to prevent users from choosing a weak password, the attack is likely to succeed.</p>
<h2 id="vulnerability-description">Vulnerability Description</h2>
<p>The application implement a classical authentication scheme using a username and password combination. While employed by many systems, this scheme is quite error-prone and a common cause for vulnerabilities. File Browser's implementation has multiple weak points:</p>
<ol>
<li>Since the application is missing the capability for administrators to define a password policy, users are at liberty to set trivial and well-known passwords such as <code>secret</code> or even ones with only single digit like <code>1</code>.</li>
<li>New instances are set up with a default password of <code>admin</code> for the initial administrative account. This password is well known and easily guessable. While the documentation advises to change this password, the application does not technically enforce it.</li>
<li>The application does not implement any brute-force protection for the authentication endpoint. Attackers can make as many guesses for a password as the network bandwidth allows.</li>
</ol>
<p>The combination of these problems makes it likely, that an attacker will succeed in compromising at least one account in a <em>File Browser</em> instance, possibly even one with administrative privileges. The likelihood of such an attack increases substantially for internet-facing instances.</p>
<h2 id="proof-of-concept">Proof of Concept</h2>
<p>The insecure default credentials are documented on the application's website:</p>
<p><img alt="image" src="https://github.com/user-attachments/assets/46c07d99-dc7b-4d6e-ac27-7eb002229201"></p>
<p>The following HTTP communication shows, that a trivial password of <code>1</code> can be configured by a user:</p>
<pre><code class="language-http">PUT /api/users/2 HTTP/1.1
Host: filebrowser.local:8080
User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://filebrowser.local:8080/settings/profile
X-Auth: eyJ[...]
Content-Type: text/plain;charset=UTF-8
Content-Length: 319
Origin: http://filebrowser.local:8080
Connection: keep-alive
Cookie: auth=eyJ[...]
X-PwnFox-Color: cyan
Priority: u=0

{"what":"user","which":["password"],"data":{"id":2,"locale":"en","viewMode":"mosaic","singleClick":false,"perm":{"admin":false,"execute":true,"create":true,"rename":true,"modify":true,"delete":true,"share":true,"download":true},"commands":[],"lockPassword":false,"hideDotfiles":false,"dateFormat":false,"password":"1"}}

HTTP/1.1 200 OK
Cache-Control: no-cache, no-store, must-revalidate
Content-Security-Policy: default-src 'self'; style-src 'unsafe-inline';
Content-Type: text/plain; charset=utf-8
X-Content-Type-Options: nosniff
Date: Thu, 27 Mar 2025 08:31:34 GMT
Content-Length: 7

200 OK
</code></pre>
<p>The missing brute-force protection can easily be tested by repeatedly sending the following request to the application with a tool such as Burp or hydra.</p>
<pre><code>POST /api/login HTTP/1.1
Host: filebrowser.local:8080
User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Content-Type: application/json
Content-Length: 52
Origin: http://filebrowser.local:8080

{"username":"admin","password":"myPasswordGuess","recaptcha":""}

HTTP/1.1 403 Forbidden
Cache-Control: no-cache, no-store, must-revalidate
Content-Security-Policy: default-src 'self'; style-src 'unsafe-inline';
Content-Type: text/plain; charset=utf-8
X-Content-Type-Options: nosniff
Date: Thu, 27 Mar 2025 08:39:48 GMT
Content-Length: 14

403 Forbidden
</code></pre>
<p>After sending 3000 bad passwords to the application within a few seconds, a successful authentication is still possible for the account:</p>
<pre><code class="language-http">POST /api/login HTTP/1.1
Host: filebrowser.local:8080
User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Content-Type: application/json
Content-Length: 54
Origin: http://filebrowser.local:8080
Connection: keep-alive

{"username":"admin","password":"myCorrectPassword","recaptcha":""}

HTTP/1.1 200 OK
Cache-Control: no-cache, no-store, must-revalidate
Content-Security-Policy: default-src 'self'; style-src 'unsafe-inline';
Content-Type: text/plain
Date: Thu, 27 Mar 2025 08:39:58 GMT
Content-Length: 508

eyJ[...]
</code></pre>
<h2 id="recommended-countermeasures">Recommended Countermeasures</h2>
<p>The application should add an option to define a password policy in its administrative interface which allows to set a minimum length for passwords.
The default settings should be in line with the NIST publication SP 800-63B. This means, that now passwords of fewer than 8 characters should ever be allowed by the application.
Whenever a user sets a new password, the application should verify whether that password is part of a "known passwords" list.</p>
<p>The application should either create a secure and random password for the <code>admin</code> account upon initialization or enforce an immediate password change when that user logs in for the first time using the default password.</p>
<p>A brute-force protection needs to be implemented, which limits the allowed amount of authentication attempts per user within a certain timeframe. This implementation should employ <em>device tokens</em> to prevent targeted lockout attacks.</p>
<p>In addition, it would be advisable to allow the integration of the application into and existing <em>Identity Provider</em> using protocols like LDAP or OIDC.</p>
<h2 id="timeline">Timeline</h2>
<ul>
<li><code>2025-03-27</code> Identified the vulnerability in version 2.32.0</li>
<li><code>2025-04-11</code> Contacted the project</li>
<li><code>2025-04-29</code> Vulnerability disclosed to the project</li>
<li><code>2025-06-25</code> Uploaded advisories to the project's GitHub repository</li>
<li><code>2025-06-26</code> CVE ID assigned by GitHub</li>
<li><code>2025-06-29</code> Fix released in version 2.34.1. 12 minimum characters as default has been chosen since the implementation does not include protection against brute force attacks.</li>
</ul>
<h2 id="references">References</h2>
<ul>
<li><a href="https://cheatsheetseries.owasp.org/cheatsheets/Authentication_Cheat_Sheet.html#implement-proper-password-strength-controls">OWASP Authentication Cheat Sheet</a></li>
<li><a href="https://pages.nist.gov/800-63-4/sp800-63b.html#password">NIST Special Publication 800-63B. Digital Identity Guidelines. Passwords</a></li>
<li><a href="https://haveibeenpwned.com/Passwords">Pwned Passwords</a></li>
<li><a href="https://github.com/danielmiessler/SecLists/tree/master/Passwords/Common-Credentials">Common Credentials</a></li>
<li><a href="https://cwe.mitre.org/data/definitions/307.html">CWE-307: Improper Restriction of Excessive Authentication Attempts</a></li>
<li><a href="https://cwe.mitre.org/data/definitions/521.html">CWE-521: Weak Password Requirements</a></li>
<li><a href="https://cwe.mitre.org/data/definitions/1392.html">CWE-1392: Use of Default Credentials</a></li>
</ul>
<h2 id="credits">Credits</h2>
<ul>
<li>Mathias Tausig (<a href="https://www.sba-research.org/">SBA Research</a>)</li>
</ul>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/filebrowser/filebrowser/security/advisories/GHSA-cm2r-rg7r-p7gg">https://github.com/filebrowser/filebrowser/security/advisories/GHSA-cm2r-rg7r-p7gg</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2025-52997">https://nvd.nist.gov/vuln/detail/CVE-2025-52997</a></li>
<li><a href="https://github.com/filebrowser/filebrowser/commit/bf37f88c32222ad9c186482bb97338a9c9b4a93c">https://github.com/filebrowser/filebrowser/commit/bf37f88c32222ad9c186482bb97338a9c9b4a93c</a></li>
<li><a href="https://github.com/advisories/GHSA-cm2r-rg7r-p7gg">https://github.com/advisories/GHSA-cm2r-rg7r-p7gg</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-cm2r-rg7r-p7gg</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2025-06-30T17:50:01.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/filebrowser/filebrowser] File Browser's password protection of links is bypassable]]></title>
        <id>https://github.com/advisories/GHSA-3v48-283x-f2w4</id>
        <link href="https://github.com/advisories/GHSA-3v48-283x-f2w4"/>
        <updated>2025-06-30T21:47:28.000Z</updated>
        <content type="html"><![CDATA[<h2 id="summary">Summary</h2>
<p>Files managed by the <em>File Browser</em> can be shared with a link to external persons. While the application allows protecting those links with a password, the implementation is error-prone, making an incidental unprotected sharing of a file possible.</p>
<h2 id="impact">Impact</h2>
<p>File owners might rest in the assumption that their shared files are only accessible to persons knowing the defined password, giving them a false sense of security. Meanwhile, attackers gaining access to the unprotected link can use this information alone to download the possibly sensitive file.</p>
<h2 id="vulnerability-description">Vulnerability Description</h2>
<p>When sharing a file, the user is presented with a dialog asking for an optional password to protect the file share. The assumption of the user at this point would be, that the shared file won't be accessible without knowledge of the password. After clicking on <code>SHARE</code> the following dialog opens allowing the file's owner to copy the share-link:</p>
<p><img alt="image" src="https://github.com/user-attachments/assets/f3add074-40ac-4367-a538-ede5bb526916"></p>
<p>In fact, there is not one, but two links offered: A <code>Download Link</code> and an unnamed second one. They have the following format:</p>
<ul>
<li><a href="http://filebrowser.local:8080/share/6Gtw0xAw">http://filebrowser.local:8080/share/6Gtw0xAw</a></li>
<li><a href="http://filebrowser.local:8080/api/public/dl/6Gtw0xAw/dummy1.pdf?token=voDK6j%5B...%5D">http://filebrowser.local:8080/api/public/dl/6Gtw0xAw/dummy1.pdf?token=voDK6j[...]</a></li>
</ul>
<p>Apparently, the first of the two share links is that one that users are supposed to actually share, while the second one is a direct download link not protected by the password. This behavior is not documented anywhere or explained in the GUI, though.</p>
<p>There are multiple scenarios how an attacker might gain access to the unprotected link and, in consequence, to the shared file:</p>
<ul>
<li>The file owner might incidentally share the second link instead of the first one, making it accessible to anyone having read access to the messaging system used (e.g., a mailserver).</li>
<li>After the legitimate receiver of the share has used the password, the unprotected link will get linked in multiple locations like the browser history or the log of a proxy server used.</li>
</ul>
<h2 id="proof-of-concept">Proof of Concept</h2>
<p>Using the first link results in an authorization error if no password is provided, as expected:</p>
<pre><code class="language-http">GET /api/public/share/6Gtw0xAw HTTP/1.1
Host: filebrowser.local:8080
User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://filebrowser.local:8080/share/6Gtw0xAw
X-Auth: 
X-SHARE-PASSWORD: 
DNT: 1
Sec-GPC: 1
Connection: keep-alive
Priority: u=4

HTTP/1.1 401 Unauthorized
Cache-Control: no-cache, no-store, must-revalidate
Content-Security-Policy: default-src 'self'; style-src 'unsafe-inline';
Content-Type: text/plain; charset=utf-8
X-Content-Type-Options: nosniff
Date: Thu, 27 Mar 2025 10:59:12 GMT
Content-Length: 17

401 Unauthorized
</code></pre>
<p>Only if the password is provided (via the <code>X-SHARE-PASSWORD</code> header), a proper response is given:</p>
<pre><code class="language-http">GET /api/public/share/6Gtw0xAw HTTP/1.1
Host: filebrowser.local:8080
User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://filebrowser.local:8080/share/6Gtw0xAw
X-Auth: 
X-SHARE-PASSWORD: 1234
DNT: 1
Sec-GPC: 1
Connection: keep-alive
Priority: u=0

HTTP/1.1 200 OK
Cache-Control: no-cache, no-store, must-revalidate
Content-Security-Policy: default-src 'self'; style-src 'unsafe-inline';
Content-Type: application/json; charset=utf-8
Date: Thu, 27 Mar 2025 10:59:15 GMT
Content-Length: 301

{"path":"","name":"dummy1.pdf","size":7703,"extension":".pdf","modified":"2025-03-27T15:11:45.101242449Z","mode":420,"isDir":false,"isSymlink":false,"type":"pdf","token":"voDK6j[...]"}
</code></pre>
<p>But it does not return the actual file content but rather an access token.
This is the very same token that is already part of the second share URL and is used by the web application to recreate the actual download URL.
If you are in possession of that one, no further password check is performed, and the content of the file is returned:</p>
<pre><code class="language-http">GET /api/public/dl/6Gtw0xAw?inline=true&amp;token=voDK6j[...] HTTP/1.1
Host: filebrowser.local:8080
User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
DNT: 1
Sec-GPC: 1
Connection: keep-alive
Referer: http://filebrowser.local:8080/share/6Gtw0xAw
Upgrade-Insecure-Requests: 1
Priority: u=0, i

HTTP/1.1 200 OK
Accept-Ranges: bytes
Cache-Control: private
Content-Disposition: inline
Content-Length: 7703
Content-Security-Policy: default-src 'self'; style-src 'unsafe-inline';
Content-Security-Policy: script-src 'none';
Content-Type: application/pdf
Last-Modified: Mon, 03 Mar 2025 15:11:45 GMT
Date: Thu, 27 Mar 2025 10:59:18 GMT

%PDF-1.4
%Çì¢
%%Invocation: path/gs -P- -dSAFER -dCompatibilityLevel=1.4 -q -P- -dNOPAUSE -dBATCH -sDEVICE=pdfwrite -sstdout=? -sOutputFile=? -P- -dSAFER -dCompatibilityLevel=1.4 -
5 0 obj
[...]
</code></pre>
<h2 id="recommended-countermeasures">Recommended Countermeasures</h2>
<p>A short time solution would be to simple remove the second link from the GUI when a password protected share is created.
Doing so will be a proper defense against user errors, but it will still leave unprotected links in various logs.
A thorough fix has to eliminate the unprotected links completely, access to the file must only be given to requests containing the share password.</p>
<h2 id="timeline">Timeline</h2>
<ul>
<li><code>2025-03-27</code> Identified the vulnerability in version 2.32.0</li>
<li><code>2025-04-11</code> Contacted the project</li>
<li><code>2025-04-29</code> Vulnerability disclosed to the project</li>
<li><code>2025-06-25</code> Uploaded advisories to the project's GitHub repository</li>
<li><code>2025-06-25</code> CVE ID assigned by GitHub</li>
<li><code>2025-06-29</code> Mitigation of user error released in version 2.34.2</li>
<li><code>2025-06-29</code> Issue <a href="https://github.com/filebrowser/filebrowser/issues/5239">#5239</a> opened to track a more thorough fix of the feature</li>
</ul>
<h2 id="references">References</h2>
<ul>
<li><a href="https://cwe.mitre.org/data/definitions/305.html">CWE-305: Authentication Bypass by Primary Weakness</a></li>
</ul>
<h2 id="credits">Credits</h2>
<ul>
<li>Mathias Tausig (<a href="https://www.sba-research.org/">SBA Research</a>)</li>
</ul>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/filebrowser/filebrowser/security/advisories/GHSA-3v48-283x-f2w4">https://github.com/filebrowser/filebrowser/security/advisories/GHSA-3v48-283x-f2w4</a></li>
<li><a href="https://github.com/filebrowser/filebrowser/issues/5239">https://github.com/filebrowser/filebrowser/issues/5239</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2025-52996">https://nvd.nist.gov/vuln/detail/CVE-2025-52996</a></li>
<li><a href="https://github.com/advisories/GHSA-3v48-283x-f2w4">https://github.com/advisories/GHSA-3v48-283x-f2w4</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-3v48-283x-f2w4</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2025-06-30T17:49:27.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/filebrowser/filebrowser/v2] File Browser's password protection of links is bypassable]]></title>
        <id>https://github.com/advisories/GHSA-3v48-283x-f2w4</id>
        <link href="https://github.com/advisories/GHSA-3v48-283x-f2w4"/>
        <updated>2025-06-30T21:47:28.000Z</updated>
        <content type="html"><![CDATA[<h2 id="summary">Summary</h2>
<p>Files managed by the <em>File Browser</em> can be shared with a link to external persons. While the application allows protecting those links with a password, the implementation is error-prone, making an incidental unprotected sharing of a file possible.</p>
<h2 id="impact">Impact</h2>
<p>File owners might rest in the assumption that their shared files are only accessible to persons knowing the defined password, giving them a false sense of security. Meanwhile, attackers gaining access to the unprotected link can use this information alone to download the possibly sensitive file.</p>
<h2 id="vulnerability-description">Vulnerability Description</h2>
<p>When sharing a file, the user is presented with a dialog asking for an optional password to protect the file share. The assumption of the user at this point would be, that the shared file won't be accessible without knowledge of the password. After clicking on <code>SHARE</code> the following dialog opens allowing the file's owner to copy the share-link:</p>
<p><img alt="image" src="https://github.com/user-attachments/assets/f3add074-40ac-4367-a538-ede5bb526916"></p>
<p>In fact, there is not one, but two links offered: A <code>Download Link</code> and an unnamed second one. They have the following format:</p>
<ul>
<li><a href="http://filebrowser.local:8080/share/6Gtw0xAw">http://filebrowser.local:8080/share/6Gtw0xAw</a></li>
<li><a href="http://filebrowser.local:8080/api/public/dl/6Gtw0xAw/dummy1.pdf?token=voDK6j%5B...%5D">http://filebrowser.local:8080/api/public/dl/6Gtw0xAw/dummy1.pdf?token=voDK6j[...]</a></li>
</ul>
<p>Apparently, the first of the two share links is that one that users are supposed to actually share, while the second one is a direct download link not protected by the password. This behavior is not documented anywhere or explained in the GUI, though.</p>
<p>There are multiple scenarios how an attacker might gain access to the unprotected link and, in consequence, to the shared file:</p>
<ul>
<li>The file owner might incidentally share the second link instead of the first one, making it accessible to anyone having read access to the messaging system used (e.g., a mailserver).</li>
<li>After the legitimate receiver of the share has used the password, the unprotected link will get linked in multiple locations like the browser history or the log of a proxy server used.</li>
</ul>
<h2 id="proof-of-concept">Proof of Concept</h2>
<p>Using the first link results in an authorization error if no password is provided, as expected:</p>
<pre><code class="language-http">GET /api/public/share/6Gtw0xAw HTTP/1.1
Host: filebrowser.local:8080
User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://filebrowser.local:8080/share/6Gtw0xAw
X-Auth: 
X-SHARE-PASSWORD: 
DNT: 1
Sec-GPC: 1
Connection: keep-alive
Priority: u=4

HTTP/1.1 401 Unauthorized
Cache-Control: no-cache, no-store, must-revalidate
Content-Security-Policy: default-src 'self'; style-src 'unsafe-inline';
Content-Type: text/plain; charset=utf-8
X-Content-Type-Options: nosniff
Date: Thu, 27 Mar 2025 10:59:12 GMT
Content-Length: 17

401 Unauthorized
</code></pre>
<p>Only if the password is provided (via the <code>X-SHARE-PASSWORD</code> header), a proper response is given:</p>
<pre><code class="language-http">GET /api/public/share/6Gtw0xAw HTTP/1.1
Host: filebrowser.local:8080
User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0
Accept: */*
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: http://filebrowser.local:8080/share/6Gtw0xAw
X-Auth: 
X-SHARE-PASSWORD: 1234
DNT: 1
Sec-GPC: 1
Connection: keep-alive
Priority: u=0

HTTP/1.1 200 OK
Cache-Control: no-cache, no-store, must-revalidate
Content-Security-Policy: default-src 'self'; style-src 'unsafe-inline';
Content-Type: application/json; charset=utf-8
Date: Thu, 27 Mar 2025 10:59:15 GMT
Content-Length: 301

{"path":"","name":"dummy1.pdf","size":7703,"extension":".pdf","modified":"2025-03-27T15:11:45.101242449Z","mode":420,"isDir":false,"isSymlink":false,"type":"pdf","token":"voDK6j[...]"}
</code></pre>
<p>But it does not return the actual file content but rather an access token.
This is the very same token that is already part of the second share URL and is used by the web application to recreate the actual download URL.
If you are in possession of that one, no further password check is performed, and the content of the file is returned:</p>
<pre><code class="language-http">GET /api/public/dl/6Gtw0xAw?inline=true&amp;token=voDK6j[...] HTTP/1.1
Host: filebrowser.local:8080
User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
DNT: 1
Sec-GPC: 1
Connection: keep-alive
Referer: http://filebrowser.local:8080/share/6Gtw0xAw
Upgrade-Insecure-Requests: 1
Priority: u=0, i

HTTP/1.1 200 OK
Accept-Ranges: bytes
Cache-Control: private
Content-Disposition: inline
Content-Length: 7703
Content-Security-Policy: default-src 'self'; style-src 'unsafe-inline';
Content-Security-Policy: script-src 'none';
Content-Type: application/pdf
Last-Modified: Mon, 03 Mar 2025 15:11:45 GMT
Date: Thu, 27 Mar 2025 10:59:18 GMT

%PDF-1.4
%Çì¢
%%Invocation: path/gs -P- -dSAFER -dCompatibilityLevel=1.4 -q -P- -dNOPAUSE -dBATCH -sDEVICE=pdfwrite -sstdout=? -sOutputFile=? -P- -dSAFER -dCompatibilityLevel=1.4 -
5 0 obj
[...]
</code></pre>
<h2 id="recommended-countermeasures">Recommended Countermeasures</h2>
<p>A short time solution would be to simple remove the second link from the GUI when a password protected share is created.
Doing so will be a proper defense against user errors, but it will still leave unprotected links in various logs.
A thorough fix has to eliminate the unprotected links completely, access to the file must only be given to requests containing the share password.</p>
<h2 id="timeline">Timeline</h2>
<ul>
<li><code>2025-03-27</code> Identified the vulnerability in version 2.32.0</li>
<li><code>2025-04-11</code> Contacted the project</li>
<li><code>2025-04-29</code> Vulnerability disclosed to the project</li>
<li><code>2025-06-25</code> Uploaded advisories to the project's GitHub repository</li>
<li><code>2025-06-25</code> CVE ID assigned by GitHub</li>
<li><code>2025-06-29</code> Mitigation of user error released in version 2.34.2</li>
<li><code>2025-06-29</code> Issue <a href="https://github.com/filebrowser/filebrowser/issues/5239">#5239</a> opened to track a more thorough fix of the feature</li>
</ul>
<h2 id="references">References</h2>
<ul>
<li><a href="https://cwe.mitre.org/data/definitions/305.html">CWE-305: Authentication Bypass by Primary Weakness</a></li>
</ul>
<h2 id="credits">Credits</h2>
<ul>
<li>Mathias Tausig (<a href="https://www.sba-research.org/">SBA Research</a>)</li>
</ul>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/filebrowser/filebrowser/security/advisories/GHSA-3v48-283x-f2w4">https://github.com/filebrowser/filebrowser/security/advisories/GHSA-3v48-283x-f2w4</a></li>
<li><a href="https://github.com/filebrowser/filebrowser/issues/5239">https://github.com/filebrowser/filebrowser/issues/5239</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2025-52996">https://nvd.nist.gov/vuln/detail/CVE-2025-52996</a></li>
<li><a href="https://github.com/advisories/GHSA-3v48-283x-f2w4">https://github.com/advisories/GHSA-3v48-283x-f2w4</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-3v48-283x-f2w4</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2025-06-30T17:49:27.000Z</published>
    </entry>
</feed>