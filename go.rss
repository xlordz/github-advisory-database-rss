<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://azu.github.io/github-advisory-database-rss/go.rss</id>
    <title>Security Advisory for Go modules</title>
    <updated>2025-02-02T22:01:24.865Z</updated>
    <generator>github-advisory-database-rss</generator>
    <link rel="alternate" href="https://github.com/advisories?query=type%3Areviewed+ecosystem%3Ago"/>
    <subtitle>Security Advisory for Go modules on GitHub</subtitle>
    <rights>github-advisory-database-rss</rights>
    <category term="CRITICAL"/>
    <category term="HIGH"/>
    <category term="MODERATE"/>
    <category term="LOW"/>
    <entry>
        <title type="html"><![CDATA[[github.com/grafana/grafana] Grafana Alerting VictorOps integration could be exposed to users with Viewer permission]]></title>
        <id>https://github.com/advisories/GHSA-wxcc-2f3q-4h58</id>
        <link href="https://github.com/advisories/GHSA-wxcc-2f3q-4h58"/>
        <updated>2025-01-31T21:07:01.000Z</updated>
        <content type="html"><![CDATA[<p>Grafana is an open-source platform for monitoring and observability. 
The Grafana Alerting VictorOps integration was not properly protected and could be exposed to users with Viewer permission. 
Fixed in versions 11.5.0, 11.4.1, 11.3.3,&nbsp;11.2.6, 11.1.11, 11.0.11 and 10.4.15</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-11741">https://nvd.nist.gov/vuln/detail/CVE-2024-11741</a></li>
<li><a href="https://grafana.com/security/security-advisories/cve-2024-11741">https://grafana.com/security/security-advisories/cve-2024-11741</a></li>
<li><a href="https://github.com/advisories/GHSA-wxcc-2f3q-4h58">https://github.com/advisories/GHSA-wxcc-2f3q-4h58</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-wxcc-2f3q-4h58</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2025-01-31T18:31:07.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/grafana/grafana] Grafana Alerting VictorOps integration could be exposed to users with Viewer permission]]></title>
        <id>https://github.com/advisories/GHSA-wxcc-2f3q-4h58</id>
        <link href="https://github.com/advisories/GHSA-wxcc-2f3q-4h58"/>
        <updated>2025-01-31T21:07:01.000Z</updated>
        <content type="html"><![CDATA[<p>Grafana is an open-source platform for monitoring and observability. 
The Grafana Alerting VictorOps integration was not properly protected and could be exposed to users with Viewer permission. 
Fixed in versions 11.5.0, 11.4.1, 11.3.3,&nbsp;11.2.6, 11.1.11, 11.0.11 and 10.4.15</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-11741">https://nvd.nist.gov/vuln/detail/CVE-2024-11741</a></li>
<li><a href="https://grafana.com/security/security-advisories/cve-2024-11741">https://grafana.com/security/security-advisories/cve-2024-11741</a></li>
<li><a href="https://github.com/advisories/GHSA-wxcc-2f3q-4h58">https://github.com/advisories/GHSA-wxcc-2f3q-4h58</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-wxcc-2f3q-4h58</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2025-01-31T18:31:07.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/grafana/grafana] Grafana Alerting VictorOps integration could be exposed to users with Viewer permission]]></title>
        <id>https://github.com/advisories/GHSA-wxcc-2f3q-4h58</id>
        <link href="https://github.com/advisories/GHSA-wxcc-2f3q-4h58"/>
        <updated>2025-01-31T21:07:01.000Z</updated>
        <content type="html"><![CDATA[<p>Grafana is an open-source platform for monitoring and observability. 
The Grafana Alerting VictorOps integration was not properly protected and could be exposed to users with Viewer permission. 
Fixed in versions 11.5.0, 11.4.1, 11.3.3,&nbsp;11.2.6, 11.1.11, 11.0.11 and 10.4.15</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-11741">https://nvd.nist.gov/vuln/detail/CVE-2024-11741</a></li>
<li><a href="https://grafana.com/security/security-advisories/cve-2024-11741">https://grafana.com/security/security-advisories/cve-2024-11741</a></li>
<li><a href="https://github.com/advisories/GHSA-wxcc-2f3q-4h58">https://github.com/advisories/GHSA-wxcc-2f3q-4h58</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-wxcc-2f3q-4h58</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2025-01-31T18:31:07.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/grafana/grafana] Grafana Alerting VictorOps integration could be exposed to users with Viewer permission]]></title>
        <id>https://github.com/advisories/GHSA-wxcc-2f3q-4h58</id>
        <link href="https://github.com/advisories/GHSA-wxcc-2f3q-4h58"/>
        <updated>2025-01-31T21:07:01.000Z</updated>
        <content type="html"><![CDATA[<p>Grafana is an open-source platform for monitoring and observability. 
The Grafana Alerting VictorOps integration was not properly protected and could be exposed to users with Viewer permission. 
Fixed in versions 11.5.0, 11.4.1, 11.3.3,&nbsp;11.2.6, 11.1.11, 11.0.11 and 10.4.15</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-11741">https://nvd.nist.gov/vuln/detail/CVE-2024-11741</a></li>
<li><a href="https://grafana.com/security/security-advisories/cve-2024-11741">https://grafana.com/security/security-advisories/cve-2024-11741</a></li>
<li><a href="https://github.com/advisories/GHSA-wxcc-2f3q-4h58">https://github.com/advisories/GHSA-wxcc-2f3q-4h58</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-wxcc-2f3q-4h58</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2025-01-31T18:31:07.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/grafana/grafana] Grafana Alerting VictorOps integration could be exposed to users with Viewer permission]]></title>
        <id>https://github.com/advisories/GHSA-wxcc-2f3q-4h58</id>
        <link href="https://github.com/advisories/GHSA-wxcc-2f3q-4h58"/>
        <updated>2025-01-31T21:07:01.000Z</updated>
        <content type="html"><![CDATA[<p>Grafana is an open-source platform for monitoring and observability. 
The Grafana Alerting VictorOps integration was not properly protected and could be exposed to users with Viewer permission. 
Fixed in versions 11.5.0, 11.4.1, 11.3.3,&nbsp;11.2.6, 11.1.11, 11.0.11 and 10.4.15</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-11741">https://nvd.nist.gov/vuln/detail/CVE-2024-11741</a></li>
<li><a href="https://grafana.com/security/security-advisories/cve-2024-11741">https://grafana.com/security/security-advisories/cve-2024-11741</a></li>
<li><a href="https://github.com/advisories/GHSA-wxcc-2f3q-4h58">https://github.com/advisories/GHSA-wxcc-2f3q-4h58</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-wxcc-2f3q-4h58</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2025-01-31T18:31:07.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/grafana/grafana] Grafana Alerting VictorOps integration could be exposed to users with Viewer permission]]></title>
        <id>https://github.com/advisories/GHSA-wxcc-2f3q-4h58</id>
        <link href="https://github.com/advisories/GHSA-wxcc-2f3q-4h58"/>
        <updated>2025-01-31T21:07:01.000Z</updated>
        <content type="html"><![CDATA[<p>Grafana is an open-source platform for monitoring and observability. 
The Grafana Alerting VictorOps integration was not properly protected and could be exposed to users with Viewer permission. 
Fixed in versions 11.5.0, 11.4.1, 11.3.3,&nbsp;11.2.6, 11.1.11, 11.0.11 and 10.4.15</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-11741">https://nvd.nist.gov/vuln/detail/CVE-2024-11741</a></li>
<li><a href="https://grafana.com/security/security-advisories/cve-2024-11741">https://grafana.com/security/security-advisories/cve-2024-11741</a></li>
<li><a href="https://github.com/advisories/GHSA-wxcc-2f3q-4h58">https://github.com/advisories/GHSA-wxcc-2f3q-4h58</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-wxcc-2f3q-4h58</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2025-01-31T18:31:07.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/canonical/lxd] Canonical LXD documentation improvement to make clear restricted.devices.disk=allow without restricted.devices.disk.paths also allows shift=true]]></title>
        <id>https://github.com/advisories/GHSA-x9qq-236j-gj97</id>
        <link href="https://github.com/advisories/GHSA-x9qq-236j-gj97"/>
        <updated>2025-01-30T22:49:13.000Z</updated>
        <content type="html"><![CDATA[<h3 id="summary">Summary</h3>
<p>If a user has restricted access to a project that is configured with <code>restricted=true</code>, they can gain root access on the system by creating a disk device with <code>shift=true</code> and creating a setuid root executable. This is possible because the <code>shift</code> property is not restricted unless <code>restricted.devices.disk.paths</code> is set.</p>
<h3 id="details">Details</h3>
<p>The following patch shows the offending code with a possible fix:</p>
<pre><code class="language-patch">--- a/lxd/device/disk.go
+++ b/lxd/device/disk.go
@@ -429,17 +429,19 @@ func (d *disk) validateEnvironmentSourcePath() error {
        if instProject.Name != api.ProjectDefaultName {
                // If restricted disk paths are in force, then check the disk's source is allowed, and record the
                // allowed parent path for later user during device start up sequence.
-               if shared.IsTrue(instProject.Config["restricted"]) &amp;&amp; instProject.Config["restricted.devices.disk.paths"] != "" {
-                       allowed, restrictedParentSourcePath := project.CheckRestrictedDevicesDiskPaths(instProject.Config, d.config["source"])
-                       if !allowed {
-                               return fmt.Errorf("Disk source path %q not allowed by project for disk %q", d.config["source"], d.name)
+               if shared.IsTrue(instProject.Config["restricted"]) {
+                       if instProject.Config["restricted.devices.disk.paths"] != "" {
+                               allowed, restrictedParentSourcePath := project.CheckRestrictedDevicesDiskPaths(instProject.Config, d.config["source"])
+                               if !allowed {
+                                       return fmt.Errorf("Disk source path %q not allowed by project for disk %q", d.config["source"], d.name)
+                               }
+
+                               d.restrictedParentSourcePath = shared.HostPath(restrictedParentSourcePath)
                        }

                        if shared.IsTrue(d.config["shift"]) {
                                return fmt.Errorf(`The "shift" property cannot be used with a restricted source path`)
                        }
-
-                       d.restrictedParentSourcePath = shared.HostPath(restrictedParentSourcePath)
                }
        }
</code></pre>
<h3 id="poc">PoC</h3>
<pre><code class="language-bash">$ lxc project create restricted -c restricted=true -c restricted.devices.disk=allow
$ lxc project switch restricted
$ lxc profile device add default root disk path=/ pool=default
$ lxc init ubuntu:22.04 c1
$ lxc config device add c1 d1 disk source=/ path=/mnt shift=true
$ lxc start c1  # no error

$ lxc project set restricted restricted.devices.disk.paths=/  # explicitly allow mounting /
$ lxc restart c1
Error: Failed to start device "d1": The "shift" property cannot be used with a restricted source path
</code></pre>
<p>Created <a href="https://github.com/canonical/lxd/issues/12606">https://github.com/canonical/lxd/issues/12606</a> to improve the documentation as per <a href="https://github.com/canonical/lxd/security/advisories/GHSA-x9qq-236j-gj97#advisory-comment-91918">https://github.com/canonical/lxd/security/advisories/GHSA-x9qq-236j-gj97#advisory-comment-91918</a></p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/canonical/lxd/security/advisories/GHSA-x9qq-236j-gj97">https://github.com/canonical/lxd/security/advisories/GHSA-x9qq-236j-gj97</a></li>
<li><a href="https://github.com/canonical/lxd/issues/12606">https://github.com/canonical/lxd/issues/12606</a></li>
<li><a href="https://github.com/canonical/lxd/commit/ce1bd0dd37bb3810fe6f16c237a4b65257f231f1">https://github.com/canonical/lxd/commit/ce1bd0dd37bb3810fe6f16c237a4b65257f231f1</a></li>
<li><a href="https://github.com/advisories/GHSA-x9qq-236j-gj97">https://github.com/advisories/GHSA-x9qq-236j-gj97</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-x9qq-236j-gj97</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2023-12-05T23:32:58.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/argoproj/argo-cd/v2] Argo CD does not scrub secret values from patch errors]]></title>
        <id>https://github.com/advisories/GHSA-47g2-qmh2-749v</id>
        <link href="https://github.com/advisories/GHSA-47g2-qmh2-749v"/>
        <updated>2025-01-30T18:55:57.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>A vulnerability was discovered in Argo CD that exposed secret values in error messages and the diff view when an invalid Kubernetes Secret resource was synced from a repository. </p>
<p>The vulnerability assumes the user has write access to the repository and can exploit it, either intentionally or unintentionally, by committing an invalid Secret to repository and triggering a Sync. Once exploited, any user with read access to Argo CD can view the exposed secret data.</p>
<h3 id="patches">Patches</h3>
<p>A patch for this vulnerability is available in the following Argo CD versions:</p>
<ul>
<li>v2.13.4</li>
<li>v2.12.10</li>
<li>v2.11.13</li>
</ul>
<h3 id="workarounds">Workarounds</h3>
<p>There is no workaround other than upgrading.</p>
<h3 id="references">References</h3>
<p>Fixed with commit <a href="https://github.com/argoproj/argo-cd/commit/6f5537bdf15ddbaa0f27a1a678632ff0743e4107">https://github.com/argoproj/argo-cd/commit/6f5537bdf15ddbaa0f27a1a678632ff0743e4107</a> &amp; <a href="https://github.com/argoproj/gitops-engine/commit/7e21b91e9d0f64104c8a661f3f390c5e6d73ddca">https://github.com/argoproj/gitops-engine/commit/7e21b91e9d0f64104c8a661f3f390c5e6d73ddca</a></p>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/argoproj/argo-cd/security/advisories/GHSA-47g2-qmh2-749v">https://github.com/argoproj/argo-cd/security/advisories/GHSA-47g2-qmh2-749v</a></li>
<li><a href="https://github.com/argoproj/gitops-engine/security/advisories/GHSA-274v-mgcv-cm8j">https://github.com/argoproj/gitops-engine/security/advisories/GHSA-274v-mgcv-cm8j</a></li>
<li><a href="https://github.com/argoproj/argo-cd/commit/6f5537bdf15ddbaa0f27a1a678632ff0743e4107">https://github.com/argoproj/argo-cd/commit/6f5537bdf15ddbaa0f27a1a678632ff0743e4107</a></li>
<li><a href="https://github.com/argoproj/gitops-engine/commit/7e21b91e9d0f64104c8a661f3f390c5e6d73ddca">https://github.com/argoproj/gitops-engine/commit/7e21b91e9d0f64104c8a661f3f390c5e6d73ddca</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2025-23216">https://nvd.nist.gov/vuln/detail/CVE-2025-23216</a></li>
<li><a href="https://github.com/advisories/GHSA-47g2-qmh2-749v">https://github.com/advisories/GHSA-47g2-qmh2-749v</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-47g2-qmh2-749v</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2025-01-30T17:52:45.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/argoproj/argo-cd/v2] Argo CD does not scrub secret values from patch errors]]></title>
        <id>https://github.com/advisories/GHSA-47g2-qmh2-749v</id>
        <link href="https://github.com/advisories/GHSA-47g2-qmh2-749v"/>
        <updated>2025-01-30T18:55:57.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>A vulnerability was discovered in Argo CD that exposed secret values in error messages and the diff view when an invalid Kubernetes Secret resource was synced from a repository. </p>
<p>The vulnerability assumes the user has write access to the repository and can exploit it, either intentionally or unintentionally, by committing an invalid Secret to repository and triggering a Sync. Once exploited, any user with read access to Argo CD can view the exposed secret data.</p>
<h3 id="patches">Patches</h3>
<p>A patch for this vulnerability is available in the following Argo CD versions:</p>
<ul>
<li>v2.13.4</li>
<li>v2.12.10</li>
<li>v2.11.13</li>
</ul>
<h3 id="workarounds">Workarounds</h3>
<p>There is no workaround other than upgrading.</p>
<h3 id="references">References</h3>
<p>Fixed with commit <a href="https://github.com/argoproj/argo-cd/commit/6f5537bdf15ddbaa0f27a1a678632ff0743e4107">https://github.com/argoproj/argo-cd/commit/6f5537bdf15ddbaa0f27a1a678632ff0743e4107</a> &amp; <a href="https://github.com/argoproj/gitops-engine/commit/7e21b91e9d0f64104c8a661f3f390c5e6d73ddca">https://github.com/argoproj/gitops-engine/commit/7e21b91e9d0f64104c8a661f3f390c5e6d73ddca</a></p>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/argoproj/argo-cd/security/advisories/GHSA-47g2-qmh2-749v">https://github.com/argoproj/argo-cd/security/advisories/GHSA-47g2-qmh2-749v</a></li>
<li><a href="https://github.com/argoproj/gitops-engine/security/advisories/GHSA-274v-mgcv-cm8j">https://github.com/argoproj/gitops-engine/security/advisories/GHSA-274v-mgcv-cm8j</a></li>
<li><a href="https://github.com/argoproj/argo-cd/commit/6f5537bdf15ddbaa0f27a1a678632ff0743e4107">https://github.com/argoproj/argo-cd/commit/6f5537bdf15ddbaa0f27a1a678632ff0743e4107</a></li>
<li><a href="https://github.com/argoproj/gitops-engine/commit/7e21b91e9d0f64104c8a661f3f390c5e6d73ddca">https://github.com/argoproj/gitops-engine/commit/7e21b91e9d0f64104c8a661f3f390c5e6d73ddca</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2025-23216">https://nvd.nist.gov/vuln/detail/CVE-2025-23216</a></li>
<li><a href="https://github.com/advisories/GHSA-47g2-qmh2-749v">https://github.com/advisories/GHSA-47g2-qmh2-749v</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-47g2-qmh2-749v</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2025-01-30T17:52:45.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/argoproj/argo-cd/v2] Argo CD does not scrub secret values from patch errors]]></title>
        <id>https://github.com/advisories/GHSA-47g2-qmh2-749v</id>
        <link href="https://github.com/advisories/GHSA-47g2-qmh2-749v"/>
        <updated>2025-01-30T18:55:57.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>A vulnerability was discovered in Argo CD that exposed secret values in error messages and the diff view when an invalid Kubernetes Secret resource was synced from a repository. </p>
<p>The vulnerability assumes the user has write access to the repository and can exploit it, either intentionally or unintentionally, by committing an invalid Secret to repository and triggering a Sync. Once exploited, any user with read access to Argo CD can view the exposed secret data.</p>
<h3 id="patches">Patches</h3>
<p>A patch for this vulnerability is available in the following Argo CD versions:</p>
<ul>
<li>v2.13.4</li>
<li>v2.12.10</li>
<li>v2.11.13</li>
</ul>
<h3 id="workarounds">Workarounds</h3>
<p>There is no workaround other than upgrading.</p>
<h3 id="references">References</h3>
<p>Fixed with commit <a href="https://github.com/argoproj/argo-cd/commit/6f5537bdf15ddbaa0f27a1a678632ff0743e4107">https://github.com/argoproj/argo-cd/commit/6f5537bdf15ddbaa0f27a1a678632ff0743e4107</a> &amp; <a href="https://github.com/argoproj/gitops-engine/commit/7e21b91e9d0f64104c8a661f3f390c5e6d73ddca">https://github.com/argoproj/gitops-engine/commit/7e21b91e9d0f64104c8a661f3f390c5e6d73ddca</a></p>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/argoproj/argo-cd/security/advisories/GHSA-47g2-qmh2-749v">https://github.com/argoproj/argo-cd/security/advisories/GHSA-47g2-qmh2-749v</a></li>
<li><a href="https://github.com/argoproj/gitops-engine/security/advisories/GHSA-274v-mgcv-cm8j">https://github.com/argoproj/gitops-engine/security/advisories/GHSA-274v-mgcv-cm8j</a></li>
<li><a href="https://github.com/argoproj/argo-cd/commit/6f5537bdf15ddbaa0f27a1a678632ff0743e4107">https://github.com/argoproj/argo-cd/commit/6f5537bdf15ddbaa0f27a1a678632ff0743e4107</a></li>
<li><a href="https://github.com/argoproj/gitops-engine/commit/7e21b91e9d0f64104c8a661f3f390c5e6d73ddca">https://github.com/argoproj/gitops-engine/commit/7e21b91e9d0f64104c8a661f3f390c5e6d73ddca</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2025-23216">https://nvd.nist.gov/vuln/detail/CVE-2025-23216</a></li>
<li><a href="https://github.com/advisories/GHSA-47g2-qmh2-749v">https://github.com/advisories/GHSA-47g2-qmh2-749v</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-47g2-qmh2-749v</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2025-01-30T17:52:45.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/kubewarden/kubewarden-controller] KubeWarden's AdmissionPolicy and AdmissionPolicyGroup policies can be used to alter PolicyReport resources]]></title>
        <id>https://github.com/advisories/GHSA-fc89-jghx-8pvg</id>
        <link href="https://github.com/advisories/GHSA-fc89-jghx-8pvg"/>
        <updated>2025-01-30T18:56:02.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>By design, AdmissionPolicy and AdmissionPolicyGroup can evaluate only namespaced resources. The resources to be evaluated are determined by the rules provided by the user when defining the policy.
There might be Kubernetes namespaced resources that should not be validated by AdmissionPolicy and by the AdmissionPolicyGroup policies because of their sensitive nature.
For example, PolicyReport are namespaced resources that contain the list of non compliant objects found inside of a namespace. See <a href="https://docs.kubewarden.io/explanations/audit-scanner/policy-reports">this section</a> of Kubewarden’s documentation for more details about PolicyReport resources.
An attacker can use either an AdmissionPolicy or an AdmissionPolicyGroup to prevent the creation and update of PolicyReport objects to hide non-compliant resources.
Moreover, the same attacker might use a mutating AdmissionPolicy to alter the contents of the PolicyReport created inside of the namespace.</p>
<h3 id="patches">Patches</h3>
<p>Starting from the 1.21.0 release, the validation rules applied to AdmissionPolicy and AdmissionPolicyGroup have been tightened to prevent them from validating sensitive types of namespaced resources.
The new validation will also restrict the usage of wildcards when defining apiGroups and resources rules for AdmissionPolicy and AdmissionPolicyGroup objects.</p>
<h3 id="workarounds">Workarounds</h3>
<p>On clusters running Kubewarden &lt; 1.21.0, the following Kubewarden policy can be applied to prevent the creation of AdmissionPolicy and AdmissionPolicyGroup resources that interact with PolicyReport resources:</p>
<pre><code class="language-yaml">apiVersion: policies.kubewarden.io/v1
kind: ClusterAdmissionPolicy
metadata:
  name: "deny-interaction-with-policyreport"
spec:
  module: registry://ghcr.io/kubewarden/policies/cel-policy:latest
  settings:
    variables:
      - name: hasWildcardInsideOfApiGroup
        expression: "object.spec.rules.exists(r, r.apiGroups.exists(ag, ag == '*'))"
      - name: hasWildcardInsideOfResources
        expression: "object.spec.rules.exists(r, r.resources.exists(ag, ag == '*' || ag == '*/*' || ag == 'policyreports/*'))"
      - name: dealsWithPolicyReportApiGroup
        expression: "object.spec.rules.exists(r, r.apiGroups.exists(ag, ag == 'wgpolicyk8s.io'))"
      - name: dealsWithPolicyReportResource
        expression: "object.spec.rules.exists(r, r.resources.exists(ag, ag == 'policyreports' || ag == 'policyreports/'))"
      - name: isPendingDeletion
        expression: "has(object.metadata.deletionTimestamp)"
    validations:
      - expression: |
          !( variables.hasWildcardInsideOfApiGroup ||
             variables.hasWildcardInsideOfResources ||
             variables.dealsWithPolicyReportResource ||
             variables.dealsWithPolicyReportApiGroup
          ) || variables.isPendingDeletion
        message: "cannot target PolicyReport resources or use wildcards in apiGroups or resources"
  rules:
    - apiGroups: ["policies.kubewarden.io"]
      apiVersions: ["v1"]
      operations: ["CREATE", "UPDATE"]
      resources: ["admissionpolicies", "admissionpolicygroups"]
  mutating: false
  backgroundAudit: true
</code></pre>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory you can contact the Kubewarden team using the procedures described under the “<a href="https://docs.kubewarden.io/disclosure">security disclosure</a>“ guidelines of the Kubewarden project.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/kubewarden/kubewarden-controller/security/advisories/GHSA-fc89-jghx-8pvg">https://github.com/kubewarden/kubewarden-controller/security/advisories/GHSA-fc89-jghx-8pvg</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2025-24376">https://nvd.nist.gov/vuln/detail/CVE-2025-24376</a></li>
<li><a href="https://github.com/kubewarden/kubewarden-controller/commit/8124039b5f0c955d0ee8c8ca12d4415282f02d2c">https://github.com/kubewarden/kubewarden-controller/commit/8124039b5f0c955d0ee8c8ca12d4415282f02d2c</a></li>
<li><a href="https://github.com/advisories/GHSA-fc89-jghx-8pvg">https://github.com/advisories/GHSA-fc89-jghx-8pvg</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-fc89-jghx-8pvg</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2025-01-30T17:52:37.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/kubewarden/kubewarden-controller] Kubewarden-Controller information leak via AdmissionPolicyGroup Resource]]></title>
        <id>https://github.com/advisories/GHSA-756x-m4mj-q96c</id>
        <link href="https://github.com/advisories/GHSA-756x-m4mj-q96c"/>
        <updated>2025-01-30T18:56:07.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>The <a href="https://docs.kubewarden.io/explanations/policy-groups">policy group feature</a>, added to by the 1.17.0 release, introduced two new types of CRD: ClusterAdmissionPolicyGroup and AdmissionPolicyGroup. The former is cluster wide, while the latter is namespaced.</p>
<p>By being namespaced, the AdmissionPolicyGroup has a well constrained impact on cluster resources. Hence, it’s considered safe to allow non-admin users to create and manage these resources in the namespaces they own.
Kubewarden policies can be allowed to query the Kubernetes API at evaluation time; these types of policies are called “<a href="https://docs.kubewarden.io/reference/spec/context-aware-policies">context aware</a>“.
Context aware policies can perform list and get operations against a Kubernetes cluster. The queries are done using the ServiceAccount of the Policy Server instance that hosts the policy. That means that access to the cluster is determined by the RBAC rules that apply to that ServiceAccount.
The AdmissionPolicyGroup CRD allowed the deployment of context aware policies. This could allow an attacker to obtain information about resources that are out of their reach, by leveraging a higher access to the cluster granted to the ServiceAccount token used to run the policy.</p>
<p>The impact of this vulnerability depends on the privileges that have been granted to the ServiceAccount used to run the Policy Server and assumes that users are using the recommended best practices of keeping the Policy Server's ServiceAccount least privileged. By default, the Kubewarden helm chart grants access to the following resources (cluster wide) only: Namespace, Pod, Deployment and Ingress.</p>
<h3 id="patches">Patches</h3>
<p>Starting from the 1.21.0 release, the AdmissionPolicyGroup CRD does not allow the definition of context aware policies. No modifications are needed neither for performing the upgrade nor afterwards.</p>
<h3 id="workarounds">Workarounds</h3>
<p>On clusters running Kubewarden &lt; 1.21.0, the following Kubewarden policy can be applied to prevent the creation of AdmissionPolicyGroup resources that have access to Kubernetes resources:</p>
<pre><code class="language-yaml">apiVersion: policies.kubewarden.io/v1
kind: ClusterAdmissionPolicy
metadata:
  name: "deny-admission-policy-groups-with-context-resources"
spec:
  module: registry://ghcr.io/kubewarden/policies/cel-policy:latest
  settings:
    variables:
      - name: hasContextAwareResources
        expression: "object.spec.policies.exists(p, has(object.spec.policies[p].contextAwareResources))"
      - name: isPendingDeletion
        expression: "has(object.metadata.deletionTimestamp)"
    validations:
      - expression: "!variables.hasContextAwareResources || variables.isPendingDeletion"
        message: "AdmissionPolicyGroup has contextAwareResources defined"
  rules:
    - apiGroups: ["policies.kubewarden.io"]
      apiVersions: ["v1"]
      operations: ["CREATE", "UPDATE"]
      resources: ["admissionpolicygroups"]
  mutating: false
  backgroundAudit: true
</code></pre>
<p>Once the policy is applied, the <a href="https://docs.kubewarden.io/howtos/audit-scanner">Kubewarden Audit Scanner</a> can be used to identify the AdmissionPolicyGroup policies that are violating this policy.</p>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory you can contact the Kubewarden team using the procedures described under the “<a href="https://docs.kubewarden.io/disclosure">security disclosure</a>“ guidelines of the Kubewarden project.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/kubewarden/kubewarden-controller/security/advisories/GHSA-756x-m4mj-q96c">https://github.com/kubewarden/kubewarden-controller/security/advisories/GHSA-756x-m4mj-q96c</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2025-24784">https://nvd.nist.gov/vuln/detail/CVE-2025-24784</a></li>
<li><a href="https://github.com/kubewarden/kubewarden-controller/commit/51a88dfbb4c090ce0f76a22d98106518e0824d0b">https://github.com/kubewarden/kubewarden-controller/commit/51a88dfbb4c090ce0f76a22d98106518e0824d0b</a></li>
<li><a href="https://github.com/advisories/GHSA-756x-m4mj-q96c">https://github.com/advisories/GHSA-756x-m4mj-q96c</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-756x-m4mj-q96c</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2025-01-30T17:52:25.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/ethereum/go-ethereum] Go Ethereum vulnerable to DoS via malicious p2p message]]></title>
        <id>https://github.com/advisories/GHSA-q26p-9cq4-7fc2</id>
        <link href="https://github.com/advisories/GHSA-q26p-9cq4-7fc2"/>
        <updated>2025-01-30T18:56:12.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>A vulnerable node can be forced to shutdown/crash using a specially crafted message.</p>
<p>More in-depth details will be released at a later time.</p>
<h3 id="patches">Patches</h3>
<p>A fix has been included in geth version 1.14.13 and onwards.</p>
<h3 id="workarounds">Workarounds</h3>
<p>Unfortunately, no workaround is available.</p>
<h3 id="credits">Credits</h3>
<p>This issue was originally reported to Polygon Security by David Matosse (@iam-ned).</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/ethereum/go-ethereum/security/advisories/GHSA-q26p-9cq4-7fc2">https://github.com/ethereum/go-ethereum/security/advisories/GHSA-q26p-9cq4-7fc2</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2025-24883">https://nvd.nist.gov/vuln/detail/CVE-2025-24883</a></li>
<li><a href="https://github.com/ethereum/go-ethereum/commit/fa9a2ff8687ec9efe57b4b9833d5590d20f8a83f">https://github.com/ethereum/go-ethereum/commit/fa9a2ff8687ec9efe57b4b9833d5590d20f8a83f</a></li>
<li><a href="https://github.com/advisories/GHSA-q26p-9cq4-7fc2">https://github.com/advisories/GHSA-q26p-9cq4-7fc2</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-q26p-9cq4-7fc2</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2025-01-30T17:51:57.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/argoproj/gitops-engine] Argo CD GitOps Engine does not scrub secret values from patch errors]]></title>
        <id>https://github.com/advisories/GHSA-274v-mgcv-cm8j</id>
        <link href="https://github.com/advisories/GHSA-274v-mgcv-cm8j"/>
        <updated>2025-01-30T17:51:33.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>A vulnerability was discovered in Argo CD that exposed secret values in error messages and the diff view when an invalid Kubernetes Secret resource was synced from a repository. </p>
<p>The vulnerability assumes the user has write access to the repository and can exploit it, either intentionally or unintentionally, by committing an invalid Secret to repository and triggering a Sync. Once exploited, any user with read access to Argo CD can view the exposed secret data.</p>
<h3 id="patches">Patches</h3>
<p>A patch for this vulnerability is available in the following Argo CD versions:</p>
<ul>
<li>v2.13.4</li>
<li>v2.12.10</li>
<li>v2.11.13</li>
</ul>
<h3 id="workarounds">Workarounds</h3>
<p>There is no workaround other than upgrading.</p>
<h3 id="references">References</h3>
<p>Fixed with commit <a href="https://github.com/argoproj/argo-cd/commit/6f5537bdf15ddbaa0f27a1a678632ff0743e4107">https://github.com/argoproj/argo-cd/commit/6f5537bdf15ddbaa0f27a1a678632ff0743e4107</a> &amp; <a href="https://github.com/argoproj/gitops-engine/commit/7e21b91e9d0f64104c8a661f3f390c5e6d73ddca">https://github.com/argoproj/gitops-engine/commit/7e21b91e9d0f64104c8a661f3f390c5e6d73ddca</a></p>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/argoproj/argo-cd/security/advisories/GHSA-47g2-qmh2-749v">https://github.com/argoproj/argo-cd/security/advisories/GHSA-47g2-qmh2-749v</a></li>
<li><a href="https://github.com/argoproj/gitops-engine/security/advisories/GHSA-274v-mgcv-cm8j">https://github.com/argoproj/gitops-engine/security/advisories/GHSA-274v-mgcv-cm8j</a></li>
<li><a href="https://github.com/argoproj/argo-cd/commit/6f5537bdf15ddbaa0f27a1a678632ff0743e4107">https://github.com/argoproj/argo-cd/commit/6f5537bdf15ddbaa0f27a1a678632ff0743e4107</a></li>
<li><a href="https://github.com/argoproj/gitops-engine/commit/7e21b91e9d0f64104c8a661f3f390c5e6d73ddca">https://github.com/argoproj/gitops-engine/commit/7e21b91e9d0f64104c8a661f3f390c5e6d73ddca</a></li>
<li><a href="https://github.com/advisories/GHSA-274v-mgcv-cm8j">https://github.com/advisories/GHSA-274v-mgcv-cm8j</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-274v-mgcv-cm8j</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2025-01-30T17:51:33.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/RichardoC/kube-audit-rest] kube-audit-rest's example logging configuration could disclose secret values in the audit log]]></title>
        <id>https://github.com/advisories/GHSA-hcr5-wv4p-h2g2</id>
        <link href="https://github.com/advisories/GHSA-hcr5-wv4p-h2g2"/>
        <updated>2025-01-29T22:00:42.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>If the "full-elastic-stack" example vector configuration was used for a real cluster, the previous values of kubernetes secrets would have been disclosed in the audit messages.</p>
<h3 id="patches">Patches</h3>
<p>The example has been updated to fix this in commit db1aa5b867256b0a7bf206544c6981ab068b73dc</p>
<h3 id="workarounds">Workarounds</h3>
<p>Replace </p>
<pre><code class="language-yaml">
          if .request.requestKind.kind == "Secret" {
            del(.request.object.data)
            .request.object.data.redacted = "REDACTED"
            del(.request.oldObject.data)
            .request.oldObject.data.redacted = "REDACTED"
          }
</code></pre>
<p>In the vector "audit-files-json-parser-and-redaction" step
with</p>
<pre><code class="language-yaml">
          if .request.requestKind.kind == "Secret" {
            # Redact the secret data
            del(.request.object.data)
            .request.object.data.redacted = "REDACTED"
            del(.request.oldObject.data)
            .request.oldObject.data.redacted = "REDACTED"
            # Remove the previously set secret data - Not bothering to parse it as this annotation shouldn't ever be needed
            del(.request.object.metadata.annotations.["kubectl.kubernetes.io/last-applied-configuration"])
            del(.request.oldObject.metadata.annotations.["kubectl.kubernetes.io/last-applied-configuration"])
          }
</code></pre>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/RichardoC/kube-audit-rest/security/advisories/GHSA-hcr5-wv4p-h2g2">https://github.com/RichardoC/kube-audit-rest/security/advisories/GHSA-hcr5-wv4p-h2g2</a></li>
<li><a href="https://github.com/RichardoC/kube-audit-rest/commit/db1aa5b867256b0a7bf206544c6981ab068b73dc">https://github.com/RichardoC/kube-audit-rest/commit/db1aa5b867256b0a7bf206544c6981ab068b73dc</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2025-24884">https://nvd.nist.gov/vuln/detail/CVE-2025-24884</a></li>
<li><a href="https://github.com/advisories/GHSA-hcr5-wv4p-h2g2">https://github.com/advisories/GHSA-hcr5-wv4p-h2g2</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-hcr5-wv4p-h2g2</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2025-01-29T20:47:51.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/hashicorp/yamux] github.com/hashicorp/yamux's DefaultConfig has dangerous defaults causing hung Read]]></title>
        <id>https://github.com/advisories/GHSA-29qp-crvh-w22m</id>
        <link href="https://github.com/advisories/GHSA-29qp-crvh-w22m"/>
        <updated>2025-01-29T19:19:13.000Z</updated>
        <content type="html"><![CDATA[<p>The default values for Session.config.KeepAliveInterval and Session.config.ConnectionWriteTimeout of 30s and 10s create the possibility for timed out writes that most aren't handling in their readers.</p>
<p>Calls to Stream.Read on one side of a connection will hang until the underlying Session is closed if the corresponding Stream.Write call on the other side it's waiting for returns with ErrConnectionWriteTimeout. This happens in the case of network congestion between the two sides.</p>
<p>If you keep Session.sendCh full (fixed capacity of 64) for ConnectionWriteTimeout, but for less than the KeepAliveInterval + ConnectionWriteTimeout (which would kill the Session), Stream.Write will return ErrConnectionWriteTimeout. The state of the underlying Session or Stream is not modified. When this happens, the other side's Stream.Read call that's waiting for that write will never return because there's no timeout for this edge-case.</p>
<p>Since no keep alive timed out, you can continue to use the Session once the network congestion is resolved, but that Stream.Read call will only return when the Session closes or the response shows up. Since the write call on the other side timed out the call to Stream.Read will never return.</p>
<p>Any conditions that cause network writes to stall for 10-30 seconds can trigger this Denial of Service- extremely high CPU contention on either side of the connection, BGP reconvergence, etc. To resolve the Denial of Service issue, you have to re-establish the connections, which will usually require a hard restart of the service on either end of the connection.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/golang/vulndb/issues/3408">https://github.com/golang/vulndb/issues/3408</a></li>
<li><a href="https://github.com/hashicorp/yamux/issues/142">https://github.com/hashicorp/yamux/issues/142</a></li>
<li><a href="https://github.com/hashicorp/yamux/pull/143">https://github.com/hashicorp/yamux/pull/143</a></li>
<li><a href="https://github.com/advisories/GHSA-29qp-crvh-w22m">https://github.com/advisories/GHSA-29qp-crvh-w22m</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-29qp-crvh-w22m</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2025-01-29T19:19:11.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/argoproj/argo-cd/v2] ArgoCD Namespace Isolation Break]]></title>
        <id>https://github.com/advisories/GHSA-58fx-7v9q-3g56</id>
        <link href="https://github.com/advisories/GHSA-58fx-7v9q-3g56"/>
        <updated>2025-01-28T20:40:01.000Z</updated>
        <content type="html"><![CDATA[<p>A flaw was found in ArgoCD. The openshift.io/cluster-monitoring label is applied to all namespaces that deploy an ArgoCD CR instance, allowing the namespace to create a rogue PrometheusRule. This issue can have adverse effects on the platform monitoring stack, as the rule is rolled out cluster-wide when the label is applied.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-13484">https://nvd.nist.gov/vuln/detail/CVE-2024-13484</a></li>
<li><a href="https://access.redhat.com/security/cve/CVE-2024-13484">https://access.redhat.com/security/cve/CVE-2024-13484</a></li>
<li><a href="https://bugzilla.redhat.com/show_bug.cgi?id=2269376">https://bugzilla.redhat.com/show_bug.cgi?id=2269376</a></li>
<li><a href="https://github.com/advisories/GHSA-58fx-7v9q-3g56">https://github.com/advisories/GHSA-58fx-7v9q-3g56</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-58fx-7v9q-3g56</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2025-01-28T18:31:28.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/cri-o/cri-o] CRI-O Path Traversal vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-hp5j-2585-qx6g</id>
        <link href="https://github.com/advisories/GHSA-hp5j-2585-qx6g"/>
        <updated>2025-01-28T19:15:28.000Z</updated>
        <content type="html"><![CDATA[<p>A vulnerability was found in CRI-O. A path traversal issue in the log management functions (UnMountPodLogs and LinkContainerLogs) may allow an attacker with permissions to create and delete Pods to unmount arbitrary host paths, leading to node-level denial of service by unmounting critical system directories.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2025-0750">https://nvd.nist.gov/vuln/detail/CVE-2025-0750</a></li>
<li><a href="https://access.redhat.com/security/cve/CVE-2025-0750">https://access.redhat.com/security/cve/CVE-2025-0750</a></li>
<li><a href="https://bugzilla.redhat.com/show_bug.cgi?id=2339405">https://bugzilla.redhat.com/show_bug.cgi?id=2339405</a></li>
<li><a href="https://github.com/advisories/GHSA-hp5j-2585-qx6g">https://github.com/advisories/GHSA-hp5j-2585-qx6g</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-hp5j-2585-qx6g</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2025-01-28T12:31:07.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/taurusgroup/multi-party-sig] Taurus multi-party-sig has OT-based ECDSA protocol implementation flaws]]></title>
        <id>https://github.com/advisories/GHSA-7f6p-phw2-8253</id>
        <link href="https://github.com/advisories/GHSA-7f6p-phw2-8253"/>
        <updated>2025-01-28T18:06:15.000Z</updated>
        <content type="html"><![CDATA[<p>Coinbase researchers reported 2 security issues in our implementation of the oblivious transfer (OT) based protocol <a href="https://eprint.iacr.org/2018/499.pdf">DKLS</a>:</p>
<h3 id="1-secret-share-recovery-attack">1. Secret share recovery attack</h3>
<p>If the base OT setup of the protocol is reused for another execution of the OT extension, then a malicious participant can extract a bit of the secret of another participant. By repeating the execution they can eventually recover the whole secret.</p>
<p>Therefore, unlike our comments suggested, you <strong>must not reuse an OT setup</strong> for multiple protocol executions. </p>
<p>We're adding a warning in the code:</p>
<p><a href="https://github.com/taurushq-io/multi-party-sig/blob/9e4400fccee89be6195d0a12dd0ed052288d5040/internal/ot/extended.go#L114">https://github.com/taurushq-io/multi-party-sig/blob/9e4400fccee89be6195d0a12dd0ed052288d5040/internal/ot/extended.go#L114</a></p>
<h3 id="2-invalid-security-proof-due-to-incorrect-operator">2. Invalid security proof due to incorrect operator</h3>
<p>The original 2018 version of the DKLS had a typo in the OT extension protocol when computing the check value in the OT extension: the paper noted a XOR whereas it should be a field multiplication. This erroneous behavior was implemented <a href="https://github.com/taurushq-io/multi-party-sig/blob/4d84aafb57b437da1b933db9a265fb7ce4e7c138/internal/ot/extended.go#L188">in our code</a>. </p>
<p>The proof of security fails in this case. No concrete attack is known, however.</p>
<p>The <a href="https://eprint.iacr.org/2018/499.pdf">2023 update</a> of the DKLS paper reported that typo and updated the protocol definition.</p>
<p><del>As of 20241124, patching is in progress (branch <a href="https://github.com/taurushq-io/multi-party-sig/tree/otfix">otfix</a>), but not merged to the main branch yes as the tests fail to pass. We're troubleshooting the issue and will merge into the main branch when it's resolved.</del></p>
<p>As of 20250128, a patched version is available in <a href="https://github.com/taurushq-io/multi-party-sig/releases/tag/v0.7.0-alpha-2025-01-28">https://github.com/taurushq-io/multi-party-sig/releases/tag/v0.7.0-alpha-2025-01-28</a>, thanks to <a href="https://github.com/taurushq-io/multi-party-sig/pull/119">https://github.com/taurushq-io/multi-party-sig/pull/119</a>.</p>
<h3 id="workarounds">Workarounds</h3>
<p>Do not reuse an OT setup in the event that an abort is detected, to eliminate the secret recovery attack.</p>
<h3 id="credits">Credits</h3>
<p>Thanks to the Coinbase researchers Yi-Hsiu Chen and Samuel Ranellucci for discovering these issues and providing a comprehensive write-up. Thank you to Yehuda Lindell for coordinating the disclosure.
Thanks to Jay Prakash for clarifying the risk of the base setup reuse.
Thanks to @cronokirby for writing the corrected code.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/taurushq-io/multi-party-sig/security/advisories/GHSA-7f6p-phw2-8253">https://github.com/taurushq-io/multi-party-sig/security/advisories/GHSA-7f6p-phw2-8253</a></li>
<li><a href="https://eprint.iacr.org/2018/499.pdf">https://eprint.iacr.org/2018/499.pdf</a></li>
<li><a href="https://github.com/taurushq-io/multi-party-sig/blob/4d84aafb57b437da1b933db9a265fb7ce4e7c138/internal/ot/extended.go#L188">https://github.com/taurushq-io/multi-party-sig/blob/4d84aafb57b437da1b933db9a265fb7ce4e7c138/internal/ot/extended.go#L188</a></li>
<li><a href="https://github.com/taurushq-io/multi-party-sig/blob/9e4400fccee89be6195d0a12dd0ed052288d5040/internal/ot/extended.go#L114">https://github.com/taurushq-io/multi-party-sig/blob/9e4400fccee89be6195d0a12dd0ed052288d5040/internal/ot/extended.go#L114</a></li>
<li><a href="https://github.com/taurushq-io/multi-party-sig/tree/otfix">https://github.com/taurushq-io/multi-party-sig/tree/otfix</a></li>
<li><a href="https://github.com/advisories/GHSA-7f6p-phw2-8253">https://github.com/advisories/GHSA-7f6p-phw2-8253</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-7f6p-phw2-8253</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-11-25T15:11:11.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/golang/glog] Insecure Temporary File usage in github.com/golang/glog]]></title>
        <id>https://github.com/advisories/GHSA-6wxm-mpqj-6jpf</id>
        <link href="https://github.com/advisories/GHSA-6wxm-mpqj-6jpf"/>
        <updated>2025-01-28T20:15:41.000Z</updated>
        <content type="html"><![CDATA[<p>When logs are written to a widely-writable directory (the default), an unprivileged attacker may predict a privileged process's log file path and pre-create a symbolic link to a sensitive file in its place. When that privileged process runs, it will follow the planted symlink and overwrite that sensitive file. To fix that, glog now causes the program to exit (with status code 2) when it finds that the configured log file already exists.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-45339">https://nvd.nist.gov/vuln/detail/CVE-2024-45339</a></li>
<li><a href="https://github.com/golang/glog/pull/74">https://github.com/golang/glog/pull/74</a></li>
<li><a href="https://github.com/golang/glog/pull/74/commits/b8741656e406e66d6992bc2c9575e460ecaa0ec2">https://github.com/golang/glog/pull/74/commits/b8741656e406e66d6992bc2c9575e460ecaa0ec2</a></li>
<li><a href="https://groups.google.com/g/golang-announce/c/H-Q4ouHWyKs">https://groups.google.com/g/golang-announce/c/H-Q4ouHWyKs</a></li>
<li><a href="https://owasp.org/www-community/vulnerabilities/Insecure_Temporary_File">https://owasp.org/www-community/vulnerabilities/Insecure_Temporary_File</a></li>
<li><a href="https://pkg.go.dev/vuln/GO-2025-3372">https://pkg.go.dev/vuln/GO-2025-3372</a></li>
<li><a href="https://github.com/advisories/GHSA-6wxm-mpqj-6jpf">https://github.com/advisories/GHSA-6wxm-mpqj-6jpf</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-6wxm-mpqj-6jpf</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2025-01-28T17:29:03.000Z</published>
    </entry>
</feed>