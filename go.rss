<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://azu.github.io/github-advisory-database-rss/go.rss</id>
    <title>Security Advisory for Go modules</title>
    <updated>2025-04-22T06:01:35.542Z</updated>
    <generator>github-advisory-database-rss</generator>
    <link rel="alternate" href="https://github.com/advisories?query=type%3Areviewed+ecosystem%3Ago"/>
    <subtitle>Security Advisory for Go modules on GitHub</subtitle>
    <rights>github-advisory-database-rss</rights>
    <category term="CRITICAL"/>
    <category term="HIGH"/>
    <category term="MODERATE"/>
    <category term="LOW"/>
    <entry>
        <title type="html"><![CDATA[[github.com/minio/operator] Minio Operator uses Kubernetes apiserver audience for AssumeRoleWithWebIdentity STS]]></title>
        <id>https://github.com/advisories/GHSA-7m6v-q233-q9j9</id>
        <link href="https://github.com/advisories/GHSA-7m6v-q233-q9j9"/>
        <updated>2025-04-21T22:51:12.000Z</updated>
        <content type="html"><![CDATA[<h1 id="prevent-token-leakage--privilege-escalation">Prevent token leakage / privilege escalation</h1>
<h2 id="minio-operator-sts-a-quick-overview">MinIO Operator STS: A Quick Overview</h2>
<p>MinIO Operator STS is a native IAM Authentication for Kubernetes. MinIO Operator offers support for <a href="https://min.io/docs/minio/linux/developers/security-token-service.html?ref=op-gh">Secure Tokens</a> (a.k.a. STS) which are a form of temporary access credentials for your MinIO Tenant. In essence, this allows you to control access to your MinIO tenant from your applications without having to explicitly create credentials for each application.</p>
<p>For an application to gain access into a MinIO Tenant, a <code>PolicyBinding</code> resource is required, granting explicit access to the applications by validating the kubernetes <a href="https://kubernetes.io/docs/concepts/security/service-accounts/">Service Account</a> authorization token. </p>
<p>The service account token is validated as follows:</p>
<ol>
<li>The application calls <code>AssumeRoleWithWebIdentity</code> API MinIO Operator provides.</li>
<li>MinIO Operator verifies the Service Account token agains the kubernetes API using the <a href="https://kubernetes.io/docs/reference/kubernetes-api/authentication-resources/token-review-v1/">TokenReview API</a></li>
<li>MinIO Operator reviews the TokenReviewResult confirms if the token is a valid token and the user is authenticated.</li>
<li>MinIO Operator validates the service account has <code>PolicyBinding</code> in the Tenant namespace.</li>
<li>MinIO Operator gets the PolicyBinding</li>
<li>MinIO Operator calls the AssumeRole API in the MinIO Tenant</li>
<li>MinIO Operator obtains temporary credentials (STS).</li>
<li>MinIO Operator return temporary Credentials to the requester application.</li>
<li>The applicaiton consumes Object Storage using the temporary credentials.</li>
</ol>
<p><img alt="STS Diagram" src="https://raw.githubusercontent.com/minio/operator/master/docs/images/sts-diagram.png"></p>
<h2 id="understanding-audiences-in-kubernetes-tokenreview">Understanding Audiences in Kubernetes TokenReview</h2>
<p>In step 2 the <code>TokenReview</code> API call attempts to authenticate a token to a known user, TokenReviewStatus is the result of the <code>TokenReview</code> request.</p>
<p>Audiences are audience identifiers chosen by the authenticator that are compatible with both the TokenReview and token. </p>
<p>An identifier is any identifier in the intersection of the TokenReviewSpec audiences and the token's audiences.</p>
<p>A client of the TokenReview API that sets the <code>spec.audiences</code> field should validate that a compatible audience identifier is returned in the status.audiences field to ensure that the TokenReview server is audience aware. 
<strong>If no audiences are provided, the audience will default to the audience of the Kubernetes apiserver.</strong></p>
<h2 id="solution-properly-issuing-and-using-audience-specific-serviceaccount-tokens">Solution: Properly Issuing and Using Audience-Specific ServiceAccount Tokens</h2>
<p>This PR ensures the Operator STS service request the Service Account JWT to belong to the audience<code>sts.min.io</code> in the TokenReviewRequest.</p>
<p>This PR ensures the examples and documentation provided guides in how to create Service accounts with "disabled auto mount services tokens", by doing this the pods where the service account is used no longer mounts the service account automatically in the path <code>/var/run/secrets/kubernetes.io/serviceaccount</code>.</p>
<p>For illustrative purposes, here is how you disable auto mount of service account tokens at the service account level.</p>
<pre><code class="language-yaml">apiVersion: v1
kind: ServiceAccount
metadata:
  namespace: namespace-name
  name: service-account name
automountServiceAccountToken: false
</code></pre>
<p>Additionally documentation and examples show how to request an audience-specific token with audience <code>sts.min.io</code>, by asking for an ServiceAccount Token to be audience specific.</p>
<p>For illustrative purposes, here is how you request an audience specific service account token in a pod:</p>
<pre><code class="language-yaml">apiVersion: batch/v1
kind: Job
metadata:
  name: job-name
  namespace: job-namespace
spec:
  template:
    spec:
      serviceAccountName: service-account-name
      volumes:
        - name: sa-token
          projected:
            sources:
              - serviceAccountToken:
                  audience: "sts.min.io"
                  expirationSeconds: 86400
                  path: token
      containers:
        - name: mc
...
          volumeMounts:
            - name: sa-token
              mountPath: /var/run/secrets/sts.min.io/serviceaccount
              readOnly: true
</code></pre>
<h3 id="how-this-prevent-a-token-leakage-or-possible-privilege-escalation">How this prevent a token leakage or possible privilege escalation?.</h3>
<p>This setup prevents privilege escalation and token leakage by combining multiple defense-in-depth mechanisms that ensure service account tokens are only usable by their intended audience, short-lived, and not exposed unnecessarily.</p>
<h4 id="audience-restriction-aud-stsminio">Audience restriction (aud: sts.min.io)</h4>
<p><strong>Problem</strong>: A ServiceAccount token is often valid for multiple audiences (e.g., the default Kubernetes API server). Without scoping, it can be replayed to other internal systems, which may unintentionally trust it.</p>
<p><strong>Mitigation</strong>: Now we enforce that tokens are explicitly created for the sts.min.io audience using the Kubernetes TokenRequest API, and the MinIO Operator:</p>
<p>Sends audiences: ["sts.min.io"] in the TokenReview.</p>
<p>Verifies that the token was issued with this audience via status.audiences.</p>
<p><strong>Effect</strong>: Even if a token is stolen or misused, it will fail validation if used outside the sts.min.io STS endpoint (e.g., reused at the API server or another service).</p>
<h4 id="token-leakage-mitigation">Token Leakage Mitigation</h4>
<p>Disabling auto-mounted service account tokens</p>
<p><strong>Problem</strong>: By default, Kubernetes mounts long-lived service account tokens into all pods at <code>/var/run/secrets/kubernetes.io/serviceaccount</code>, making them vulnerable to theft if the container is compromised.</p>
<p><strong>Mitigation</strong>:  No we guide users to set <code>automountServiceAccountToken: false</code> in their ServiceAccount definitions.</p>
<p><strong>Effect</strong>: Prevents automatic token injection into all pods, reducing the attack surface.</p>
<h4 id="requesting-short-lived-audience-specific-tokens-via-serviceaccounttoken-projection">Requesting short-lived, audience-specific tokens via serviceAccountToken projection</h4>
<p><strong>Problem</strong>: Long-lived tokens can be reused indefinitely if leaked.
<strong>Mitigation</strong>: You use projected service account tokens with: </p>
<ul>
<li>audience: "sts.min.io"</li>
<li>A short expirationSeconds (e.g., 86400 = 24 hours, or even shorter)</li>
</ul>
<p><strong>Effect</strong>: Even if the token is leaked, it is:</p>
<ul>
<li>Only usable for sts.min.io</li>
<li>Short-lived and expires soon</li>
<li>Revocable by disabling the SA or STS access</li>
</ul>
<h2 id="affected-versions-and-risk-assessment">Affected Versions and Risk Assessment</h2>
<p>The issue affects MinIO Operator versions v5.0.x and above, when the STS feature was first introduced.</p>
<ul>
<li>In v5.0.x, STS was introduced as v1alpha1 and disabled by default. It required explicit API calls to be used.</li>
<li>In v6.0.x, STS graduated to v1beta1 and was enabled by default, but still requires explicit calls to the STS API for token usage.</li>
</ul>
<p>The risk is minimal, as:</p>
<ul>
<li>The Operator does not persist the token (neither in memory nor on disk).</li>
<li>The Operator only uses the token for a single validation and does not reuse it for any other purpose.</li>
</ul>
<h1 id="release">Release</h1>
<p>Fix released in <a href="https://github.com/minio/operator/releases/tag/v7.1.0">v7.1.0</a></p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/minio/operator/security/advisories/GHSA-7m6v-q233-q9j9">https://github.com/minio/operator/security/advisories/GHSA-7m6v-q233-q9j9</a></li>
<li><a href="https://github.com/minio/operator/releases/tag/v7.1.0">https://github.com/minio/operator/releases/tag/v7.1.0</a></li>
<li><a href="https://github.com/advisories/GHSA-7m6v-q233-q9j9">https://github.com/advisories/GHSA-7m6v-q233-q9j9</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-7m6v-q233-q9j9</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2025-04-21T22:51:11.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/osrg/gobgp/v3] GoBGP does not verify that the input length]]></title>
        <id>https://github.com/advisories/GHSA-c5jg-wr5v-2wp2</id>
        <link href="https://github.com/advisories/GHSA-c5jg-wr5v-2wp2"/>
        <updated>2025-04-21T21:55:39.000Z</updated>
        <content type="html"><![CDATA[<p>An issue was discovered in GoBGP before 3.35.0. pkg/packet/rtr/rtr.go does not verify that the input length corresponds to a situation in which all bytes are available for an RTR message.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2025-43973">https://nvd.nist.gov/vuln/detail/CVE-2025-43973</a></li>
<li><a href="https://github.com/osrg/gobgp/commit/5693c58a4815cc6327b8d3b6980f0e5aced28abe">https://github.com/osrg/gobgp/commit/5693c58a4815cc6327b8d3b6980f0e5aced28abe</a></li>
<li><a href="https://github.com/osrg/gobgp/compare/v3.34.0...v3.35.0">https://github.com/osrg/gobgp/compare/v3.34.0...v3.35.0</a></li>
<li><a href="https://github.com/advisories/GHSA-c5jg-wr5v-2wp2">https://github.com/advisories/GHSA-c5jg-wr5v-2wp2</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-c5jg-wr5v-2wp2</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2025-04-21T03:30:19.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/osrg/gobgp] GoBGP does not verify that the input length]]></title>
        <id>https://github.com/advisories/GHSA-c5jg-wr5v-2wp2</id>
        <link href="https://github.com/advisories/GHSA-c5jg-wr5v-2wp2"/>
        <updated>2025-04-21T21:55:39.000Z</updated>
        <content type="html"><![CDATA[<p>An issue was discovered in GoBGP before 3.35.0. pkg/packet/rtr/rtr.go does not verify that the input length corresponds to a situation in which all bytes are available for an RTR message.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2025-43973">https://nvd.nist.gov/vuln/detail/CVE-2025-43973</a></li>
<li><a href="https://github.com/osrg/gobgp/commit/5693c58a4815cc6327b8d3b6980f0e5aced28abe">https://github.com/osrg/gobgp/commit/5693c58a4815cc6327b8d3b6980f0e5aced28abe</a></li>
<li><a href="https://github.com/osrg/gobgp/compare/v3.34.0...v3.35.0">https://github.com/osrg/gobgp/compare/v3.34.0...v3.35.0</a></li>
<li><a href="https://github.com/advisories/GHSA-c5jg-wr5v-2wp2">https://github.com/advisories/GHSA-c5jg-wr5v-2wp2</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-c5jg-wr5v-2wp2</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2025-04-21T03:30:19.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/osrg/gobgp/v3] GoBGP crashes in the flowspec parser]]></title>
        <id>https://github.com/advisories/GHSA-mfvv-mgf6-q25r</id>
        <link href="https://github.com/advisories/GHSA-mfvv-mgf6-q25r"/>
        <updated>2025-04-21T21:55:34.000Z</updated>
        <content type="html"><![CDATA[<p>An issue was discovered in GoBGP before 3.35.0. An attacker can cause a crash in the pkg/packet/bgp/bgp.go flowspec parser by sending fewer than 20 bytes in a certain context.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2025-43972">https://nvd.nist.gov/vuln/detail/CVE-2025-43972</a></li>
<li><a href="https://github.com/osrg/gobgp/commit/ca7383f450f7b296c5389feceef2467de5ab6e5a">https://github.com/osrg/gobgp/commit/ca7383f450f7b296c5389feceef2467de5ab6e5a</a></li>
<li><a href="https://github.com/osrg/gobgp/compare/v3.34.0...v3.35.0">https://github.com/osrg/gobgp/compare/v3.34.0...v3.35.0</a></li>
<li><a href="https://github.com/advisories/GHSA-mfvv-mgf6-q25r">https://github.com/advisories/GHSA-mfvv-mgf6-q25r</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-mfvv-mgf6-q25r</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2025-04-21T03:30:19.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/osrg/gobgp] GoBGP crashes in the flowspec parser]]></title>
        <id>https://github.com/advisories/GHSA-mfvv-mgf6-q25r</id>
        <link href="https://github.com/advisories/GHSA-mfvv-mgf6-q25r"/>
        <updated>2025-04-21T21:55:34.000Z</updated>
        <content type="html"><![CDATA[<p>An issue was discovered in GoBGP before 3.35.0. An attacker can cause a crash in the pkg/packet/bgp/bgp.go flowspec parser by sending fewer than 20 bytes in a certain context.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2025-43972">https://nvd.nist.gov/vuln/detail/CVE-2025-43972</a></li>
<li><a href="https://github.com/osrg/gobgp/commit/ca7383f450f7b296c5389feceef2467de5ab6e5a">https://github.com/osrg/gobgp/commit/ca7383f450f7b296c5389feceef2467de5ab6e5a</a></li>
<li><a href="https://github.com/osrg/gobgp/compare/v3.34.0...v3.35.0">https://github.com/osrg/gobgp/compare/v3.34.0...v3.35.0</a></li>
<li><a href="https://github.com/advisories/GHSA-mfvv-mgf6-q25r">https://github.com/advisories/GHSA-mfvv-mgf6-q25r</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-mfvv-mgf6-q25r</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2025-04-21T03:30:19.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/osrg/gobgp/v3] GoBGP panics due to a zero value for softwareVersionLen]]></title>
        <id>https://github.com/advisories/GHSA-7m35-vw2c-696v</id>
        <link href="https://github.com/advisories/GHSA-7m35-vw2c-696v"/>
        <updated>2025-04-21T21:55:26.000Z</updated>
        <content type="html"><![CDATA[<p>An issue was discovered in GoBGP before 3.35.0. pkg/packet/bgp/bgp.go allows attackers to cause a panic via a zero value for softwareVersionLen.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2025-43971">https://nvd.nist.gov/vuln/detail/CVE-2025-43971</a></li>
<li><a href="https://github.com/osrg/gobgp/commit/08a001e06d90e8bcc190084c66992f46f62c0986">https://github.com/osrg/gobgp/commit/08a001e06d90e8bcc190084c66992f46f62c0986</a></li>
<li><a href="https://github.com/osrg/gobgp/compare/v3.34.0...v3.35.0">https://github.com/osrg/gobgp/compare/v3.34.0...v3.35.0</a></li>
<li><a href="https://github.com/advisories/GHSA-7m35-vw2c-696v">https://github.com/advisories/GHSA-7m35-vw2c-696v</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-7m35-vw2c-696v</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2025-04-21T03:30:18.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/osrg/gobgp] GoBGP panics due to a zero value for softwareVersionLen]]></title>
        <id>https://github.com/advisories/GHSA-7m35-vw2c-696v</id>
        <link href="https://github.com/advisories/GHSA-7m35-vw2c-696v"/>
        <updated>2025-04-21T21:55:26.000Z</updated>
        <content type="html"><![CDATA[<p>An issue was discovered in GoBGP before 3.35.0. pkg/packet/bgp/bgp.go allows attackers to cause a panic via a zero value for softwareVersionLen.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2025-43971">https://nvd.nist.gov/vuln/detail/CVE-2025-43971</a></li>
<li><a href="https://github.com/osrg/gobgp/commit/08a001e06d90e8bcc190084c66992f46f62c0986">https://github.com/osrg/gobgp/commit/08a001e06d90e8bcc190084c66992f46f62c0986</a></li>
<li><a href="https://github.com/osrg/gobgp/compare/v3.34.0...v3.35.0">https://github.com/osrg/gobgp/compare/v3.34.0...v3.35.0</a></li>
<li><a href="https://github.com/advisories/GHSA-7m35-vw2c-696v">https://github.com/advisories/GHSA-7m35-vw2c-696v</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-7m35-vw2c-696v</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2025-04-21T03:30:18.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/osrg/gobgp/v3] GoBGP does not properly check the input length]]></title>
        <id>https://github.com/advisories/GHSA-hqhq-hp5x-xp3w</id>
        <link href="https://github.com/advisories/GHSA-hqhq-hp5x-xp3w"/>
        <updated>2025-04-21T21:55:19.000Z</updated>
        <content type="html"><![CDATA[<p>An issue was discovered in GoBGP before 3.35.0. pkg/packet/mrt/mrt.go does not properly check the input length, e.g., by ensuring that there are 12 bytes or 36 bytes (depending on the address family).</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2025-43970">https://nvd.nist.gov/vuln/detail/CVE-2025-43970</a></li>
<li><a href="https://github.com/osrg/gobgp/commit/5153bafbe8dbe1a2f02a70bbf0365e98b80e47b0">https://github.com/osrg/gobgp/commit/5153bafbe8dbe1a2f02a70bbf0365e98b80e47b0</a></li>
<li><a href="https://github.com/osrg/gobgp/compare/v3.34.0...v3.35.0">https://github.com/osrg/gobgp/compare/v3.34.0...v3.35.0</a></li>
<li><a href="https://github.com/advisories/GHSA-hqhq-hp5x-xp3w">https://github.com/advisories/GHSA-hqhq-hp5x-xp3w</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-hqhq-hp5x-xp3w</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2025-04-21T03:30:18.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/osrg/gobgp] GoBGP does not properly check the input length]]></title>
        <id>https://github.com/advisories/GHSA-hqhq-hp5x-xp3w</id>
        <link href="https://github.com/advisories/GHSA-hqhq-hp5x-xp3w"/>
        <updated>2025-04-21T21:55:19.000Z</updated>
        <content type="html"><![CDATA[<p>An issue was discovered in GoBGP before 3.35.0. pkg/packet/mrt/mrt.go does not properly check the input length, e.g., by ensuring that there are 12 bytes or 36 bytes (depending on the address family).</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2025-43970">https://nvd.nist.gov/vuln/detail/CVE-2025-43970</a></li>
<li><a href="https://github.com/osrg/gobgp/commit/5153bafbe8dbe1a2f02a70bbf0365e98b80e47b0">https://github.com/osrg/gobgp/commit/5153bafbe8dbe1a2f02a70bbf0365e98b80e47b0</a></li>
<li><a href="https://github.com/osrg/gobgp/compare/v3.34.0...v3.35.0">https://github.com/osrg/gobgp/compare/v3.34.0...v3.35.0</a></li>
<li><a href="https://github.com/advisories/GHSA-hqhq-hp5x-xp3w">https://github.com/advisories/GHSA-hqhq-hp5x-xp3w</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-hqhq-hp5x-xp3w</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2025-04-21T03:30:18.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/songquanpeng/one-api] one-api Cross-site Scripting vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-wvcx-j62q-45qw</id>
        <link href="https://github.com/advisories/GHSA-wvcx-j62q-45qw"/>
        <updated>2025-04-21T21:54:54.000Z</updated>
        <content type="html"><![CDATA[<p>A vulnerability was found in songquanpeng one-api up to 0.6.10. It has been classified as problematic. This affects an unknown part of the component System Setting Handler. The manipulation of the argument Homepage Content leads to cross site scripting. It is possible to initiate the attack remotely. The exploit has been disclosed to the public and may be used.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2025-3801">https://nvd.nist.gov/vuln/detail/CVE-2025-3801</a></li>
<li><a href="https://github.com/yaowenxiao721/Poc/blob/main/One-API/One-API-poc.md">https://github.com/yaowenxiao721/Poc/blob/main/One-API/One-API-poc.md</a></li>
<li><a href="https://vuldb.com/?ctiid.305655">https://vuldb.com/?ctiid.305655</a></li>
<li><a href="https://vuldb.com/?id.305655">https://vuldb.com/?id.305655</a></li>
<li><a href="https://vuldb.com/?submit.554702">https://vuldb.com/?submit.554702</a></li>
<li><a href="https://github.com/advisories/GHSA-wvcx-j62q-45qw">https://github.com/advisories/GHSA-wvcx-j62q-45qw</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-wvcx-j62q-45qw</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2025-04-19T15:30:23.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/cilium/cilium] In Cilium, packets from terminating endpoints may not be encrypted in Wireguard-enabled clusters]]></title>
        <id>https://github.com/advisories/GHSA-5vxx-c285-pcq4</id>
        <link href="https://github.com/advisories/GHSA-5vxx-c285-pcq4"/>
        <updated>2025-04-21T16:17:50.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>When using <a href="https://docs.cilium.io/en/stable/security/network/encryption-wireguard/#encryption-wg">Wireguard transparent encryption</a> in a Cilium cluster, packets that originate from a terminating endpoint can leave the source node without encryption due to a race condition in how traffic is processed by Cilium.</p>
<h3 id="patches">Patches</h3>
<p>This issue has been patched in <a href="https://github.com/cilium/cilium/pull/38592">https://github.com/cilium/cilium/pull/38592</a>.</p>
<p>This issue affects:</p>
<ul>
<li>Cilium v1.15 between v1.15.0 and v1.15.15 inclusive</li>
<li>Cilium v1.16 between v1.16.0 and v1.16.8 inclusive</li>
<li>Cilium v1.17 between v1.17.0 and v1.17.2 inclusive</li>
</ul>
<p>This issue is fixed in:</p>
<ul>
<li>Cilium v1.15.16</li>
<li>Cilium v1.16.9</li>
<li>Cilium v1.17.3</li>
</ul>
<h3 id="workarounds">Workarounds</h3>
<p>There is no workaround to this issue.</p>
<h3 id="acknowledgements">Acknowledgements</h3>
<p>The Cilium community has worked together with members of Isovalent to prepare these mitigations. Special thanks to @gandro  and @pippolo84 for reporting this issue and to @julianwiedmann for the patch.</p>
<h3 id="for-more-information">For more information</h3>
<p>If you think you have found a vulnerability affecting Cilium, we strongly encourage you to report it to our security mailing list at <a href="mailto:security@cilium.io">security@cilium.io</a>. This is a private mailing list for the Cilium security team, and your report will be treated as top priority.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/cilium/cilium/security/advisories/GHSA-5vxx-c285-pcq4">https://github.com/cilium/cilium/security/advisories/GHSA-5vxx-c285-pcq4</a></li>
<li><a href="https://github.com/cilium/cilium/pull/38592">https://github.com/cilium/cilium/pull/38592</a></li>
<li><a href="https://github.com/cilium/cilium/commit/e8543eef05126e9ba8a845dc74e96f4e30f6dba9">https://github.com/cilium/cilium/commit/e8543eef05126e9ba8a845dc74e96f4e30f6dba9</a></li>
<li><a href="https://github.com/advisories/GHSA-5vxx-c285-pcq4">https://github.com/advisories/GHSA-5vxx-c285-pcq4</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-5vxx-c285-pcq4</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2025-04-21T16:17:49.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/cilium/cilium] In Cilium, packets from terminating endpoints may not be encrypted in Wireguard-enabled clusters]]></title>
        <id>https://github.com/advisories/GHSA-5vxx-c285-pcq4</id>
        <link href="https://github.com/advisories/GHSA-5vxx-c285-pcq4"/>
        <updated>2025-04-21T16:17:50.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>When using <a href="https://docs.cilium.io/en/stable/security/network/encryption-wireguard/#encryption-wg">Wireguard transparent encryption</a> in a Cilium cluster, packets that originate from a terminating endpoint can leave the source node without encryption due to a race condition in how traffic is processed by Cilium.</p>
<h3 id="patches">Patches</h3>
<p>This issue has been patched in <a href="https://github.com/cilium/cilium/pull/38592">https://github.com/cilium/cilium/pull/38592</a>.</p>
<p>This issue affects:</p>
<ul>
<li>Cilium v1.15 between v1.15.0 and v1.15.15 inclusive</li>
<li>Cilium v1.16 between v1.16.0 and v1.16.8 inclusive</li>
<li>Cilium v1.17 between v1.17.0 and v1.17.2 inclusive</li>
</ul>
<p>This issue is fixed in:</p>
<ul>
<li>Cilium v1.15.16</li>
<li>Cilium v1.16.9</li>
<li>Cilium v1.17.3</li>
</ul>
<h3 id="workarounds">Workarounds</h3>
<p>There is no workaround to this issue.</p>
<h3 id="acknowledgements">Acknowledgements</h3>
<p>The Cilium community has worked together with members of Isovalent to prepare these mitigations. Special thanks to @gandro  and @pippolo84 for reporting this issue and to @julianwiedmann for the patch.</p>
<h3 id="for-more-information">For more information</h3>
<p>If you think you have found a vulnerability affecting Cilium, we strongly encourage you to report it to our security mailing list at <a href="mailto:security@cilium.io">security@cilium.io</a>. This is a private mailing list for the Cilium security team, and your report will be treated as top priority.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/cilium/cilium/security/advisories/GHSA-5vxx-c285-pcq4">https://github.com/cilium/cilium/security/advisories/GHSA-5vxx-c285-pcq4</a></li>
<li><a href="https://github.com/cilium/cilium/pull/38592">https://github.com/cilium/cilium/pull/38592</a></li>
<li><a href="https://github.com/cilium/cilium/commit/e8543eef05126e9ba8a845dc74e96f4e30f6dba9">https://github.com/cilium/cilium/commit/e8543eef05126e9ba8a845dc74e96f4e30f6dba9</a></li>
<li><a href="https://github.com/advisories/GHSA-5vxx-c285-pcq4">https://github.com/advisories/GHSA-5vxx-c285-pcq4</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-5vxx-c285-pcq4</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2025-04-21T16:17:49.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/cilium/cilium] In Cilium, packets from terminating endpoints may not be encrypted in Wireguard-enabled clusters]]></title>
        <id>https://github.com/advisories/GHSA-5vxx-c285-pcq4</id>
        <link href="https://github.com/advisories/GHSA-5vxx-c285-pcq4"/>
        <updated>2025-04-21T16:17:50.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>When using <a href="https://docs.cilium.io/en/stable/security/network/encryption-wireguard/#encryption-wg">Wireguard transparent encryption</a> in a Cilium cluster, packets that originate from a terminating endpoint can leave the source node without encryption due to a race condition in how traffic is processed by Cilium.</p>
<h3 id="patches">Patches</h3>
<p>This issue has been patched in <a href="https://github.com/cilium/cilium/pull/38592">https://github.com/cilium/cilium/pull/38592</a>.</p>
<p>This issue affects:</p>
<ul>
<li>Cilium v1.15 between v1.15.0 and v1.15.15 inclusive</li>
<li>Cilium v1.16 between v1.16.0 and v1.16.8 inclusive</li>
<li>Cilium v1.17 between v1.17.0 and v1.17.2 inclusive</li>
</ul>
<p>This issue is fixed in:</p>
<ul>
<li>Cilium v1.15.16</li>
<li>Cilium v1.16.9</li>
<li>Cilium v1.17.3</li>
</ul>
<h3 id="workarounds">Workarounds</h3>
<p>There is no workaround to this issue.</p>
<h3 id="acknowledgements">Acknowledgements</h3>
<p>The Cilium community has worked together with members of Isovalent to prepare these mitigations. Special thanks to @gandro  and @pippolo84 for reporting this issue and to @julianwiedmann for the patch.</p>
<h3 id="for-more-information">For more information</h3>
<p>If you think you have found a vulnerability affecting Cilium, we strongly encourage you to report it to our security mailing list at <a href="mailto:security@cilium.io">security@cilium.io</a>. This is a private mailing list for the Cilium security team, and your report will be treated as top priority.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/cilium/cilium/security/advisories/GHSA-5vxx-c285-pcq4">https://github.com/cilium/cilium/security/advisories/GHSA-5vxx-c285-pcq4</a></li>
<li><a href="https://github.com/cilium/cilium/pull/38592">https://github.com/cilium/cilium/pull/38592</a></li>
<li><a href="https://github.com/cilium/cilium/commit/e8543eef05126e9ba8a845dc74e96f4e30f6dba9">https://github.com/cilium/cilium/commit/e8543eef05126e9ba8a845dc74e96f4e30f6dba9</a></li>
<li><a href="https://github.com/advisories/GHSA-5vxx-c285-pcq4">https://github.com/advisories/GHSA-5vxx-c285-pcq4</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-5vxx-c285-pcq4</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2025-04-21T16:17:49.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/traefik/traefik/v3] Traefik has a possible vulnerability with the path matchers]]></title>
        <id>https://github.com/advisories/GHSA-6p68-w45g-48j7</id>
        <link href="https://github.com/advisories/GHSA-6p68-w45g-48j7"/>
        <updated>2025-04-21T16:17:39.000Z</updated>
        <content type="html"><![CDATA[<h2 id="impact">Impact</h2>
<p>There is a potential vulnerability in Traefik managing the requests using a <code>PathPrefix</code>, <code>Path</code> or <code>PathRegex</code> matcher.</p>
<p>When Traefik is configured to route the requests to a backend using a matcher based on the path, if the URL contains a <code>/../</code> in its path, it’s possible to target a backend, exposed using another router, by-passing the middlewares chain.</p>
<h2 id="example">Example</h2>
<pre><code class="language-yaml">apiVersion: traefik.io/v1alpha1
kind: IngressRoute
metadata:
  name: my-service
spec:
  routes:
    - match: PathPrefix(‘/service’)
      kind: Rule
      services:
        - name: service-a
          port: 8080
      middlewares:
        - name: my-middleware-a
    - match: PathPrefix(‘/service/sub-path’)
      kind: Rule
      services:
        - name: service-a
          port: 8080
</code></pre>
<p>In such a case, the request <code>http://mydomain.example.com/service/sub-path/../other-path</code> will reach the backend <code>my-service-a</code> without operating the middleware <code>my-middleware-a</code> unless the computed path is <code>http://mydomain.example.com/service/other-path</code> and should be computes by the first router (operating <code>my-middleware-a</code>).</p>
<h2 id="patches">Patches</h2>
<ul>
<li><a href="https://github.com/traefik/traefik/releases/tag/v2.11.24">https://github.com/traefik/traefik/releases/tag/v2.11.24</a></li>
<li><a href="https://github.com/traefik/traefik/releases/tag/v3.3.6">https://github.com/traefik/traefik/releases/tag/v3.3.6</a></li>
<li><a href="https://github.com/traefik/traefik/releases/tag/v3.4.0-rc2">https://github.com/traefik/traefik/releases/tag/v3.4.0-rc2</a></li>
</ul>
<h2 id="workaround">Workaround</h2>
<p>Add a <code>PathRegexp</code> rule to the matcher to prevent matching a route with a <code>/../</code> in the path.</p>
<p>Example: </p>
<pre><code class="language-yaml">match: PathPrefix(`/service`) &amp;&amp; !PathRegexp(`(?:(/\.\./)+.*)`)
</code></pre>
<h2 id="for-more-information">For more information</h2>
<p>If you have any questions or comments about this advisory, please <a href="https://github.com/traefik/traefik/issues"></a><a href="https://github.com/traefik/traefik/issues">open an issue</a>.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/traefik/traefik/security/advisories/GHSA-6p68-w45g-48j7">https://github.com/traefik/traefik/security/advisories/GHSA-6p68-w45g-48j7</a></li>
<li><a href="https://github.com/traefik/traefik/releases/tag/v2.11.24">https://github.com/traefik/traefik/releases/tag/v2.11.24</a></li>
<li><a href="https://github.com/traefik/traefik/releases/tag/v3.3.6">https://github.com/traefik/traefik/releases/tag/v3.3.6</a></li>
<li><a href="https://github.com/traefik/traefik/releases/tag/v3.4.0-rc2">https://github.com/traefik/traefik/releases/tag/v3.4.0-rc2</a></li>
<li><a href="https://github.com/advisories/GHSA-6p68-w45g-48j7">https://github.com/advisories/GHSA-6p68-w45g-48j7</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-6p68-w45g-48j7</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2025-04-21T16:17:38.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/traefik/traefik/v3] Traefik has a possible vulnerability with the path matchers]]></title>
        <id>https://github.com/advisories/GHSA-6p68-w45g-48j7</id>
        <link href="https://github.com/advisories/GHSA-6p68-w45g-48j7"/>
        <updated>2025-04-21T16:17:39.000Z</updated>
        <content type="html"><![CDATA[<h2 id="impact">Impact</h2>
<p>There is a potential vulnerability in Traefik managing the requests using a <code>PathPrefix</code>, <code>Path</code> or <code>PathRegex</code> matcher.</p>
<p>When Traefik is configured to route the requests to a backend using a matcher based on the path, if the URL contains a <code>/../</code> in its path, it’s possible to target a backend, exposed using another router, by-passing the middlewares chain.</p>
<h2 id="example">Example</h2>
<pre><code class="language-yaml">apiVersion: traefik.io/v1alpha1
kind: IngressRoute
metadata:
  name: my-service
spec:
  routes:
    - match: PathPrefix(‘/service’)
      kind: Rule
      services:
        - name: service-a
          port: 8080
      middlewares:
        - name: my-middleware-a
    - match: PathPrefix(‘/service/sub-path’)
      kind: Rule
      services:
        - name: service-a
          port: 8080
</code></pre>
<p>In such a case, the request <code>http://mydomain.example.com/service/sub-path/../other-path</code> will reach the backend <code>my-service-a</code> without operating the middleware <code>my-middleware-a</code> unless the computed path is <code>http://mydomain.example.com/service/other-path</code> and should be computes by the first router (operating <code>my-middleware-a</code>).</p>
<h2 id="patches">Patches</h2>
<ul>
<li><a href="https://github.com/traefik/traefik/releases/tag/v2.11.24">https://github.com/traefik/traefik/releases/tag/v2.11.24</a></li>
<li><a href="https://github.com/traefik/traefik/releases/tag/v3.3.6">https://github.com/traefik/traefik/releases/tag/v3.3.6</a></li>
<li><a href="https://github.com/traefik/traefik/releases/tag/v3.4.0-rc2">https://github.com/traefik/traefik/releases/tag/v3.4.0-rc2</a></li>
</ul>
<h2 id="workaround">Workaround</h2>
<p>Add a <code>PathRegexp</code> rule to the matcher to prevent matching a route with a <code>/../</code> in the path.</p>
<p>Example: </p>
<pre><code class="language-yaml">match: PathPrefix(`/service`) &amp;&amp; !PathRegexp(`(?:(/\.\./)+.*)`)
</code></pre>
<h2 id="for-more-information">For more information</h2>
<p>If you have any questions or comments about this advisory, please <a href="https://github.com/traefik/traefik/issues"></a><a href="https://github.com/traefik/traefik/issues">open an issue</a>.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/traefik/traefik/security/advisories/GHSA-6p68-w45g-48j7">https://github.com/traefik/traefik/security/advisories/GHSA-6p68-w45g-48j7</a></li>
<li><a href="https://github.com/traefik/traefik/releases/tag/v2.11.24">https://github.com/traefik/traefik/releases/tag/v2.11.24</a></li>
<li><a href="https://github.com/traefik/traefik/releases/tag/v3.3.6">https://github.com/traefik/traefik/releases/tag/v3.3.6</a></li>
<li><a href="https://github.com/traefik/traefik/releases/tag/v3.4.0-rc2">https://github.com/traefik/traefik/releases/tag/v3.4.0-rc2</a></li>
<li><a href="https://github.com/advisories/GHSA-6p68-w45g-48j7">https://github.com/advisories/GHSA-6p68-w45g-48j7</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-6p68-w45g-48j7</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2025-04-21T16:17:38.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/traefik/traefik/v2] Traefik has a possible vulnerability with the path matchers]]></title>
        <id>https://github.com/advisories/GHSA-6p68-w45g-48j7</id>
        <link href="https://github.com/advisories/GHSA-6p68-w45g-48j7"/>
        <updated>2025-04-21T16:17:39.000Z</updated>
        <content type="html"><![CDATA[<h2 id="impact">Impact</h2>
<p>There is a potential vulnerability in Traefik managing the requests using a <code>PathPrefix</code>, <code>Path</code> or <code>PathRegex</code> matcher.</p>
<p>When Traefik is configured to route the requests to a backend using a matcher based on the path, if the URL contains a <code>/../</code> in its path, it’s possible to target a backend, exposed using another router, by-passing the middlewares chain.</p>
<h2 id="example">Example</h2>
<pre><code class="language-yaml">apiVersion: traefik.io/v1alpha1
kind: IngressRoute
metadata:
  name: my-service
spec:
  routes:
    - match: PathPrefix(‘/service’)
      kind: Rule
      services:
        - name: service-a
          port: 8080
      middlewares:
        - name: my-middleware-a
    - match: PathPrefix(‘/service/sub-path’)
      kind: Rule
      services:
        - name: service-a
          port: 8080
</code></pre>
<p>In such a case, the request <code>http://mydomain.example.com/service/sub-path/../other-path</code> will reach the backend <code>my-service-a</code> without operating the middleware <code>my-middleware-a</code> unless the computed path is <code>http://mydomain.example.com/service/other-path</code> and should be computes by the first router (operating <code>my-middleware-a</code>).</p>
<h2 id="patches">Patches</h2>
<ul>
<li><a href="https://github.com/traefik/traefik/releases/tag/v2.11.24">https://github.com/traefik/traefik/releases/tag/v2.11.24</a></li>
<li><a href="https://github.com/traefik/traefik/releases/tag/v3.3.6">https://github.com/traefik/traefik/releases/tag/v3.3.6</a></li>
<li><a href="https://github.com/traefik/traefik/releases/tag/v3.4.0-rc2">https://github.com/traefik/traefik/releases/tag/v3.4.0-rc2</a></li>
</ul>
<h2 id="workaround">Workaround</h2>
<p>Add a <code>PathRegexp</code> rule to the matcher to prevent matching a route with a <code>/../</code> in the path.</p>
<p>Example: </p>
<pre><code class="language-yaml">match: PathPrefix(`/service`) &amp;&amp; !PathRegexp(`(?:(/\.\./)+.*)`)
</code></pre>
<h2 id="for-more-information">For more information</h2>
<p>If you have any questions or comments about this advisory, please <a href="https://github.com/traefik/traefik/issues"></a><a href="https://github.com/traefik/traefik/issues">open an issue</a>.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/traefik/traefik/security/advisories/GHSA-6p68-w45g-48j7">https://github.com/traefik/traefik/security/advisories/GHSA-6p68-w45g-48j7</a></li>
<li><a href="https://github.com/traefik/traefik/releases/tag/v2.11.24">https://github.com/traefik/traefik/releases/tag/v2.11.24</a></li>
<li><a href="https://github.com/traefik/traefik/releases/tag/v3.3.6">https://github.com/traefik/traefik/releases/tag/v3.3.6</a></li>
<li><a href="https://github.com/traefik/traefik/releases/tag/v3.4.0-rc2">https://github.com/traefik/traefik/releases/tag/v3.4.0-rc2</a></li>
<li><a href="https://github.com/advisories/GHSA-6p68-w45g-48j7">https://github.com/advisories/GHSA-6p68-w45g-48j7</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-6p68-w45g-48j7</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2025-04-21T16:17:38.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/traefik/traefik] Traefik has a possible vulnerability with the path matchers]]></title>
        <id>https://github.com/advisories/GHSA-6p68-w45g-48j7</id>
        <link href="https://github.com/advisories/GHSA-6p68-w45g-48j7"/>
        <updated>2025-04-21T16:17:39.000Z</updated>
        <content type="html"><![CDATA[<h2 id="impact">Impact</h2>
<p>There is a potential vulnerability in Traefik managing the requests using a <code>PathPrefix</code>, <code>Path</code> or <code>PathRegex</code> matcher.</p>
<p>When Traefik is configured to route the requests to a backend using a matcher based on the path, if the URL contains a <code>/../</code> in its path, it’s possible to target a backend, exposed using another router, by-passing the middlewares chain.</p>
<h2 id="example">Example</h2>
<pre><code class="language-yaml">apiVersion: traefik.io/v1alpha1
kind: IngressRoute
metadata:
  name: my-service
spec:
  routes:
    - match: PathPrefix(‘/service’)
      kind: Rule
      services:
        - name: service-a
          port: 8080
      middlewares:
        - name: my-middleware-a
    - match: PathPrefix(‘/service/sub-path’)
      kind: Rule
      services:
        - name: service-a
          port: 8080
</code></pre>
<p>In such a case, the request <code>http://mydomain.example.com/service/sub-path/../other-path</code> will reach the backend <code>my-service-a</code> without operating the middleware <code>my-middleware-a</code> unless the computed path is <code>http://mydomain.example.com/service/other-path</code> and should be computes by the first router (operating <code>my-middleware-a</code>).</p>
<h2 id="patches">Patches</h2>
<ul>
<li><a href="https://github.com/traefik/traefik/releases/tag/v2.11.24">https://github.com/traefik/traefik/releases/tag/v2.11.24</a></li>
<li><a href="https://github.com/traefik/traefik/releases/tag/v3.3.6">https://github.com/traefik/traefik/releases/tag/v3.3.6</a></li>
<li><a href="https://github.com/traefik/traefik/releases/tag/v3.4.0-rc2">https://github.com/traefik/traefik/releases/tag/v3.4.0-rc2</a></li>
</ul>
<h2 id="workaround">Workaround</h2>
<p>Add a <code>PathRegexp</code> rule to the matcher to prevent matching a route with a <code>/../</code> in the path.</p>
<p>Example: </p>
<pre><code class="language-yaml">match: PathPrefix(`/service`) &amp;&amp; !PathRegexp(`(?:(/\.\./)+.*)`)
</code></pre>
<h2 id="for-more-information">For more information</h2>
<p>If you have any questions or comments about this advisory, please <a href="https://github.com/traefik/traefik/issues"></a><a href="https://github.com/traefik/traefik/issues">open an issue</a>.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/traefik/traefik/security/advisories/GHSA-6p68-w45g-48j7">https://github.com/traefik/traefik/security/advisories/GHSA-6p68-w45g-48j7</a></li>
<li><a href="https://github.com/traefik/traefik/releases/tag/v2.11.24">https://github.com/traefik/traefik/releases/tag/v2.11.24</a></li>
<li><a href="https://github.com/traefik/traefik/releases/tag/v3.3.6">https://github.com/traefik/traefik/releases/tag/v3.3.6</a></li>
<li><a href="https://github.com/traefik/traefik/releases/tag/v3.4.0-rc2">https://github.com/traefik/traefik/releases/tag/v3.4.0-rc2</a></li>
<li><a href="https://github.com/advisories/GHSA-6p68-w45g-48j7">https://github.com/advisories/GHSA-6p68-w45g-48j7</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-6p68-w45g-48j7</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2025-04-21T16:17:38.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/mattermost/mattermost/server/v8] Mattermost vulnerable to Incorrect Implementation of Authentication Algorithm]]></title>
        <id>https://github.com/advisories/GHSA-6rqh-8465-2xcw</id>
        <link href="https://github.com/advisories/GHSA-6rqh-8465-2xcw"/>
        <updated>2025-04-21T13:57:53.000Z</updated>
        <content type="html"><![CDATA[<p>Mattermost versions 10.5.x &lt;= 10.5.1, 10.4.x &lt;= 10.4.3, 9.11.x &lt;= 9.11.9 fail to invalidate the cache when a user account is converted to a bot which allows an attacker to login to the bot exactly one time via normal credentials.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2025-2475">https://nvd.nist.gov/vuln/detail/CVE-2025-2475</a></li>
<li><a href="https://mattermost.com/security-updates">https://mattermost.com/security-updates</a></li>
<li><a href="https://github.com/mattermost/mattermost/commit/fd356b62b4dd3318d2c8019d2310abdd6ce24c8c">https://github.com/mattermost/mattermost/commit/fd356b62b4dd3318d2c8019d2310abdd6ce24c8c</a></li>
<li><a href="https://github.com/mattermost/mattermost/commit/124547a9ef424431e1e6cf09bdba6c1099d415de">https://github.com/mattermost/mattermost/commit/124547a9ef424431e1e6cf09bdba6c1099d415de</a></li>
<li><a href="https://github.com/mattermost/mattermost/commit/40fd60714bd055e00c16301ba6dc0fddfc44e15e">https://github.com/mattermost/mattermost/commit/40fd60714bd055e00c16301ba6dc0fddfc44e15e</a></li>
<li><a href="https://github.com/mattermost/mattermost/commit/88523ceed8a7547c4a4203a30e7c3a8097346280">https://github.com/mattermost/mattermost/commit/88523ceed8a7547c4a4203a30e7c3a8097346280</a></li>
<li><a href="https://github.com/mattermost/mattermost/commit/bcd7a4c2bd856dbb40fcda227b363fa5f6f548a7">https://github.com/mattermost/mattermost/commit/bcd7a4c2bd856dbb40fcda227b363fa5f6f548a7</a></li>
<li><a href="https://github.com/advisories/GHSA-6rqh-8465-2xcw">https://github.com/advisories/GHSA-6rqh-8465-2xcw</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-6rqh-8465-2xcw</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2025-04-14T15:31:59.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/traefik/traefik/v3] Traefik affected by Go HTTP Request Smuggling Vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-5423-jcjm-2gpv</id>
        <link href="https://github.com/advisories/GHSA-5423-jcjm-2gpv"/>
        <updated>2025-04-18T19:35:18.000Z</updated>
        <content type="html"><![CDATA[<h3 id="summary">Summary</h3>
<p>net/http: request smuggling through invalid chunked data: The net/http package accepts data in the chunked transfer encoding containing an invalid chunk-size line terminated by a bare LF. When used in conjunction with a server or proxy which incorrectly interprets a bare LF in a chunk extension as part of the extension, this could permit request smuggling. [CVE-2025-22871] Vendor Affected Components: Go: 1.23.x &lt; 1.23.8</p>
<p>More Details: <a href="https://nvd.nist.gov/vuln/detail/CVE-2025-22871">CVE-2025-22871</a></p>
<h2 id="patches">Patches</h2>
<ul>
<li><a href="https://github.com/traefik/traefik/releases/tag/v2.11.24">https://github.com/traefik/traefik/releases/tag/v2.11.24</a></li>
<li><a href="https://github.com/traefik/traefik/releases/tag/v3.3.6">https://github.com/traefik/traefik/releases/tag/v3.3.6</a></li>
<li><a href="https://github.com/traefik/traefik/releases/tag/v3.4.0-rc2">https://github.com/traefik/traefik/releases/tag/v3.4.0-rc2</a></li>
</ul>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/traefik/traefik/security/advisories/GHSA-5423-jcjm-2gpv">https://github.com/traefik/traefik/security/advisories/GHSA-5423-jcjm-2gpv</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2025-22871">https://nvd.nist.gov/vuln/detail/CVE-2025-22871</a></li>
<li><a href="https://github.com/traefik/traefik/releases/tag/v2.11.24">https://github.com/traefik/traefik/releases/tag/v2.11.24</a></li>
<li><a href="https://github.com/traefik/traefik/releases/tag/v3.3.6">https://github.com/traefik/traefik/releases/tag/v3.3.6</a></li>
<li><a href="https://github.com/traefik/traefik/releases/tag/v3.4.0-rc2">https://github.com/traefik/traefik/releases/tag/v3.4.0-rc2</a></li>
<li><a href="https://github.com/advisories/GHSA-5423-jcjm-2gpv">https://github.com/advisories/GHSA-5423-jcjm-2gpv</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-5423-jcjm-2gpv</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2025-04-18T19:35:17.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/traefik/traefik/v3] Traefik affected by Go HTTP Request Smuggling Vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-5423-jcjm-2gpv</id>
        <link href="https://github.com/advisories/GHSA-5423-jcjm-2gpv"/>
        <updated>2025-04-18T19:35:18.000Z</updated>
        <content type="html"><![CDATA[<h3 id="summary">Summary</h3>
<p>net/http: request smuggling through invalid chunked data: The net/http package accepts data in the chunked transfer encoding containing an invalid chunk-size line terminated by a bare LF. When used in conjunction with a server or proxy which incorrectly interprets a bare LF in a chunk extension as part of the extension, this could permit request smuggling. [CVE-2025-22871] Vendor Affected Components: Go: 1.23.x &lt; 1.23.8</p>
<p>More Details: <a href="https://nvd.nist.gov/vuln/detail/CVE-2025-22871">CVE-2025-22871</a></p>
<h2 id="patches">Patches</h2>
<ul>
<li><a href="https://github.com/traefik/traefik/releases/tag/v2.11.24">https://github.com/traefik/traefik/releases/tag/v2.11.24</a></li>
<li><a href="https://github.com/traefik/traefik/releases/tag/v3.3.6">https://github.com/traefik/traefik/releases/tag/v3.3.6</a></li>
<li><a href="https://github.com/traefik/traefik/releases/tag/v3.4.0-rc2">https://github.com/traefik/traefik/releases/tag/v3.4.0-rc2</a></li>
</ul>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/traefik/traefik/security/advisories/GHSA-5423-jcjm-2gpv">https://github.com/traefik/traefik/security/advisories/GHSA-5423-jcjm-2gpv</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2025-22871">https://nvd.nist.gov/vuln/detail/CVE-2025-22871</a></li>
<li><a href="https://github.com/traefik/traefik/releases/tag/v2.11.24">https://github.com/traefik/traefik/releases/tag/v2.11.24</a></li>
<li><a href="https://github.com/traefik/traefik/releases/tag/v3.3.6">https://github.com/traefik/traefik/releases/tag/v3.3.6</a></li>
<li><a href="https://github.com/traefik/traefik/releases/tag/v3.4.0-rc2">https://github.com/traefik/traefik/releases/tag/v3.4.0-rc2</a></li>
<li><a href="https://github.com/advisories/GHSA-5423-jcjm-2gpv">https://github.com/advisories/GHSA-5423-jcjm-2gpv</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-5423-jcjm-2gpv</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2025-04-18T19:35:17.000Z</published>
    </entry>
</feed>