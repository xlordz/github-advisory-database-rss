{
    "version": "https://jsonfeed.org/version/1",
    "title": "Security Advisory for Go modules",
    "home_page_url": "https://github.com/advisories?query=type%3Areviewed+ecosystem%3Ago",
    "feed_url": "https://azu.github.io/github-advisory-database-rss/go.json",
    "description": "Security Advisory for Go modules on GitHub",
    "items": [
        {
            "content_html": "<h3 id=\"summary\">Summary</h3>\n<p>A security vulnerability has been identified in GitHub CLI that could create or overwrite files in unintended directories when users download a malicious GitHub Actions workflow artifact through <code>gh run download</code>. </p>\n<h3 id=\"details\">Details</h3>\n<p>This vulnerability stems from a GitHub Actions workflow artifact named <code>..</code> when downloaded using <code>gh run download</code>.  The artifact name and <code>--dir</code> flag are used to determine the artifactâ€™s download path.  When the artifact is named <code>..</code>, the resulting files within the artifact are extracted exactly 1 directory higher than the specified <code>--dir</code> flag value.</p>\n<p>In <code>2.63.1</code>, <code>gh run download</code> will not download artifacts named <code>..</code> and <code>.</code> and instead exit with the following error message:</p>\n<pre><code>error downloading ..: would result in path traversal\n</code></pre>\n<h3 id=\"impact\">Impact</h3>\n<p>Successful exploitation heightens the risk of local path traversal attack vectors exactly 1 directory higher than intended.</p>\n<h3 id=\"remediation-and-mitigation\">Remediation and Mitigation</h3>\n<ol>\n<li>Upgrade <code>gh</code> to <code>2.63.1</code></li>\n<li>Implement additional validation to ensure artifact filenames do not contain potentially dangerous patterns, such as <code>..</code>, to prevent path traversal risks.</li>\n</ol>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/cli/cli/security/advisories/GHSA-2m9h-r57g-45pj\">https://github.com/cli/cli/security/advisories/GHSA-2m9h-r57g-45pj</a></li>\n<li><a href=\"https://github.com/cli/cli/commit/1136764c369aaf0cae4ec2ee09dc35d871076932\">https://github.com/cli/cli/commit/1136764c369aaf0cae4ec2ee09dc35d871076932</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-2m9h-r57g-45pj\">https://github.com/advisories/GHSA-2m9h-r57g-45pj</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-2m9h-r57g-45pj",
            "title": "[github.com/cli/cli/v2] Downloading malicious GitHub Actions workflow artifact results in path traversal vulnerability",
            "date_modified": "2024-12-04T15:32:46.000Z",
            "date_published": "2024-12-04T15:32:45.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-2m9h-r57g-45pj"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>An implementation bug in the Kolide Agent (known as <code>launcher</code>) allows for local privilege escalation to the SYSTEM user on Windows 10 and 11. Impacted versions include versions &gt;= 1.5.3 and the fix has been released in 1.12.3. </p>\n<p>The bug was introduced in version 1.5.3 when launcher started storing upgraded binaries in the ProgramData directory (#1510). This move to the new directory meant the launcher root directory inherited default permissions that are not as strict as the previous location. These incorrect default permissions in conjunction with an omitted SystemDrive environmental variable (when launcher starts osqueryd), allows a malicious actor with access to the local Windows device to successfully place an arbitrary DLL into the osqueryd process's search path. Under some circumstances, this DLL will be executed when osqueryd performs a WMI query. This combination of events could then allow the attacker to escalate their privileges to SYSTEM.</p>\n<p>This issue was found by Bryan Alexander of Atredis Partners and responsibly reported through the Kolide bug bounty program. Kolide made the appropriate changes and released a fix in version 1.12.3 of the <code>launcher</code> package.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/kolide/launcher/security/advisories/GHSA-66q9-2rvx-qfj5\">https://github.com/kolide/launcher/security/advisories/GHSA-66q9-2rvx-qfj5</a></li>\n<li><a href=\"https://github.com/kolide/launcher/pull/1510\">https://github.com/kolide/launcher/pull/1510</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-66q9-2rvx-qfj5\">https://github.com/advisories/GHSA-66q9-2rvx-qfj5</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-66q9-2rvx-qfj5",
            "title": "[github.com/kolide/launcher] Kolide Agent Privilege Escalation (Windows, Versions >= 1.5.3, < 1.12.3)",
            "date_modified": "2024-12-03T20:56:59.000Z",
            "date_published": "2024-12-03T20:56:58.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-66q9-2rvx-qfj5"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"summary\">Summary</h3>\n<p>The <code>/debug/querylogz</code> and <code>/debug/env</code> pages for <code>vtgate</code> and <code>vttablet</code> do not properly escape user input. The result is that queries executed by Vitess can write HTML into the monitoring page at will.</p>\n<h3 id=\"details\">Details</h3>\n<p>These pages are rendered using <code>text/template</code> instead of rendering with a proper HTML templating engine.</p>\n<h3 id=\"poc\">PoC</h3>\n<p>Execute any query where part of it is HTML markup, for example as part of a string. To make it easier to observe you might want to make sure the query takes a few seconds to complete, giving you time to refresh the status page. </p>\n<p>Example query that can trigger the issue:</p>\n<pre><code class=\"language-sql\">UPDATE users\nSET\n    email = CONCAT(\"&lt;img src=https://cataas.com/cat/says/oops&gt;\", users.idUser, \"@xxx\")\nWHERE\n    email NOT LIKE '%xxx%' AND email != \"demo@xxx.com\"\n</code></pre>\n<p>Result: </p>\n<p><img alt=\"image\" src=\"https://github.com/user-attachments/assets/c583816b-157c-474e-bbed-152b3dc0372f\"></p>\n<h3 id=\"impact\">Impact</h3>\n<p>Anyone looking at the Vitess status page is affected. This would normally be owners / administrators of the Vitess cluster.</p>\n<p>Anyone that can influence what text show up in queries can trigger it. This would normally be pretty much everybody interacting with a system that uses Vitess as a backend.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/vitessio/vitess/security/advisories/GHSA-7mwh-q3xm-qh6p\">https://github.com/vitessio/vitess/security/advisories/GHSA-7mwh-q3xm-qh6p</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-53257\">https://nvd.nist.gov/vuln/detail/CVE-2024-53257</a></li>\n<li><a href=\"https://github.com/vitessio/vitess/commit/2b71d1b5f8ca676beeab2875525003cd45096217\">https://github.com/vitessio/vitess/commit/2b71d1b5f8ca676beeab2875525003cd45096217</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-7mwh-q3xm-qh6p\">https://github.com/advisories/GHSA-7mwh-q3xm-qh6p</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-7mwh-q3xm-qh6p",
            "title": "[vitess.io/vitess] Vitess allows HTML injection in /debug/querylogz & /debug/env",
            "date_modified": "2024-12-03T18:43:35.000Z",
            "date_published": "2024-12-03T18:43:33.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-7mwh-q3xm-qh6p"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"summary\">Summary</h3>\n<p>The <code>/debug/querylogz</code> and <code>/debug/env</code> pages for <code>vtgate</code> and <code>vttablet</code> do not properly escape user input. The result is that queries executed by Vitess can write HTML into the monitoring page at will.</p>\n<h3 id=\"details\">Details</h3>\n<p>These pages are rendered using <code>text/template</code> instead of rendering with a proper HTML templating engine.</p>\n<h3 id=\"poc\">PoC</h3>\n<p>Execute any query where part of it is HTML markup, for example as part of a string. To make it easier to observe you might want to make sure the query takes a few seconds to complete, giving you time to refresh the status page. </p>\n<p>Example query that can trigger the issue:</p>\n<pre><code class=\"language-sql\">UPDATE users\nSET\n    email = CONCAT(\"&lt;img src=https://cataas.com/cat/says/oops&gt;\", users.idUser, \"@xxx\")\nWHERE\n    email NOT LIKE '%xxx%' AND email != \"demo@xxx.com\"\n</code></pre>\n<p>Result: </p>\n<p><img alt=\"image\" src=\"https://github.com/user-attachments/assets/c583816b-157c-474e-bbed-152b3dc0372f\"></p>\n<h3 id=\"impact\">Impact</h3>\n<p>Anyone looking at the Vitess status page is affected. This would normally be owners / administrators of the Vitess cluster.</p>\n<p>Anyone that can influence what text show up in queries can trigger it. This would normally be pretty much everybody interacting with a system that uses Vitess as a backend.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/vitessio/vitess/security/advisories/GHSA-7mwh-q3xm-qh6p\">https://github.com/vitessio/vitess/security/advisories/GHSA-7mwh-q3xm-qh6p</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-53257\">https://nvd.nist.gov/vuln/detail/CVE-2024-53257</a></li>\n<li><a href=\"https://github.com/vitessio/vitess/commit/2b71d1b5f8ca676beeab2875525003cd45096217\">https://github.com/vitessio/vitess/commit/2b71d1b5f8ca676beeab2875525003cd45096217</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-7mwh-q3xm-qh6p\">https://github.com/advisories/GHSA-7mwh-q3xm-qh6p</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-7mwh-q3xm-qh6p",
            "title": "[vitess.io/vitess] Vitess allows HTML injection in /debug/querylogz & /debug/env",
            "date_modified": "2024-12-03T18:43:35.000Z",
            "date_published": "2024-12-03T18:43:33.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-7mwh-q3xm-qh6p"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"summary\">Summary</h3>\n<p>The <code>/debug/querylogz</code> and <code>/debug/env</code> pages for <code>vtgate</code> and <code>vttablet</code> do not properly escape user input. The result is that queries executed by Vitess can write HTML into the monitoring page at will.</p>\n<h3 id=\"details\">Details</h3>\n<p>These pages are rendered using <code>text/template</code> instead of rendering with a proper HTML templating engine.</p>\n<h3 id=\"poc\">PoC</h3>\n<p>Execute any query where part of it is HTML markup, for example as part of a string. To make it easier to observe you might want to make sure the query takes a few seconds to complete, giving you time to refresh the status page. </p>\n<p>Example query that can trigger the issue:</p>\n<pre><code class=\"language-sql\">UPDATE users\nSET\n    email = CONCAT(\"&lt;img src=https://cataas.com/cat/says/oops&gt;\", users.idUser, \"@xxx\")\nWHERE\n    email NOT LIKE '%xxx%' AND email != \"demo@xxx.com\"\n</code></pre>\n<p>Result: </p>\n<p><img alt=\"image\" src=\"https://github.com/user-attachments/assets/c583816b-157c-474e-bbed-152b3dc0372f\"></p>\n<h3 id=\"impact\">Impact</h3>\n<p>Anyone looking at the Vitess status page is affected. This would normally be owners / administrators of the Vitess cluster.</p>\n<p>Anyone that can influence what text show up in queries can trigger it. This would normally be pretty much everybody interacting with a system that uses Vitess as a backend.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/vitessio/vitess/security/advisories/GHSA-7mwh-q3xm-qh6p\">https://github.com/vitessio/vitess/security/advisories/GHSA-7mwh-q3xm-qh6p</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-53257\">https://nvd.nist.gov/vuln/detail/CVE-2024-53257</a></li>\n<li><a href=\"https://github.com/vitessio/vitess/commit/2b71d1b5f8ca676beeab2875525003cd45096217\">https://github.com/vitessio/vitess/commit/2b71d1b5f8ca676beeab2875525003cd45096217</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-7mwh-q3xm-qh6p\">https://github.com/advisories/GHSA-7mwh-q3xm-qh6p</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-7mwh-q3xm-qh6p",
            "title": "[vitess.io/vitess] Vitess allows HTML injection in /debug/querylogz & /debug/env",
            "date_modified": "2024-12-03T18:43:35.000Z",
            "date_published": "2024-12-03T18:43:33.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-7mwh-q3xm-qh6p"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"summary\">Summary</h3>\n<p>When using <code>--auth-mode=client</code>, Archived Workflows can be retrieved with a fake or spoofed token via the GET Workflow endpoint: <code>/api/v1/workflows/{namespace}/{name}</code></p>\n<p>When using <code>--auth-mode=sso</code>,  all Archived Workflows can be retrieved with a valid token via the GET Workflow endpoint: <code>/api/v1/workflows/{namespace}/{name}</code></p>\n<h3 id=\"details\">Details</h3>\n<p>No authentication is performed by the Server itself on <code>client</code> tokens[^1]. Authentication &amp; authorization is instead delegated to the k8s API server.\nHowever, the <a href=\"https://github.com/argoproj/argo-workflows/blob/52cca7e079a4f6d76db303ac550b1876e51b3865/server/workflowarchive/archived_workflow_server.go\">Workflow Archive</a> does not interact with k8s, and so any token that <a href=\"https://github.com/argoproj/argo-workflows/blob/52cca7e079a4f6d76db303ac550b1876e51b3865/server/auth/mode.go#L37\"><em>looks</em></a> <a href=\"https://github.com/argoproj/argo-workflows/blob/52cca7e079a4f6d76db303ac550b1876e51b3865/server/auth/gatekeeper.go#L185\">valid</a> will be considered authenticated, even if it is not a k8s token or even if the token has no RBAC for Argo. To handle the lack of pass-through k8s authN/authZ, the Workflow Archive specifically does <a href=\"https://github.com/argoproj/argo-workflows/blob/52cca7e079a4f6d76db303ac550b1876e51b3865/server/workflowarchive/archived_workflow_server.go#L50\">the equivalent of a <code>kubectl auth can-i</code></a> check for respective methods.</p>\n<p>In #12736 / v3.5.7 and #13021 / v3.5.8, the auth check was accidentally removed on the GET Workflow endpoint's fallback to archived workflows on <a href=\"https://github.com/argoproj/argo-workflows/pull/13021/files#diff-a5b255abaceddc9cc20bf6da6ae92c3a5d3605d94366af503ed754c079a1171aL668-R715\">these lines</a>, allowing archived workflows to be retrieved with a fake token.</p>\n<h3 id=\"poc\">PoC</h3>\n<h4 id=\"configuration\">Configuration</h4>\n<p>Controller <code>ConfigMap</code>:</p>\n<pre><code class=\"language-yaml\">  config: |\n    persistence:\n      archive: true\n      postgresql:\n        database: argoworkflows\n        host: db-host\n        passwordSecret:\n          key: postgresPassword\n          name: argo-wf-postgres-credentials\n        port: 5432\n        tableName: argo_workflows\n        userNameSecret:\n          key: username\n          name: argo-wf-postgres-credentials\n</code></pre>\n<p>Server: <code>--auth-mode=client</code></p>\n<h4 id=\"reproduction\">Reproduction</h4>\n<p>Visit a completed, archived workflow URL with an invalid authorization token, this results in the workflow being displayed.</p>\n<p>For example, directly query the API and retrieve the workflow data (where <code>Bearer thisisatest</code> is not a valid token):</p>\n<pre><code class=\"language-sh\">curl -H 'Authorization: Bearer thisisatest' -v http://localhost:8000/api/v1/workflows/argo/hello-world-7tv5g\n</code></pre>\n<details><summary>Results in a returned workflow:</summary>\n\n<pre><code>* Host localhost:8000 was resolved.\n* IPv6: ::1\n* IPv4: 127.0.0.1\n*   Trying [::1]:8000...\n* Connected to localhost (::1) port 8000\n&gt; GET /api/v1/workflows/argo/hello-world-7tv5g HTTP/1.1\n&gt; Host: localhost:8000\n&gt; User-Agent: curl/8.7.1\n&gt; Accept: */*\n&gt; Authorization: Bearer thisisatest\n&gt;\n* Request completely sent off\n&lt; HTTP/1.1 200 OK\n&lt; Content-Type: application/json\n&lt; Grpc-Metadata-Content-Type: application/grpc\n&lt; X-Ratelimit-Limit: 1000\n&lt; X-Ratelimit-Remaining: 999\n&lt; X-Ratelimit-Reset: Mon, 19 Aug 2024 20:44:27 UTC\n&lt; Date: Mon, 19 Aug 2024 20:44:26 GMT\n&lt; Transfer-Encoding: chunked\n&lt;\n* Connection #0 to host localhost left intact\n{\n    \"metadata\": {\n        \"name\": \"hello-world-7tv5g\",\n        \"generateName\": \"hello-world-\",\n        \"namespace\": \"argo\",\n        \"uid\": \"e5868ab1-f820-4a9e-9407-162346a4ccb4\",\n        \"resourceVersion\": \"9982\",\n        \"generation\": 3,\n        \"creationTimestamp\": \"2024-08-13T23:59:20Z\",\n        \"labels\": {\n            \"workflows.argoproj.io/archive-strategy\": \"false\",\n            \"workflows.argoproj.io/completed\": \"true\",\n            \"workflows.argoproj.io/phase\": \"Succeeded\",\n            \"workflows.argoproj.io/workflow-archiving-status\": \"Persisted\"\n        },\n        \"annotations\": {\n            \"workflows.argoproj.io/description\": \"This is a simple hello world example.\\n\",\n            \"workflows.argoproj.io/pod-name-format\": \"v2\"\n        },\n        \"managedFields\": [\n            {\n                \"manager\": \"argo\",\n                \"operation\": \"Update\",\n                \"apiVersion\": \"argoproj.io/v1alpha1\",\n                \"time\": \"2024-08-13T23:59:20Z\",\n                \"fieldsType\": \"FieldsV1\",\n                \"fieldsV1\": {\n                    \"f:metadata\": {\n                        \"f:annotations\": {\n                            \".\": {},\n                            \"f:workflows.argoproj.io/description\": {}\n                        },\n                        \"f:generateName\": {},\n                        \"f:labels\": {\n                            \".\": {},\n                            \"f:workflows.argoproj.io/archive-strategy\": {}\n                        }\n                    },\n                    \"f:spec\": {}\n                }\n            },\n            {\n                \"manager\": \"workflow-controller\",\n                \"operation\": \"Update\",\n                \"apiVersion\": \"argoproj.io/v1alpha1\",\n                \"time\": \"2024-08-13T23:59:30Z\",\n                \"fieldsType\": \"FieldsV1\",\n                \"fieldsV1\": {\n                    \"f:metadata\": {\n                        \"f:annotations\": {\n                            \"f:workflows.argoproj.io/pod-name-format\": {}\n                        },\n                        \"f:labels\": {\n                            \"f:workflows.argoproj.io/completed\": {},\n                            \"f:workflows.argoproj.io/phase\": {},\n                            \"f:workflows.argoproj.io/workflow-archiving-status\": {}\n                        }\n                    },\n                    \"f:status\": {}\n                }\n            }\n        ]\n    },\n    \"spec\": {\n        \"templates\": [\n            {\n                \"name\": \"hello-world\",\n                \"inputs\": {},\n                \"outputs\": {},\n                \"metadata\": {},\n                \"container\": {\n                    \"name\": \"\",\n                    \"image\": \"busybox\",\n                    \"command\": [\n                        \"echo\"\n                    ],\n                    \"args\": [\n                        \"hello world\"\n                    ],\n                    \"resources\": {}\n                }\n            }\n        ],\n        \"entrypoint\": \"hello-world\",\n        \"arguments\": {},\n        \"serviceAccountName\": \"argo-workflow\"\n    },\n    \"status\": {\n        \"phase\": \"Succeeded\",\n        \"startedAt\": \"2024-08-13T23:59:20Z\",\n        \"finishedAt\": \"2024-08-13T23:59:30Z\",\n        \"progress\": \"1/1\",\n        \"nodes\": {\n            \"hello-world-7tv5g\": {\n                \"id\": \"hello-world-7tv5g\",\n                \"name\": \"hello-world-7tv5g\",\n                \"displayName\": \"hello-world-7tv5g\",\n                \"type\": \"Pod\",\n                \"templateName\": \"hello-world\",\n                \"templateScope\": \"local/hello-world-7tv5g\",\n                \"phase\": \"Succeeded\",\n                \"startedAt\": \"2024-08-13T23:59:20Z\",\n                \"finishedAt\": \"2024-08-13T23:59:24Z\",\n                \"progress\": \"1/1\",\n                \"resourcesDuration\": {\n                    \"cpu\": 0,\n                    \"memory\": 3\n                },\n                \"outputs\": {\n                    \"exitCode\": \"0\"\n                },\n                \"hostNodeName\": \"kind-control-plane\"\n            }\n        },\n        \"conditions\": [\n            {\n                \"type\": \"PodRunning\",\n                \"status\": \"False\"\n            },\n            {\n                \"type\": \"Completed\",\n                \"status\": \"True\"\n            }\n        ],\n        \"resourcesDuration\": {\n            \"cpu\": 0,\n            \"memory\": 3\n        },\n        \"artifactRepositoryRef\": {\n            \"default\": true,\n            \"artifactRepository\": {}\n        },\n        \"artifactGCStatus\": {\n            \"notSpecified\": true\n        },\n        \"taskResultsCompletionStatus\": {\n            \"hello-world-7tv5g\": true\n        }\n    }\n}%\n</code></pre>\n</details>\n\n\n<h3 id=\"impact\">Impact</h3>\n<p>Users of the Server with <code>--auth-mode=client</code> and with <code>persistence.archive: true</code> are vulnerable to having Archived Workflows retrieved with a fake or spoofed token.</p>\n<p>Users of the Server with <code>--auth-mode=sso</code> and with <code>persistence.archive: true</code> are vulnerable to users being able to access workflows they could not access before archiving.</p>\n<p>[^1]: <code>sso</code> tokens, on the other hand, are <a href=\"https://github.com/argoproj/argo-workflows/blob/52cca7e079a4f6d76db303ac550b1876e51b3865/server/auth/gatekeeper.go#L207\">immediately \"authorized\"</a>. The naming in the codebase is a bit confusing; it would be more appropriate to say \"authenticated\" in this case, as authorization is via SSO RBAC / SA matching / k8s API server. In this same section of the codebase, the <code>client</code> tokens are not authenticated, they are only validated. Authentication and authorization is done simultaneously for <code>client</code> tokens via the k8s API server.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/argoproj/argo-workflows/security/advisories/GHSA-h36c-m3rf-34h9\">https://github.com/argoproj/argo-workflows/security/advisories/GHSA-h36c-m3rf-34h9</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-53862\">https://nvd.nist.gov/vuln/detail/CVE-2024-53862</a></li>\n<li><a href=\"https://github.com/argoproj/argo-workflows/pull/13021/files#diff-a5b255abaceddc9cc20bf6da6ae92c3a5d3605d94366af503ed754c079a1171aL668-R715\">https://github.com/argoproj/argo-workflows/pull/13021/files#diff-a5b255abaceddc9cc20bf6da6ae92c3a5d3605d94366af503ed754c079a1171aL668-R715</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-h36c-m3rf-34h9\">https://github.com/advisories/GHSA-h36c-m3rf-34h9</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-h36c-m3rf-34h9",
            "title": "[github.com/argoproj/argo-workflows/v3] Access to Archived Argo Workflows with Fake Token in `client` mode",
            "date_modified": "2024-12-02T22:17:56.000Z",
            "date_published": "2024-12-02T22:17:55.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-h36c-m3rf-34h9"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"summary\">Summary</h3>\n<p>When using <code>--auth-mode=client</code>, Archived Workflows can be retrieved with a fake or spoofed token via the GET Workflow endpoint: <code>/api/v1/workflows/{namespace}/{name}</code></p>\n<p>When using <code>--auth-mode=sso</code>,  all Archived Workflows can be retrieved with a valid token via the GET Workflow endpoint: <code>/api/v1/workflows/{namespace}/{name}</code></p>\n<h3 id=\"details\">Details</h3>\n<p>No authentication is performed by the Server itself on <code>client</code> tokens[^1]. Authentication &amp; authorization is instead delegated to the k8s API server.\nHowever, the <a href=\"https://github.com/argoproj/argo-workflows/blob/52cca7e079a4f6d76db303ac550b1876e51b3865/server/workflowarchive/archived_workflow_server.go\">Workflow Archive</a> does not interact with k8s, and so any token that <a href=\"https://github.com/argoproj/argo-workflows/blob/52cca7e079a4f6d76db303ac550b1876e51b3865/server/auth/mode.go#L37\"><em>looks</em></a> <a href=\"https://github.com/argoproj/argo-workflows/blob/52cca7e079a4f6d76db303ac550b1876e51b3865/server/auth/gatekeeper.go#L185\">valid</a> will be considered authenticated, even if it is not a k8s token or even if the token has no RBAC for Argo. To handle the lack of pass-through k8s authN/authZ, the Workflow Archive specifically does <a href=\"https://github.com/argoproj/argo-workflows/blob/52cca7e079a4f6d76db303ac550b1876e51b3865/server/workflowarchive/archived_workflow_server.go#L50\">the equivalent of a <code>kubectl auth can-i</code></a> check for respective methods.</p>\n<p>In #12736 / v3.5.7 and #13021 / v3.5.8, the auth check was accidentally removed on the GET Workflow endpoint's fallback to archived workflows on <a href=\"https://github.com/argoproj/argo-workflows/pull/13021/files#diff-a5b255abaceddc9cc20bf6da6ae92c3a5d3605d94366af503ed754c079a1171aL668-R715\">these lines</a>, allowing archived workflows to be retrieved with a fake token.</p>\n<h3 id=\"poc\">PoC</h3>\n<h4 id=\"configuration\">Configuration</h4>\n<p>Controller <code>ConfigMap</code>:</p>\n<pre><code class=\"language-yaml\">  config: |\n    persistence:\n      archive: true\n      postgresql:\n        database: argoworkflows\n        host: db-host\n        passwordSecret:\n          key: postgresPassword\n          name: argo-wf-postgres-credentials\n        port: 5432\n        tableName: argo_workflows\n        userNameSecret:\n          key: username\n          name: argo-wf-postgres-credentials\n</code></pre>\n<p>Server: <code>--auth-mode=client</code></p>\n<h4 id=\"reproduction\">Reproduction</h4>\n<p>Visit a completed, archived workflow URL with an invalid authorization token, this results in the workflow being displayed.</p>\n<p>For example, directly query the API and retrieve the workflow data (where <code>Bearer thisisatest</code> is not a valid token):</p>\n<pre><code class=\"language-sh\">curl -H 'Authorization: Bearer thisisatest' -v http://localhost:8000/api/v1/workflows/argo/hello-world-7tv5g\n</code></pre>\n<details><summary>Results in a returned workflow:</summary>\n\n<pre><code>* Host localhost:8000 was resolved.\n* IPv6: ::1\n* IPv4: 127.0.0.1\n*   Trying [::1]:8000...\n* Connected to localhost (::1) port 8000\n&gt; GET /api/v1/workflows/argo/hello-world-7tv5g HTTP/1.1\n&gt; Host: localhost:8000\n&gt; User-Agent: curl/8.7.1\n&gt; Accept: */*\n&gt; Authorization: Bearer thisisatest\n&gt;\n* Request completely sent off\n&lt; HTTP/1.1 200 OK\n&lt; Content-Type: application/json\n&lt; Grpc-Metadata-Content-Type: application/grpc\n&lt; X-Ratelimit-Limit: 1000\n&lt; X-Ratelimit-Remaining: 999\n&lt; X-Ratelimit-Reset: Mon, 19 Aug 2024 20:44:27 UTC\n&lt; Date: Mon, 19 Aug 2024 20:44:26 GMT\n&lt; Transfer-Encoding: chunked\n&lt;\n* Connection #0 to host localhost left intact\n{\n    \"metadata\": {\n        \"name\": \"hello-world-7tv5g\",\n        \"generateName\": \"hello-world-\",\n        \"namespace\": \"argo\",\n        \"uid\": \"e5868ab1-f820-4a9e-9407-162346a4ccb4\",\n        \"resourceVersion\": \"9982\",\n        \"generation\": 3,\n        \"creationTimestamp\": \"2024-08-13T23:59:20Z\",\n        \"labels\": {\n            \"workflows.argoproj.io/archive-strategy\": \"false\",\n            \"workflows.argoproj.io/completed\": \"true\",\n            \"workflows.argoproj.io/phase\": \"Succeeded\",\n            \"workflows.argoproj.io/workflow-archiving-status\": \"Persisted\"\n        },\n        \"annotations\": {\n            \"workflows.argoproj.io/description\": \"This is a simple hello world example.\\n\",\n            \"workflows.argoproj.io/pod-name-format\": \"v2\"\n        },\n        \"managedFields\": [\n            {\n                \"manager\": \"argo\",\n                \"operation\": \"Update\",\n                \"apiVersion\": \"argoproj.io/v1alpha1\",\n                \"time\": \"2024-08-13T23:59:20Z\",\n                \"fieldsType\": \"FieldsV1\",\n                \"fieldsV1\": {\n                    \"f:metadata\": {\n                        \"f:annotations\": {\n                            \".\": {},\n                            \"f:workflows.argoproj.io/description\": {}\n                        },\n                        \"f:generateName\": {},\n                        \"f:labels\": {\n                            \".\": {},\n                            \"f:workflows.argoproj.io/archive-strategy\": {}\n                        }\n                    },\n                    \"f:spec\": {}\n                }\n            },\n            {\n                \"manager\": \"workflow-controller\",\n                \"operation\": \"Update\",\n                \"apiVersion\": \"argoproj.io/v1alpha1\",\n                \"time\": \"2024-08-13T23:59:30Z\",\n                \"fieldsType\": \"FieldsV1\",\n                \"fieldsV1\": {\n                    \"f:metadata\": {\n                        \"f:annotations\": {\n                            \"f:workflows.argoproj.io/pod-name-format\": {}\n                        },\n                        \"f:labels\": {\n                            \"f:workflows.argoproj.io/completed\": {},\n                            \"f:workflows.argoproj.io/phase\": {},\n                            \"f:workflows.argoproj.io/workflow-archiving-status\": {}\n                        }\n                    },\n                    \"f:status\": {}\n                }\n            }\n        ]\n    },\n    \"spec\": {\n        \"templates\": [\n            {\n                \"name\": \"hello-world\",\n                \"inputs\": {},\n                \"outputs\": {},\n                \"metadata\": {},\n                \"container\": {\n                    \"name\": \"\",\n                    \"image\": \"busybox\",\n                    \"command\": [\n                        \"echo\"\n                    ],\n                    \"args\": [\n                        \"hello world\"\n                    ],\n                    \"resources\": {}\n                }\n            }\n        ],\n        \"entrypoint\": \"hello-world\",\n        \"arguments\": {},\n        \"serviceAccountName\": \"argo-workflow\"\n    },\n    \"status\": {\n        \"phase\": \"Succeeded\",\n        \"startedAt\": \"2024-08-13T23:59:20Z\",\n        \"finishedAt\": \"2024-08-13T23:59:30Z\",\n        \"progress\": \"1/1\",\n        \"nodes\": {\n            \"hello-world-7tv5g\": {\n                \"id\": \"hello-world-7tv5g\",\n                \"name\": \"hello-world-7tv5g\",\n                \"displayName\": \"hello-world-7tv5g\",\n                \"type\": \"Pod\",\n                \"templateName\": \"hello-world\",\n                \"templateScope\": \"local/hello-world-7tv5g\",\n                \"phase\": \"Succeeded\",\n                \"startedAt\": \"2024-08-13T23:59:20Z\",\n                \"finishedAt\": \"2024-08-13T23:59:24Z\",\n                \"progress\": \"1/1\",\n                \"resourcesDuration\": {\n                    \"cpu\": 0,\n                    \"memory\": 3\n                },\n                \"outputs\": {\n                    \"exitCode\": \"0\"\n                },\n                \"hostNodeName\": \"kind-control-plane\"\n            }\n        },\n        \"conditions\": [\n            {\n                \"type\": \"PodRunning\",\n                \"status\": \"False\"\n            },\n            {\n                \"type\": \"Completed\",\n                \"status\": \"True\"\n            }\n        ],\n        \"resourcesDuration\": {\n            \"cpu\": 0,\n            \"memory\": 3\n        },\n        \"artifactRepositoryRef\": {\n            \"default\": true,\n            \"artifactRepository\": {}\n        },\n        \"artifactGCStatus\": {\n            \"notSpecified\": true\n        },\n        \"taskResultsCompletionStatus\": {\n            \"hello-world-7tv5g\": true\n        }\n    }\n}%\n</code></pre>\n</details>\n\n\n<h3 id=\"impact\">Impact</h3>\n<p>Users of the Server with <code>--auth-mode=client</code> and with <code>persistence.archive: true</code> are vulnerable to having Archived Workflows retrieved with a fake or spoofed token.</p>\n<p>Users of the Server with <code>--auth-mode=sso</code> and with <code>persistence.archive: true</code> are vulnerable to users being able to access workflows they could not access before archiving.</p>\n<p>[^1]: <code>sso</code> tokens, on the other hand, are <a href=\"https://github.com/argoproj/argo-workflows/blob/52cca7e079a4f6d76db303ac550b1876e51b3865/server/auth/gatekeeper.go#L207\">immediately \"authorized\"</a>. The naming in the codebase is a bit confusing; it would be more appropriate to say \"authenticated\" in this case, as authorization is via SSO RBAC / SA matching / k8s API server. In this same section of the codebase, the <code>client</code> tokens are not authenticated, they are only validated. Authentication and authorization is done simultaneously for <code>client</code> tokens via the k8s API server.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/argoproj/argo-workflows/security/advisories/GHSA-h36c-m3rf-34h9\">https://github.com/argoproj/argo-workflows/security/advisories/GHSA-h36c-m3rf-34h9</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-53862\">https://nvd.nist.gov/vuln/detail/CVE-2024-53862</a></li>\n<li><a href=\"https://github.com/argoproj/argo-workflows/pull/13021/files#diff-a5b255abaceddc9cc20bf6da6ae92c3a5d3605d94366af503ed754c079a1171aL668-R715\">https://github.com/argoproj/argo-workflows/pull/13021/files#diff-a5b255abaceddc9cc20bf6da6ae92c3a5d3605d94366af503ed754c079a1171aL668-R715</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-h36c-m3rf-34h9\">https://github.com/advisories/GHSA-h36c-m3rf-34h9</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-h36c-m3rf-34h9",
            "title": "[github.com/argoproj/argo-workflows/v3] Access to Archived Argo Workflows with Fake Token in `client` mode",
            "date_modified": "2024-12-02T22:17:56.000Z",
            "date_published": "2024-12-02T22:17:55.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-h36c-m3rf-34h9"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"summary\">Summary:</h3>\n<p>A open redirect vulnerability exists in the loading endpoint, allowing attackers to redirect authenticated users to arbitrary external URLs via the \"next\" parameter.</p>\n<h3 id=\"details\">Details:</h3>\n<p>The loading endpoint accepts and uses an unvalidated \"next\" parameter for redirects:</p>\n<h3 id=\"poc\">PoC:</h3>\n<p>Visit: <code>/loading?next=https://google.com</code> while authenticated. The page will redirect to google.com.</p>\n<h3 id=\"impact\">Impact:</h3>\n<p>This vulnerability could be used in phishing attacks by redirecting users from a legitimate application URL to malicious sites.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/bunkerity/bunkerweb/security/advisories/GHSA-q9rr-h3hx-m87g\">https://github.com/bunkerity/bunkerweb/security/advisories/GHSA-q9rr-h3hx-m87g</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-53264\">https://nvd.nist.gov/vuln/detail/CVE-2024-53264</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-q9rr-h3hx-m87g\">https://github.com/advisories/GHSA-q9rr-h3hx-m87g</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-q9rr-h3hx-m87g",
            "title": "[github.com/bunkerity/bunkerweb] BunkerWeb has Open Redirect Vulnerability in Loading Page",
            "date_modified": "2024-12-02T22:17:20.000Z",
            "date_published": "2024-12-02T22:17:18.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-q9rr-h3hx-m87g"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>moby v25.0.3 has a Race Condition vulnerability in the streamformatter package which can be used to trigger multiple concurrent write operations resulting in data corruption or application crashes.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-36623\">https://nvd.nist.gov/vuln/detail/CVE-2024-36623</a></li>\n<li><a href=\"https://github.com/moby/moby/commit/5689dabfb357b673abdb4391eef426f297d7d1bb\">https://github.com/moby/moby/commit/5689dabfb357b673abdb4391eef426f297d7d1bb</a></li>\n<li><a href=\"https://gist.github.com/1047524396/c192c0159a19bf58a4373b696467dc29\">https://gist.github.com/1047524396/c192c0159a19bf58a4373b696467dc29</a></li>\n<li><a href=\"https://github.com/moby/moby/blob/v25.0.3/pkg/streamformatter/streamformatter.go#L115\">https://github.com/moby/moby/blob/v25.0.3/pkg/streamformatter/streamformatter.go#L115</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-gh5c-3h97-2f3q\">https://github.com/advisories/GHSA-gh5c-3h97-2f3q</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-gh5c-3h97-2f3q",
            "title": "[github.com/moby/moby] Moby Race Condition vulnerability",
            "date_modified": "2024-12-02T21:38:27.000Z",
            "date_published": "2024-11-29T18:34:03.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-gh5c-3h97-2f3q"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>moby v25.0.5 is affected by a Race Condition in builder/builder-next/adapters/snapshot/layer.go. The vulnerability could be used to trigger concurrent builds that call the EnsureLayer function resulting in resource leaks/exhaustion.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-36621\">https://nvd.nist.gov/vuln/detail/CVE-2024-36621</a></li>\n<li><a href=\"https://github.com/moby/moby/commit/37545cc644344dcb576cba67eb7b6f51a463d31e\">https://github.com/moby/moby/commit/37545cc644344dcb576cba67eb7b6f51a463d31e</a></li>\n<li><a href=\"https://gist.github.com/1047524396/5d44459edab5fafcdf86b43909b81135\">https://gist.github.com/1047524396/5d44459edab5fafcdf86b43909b81135</a></li>\n<li><a href=\"https://github.com/moby/moby/blob/v25.0.5/builder/builder-next/adapters/snapshot/layer.go#L24\">https://github.com/moby/moby/blob/v25.0.5/builder/builder-next/adapters/snapshot/layer.go#L24</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-2mj3-vfvx-fc43\">https://github.com/advisories/GHSA-2mj3-vfvx-fc43</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-2mj3-vfvx-fc43",
            "title": "[github.com/moby/moby] Moby Race Condition vulnerability",
            "date_modified": "2024-12-02T21:38:02.000Z",
            "date_published": "2024-11-29T18:34:03.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-2mj3-vfvx-fc43"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>One powerful feature of SFTPGo is the ability to have the EventManager execute scripts or run applications in response to certain events.\nThis feature is very common in all software similar to SFTPGo and is generally unrestricted. </p>\n<p>However, any SFTPGo administrator with permission to run a script has access to the underlying OS/container with the same permissions as the user running SFTPGo, so they can access the database and server configurations.</p>\n<p>This is unexpected for some SFTPGo administrators who think that there is a clear distinction between accessing the system shell and accessing the SFTPGo WebAdmin UI.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>To avoid this confusion, running system commands is now disabled by default, and an allow list has been added so that system administrators configuring SFTPGo must explicitly define which commands are allowed to be configured from the WebAdmin UI.</p>\n<p><a href=\"https://github.com/drakkan/sftpgo/commit/88b1850b5806eee81150873d4e565144b21021fb\">https://github.com/drakkan/sftpgo/commit/88b1850b5806eee81150873d4e565144b21021fb</a>\n<a href=\"https://github.com/drakkan/sftpgo/commit/b524da11e9466d05fe03304713ee1c61bb276ec4\">https://github.com/drakkan/sftpgo/commit/b524da11e9466d05fe03304713ee1c61bb276ec4</a></p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>Allow EventManager to be used only by SFTPGo administrators who also have shell access.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/drakkan/sftpgo/security/advisories/GHSA-49cc-xrjf-9qf7\">https://github.com/drakkan/sftpgo/security/advisories/GHSA-49cc-xrjf-9qf7</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-52309\">https://nvd.nist.gov/vuln/detail/CVE-2024-52309</a></li>\n<li><a href=\"https://github.com/drakkan/sftpgo/commit/88b1850b5806eee81150873d4e565144b21021fb\">https://github.com/drakkan/sftpgo/commit/88b1850b5806eee81150873d4e565144b21021fb</a></li>\n<li><a href=\"https://github.com/drakkan/sftpgo/commit/b524da11e9466d05fe03304713ee1c61bb276ec4\">https://github.com/drakkan/sftpgo/commit/b524da11e9466d05fe03304713ee1c61bb276ec4</a></li>\n<li><a href=\"https://pkg.go.dev/vuln/GO-2024-3283\">https://pkg.go.dev/vuln/GO-2024-3283</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-49cc-xrjf-9qf7\">https://github.com/advisories/GHSA-49cc-xrjf-9qf7</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-49cc-xrjf-9qf7",
            "title": "[sftpgo] SFTPGo allows administrators to restrict command execution from the EventManager",
            "date_modified": "2024-12-02T18:04:01.000Z",
            "date_published": "2024-11-21T23:19:07.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-49cc-xrjf-9qf7"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>An off-path attacker can inject an ICMP Packet Too Large packet. Since affected quic-go versions used <code>IP_PMTUDISC_DO</code>, the kernel would then return a \"message too large\" error on <code>sendmsg</code>, i.e. when quic-go attempts to send a packet that exceeds the MTU claimed in that ICMP packet.</p>\n<p>By setting this value to smaller than 1200 bytes (the minimum MTU for QUIC), the attacker can disrupt a QUIC connection. Crucially, this can be done after completion of the handshake, thereby circumventing any TCP fallback that might be implemented on the application layer (for example, many browsers fall back to HTTP over TCP if they're unable to establish a QUIC connection).</p>\n<p>As far as I understand, the kernel tracks the MTU per 4-tuple, so the attacker needs to at least know the client's IP and port tuple to mount an attack (assuming that it knows the server's IP and port).</p>\n<h3 id=\"patches\">Patches</h3>\n<p>The fix is easy: Use <code>IP_PMTUDISC_PROBE</code> instead of <code>IP_PMTUDISC_DO</code>. This socket option only sets the DF bit, but disables the kernel's MTU tracking.</p>\n<p><em>Has the problem been patched? What versions should users upgrade to?</em></p>\n<p>Fixed in <a href=\"https://github.com/quic-go/quic-go/pull/4729\">https://github.com/quic-go/quic-go/pull/4729</a>\nReleased in <a href=\"https://github.com/quic-go/quic-go/releases/tag/v0.48.2\">https://github.com/quic-go/quic-go/releases/tag/v0.48.2</a></p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p><em>Is there a way for users to fix or remediate the vulnerability without upgrading?</em></p>\n<p>Use iptables to drop ICMP Unreachable packets.</p>\n<h3 id=\"references\">References</h3>\n<p><em>Are there any links users can visit to find out more?</em></p>\n<p>This bug was discovered while doing research for my new IETF draft on IP fragmentation: <a href=\"https://datatracker.ietf.org/doc/draft-seemann-tsvwg-udp-fragmentation/\">https://datatracker.ietf.org/doc/draft-seemann-tsvwg-udp-fragmentation/</a></p>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/quic-go/quic-go/security/advisories/GHSA-px8v-pp82-rcvr\">https://github.com/quic-go/quic-go/security/advisories/GHSA-px8v-pp82-rcvr</a></li>\n<li><a href=\"https://github.com/quic-go/quic-go/pull/4729\">https://github.com/quic-go/quic-go/pull/4729</a></li>\n<li><a href=\"https://github.com/quic-go/quic-go/commit/ca31dd355cbe5fc6c5807992d9d1149c66c96a50\">https://github.com/quic-go/quic-go/commit/ca31dd355cbe5fc6c5807992d9d1149c66c96a50</a></li>\n<li><a href=\"https://github.com/quic-go/quic-go/releases/tag/v0.48.2\">https://github.com/quic-go/quic-go/releases/tag/v0.48.2</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-53259\">https://nvd.nist.gov/vuln/detail/CVE-2024-53259</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-px8v-pp82-rcvr\">https://github.com/advisories/GHSA-px8v-pp82-rcvr</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-px8v-pp82-rcvr",
            "title": "[github.com/quic-go/quic-go] quic-go affected by an ICMP Packet Too Large Injection Attack on Linux",
            "date_modified": "2024-12-02T19:46:13.000Z",
            "date_published": "2024-12-02T17:28:14.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-px8v-pp82-rcvr"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>The OpenID Connect implementation, in the affected SFTPGo versions, allows authenticated users to brute force session cookies and thereby gain access to other users' data, since the cookies are generated predictably using the <a href=\"https://github.com/rs/xid\">xid</a> library and are therefore unique but not cryptographically secure.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>This issue was fixed in version v2.6.4, where cookies are opaque and cryptographically secure strings.</p>\n<h3 id=\"references\">References</h3>\n<p><a href=\"https://github.com/drakkan/sftpgo/commit/f30a9a2095bf90c0661b04fe038e3b7efc788bc6\">https://github.com/drakkan/sftpgo/commit/f30a9a2095bf90c0661b04fe038e3b7efc788bc6</a></p>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/drakkan/sftpgo/security/advisories/GHSA-6943-qr24-82vx\">https://github.com/drakkan/sftpgo/security/advisories/GHSA-6943-qr24-82vx</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-52801\">https://nvd.nist.gov/vuln/detail/CVE-2024-52801</a></li>\n<li><a href=\"https://github.com/drakkan/sftpgo/commit/f30a9a2095bf90c0661b04fe038e3b7efc788bc6\">https://github.com/drakkan/sftpgo/commit/f30a9a2095bf90c0661b04fe038e3b7efc788bc6</a></li>\n<li><a href=\"https://github.com/rs/xid\">https://github.com/rs/xid</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-6943-qr24-82vx\">https://github.com/advisories/GHSA-6943-qr24-82vx</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-6943-qr24-82vx",
            "title": "[github.com/drakkan/sftpgo/v2] sftpgo vulnerable to brute force takeover of OpenID Connect session cookies",
            "date_modified": "2024-12-02T17:16:35.000Z",
            "date_published": "2024-12-02T17:16:34.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-6943-qr24-82vx"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>There is a vulnerability in Traefik that allows the client to provide the <code>X-Forwarded-Prefix</code> header from an untrusted source.</p>\n<h3 id=\"patches\">Patches</h3>\n<ul>\n<li><a href=\"https://github.com/traefik/traefik/releases/tag/v2.11.14\">https://github.com/traefik/traefik/releases/tag/v2.11.14</a></li>\n<li><a href=\"https://github.com/traefik/traefik/releases/tag/v3.2.1\">https://github.com/traefik/traefik/releases/tag/v3.2.1</a></li>\n</ul>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>No workaround.</p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any questions or comments about this advisory, please <a href=\"https://github.com/traefik/traefik/issues\">open an issue</a>.</p>\n<details>\n<summary>Original Description</summary>\n### Summary\nThe previously reported open redirect ([GHSA-6qq8-5wq3-86rp](https://github.com/traefik/traefik/security/advisories/GHSA-6qq8-5wq3-86rp)) is not fixed correctly. The safePrefix function can be tricked to return an absolute URL.\n\n\n\n<h3 id=\"details\">Details</h3>\n<p>The Traefik API <a href=\"https://github.com/traefik/traefik/blob/master/pkg/api/dashboard/dashboard.go\">dashboard component</a> tries to validate that the value of the header X-Forwarded-Prefix is a site relative path:</p>\n<pre><code class=\"language-go\">http.Redirect(resp, req, safePrefix(req)+\"/dashboard/\", http.StatusFound)\n</code></pre>\n<pre><code class=\"language-go\">func safePrefix(req *http.Request) string {\n    prefix := req.Header.Get(\"X-Forwarded-Prefix\")\n    if prefix == \"\" {\n        return \"\"\n    }\n\n    parse, err := url.Parse(prefix)\n    if err != nil {\n        return \"\"\n    }\n\n    return parse.Path\n}\n</code></pre>\n<h3 id=\"poc\">PoC</h3>\n<p>An attacker can bypass this by sending the following payload:</p>\n<pre><code class=\"language-bash\">curl -v 'http://traefik.localhost' -H 'X-Forwarded-Prefix: %0d//a.com'\n[...]\n&gt; HTTP/1.1 302 Found\n&gt; Location: //a.com/dashboard/\n</code></pre>\n<p>or similar:</p>\n<pre><code class=\"language-bash\">curl -v 'http://traefik.localhost' -H 'X-Forwarded-Prefix: %2f%2fa.com'\n[...]\n&gt; HTTP/1.1 302 Found\n&gt; Location: //a.com/dashboard/\n</code></pre>\n<h3 id=\"impact-1\">Impact</h3>\n<p>Similar to the previously reported bug. In cache poisoning scenarios this may be exploitable.</p>\n</details>\n### References\n\n<ul>\n<li><a href=\"https://github.com/traefik/traefik/security/advisories/GHSA-h924-8g65-j9wg\">https://github.com/traefik/traefik/security/advisories/GHSA-h924-8g65-j9wg</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-52003\">https://nvd.nist.gov/vuln/detail/CVE-2024-52003</a></li>\n<li><a href=\"https://github.com/traefik/traefik/pull/11253\">https://github.com/traefik/traefik/pull/11253</a></li>\n<li><a href=\"https://github.com/traefik/traefik/releases/tag/v2.11.14\">https://github.com/traefik/traefik/releases/tag/v2.11.14</a></li>\n<li><a href=\"https://github.com/traefik/traefik/releases/tag/v3.2.1\">https://github.com/traefik/traefik/releases/tag/v3.2.1</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-h924-8g65-j9wg\">https://github.com/advisories/GHSA-h924-8g65-j9wg</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-h924-8g65-j9wg",
            "title": "[github.com/traefik/traefik/v3] Traefik's X-Forwarded-Prefix Header still allows for Open Redirect",
            "date_modified": "2024-12-02T17:12:38.000Z",
            "date_published": "2024-12-02T17:12:38.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-h924-8g65-j9wg"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>There is a vulnerability in Traefik that allows the client to provide the <code>X-Forwarded-Prefix</code> header from an untrusted source.</p>\n<h3 id=\"patches\">Patches</h3>\n<ul>\n<li><a href=\"https://github.com/traefik/traefik/releases/tag/v2.11.14\">https://github.com/traefik/traefik/releases/tag/v2.11.14</a></li>\n<li><a href=\"https://github.com/traefik/traefik/releases/tag/v3.2.1\">https://github.com/traefik/traefik/releases/tag/v3.2.1</a></li>\n</ul>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>No workaround.</p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any questions or comments about this advisory, please <a href=\"https://github.com/traefik/traefik/issues\">open an issue</a>.</p>\n<details>\n<summary>Original Description</summary>\n### Summary\nThe previously reported open redirect ([GHSA-6qq8-5wq3-86rp](https://github.com/traefik/traefik/security/advisories/GHSA-6qq8-5wq3-86rp)) is not fixed correctly. The safePrefix function can be tricked to return an absolute URL.\n\n\n\n<h3 id=\"details\">Details</h3>\n<p>The Traefik API <a href=\"https://github.com/traefik/traefik/blob/master/pkg/api/dashboard/dashboard.go\">dashboard component</a> tries to validate that the value of the header X-Forwarded-Prefix is a site relative path:</p>\n<pre><code class=\"language-go\">http.Redirect(resp, req, safePrefix(req)+\"/dashboard/\", http.StatusFound)\n</code></pre>\n<pre><code class=\"language-go\">func safePrefix(req *http.Request) string {\n    prefix := req.Header.Get(\"X-Forwarded-Prefix\")\n    if prefix == \"\" {\n        return \"\"\n    }\n\n    parse, err := url.Parse(prefix)\n    if err != nil {\n        return \"\"\n    }\n\n    return parse.Path\n}\n</code></pre>\n<h3 id=\"poc\">PoC</h3>\n<p>An attacker can bypass this by sending the following payload:</p>\n<pre><code class=\"language-bash\">curl -v 'http://traefik.localhost' -H 'X-Forwarded-Prefix: %0d//a.com'\n[...]\n&gt; HTTP/1.1 302 Found\n&gt; Location: //a.com/dashboard/\n</code></pre>\n<p>or similar:</p>\n<pre><code class=\"language-bash\">curl -v 'http://traefik.localhost' -H 'X-Forwarded-Prefix: %2f%2fa.com'\n[...]\n&gt; HTTP/1.1 302 Found\n&gt; Location: //a.com/dashboard/\n</code></pre>\n<h3 id=\"impact-1\">Impact</h3>\n<p>Similar to the previously reported bug. In cache poisoning scenarios this may be exploitable.</p>\n</details>\n### References\n\n<ul>\n<li><a href=\"https://github.com/traefik/traefik/security/advisories/GHSA-h924-8g65-j9wg\">https://github.com/traefik/traefik/security/advisories/GHSA-h924-8g65-j9wg</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-52003\">https://nvd.nist.gov/vuln/detail/CVE-2024-52003</a></li>\n<li><a href=\"https://github.com/traefik/traefik/pull/11253\">https://github.com/traefik/traefik/pull/11253</a></li>\n<li><a href=\"https://github.com/traefik/traefik/releases/tag/v2.11.14\">https://github.com/traefik/traefik/releases/tag/v2.11.14</a></li>\n<li><a href=\"https://github.com/traefik/traefik/releases/tag/v3.2.1\">https://github.com/traefik/traefik/releases/tag/v3.2.1</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-h924-8g65-j9wg\">https://github.com/advisories/GHSA-h924-8g65-j9wg</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-h924-8g65-j9wg",
            "title": "[github.com/traefik/traefik/v2] Traefik's X-Forwarded-Prefix Header still allows for Open Redirect",
            "date_modified": "2024-12-02T17:12:38.000Z",
            "date_published": "2024-12-02T17:12:38.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-h924-8g65-j9wg"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"summary\">Summary</h3>\n<p>A security vulnerability has been identified in the GitHub CLI that could leak authentication tokens when cloning repositories containing <code>git</code> submodules hosted outside of GitHub.com and ghe.com.</p>\n<h3 id=\"details\">Details</h3>\n<p>This vulnerability stems from several <code>gh</code> commands used to clone a repository with submodules from a non-GitHub host including <code>gh repo clone</code>, <code>gh repo fork</code>, <code>gh pr checkout</code>. These GitHub CLI commands invoke <code>git</code> with instructions to retrieve authentication tokens using the <a href=\"https://git-scm.com/docs/gitcredentials\"><code>credential.helper</code></a> configuration variable for any host encountered.</p>\n<p>Prior to <code>2.63.0</code>, hosts other than GitHub.com and ghe.com are treated as GitHub Enterprise Server hosts and have tokens sourced from the following environment variables before falling back to host-specific tokens stored within system-specific secured storage:</p>\n<ul>\n<li><code>GITHUB_ENTERPRISE_TOKEN</code></li>\n<li><code>GH_ENTERPRISE_TOKEN</code></li>\n<li><code>GITHUB_TOKEN</code> <em>when <code>CODESPACES</code> environment variable is set</em></li>\n</ul>\n<p>The result being <code>git</code> sending authentication tokens when cloning submodules.</p>\n<p>In <code>2.63.0</code>, these GitHub CLI commands will limit the hosts for which <code>gh</code> acts as a credential helper to source authentication tokens. Additionally, <code>GITHUB_TOKEN</code> will only be used for GitHub.com and ghe.com.</p>\n<h3 id=\"impact\">Impact</h3>\n<p>Successful exploitation could lead to a third-party using leaked authentication tokens to access privileged resources.</p>\n<h3 id=\"remediation-and-mitigation\">Remediation and mitigation</h3>\n<ol>\n<li>Upgrade <code>gh</code> to <code>2.63.0</code></li>\n<li>Revoke authentication tokens used with the GitHub CLI: <ul>\n<li><a href=\"https://docs.github.com/en/enterprise-cloud@latest/authentication/keeping-your-account-and-data-secure/managing-your-personal-access-tokens\">Personal access tokens</a></li>\n<li><a href=\"https://docs.github.com/en/apps/using-github-apps/reviewing-and-revoking-authorization-of-github-apps#reviewing-your-authorized-github-apps\">GitHub CLI OAuth app</a></li>\n</ul>\n</li>\n<li>Review your personal <a href=\"https://docs.github.com/en/authentication/keeping-your-account-and-data-secure/reviewing-your-security-log\">security log</a> and any relevant <a href=\"https://docs.github.com/en/enterprise-cloud@latest/admin/monitoring-activity-in-your-enterprise/reviewing-audit-logs-for-your-enterprise/identifying-audit-log-events-performed-by-an-access-token\">audit logs</a> for actions associated with your account or enterprise</li>\n</ol>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/cli/cli/security/advisories/GHSA-jwcm-9g39-pmcw\">https://github.com/cli/cli/security/advisories/GHSA-jwcm-9g39-pmcw</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-53858\">https://nvd.nist.gov/vuln/detail/CVE-2024-53858</a></li>\n<li><a href=\"https://git-scm.com/docs/gitcredentials\">https://git-scm.com/docs/gitcredentials</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-jwcm-9g39-pmcw\">https://github.com/advisories/GHSA-jwcm-9g39-pmcw</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-jwcm-9g39-pmcw",
            "title": "[github.com/cli/cli/v2] Recursive repository cloning can leak authentication tokens to non-GitHub submodule hosts",
            "date_modified": "2024-12-02T19:11:07.000Z",
            "date_published": "2024-11-27T21:43:05.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-jwcm-9g39-pmcw"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"summary\">Summary</h3>\n<p>A security vulnerability has been identified in <code>go-gh</code> that could leak authentication tokens intended for GitHub hosts to non-GitHub hosts when within a codespace.</p>\n<h3 id=\"details\">Details</h3>\n<p><code>go-gh</code> sources authentication tokens from different environment variables depending on the host involved:</p>\n<ul>\n<li><code>GITHUB_TOKEN</code>, <code>GH_TOKEN</code> for GitHub.com and ghe.com</li>\n<li><code>GITHUB_ENTERPRISE_TOKEN</code>, <code>GH_ENTERPRISE_TOKEN</code> for GitHub Enterprise Server</li>\n</ul>\n<p>Prior to <code>2.11.1</code>, <code>auth.TokenForHost</code> could source a token from the <code>GITHUB_TOKEN</code> environment variable for a host other than GitHub.com or ghe.com when <a href=\"https://github.com/cli/go-gh/blob/71770357e0cb12867d3e3e288854c0aa09d440b7/pkg/auth/auth.go#L73-L77\">within a codespace</a>.</p>\n<p>In <code>2.11.1</code>, <code>auth.TokenForHost</code> will only source a token from the <code>GITHUB_TOKEN</code> environment variable for GitHub.com or ghe.com hosts.</p>\n<h3 id=\"impact\">Impact</h3>\n<p>Successful exploitation could send authentication token to an unintended host. </p>\n<h3 id=\"remediation-and-mitigation\">Remediation and mitigation</h3>\n<ol>\n<li>Upgrade <code>go-gh</code> to <code>2.11.1</code></li>\n<li>Advise extension users to regenerate authentication tokens:<ul>\n<li><a href=\"https://docs.github.com/en/enterprise-cloud@latest/authentication/keeping-your-account-and-data-secure/managing-your-personal-access-tokens\">Personal access tokens</a></li>\n<li><a href=\"https://docs.github.com/en/apps/using-github-apps/reviewing-and-revoking-authorization-of-github-apps#reviewing-your-authorized-github-apps\">GitHub CLI OAuth app</a></li>\n</ul>\n</li>\n<li>Advise extension users to review their personal <a href=\"https://docs.github.com/en/authentication/keeping-your-account-and-data-secure/reviewing-your-security-log\">security log</a> and any relevant <a href=\"https://docs.github.com/en/enterprise-cloud@latest/admin/monitoring-activity-in-your-enterprise/reviewing-audit-logs-for-your-enterprise/identifying-audit-log-events-performed-by-an-access-token\">audit logs</a> for actions associated with their account or enterprise</li>\n</ol>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/cli/go-gh/security/advisories/GHSA-55v3-xh23-96gh\">https://github.com/cli/go-gh/security/advisories/GHSA-55v3-xh23-96gh</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-53859\">https://nvd.nist.gov/vuln/detail/CVE-2024-53859</a></li>\n<li><a href=\"https://docs.github.com/en/apps/using-github-apps/reviewing-and-revoking-authorization-of-github-apps#reviewing-your-authorized-github-apps\">https://docs.github.com/en/apps/using-github-apps/reviewing-and-revoking-authorization-of-github-apps#reviewing-your-authorized-github-apps</a></li>\n<li><a href=\"https://docs.github.com/en/authentication/keeping-your-account-and-data-secure/reviewing-your-security-log\">https://docs.github.com/en/authentication/keeping-your-account-and-data-secure/reviewing-your-security-log</a></li>\n<li><a href=\"https://docs.github.com/en/enterprise-cloud@latest/admin/monitoring-activity-in-your-enterprise/reviewing-audit-logs-for-your-enterprise/identifying-audit-log-events-performed-by-an-access-token\">https://docs.github.com/en/enterprise-cloud@latest/admin/monitoring-activity-in-your-enterprise/reviewing-audit-logs-for-your-enterprise/identifying-audit-log-events-performed-by-an-access-token</a></li>\n<li><a href=\"https://docs.github.com/en/enterprise-cloud@latest/authentication/keeping-your-account-and-data-secure/managing-your-personal-access-tokens\">https://docs.github.com/en/enterprise-cloud@latest/authentication/keeping-your-account-and-data-secure/managing-your-personal-access-tokens</a></li>\n<li><a href=\"https://github.com/cli/go-gh/blob/71770357e0cb12867d3e3e288854c0aa09d440b7/pkg/auth/auth.go#L73-L77\">https://github.com/cli/go-gh/blob/71770357e0cb12867d3e3e288854c0aa09d440b7/pkg/auth/auth.go#L73-L77</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-55v3-xh23-96gh\">https://github.com/advisories/GHSA-55v3-xh23-96gh</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-55v3-xh23-96gh",
            "title": "[github.com/cli/go-gh/v2] `auth.TokenForHost` violates GitHub host security boundary when sourcing authentication token within a codespace",
            "date_modified": "2024-12-02T19:10:22.000Z",
            "date_published": "2024-11-27T21:43:03.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-55v3-xh23-96gh"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<h3 id=\"patches\">Patches</h3>\n<p>1.31.1, 1.30.6, 1.29.8</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>set <code>enable_criu_support = false</code> </p>\n<h3 id=\"references\">References</h3>\n<p><em>Are there any links users can visit to find out more?</em></p>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/cri-o/cri-o/security/advisories/GHSA-7p9f-6x8j-gxxp\">https://github.com/cri-o/cri-o/security/advisories/GHSA-7p9f-6x8j-gxxp</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-8676\">https://nvd.nist.gov/vuln/detail/CVE-2024-8676</a></li>\n<li><a href=\"https://github.com/cri-o/cri-o/commit/e8e7dcb7838d11b5157976bf3e31a5840bb77de7\">https://github.com/cri-o/cri-o/commit/e8e7dcb7838d11b5157976bf3e31a5840bb77de7</a></li>\n<li><a href=\"https://access.redhat.com/security/cve/CVE-2024-8676\">https://access.redhat.com/security/cve/CVE-2024-8676</a></li>\n<li><a href=\"https://bugzilla.redhat.com/show_bug.cgi?id=2313842\">https://bugzilla.redhat.com/show_bug.cgi?id=2313842</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-7p9f-6x8j-gxxp\">https://github.com/advisories/GHSA-7p9f-6x8j-gxxp</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-7p9f-6x8j-gxxp",
            "title": "[github.com/cri-o/cri-o] CRI-O: Maliciously structured checkpoint file can gain arbitrary node access",
            "date_modified": "2024-11-26T21:50:33.000Z",
            "date_published": "2024-11-26T21:50:30.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-7p9f-6x8j-gxxp"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<h3 id=\"patches\">Patches</h3>\n<p>1.31.1, 1.30.6, 1.29.8</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>set <code>enable_criu_support = false</code> </p>\n<h3 id=\"references\">References</h3>\n<p><em>Are there any links users can visit to find out more?</em></p>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/cri-o/cri-o/security/advisories/GHSA-7p9f-6x8j-gxxp\">https://github.com/cri-o/cri-o/security/advisories/GHSA-7p9f-6x8j-gxxp</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-8676\">https://nvd.nist.gov/vuln/detail/CVE-2024-8676</a></li>\n<li><a href=\"https://github.com/cri-o/cri-o/commit/e8e7dcb7838d11b5157976bf3e31a5840bb77de7\">https://github.com/cri-o/cri-o/commit/e8e7dcb7838d11b5157976bf3e31a5840bb77de7</a></li>\n<li><a href=\"https://access.redhat.com/security/cve/CVE-2024-8676\">https://access.redhat.com/security/cve/CVE-2024-8676</a></li>\n<li><a href=\"https://bugzilla.redhat.com/show_bug.cgi?id=2313842\">https://bugzilla.redhat.com/show_bug.cgi?id=2313842</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-7p9f-6x8j-gxxp\">https://github.com/advisories/GHSA-7p9f-6x8j-gxxp</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-7p9f-6x8j-gxxp",
            "title": "[github.com/cri-o/cri-o] CRI-O: Maliciously structured checkpoint file can gain arbitrary node access",
            "date_modified": "2024-11-26T21:50:33.000Z",
            "date_published": "2024-11-26T21:50:30.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-7p9f-6x8j-gxxp"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<h3 id=\"patches\">Patches</h3>\n<p>1.31.1, 1.30.6, 1.29.8</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>set <code>enable_criu_support = false</code> </p>\n<h3 id=\"references\">References</h3>\n<p><em>Are there any links users can visit to find out more?</em></p>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/cri-o/cri-o/security/advisories/GHSA-7p9f-6x8j-gxxp\">https://github.com/cri-o/cri-o/security/advisories/GHSA-7p9f-6x8j-gxxp</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-8676\">https://nvd.nist.gov/vuln/detail/CVE-2024-8676</a></li>\n<li><a href=\"https://github.com/cri-o/cri-o/commit/e8e7dcb7838d11b5157976bf3e31a5840bb77de7\">https://github.com/cri-o/cri-o/commit/e8e7dcb7838d11b5157976bf3e31a5840bb77de7</a></li>\n<li><a href=\"https://access.redhat.com/security/cve/CVE-2024-8676\">https://access.redhat.com/security/cve/CVE-2024-8676</a></li>\n<li><a href=\"https://bugzilla.redhat.com/show_bug.cgi?id=2313842\">https://bugzilla.redhat.com/show_bug.cgi?id=2313842</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-7p9f-6x8j-gxxp\">https://github.com/advisories/GHSA-7p9f-6x8j-gxxp</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-7p9f-6x8j-gxxp",
            "title": "[github.com/cri-o/cri-o] CRI-O: Maliciously structured checkpoint file can gain arbitrary node access",
            "date_modified": "2024-11-26T21:50:33.000Z",
            "date_published": "2024-11-26T21:50:30.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-7p9f-6x8j-gxxp"
            },
            "tags": [
                "severity"
            ]
        }
    ]
}