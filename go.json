{
    "version": "https://jsonfeed.org/version/1",
    "title": "Security Advisory for Go modules",
    "home_page_url": "https://github.com/advisories?query=type%3Areviewed+ecosystem%3Ago",
    "feed_url": "https://azu.github.io/github-advisory-database-rss/go.json",
    "description": "Security Advisory for Go modules on GitHub",
    "items": [
        {
            "content_html": "<h3 id=\"summary\">Summary</h3>\n<p>The <code>/debug/querylogz</code> and <code>/debug/env</code> pages for <code>vtgate</code> and <code>vttablet</code> do not properly escape user input. The result is that queries executed by Vitess can write HTML into the monitoring page at will.</p>\n<h3 id=\"details\">Details</h3>\n<p>These pages are rendered using <code>text/template</code> instead of rendering with a proper HTML templating engine.</p>\n<h3 id=\"poc\">PoC</h3>\n<p>Execute any query where part of it is HTML markup, for example as part of a string. To make it easier to observe you might want to make sure the query takes a few seconds to complete, giving you time to refresh the status page. </p>\n<p>Example query that can trigger the issue:</p>\n<pre><code class=\"language-sql\">UPDATE users\nSET\n    email = CONCAT(\"&lt;img src=https://cataas.com/cat/says/oops&gt;\", users.idUser, \"@xxx\")\nWHERE\n    email NOT LIKE '%xxx%' AND email != \"demo@xxx.com\"\n</code></pre>\n<p>Result: </p>\n<p><img alt=\"image\" src=\"https://github.com/user-attachments/assets/c583816b-157c-474e-bbed-152b3dc0372f\"></p>\n<h3 id=\"impact\">Impact</h3>\n<p>Anyone looking at the Vitess status page is affected. This would normally be owners / administrators of the Vitess cluster.</p>\n<p>Anyone that can influence what text show up in queries can trigger it. This would normally be pretty much everybody interacting with a system that uses Vitess as a backend.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/vitessio/vitess/security/advisories/GHSA-7mwh-q3xm-qh6p\">https://github.com/vitessio/vitess/security/advisories/GHSA-7mwh-q3xm-qh6p</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-53257\">https://nvd.nist.gov/vuln/detail/CVE-2024-53257</a></li>\n<li><a href=\"https://github.com/vitessio/vitess/commit/2b71d1b5f8ca676beeab2875525003cd45096217\">https://github.com/vitessio/vitess/commit/2b71d1b5f8ca676beeab2875525003cd45096217</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-7mwh-q3xm-qh6p\">https://github.com/advisories/GHSA-7mwh-q3xm-qh6p</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-7mwh-q3xm-qh6p",
            "title": "[vitess.io/vitess] Vitess allows HTML injection in /debug/querylogz & /debug/env",
            "date_modified": "2024-12-16T15:26:05.000Z",
            "date_published": "2024-12-03T18:43:33.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-7mwh-q3xm-qh6p"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"summary\">Summary</h3>\n<p>The <code>/debug/querylogz</code> and <code>/debug/env</code> pages for <code>vtgate</code> and <code>vttablet</code> do not properly escape user input. The result is that queries executed by Vitess can write HTML into the monitoring page at will.</p>\n<h3 id=\"details\">Details</h3>\n<p>These pages are rendered using <code>text/template</code> instead of rendering with a proper HTML templating engine.</p>\n<h3 id=\"poc\">PoC</h3>\n<p>Execute any query where part of it is HTML markup, for example as part of a string. To make it easier to observe you might want to make sure the query takes a few seconds to complete, giving you time to refresh the status page. </p>\n<p>Example query that can trigger the issue:</p>\n<pre><code class=\"language-sql\">UPDATE users\nSET\n    email = CONCAT(\"&lt;img src=https://cataas.com/cat/says/oops&gt;\", users.idUser, \"@xxx\")\nWHERE\n    email NOT LIKE '%xxx%' AND email != \"demo@xxx.com\"\n</code></pre>\n<p>Result: </p>\n<p><img alt=\"image\" src=\"https://github.com/user-attachments/assets/c583816b-157c-474e-bbed-152b3dc0372f\"></p>\n<h3 id=\"impact\">Impact</h3>\n<p>Anyone looking at the Vitess status page is affected. This would normally be owners / administrators of the Vitess cluster.</p>\n<p>Anyone that can influence what text show up in queries can trigger it. This would normally be pretty much everybody interacting with a system that uses Vitess as a backend.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/vitessio/vitess/security/advisories/GHSA-7mwh-q3xm-qh6p\">https://github.com/vitessio/vitess/security/advisories/GHSA-7mwh-q3xm-qh6p</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-53257\">https://nvd.nist.gov/vuln/detail/CVE-2024-53257</a></li>\n<li><a href=\"https://github.com/vitessio/vitess/commit/2b71d1b5f8ca676beeab2875525003cd45096217\">https://github.com/vitessio/vitess/commit/2b71d1b5f8ca676beeab2875525003cd45096217</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-7mwh-q3xm-qh6p\">https://github.com/advisories/GHSA-7mwh-q3xm-qh6p</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-7mwh-q3xm-qh6p",
            "title": "[vitess.io/vitess] Vitess allows HTML injection in /debug/querylogz & /debug/env",
            "date_modified": "2024-12-16T15:26:05.000Z",
            "date_published": "2024-12-03T18:43:33.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-7mwh-q3xm-qh6p"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"summary\">Summary</h3>\n<p>The <code>/debug/querylogz</code> and <code>/debug/env</code> pages for <code>vtgate</code> and <code>vttablet</code> do not properly escape user input. The result is that queries executed by Vitess can write HTML into the monitoring page at will.</p>\n<h3 id=\"details\">Details</h3>\n<p>These pages are rendered using <code>text/template</code> instead of rendering with a proper HTML templating engine.</p>\n<h3 id=\"poc\">PoC</h3>\n<p>Execute any query where part of it is HTML markup, for example as part of a string. To make it easier to observe you might want to make sure the query takes a few seconds to complete, giving you time to refresh the status page. </p>\n<p>Example query that can trigger the issue:</p>\n<pre><code class=\"language-sql\">UPDATE users\nSET\n    email = CONCAT(\"&lt;img src=https://cataas.com/cat/says/oops&gt;\", users.idUser, \"@xxx\")\nWHERE\n    email NOT LIKE '%xxx%' AND email != \"demo@xxx.com\"\n</code></pre>\n<p>Result: </p>\n<p><img alt=\"image\" src=\"https://github.com/user-attachments/assets/c583816b-157c-474e-bbed-152b3dc0372f\"></p>\n<h3 id=\"impact\">Impact</h3>\n<p>Anyone looking at the Vitess status page is affected. This would normally be owners / administrators of the Vitess cluster.</p>\n<p>Anyone that can influence what text show up in queries can trigger it. This would normally be pretty much everybody interacting with a system that uses Vitess as a backend.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/vitessio/vitess/security/advisories/GHSA-7mwh-q3xm-qh6p\">https://github.com/vitessio/vitess/security/advisories/GHSA-7mwh-q3xm-qh6p</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-53257\">https://nvd.nist.gov/vuln/detail/CVE-2024-53257</a></li>\n<li><a href=\"https://github.com/vitessio/vitess/commit/2b71d1b5f8ca676beeab2875525003cd45096217\">https://github.com/vitessio/vitess/commit/2b71d1b5f8ca676beeab2875525003cd45096217</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-7mwh-q3xm-qh6p\">https://github.com/advisories/GHSA-7mwh-q3xm-qh6p</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-7mwh-q3xm-qh6p",
            "title": "[vitess.io/vitess] Vitess allows HTML injection in /debug/querylogz & /debug/env",
            "date_modified": "2024-12-16T15:26:05.000Z",
            "date_published": "2024-12-03T18:43:33.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-7mwh-q3xm-qh6p"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Resource Exhaustion in Mattermost Server versions 8.1.x before 8.1.10 fails to limit&nbsp;the size of the payload that can be read and parsed allowing an attacker to send a&nbsp;very large email payload and crash the server.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-28053\">https://nvd.nist.gov/vuln/detail/CVE-2024-28053</a></li>\n<li><a href=\"https://mattermost.com/security-updates\">https://mattermost.com/security-updates</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-qqc8-rv37-79q5\">https://github.com/advisories/GHSA-qqc8-rv37-79q5</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-qqc8-rv37-79q5",
            "title": "[github.com/mattermost/mattermost/server/v8] Mattermost Server Resource Exhaustion",
            "date_modified": "2024-12-13T20:37:42.000Z",
            "date_published": "2024-03-15T09:30:37.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-qqc8-rv37-79q5"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Boundary Community Edition and Boundary Enterprise (“Boundary”) incorrectly handle HTTP requests during the initialization of the Boundary controller, which may cause the Boundary server to terminate prematurely. Boundary is only vulnerable to this flaw during the initialization of the Boundary controller, which on average is measured in milliseconds during the Boundary startup process.</p>\n<p>This vulnerability, CVE-2024-12289, is fixed in Boundary Community Edition and Boundary Enterprise 0.16.4, 0.17.3, 0.18.2.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-12289\">https://nvd.nist.gov/vuln/detail/CVE-2024-12289</a></li>\n<li><a href=\"https://discuss.hashicorp.com/t/hcsec-2024-28-boundary-controller-incorrectly-handles-http-requests-on-initialization-which-may-lead-to-a-denial-of-service\">https://discuss.hashicorp.com/t/hcsec-2024-28-boundary-controller-incorrectly-handles-http-requests-on-initialization-which-may-lead-to-a-denial-of-service</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-xx83-cxmq-x89m\">https://github.com/advisories/GHSA-xx83-cxmq-x89m</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-xx83-cxmq-x89m",
            "title": "[github.com/hashicorp/boundary] Boundary Community Edition Incorrectly Handles HTTP Requests On Initialization Which May Lead to a Denial of Service",
            "date_modified": "2024-12-13T20:37:18.000Z",
            "date_published": "2024-12-13T00:30:50.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-xx83-cxmq-x89m"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>In the context of using MD5 to generate filenames for cache keys, there are significant collision hazards that need to be considered. MD5, or Message Digest Algorithm 5, is a widely known cryptographic hash function that produces a 128-bit hash value. However, MD5 is no longer considered secure against well-funded opponents due to its vulnerability to collision attacks.</p>\n<h3 id=\"understanding-collisions\">Understanding Collisions</h3>\n<p>A collision in hashing occurs when two different inputs produce the same hash output. For MD5, this means that it is theoretically possible, and even practical, to find two distinct cache keys that result in the same MD5 hash. This vulnerability has been well-documented and exploited in various security contexts.</p>\n<h3 id=\"implications-for-cache-systems\">Implications for Cache Systems</h3>\n<p>In a cache system where filenames are derived from the MD5 hash of cache keys, a collision could lead to several critical issues:</p>\n<p>Data Integrity Risks: If two different keys collide, they will map to the same filename. This could result in data being overwritten incorrectly, leading to data loss or corruption.\nSecurity Vulnerabilities: An attacker could potentially exploit collisions to manipulate cache data. For instance, by crafting a key that collides with another key, an attacker might gain unauthorized access to sensitive cached information or inject malicious data.</p>\n<p>Unpredictable Behavior: Collisions can cause the cache system to behave unpredictably, as it may retrieve or store data in unintended files, leading to system instability or incorrect behavior.</p>\n<h3 id=\"mitigation-strategies\">Mitigation Strategies</h3>\n<p>To mitigate these risks, consider the following strategies:</p>\n<p>Use a More Secure Hash Function: Replace MD5 with a more secure hash function like SHA-256, which has a significantly lower probability of collisions and is resistant to known attack vectors.</p>\n<p>code at:<a href=\"https://github.com/beego/beego/blob/bb72dc27ac3970e51d38ee52fc3dc1465ae25b9d/client/cache/file.go#L126\">https://github.com/beego/beego/blob/bb72dc27ac3970e51d38ee52fc3dc1465ae25b9d/client/cache/file.go#L126</a></p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/beego/beego/security/advisories/GHSA-9j3m-fr7q-jxfw\">https://github.com/beego/beego/security/advisories/GHSA-9j3m-fr7q-jxfw</a></li>\n<li><a href=\"https://github.com/beego/beego/commit/e7fa4835f71f47ab1d13afd638cebf661800d5a4\">https://github.com/beego/beego/commit/e7fa4835f71f47ab1d13afd638cebf661800d5a4</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-55885\">https://nvd.nist.gov/vuln/detail/CVE-2024-55885</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-9j3m-fr7q-jxfw\">https://github.com/advisories/GHSA-9j3m-fr7q-jxfw</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-9j3m-fr7q-jxfw",
            "title": "[github.com/beego/beego/v2] Beego has Collision Hazards of MD5 in Cache Key Filenames",
            "date_modified": "2024-12-12T22:32:56.000Z",
            "date_published": "2024-12-12T19:22:39.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-9j3m-fr7q-jxfw"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>In the context of using MD5 to generate filenames for cache keys, there are significant collision hazards that need to be considered. MD5, or Message Digest Algorithm 5, is a widely known cryptographic hash function that produces a 128-bit hash value. However, MD5 is no longer considered secure against well-funded opponents due to its vulnerability to collision attacks.</p>\n<h3 id=\"understanding-collisions\">Understanding Collisions</h3>\n<p>A collision in hashing occurs when two different inputs produce the same hash output. For MD5, this means that it is theoretically possible, and even practical, to find two distinct cache keys that result in the same MD5 hash. This vulnerability has been well-documented and exploited in various security contexts.</p>\n<h3 id=\"implications-for-cache-systems\">Implications for Cache Systems</h3>\n<p>In a cache system where filenames are derived from the MD5 hash of cache keys, a collision could lead to several critical issues:</p>\n<p>Data Integrity Risks: If two different keys collide, they will map to the same filename. This could result in data being overwritten incorrectly, leading to data loss or corruption.\nSecurity Vulnerabilities: An attacker could potentially exploit collisions to manipulate cache data. For instance, by crafting a key that collides with another key, an attacker might gain unauthorized access to sensitive cached information or inject malicious data.</p>\n<p>Unpredictable Behavior: Collisions can cause the cache system to behave unpredictably, as it may retrieve or store data in unintended files, leading to system instability or incorrect behavior.</p>\n<h3 id=\"mitigation-strategies\">Mitigation Strategies</h3>\n<p>To mitigate these risks, consider the following strategies:</p>\n<p>Use a More Secure Hash Function: Replace MD5 with a more secure hash function like SHA-256, which has a significantly lower probability of collisions and is resistant to known attack vectors.</p>\n<p>code at:<a href=\"https://github.com/beego/beego/blob/bb72dc27ac3970e51d38ee52fc3dc1465ae25b9d/client/cache/file.go#L126\">https://github.com/beego/beego/blob/bb72dc27ac3970e51d38ee52fc3dc1465ae25b9d/client/cache/file.go#L126</a></p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/beego/beego/security/advisories/GHSA-9j3m-fr7q-jxfw\">https://github.com/beego/beego/security/advisories/GHSA-9j3m-fr7q-jxfw</a></li>\n<li><a href=\"https://github.com/beego/beego/commit/e7fa4835f71f47ab1d13afd638cebf661800d5a4\">https://github.com/beego/beego/commit/e7fa4835f71f47ab1d13afd638cebf661800d5a4</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-55885\">https://nvd.nist.gov/vuln/detail/CVE-2024-55885</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-9j3m-fr7q-jxfw\">https://github.com/advisories/GHSA-9j3m-fr7q-jxfw</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-9j3m-fr7q-jxfw",
            "title": "[github.com/beego/beego] Beego has Collision Hazards of MD5 in Cache Key Filenames",
            "date_modified": "2024-12-12T22:32:56.000Z",
            "date_published": "2024-12-12T19:22:39.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-9j3m-fr7q-jxfw"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>A security issue was identified in the NanoProxy project related to the <code>golang.org/x/crypto</code> dependency. The project was using an outdated version of this dependency, which potentially exposed the system to security vulnerabilities that have been addressed in subsequent updates.</p>\n<p>Impact:\nThe specific vulnerabilities in the outdated version of <code>golang.org/x/crypto</code> could include authorization bypasses, data breaches, or other security risks. These vulnerabilities can be exploited by attackers to compromise the integrity, confidentiality, or availability of the system.</p>\n<p>Resolution:\nThe issue has been fixed in NanoProxy by upgrading the <code>golang.org/x/crypto</code> dependency to version 0.31.0. Users are strongly encouraged to update their instances of NanoProxy to include this fix and ensure they are using the latest secure version of all dependencies.</p>\n<p>Fixed Version:</p>\n<ul>\n<li><code>golang.org/x/crypto</code> upgraded to version 0.31.0.</li>\n</ul>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/ryanbekhen/nanoproxy/security/advisories/GHSA-7prj-hgx4-2xc3\">https://github.com/ryanbekhen/nanoproxy/security/advisories/GHSA-7prj-hgx4-2xc3</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-45337\">https://nvd.nist.gov/vuln/detail/CVE-2024-45337</a></li>\n<li><a href=\"https://pkg.go.dev/vuln/GO-2024-3330\">https://pkg.go.dev/vuln/GO-2024-3330</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-7prj-hgx4-2xc3\">https://github.com/advisories/GHSA-7prj-hgx4-2xc3</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-7prj-hgx4-2xc3",
            "title": "[github.com/ryanbekhen/nanoproxy] Potential Vulnerabilities Due to Outdated golang.org/x/crypto Dependency in NanoProxy",
            "date_modified": "2024-12-13T21:46:54.000Z",
            "date_published": "2024-12-12T19:20:26.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-7prj-hgx4-2xc3"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h1 id=\"duplicate-advisory\">Duplicate Advisory</h1>\n<p>This advisory has been withdrawn because it is a duplicate of GHSA-r4pg-vg54-wxx4. This link is maintained to preserve external references.</p>\n<h1 id=\"original-description\">Original Description</h1>\n<p>A flaw was found in the cert-manager package. This flaw allows an attacker who can modify PEM data that the cert-manager reads, for example, in a Secret resource, to use large amounts of CPU in the cert-manager controller pod to effectively create a denial-of-service (DoS) vector for the cert-manager in the cluster.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/cert-manager/cert-manager/security/advisories/GHSA-r4pg-vg54-wxx4\">https://github.com/cert-manager/cert-manager/security/advisories/GHSA-r4pg-vg54-wxx4</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-12401\">https://nvd.nist.gov/vuln/detail/CVE-2024-12401</a></li>\n<li><a href=\"https://github.com/cert-manager/cert-manager/pull/7400\">https://github.com/cert-manager/cert-manager/pull/7400</a></li>\n<li><a href=\"https://github.com/cert-manager/cert-manager/pull/7401\">https://github.com/cert-manager/cert-manager/pull/7401</a></li>\n<li><a href=\"https://github.com/cert-manager/cert-manager/pull/7402\">https://github.com/cert-manager/cert-manager/pull/7402</a></li>\n<li><a href=\"https://github.com/cert-manager/cert-manager/pull/7403\">https://github.com/cert-manager/cert-manager/pull/7403</a></li>\n<li><a href=\"https://access.redhat.com/security/cve/CVE-2024-12401\">https://access.redhat.com/security/cve/CVE-2024-12401</a></li>\n<li><a href=\"https://bugzilla.redhat.com/show_bug.cgi?id=2327929\">https://bugzilla.redhat.com/show_bug.cgi?id=2327929</a></li>\n<li><a href=\"https://go.dev/issue/50116\">https://go.dev/issue/50116</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-ghw8-3xqw-hhcj\">https://github.com/advisories/GHSA-ghw8-3xqw-hhcj</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-ghw8-3xqw-hhcj",
            "title": "[github.com/cert-manager/cert-manager] Duplicate Advisory: cert-manager ha a potential slowdown / DoS when parsing specially crafted PEM inputs",
            "date_modified": "2024-12-12T19:19:50.000Z",
            "date_published": "2024-12-12T09:31:36.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-ghw8-3xqw-hhcj"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h1 id=\"duplicate-advisory\">Duplicate Advisory</h1>\n<p>This advisory has been withdrawn because it is a duplicate of GHSA-r4pg-vg54-wxx4. This link is maintained to preserve external references.</p>\n<h1 id=\"original-description\">Original Description</h1>\n<p>A flaw was found in the cert-manager package. This flaw allows an attacker who can modify PEM data that the cert-manager reads, for example, in a Secret resource, to use large amounts of CPU in the cert-manager controller pod to effectively create a denial-of-service (DoS) vector for the cert-manager in the cluster.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/cert-manager/cert-manager/security/advisories/GHSA-r4pg-vg54-wxx4\">https://github.com/cert-manager/cert-manager/security/advisories/GHSA-r4pg-vg54-wxx4</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-12401\">https://nvd.nist.gov/vuln/detail/CVE-2024-12401</a></li>\n<li><a href=\"https://github.com/cert-manager/cert-manager/pull/7400\">https://github.com/cert-manager/cert-manager/pull/7400</a></li>\n<li><a href=\"https://github.com/cert-manager/cert-manager/pull/7401\">https://github.com/cert-manager/cert-manager/pull/7401</a></li>\n<li><a href=\"https://github.com/cert-manager/cert-manager/pull/7402\">https://github.com/cert-manager/cert-manager/pull/7402</a></li>\n<li><a href=\"https://github.com/cert-manager/cert-manager/pull/7403\">https://github.com/cert-manager/cert-manager/pull/7403</a></li>\n<li><a href=\"https://access.redhat.com/security/cve/CVE-2024-12401\">https://access.redhat.com/security/cve/CVE-2024-12401</a></li>\n<li><a href=\"https://bugzilla.redhat.com/show_bug.cgi?id=2327929\">https://bugzilla.redhat.com/show_bug.cgi?id=2327929</a></li>\n<li><a href=\"https://go.dev/issue/50116\">https://go.dev/issue/50116</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-ghw8-3xqw-hhcj\">https://github.com/advisories/GHSA-ghw8-3xqw-hhcj</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-ghw8-3xqw-hhcj",
            "title": "[github.com/cert-manager/cert-manager] Duplicate Advisory: cert-manager ha a potential slowdown / DoS when parsing specially crafted PEM inputs",
            "date_modified": "2024-12-12T19:19:50.000Z",
            "date_published": "2024-12-12T09:31:36.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-ghw8-3xqw-hhcj"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h1 id=\"duplicate-advisory\">Duplicate Advisory</h1>\n<p>This advisory has been withdrawn because it is a duplicate of GHSA-r4pg-vg54-wxx4. This link is maintained to preserve external references.</p>\n<h1 id=\"original-description\">Original Description</h1>\n<p>A flaw was found in the cert-manager package. This flaw allows an attacker who can modify PEM data that the cert-manager reads, for example, in a Secret resource, to use large amounts of CPU in the cert-manager controller pod to effectively create a denial-of-service (DoS) vector for the cert-manager in the cluster.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/cert-manager/cert-manager/security/advisories/GHSA-r4pg-vg54-wxx4\">https://github.com/cert-manager/cert-manager/security/advisories/GHSA-r4pg-vg54-wxx4</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-12401\">https://nvd.nist.gov/vuln/detail/CVE-2024-12401</a></li>\n<li><a href=\"https://github.com/cert-manager/cert-manager/pull/7400\">https://github.com/cert-manager/cert-manager/pull/7400</a></li>\n<li><a href=\"https://github.com/cert-manager/cert-manager/pull/7401\">https://github.com/cert-manager/cert-manager/pull/7401</a></li>\n<li><a href=\"https://github.com/cert-manager/cert-manager/pull/7402\">https://github.com/cert-manager/cert-manager/pull/7402</a></li>\n<li><a href=\"https://github.com/cert-manager/cert-manager/pull/7403\">https://github.com/cert-manager/cert-manager/pull/7403</a></li>\n<li><a href=\"https://access.redhat.com/security/cve/CVE-2024-12401\">https://access.redhat.com/security/cve/CVE-2024-12401</a></li>\n<li><a href=\"https://bugzilla.redhat.com/show_bug.cgi?id=2327929\">https://bugzilla.redhat.com/show_bug.cgi?id=2327929</a></li>\n<li><a href=\"https://go.dev/issue/50116\">https://go.dev/issue/50116</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-ghw8-3xqw-hhcj\">https://github.com/advisories/GHSA-ghw8-3xqw-hhcj</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-ghw8-3xqw-hhcj",
            "title": "[github.com/cert-manager/cert-manager] Duplicate Advisory: cert-manager ha a potential slowdown / DoS when parsing specially crafted PEM inputs",
            "date_modified": "2024-12-12T19:19:50.000Z",
            "date_published": "2024-12-12T09:31:36.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-ghw8-3xqw-hhcj"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"summary\">Summary</h3>\n<p>A security vulnerability has been identified in <code>go-gh</code> that could leak authentication tokens intended for GitHub hosts to non-GitHub hosts when within a codespace.</p>\n<h3 id=\"details\">Details</h3>\n<p><code>go-gh</code> sources authentication tokens from different environment variables depending on the host involved:</p>\n<ul>\n<li><code>GITHUB_TOKEN</code>, <code>GH_TOKEN</code> for GitHub.com and ghe.com</li>\n<li><code>GITHUB_ENTERPRISE_TOKEN</code>, <code>GH_ENTERPRISE_TOKEN</code> for GitHub Enterprise Server</li>\n</ul>\n<p>Prior to <code>2.11.1</code>, <code>auth.TokenForHost</code> could source a token from the <code>GITHUB_TOKEN</code> environment variable for a host other than GitHub.com or ghe.com when <a href=\"https://github.com/cli/go-gh/blob/71770357e0cb12867d3e3e288854c0aa09d440b7/pkg/auth/auth.go#L73-L77\">within a codespace</a>.</p>\n<p>In <code>2.11.1</code>, <code>auth.TokenForHost</code> will only source a token from the <code>GITHUB_TOKEN</code> environment variable for GitHub.com or ghe.com hosts.</p>\n<h3 id=\"impact\">Impact</h3>\n<p>Successful exploitation could send authentication token to an unintended host. </p>\n<h3 id=\"remediation-and-mitigation\">Remediation and mitigation</h3>\n<ol>\n<li>Upgrade <code>go-gh</code> to <code>2.11.1</code></li>\n<li>Advise extension users to regenerate authentication tokens:<ul>\n<li><a href=\"https://docs.github.com/en/enterprise-cloud@latest/authentication/keeping-your-account-and-data-secure/managing-your-personal-access-tokens\">Personal access tokens</a></li>\n<li><a href=\"https://docs.github.com/en/apps/using-github-apps/reviewing-and-revoking-authorization-of-github-apps#reviewing-your-authorized-github-apps\">GitHub CLI OAuth app</a></li>\n</ul>\n</li>\n<li>Advise extension users to review their personal <a href=\"https://docs.github.com/en/authentication/keeping-your-account-and-data-secure/reviewing-your-security-log\">security log</a> and any relevant <a href=\"https://docs.github.com/en/enterprise-cloud@latest/admin/monitoring-activity-in-your-enterprise/reviewing-audit-logs-for-your-enterprise/identifying-audit-log-events-performed-by-an-access-token\">audit logs</a> for actions associated with their account or enterprise</li>\n</ol>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/cli/go-gh/security/advisories/GHSA-55v3-xh23-96gh\">https://github.com/cli/go-gh/security/advisories/GHSA-55v3-xh23-96gh</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-53859\">https://nvd.nist.gov/vuln/detail/CVE-2024-53859</a></li>\n<li><a href=\"https://docs.github.com/en/apps/using-github-apps/reviewing-and-revoking-authorization-of-github-apps#reviewing-your-authorized-github-apps\">https://docs.github.com/en/apps/using-github-apps/reviewing-and-revoking-authorization-of-github-apps#reviewing-your-authorized-github-apps</a></li>\n<li><a href=\"https://docs.github.com/en/authentication/keeping-your-account-and-data-secure/reviewing-your-security-log\">https://docs.github.com/en/authentication/keeping-your-account-and-data-secure/reviewing-your-security-log</a></li>\n<li><a href=\"https://docs.github.com/en/enterprise-cloud@latest/admin/monitoring-activity-in-your-enterprise/reviewing-audit-logs-for-your-enterprise/identifying-audit-log-events-performed-by-an-access-token\">https://docs.github.com/en/enterprise-cloud@latest/admin/monitoring-activity-in-your-enterprise/reviewing-audit-logs-for-your-enterprise/identifying-audit-log-events-performed-by-an-access-token</a></li>\n<li><a href=\"https://docs.github.com/en/enterprise-cloud@latest/authentication/keeping-your-account-and-data-secure/managing-your-personal-access-tokens\">https://docs.github.com/en/enterprise-cloud@latest/authentication/keeping-your-account-and-data-secure/managing-your-personal-access-tokens</a></li>\n<li><a href=\"https://github.com/cli/go-gh/blob/71770357e0cb12867d3e3e288854c0aa09d440b7/pkg/auth/auth.go#L73-L77\">https://github.com/cli/go-gh/blob/71770357e0cb12867d3e3e288854c0aa09d440b7/pkg/auth/auth.go#L73-L77</a></li>\n<li><a href=\"https://pkg.go.dev/vuln/GO-2024-3295\">https://pkg.go.dev/vuln/GO-2024-3295</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-55v3-xh23-96gh\">https://github.com/advisories/GHSA-55v3-xh23-96gh</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-55v3-xh23-96gh",
            "title": "[github.com/cli/go-gh] `auth.TokenForHost` violates GitHub host security boundary when sourcing authentication token within a codespace",
            "date_modified": "2024-12-12T19:17:34.000Z",
            "date_published": "2024-11-27T21:43:03.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-55v3-xh23-96gh"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>The package <code>github.com/gomarkdown/markdown</code> is a Go library for parsing Markdown text and rendering as HTML. Prior to pseudoversion <code>v0.0.0-20240729232818-a2a9c4f</code>, which corresponds with commit <code>a2a9c4f76ef5a5c32108e36f7c47f8d310322252</code>, there was a logical problem in the paragraph function of the parser/block.go file, which allowed a remote attacker to cause a denial of service (DoS) condition by providing a tailor-made input that caused an infinite loop, causing the program to hang and consume resources indefinitely. Submit <code>a2a9c4f76ef5a5c32108e36f7c47f8d310322252</code> contains fixes to this problem.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-44337\">https://nvd.nist.gov/vuln/detail/CVE-2024-44337</a></li>\n<li><a href=\"https://github.com/gomarkdown/markdown/commit/a2a9c4f76ef5a5c32108e36f7c47f8d310322252\">https://github.com/gomarkdown/markdown/commit/a2a9c4f76ef5a5c32108e36f7c47f8d310322252</a></li>\n<li><a href=\"https://github.com/Brinmon/CVE-2024-44337\">https://github.com/Brinmon/CVE-2024-44337</a></li>\n<li><a href=\"https://pkg.go.dev/vuln/GO-2024-3205\">https://pkg.go.dev/vuln/GO-2024-3205</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-xhr3-wf7j-h255\">https://github.com/advisories/GHSA-xhr3-wf7j-h255</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-xhr3-wf7j-h255",
            "title": "[github.com/gomarkdown/markdown] Infinite loop in github.com/gomarkdown/markdown",
            "date_modified": "2024-12-12T17:59:13.000Z",
            "date_published": "2024-10-15T21:30:39.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-xhr3-wf7j-h255"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>A vulnerability was found in Buildah. Cache mounts do not properly validate that user-specified paths for the cache are within our cache directory, allowing a <code>RUN</code> instruction in a Container file to mount an arbitrary directory from the host (read/write) into the container as long as those files can be accessed by the user running Buildah.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-9675\">https://nvd.nist.gov/vuln/detail/CVE-2024-9675</a></li>\n<li><a href=\"https://access.redhat.com/security/cve/CVE-2024-9675\">https://access.redhat.com/security/cve/CVE-2024-9675</a></li>\n<li><a href=\"https://bugzilla.redhat.com/show_bug.cgi?id=2317458\">https://bugzilla.redhat.com/show_bug.cgi?id=2317458</a></li>\n<li><a href=\"https://github.com/containers/buildah/commit/aa67e5d71ee7ec07122a210baa3b13966a9e086c\">https://github.com/containers/buildah/commit/aa67e5d71ee7ec07122a210baa3b13966a9e086c</a></li>\n<li><a href=\"https://pkg.go.dev/vuln/GO-2024-3186\">https://pkg.go.dev/vuln/GO-2024-3186</a></li>\n<li><a href=\"https://access.redhat.com/errata/RHSA-2024:8563\">https://access.redhat.com/errata/RHSA-2024:8563</a></li>\n<li><a href=\"https://access.redhat.com/errata/RHSA-2024:8675\">https://access.redhat.com/errata/RHSA-2024:8675</a></li>\n<li><a href=\"https://access.redhat.com/errata/RHSA-2024:8679\">https://access.redhat.com/errata/RHSA-2024:8679</a></li>\n<li><a href=\"https://access.redhat.com/errata/RHSA-2024:8703\">https://access.redhat.com/errata/RHSA-2024:8703</a></li>\n<li><a href=\"https://access.redhat.com/errata/RHSA-2024:8707\">https://access.redhat.com/errata/RHSA-2024:8707</a></li>\n<li><a href=\"https://access.redhat.com/errata/RHSA-2024:8708\">https://access.redhat.com/errata/RHSA-2024:8708</a></li>\n<li><a href=\"https://access.redhat.com/errata/RHSA-2024:8709\">https://access.redhat.com/errata/RHSA-2024:8709</a></li>\n<li><a href=\"https://access.redhat.com/errata/RHSA-2024:8846\">https://access.redhat.com/errata/RHSA-2024:8846</a></li>\n<li><a href=\"https://access.redhat.com/errata/RHSA-2024:8686\">https://access.redhat.com/errata/RHSA-2024:8686</a></li>\n<li><a href=\"https://access.redhat.com/errata/RHSA-2024:8690\">https://access.redhat.com/errata/RHSA-2024:8690</a></li>\n<li><a href=\"https://access.redhat.com/errata/RHSA-2024:9051\">https://access.redhat.com/errata/RHSA-2024:9051</a></li>\n<li><a href=\"https://access.redhat.com/errata/RHSA-2024:8700\">https://access.redhat.com/errata/RHSA-2024:8700</a></li>\n<li><a href=\"https://access.redhat.com/errata/RHSA-2024:9459\">https://access.redhat.com/errata/RHSA-2024:9459</a></li>\n<li><a href=\"https://access.redhat.com/errata/RHSA-2024:9454\">https://access.redhat.com/errata/RHSA-2024:9454</a></li>\n<li><a href=\"https://access.redhat.com/errata/RHSA-2024:8984\">https://access.redhat.com/errata/RHSA-2024:8984</a></li>\n<li><a href=\"https://access.redhat.com/errata/RHSA-2024:8994\">https://access.redhat.com/errata/RHSA-2024:8994</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-586p-749j-fhwp\">https://github.com/advisories/GHSA-586p-749j-fhwp</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-586p-749j-fhwp",
            "title": "[github.com/containers/buildah] Buildah allows arbitrary directory mount",
            "date_modified": "2024-12-12T17:47:32.000Z",
            "date_published": "2024-10-09T15:32:21.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-586p-749j-fhwp"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Applications and libraries which misuse the ServerConfig.PublicKeyCallback callback may be susceptible to an authorization bypass.</p>\n<p>The documentation for ServerConfig.PublicKeyCallback says that \"A call to this function does not guarantee that the key offered is in fact used to authenticate.\" Specifically, the SSH protocol allows clients to inquire about whether a public key is acceptable before proving control of the corresponding private key. PublicKeyCallback may be called with multiple keys, and the order in which the keys were provided cannot be used to infer which key the client successfully authenticated with, if any. Some applications, which store the key(s) passed to PublicKeyCallback (or derived information) and make security relevant determinations based on it once the connection is established, may make incorrect assumptions.</p>\n<p>For example, an attacker may send public keys A and B, and then authenticate with A. PublicKeyCallback would be called only twice, first with A and then with B. A vulnerable application may then make authorization decisions based on key B for which the attacker does not actually control the private key.</p>\n<p>Since this API is widely misused, as a partial mitigation golang.org/x/<a href=\"mailto:crypto@v0.31.0\">crypto@v0.31.0</a> enforces the property that, when successfully authenticating via public key, the last key passed to ServerConfig.PublicKeyCallback will be the key used to authenticate the connection. PublicKeyCallback will now be called multiple times with the same key, if necessary. Note that the client may still not control the last key passed to PublicKeyCallback if the connection is then authenticated with a different method, such as PasswordCallback, KeyboardInteractiveCallback, or NoClientAuth.</p>\n<p>Users should be using the Extensions field of the Permissions return value from the various authentication callbacks to record data associated with the authentication attempt instead of referencing external state. Once the connection is established the state corresponding to the successful authentication attempt can be retrieved via the ServerConn.Permissions field. Note that some third-party libraries misuse the Permissions type by sharing it across authentication attempts; users of third-party libraries should refer to the relevant projects for guidance.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/golang/crypto/commit/b4f1988a35dee11ec3e05d6bf3e90b695fbd8909\">https://github.com/golang/crypto/commit/b4f1988a35dee11ec3e05d6bf3e90b695fbd8909</a></li>\n<li><a href=\"https://go.dev/cl/635315\">https://go.dev/cl/635315</a></li>\n<li><a href=\"https://go.dev/issue/70779\">https://go.dev/issue/70779</a></li>\n<li><a href=\"https://groups.google.com/g/golang-announce/c/-nPEi39gI4Q/m/cGVPJCqdAQAJ\">https://groups.google.com/g/golang-announce/c/-nPEi39gI4Q/m/cGVPJCqdAQAJ</a></li>\n<li><a href=\"https://pkg.go.dev/vuln/GO-2024-3321\">https://pkg.go.dev/vuln/GO-2024-3321</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-45337\">https://nvd.nist.gov/vuln/detail/CVE-2024-45337</a></li>\n<li><a href=\"http://www.openwall.com/lists/oss-security/2024/12/11/2\">http://www.openwall.com/lists/oss-security/2024/12/11/2</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-v778-237x-gjrc\">https://github.com/advisories/GHSA-v778-237x-gjrc</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-v778-237x-gjrc",
            "title": "[golang.org/x/crypto] Misuse of ServerConfig.PublicKeyCallback may cause authorization bypass in golang.org/x/crypto",
            "date_modified": "2024-12-13T21:56:09.000Z",
            "date_published": "2024-12-11T22:03:04.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-v778-237x-gjrc"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"summary\">Summary</h3>\n<p>An arbitrary file read vulnerability exists in Siyuan's /api/template/render endpoint. The absence of proper validation on the path parameter allows attackers to access sensitive files on the host system.</p>\n<h3 id=\"impact\">Impact</h3>\n<p>Arbitrary file read on the host</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/siyuan-note/siyuan/security/advisories/GHSA-xx68-37v4-4596\">https://github.com/siyuan-note/siyuan/security/advisories/GHSA-xx68-37v4-4596</a></li>\n<li><a href=\"https://github.com/siyuan-note/siyuan/commit/e70ed57f6e4852e2bd702671aeb8eb3a47a36d71\">https://github.com/siyuan-note/siyuan/commit/e70ed57f6e4852e2bd702671aeb8eb3a47a36d71</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-55657\">https://nvd.nist.gov/vuln/detail/CVE-2024-55657</a></li>\n<li><a href=\"https://pkg.go.dev/vuln/GO-2024-3327\">https://pkg.go.dev/vuln/GO-2024-3327</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-xx68-37v4-4596\">https://github.com/advisories/GHSA-xx68-37v4-4596</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-xx68-37v4-4596",
            "title": "[github.com/siyuan-note/siyuan/kernel] SiYuan has an arbitrary file read via /api/template/render",
            "date_modified": "2024-12-12T19:18:58.000Z",
            "date_published": "2024-12-11T18:44:52.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-xx68-37v4-4596"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"summary\">Summary</h3>\n<p>The /api/asset/upload endpoint in Siyuan is vulnerable to both arbitrary file write to the host and stored XSS (via the file write).</p>\n<h3 id=\"impact\">Impact</h3>\n<p>Arbitrary file write</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/siyuan-note/siyuan/security/advisories/GHSA-fqj6-whhx-47p7\">https://github.com/siyuan-note/siyuan/security/advisories/GHSA-fqj6-whhx-47p7</a></li>\n<li><a href=\"https://github.com/siyuan-note/siyuan/commit/e70ed57f6e4852e2bd702671aeb8eb3a47a36d71\">https://github.com/siyuan-note/siyuan/commit/e70ed57f6e4852e2bd702671aeb8eb3a47a36d71</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-55659\">https://nvd.nist.gov/vuln/detail/CVE-2024-55659</a></li>\n<li><a href=\"https://pkg.go.dev/vuln/GO-2024-3326\">https://pkg.go.dev/vuln/GO-2024-3326</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-fqj6-whhx-47p7\">https://github.com/advisories/GHSA-fqj6-whhx-47p7</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-fqj6-whhx-47p7",
            "title": "[github.com/siyuan-note/siyuan/kernel] SiYuan has an arbitrary file write in the host via /api/asset/upload",
            "date_modified": "2024-12-12T19:20:14.000Z",
            "date_published": "2024-12-11T18:44:49.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-fqj6-whhx-47p7"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"summary\">Summary</h3>\n<p>Siyuan's /api/export/exportResources endpoint is vulnerable to arbitary file read via path traversal. It is possible to manipulate the paths parameter to access and download arbitrary files from the host system by traversing the workspace directory structure.</p>\n<h3 id=\"impact\">Impact</h3>\n<p>Arbitrary File Read</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/siyuan-note/siyuan/security/advisories/GHSA-25w9-wqfq-gwqx\">https://github.com/siyuan-note/siyuan/security/advisories/GHSA-25w9-wqfq-gwqx</a></li>\n<li><a href=\"https://github.com/siyuan-note/siyuan/commit/e70ed57f6e4852e2bd702671aeb8eb3a47a36d71\">https://github.com/siyuan-note/siyuan/commit/e70ed57f6e4852e2bd702671aeb8eb3a47a36d71</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-55658\">https://nvd.nist.gov/vuln/detail/CVE-2024-55658</a></li>\n<li><a href=\"https://pkg.go.dev/vuln/GO-2024-3323\">https://pkg.go.dev/vuln/GO-2024-3323</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-25w9-wqfq-gwqx\">https://github.com/advisories/GHSA-25w9-wqfq-gwqx</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-25w9-wqfq-gwqx",
            "title": "[github.com/siyuan-note/siyuan/kernel] SiYuan has an arbitrary file read and path traversal via /api/export/exportResources",
            "date_modified": "2024-12-12T19:19:39.000Z",
            "date_published": "2024-12-11T18:44:50.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-25w9-wqfq-gwqx"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"summary\">Summary</h3>\n<p>Siyuan's /api/template/renderSprig endpoint is vulnerable to Server-Side Template Injection (SSTI) through the Sprig template engine. Although the engine has limitations, it allows attackers to access environment variables</p>\n<h3 id=\"impact\">Impact</h3>\n<p>Information leakage</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/siyuan-note/siyuan/security/advisories/GHSA-4pjc-pwgq-q9jp\">https://github.com/siyuan-note/siyuan/security/advisories/GHSA-4pjc-pwgq-q9jp</a></li>\n<li><a href=\"https://github.com/siyuan-note/siyuan/commit/e70ed57f6e4852e2bd702671aeb8eb3a47a36d71\">https://github.com/siyuan-note/siyuan/commit/e70ed57f6e4852e2bd702671aeb8eb3a47a36d71</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-55660\">https://nvd.nist.gov/vuln/detail/CVE-2024-55660</a></li>\n<li><a href=\"https://pkg.go.dev/vuln/GO-2024-3324\">https://pkg.go.dev/vuln/GO-2024-3324</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-4pjc-pwgq-q9jp\">https://github.com/advisories/GHSA-4pjc-pwgq-q9jp</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-4pjc-pwgq-q9jp",
            "title": "[github.com/siyuan-note/siyuan/kernel] SiYuan has an SSTI via /api/template/renderSprig",
            "date_modified": "2024-12-12T19:20:33.000Z",
            "date_published": "2024-12-11T18:44:47.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-4pjc-pwgq-q9jp"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p><a href=\"https://kubernetes.io/docs/reference/access-authn-authz/authentication/#user-impersonation\">Impersonation</a> is a feature of the Kubernetes API, allowing to override user information. As downstream project, kcp inherits this feature. As per the linked documentation a specific level of privilege (usually assigned to cluster admins) is required for impersonation.</p>\n<p>The vulnerability in kcp affects kcp installations in which users are granted the <code>cluster-admin</code> ClusterRole (or comparably high permission levels that grant impersonation access; the verb in question is <code>impersonate</code>) within their respective workspaces. As kcp builds around self-service confined within workspaces, most installations would likely grant such workspace access to their users. Such users can impersonate special global administrative groups, which circumvent parts of the authorizer chains, e.g. <a href=\"https://docs.kcp.io/kcp/v0.26/concepts/apis/exporting-apis/#maximal-permission-policy\">maximal permission policies</a>.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>The problem has been patched in #3206 and is available in kcp 0.26.1 and higher.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<ul>\n<li>Not assigning the <code>cluster-admin</code> role (or any other role granting blanket impersonation permissions) to users.</li>\n<li>A reverse proxy between users and kcp to check for the <code>Impersonate-Group</code> header and reject requests that impersonate global administrative groups.</li>\n</ul>\n<h3 id=\"references\">References</h3>\n<p>See the pull request (#3206).</p>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/kcp-dev/kcp/security/advisories/GHSA-c7xh-gjv4-4jgv\">https://github.com/kcp-dev/kcp/security/advisories/GHSA-c7xh-gjv4-4jgv</a></li>\n<li><a href=\"https://github.com/kcp-dev/kcp/pull/3206\">https://github.com/kcp-dev/kcp/pull/3206</a></li>\n<li><a href=\"https://github.com/kcp-dev/kcp/commit/24ab5d4dc35ddff98a2e5fdc236e1681f03283ec\">https://github.com/kcp-dev/kcp/commit/24ab5d4dc35ddff98a2e5fdc236e1681f03283ec</a></li>\n<li><a href=\"https://pkg.go.dev/vuln/GO-2024-3325\">https://pkg.go.dev/vuln/GO-2024-3325</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-c7xh-gjv4-4jgv\">https://github.com/advisories/GHSA-c7xh-gjv4-4jgv</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-c7xh-gjv4-4jgv",
            "title": "[github.com/kcp-dev/kcp] kcp's impersonation allows access to global administrative groups",
            "date_modified": "2024-12-12T19:33:15.000Z",
            "date_published": "2024-12-11T18:42:30.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-c7xh-gjv4-4jgv"
            },
            "tags": [
                "severity"
            ]
        }
    ]
}