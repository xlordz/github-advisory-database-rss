{
    "version": "https://jsonfeed.org/version/1",
    "title": "Security Advisory for Go modules",
    "home_page_url": "https://github.com/advisories?query=type%3Areviewed+ecosystem%3Ago",
    "feed_url": "https://azu.github.io/github-advisory-database-rss/go.json",
    "description": "Security Advisory for Go modules on GitHub",
    "items": [
        {
            "content_html": "<h1 id=\"issue\">Issue</h1>\n<p>Snowflake discovered and remediated a vulnerability in the Go Snowflake Driver (“Driver”). When using the Easy Logging feature on Linux and macOS, the Driver didn’t correctly verify the permissions of the logging configuration file, potentially allowing an attacker with local access to overwrite the configuration and gain control over logging level and output location.</p>\n<p>This vulnerability affects Driver versions from 1.7.0 up to, but not including, 1.13.3. Snowflake fixed the issue in version 1.13.3.</p>\n<h1 id=\"vulnerability-details\">Vulnerability Details</h1>\n<p>When using the Easy Logging feature on Linux and macOS, the Driver reads logging configuration from a user-provided file. On Linux and macOS the Driver verifies that the configuration file can be written to only by its owner. That check was vulnerable to a Time-of-Check to Time-of-Use (TOCTOU) race condition and failed to verify that the file owner matches the user running the Driver. This could allow a local attacker with write access to the configuration file or the directory containing it to overwrite the configuration and gain control over logging level and output location.</p>\n<h1 id=\"solution\">Solution</h1>\n<p>Snowflake released version 1.13.3 of the Go Snowflake Driver, which fixes this issue. We recommend users upgrade to version 1.13.3.</p>\n<h1 id=\"additional-information\">Additional Information</h1>\n<p>If you discover a security vulnerability in one of our products or websites, please report the issue to Snowflake through our Vulnerability Disclosure Program hosted at HackerOne. For more information, please see our <a href=\"https://hackerone.com/snowflake?type=team\">Vulnerability Disclosure Policy</a>.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/snowflakedb/gosnowflake/security/advisories/GHSA-6jgm-j7h2-2fqg\">https://github.com/snowflakedb/gosnowflake/security/advisories/GHSA-6jgm-j7h2-2fqg</a></li>\n<li><a href=\"https://github.com/snowflakedb/gosnowflake/commit/ba94a4800e23621eff558ef18ce4b96ec5489ff0\">https://github.com/snowflakedb/gosnowflake/commit/ba94a4800e23621eff558ef18ce4b96ec5489ff0</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2025-46327\">https://nvd.nist.gov/vuln/detail/CVE-2025-46327</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-6jgm-j7h2-2fqg\">https://github.com/advisories/GHSA-6jgm-j7h2-2fqg</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-6jgm-j7h2-2fqg",
            "title": "[github.com/snowflakedb/gosnowflake] Go Snowflake Driver has race condition when checking access to Easy Logging configuration file",
            "date_modified": "2025-04-29T13:10:42.000Z",
            "date_published": "2025-04-28T20:27:29.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-6jgm-j7h2-2fqg"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>A vulnerability has been identified in Steve where by default it was using an insecure option that did not validate the certificate presented by the remote server while performing a TLS connection. This could allow the execution of a man-in-the-middle (MitM) attack against services using Steve.</p>\n<p>For example, Rancher relies on Steve as a dependency for its user interface (UI) to proxy requests to Kubernetes clusters. Users who have the permission to create a service in Rancher’s local cluster can take over Rancher’s UI and display their own UI to gather sensitive information. This is only possible when the setting <code>ui-offline-preferred</code> is manually set to <code>remote</code> (by default Rancher sets it to <code>dynamic</code>). This enables further attacks such as cross-site scripting (XSS), or tampering the UI to collect passwords from other users etc.</p>\n<p>Please consult the associated  <a href=\"https://attack.mitre.org/techniques/T1557/\">MITRE ATT&amp;CK - Technique - Adversary-in-the-Middle</a> for further information about this category of attack.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>Patched versions of Steve include releases <code>v0.2.1</code>, <code>v0.3.3</code>, <code>v0.4.4</code> and <code>v0.5.13</code>.</p>\n<p>This vulnerability is addressed by changing Steve to always verify a server’s certificate based on Go’s TLS settings.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>If you can't upgrade to a fixed version, please make sure that you are only using Steve to connect to trusted servers.</p>\n<h3 id=\"references\">References</h3>\n<p>If you have any questions or comments about this advisory:</p>\n<ul>\n<li>Reach out to the <a href=\"https://github.com/rancher/rancher/security/policy\">SUSE Rancher Security team</a> for security related inquiries.</li>\n<li>Open an issue in the <a href=\"https://github.com/rancher/rancher/issues/new/choose\">Rancher</a> repository.</li>\n<li>Verify with our <a href=\"https://www.suse.com/suse-rancher/support-matrix/all-supported-versions/\">support matrix</a> and <a href=\"https://www.suse.com/lifecycle/\">product support lifecycle</a>.</li>\n</ul>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/rancher/steve/security/advisories/GHSA-95fc-g4gj-mqmx\">https://github.com/rancher/steve/security/advisories/GHSA-95fc-g4gj-mqmx</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-95fc-g4gj-mqmx\">https://github.com/advisories/GHSA-95fc-g4gj-mqmx</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-95fc-g4gj-mqmx",
            "title": "[github.com/rancher/steve] Steve doesn’t verify a server’s certificate and is susceptible to man-in-the-middle (MitM) attacks",
            "date_modified": "2025-04-25T15:12:45.000Z",
            "date_published": "2025-04-25T15:12:44.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-95fc-g4gj-mqmx"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>A vulnerability has been identified in Steve where by default it was using an insecure option that did not validate the certificate presented by the remote server while performing a TLS connection. This could allow the execution of a man-in-the-middle (MitM) attack against services using Steve.</p>\n<p>For example, Rancher relies on Steve as a dependency for its user interface (UI) to proxy requests to Kubernetes clusters. Users who have the permission to create a service in Rancher’s local cluster can take over Rancher’s UI and display their own UI to gather sensitive information. This is only possible when the setting <code>ui-offline-preferred</code> is manually set to <code>remote</code> (by default Rancher sets it to <code>dynamic</code>). This enables further attacks such as cross-site scripting (XSS), or tampering the UI to collect passwords from other users etc.</p>\n<p>Please consult the associated  <a href=\"https://attack.mitre.org/techniques/T1557/\">MITRE ATT&amp;CK - Technique - Adversary-in-the-Middle</a> for further information about this category of attack.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>Patched versions of Steve include releases <code>v0.2.1</code>, <code>v0.3.3</code>, <code>v0.4.4</code> and <code>v0.5.13</code>.</p>\n<p>This vulnerability is addressed by changing Steve to always verify a server’s certificate based on Go’s TLS settings.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>If you can't upgrade to a fixed version, please make sure that you are only using Steve to connect to trusted servers.</p>\n<h3 id=\"references\">References</h3>\n<p>If you have any questions or comments about this advisory:</p>\n<ul>\n<li>Reach out to the <a href=\"https://github.com/rancher/rancher/security/policy\">SUSE Rancher Security team</a> for security related inquiries.</li>\n<li>Open an issue in the <a href=\"https://github.com/rancher/rancher/issues/new/choose\">Rancher</a> repository.</li>\n<li>Verify with our <a href=\"https://www.suse.com/suse-rancher/support-matrix/all-supported-versions/\">support matrix</a> and <a href=\"https://www.suse.com/lifecycle/\">product support lifecycle</a>.</li>\n</ul>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/rancher/steve/security/advisories/GHSA-95fc-g4gj-mqmx\">https://github.com/rancher/steve/security/advisories/GHSA-95fc-g4gj-mqmx</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-95fc-g4gj-mqmx\">https://github.com/advisories/GHSA-95fc-g4gj-mqmx</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-95fc-g4gj-mqmx",
            "title": "[github.com/rancher/steve] Steve doesn’t verify a server’s certificate and is susceptible to man-in-the-middle (MitM) attacks",
            "date_modified": "2025-04-25T15:12:45.000Z",
            "date_published": "2025-04-25T15:12:44.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-95fc-g4gj-mqmx"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>A vulnerability has been identified in Steve where by default it was using an insecure option that did not validate the certificate presented by the remote server while performing a TLS connection. This could allow the execution of a man-in-the-middle (MitM) attack against services using Steve.</p>\n<p>For example, Rancher relies on Steve as a dependency for its user interface (UI) to proxy requests to Kubernetes clusters. Users who have the permission to create a service in Rancher’s local cluster can take over Rancher’s UI and display their own UI to gather sensitive information. This is only possible when the setting <code>ui-offline-preferred</code> is manually set to <code>remote</code> (by default Rancher sets it to <code>dynamic</code>). This enables further attacks such as cross-site scripting (XSS), or tampering the UI to collect passwords from other users etc.</p>\n<p>Please consult the associated  <a href=\"https://attack.mitre.org/techniques/T1557/\">MITRE ATT&amp;CK - Technique - Adversary-in-the-Middle</a> for further information about this category of attack.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>Patched versions of Steve include releases <code>v0.2.1</code>, <code>v0.3.3</code>, <code>v0.4.4</code> and <code>v0.5.13</code>.</p>\n<p>This vulnerability is addressed by changing Steve to always verify a server’s certificate based on Go’s TLS settings.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>If you can't upgrade to a fixed version, please make sure that you are only using Steve to connect to trusted servers.</p>\n<h3 id=\"references\">References</h3>\n<p>If you have any questions or comments about this advisory:</p>\n<ul>\n<li>Reach out to the <a href=\"https://github.com/rancher/rancher/security/policy\">SUSE Rancher Security team</a> for security related inquiries.</li>\n<li>Open an issue in the <a href=\"https://github.com/rancher/rancher/issues/new/choose\">Rancher</a> repository.</li>\n<li>Verify with our <a href=\"https://www.suse.com/suse-rancher/support-matrix/all-supported-versions/\">support matrix</a> and <a href=\"https://www.suse.com/lifecycle/\">product support lifecycle</a>.</li>\n</ul>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/rancher/steve/security/advisories/GHSA-95fc-g4gj-mqmx\">https://github.com/rancher/steve/security/advisories/GHSA-95fc-g4gj-mqmx</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-95fc-g4gj-mqmx\">https://github.com/advisories/GHSA-95fc-g4gj-mqmx</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-95fc-g4gj-mqmx",
            "title": "[github.com/rancher/stev] Steve doesn’t verify a server’s certificate and is susceptible to man-in-the-middle (MitM) attacks",
            "date_modified": "2025-04-25T15:12:45.000Z",
            "date_published": "2025-04-25T15:12:44.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-95fc-g4gj-mqmx"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>A vulnerability has been identified in Steve where by default it was using an insecure option that did not validate the certificate presented by the remote server while performing a TLS connection. This could allow the execution of a man-in-the-middle (MitM) attack against services using Steve.</p>\n<p>For example, Rancher relies on Steve as a dependency for its user interface (UI) to proxy requests to Kubernetes clusters. Users who have the permission to create a service in Rancher’s local cluster can take over Rancher’s UI and display their own UI to gather sensitive information. This is only possible when the setting <code>ui-offline-preferred</code> is manually set to <code>remote</code> (by default Rancher sets it to <code>dynamic</code>). This enables further attacks such as cross-site scripting (XSS), or tampering the UI to collect passwords from other users etc.</p>\n<p>Please consult the associated  <a href=\"https://attack.mitre.org/techniques/T1557/\">MITRE ATT&amp;CK - Technique - Adversary-in-the-Middle</a> for further information about this category of attack.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>Patched versions of Steve include releases <code>v0.2.1</code>, <code>v0.3.3</code>, <code>v0.4.4</code> and <code>v0.5.13</code>.</p>\n<p>This vulnerability is addressed by changing Steve to always verify a server’s certificate based on Go’s TLS settings.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>If you can't upgrade to a fixed version, please make sure that you are only using Steve to connect to trusted servers.</p>\n<h3 id=\"references\">References</h3>\n<p>If you have any questions or comments about this advisory:</p>\n<ul>\n<li>Reach out to the <a href=\"https://github.com/rancher/rancher/security/policy\">SUSE Rancher Security team</a> for security related inquiries.</li>\n<li>Open an issue in the <a href=\"https://github.com/rancher/rancher/issues/new/choose\">Rancher</a> repository.</li>\n<li>Verify with our <a href=\"https://www.suse.com/suse-rancher/support-matrix/all-supported-versions/\">support matrix</a> and <a href=\"https://www.suse.com/lifecycle/\">product support lifecycle</a>.</li>\n</ul>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/rancher/steve/security/advisories/GHSA-95fc-g4gj-mqmx\">https://github.com/rancher/steve/security/advisories/GHSA-95fc-g4gj-mqmx</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-95fc-g4gj-mqmx\">https://github.com/advisories/GHSA-95fc-g4gj-mqmx</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-95fc-g4gj-mqmx",
            "title": "[github.com/rancher/steve] Steve doesn’t verify a server’s certificate and is susceptible to man-in-the-middle (MitM) attacks",
            "date_modified": "2025-04-25T15:12:45.000Z",
            "date_published": "2025-04-25T15:12:44.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-95fc-g4gj-mqmx"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>A vulnerability has been identified within Fleet where, by default, Fleet will automatically trust a remote server’s certificate when connecting through SSH if the certificate isn’t set in the <code>known_hosts</code> file. This could allow the execution of a man-in-the-middle (MitM) attack against Fleet. In case the server that is being connected to has a trusted entry in the known_hosts file, then Fleet will correctly check the authenticity of the presented certificate. </p>\n<p>Please consult the associated  <a href=\"https://attack.mitre.org/techniques/T1557/\">MITRE ATT&amp;CK - Technique - Adversary-in-the-Middle</a> for further information about this category of attack.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>Patched versions include releases <code>v0.10.12</code>, <code>v0.11.7</code> and <code>v0.12.2</code>.</p>\n<p>The fix involves some key areas with the following changes:</p>\n<ul>\n<li><p>Git latest commit fetcher sources <code>known_hosts</code> entries from the following locations, in decreasing order of priority:</p>\n<ol>\n<li>Secret referenced in a <code>GitRepo</code>’s <code>clientSecretName</code> field;</li>\n<li>If no secret is referenced, in a <code>gitcredential</code> secret located in the <code>GitRepo</code>’s namespace;</li>\n<li>If that secret does not exist, in a (new) <code>known-hosts</code> config map installed by Fleet, populated statically with public entries shared by a few git providers: Github, Gitlab, Bitbucket, Azure DevOps;</li>\n</ol>\n</li>\n<li><p>Git cloner: same as above.</p>\n</li>\n<li><p><code>fleet apply</code> command: same as above. The command reads entries from a <code>FLEET_KNOWN_HOSTS</code> environment variable. That command is typically run within a container inside a job pod created by Fleet to update bundles from a new commit. However, users may also decide to run it locally, perhaps even with multiple concurrent executions of the command on the same machine. To cater for this, <code>fleet apply</code> writes the contents of <code>FLEET_KNOWN_HOSTS</code>, if any, to a temporary file with a random name, and deletes that file once bundles have been created. This reduces the risk of conflicts between concurrent runs.\nThis happens regardless of the git repository URL (SSH or not), since a repository may reference artifacts to be retrieved using SSH anyway.</p>\n</li>\n</ul>\n<p><strong>Note about sourcing <code>known_hosts</code> entries:</strong> if entries are found in a supported source, whatever that source may be, then those entries will be used. For instance, if wrong entries, or an incomplete set of entries (e.g. only BitBucket entries for a <code>GitRepo</code> pointing to Github) are found in a secret referenced in a <code>GitRepo</code>’s <code>clientSecretName</code> field, they will still be used. This will lead to errors if strict host key checks are enabled, even if matching, correct entries are found in another source with lower priority, such as the <code>known-hosts</code> config map. Fleet will not use one source to complement the other.</p>\n<p><strong>Note: Fleet v0.9 release line does not have the fix for this CVE. The fix for v0.9 was considered too complex and with the risk of introducing instabilities right before this version goes into end-of-life (EOL), as documented in <a href=\"https://www.suse.com/lifecycle/#suse-rancher-prime\">SUSE’s Product Support Lifecycle</a> page. Please see the section below for workarounds or consider upgrading to a newer and patched version of Rancher.</strong></p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>There are no workarounds for this issue. Users are recommended to upgrade, as soon as possible, to a version of Fleet that contains the fixes.</p>\n<h3 id=\"references\">References</h3>\n<p>If you have any questions or comments about this advisory:</p>\n<ul>\n<li>Reach out to the <a href=\"https://github.com/rancher/rancher/security/policy\">SUSE Rancher Security team</a> for security related inquiries.</li>\n<li>Open an issue in the <a href=\"https://github.com/rancher/rancher/issues/new/choose\">Rancher</a> repository.</li>\n<li>Verify with our <a href=\"https://www.suse.com/suse-rancher/support-matrix/all-supported-versions/\">support matrix</a> and <a href=\"https://www.suse.com/lifecycle/\">product support lifecycle</a>.</li>\n</ul>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/rancher/fleet/security/advisories/GHSA-xgpc-q899-67p8\">https://github.com/rancher/fleet/security/advisories/GHSA-xgpc-q899-67p8</a></li>\n<li><a href=\"https://github.com/rancher/fleet/pull/3571\">https://github.com/rancher/fleet/pull/3571</a></li>\n<li><a href=\"https://github.com/rancher/fleet/pull/3572\">https://github.com/rancher/fleet/pull/3572</a></li>\n<li><a href=\"https://github.com/rancher/fleet/pull/3573\">https://github.com/rancher/fleet/pull/3573</a></li>\n<li><a href=\"https://github.com/rancher/fleet/releases/tag/v0.10.12\">https://github.com/rancher/fleet/releases/tag/v0.10.12</a></li>\n<li><a href=\"https://github.com/rancher/fleet/releases/tag/v0.11.7\">https://github.com/rancher/fleet/releases/tag/v0.11.7</a></li>\n<li><a href=\"https://github.com/rancher/fleet/releases/tag/v0.12.2\">https://github.com/rancher/fleet/releases/tag/v0.12.2</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-xgpc-q899-67p8\">https://github.com/advisories/GHSA-xgpc-q899-67p8</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-xgpc-q899-67p8",
            "title": "[github.com/rancher/fleet] Fleet doesn’t validate a server’s certificate when connecting through SSH",
            "date_modified": "2025-04-25T15:11:08.000Z",
            "date_published": "2025-04-25T15:11:07.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-xgpc-q899-67p8"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>A vulnerability has been identified within Fleet where, by default, Fleet will automatically trust a remote server’s certificate when connecting through SSH if the certificate isn’t set in the <code>known_hosts</code> file. This could allow the execution of a man-in-the-middle (MitM) attack against Fleet. In case the server that is being connected to has a trusted entry in the known_hosts file, then Fleet will correctly check the authenticity of the presented certificate. </p>\n<p>Please consult the associated  <a href=\"https://attack.mitre.org/techniques/T1557/\">MITRE ATT&amp;CK - Technique - Adversary-in-the-Middle</a> for further information about this category of attack.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>Patched versions include releases <code>v0.10.12</code>, <code>v0.11.7</code> and <code>v0.12.2</code>.</p>\n<p>The fix involves some key areas with the following changes:</p>\n<ul>\n<li><p>Git latest commit fetcher sources <code>known_hosts</code> entries from the following locations, in decreasing order of priority:</p>\n<ol>\n<li>Secret referenced in a <code>GitRepo</code>’s <code>clientSecretName</code> field;</li>\n<li>If no secret is referenced, in a <code>gitcredential</code> secret located in the <code>GitRepo</code>’s namespace;</li>\n<li>If that secret does not exist, in a (new) <code>known-hosts</code> config map installed by Fleet, populated statically with public entries shared by a few git providers: Github, Gitlab, Bitbucket, Azure DevOps;</li>\n</ol>\n</li>\n<li><p>Git cloner: same as above.</p>\n</li>\n<li><p><code>fleet apply</code> command: same as above. The command reads entries from a <code>FLEET_KNOWN_HOSTS</code> environment variable. That command is typically run within a container inside a job pod created by Fleet to update bundles from a new commit. However, users may also decide to run it locally, perhaps even with multiple concurrent executions of the command on the same machine. To cater for this, <code>fleet apply</code> writes the contents of <code>FLEET_KNOWN_HOSTS</code>, if any, to a temporary file with a random name, and deletes that file once bundles have been created. This reduces the risk of conflicts between concurrent runs.\nThis happens regardless of the git repository URL (SSH or not), since a repository may reference artifacts to be retrieved using SSH anyway.</p>\n</li>\n</ul>\n<p><strong>Note about sourcing <code>known_hosts</code> entries:</strong> if entries are found in a supported source, whatever that source may be, then those entries will be used. For instance, if wrong entries, or an incomplete set of entries (e.g. only BitBucket entries for a <code>GitRepo</code> pointing to Github) are found in a secret referenced in a <code>GitRepo</code>’s <code>clientSecretName</code> field, they will still be used. This will lead to errors if strict host key checks are enabled, even if matching, correct entries are found in another source with lower priority, such as the <code>known-hosts</code> config map. Fleet will not use one source to complement the other.</p>\n<p><strong>Note: Fleet v0.9 release line does not have the fix for this CVE. The fix for v0.9 was considered too complex and with the risk of introducing instabilities right before this version goes into end-of-life (EOL), as documented in <a href=\"https://www.suse.com/lifecycle/#suse-rancher-prime\">SUSE’s Product Support Lifecycle</a> page. Please see the section below for workarounds or consider upgrading to a newer and patched version of Rancher.</strong></p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>There are no workarounds for this issue. Users are recommended to upgrade, as soon as possible, to a version of Fleet that contains the fixes.</p>\n<h3 id=\"references\">References</h3>\n<p>If you have any questions or comments about this advisory:</p>\n<ul>\n<li>Reach out to the <a href=\"https://github.com/rancher/rancher/security/policy\">SUSE Rancher Security team</a> for security related inquiries.</li>\n<li>Open an issue in the <a href=\"https://github.com/rancher/rancher/issues/new/choose\">Rancher</a> repository.</li>\n<li>Verify with our <a href=\"https://www.suse.com/suse-rancher/support-matrix/all-supported-versions/\">support matrix</a> and <a href=\"https://www.suse.com/lifecycle/\">product support lifecycle</a>.</li>\n</ul>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/rancher/fleet/security/advisories/GHSA-xgpc-q899-67p8\">https://github.com/rancher/fleet/security/advisories/GHSA-xgpc-q899-67p8</a></li>\n<li><a href=\"https://github.com/rancher/fleet/pull/3571\">https://github.com/rancher/fleet/pull/3571</a></li>\n<li><a href=\"https://github.com/rancher/fleet/pull/3572\">https://github.com/rancher/fleet/pull/3572</a></li>\n<li><a href=\"https://github.com/rancher/fleet/pull/3573\">https://github.com/rancher/fleet/pull/3573</a></li>\n<li><a href=\"https://github.com/rancher/fleet/releases/tag/v0.10.12\">https://github.com/rancher/fleet/releases/tag/v0.10.12</a></li>\n<li><a href=\"https://github.com/rancher/fleet/releases/tag/v0.11.7\">https://github.com/rancher/fleet/releases/tag/v0.11.7</a></li>\n<li><a href=\"https://github.com/rancher/fleet/releases/tag/v0.12.2\">https://github.com/rancher/fleet/releases/tag/v0.12.2</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-xgpc-q899-67p8\">https://github.com/advisories/GHSA-xgpc-q899-67p8</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-xgpc-q899-67p8",
            "title": "[github.com/rancher/fleet] Fleet doesn’t validate a server’s certificate when connecting through SSH",
            "date_modified": "2025-04-25T15:11:08.000Z",
            "date_published": "2025-04-25T15:11:07.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-xgpc-q899-67p8"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>A vulnerability has been identified within Fleet where, by default, Fleet will automatically trust a remote server’s certificate when connecting through SSH if the certificate isn’t set in the <code>known_hosts</code> file. This could allow the execution of a man-in-the-middle (MitM) attack against Fleet. In case the server that is being connected to has a trusted entry in the known_hosts file, then Fleet will correctly check the authenticity of the presented certificate. </p>\n<p>Please consult the associated  <a href=\"https://attack.mitre.org/techniques/T1557/\">MITRE ATT&amp;CK - Technique - Adversary-in-the-Middle</a> for further information about this category of attack.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>Patched versions include releases <code>v0.10.12</code>, <code>v0.11.7</code> and <code>v0.12.2</code>.</p>\n<p>The fix involves some key areas with the following changes:</p>\n<ul>\n<li><p>Git latest commit fetcher sources <code>known_hosts</code> entries from the following locations, in decreasing order of priority:</p>\n<ol>\n<li>Secret referenced in a <code>GitRepo</code>’s <code>clientSecretName</code> field;</li>\n<li>If no secret is referenced, in a <code>gitcredential</code> secret located in the <code>GitRepo</code>’s namespace;</li>\n<li>If that secret does not exist, in a (new) <code>known-hosts</code> config map installed by Fleet, populated statically with public entries shared by a few git providers: Github, Gitlab, Bitbucket, Azure DevOps;</li>\n</ol>\n</li>\n<li><p>Git cloner: same as above.</p>\n</li>\n<li><p><code>fleet apply</code> command: same as above. The command reads entries from a <code>FLEET_KNOWN_HOSTS</code> environment variable. That command is typically run within a container inside a job pod created by Fleet to update bundles from a new commit. However, users may also decide to run it locally, perhaps even with multiple concurrent executions of the command on the same machine. To cater for this, <code>fleet apply</code> writes the contents of <code>FLEET_KNOWN_HOSTS</code>, if any, to a temporary file with a random name, and deletes that file once bundles have been created. This reduces the risk of conflicts between concurrent runs.\nThis happens regardless of the git repository URL (SSH or not), since a repository may reference artifacts to be retrieved using SSH anyway.</p>\n</li>\n</ul>\n<p><strong>Note about sourcing <code>known_hosts</code> entries:</strong> if entries are found in a supported source, whatever that source may be, then those entries will be used. For instance, if wrong entries, or an incomplete set of entries (e.g. only BitBucket entries for a <code>GitRepo</code> pointing to Github) are found in a secret referenced in a <code>GitRepo</code>’s <code>clientSecretName</code> field, they will still be used. This will lead to errors if strict host key checks are enabled, even if matching, correct entries are found in another source with lower priority, such as the <code>known-hosts</code> config map. Fleet will not use one source to complement the other.</p>\n<p><strong>Note: Fleet v0.9 release line does not have the fix for this CVE. The fix for v0.9 was considered too complex and with the risk of introducing instabilities right before this version goes into end-of-life (EOL), as documented in <a href=\"https://www.suse.com/lifecycle/#suse-rancher-prime\">SUSE’s Product Support Lifecycle</a> page. Please see the section below for workarounds or consider upgrading to a newer and patched version of Rancher.</strong></p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>There are no workarounds for this issue. Users are recommended to upgrade, as soon as possible, to a version of Fleet that contains the fixes.</p>\n<h3 id=\"references\">References</h3>\n<p>If you have any questions or comments about this advisory:</p>\n<ul>\n<li>Reach out to the <a href=\"https://github.com/rancher/rancher/security/policy\">SUSE Rancher Security team</a> for security related inquiries.</li>\n<li>Open an issue in the <a href=\"https://github.com/rancher/rancher/issues/new/choose\">Rancher</a> repository.</li>\n<li>Verify with our <a href=\"https://www.suse.com/suse-rancher/support-matrix/all-supported-versions/\">support matrix</a> and <a href=\"https://www.suse.com/lifecycle/\">product support lifecycle</a>.</li>\n</ul>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/rancher/fleet/security/advisories/GHSA-xgpc-q899-67p8\">https://github.com/rancher/fleet/security/advisories/GHSA-xgpc-q899-67p8</a></li>\n<li><a href=\"https://github.com/rancher/fleet/pull/3571\">https://github.com/rancher/fleet/pull/3571</a></li>\n<li><a href=\"https://github.com/rancher/fleet/pull/3572\">https://github.com/rancher/fleet/pull/3572</a></li>\n<li><a href=\"https://github.com/rancher/fleet/pull/3573\">https://github.com/rancher/fleet/pull/3573</a></li>\n<li><a href=\"https://github.com/rancher/fleet/releases/tag/v0.10.12\">https://github.com/rancher/fleet/releases/tag/v0.10.12</a></li>\n<li><a href=\"https://github.com/rancher/fleet/releases/tag/v0.11.7\">https://github.com/rancher/fleet/releases/tag/v0.11.7</a></li>\n<li><a href=\"https://github.com/rancher/fleet/releases/tag/v0.12.2\">https://github.com/rancher/fleet/releases/tag/v0.12.2</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-xgpc-q899-67p8\">https://github.com/advisories/GHSA-xgpc-q899-67p8</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-xgpc-q899-67p8",
            "title": "[github.com/rancher/fleet] Fleet doesn’t validate a server’s certificate when connecting through SSH",
            "date_modified": "2025-04-25T15:11:08.000Z",
            "date_published": "2025-04-25T15:11:07.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-xgpc-q899-67p8"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>A vulnerability has been identified within Rancher where a user with the ability to create a project, on a certain cluster, can create a project with the same name as an existing project in a different cluster. This results in the user gaining access to the other project in the different cluster, resulting in a privilege escalation. This happens because the namespace used on the local cluster to store related resources (PRTBs and secrets) is the name of the project.</p>\n<p>Please consult the associated  <a href=\"https://attack.mitre.org/tactics/TA0004/\">MITRE ATT&amp;CK - Technique - Privilege Escalation</a> for further information about this category of attack.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>Patched versions include releases <code>v2.11.1</code>, <code>v2.10.5</code>, <code>v2.9.9</code>.</p>\n<p>The fix involves the following changes:</p>\n<p><strong>Rancher:</strong></p>\n<ul>\n<li>Instead of using the project name as the namespace, Rancher will instead be using a new field on the project spec called backingNamespace. If that field exists, use that for the project namespace going forward. However, if the project does not have that field filled out (likely because it existed before this change), Rancher will continue using the name for the namespace.</li>\n</ul>\n<p><strong>Rancher Webhook:</strong></p>\n<ul>\n<li>New mutation on create <code>project.Status.BackingNamespace</code> to be <code>SafeConcatName(project.Spec.ClusterName, project.Name)</code>;</li>\n<li>Generate the name manually within the mutating webhook, because normally, name generation happens after the mutating webhooks;</li>\n<li>Removed a validation where <code>projectName</code> and <code>Namespace</code> had to be the same for PRTBs, since PRTBs now go in <code>project.BackingNamespace</code>;</li>\n<li>On update, if <code>BackingNamespace</code> isn't set, set it to <code>project.Name</code>. For existing objects after update this will help unify them to the new projects.</li>\n<li>The <code>BackingNamespace</code> can't be edited after it's set.</li>\n</ul>\n<p><strong>Note: Rancher v2.8 release line does not have the fix for this CVE. The fix for v2.8 was considered too complex and with the risk of introducing instabilities right before this version goes into end-of-life (EOL), as documented in <a href=\"https://www.suse.com/lifecycle/#suse-rancher-prime\">SUSE’s Product Support Lifecycle</a> page. Please see the section below for workarounds or consider upgrading to a newer and patched version of Rancher.</strong></p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>If you can't upgrade to a fixed version, please make sure that:</p>\n<ul>\n<li>Users are not allowed to create projects with the same object names from another cluster.</li>\n</ul>\n<p>To identify if this security issue could have been abused within your system, you need to find if there are any projects with the same name but on different clusters. To do that, run the following command in the local cluster as an administrator:</p>\n<pre><code>kubectl get projects -A -o=custom-columns='NAME:metadata.name' | sort | uniq -c\n</code></pre>\n<p>That command will list all project names, and show the instances of each name. Any project with more than 1 instance is affected by this security issue. To remedy the situation, the projects will need to be deleted and re-created to ensure no namespace collisions happen. While it would be possible to delete all but 1 of the projects with the same name, this is unadvisable because a user could have given themselves access to the wrong project.</p>\n<h3 id=\"references\">References</h3>\n<p>If you have any questions or comments about this advisory:</p>\n<ul>\n<li>Reach out to the <a href=\"https://github.com/rancher/rancher/security/policy\">SUSE Rancher Security team</a> for security related inquiries.</li>\n<li>Open an issue in the <a href=\"https://github.com/rancher/rancher/issues/new/choose\">Rancher</a> repository.</li>\n<li>Verify with our <a href=\"https://www.suse.com/suse-rancher/support-matrix/all-supported-versions/\">support matrix</a> and <a href=\"https://www.suse.com/lifecycle/\">product support lifecycle</a>.</li>\n</ul>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/rancher/rancher/security/advisories/GHSA-8h6m-wv39-239m\">https://github.com/rancher/rancher/security/advisories/GHSA-8h6m-wv39-239m</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-8h6m-wv39-239m\">https://github.com/advisories/GHSA-8h6m-wv39-239m</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-8h6m-wv39-239m",
            "title": "[github.com/rancher/rancher] Rancher users who can create Projects can gain access to arbitrary projects",
            "date_modified": "2025-04-25T15:09:27.000Z",
            "date_published": "2025-04-25T15:09:26.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-8h6m-wv39-239m"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>A vulnerability has been identified within Rancher where a user with the ability to create a project, on a certain cluster, can create a project with the same name as an existing project in a different cluster. This results in the user gaining access to the other project in the different cluster, resulting in a privilege escalation. This happens because the namespace used on the local cluster to store related resources (PRTBs and secrets) is the name of the project.</p>\n<p>Please consult the associated  <a href=\"https://attack.mitre.org/tactics/TA0004/\">MITRE ATT&amp;CK - Technique - Privilege Escalation</a> for further information about this category of attack.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>Patched versions include releases <code>v2.11.1</code>, <code>v2.10.5</code>, <code>v2.9.9</code>.</p>\n<p>The fix involves the following changes:</p>\n<p><strong>Rancher:</strong></p>\n<ul>\n<li>Instead of using the project name as the namespace, Rancher will instead be using a new field on the project spec called backingNamespace. If that field exists, use that for the project namespace going forward. However, if the project does not have that field filled out (likely because it existed before this change), Rancher will continue using the name for the namespace.</li>\n</ul>\n<p><strong>Rancher Webhook:</strong></p>\n<ul>\n<li>New mutation on create <code>project.Status.BackingNamespace</code> to be <code>SafeConcatName(project.Spec.ClusterName, project.Name)</code>;</li>\n<li>Generate the name manually within the mutating webhook, because normally, name generation happens after the mutating webhooks;</li>\n<li>Removed a validation where <code>projectName</code> and <code>Namespace</code> had to be the same for PRTBs, since PRTBs now go in <code>project.BackingNamespace</code>;</li>\n<li>On update, if <code>BackingNamespace</code> isn't set, set it to <code>project.Name</code>. For existing objects after update this will help unify them to the new projects.</li>\n<li>The <code>BackingNamespace</code> can't be edited after it's set.</li>\n</ul>\n<p><strong>Note: Rancher v2.8 release line does not have the fix for this CVE. The fix for v2.8 was considered too complex and with the risk of introducing instabilities right before this version goes into end-of-life (EOL), as documented in <a href=\"https://www.suse.com/lifecycle/#suse-rancher-prime\">SUSE’s Product Support Lifecycle</a> page. Please see the section below for workarounds or consider upgrading to a newer and patched version of Rancher.</strong></p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>If you can't upgrade to a fixed version, please make sure that:</p>\n<ul>\n<li>Users are not allowed to create projects with the same object names from another cluster.</li>\n</ul>\n<p>To identify if this security issue could have been abused within your system, you need to find if there are any projects with the same name but on different clusters. To do that, run the following command in the local cluster as an administrator:</p>\n<pre><code>kubectl get projects -A -o=custom-columns='NAME:metadata.name' | sort | uniq -c\n</code></pre>\n<p>That command will list all project names, and show the instances of each name. Any project with more than 1 instance is affected by this security issue. To remedy the situation, the projects will need to be deleted and re-created to ensure no namespace collisions happen. While it would be possible to delete all but 1 of the projects with the same name, this is unadvisable because a user could have given themselves access to the wrong project.</p>\n<h3 id=\"references\">References</h3>\n<p>If you have any questions or comments about this advisory:</p>\n<ul>\n<li>Reach out to the <a href=\"https://github.com/rancher/rancher/security/policy\">SUSE Rancher Security team</a> for security related inquiries.</li>\n<li>Open an issue in the <a href=\"https://github.com/rancher/rancher/issues/new/choose\">Rancher</a> repository.</li>\n<li>Verify with our <a href=\"https://www.suse.com/suse-rancher/support-matrix/all-supported-versions/\">support matrix</a> and <a href=\"https://www.suse.com/lifecycle/\">product support lifecycle</a>.</li>\n</ul>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/rancher/rancher/security/advisories/GHSA-8h6m-wv39-239m\">https://github.com/rancher/rancher/security/advisories/GHSA-8h6m-wv39-239m</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-8h6m-wv39-239m\">https://github.com/advisories/GHSA-8h6m-wv39-239m</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-8h6m-wv39-239m",
            "title": "[github.com/rancher/rancher] Rancher users who can create Projects can gain access to arbitrary projects",
            "date_modified": "2025-04-25T15:09:27.000Z",
            "date_published": "2025-04-25T15:09:26.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-8h6m-wv39-239m"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>A vulnerability has been identified within Rancher where a user with the ability to create a project, on a certain cluster, can create a project with the same name as an existing project in a different cluster. This results in the user gaining access to the other project in the different cluster, resulting in a privilege escalation. This happens because the namespace used on the local cluster to store related resources (PRTBs and secrets) is the name of the project.</p>\n<p>Please consult the associated  <a href=\"https://attack.mitre.org/tactics/TA0004/\">MITRE ATT&amp;CK - Technique - Privilege Escalation</a> for further information about this category of attack.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>Patched versions include releases <code>v2.11.1</code>, <code>v2.10.5</code>, <code>v2.9.9</code>.</p>\n<p>The fix involves the following changes:</p>\n<p><strong>Rancher:</strong></p>\n<ul>\n<li>Instead of using the project name as the namespace, Rancher will instead be using a new field on the project spec called backingNamespace. If that field exists, use that for the project namespace going forward. However, if the project does not have that field filled out (likely because it existed before this change), Rancher will continue using the name for the namespace.</li>\n</ul>\n<p><strong>Rancher Webhook:</strong></p>\n<ul>\n<li>New mutation on create <code>project.Status.BackingNamespace</code> to be <code>SafeConcatName(project.Spec.ClusterName, project.Name)</code>;</li>\n<li>Generate the name manually within the mutating webhook, because normally, name generation happens after the mutating webhooks;</li>\n<li>Removed a validation where <code>projectName</code> and <code>Namespace</code> had to be the same for PRTBs, since PRTBs now go in <code>project.BackingNamespace</code>;</li>\n<li>On update, if <code>BackingNamespace</code> isn't set, set it to <code>project.Name</code>. For existing objects after update this will help unify them to the new projects.</li>\n<li>The <code>BackingNamespace</code> can't be edited after it's set.</li>\n</ul>\n<p><strong>Note: Rancher v2.8 release line does not have the fix for this CVE. The fix for v2.8 was considered too complex and with the risk of introducing instabilities right before this version goes into end-of-life (EOL), as documented in <a href=\"https://www.suse.com/lifecycle/#suse-rancher-prime\">SUSE’s Product Support Lifecycle</a> page. Please see the section below for workarounds or consider upgrading to a newer and patched version of Rancher.</strong></p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>If you can't upgrade to a fixed version, please make sure that:</p>\n<ul>\n<li>Users are not allowed to create projects with the same object names from another cluster.</li>\n</ul>\n<p>To identify if this security issue could have been abused within your system, you need to find if there are any projects with the same name but on different clusters. To do that, run the following command in the local cluster as an administrator:</p>\n<pre><code>kubectl get projects -A -o=custom-columns='NAME:metadata.name' | sort | uniq -c\n</code></pre>\n<p>That command will list all project names, and show the instances of each name. Any project with more than 1 instance is affected by this security issue. To remedy the situation, the projects will need to be deleted and re-created to ensure no namespace collisions happen. While it would be possible to delete all but 1 of the projects with the same name, this is unadvisable because a user could have given themselves access to the wrong project.</p>\n<h3 id=\"references\">References</h3>\n<p>If you have any questions or comments about this advisory:</p>\n<ul>\n<li>Reach out to the <a href=\"https://github.com/rancher/rancher/security/policy\">SUSE Rancher Security team</a> for security related inquiries.</li>\n<li>Open an issue in the <a href=\"https://github.com/rancher/rancher/issues/new/choose\">Rancher</a> repository.</li>\n<li>Verify with our <a href=\"https://www.suse.com/suse-rancher/support-matrix/all-supported-versions/\">support matrix</a> and <a href=\"https://www.suse.com/lifecycle/\">product support lifecycle</a>.</li>\n</ul>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/rancher/rancher/security/advisories/GHSA-8h6m-wv39-239m\">https://github.com/rancher/rancher/security/advisories/GHSA-8h6m-wv39-239m</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-8h6m-wv39-239m\">https://github.com/advisories/GHSA-8h6m-wv39-239m</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-8h6m-wv39-239m",
            "title": "[github.com/rancher/rancher] Rancher users who can create Projects can gain access to arbitrary projects",
            "date_modified": "2025-04-25T15:09:27.000Z",
            "date_published": "2025-04-25T15:09:26.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-8h6m-wv39-239m"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>CNCF K3s 1.32 before 1.32.4-rc1+k3s1 has a Kubernetes kubelet configuration change with the unintended consequence that, in some situations, ReadOnlyPort is set to 10255. For example, the default behavior of a K3s online installation might allow unauthenticated access to this port, exposing credentials.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2025-46599\">https://nvd.nist.gov/vuln/detail/CVE-2025-46599</a></li>\n<li><a href=\"https://github.com/f1veT/BUG/issues/2\">https://github.com/f1veT/BUG/issues/2</a></li>\n<li><a href=\"https://github.com/k3s-io/k3s/issues/12164\">https://github.com/k3s-io/k3s/issues/12164</a></li>\n<li><a href=\"https://github.com/k3s-io/k3s/commit/097b63e588e3c844cdf9b967bcd0a69f4fc0aa0a\">https://github.com/k3s-io/k3s/commit/097b63e588e3c844cdf9b967bcd0a69f4fc0aa0a</a></li>\n<li><a href=\"https://cloud.google.com/kubernetes-engine/docs/how-to/disable-kubelet-readonly-port\">https://cloud.google.com/kubernetes-engine/docs/how-to/disable-kubelet-readonly-port</a></li>\n<li><a href=\"https://github.com/k3s-io/k3s/compare/v1.32.3+k3s1...v1.32.4-rc1+k3s1\">https://github.com/k3s-io/k3s/compare/v1.32.3+k3s1...v1.32.4-rc1+k3s1</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-864f-7xjm-2jp2\">https://github.com/advisories/GHSA-864f-7xjm-2jp2</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-864f-7xjm-2jp2",
            "title": "[github.com/k3s-io/k3s] CNCF K3s Kubernetes kubelet configuration exposes credentials",
            "date_modified": "2025-04-25T15:07:33.000Z",
            "date_published": "2025-04-25T06:30:56.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-864f-7xjm-2jp2"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>In Kubernetes v1.12.0-v1.12.4 and v1.13.0, the rest.AnonymousClientConfig() method returns a copy of the provided config, with credentials removed (bearer token, username/password, and client certificate/key data). In the affected versions, rest.AnonymousClientConfig() did not effectively clear service account credentials loaded using rest.InClusterConfig()</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2019-11243\">https://nvd.nist.gov/vuln/detail/CVE-2019-11243</a></li>\n<li><a href=\"https://github.com/kubernetes/kubernetes/issues/76797\">https://github.com/kubernetes/kubernetes/issues/76797</a></li>\n<li><a href=\"https://security.netapp.com/advisory/ntap-20190509-0002\">https://security.netapp.com/advisory/ntap-20190509-0002</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-gc2p-g4fg-29vh\">https://github.com/advisories/GHSA-gc2p-g4fg-29vh</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-gc2p-g4fg-29vh",
            "title": "[k8s.io/kubernetes] Kubernetes did not effectively clear service account credentials",
            "date_modified": "2025-04-24T17:41:46.000Z",
            "date_published": "2022-05-24T16:44:02.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-gc2p-g4fg-29vh"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>In Kubernetes v1.12.0-v1.12.4 and v1.13.0, the rest.AnonymousClientConfig() method returns a copy of the provided config, with credentials removed (bearer token, username/password, and client certificate/key data). In the affected versions, rest.AnonymousClientConfig() did not effectively clear service account credentials loaded using rest.InClusterConfig()</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2019-11243\">https://nvd.nist.gov/vuln/detail/CVE-2019-11243</a></li>\n<li><a href=\"https://github.com/kubernetes/kubernetes/issues/76797\">https://github.com/kubernetes/kubernetes/issues/76797</a></li>\n<li><a href=\"https://security.netapp.com/advisory/ntap-20190509-0002\">https://security.netapp.com/advisory/ntap-20190509-0002</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-gc2p-g4fg-29vh\">https://github.com/advisories/GHSA-gc2p-g4fg-29vh</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-gc2p-g4fg-29vh",
            "title": "[k8s.io/kubernetes] Kubernetes did not effectively clear service account credentials",
            "date_modified": "2025-04-24T17:41:46.000Z",
            "date_published": "2022-05-24T16:44:02.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-gc2p-g4fg-29vh"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Mattermost versions 10.4.x &lt;= 10.4.2, 10.5.x &lt;= 10.5.0, 9.11.x &lt;= 9.11.10&nbsp;fail to properly validate permissions for the API endpoint /plugins/playbooks/api/v0/signal/keywords/ignore-thread, allowing any user or attacker to delete posts containing actions created by the Playbooks bot, even without channel access or appropriate permissions.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2025-41423\">https://nvd.nist.gov/vuln/detail/CVE-2025-41423</a></li>\n<li><a href=\"https://mattermost.com/security-updates\">https://mattermost.com/security-updates</a></li>\n<li><a href=\"https://github.com/mattermost/mattermost-plugin-playbooks/commit/f9f7064e4d9f3918d66bac1f5f9eb28f0723464b\">https://github.com/mattermost/mattermost-plugin-playbooks/commit/f9f7064e4d9f3918d66bac1f5f9eb28f0723464b</a></li>\n<li><a href=\"https://github.com/mattermost/mattermost/commit/2b5275d87136f07e016c8eca09a2f004b31afc8a\">https://github.com/mattermost/mattermost/commit/2b5275d87136f07e016c8eca09a2f004b31afc8a</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-fr22-5377-f3p7\">https://github.com/advisories/GHSA-fr22-5377-f3p7</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-fr22-5377-f3p7",
            "title": "[github.com/mattermost/mattermost/server/v8] Mattermost Playbooks fails to properly validate permissions",
            "date_modified": "2025-04-24T16:09:32.000Z",
            "date_published": "2025-04-24T09:30:33.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-fr22-5377-f3p7"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Mattermost versions 10.4.x &lt;= 10.4.2, 10.5.x &lt;= 10.5.0, 9.11.x &lt;= 9.11.10&nbsp;fail to properly validate permissions for the API endpoint /plugins/playbooks/api/v0/signal/keywords/ignore-thread, allowing any user or attacker to delete posts containing actions created by the Playbooks bot, even without channel access or appropriate permissions.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2025-41423\">https://nvd.nist.gov/vuln/detail/CVE-2025-41423</a></li>\n<li><a href=\"https://mattermost.com/security-updates\">https://mattermost.com/security-updates</a></li>\n<li><a href=\"https://github.com/mattermost/mattermost-plugin-playbooks/commit/f9f7064e4d9f3918d66bac1f5f9eb28f0723464b\">https://github.com/mattermost/mattermost-plugin-playbooks/commit/f9f7064e4d9f3918d66bac1f5f9eb28f0723464b</a></li>\n<li><a href=\"https://github.com/mattermost/mattermost/commit/2b5275d87136f07e016c8eca09a2f004b31afc8a\">https://github.com/mattermost/mattermost/commit/2b5275d87136f07e016c8eca09a2f004b31afc8a</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-fr22-5377-f3p7\">https://github.com/advisories/GHSA-fr22-5377-f3p7</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-fr22-5377-f3p7",
            "title": "[github.com/mattermost/mattermost/server/v8] Mattermost Playbooks fails to properly validate permissions",
            "date_modified": "2025-04-24T16:09:32.000Z",
            "date_published": "2025-04-24T09:30:33.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-fr22-5377-f3p7"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Mattermost versions 10.4.x &lt;= 10.4.2, 10.5.x &lt;= 10.5.0, 9.11.x &lt;= 9.11.10&nbsp;fail to properly validate permissions for the API endpoint /plugins/playbooks/api/v0/signal/keywords/ignore-thread, allowing any user or attacker to delete posts containing actions created by the Playbooks bot, even without channel access or appropriate permissions.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2025-41423\">https://nvd.nist.gov/vuln/detail/CVE-2025-41423</a></li>\n<li><a href=\"https://mattermost.com/security-updates\">https://mattermost.com/security-updates</a></li>\n<li><a href=\"https://github.com/mattermost/mattermost-plugin-playbooks/commit/f9f7064e4d9f3918d66bac1f5f9eb28f0723464b\">https://github.com/mattermost/mattermost-plugin-playbooks/commit/f9f7064e4d9f3918d66bac1f5f9eb28f0723464b</a></li>\n<li><a href=\"https://github.com/mattermost/mattermost/commit/2b5275d87136f07e016c8eca09a2f004b31afc8a\">https://github.com/mattermost/mattermost/commit/2b5275d87136f07e016c8eca09a2f004b31afc8a</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-fr22-5377-f3p7\">https://github.com/advisories/GHSA-fr22-5377-f3p7</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-fr22-5377-f3p7",
            "title": "[github.com/mattermost/mattermost/server/v8] Mattermost Playbooks fails to properly validate permissions",
            "date_modified": "2025-04-24T16:09:32.000Z",
            "date_published": "2025-04-24T09:30:33.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-fr22-5377-f3p7"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Mattermost versions 10.4.x &lt;= 10.4.2, 10.5.x &lt;= 10.5.0, 9.11.x &lt;= 9.11.10&nbsp;fail to properly validate permissions for the API endpoint /plugins/playbooks/api/v0/signal/keywords/ignore-thread, allowing any user or attacker to delete posts containing actions created by the Playbooks bot, even without channel access or appropriate permissions.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2025-41423\">https://nvd.nist.gov/vuln/detail/CVE-2025-41423</a></li>\n<li><a href=\"https://mattermost.com/security-updates\">https://mattermost.com/security-updates</a></li>\n<li><a href=\"https://github.com/mattermost/mattermost-plugin-playbooks/commit/f9f7064e4d9f3918d66bac1f5f9eb28f0723464b\">https://github.com/mattermost/mattermost-plugin-playbooks/commit/f9f7064e4d9f3918d66bac1f5f9eb28f0723464b</a></li>\n<li><a href=\"https://github.com/mattermost/mattermost/commit/2b5275d87136f07e016c8eca09a2f004b31afc8a\">https://github.com/mattermost/mattermost/commit/2b5275d87136f07e016c8eca09a2f004b31afc8a</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-fr22-5377-f3p7\">https://github.com/advisories/GHSA-fr22-5377-f3p7</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-fr22-5377-f3p7",
            "title": "[github.com/mattermost/mattermost/server/v8] Mattermost Playbooks fails to properly validate permissions",
            "date_modified": "2025-04-24T16:09:32.000Z",
            "date_published": "2025-04-24T09:30:33.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-fr22-5377-f3p7"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Mattermost versions 10.4.x &lt;= 10.4.2, 10.5.x &lt;= 10.5.0, 9.11.x &lt;= 9.11.10&nbsp;fail to properly validate permissions for the API endpoint /plugins/playbooks/api/v0/signal/keywords/ignore-thread, allowing any user or attacker to delete posts containing actions created by the Playbooks bot, even without channel access or appropriate permissions.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2025-41423\">https://nvd.nist.gov/vuln/detail/CVE-2025-41423</a></li>\n<li><a href=\"https://mattermost.com/security-updates\">https://mattermost.com/security-updates</a></li>\n<li><a href=\"https://github.com/mattermost/mattermost-plugin-playbooks/commit/f9f7064e4d9f3918d66bac1f5f9eb28f0723464b\">https://github.com/mattermost/mattermost-plugin-playbooks/commit/f9f7064e4d9f3918d66bac1f5f9eb28f0723464b</a></li>\n<li><a href=\"https://github.com/mattermost/mattermost/commit/2b5275d87136f07e016c8eca09a2f004b31afc8a\">https://github.com/mattermost/mattermost/commit/2b5275d87136f07e016c8eca09a2f004b31afc8a</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-fr22-5377-f3p7\">https://github.com/advisories/GHSA-fr22-5377-f3p7</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-fr22-5377-f3p7",
            "title": "[github.com/mattermost/mattermost-plugin-playbooks] Mattermost Playbooks fails to properly validate permissions",
            "date_modified": "2025-04-24T16:09:32.000Z",
            "date_published": "2025-04-24T09:30:33.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-fr22-5377-f3p7"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Mattermost versions 10.4.x &lt;= 10.4.2, 10.5.x &lt;= 10.5.0, 9.11.x &lt;= 9.11.10&nbsp;fail to properly validate permissions for the API endpoint /plugins/playbooks/api/v0/signal/keywords/ignore-thread, allowing any user or attacker to delete posts containing actions created by the Playbooks bot, even without channel access or appropriate permissions.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2025-41423\">https://nvd.nist.gov/vuln/detail/CVE-2025-41423</a></li>\n<li><a href=\"https://mattermost.com/security-updates\">https://mattermost.com/security-updates</a></li>\n<li><a href=\"https://github.com/mattermost/mattermost-plugin-playbooks/commit/f9f7064e4d9f3918d66bac1f5f9eb28f0723464b\">https://github.com/mattermost/mattermost-plugin-playbooks/commit/f9f7064e4d9f3918d66bac1f5f9eb28f0723464b</a></li>\n<li><a href=\"https://github.com/mattermost/mattermost/commit/2b5275d87136f07e016c8eca09a2f004b31afc8a\">https://github.com/mattermost/mattermost/commit/2b5275d87136f07e016c8eca09a2f004b31afc8a</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-fr22-5377-f3p7\">https://github.com/advisories/GHSA-fr22-5377-f3p7</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-fr22-5377-f3p7",
            "title": "[github.com/mattermost/mattermost-plugin-playbooks] Mattermost Playbooks fails to properly validate permissions",
            "date_modified": "2025-04-24T16:09:32.000Z",
            "date_published": "2025-04-24T09:30:33.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-fr22-5377-f3p7"
            },
            "tags": [
                "severity"
            ]
        }
    ]
}