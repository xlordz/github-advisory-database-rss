{
    "version": "https://jsonfeed.org/version/1",
    "title": "Security Advisory for Go modules",
    "home_page_url": "https://github.com/advisories?query=type%3Areviewed+ecosystem%3Ago",
    "feed_url": "https://azu.github.io/github-advisory-database-rss/go.json",
    "description": "Security Advisory for Go modules on GitHub",
    "items": [
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>Chains using affected versions of Packet Forward Middleware in their IBC Transfer stack are vulnerable to an attack in which there is a potential denial of service. This affects IBC transfers for any asset which is being transferred between another chain and its native chain.</p>\n<p>We recommend upgrading as soon as possible.</p>\n<p><strong>THIS IS A STATE BREAKING CHANGE</strong></p>\n<h3 id=\"patches\">Patches</h3>\n<p>Versions <a href=\"https://github.com/cosmos/ibc-apps/releases/tag/middleware%2Fpacket-forward-middleware%2Fv7.2.1\">7.2.1</a> and <a href=\"https://github.com/cosmos/ibc-apps/releases/tag/middleware%2Fpacket-forward-middleware%2Fv8.1.1\">8.1.1</a> are patched.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>N/A</p>\n<h3 id=\"references\">References</h3>\n<p>N/A</p>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/cosmos/ibc-apps/security/advisories/GHSA-6fgm-x6ff-w78f\">https://github.com/cosmos/ibc-apps/security/advisories/GHSA-6fgm-x6ff-w78f</a></li>\n<li><a href=\"https://github.com/cosmos/ibc-apps/releases/tag/middleware%2Fpacket-forward-middleware%2Fv7.2.1\">https://github.com/cosmos/ibc-apps/releases/tag/middleware%2Fpacket-forward-middleware%2Fv7.2.1</a></li>\n<li><a href=\"https://github.com/cosmos/ibc-apps/releases/tag/middleware%2Fpacket-forward-middleware%2Fv8.1.1\">https://github.com/cosmos/ibc-apps/releases/tag/middleware%2Fpacket-forward-middleware%2Fv8.1.1</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-6fgm-x6ff-w78f\">https://github.com/advisories/GHSA-6fgm-x6ff-w78f</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-6fgm-x6ff-w78f",
            "title": "[github.com/cosmos/ibc-apps/middleware/packet-forward-middleware/v6] Potential Denial-of-Service condition leading to temporary disability in IBC transfers to the native chain",
            "date_modified": "2025-03-11T17:14:28.000Z",
            "date_published": "2025-02-12T22:01:24.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-6fgm-x6ff-w78f"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>Chains using affected versions of Packet Forward Middleware in their IBC Transfer stack are vulnerable to an attack in which there is a potential denial of service. This affects IBC transfers for any asset which is being transferred between another chain and its native chain.</p>\n<p>We recommend upgrading as soon as possible.</p>\n<p><strong>THIS IS A STATE BREAKING CHANGE</strong></p>\n<h3 id=\"patches\">Patches</h3>\n<p>Versions <a href=\"https://github.com/cosmos/ibc-apps/releases/tag/middleware%2Fpacket-forward-middleware%2Fv7.2.1\">7.2.1</a> and <a href=\"https://github.com/cosmos/ibc-apps/releases/tag/middleware%2Fpacket-forward-middleware%2Fv8.1.1\">8.1.1</a> are patched.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>N/A</p>\n<h3 id=\"references\">References</h3>\n<p>N/A</p>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/cosmos/ibc-apps/security/advisories/GHSA-6fgm-x6ff-w78f\">https://github.com/cosmos/ibc-apps/security/advisories/GHSA-6fgm-x6ff-w78f</a></li>\n<li><a href=\"https://github.com/cosmos/ibc-apps/releases/tag/middleware%2Fpacket-forward-middleware%2Fv7.2.1\">https://github.com/cosmos/ibc-apps/releases/tag/middleware%2Fpacket-forward-middleware%2Fv7.2.1</a></li>\n<li><a href=\"https://github.com/cosmos/ibc-apps/releases/tag/middleware%2Fpacket-forward-middleware%2Fv8.1.1\">https://github.com/cosmos/ibc-apps/releases/tag/middleware%2Fpacket-forward-middleware%2Fv8.1.1</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-6fgm-x6ff-w78f\">https://github.com/advisories/GHSA-6fgm-x6ff-w78f</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-6fgm-x6ff-w78f",
            "title": "[github.com/cosmos/ibc-apps/middleware/packet-forward-middleware/v5] Potential Denial-of-Service condition leading to temporary disability in IBC transfers to the native chain",
            "date_modified": "2025-03-11T17:14:28.000Z",
            "date_published": "2025-02-12T22:01:24.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-6fgm-x6ff-w78f"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>Chains using affected versions of Packet Forward Middleware in their IBC Transfer stack are vulnerable to an attack in which there is a potential denial of service. This affects IBC transfers for any asset which is being transferred between another chain and its native chain.</p>\n<p>We recommend upgrading as soon as possible.</p>\n<p><strong>THIS IS A STATE BREAKING CHANGE</strong></p>\n<h3 id=\"patches\">Patches</h3>\n<p>Versions <a href=\"https://github.com/cosmos/ibc-apps/releases/tag/middleware%2Fpacket-forward-middleware%2Fv7.2.1\">7.2.1</a> and <a href=\"https://github.com/cosmos/ibc-apps/releases/tag/middleware%2Fpacket-forward-middleware%2Fv8.1.1\">8.1.1</a> are patched.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>N/A</p>\n<h3 id=\"references\">References</h3>\n<p>N/A</p>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/cosmos/ibc-apps/security/advisories/GHSA-6fgm-x6ff-w78f\">https://github.com/cosmos/ibc-apps/security/advisories/GHSA-6fgm-x6ff-w78f</a></li>\n<li><a href=\"https://github.com/cosmos/ibc-apps/releases/tag/middleware%2Fpacket-forward-middleware%2Fv7.2.1\">https://github.com/cosmos/ibc-apps/releases/tag/middleware%2Fpacket-forward-middleware%2Fv7.2.1</a></li>\n<li><a href=\"https://github.com/cosmos/ibc-apps/releases/tag/middleware%2Fpacket-forward-middleware%2Fv8.1.1\">https://github.com/cosmos/ibc-apps/releases/tag/middleware%2Fpacket-forward-middleware%2Fv8.1.1</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-6fgm-x6ff-w78f\">https://github.com/advisories/GHSA-6fgm-x6ff-w78f</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-6fgm-x6ff-w78f",
            "title": "[github.com/cosmos/ibc-apps/middleware/packet-forward-middleware/v4] Potential Denial-of-Service condition leading to temporary disability in IBC transfers to the native chain",
            "date_modified": "2025-03-11T17:14:28.000Z",
            "date_published": "2025-02-12T22:01:24.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-6fgm-x6ff-w78f"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>In a Kubernetes environment, Ratify can be configured to authenticate to a private Azure Container Registry (ACR). The Azure workload identity and Azure managed identity authentication providers are configured in this setup. Users that configure a private ACR to be used with the Azure authentication providers may be impacted.\nBoth Azure authentication providers attempt to exchange an Entra ID (EID) token for an ACR refresh token. However, Ratify’s Azure authentication providers did not verify that the target registry is an ACR. This could have led to the EID token being presented to a non-ACR registry during token exchange. EID tokens with ACR access can potentially be extracted and abused if a user workload contains an image reference to a malicious registry.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>The Azure workload identity and Azure managed identity authentication providers are updated to add new validation prior to EID token exchange. Validation relies upon registry domain validation against a pre-configured list of well-known ACR endpoints. EID token exchange will be executed only if at least one of the configured well-known domain suffixes (wildcard support included) matches the registry domain of the image reference.</p>\n<h3 id=\"credits\">Credits</h3>\n<p>The <code>ratify</code> project would like to thank Shiwei Zhang (@shizhMSFT) and Binbin Li (@binbin-li) for responsibly disclosing the issue and thank Binbin Li (@binbin-li) and Akash Singhal (@akashsinghal) for actively mitigating the issue.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/ratify-project/ratify/security/advisories/GHSA-44f7-5fj5-h4px\">https://github.com/ratify-project/ratify/security/advisories/GHSA-44f7-5fj5-h4px</a></li>\n<li><a href=\"https://github.com/ratify-project/ratify/commit/84c7c48fa76bb9a1c9583635d1e90bc25b1a546c\">https://github.com/ratify-project/ratify/commit/84c7c48fa76bb9a1c9583635d1e90bc25b1a546c</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2025-27403\">https://nvd.nist.gov/vuln/detail/CVE-2025-27403</a></li>\n<li><a href=\"https://github.com/ratify-project/ratify/commit/0ec0c08490e3d672ae64b1a220c90d5484f1c93f\">https://github.com/ratify-project/ratify/commit/0ec0c08490e3d672ae64b1a220c90d5484f1c93f</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-44f7-5fj5-h4px\">https://github.com/advisories/GHSA-44f7-5fj5-h4px</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-44f7-5fj5-h4px",
            "title": "[github.com/ratify-project/ratify] Ratify Azure authentication providers can leak authentication tokens to non-Azure container registries",
            "date_modified": "2025-03-11T17:20:01.000Z",
            "date_published": "2025-03-11T15:27:16.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-44f7-5fj5-h4px"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>In a Kubernetes environment, Ratify can be configured to authenticate to a private Azure Container Registry (ACR). The Azure workload identity and Azure managed identity authentication providers are configured in this setup. Users that configure a private ACR to be used with the Azure authentication providers may be impacted.\nBoth Azure authentication providers attempt to exchange an Entra ID (EID) token for an ACR refresh token. However, Ratify’s Azure authentication providers did not verify that the target registry is an ACR. This could have led to the EID token being presented to a non-ACR registry during token exchange. EID tokens with ACR access can potentially be extracted and abused if a user workload contains an image reference to a malicious registry.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>The Azure workload identity and Azure managed identity authentication providers are updated to add new validation prior to EID token exchange. Validation relies upon registry domain validation against a pre-configured list of well-known ACR endpoints. EID token exchange will be executed only if at least one of the configured well-known domain suffixes (wildcard support included) matches the registry domain of the image reference.</p>\n<h3 id=\"credits\">Credits</h3>\n<p>The <code>ratify</code> project would like to thank Shiwei Zhang (@shizhMSFT) and Binbin Li (@binbin-li) for responsibly disclosing the issue and thank Binbin Li (@binbin-li) and Akash Singhal (@akashsinghal) for actively mitigating the issue.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/ratify-project/ratify/security/advisories/GHSA-44f7-5fj5-h4px\">https://github.com/ratify-project/ratify/security/advisories/GHSA-44f7-5fj5-h4px</a></li>\n<li><a href=\"https://github.com/ratify-project/ratify/commit/84c7c48fa76bb9a1c9583635d1e90bc25b1a546c\">https://github.com/ratify-project/ratify/commit/84c7c48fa76bb9a1c9583635d1e90bc25b1a546c</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2025-27403\">https://nvd.nist.gov/vuln/detail/CVE-2025-27403</a></li>\n<li><a href=\"https://github.com/ratify-project/ratify/commit/0ec0c08490e3d672ae64b1a220c90d5484f1c93f\">https://github.com/ratify-project/ratify/commit/0ec0c08490e3d672ae64b1a220c90d5484f1c93f</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-44f7-5fj5-h4px\">https://github.com/advisories/GHSA-44f7-5fj5-h4px</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-44f7-5fj5-h4px",
            "title": "[github.com/ratify-project/ratify] Ratify Azure authentication providers can leak authentication tokens to non-Azure container registries",
            "date_modified": "2025-03-11T17:20:01.000Z",
            "date_published": "2025-03-11T15:27:16.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-44f7-5fj5-h4px"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Nomad Community and Nomad Enterprise (“Nomad”) are vulnerable to unintentional exposure of the workload identity token and client secret token in audit logs. This vulnerability, identified as CVE-2025-1296, is fixed in Nomad Community Edition 1.9.7 and Nomad Enterprise 1.9.7, 1.8.11, and 1.7.19.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2025-1296\">https://nvd.nist.gov/vuln/detail/CVE-2025-1296</a></li>\n<li><a href=\"https://discuss.hashicorp.com/t/hcsec-2025-04-nomad-exposes-sensitive-workload-identity-and-client-secret-token-in-audit-logs/73737\">https://discuss.hashicorp.com/t/hcsec-2025-04-nomad-exposes-sensitive-workload-identity-and-client-secret-token-in-audit-logs/73737</a></li>\n<li><a href=\"https://github.com/hashicorp/nomad/commit/dc482bf9058faf7a192486eb52caa1d42646f6b3\">https://github.com/hashicorp/nomad/commit/dc482bf9058faf7a192486eb52caa1d42646f6b3</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-c3q9-q986-vrwh\">https://github.com/advisories/GHSA-c3q9-q986-vrwh</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-c3q9-q986-vrwh",
            "title": "[github.com/hashicorp/nomad] Nomad is vulnerable to unintentional exposure of the workload identity token and client secret token in audit logs",
            "date_modified": "2025-03-10T22:25:58.000Z",
            "date_published": "2025-03-10T18:31:57.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-c3q9-q986-vrwh"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>Users with an enabled repository with access to repo level CI secrets in Vela are vulnerable to the exploit. </p>\n<p>Any user with access to the CI instance and the linked source control manager can perform the exploit.</p>\n<h3>Method</h3>\n<p>By spoofing a webhook payload with a specific set of headers and body data, an attacker could transfer ownership of a repository and its repo level secrets to a separate repository. </p>\n<p>These secrets could be exfiltrated by follow up builds to the repository.</p>\n<h3 id=\"patches\">Patches</h3>\n<p><code>v0.26.3</code> — Image: <code>target/vela-server:v0.26.3</code>\n<code>v0.25.3</code> — Image: <code>target/vela-server:v0.25.3</code></p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p><em>Is there a way for users to fix or remediate the vulnerability without upgrading?</em></p>\n<p>There are no workarounds to the issue.</p>\n<h3 id=\"references\">References</h3>\n<p><em>Are there any links users can visit to find out more?</em></p>\n<p>Please see linked CWEs (common weakness enumerators) for more information.</p>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/go-vela/server/security/advisories/GHSA-9m63-33q3-xq5x\">https://github.com/go-vela/server/security/advisories/GHSA-9m63-33q3-xq5x</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2025-27616\">https://nvd.nist.gov/vuln/detail/CVE-2025-27616</a></li>\n<li><a href=\"https://github.com/go-vela/server/commit/257886e5a3eea518548387885894e239668584f5\">https://github.com/go-vela/server/commit/257886e5a3eea518548387885894e239668584f5</a></li>\n<li><a href=\"https://github.com/go-vela/server/commit/67c1892e2464dc54b8d2588815dfb7819222500b\">https://github.com/go-vela/server/commit/67c1892e2464dc54b8d2588815dfb7819222500b</a></li>\n<li><a href=\"https://github.com/go-vela/server/releases/tag/v0.25.3\">https://github.com/go-vela/server/releases/tag/v0.25.3</a></li>\n<li><a href=\"https://github.com/go-vela/server/releases/tag/v0.26.3\">https://github.com/go-vela/server/releases/tag/v0.26.3</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-9m63-33q3-xq5x\">https://github.com/advisories/GHSA-9m63-33q3-xq5x</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-9m63-33q3-xq5x",
            "title": "[github.com/go-vela/server] Vela Server Has Insufficient Webhook Payload Data Verification",
            "date_modified": "2025-03-10T22:24:37.000Z",
            "date_published": "2025-03-10T22:24:35.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-9m63-33q3-xq5x"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>Users with an enabled repository with access to repo level CI secrets in Vela are vulnerable to the exploit. </p>\n<p>Any user with access to the CI instance and the linked source control manager can perform the exploit.</p>\n<h3>Method</h3>\n<p>By spoofing a webhook payload with a specific set of headers and body data, an attacker could transfer ownership of a repository and its repo level secrets to a separate repository. </p>\n<p>These secrets could be exfiltrated by follow up builds to the repository.</p>\n<h3 id=\"patches\">Patches</h3>\n<p><code>v0.26.3</code> — Image: <code>target/vela-server:v0.26.3</code>\n<code>v0.25.3</code> — Image: <code>target/vela-server:v0.25.3</code></p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p><em>Is there a way for users to fix or remediate the vulnerability without upgrading?</em></p>\n<p>There are no workarounds to the issue.</p>\n<h3 id=\"references\">References</h3>\n<p><em>Are there any links users can visit to find out more?</em></p>\n<p>Please see linked CWEs (common weakness enumerators) for more information.</p>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/go-vela/server/security/advisories/GHSA-9m63-33q3-xq5x\">https://github.com/go-vela/server/security/advisories/GHSA-9m63-33q3-xq5x</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2025-27616\">https://nvd.nist.gov/vuln/detail/CVE-2025-27616</a></li>\n<li><a href=\"https://github.com/go-vela/server/commit/257886e5a3eea518548387885894e239668584f5\">https://github.com/go-vela/server/commit/257886e5a3eea518548387885894e239668584f5</a></li>\n<li><a href=\"https://github.com/go-vela/server/commit/67c1892e2464dc54b8d2588815dfb7819222500b\">https://github.com/go-vela/server/commit/67c1892e2464dc54b8d2588815dfb7819222500b</a></li>\n<li><a href=\"https://github.com/go-vela/server/releases/tag/v0.25.3\">https://github.com/go-vela/server/releases/tag/v0.25.3</a></li>\n<li><a href=\"https://github.com/go-vela/server/releases/tag/v0.26.3\">https://github.com/go-vela/server/releases/tag/v0.26.3</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-9m63-33q3-xq5x\">https://github.com/advisories/GHSA-9m63-33q3-xq5x</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-9m63-33q3-xq5x",
            "title": "[github.com/go-vela/server] Vela Server Has Insufficient Webhook Payload Data Verification",
            "date_modified": "2025-03-10T22:24:37.000Z",
            "date_published": "2025-03-10T22:24:35.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-9m63-33q3-xq5x"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"summary\">Summary</h3>\n<p>Stored Cross-Site Scripting (XSS) vulnerability allows attackers to inject malicious scripts into web applications, which can then be executed in the context of other users' browsers. This can lead to unauthorized access to sensitive information, session hijacking, and spreading of malware, impacting user data privacy and application integrity.</p>\n<h3 id=\"details\">Details</h3>\n<p>A user with rights to modificate the service (e.g. kuiperUser role) can inject XSS Payload into Rule <code>id</code> parameter. Then, after any user with access to this service (e.g. admin) will try make any modifications with the rule (update, run, stop, delete), a payload will act in victim's browser.</p>\n<p>The issue appears as the notification to user is made in an insafe way:</p>\n<p><a href=\"https://github.com/lf-edge/ekuiper/blob/dbce32d5a195cf1de949b3a6a4e29f0df0f3330d/internal/server/rest.go#L681\">https://github.com/lf-edge/ekuiper/blob/dbce32d5a195cf1de949b3a6a4e29f0df0f3330d/internal/server/rest.go#L681</a></p>\n<p><a href=\"https://github.com/lf-edge/ekuiper/blob/dbce32d5a195cf1de949b3a6a4e29f0df0f3330d/internal/server/rest.go#L716\">https://github.com/lf-edge/ekuiper/blob/dbce32d5a195cf1de949b3a6a4e29f0df0f3330d/internal/server/rest.go#L716</a></p>\n<p><a href=\"https://github.com/lf-edge/ekuiper/blob/dbce32d5a195cf1de949b3a6a4e29f0df0f3330d/internal/server/rest.go#L735\">https://github.com/lf-edge/ekuiper/blob/dbce32d5a195cf1de949b3a6a4e29f0df0f3330d/internal/server/rest.go#L735</a></p>\n<p><a href=\"https://github.com/lf-edge/ekuiper/blob/dbce32d5a195cf1de949b3a6a4e29f0df0f3330d/internal/server/rest.go#L794\">https://github.com/lf-edge/ekuiper/blob/dbce32d5a195cf1de949b3a6a4e29f0df0f3330d/internal/server/rest.go#L794</a></p>\n<p><a href=\"https://github.com/lf-edge/ekuiper/blob/dbce32d5a195cf1de949b3a6a4e29f0df0f3330d/internal/server/rest.go#L809\">https://github.com/lf-edge/ekuiper/blob/dbce32d5a195cf1de949b3a6a4e29f0df0f3330d/internal/server/rest.go#L809</a></p>\n<p><a href=\"https://github.com/lf-edge/ekuiper/blob/dbce32d5a195cf1de949b3a6a4e29f0df0f3330d/internal/server/rest.go#L824\">https://github.com/lf-edge/ekuiper/blob/dbce32d5a195cf1de949b3a6a4e29f0df0f3330d/internal/server/rest.go#L824</a></p>\n<p>Such writing to 'http.ResponseWriter'  bypasses HTML escaping that prevents cross-site scripting vulnerabilities.</p>\n<p>Because of the some (meybe protection) mechanisms a real exploitation is possible only with limited special characters, but this is enough to construct a strong payload</p>\n<h3 id=\"poc\">PoC</h3>\n<ol>\n<li>Create a rule with id:</li>\n</ol>\n<pre><code>&lt;iframe src=\"javascript:alert`1337`\"&gt;\n</code></pre>\n<p><img alt=\"Creating a malicious Rule\" src=\"https://github.com/user-attachments/assets/32d4f632-1f3c-471a-857b-7c4ce41030c6\"></p>\n<ol start=\"2\">\n<li>Just after Rule Submition the Payload shoots:</li>\n</ol>\n<p><img alt=\"Running Payload\" src=\"https://github.com/user-attachments/assets/81021d04-e9a4-4e7f-8644-5240dcd2324c\"></p>\n<ol start=\"3\">\n<li>Then, when another user (e.g. <code>admin</code>) will try to do something with this rule (e.g. start), the payload shoots in his context:</li>\n</ol>\n<p><img alt=\"Exploiting the admin\" src=\"https://github.com/user-attachments/assets/9adf9a33-966e-415a-a613-99a9b6cd4f10\"></p>\n<h3 id=\"impact\">Impact</h3>\n<p>Stored Cross-site Scripting (XSS) vulnerability</p>\n<p>Reported by Alexey Kosmachev, Lead Pentester from Bi.Zone</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/lf-edge/ekuiper/security/advisories/GHSA-6hrw-x7pr-4mp8\">https://github.com/lf-edge/ekuiper/security/advisories/GHSA-6hrw-x7pr-4mp8</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-52812\">https://nvd.nist.gov/vuln/detail/CVE-2024-52812</a></li>\n<li><a href=\"https://github.com/lf-edge/ekuiper/blob/dbce32d5a195cf1de949b3a6a4e29f0df0f3330d/internal/server/rest.go#L681\">https://github.com/lf-edge/ekuiper/blob/dbce32d5a195cf1de949b3a6a4e29f0df0f3330d/internal/server/rest.go#L681</a></li>\n<li><a href=\"https://github.com/lf-edge/ekuiper/blob/dbce32d5a195cf1de949b3a6a4e29f0df0f3330d/internal/server/rest.go#L716\">https://github.com/lf-edge/ekuiper/blob/dbce32d5a195cf1de949b3a6a4e29f0df0f3330d/internal/server/rest.go#L716</a></li>\n<li><a href=\"https://github.com/lf-edge/ekuiper/blob/dbce32d5a195cf1de949b3a6a4e29f0df0f3330d/internal/server/rest.go#L735\">https://github.com/lf-edge/ekuiper/blob/dbce32d5a195cf1de949b3a6a4e29f0df0f3330d/internal/server/rest.go#L735</a></li>\n<li><a href=\"https://github.com/lf-edge/ekuiper/blob/dbce32d5a195cf1de949b3a6a4e29f0df0f3330d/internal/server/rest.go#L794\">https://github.com/lf-edge/ekuiper/blob/dbce32d5a195cf1de949b3a6a4e29f0df0f3330d/internal/server/rest.go#L794</a></li>\n<li><a href=\"https://github.com/lf-edge/ekuiper/blob/dbce32d5a195cf1de949b3a6a4e29f0df0f3330d/internal/server/rest.go#L809\">https://github.com/lf-edge/ekuiper/blob/dbce32d5a195cf1de949b3a6a4e29f0df0f3330d/internal/server/rest.go#L809</a></li>\n<li><a href=\"https://github.com/lf-edge/ekuiper/blob/dbce32d5a195cf1de949b3a6a4e29f0df0f3330d/internal/server/rest.go#L824\">https://github.com/lf-edge/ekuiper/blob/dbce32d5a195cf1de949b3a6a4e29f0df0f3330d/internal/server/rest.go#L824</a></li>\n<li><a href=\"https://github.com/lf-edge/ekuiper/releases/tag/v2.0.8\">https://github.com/lf-edge/ekuiper/releases/tag/v2.0.8</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-6hrw-x7pr-4mp8\">https://github.com/advisories/GHSA-6hrw-x7pr-4mp8</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-6hrw-x7pr-4mp8",
            "title": "[github.com/lf-edge/ekuiper] LF Edge eKuiper allows Stored XSS in Rules Functionality",
            "date_modified": "2025-03-10T19:28:39.000Z",
            "date_published": "2025-03-10T19:28:38.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-6hrw-x7pr-4mp8"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"summary\">Summary</h3>\n<p>Stored Cross-Site Scripting (XSS) vulnerability allows attackers to inject malicious scripts into web applications, which can then be executed in the context of other users' browsers. This can lead to unauthorized access to sensitive information, session hijacking, and spreading of malware, impacting user data privacy and application integrity.</p>\n<h3 id=\"details\">Details</h3>\n<p>A user with rights to modificate the service (e.g. kuiperUser role) can inject XSS Payload into Rule <code>id</code> parameter. Then, after any user with access to this service (e.g. admin) will try make any modifications with the rule (update, run, stop, delete), a payload will act in victim's browser.</p>\n<p>The issue appears as the notification to user is made in an insafe way:</p>\n<p><a href=\"https://github.com/lf-edge/ekuiper/blob/dbce32d5a195cf1de949b3a6a4e29f0df0f3330d/internal/server/rest.go#L681\">https://github.com/lf-edge/ekuiper/blob/dbce32d5a195cf1de949b3a6a4e29f0df0f3330d/internal/server/rest.go#L681</a></p>\n<p><a href=\"https://github.com/lf-edge/ekuiper/blob/dbce32d5a195cf1de949b3a6a4e29f0df0f3330d/internal/server/rest.go#L716\">https://github.com/lf-edge/ekuiper/blob/dbce32d5a195cf1de949b3a6a4e29f0df0f3330d/internal/server/rest.go#L716</a></p>\n<p><a href=\"https://github.com/lf-edge/ekuiper/blob/dbce32d5a195cf1de949b3a6a4e29f0df0f3330d/internal/server/rest.go#L735\">https://github.com/lf-edge/ekuiper/blob/dbce32d5a195cf1de949b3a6a4e29f0df0f3330d/internal/server/rest.go#L735</a></p>\n<p><a href=\"https://github.com/lf-edge/ekuiper/blob/dbce32d5a195cf1de949b3a6a4e29f0df0f3330d/internal/server/rest.go#L794\">https://github.com/lf-edge/ekuiper/blob/dbce32d5a195cf1de949b3a6a4e29f0df0f3330d/internal/server/rest.go#L794</a></p>\n<p><a href=\"https://github.com/lf-edge/ekuiper/blob/dbce32d5a195cf1de949b3a6a4e29f0df0f3330d/internal/server/rest.go#L809\">https://github.com/lf-edge/ekuiper/blob/dbce32d5a195cf1de949b3a6a4e29f0df0f3330d/internal/server/rest.go#L809</a></p>\n<p><a href=\"https://github.com/lf-edge/ekuiper/blob/dbce32d5a195cf1de949b3a6a4e29f0df0f3330d/internal/server/rest.go#L824\">https://github.com/lf-edge/ekuiper/blob/dbce32d5a195cf1de949b3a6a4e29f0df0f3330d/internal/server/rest.go#L824</a></p>\n<p>Such writing to 'http.ResponseWriter'  bypasses HTML escaping that prevents cross-site scripting vulnerabilities.</p>\n<p>Because of the some (meybe protection) mechanisms a real exploitation is possible only with limited special characters, but this is enough to construct a strong payload</p>\n<h3 id=\"poc\">PoC</h3>\n<ol>\n<li>Create a rule with id:</li>\n</ol>\n<pre><code>&lt;iframe src=\"javascript:alert`1337`\"&gt;\n</code></pre>\n<p><img alt=\"Creating a malicious Rule\" src=\"https://github.com/user-attachments/assets/32d4f632-1f3c-471a-857b-7c4ce41030c6\"></p>\n<ol start=\"2\">\n<li>Just after Rule Submition the Payload shoots:</li>\n</ol>\n<p><img alt=\"Running Payload\" src=\"https://github.com/user-attachments/assets/81021d04-e9a4-4e7f-8644-5240dcd2324c\"></p>\n<ol start=\"3\">\n<li>Then, when another user (e.g. <code>admin</code>) will try to do something with this rule (e.g. start), the payload shoots in his context:</li>\n</ol>\n<p><img alt=\"Exploiting the admin\" src=\"https://github.com/user-attachments/assets/9adf9a33-966e-415a-a613-99a9b6cd4f10\"></p>\n<h3 id=\"impact\">Impact</h3>\n<p>Stored Cross-site Scripting (XSS) vulnerability</p>\n<p>Reported by Alexey Kosmachev, Lead Pentester from Bi.Zone</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/lf-edge/ekuiper/security/advisories/GHSA-6hrw-x7pr-4mp8\">https://github.com/lf-edge/ekuiper/security/advisories/GHSA-6hrw-x7pr-4mp8</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-52812\">https://nvd.nist.gov/vuln/detail/CVE-2024-52812</a></li>\n<li><a href=\"https://github.com/lf-edge/ekuiper/blob/dbce32d5a195cf1de949b3a6a4e29f0df0f3330d/internal/server/rest.go#L681\">https://github.com/lf-edge/ekuiper/blob/dbce32d5a195cf1de949b3a6a4e29f0df0f3330d/internal/server/rest.go#L681</a></li>\n<li><a href=\"https://github.com/lf-edge/ekuiper/blob/dbce32d5a195cf1de949b3a6a4e29f0df0f3330d/internal/server/rest.go#L716\">https://github.com/lf-edge/ekuiper/blob/dbce32d5a195cf1de949b3a6a4e29f0df0f3330d/internal/server/rest.go#L716</a></li>\n<li><a href=\"https://github.com/lf-edge/ekuiper/blob/dbce32d5a195cf1de949b3a6a4e29f0df0f3330d/internal/server/rest.go#L735\">https://github.com/lf-edge/ekuiper/blob/dbce32d5a195cf1de949b3a6a4e29f0df0f3330d/internal/server/rest.go#L735</a></li>\n<li><a href=\"https://github.com/lf-edge/ekuiper/blob/dbce32d5a195cf1de949b3a6a4e29f0df0f3330d/internal/server/rest.go#L794\">https://github.com/lf-edge/ekuiper/blob/dbce32d5a195cf1de949b3a6a4e29f0df0f3330d/internal/server/rest.go#L794</a></li>\n<li><a href=\"https://github.com/lf-edge/ekuiper/blob/dbce32d5a195cf1de949b3a6a4e29f0df0f3330d/internal/server/rest.go#L809\">https://github.com/lf-edge/ekuiper/blob/dbce32d5a195cf1de949b3a6a4e29f0df0f3330d/internal/server/rest.go#L809</a></li>\n<li><a href=\"https://github.com/lf-edge/ekuiper/blob/dbce32d5a195cf1de949b3a6a4e29f0df0f3330d/internal/server/rest.go#L824\">https://github.com/lf-edge/ekuiper/blob/dbce32d5a195cf1de949b3a6a4e29f0df0f3330d/internal/server/rest.go#L824</a></li>\n<li><a href=\"https://github.com/lf-edge/ekuiper/releases/tag/v2.0.8\">https://github.com/lf-edge/ekuiper/releases/tag/v2.0.8</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-6hrw-x7pr-4mp8\">https://github.com/advisories/GHSA-6hrw-x7pr-4mp8</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-6hrw-x7pr-4mp8",
            "title": "[github.com/lf-edge/ekuiper/v2] LF Edge eKuiper allows Stored XSS in Rules Functionality",
            "date_modified": "2025-03-10T19:28:39.000Z",
            "date_published": "2025-03-10T19:28:38.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-6hrw-x7pr-4mp8"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h1 id=\"horcrux-incident-disclosure-possible-double-sign\"><strong>Horcrux Incident Disclosure: Possible Double-Sign</strong></h1>\n<h2 id=\"summary\"><strong>Summary</strong></h2>\n<p>On March 6, 2025, a Horcrux user (01node) experienced a double-signing incident on the Osmosis network, resulting in a 5% slash penalty (approximately 75,000 OSMO or $20,000 USD). After thorough investigation, we have identified a race condition in Horcrux's signature state handling as the root cause. This vulnerability was introduced in July 2023 as part of PR <a href=\"https://github.com/strangelove-ventures/horcrux/pull/169\">#169</a> and affects all Horcrux versions from v3.1.0 through v3.3.1. A fix has been developed and is being deployed immediately.</p>\n<h2 id=\"probability\"><strong>Probability</strong></h2>\n<p>The bug has an extremely low probability of occurrence, affecting one validator out of hundreds that have been using the affected software versions to validate over the past few years. In the added tests, the probability on typical hardware is in the range of 1 in 1 billion per signed vote due to the root cause needing two independent events to occur within approximately the same microsecond duration.</p>\n<h2 id=\"severity\"><strong>Severity</strong></h2>\n<p>While rare, it is of high severity, as the double-sign (tombstone) slash on most Cosmos chains is typically 5% to the validator’s self stake and the stake of delegators that is delegated to the validator. The bug is not exploitable, so the urgency to apply this patch is purely around avoiding the race condition to remove tombstone risk.</p>\n<h2 id=\"impact\"><strong>Impact</strong></h2>\n<ul>\n<li>One known validator (01node) was affected  </li>\n<li>The validator and its delegators were slashed 5% of their stake delegated with the validator (~75,000 OSMO, ~$20,000 USD)  </li>\n<li>The incident occurred at Osmosis block height 30968345</li>\n</ul>\n<h2 id=\"technical-details\"><strong>Technical Details</strong></h2>\n<h3 id=\"root-cause\"><strong>Root Cause</strong></h3>\n<p>The issue was a race condition in the signature state handling code. When two sign requests arrive nearly simultaneously for the same Height-Round-Step (HRS), a split read-write lock pattern allowed both to proceed when they should have been serialized. This vulnerability allowed Horcrux to sign both a \"yes\" vote (non-nil BlockID) and a \"no\" vote (nil BlockID) for the same block, which constitutes a double sign violation.</p>\n<p>In the affected code:</p>\n<ol>\n<li>The <code>HRSKey()</code> method used a read lock to check the current signature state  </li>\n<li>The <code>cacheAndMarshal()</code> method used a separate write lock to update the state</li>\n</ol>\n<p>Because the usage of these operations unlocked in the middle to perform checks rather than occurring under a single lock, they were not atomic. Very rarely, two concurrent signature requests could both pass the initial safety check before either one updated the state, leading to a double signature.</p>\n<p>Evidence from logs shows two different signatures were produced within 1.5 milliseconds of each other:</p>\n<pre><code>DuplicateVoteEvidence{\n  VoteA: Vote{69:03C016AB7EC3 30968345/00/SIGNED_MSG_TYPE_PREVOTE(Prevote) 000000000000 BEEB4E1F5432 000000000000 @ 2025-03-06T21:35:48.759070033Z}, \n  VoteB: Vote{69:03C016AB7EC3 30968345/00/SIGNED_MSG_TYPE_PREVOTE(Prevote) 817EB28D720F FAE04CB3CF89 000000000000 @ 2025-03-06T21:35:48.760639069Z}\n}\n</code></pre>\n<p>This matches the signatures reported in the Horcrux cosigner logs:</p>\n<ul>\n<li>Cosigner-1: <code>sig=FAE04CB3CF89 ts=\"2025-03-06 21:35:48.760639069 +0000 UTC\"</code>  </li>\n<li>Cosigner-2: <code>sig=BEEB4E1F5432 ts=\"2025-03-06 21:35:48.759070033 +0000 UTC\"</code></li>\n</ul>\n<p>The race condition allowed both signatures to be validated and broadcast, resulting in the double sign.</p>\n<h3 id=\"fix\"><strong>Fix</strong></h3>\n<p>The fix implements a single mutex lock that covers both the reading of the current signature state and the subsequent writing of any updates:</p>\n<pre><code class=\"language-go\">func (signState *SignState) Save(\n    ssc SignStateConsensus,\n    pendingDiskWG *sync.WaitGroup,\n) error {\n    signState.mu.Lock()\n    if err := signState.getErrorIfLessOrEqual(ssc.Height, ssc.Round, ssc.Step); err != nil {\n        signState.mu.Unlock()\n        return err\n    }\n\n    // HRS is greater than existing state, move forward with caching and saving.\n    signState.cache[ssc.HRSKey()] = ssc\n    \n    // Update state\n    // ...\n    \n    signStateCopy := signState.copy()\n    signState.mu.Unlock()\n    \n    // Perform disk operations\n    // ...\n}\n</code></pre>\n<p>By using a single lock for both operations, we ensure that only one signature request for a given HRS can proceed at a time, eliminating the race condition.</p>\n<h2 id=\"timeline\"><strong>Timeline</strong></h2>\n<ul>\n<li><strong>July 6, 2023</strong>: Vulnerability introduced in PR #169 \"sign state signaling\"  </li>\n<li><strong>March 6, 2025, ~21:35 UTC</strong>: 01node double-sign occurred at Osmosis block height 30968345  </li>\n<li><strong>March 6, 2025, ~23:25 UTC</strong>: 01node reported the incident  </li>\n<li><strong>March 7, 2025, ~1:03 UTC</strong>: Root cause identified and fix developed  </li>\n<li><strong>March 7, 2025</strong>: Fix released and deployed (planned)</li>\n</ul>\n<h2 id=\"recommendations\"><strong>Recommendations</strong></h2>\n<p>All Horcrux users running versions v3.1.0 through v3.3.1 should update to the patched version immediately. The fix is backward compatible and does not require any configuration changes.</p>\n<p>Update instructions:</p>\n<ol>\n<li>Download the v3.3.2 release binary or container image, or build from source on the v3.3.2 tag  </li>\n<li>Apply the release binary or image to your deployment  </li>\n<li>Restart your cosigner processes one at a time to ensure continuous validator operation</li>\n</ol>\n<h2 id=\"preventive-measures\"><strong>Preventive Measures</strong></h2>\n<p>To prevent similar issues in the future, we are implementing the following measures:</p>\n<ol>\n<li>Adding additional tests focused on concurrent signature requests  </li>\n<li>Implementing a comprehensive review of all critical-path mutex usage in the codebase  </li>\n<li>Adding additional logging and monitoring for potential double-sign conditions  </li>\n<li>Enhancing the code review process for security-critical components</li>\n</ol>\n<h2 id=\"conclusion\"><strong>Conclusion</strong></h2>\n<p>We deeply regret this incident and the impact it has had on affected validators. Horcrux was specifically designed to prevent double-signing, and we take this failure extremely seriously. We are committed to making all necessary improvements to ensure this type of incident cannot occur again.</p>\n<p>Strangelove is in direct communication with affected parties and will provide any assistance needed, including detailed technical information about the incident and remediation steps.</p>\n<p>We will be working with 01node to reimburse those impacted by the tombstone event slash.</p>\n<p>For any questions or concerns regarding this incident, please contact <a href=\"mailto:security@strange.love\">security@strange.love</a>.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/strangelove-ventures/horcrux/security/advisories/GHSA-6wxf-7784-62fp\">https://github.com/strangelove-ventures/horcrux/security/advisories/GHSA-6wxf-7784-62fp</a></li>\n<li><a href=\"https://github.com/strangelove-ventures/horcrux/pull/169\">https://github.com/strangelove-ventures/horcrux/pull/169</a></li>\n<li><a href=\"https://github.com/strangelove-ventures/horcrux/commit/fb49be9baed30942b81b42da2b4f7040a2a83c02\">https://github.com/strangelove-ventures/horcrux/commit/fb49be9baed30942b81b42da2b4f7040a2a83c02</a></li>\n<li><a href=\"https://github.com/strangelove-ventures/horcrux/releases/tag/v3.3.2\">https://github.com/strangelove-ventures/horcrux/releases/tag/v3.3.2</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-6wxf-7784-62fp\">https://github.com/advisories/GHSA-6wxf-7784-62fp</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-6wxf-7784-62fp",
            "title": "[github.com/strangelove-ventures/horcrux/v3] Horcrux Double Sign Possibility",
            "date_modified": "2025-03-07T20:00:04.000Z",
            "date_published": "2025-03-07T20:00:01.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-6wxf-7784-62fp"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>In vulnerable versions of Fleet, an attacker could craft a specially-formed SAML response to:</p>\n<ul>\n<li>Forge authentication assertions, potentially impersonating legitimate users.</li>\n<li>If Just-In-Time (JIT) provisioning is enabled, the attacker could provision a new administrative user account.</li>\n<li>If MDM enrollment is enabled, certain endpoints could be used to create new accounts tied to forged assertions.</li>\n</ul>\n<p>This could allow unauthorized access to Fleet, including administrative access, visibility into device data, and modification of configuration. </p>\n<h3 id=\"patches\">Patches</h3>\n<p>This issue is addressed in commit <a href=\"https://github.com/fleetdm/fleet/commit/fc96cc4e91047250afb12f65ad70e90b30a7fb1c\">fc96cc4</a> and is available in Fleet version 4.64.2.</p>\n<p>The following backport versions also address this issue: </p>\n<ul>\n<li>4.63.2</li>\n<li>4.62.4</li>\n<li>4.58.1</li>\n<li>4.53.2</li>\n</ul>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>If an immediate upgrade is not possible, Fleet users should temporarily disable <a href=\"https://fleetdm.com/docs/deploy/single-sign-on-sso\">single-sign-on (SSO)</a> and use password authentication.</p>\n<h3 id=\"credit\">Credit</h3>\n<p>Thank you @hakivvi, as well as Jeffrey Hofmann and Colby Morgan from the Robinhood Red Team for finding and reporting this vulnerability using our <a href=\"https://github.com/fleetdm/fleet/blob/main/SECURITY.md\">responsible disclosure process</a>.</p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any questions or comments about this advisory:</p>\n<ul>\n<li>Email us at <a href=\"mailto:security@fleetdm.com\">security@fleetdm.com</a></li>\n<li>Join #fleet in <a href=\"https://join.slack.com/t/osquery/shared_invite/zt-h29zm0gk-s2DBtGUTW4CFel0f0IjTEw\">osquery Slack</a></li>\n</ul>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/fleetdm/fleet/security/advisories/GHSA-52jx-g6m5-h735\">https://github.com/fleetdm/fleet/security/advisories/GHSA-52jx-g6m5-h735</a></li>\n<li><a href=\"https://github.com/fleetdm/fleet/commit/718c95e47ad010ad6b8ceb3f3460e921fbfc53bb\">https://github.com/fleetdm/fleet/commit/718c95e47ad010ad6b8ceb3f3460e921fbfc53bb</a></li>\n<li><a href=\"https://github.com/fleetdm/fleet/releases/tag/fleet-v4.64.2\">https://github.com/fleetdm/fleet/releases/tag/fleet-v4.64.2</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2025-27509\">https://nvd.nist.gov/vuln/detail/CVE-2025-27509</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-52jx-g6m5-h735\">https://github.com/advisories/GHSA-52jx-g6m5-h735</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-52jx-g6m5-h735",
            "title": "[github.com/fleetdm/fleet/v4] Fleet has SAML authentication vulnerability due to improper SAML response validation",
            "date_modified": "2025-03-06T23:32:49.000Z",
            "date_published": "2025-03-06T19:12:27.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-52jx-g6m5-h735"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>In vulnerable versions of Fleet, an attacker could craft a specially-formed SAML response to:</p>\n<ul>\n<li>Forge authentication assertions, potentially impersonating legitimate users.</li>\n<li>If Just-In-Time (JIT) provisioning is enabled, the attacker could provision a new administrative user account.</li>\n<li>If MDM enrollment is enabled, certain endpoints could be used to create new accounts tied to forged assertions.</li>\n</ul>\n<p>This could allow unauthorized access to Fleet, including administrative access, visibility into device data, and modification of configuration. </p>\n<h3 id=\"patches\">Patches</h3>\n<p>This issue is addressed in commit <a href=\"https://github.com/fleetdm/fleet/commit/fc96cc4e91047250afb12f65ad70e90b30a7fb1c\">fc96cc4</a> and is available in Fleet version 4.64.2.</p>\n<p>The following backport versions also address this issue: </p>\n<ul>\n<li>4.63.2</li>\n<li>4.62.4</li>\n<li>4.58.1</li>\n<li>4.53.2</li>\n</ul>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>If an immediate upgrade is not possible, Fleet users should temporarily disable <a href=\"https://fleetdm.com/docs/deploy/single-sign-on-sso\">single-sign-on (SSO)</a> and use password authentication.</p>\n<h3 id=\"credit\">Credit</h3>\n<p>Thank you @hakivvi, as well as Jeffrey Hofmann and Colby Morgan from the Robinhood Red Team for finding and reporting this vulnerability using our <a href=\"https://github.com/fleetdm/fleet/blob/main/SECURITY.md\">responsible disclosure process</a>.</p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any questions or comments about this advisory:</p>\n<ul>\n<li>Email us at <a href=\"mailto:security@fleetdm.com\">security@fleetdm.com</a></li>\n<li>Join #fleet in <a href=\"https://join.slack.com/t/osquery/shared_invite/zt-h29zm0gk-s2DBtGUTW4CFel0f0IjTEw\">osquery Slack</a></li>\n</ul>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/fleetdm/fleet/security/advisories/GHSA-52jx-g6m5-h735\">https://github.com/fleetdm/fleet/security/advisories/GHSA-52jx-g6m5-h735</a></li>\n<li><a href=\"https://github.com/fleetdm/fleet/commit/718c95e47ad010ad6b8ceb3f3460e921fbfc53bb\">https://github.com/fleetdm/fleet/commit/718c95e47ad010ad6b8ceb3f3460e921fbfc53bb</a></li>\n<li><a href=\"https://github.com/fleetdm/fleet/releases/tag/fleet-v4.64.2\">https://github.com/fleetdm/fleet/releases/tag/fleet-v4.64.2</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2025-27509\">https://nvd.nist.gov/vuln/detail/CVE-2025-27509</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-52jx-g6m5-h735\">https://github.com/advisories/GHSA-52jx-g6m5-h735</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-52jx-g6m5-h735",
            "title": "[github.com/fleetdm/fleet/v4] Fleet has SAML authentication vulnerability due to improper SAML response validation",
            "date_modified": "2025-03-06T23:32:49.000Z",
            "date_published": "2025-03-06T19:12:27.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-52jx-g6m5-h735"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>In vulnerable versions of Fleet, an attacker could craft a specially-formed SAML response to:</p>\n<ul>\n<li>Forge authentication assertions, potentially impersonating legitimate users.</li>\n<li>If Just-In-Time (JIT) provisioning is enabled, the attacker could provision a new administrative user account.</li>\n<li>If MDM enrollment is enabled, certain endpoints could be used to create new accounts tied to forged assertions.</li>\n</ul>\n<p>This could allow unauthorized access to Fleet, including administrative access, visibility into device data, and modification of configuration. </p>\n<h3 id=\"patches\">Patches</h3>\n<p>This issue is addressed in commit <a href=\"https://github.com/fleetdm/fleet/commit/fc96cc4e91047250afb12f65ad70e90b30a7fb1c\">fc96cc4</a> and is available in Fleet version 4.64.2.</p>\n<p>The following backport versions also address this issue: </p>\n<ul>\n<li>4.63.2</li>\n<li>4.62.4</li>\n<li>4.58.1</li>\n<li>4.53.2</li>\n</ul>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>If an immediate upgrade is not possible, Fleet users should temporarily disable <a href=\"https://fleetdm.com/docs/deploy/single-sign-on-sso\">single-sign-on (SSO)</a> and use password authentication.</p>\n<h3 id=\"credit\">Credit</h3>\n<p>Thank you @hakivvi, as well as Jeffrey Hofmann and Colby Morgan from the Robinhood Red Team for finding and reporting this vulnerability using our <a href=\"https://github.com/fleetdm/fleet/blob/main/SECURITY.md\">responsible disclosure process</a>.</p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any questions or comments about this advisory:</p>\n<ul>\n<li>Email us at <a href=\"mailto:security@fleetdm.com\">security@fleetdm.com</a></li>\n<li>Join #fleet in <a href=\"https://join.slack.com/t/osquery/shared_invite/zt-h29zm0gk-s2DBtGUTW4CFel0f0IjTEw\">osquery Slack</a></li>\n</ul>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/fleetdm/fleet/security/advisories/GHSA-52jx-g6m5-h735\">https://github.com/fleetdm/fleet/security/advisories/GHSA-52jx-g6m5-h735</a></li>\n<li><a href=\"https://github.com/fleetdm/fleet/commit/718c95e47ad010ad6b8ceb3f3460e921fbfc53bb\">https://github.com/fleetdm/fleet/commit/718c95e47ad010ad6b8ceb3f3460e921fbfc53bb</a></li>\n<li><a href=\"https://github.com/fleetdm/fleet/releases/tag/fleet-v4.64.2\">https://github.com/fleetdm/fleet/releases/tag/fleet-v4.64.2</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2025-27509\">https://nvd.nist.gov/vuln/detail/CVE-2025-27509</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-52jx-g6m5-h735\">https://github.com/advisories/GHSA-52jx-g6m5-h735</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-52jx-g6m5-h735",
            "title": "[github.com/fleetdm/fleet/v4] Fleet has SAML authentication vulnerability due to improper SAML response validation",
            "date_modified": "2025-03-06T23:32:49.000Z",
            "date_published": "2025-03-06T19:12:27.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-52jx-g6m5-h735"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>In vulnerable versions of Fleet, an attacker could craft a specially-formed SAML response to:</p>\n<ul>\n<li>Forge authentication assertions, potentially impersonating legitimate users.</li>\n<li>If Just-In-Time (JIT) provisioning is enabled, the attacker could provision a new administrative user account.</li>\n<li>If MDM enrollment is enabled, certain endpoints could be used to create new accounts tied to forged assertions.</li>\n</ul>\n<p>This could allow unauthorized access to Fleet, including administrative access, visibility into device data, and modification of configuration. </p>\n<h3 id=\"patches\">Patches</h3>\n<p>This issue is addressed in commit <a href=\"https://github.com/fleetdm/fleet/commit/fc96cc4e91047250afb12f65ad70e90b30a7fb1c\">fc96cc4</a> and is available in Fleet version 4.64.2.</p>\n<p>The following backport versions also address this issue: </p>\n<ul>\n<li>4.63.2</li>\n<li>4.62.4</li>\n<li>4.58.1</li>\n<li>4.53.2</li>\n</ul>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>If an immediate upgrade is not possible, Fleet users should temporarily disable <a href=\"https://fleetdm.com/docs/deploy/single-sign-on-sso\">single-sign-on (SSO)</a> and use password authentication.</p>\n<h3 id=\"credit\">Credit</h3>\n<p>Thank you @hakivvi, as well as Jeffrey Hofmann and Colby Morgan from the Robinhood Red Team for finding and reporting this vulnerability using our <a href=\"https://github.com/fleetdm/fleet/blob/main/SECURITY.md\">responsible disclosure process</a>.</p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any questions or comments about this advisory:</p>\n<ul>\n<li>Email us at <a href=\"mailto:security@fleetdm.com\">security@fleetdm.com</a></li>\n<li>Join #fleet in <a href=\"https://join.slack.com/t/osquery/shared_invite/zt-h29zm0gk-s2DBtGUTW4CFel0f0IjTEw\">osquery Slack</a></li>\n</ul>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/fleetdm/fleet/security/advisories/GHSA-52jx-g6m5-h735\">https://github.com/fleetdm/fleet/security/advisories/GHSA-52jx-g6m5-h735</a></li>\n<li><a href=\"https://github.com/fleetdm/fleet/commit/718c95e47ad010ad6b8ceb3f3460e921fbfc53bb\">https://github.com/fleetdm/fleet/commit/718c95e47ad010ad6b8ceb3f3460e921fbfc53bb</a></li>\n<li><a href=\"https://github.com/fleetdm/fleet/releases/tag/fleet-v4.64.2\">https://github.com/fleetdm/fleet/releases/tag/fleet-v4.64.2</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2025-27509\">https://nvd.nist.gov/vuln/detail/CVE-2025-27509</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-52jx-g6m5-h735\">https://github.com/advisories/GHSA-52jx-g6m5-h735</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-52jx-g6m5-h735",
            "title": "[github.com/fleetdm/fleet/v4] Fleet has SAML authentication vulnerability due to improper SAML response validation",
            "date_modified": "2025-03-06T23:32:49.000Z",
            "date_published": "2025-03-06T19:12:27.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-52jx-g6m5-h735"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>In vulnerable versions of Fleet, an attacker could craft a specially-formed SAML response to:</p>\n<ul>\n<li>Forge authentication assertions, potentially impersonating legitimate users.</li>\n<li>If Just-In-Time (JIT) provisioning is enabled, the attacker could provision a new administrative user account.</li>\n<li>If MDM enrollment is enabled, certain endpoints could be used to create new accounts tied to forged assertions.</li>\n</ul>\n<p>This could allow unauthorized access to Fleet, including administrative access, visibility into device data, and modification of configuration. </p>\n<h3 id=\"patches\">Patches</h3>\n<p>This issue is addressed in commit <a href=\"https://github.com/fleetdm/fleet/commit/fc96cc4e91047250afb12f65ad70e90b30a7fb1c\">fc96cc4</a> and is available in Fleet version 4.64.2.</p>\n<p>The following backport versions also address this issue: </p>\n<ul>\n<li>4.63.2</li>\n<li>4.62.4</li>\n<li>4.58.1</li>\n<li>4.53.2</li>\n</ul>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>If an immediate upgrade is not possible, Fleet users should temporarily disable <a href=\"https://fleetdm.com/docs/deploy/single-sign-on-sso\">single-sign-on (SSO)</a> and use password authentication.</p>\n<h3 id=\"credit\">Credit</h3>\n<p>Thank you @hakivvi, as well as Jeffrey Hofmann and Colby Morgan from the Robinhood Red Team for finding and reporting this vulnerability using our <a href=\"https://github.com/fleetdm/fleet/blob/main/SECURITY.md\">responsible disclosure process</a>.</p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any questions or comments about this advisory:</p>\n<ul>\n<li>Email us at <a href=\"mailto:security@fleetdm.com\">security@fleetdm.com</a></li>\n<li>Join #fleet in <a href=\"https://join.slack.com/t/osquery/shared_invite/zt-h29zm0gk-s2DBtGUTW4CFel0f0IjTEw\">osquery Slack</a></li>\n</ul>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/fleetdm/fleet/security/advisories/GHSA-52jx-g6m5-h735\">https://github.com/fleetdm/fleet/security/advisories/GHSA-52jx-g6m5-h735</a></li>\n<li><a href=\"https://github.com/fleetdm/fleet/commit/718c95e47ad010ad6b8ceb3f3460e921fbfc53bb\">https://github.com/fleetdm/fleet/commit/718c95e47ad010ad6b8ceb3f3460e921fbfc53bb</a></li>\n<li><a href=\"https://github.com/fleetdm/fleet/releases/tag/fleet-v4.64.2\">https://github.com/fleetdm/fleet/releases/tag/fleet-v4.64.2</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2025-27509\">https://nvd.nist.gov/vuln/detail/CVE-2025-27509</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-52jx-g6m5-h735\">https://github.com/advisories/GHSA-52jx-g6m5-h735</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-52jx-g6m5-h735",
            "title": "[github.com/fleetdm/fleet/v4] Fleet has SAML authentication vulnerability due to improper SAML response validation",
            "date_modified": "2025-03-06T23:32:49.000Z",
            "date_published": "2025-03-06T19:12:27.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-52jx-g6m5-h735"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>In all Envoy Gateway versions prior to 1.2.7 and 1.3.1 a default Envoy Proxy access log configuration is used. This format is vulnerable to log injection attacks. </p>\n<p>If the attacker uses a specially crafted user-agent which performs json injection, then he could add and overwrite fields to the access log. </p>\n<p>Examples of attacks include:</p>\n<ul>\n<li><p>Using following string as user agent : <code>HELLO-WORLD\", \"evil-ip\": \"1.1.1.1\", \"x-forwarded-for\": \"1.1.1.1</code> would lead to setting of new access log properties and overwrite of existing properties. Existing properties such as the value of the X-Forwarded-For header may have importance for security analysis of access logs, and their overwrite can be used to hide malicious activity. </p>\n</li>\n<li><p>Using the following string as user-agent : <code>\"</code> which renders an invalid json document. The invalid document may fail to be processed by observability solutions, which would allow attacker to hide malicious activity.</p>\n</li>\n</ul>\n<h3 id=\"patches\">Patches</h3>\n<p>1.3.1, 1.2.7</p>\n<h3 id=\"fix\">Fix</h3>\n<p>Using JSON format as the default format for access logs. The logged document will contain the same key and values as before. Only the order of properties is different inside the logged document.</p>\n<h3 id=\"workaround\">Workaround</h3>\n<p>One can overwrite the old text based default format with JSON formatter by setting the following property: \n\"EnvoyProxy.spec.telemetry.<a href=\"https://gateway.envoyproxy.io/v1.3/api/extension_types/#proxyaccesslog\">accessLog</a>\" to </p>\n<pre><code>settings:\n- format:\n    type: JSON\n    json:\n      start_time: '%START_TIME%'\n      method: '%REQ(:METHOD)%'\n      x-envoy-origin-path: '%REQ(X-ENVOY-ORIGINAL-PATH?:PATH)%'\n      protocol: '%PROTOCOL%'\n      response_code: '%RESPONSE_CODE%'\n      response_flags: '%RESPONSE_FLAGS%'\n      response_code_details: '%RESPONSE_CODE_DETAILS%'\n      connection_termination_details: '%CONNECTION_TERMINATION_DETAILS%'\n      upstream_transport_failure_reason: '%UPSTREAM_TRANSPORT_FAILURE_REASON%'\n      bytes_received: '%BYTES_RECEIVED%'\n      bytes_sent: '%BYTES_SENT%'\n      duration: '%DURATION%'\n      x-envoy-upstream-service-time: '%RESP(X-ENVOY-UPSTREAM-SERVICE-TIME)%'\n      x-forwarded-for: '%REQ(X-FORWARDED-FOR)%'\n      user-agent: '%REQ(USER-AGENT)%'\n      x-request-id: '%REQ(X-REQUEST-ID)%'\n      :authority: '%REQ(:AUTHORITY)%'\n      upstream_host: '%UPSTREAM_HOST%'\n      upstream_cluster: '%UPSTREAM_CLUSTER%'\n      upstream_local_address: '%UPSTREAM_LOCAL_ADDRESS%'\n      downstream_local_address: '%DOWNSTREAM_LOCAL_ADDRESS%'\n      downstream_remote_address: '%DOWNSTREAM_REMOTE_ADDRESS%'\n      requested_server_name: '%REQUESTED_SERVER_NAME%'\n      route_name: '%ROUTE_NAME%'\n</code></pre>\n<p>see API definition <a href=\"https://gateway.envoyproxy.io/v1.3/api/extension_types/#proxyaccesslogformat\">here</a></p>\n<h3 id=\"references\">References</h3>\n<p><em>Are there any links users can visit to find out more?</em></p>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/envoyproxy/gateway/security/advisories/GHSA-mf24-chxh-hmvj\">https://github.com/envoyproxy/gateway/security/advisories/GHSA-mf24-chxh-hmvj</a></li>\n<li><a href=\"https://github.com/envoyproxy/gateway/commit/041d474a70d5921e5d65e6e14ea60e14dac70b01\">https://github.com/envoyproxy/gateway/commit/041d474a70d5921e5d65e6e14ea60e14dac70b01</a></li>\n<li><a href=\"https://github.com/envoyproxy/gateway/commit/358bed50dcb7b32f39a2edb252fb1399c7fc65dc\">https://github.com/envoyproxy/gateway/commit/358bed50dcb7b32f39a2edb252fb1399c7fc65dc</a></li>\n<li><a href=\"https://github.com/envoyproxy/gateway/releases/tag/v1.2.7\">https://github.com/envoyproxy/gateway/releases/tag/v1.2.7</a></li>\n<li><a href=\"https://github.com/envoyproxy/gateway/releases/tag/v1.3.1\">https://github.com/envoyproxy/gateway/releases/tag/v1.3.1</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2025-25294\">https://nvd.nist.gov/vuln/detail/CVE-2025-25294</a></li>\n<li><a href=\"https://github.com/envoyproxy/gateway/commit/8f48f5199cf1bbb9a8ac0695c5171bfef6c9198a\">https://github.com/envoyproxy/gateway/commit/8f48f5199cf1bbb9a8ac0695c5171bfef6c9198a</a></li>\n<li><a href=\"https://pkg.go.dev/vuln/GO-2025-3504\">https://pkg.go.dev/vuln/GO-2025-3504</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-mf24-chxh-hmvj\">https://github.com/advisories/GHSA-mf24-chxh-hmvj</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-mf24-chxh-hmvj",
            "title": "[github.com/envoyproxy/gateway] Envoy Gateway Log Injection Vulnerability",
            "date_modified": "2025-03-11T17:15:39.000Z",
            "date_published": "2025-03-06T19:11:39.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-mf24-chxh-hmvj"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>In all Envoy Gateway versions prior to 1.2.7 and 1.3.1 a default Envoy Proxy access log configuration is used. This format is vulnerable to log injection attacks. </p>\n<p>If the attacker uses a specially crafted user-agent which performs json injection, then he could add and overwrite fields to the access log. </p>\n<p>Examples of attacks include:</p>\n<ul>\n<li><p>Using following string as user agent : <code>HELLO-WORLD\", \"evil-ip\": \"1.1.1.1\", \"x-forwarded-for\": \"1.1.1.1</code> would lead to setting of new access log properties and overwrite of existing properties. Existing properties such as the value of the X-Forwarded-For header may have importance for security analysis of access logs, and their overwrite can be used to hide malicious activity. </p>\n</li>\n<li><p>Using the following string as user-agent : <code>\"</code> which renders an invalid json document. The invalid document may fail to be processed by observability solutions, which would allow attacker to hide malicious activity.</p>\n</li>\n</ul>\n<h3 id=\"patches\">Patches</h3>\n<p>1.3.1, 1.2.7</p>\n<h3 id=\"fix\">Fix</h3>\n<p>Using JSON format as the default format for access logs. The logged document will contain the same key and values as before. Only the order of properties is different inside the logged document.</p>\n<h3 id=\"workaround\">Workaround</h3>\n<p>One can overwrite the old text based default format with JSON formatter by setting the following property: \n\"EnvoyProxy.spec.telemetry.<a href=\"https://gateway.envoyproxy.io/v1.3/api/extension_types/#proxyaccesslog\">accessLog</a>\" to </p>\n<pre><code>settings:\n- format:\n    type: JSON\n    json:\n      start_time: '%START_TIME%'\n      method: '%REQ(:METHOD)%'\n      x-envoy-origin-path: '%REQ(X-ENVOY-ORIGINAL-PATH?:PATH)%'\n      protocol: '%PROTOCOL%'\n      response_code: '%RESPONSE_CODE%'\n      response_flags: '%RESPONSE_FLAGS%'\n      response_code_details: '%RESPONSE_CODE_DETAILS%'\n      connection_termination_details: '%CONNECTION_TERMINATION_DETAILS%'\n      upstream_transport_failure_reason: '%UPSTREAM_TRANSPORT_FAILURE_REASON%'\n      bytes_received: '%BYTES_RECEIVED%'\n      bytes_sent: '%BYTES_SENT%'\n      duration: '%DURATION%'\n      x-envoy-upstream-service-time: '%RESP(X-ENVOY-UPSTREAM-SERVICE-TIME)%'\n      x-forwarded-for: '%REQ(X-FORWARDED-FOR)%'\n      user-agent: '%REQ(USER-AGENT)%'\n      x-request-id: '%REQ(X-REQUEST-ID)%'\n      :authority: '%REQ(:AUTHORITY)%'\n      upstream_host: '%UPSTREAM_HOST%'\n      upstream_cluster: '%UPSTREAM_CLUSTER%'\n      upstream_local_address: '%UPSTREAM_LOCAL_ADDRESS%'\n      downstream_local_address: '%DOWNSTREAM_LOCAL_ADDRESS%'\n      downstream_remote_address: '%DOWNSTREAM_REMOTE_ADDRESS%'\n      requested_server_name: '%REQUESTED_SERVER_NAME%'\n      route_name: '%ROUTE_NAME%'\n</code></pre>\n<p>see API definition <a href=\"https://gateway.envoyproxy.io/v1.3/api/extension_types/#proxyaccesslogformat\">here</a></p>\n<h3 id=\"references\">References</h3>\n<p><em>Are there any links users can visit to find out more?</em></p>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/envoyproxy/gateway/security/advisories/GHSA-mf24-chxh-hmvj\">https://github.com/envoyproxy/gateway/security/advisories/GHSA-mf24-chxh-hmvj</a></li>\n<li><a href=\"https://github.com/envoyproxy/gateway/commit/041d474a70d5921e5d65e6e14ea60e14dac70b01\">https://github.com/envoyproxy/gateway/commit/041d474a70d5921e5d65e6e14ea60e14dac70b01</a></li>\n<li><a href=\"https://github.com/envoyproxy/gateway/commit/358bed50dcb7b32f39a2edb252fb1399c7fc65dc\">https://github.com/envoyproxy/gateway/commit/358bed50dcb7b32f39a2edb252fb1399c7fc65dc</a></li>\n<li><a href=\"https://github.com/envoyproxy/gateway/releases/tag/v1.2.7\">https://github.com/envoyproxy/gateway/releases/tag/v1.2.7</a></li>\n<li><a href=\"https://github.com/envoyproxy/gateway/releases/tag/v1.3.1\">https://github.com/envoyproxy/gateway/releases/tag/v1.3.1</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2025-25294\">https://nvd.nist.gov/vuln/detail/CVE-2025-25294</a></li>\n<li><a href=\"https://github.com/envoyproxy/gateway/commit/8f48f5199cf1bbb9a8ac0695c5171bfef6c9198a\">https://github.com/envoyproxy/gateway/commit/8f48f5199cf1bbb9a8ac0695c5171bfef6c9198a</a></li>\n<li><a href=\"https://pkg.go.dev/vuln/GO-2025-3504\">https://pkg.go.dev/vuln/GO-2025-3504</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-mf24-chxh-hmvj\">https://github.com/advisories/GHSA-mf24-chxh-hmvj</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-mf24-chxh-hmvj",
            "title": "[github.com/envoyproxy/gateway] Envoy Gateway Log Injection Vulnerability",
            "date_modified": "2025-03-11T17:15:39.000Z",
            "date_published": "2025-03-06T19:11:39.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-mf24-chxh-hmvj"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>The Pinecone Simulator (pineconesim) included in Pinecone up to commit <a href=\"https://github.com/matrix-org/pinecone/commit/ea4c33717fd74ef7d6f49490625a0fa10e3f5bbc\">https://github.com/matrix-org/pinecone/commit/ea4c33717fd74ef7d6f49490625a0fa10e3f5bbc</a> is vulnerable to stored cross-site scripting. The payload storage is not permanent and will be wiped when restarting pineconsim.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>Commit <a href=\"https://github.com/matrix-org/pinecone/commit/218b2801995b174085cb1c8fafe2d3aa661f85bd\">https://github.com/matrix-org/pinecone/commit/218b2801995b174085cb1c8fafe2d3aa661f85bd</a> contains the fixes.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>N/A</p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any questions or comments about this advisory, please email us at <a href=\"mailto:security@matrix.org\">security at matrix.org</a>.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/matrix-org/pinecone/security/advisories/GHSA-fr62-mg2q-7wqv\">https://github.com/matrix-org/pinecone/security/advisories/GHSA-fr62-mg2q-7wqv</a></li>\n<li><a href=\"https://github.com/matrix-org/pinecone/commit/218b2801995b174085cb1c8fafe2d3aa661f85bd\">https://github.com/matrix-org/pinecone/commit/218b2801995b174085cb1c8fafe2d3aa661f85bd</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2025-27155\">https://nvd.nist.gov/vuln/detail/CVE-2025-27155</a></li>\n<li><a href=\"https://pkg.go.dev/vuln/GO-2025-3500\">https://pkg.go.dev/vuln/GO-2025-3500</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-fr62-mg2q-7wqv\">https://github.com/advisories/GHSA-fr62-mg2q-7wqv</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-fr62-mg2q-7wqv",
            "title": "[github.com/matrix-org/pinecone] In-memory stored Cross-site scripting (XSS) vulnerability in pineconesim",
            "date_modified": "2025-03-11T17:16:40.000Z",
            "date_published": "2025-03-04T17:23:15.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-fr62-mg2q-7wqv"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"summary\">Summary</h3>\n<p>ZITADEL's Admin API contains Insecure Direct Object Reference (IDOR) vulnerabilities that allow authenticated users, without specific IAM roles, to modify sensitive settings. While several endpoints are affected, the most critical vulnerability lies in the ability to manipulate LDAP configurations. Customers who do not utilize LDAP for authentication are not at risk from the most severe aspects of this vulnerability. However, we still strongly recommend upgrading to the patched version to address all identified issues.</p>\n<h3 id=\"description\">Description</h3>\n<p>ZITADEL's Admin API, intended for managing ZITADEL instances, contains 12 HTTP endpoints that are unexpectedly accessible to authenticated ZITADEL users who are not ZITADEL managers. The most critical vulnerable endpoints relate to LDAP configuration:</p>\n<ul>\n<li>/idps/ldap</li>\n<li>/idps/ldap/{id}</li>\n</ul>\n<p>By accessing these endpoints, unauthorized users could:</p>\n<ul>\n<li>Modify ZITADEL's instance LDAP settings, redirecting all LDAP login attempts to a malicious server, effectively taking over user accounts.  </li>\n<li>Expose the original LDAP server's password, potentially compromising all user accounts.</li>\n</ul>\n<h3 id=\"additional-vulnerable-endpoints\">Additional Vulnerable Endpoints</h3>\n<p>The following endpoints are also affected by IDOR vulnerabilities, potentially allowing unauthorized modification of instance settings such as languages, labels, and templates:</p>\n<ul>\n<li>/idps/templates/_search</li>\n<li>/idps/templates/{id}</li>\n<li>/policies/label/_activate</li>\n<li>/policies/label/logo</li>\n<li>/policies/label/logo_dark</li>\n<li>/policies/label/icon</li>\n<li>/policies/label/icon_dark</li>\n<li>/policies/label/font</li>\n<li>/text/message/passwordless_registration/{language}</li>\n<li>/text/login/{language}</li>\n</ul>\n<h3 id=\"impact\">Impact</h3>\n<p>The impact of this vulnerability varies depending on whether a ZITADEL instance utilizes LDAP for authentication:</p>\n<ul>\n<li>LDAP Users: Successful exploitation could lead to complete takeover of user accounts and exposure of the LDAP server's password.  </li>\n<li>Non-LDAP Users: While the most severe risks are related to LDAP, exploitation of the additional vulnerable endpoints could still allow unauthorized modification of instance settings, impacting all organizations.</li>\n</ul>\n<h3 id=\"patches\">Patches</h3>\n<p>2.x versions are fixed on &gt;= <a href=\"https://github.com/zitadel/zitadel/releases/tag/v2.71.0\">2.71.0</a>\n2.70.x versions are fixed on &gt;= <a href=\"https://github.com/zitadel/zitadel/releases/tag/v2.70.1\">2.70.1</a>\n2.69.x versions are fixed on &gt;= <a href=\"https://github.com/zitadel/zitadel/releases/tag/v2.69.4\">2.69.4</a>\n2.68.x versions are fixed on &gt;= <a href=\"https://github.com/zitadel/zitadel/releases/tag/v2.68.4\">2.68.4</a>\n2.67.x versions are fixed on &gt;= <a href=\"https://github.com/zitadel/zitadel/releases/tag/v2.67.8\">2.67.8</a>\n2.66.x versions are fixed on &gt;= <a href=\"https://github.com/zitadel/zitadel/releases/tag/v2.66.11\">2.66.11</a>\n2.65.x versions are fixed on &gt;= <a href=\"https://github.com/zitadel/zitadel/releases/tag/v2.65.6\">2.65.6</a>\n2.64.x versions are fixed on &gt;= <a href=\"https://github.com/zitadel/zitadel/releases/tag/v2.64.5\">2.64.5</a>\n2.63.x versions are fixed on &gt;= <a href=\"https://github.com/zitadel/zitadel/releases/tag/v2.63.8\">2.63.8</a></p>\n<h3 id=\"questions\">Questions</h3>\n<p>If you have any questions or comments about this advisory, please email us at <a href=\"mailto:security@zitadel.com\">security@zitadel.com</a></p>\n<h3 id=\"credit\">Credit</h3>\n<p>This vulnerability was discovered by Amit Laish, a senior security researcher from GE Vernova and we want to thank him for reporting this to us!</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/zitadel/zitadel/security/advisories/GHSA-f3gh-529w-v32x\">https://github.com/zitadel/zitadel/security/advisories/GHSA-f3gh-529w-v32x</a></li>\n<li><a href=\"https://github.com/zitadel/zitadel/releases/tag/v2.63.8\">https://github.com/zitadel/zitadel/releases/tag/v2.63.8</a></li>\n<li><a href=\"https://github.com/zitadel/zitadel/releases/tag/v2.64.5\">https://github.com/zitadel/zitadel/releases/tag/v2.64.5</a></li>\n<li><a href=\"https://github.com/zitadel/zitadel/releases/tag/v2.65.6\">https://github.com/zitadel/zitadel/releases/tag/v2.65.6</a></li>\n<li><a href=\"https://github.com/zitadel/zitadel/releases/tag/v2.66.11\">https://github.com/zitadel/zitadel/releases/tag/v2.66.11</a></li>\n<li><a href=\"https://github.com/zitadel/zitadel/releases/tag/v2.67.8\">https://github.com/zitadel/zitadel/releases/tag/v2.67.8</a></li>\n<li><a href=\"https://github.com/zitadel/zitadel/releases/tag/v2.68.4\">https://github.com/zitadel/zitadel/releases/tag/v2.68.4</a></li>\n<li><a href=\"https://github.com/zitadel/zitadel/releases/tag/v2.69.4\">https://github.com/zitadel/zitadel/releases/tag/v2.69.4</a></li>\n<li><a href=\"https://github.com/zitadel/zitadel/releases/tag/v2.70.1\">https://github.com/zitadel/zitadel/releases/tag/v2.70.1</a></li>\n<li><a href=\"https://github.com/zitadel/zitadel/releases/tag/v2.71.0\">https://github.com/zitadel/zitadel/releases/tag/v2.71.0</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2025-27507\">https://nvd.nist.gov/vuln/detail/CVE-2025-27507</a></li>\n<li><a href=\"https://github.com/zitadel/zitadel/commit/d9d8339813f1c43d3eb7d8d80f11fdabb2fd2ee4\">https://github.com/zitadel/zitadel/commit/d9d8339813f1c43d3eb7d8d80f11fdabb2fd2ee4</a></li>\n<li><a href=\"https://pkg.go.dev/vuln/GO-2025-3499\">https://pkg.go.dev/vuln/GO-2025-3499</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-f3gh-529w-v32x\">https://github.com/advisories/GHSA-f3gh-529w-v32x</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-f3gh-529w-v32x",
            "title": "[github.com/zitadel/zitadel] IDOR Vulnerabilities in ZITADEL's Admin API that Primarily Impact LDAP Configurations",
            "date_modified": "2025-03-11T17:18:50.000Z",
            "date_published": "2025-03-04T16:43:56.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-f3gh-529w-v32x"
            },
            "tags": [
                "severity"
            ]
        }
    ]
}