<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://azu.github.io/github-advisory-database-rss/npm.rss</id>
    <title>Security Advisory for JavaScript packages hosted at npmjs.com</title>
    <updated>2025-02-27T22:01:29.419Z</updated>
    <generator>github-advisory-database-rss</generator>
    <link rel="alternate" href="https://github.com/advisories?query=type%3Areviewed+ecosystem%3Anpm"/>
    <subtitle>Security Advisory for JavaScript packages hosted at npmjs.com on GitHub</subtitle>
    <rights>github-advisory-database-rss</rights>
    <category term="CRITICAL"/>
    <category term="HIGH"/>
    <category term="MODERATE"/>
    <category term="LOW"/>
    <entry>
        <title type="html"><![CDATA[[@mongodb-js/connection-form] ejson shell parser in MongoDB Compass maybe bypassed]]></title>
        <id>https://github.com/advisories/GHSA-jxr4-4prv-mh83</id>
        <link href="https://github.com/advisories/GHSA-jxr4-4prv-mh83"/>
        <updated>2025-02-27T20:59:12.000Z</updated>
        <content type="html"><![CDATA[<p>MongoDB Compass may be susceptible to code injection due to insufficient sandbox protection settings with the usage of ejson shell parser in Compass' connection handling. This issue affects MongoDB Compass versions prior to version 1.42.2.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-6376">https://nvd.nist.gov/vuln/detail/CVE-2024-6376</a></li>
<li><a href="https://jira.mongodb.org/browse/COMPASS-7496">https://jira.mongodb.org/browse/COMPASS-7496</a></li>
<li><a href="https://github.com/mongodb-js/compass/commit/b1f8050d49d66be3bc499cb317a1e1de45390e51">https://github.com/mongodb-js/compass/commit/b1f8050d49d66be3bc499cb317a1e1de45390e51</a></li>
<li><a href="https://github.com/advisories/GHSA-jxr4-4prv-mh83">https://github.com/advisories/GHSA-jxr4-4prv-mh83</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-jxr4-4prv-mh83</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-07-01T15:32:47.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[mongosh] mongosh vulnerable to local privilege escalation]]></title>
        <id>https://github.com/advisories/GHSA-f5w3-73h4-jpcm</id>
        <link href="https://github.com/advisories/GHSA-f5w3-73h4-jpcm"/>
        <updated>2025-02-27T20:59:01.000Z</updated>
        <content type="html"><![CDATA[<p>mongosh may be susceptible to local privilege escalation under certain conditions potentially enabling unauthorized actions on a user's system with elevated privilege, when a crafted file is stored in C:\node_modules. This issue affects mongosh prior to 2.3.0.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2025-1756">https://nvd.nist.gov/vuln/detail/CVE-2025-1756</a></li>
<li><a href="https://access.redhat.com/errata/RHSA-2025:1756">https://access.redhat.com/errata/RHSA-2025:1756</a></li>
<li><a href="https://jira.mongodb.org/browse/MONGOSH-2028">https://jira.mongodb.org/browse/MONGOSH-2028</a></li>
<li><a href="https://github.com/advisories/GHSA-f5w3-73h4-jpcm">https://github.com/advisories/GHSA-f5w3-73h4-jpcm</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-f5w3-73h4-jpcm</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2025-02-27T18:31:13.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[mongosh] MongoDB Shell may be susceptible to control character Injection via shell output]]></title>
        <id>https://github.com/advisories/GHSA-r95j-4jvf-mrrw</id>
        <link href="https://github.com/advisories/GHSA-r95j-4jvf-mrrw"/>
        <updated>2025-02-27T17:16:10.000Z</updated>
        <content type="html"><![CDATA[<p>The MongoDB Shell may be susceptible to control character injection where an attacker with control over the database cluster contents can inject control characters into the shell output. This may result in the display of falsified messages that appear to originate from mongosh or the underlying operating system, potentially misleading users into executing unsafe actions.</p>
<p>The vulnerability is exploitable only when mongosh is connected to a cluster that is partially or fully controlled by an attacker.</p>
<p>This issue affects mongosh versions prior to 2.3.9.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2025-1693">https://nvd.nist.gov/vuln/detail/CVE-2025-1693</a></li>
<li><a href="https://jira.mongodb.org/browse/MONGOSH-2026">https://jira.mongodb.org/browse/MONGOSH-2026</a></li>
<li><a href="https://github.com/advisories/GHSA-r95j-4jvf-mrrw">https://github.com/advisories/GHSA-r95j-4jvf-mrrw</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-r95j-4jvf-mrrw</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2025-02-27T15:31:51.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[mongosh] MongoDB Shell may be susceptible to control character injection via pasting]]></title>
        <id>https://github.com/advisories/GHSA-973h-3x6p-qg37</id>
        <link href="https://github.com/advisories/GHSA-973h-3x6p-qg37"/>
        <updated>2025-02-27T17:15:55.000Z</updated>
        <content type="html"><![CDATA[<p>The MongoDB Shell may be susceptible to control character injection where an attacker with control of the user’s clipboard could manipulate them to paste text into mongosh that evaluates arbitrary code. Control characters in the pasted text can be used to obfuscate malicious code. This issue affects mongosh versions prior to 2.3.9.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2025-1692">https://nvd.nist.gov/vuln/detail/CVE-2025-1692</a></li>
<li><a href="https://jira.mongodb.org/browse/MONGOSH-2025">https://jira.mongodb.org/browse/MONGOSH-2025</a></li>
<li><a href="https://github.com/advisories/GHSA-973h-3x6p-qg37">https://github.com/advisories/GHSA-973h-3x6p-qg37</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-973h-3x6p-qg37</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2025-02-27T15:31:51.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[mongosh] MongoDB Shell may be susceptible to Control Character Injection via autocomplete]]></title>
        <id>https://github.com/advisories/GHSA-43g5-2wr2-q7vj</id>
        <link href="https://github.com/advisories/GHSA-43g5-2wr2-q7vj"/>
        <updated>2025-02-27T17:15:44.000Z</updated>
        <content type="html"><![CDATA[<p>The MongoDB Shell may be susceptible to control character injection where an attacker with control of the mongosh autocomplete feature, can use the autocompletion feature to input and run obfuscated malicious text. This requires user interaction in the form of the user using ‘tab’ to autocomplete text that is a prefix of the attacker’s prepared autocompletion. This issue affects mongosh versions prior to&nbsp;2.3.9.&nbsp;</p>
<p>The vulnerability is exploitable only when mongosh is connected to a cluster that is partially or fully controlled by an attacker.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2025-1691">https://nvd.nist.gov/vuln/detail/CVE-2025-1691</a></li>
<li><a href="https://jira.mongodb.org/browse/MONGOSH-2024">https://jira.mongodb.org/browse/MONGOSH-2024</a></li>
<li><a href="https://github.com/advisories/GHSA-43g5-2wr2-q7vj">https://github.com/advisories/GHSA-43g5-2wr2-q7vj</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-43g5-2wr2-q7vj</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2025-02-27T15:31:51.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[matrix-appservice-irc] Matrix IRC Bridge allows IRC command injection to own puppeted user]]></title>
        <id>https://github.com/advisories/GHSA-5mvm-89c9-9gm5</id>
        <link href="https://github.com/advisories/GHSA-5mvm-89c9-9gm5"/>
        <updated>2025-02-25T21:46:09.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>The matrix-appservice-irc bridge up to version 3.0.3 contains a vulnerability which can lead to arbitrary IRC command execution as the puppeted user. The attacker can only inject commands executed as their own IRC user.</p>
<h3 id="patches">Patches</h3>
<p>The vulnerability has been patched in matrix-appservice-irc version 3.0.4.</p>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory, please email us at <a href="mailto:security@matrix.org">security at matrix.org</a>.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/matrix-org/matrix-appservice-irc/security/advisories/GHSA-5mvm-89c9-9gm5">https://github.com/matrix-org/matrix-appservice-irc/security/advisories/GHSA-5mvm-89c9-9gm5</a></li>
<li><a href="https://github.com/matrix-org/matrix-appservice-irc/commit/74f02c8e11f16ed1b355700092c1aa9c036a11bd">https://github.com/matrix-org/matrix-appservice-irc/commit/74f02c8e11f16ed1b355700092c1aa9c036a11bd</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2025-27146">https://nvd.nist.gov/vuln/detail/CVE-2025-27146</a></li>
<li><a href="https://github.com/advisories/GHSA-5mvm-89c9-9gm5">https://github.com/advisories/GHSA-5mvm-89c9-9gm5</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-5mvm-89c9-9gm5</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2025-02-25T18:29:34.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[dom-expressions] DOM Expressions has a Cross-Site Scripting (XSS) vulnerability due to improper use of string.replace]]></title>
        <id>https://github.com/advisories/GHSA-hw62-58pr-7wc5</id>
        <link href="https://github.com/advisories/GHSA-hw62-58pr-7wc5"/>
        <updated>2025-02-25T17:49:59.000Z</updated>
        <content type="html"><![CDATA[<blockquote>
<p>[!NOTE]<br>This advisory was originally emailed to <a href="mailto:community@solidjs.com">community@solidjs.com</a> by @nsysean.</p>
</blockquote>
<p>To sum it up, the use of javascript's <code>.replace()</code> opens up to potential XSS vulnerabilities with the special replacement patterns beginning with <code>$</code>.</p>
<p>Particularly, when the attributes of <code>Meta</code> tag from solid-meta are user-defined, attackers can utilise the special replacement patterns, either <code>$'</code> or `$`` to achieve XSS.</p>
<p>The solid-meta package has this issue since it uses <code>useAffect</code> and context providers, which injects the used assets in the html header. "dom-expressions" uses <code>.replace()</code> to insert the assets, which is vulnerable to the special replacement patterns listed above. </p>
<p>This effectively means that if the attributes of an asset tag contained user-controlled data, it would be vulnerable to XSS. For instance, there might be meta tags for the open graph protocol in a user profile page, but if attackers set the user query to some payload abusing <code>.replace()</code>, then they could execute arbitrary javascript in the victim's web browser. Moreover, it could be stored and cause more problems.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/ryansolid/dom-expressions/security/advisories/GHSA-hw62-58pr-7wc5">https://github.com/ryansolid/dom-expressions/security/advisories/GHSA-hw62-58pr-7wc5</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2025-27108">https://nvd.nist.gov/vuln/detail/CVE-2025-27108</a></li>
<li><a href="https://github.com/ryansolid/dom-expressions/commit/521f75dfa89ed24161646e7007d9d7d21da07767">https://github.com/ryansolid/dom-expressions/commit/521f75dfa89ed24161646e7007d9d7d21da07767</a></li>
<li><a href="https://github.com/advisories/GHSA-hw62-58pr-7wc5">https://github.com/advisories/GHSA-hw62-58pr-7wc5</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-hw62-58pr-7wc5</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2025-02-25T17:49:57.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[solid-js] Solid Lacks Escaping of HTML in JSX Fragments allows for Cross-Site Scripting (XSS)]]></title>
        <id>https://github.com/advisories/GHSA-3qxh-p7jc-5xh6</id>
        <link href="https://github.com/advisories/GHSA-3qxh-p7jc-5xh6"/>
        <updated>2025-02-25T17:49:41.000Z</updated>
        <content type="html"><![CDATA[<p>Inserts/JSX expressions inside illegal inlined JSX fragments lacked escaping, allowing user input to be rendered as HTML when put directly inside JSX fragments.</p>
<p>For instance, <code>?text=&lt;svg/onload=alert(1)&gt;</code> would trigger XSS here.</p>
<pre><code class="language-js">  const [text] = createResource(() =&gt; {
    return new URL(getRequestEvent().request.url).searchParams.get("text");
  });

  return (
    &lt;&gt;
      Text: {text()}
    &lt;/&gt;
  );
</code></pre>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/solidjs/solid/security/advisories/GHSA-3qxh-p7jc-5xh6">https://github.com/solidjs/solid/security/advisories/GHSA-3qxh-p7jc-5xh6</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2025-27109">https://nvd.nist.gov/vuln/detail/CVE-2025-27109</a></li>
<li><a href="https://github.com/solidjs/solid/commit/b93956f28ed75469af6976a98728e313d0edd236">https://github.com/solidjs/solid/commit/b93956f28ed75469af6976a98728e313d0edd236</a></li>
<li><a href="https://github.com/advisories/GHSA-3qxh-p7jc-5xh6">https://github.com/advisories/GHSA-3qxh-p7jc-5xh6</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-3qxh-p7jc-5xh6</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2025-02-25T17:49:40.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[better-auth] Better Auth allows bypassing the trustedOrigins Protection which leads to ATO]]></title>
        <id>https://github.com/advisories/GHSA-vp58-j275-797x</id>
        <link href="https://github.com/advisories/GHSA-vp58-j275-797x"/>
        <updated>2025-02-24T20:49:51.000Z</updated>
        <content type="html"><![CDATA[<h3 id="summary">Summary</h3>
<p>A bypass was found for the security feature <strong>trustedOrigins</strong>. This works for wild card or absolute URLs trustedOrigins configs and opens the victims website to a <strong>Open Redirect</strong> vulnerability, where it can be used to steal the <strong>reset password token</strong> of a victims account by changing the "callbackURL" parameter value to a website owned by the attacker.</p>
<h3 id="details">Details</h3>
<h4 id="absolute-urls">Absolute URLs</h4>
<p>The issue here appears in the <strong>middleware</strong>,  <a href="https://github.com/better-auth/better-auth/blob/ddebd0358d74376ea64541512d0167dd4377f182/packages/better-auth/src/api/middlewares/origin-check.ts#L53">specifically</a>. This protection is not sufficiente and it allows attackers to get a open redirect, by using the payload <code>/\/example.com</code>. We can check this is a valid URL ( or it will be a valid URL because the URL parser fix it for us ), by checking the image bellow:</p>
<p><img alt="image" src="https://github.com/user-attachments/assets/d192f06d-358d-4612-97d9-cab89ba55b06"></p>
<pre><code class="language-typescript">// trustedOrigins = [ "https://example.com" ]
validateURL("https://attacker.com", "callbackURL") // ❌ APIError, No Redirect
validateURL("/\/attacker.com", "callbackURL")       // ✅ Redirect to http://attacker.com
</code></pre>
<h4 id="regex">Regex</h4>
<p>The issue here is because the regex is not strong enough <code>[^/\\]*?\.example\.com[/\\]*?</code> ( this is the regex it will be created if we have a wildcard as config ), but we can bypass by using a payload like:</p>
<pre><code class="language-text">// trustedOrigins = [ "*.example.com" ]
  ┌──────────────────┐       ┌────────────────┐       ┌─────────────────┐
  │ None of [ "/\" ] │ ────▶ │ ".example.com" │ ────▶ │ One of [ "/\" ] │
  └──────────────────┘       └────────────────┘       └─────────────────┘
          demo                  .example.com                    /               ✅ Redirect to https://example.com
          demo                  .attacker.com                   /               ❌ APIError, no redirect
   http:attacker.com?           .example.com                    /               ✅ Redirect to http://attacker.com
</code></pre>
<p>This works because <strong>:</strong> and <strong>?</strong> are special chars in a URL, so when the URL parser sees, <strong>http:</strong> it will fix our happily fix our URL to <a href="http://attacker.com">http://attacker.com</a>? and make  <code>.example.com</code> as parameter, thus, bypassing this check</p>
<h3 id="poc">PoC</h3>
<p>We can PoC the open redirect by using the <code>demo.better-auth.com</code>. 
If we access the URL bellow, we are redirected to example.com:</p>
<ul>
<li><a href="https://demo.better-auth.com/api/auth/reset-password/x?callbackURL=/%5C/example.com">https://demo.better-auth.com/api/auth/reset-password/x?callbackURL=/\/example.com</a></li>
</ul>
<h3 id="impact">Impact</h3>
<p>Every single website using the <strong>better-auth</strong> library, is vulnerable to un-auth open redirect and more importantilly, vulnerable to potential one click account take over vulnerability, as the attacker can send the victim a email to reset their account while changing the "redirectTo" parameter <a href="https://demo.better-auth.com/forget-password">here</a>, and when the victim clicks on the link, the reset token is sent to the attackers website, thus making the attacker to use the token stolen and reset the password of the victim.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/better-auth/better-auth/security/advisories/GHSA-vp58-j275-797x">https://github.com/better-auth/better-auth/security/advisories/GHSA-vp58-j275-797x</a></li>
<li><a href="https://github.com/better-auth/better-auth/commit/b381cac7aafd6aa53ef78b6ab771ebfa24643c80">https://github.com/better-auth/better-auth/commit/b381cac7aafd6aa53ef78b6ab771ebfa24643c80</a></li>
<li><a href="https://github.com/better-auth/better-auth/blob/ddebd0358d74376ea64541512d0167dd4377f182/packages/better-auth/src/api/middlewares/origin-check.ts#L53">https://github.com/better-auth/better-auth/blob/ddebd0358d74376ea64541512d0167dd4377f182/packages/better-auth/src/api/middlewares/origin-check.ts#L53</a></li>
<li><a href="https://github.com/advisories/GHSA-vp58-j275-797x">https://github.com/advisories/GHSA-vp58-j275-797x</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-vp58-j275-797x</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2025-02-24T20:49:50.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[tarteaucitronjs] tarteaucitron Cross-site Scripting (XSS)]]></title>
        <id>https://github.com/advisories/GHSA-8wp9-x25p-8794</id>
        <link href="https://github.com/advisories/GHSA-8wp9-x25p-8794"/>
        <updated>2025-02-24T18:30:26.000Z</updated>
        <content type="html"><![CDATA[<p>Versions of the package tarteaucitronjs before 1.17.0 are vulnerable to Cross-site Scripting (XSS) via the getElemWidth() and getElemHeight(). This is related to <a href="https://security.snyk.io/vuln/SNYK-JS-TARTEAUCITRONJS-8366541">SNYK-JS-TARTEAUCITRONJS-8366541</a></p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2025-1467">https://nvd.nist.gov/vuln/detail/CVE-2025-1467</a></li>
<li><a href="https://github.com/AmauriC/tarteaucitron.js/issues/1184">https://github.com/AmauriC/tarteaucitron.js/issues/1184</a></li>
<li><a href="https://github.com/AmauriC/tarteaucitron.js/commit/12490579001d5caa187adcaecb01da570a12076b">https://github.com/AmauriC/tarteaucitron.js/commit/12490579001d5caa187adcaecb01da570a12076b</a></li>
<li><a href="https://gist.github.com/Rudloff/d48f525215bd5426cbb076116c4422dd">https://gist.github.com/Rudloff/d48f525215bd5426cbb076116c4422dd</a></li>
<li><a href="https://security.snyk.io/vuln/SNYK-JS-TARTEAUCITRONJS-8731160">https://security.snyk.io/vuln/SNYK-JS-TARTEAUCITRONJS-8731160</a></li>
<li><a href="https://github.com/advisories/GHSA-8wp9-x25p-8794">https://github.com/advisories/GHSA-8wp9-x25p-8794</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-8wp9-x25p-8794</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2025-02-23T18:30:24.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[better-auth] Beter Auth has an Open Redirect via Scheme-Less Callback Parameter]]></title>
        <id>https://github.com/advisories/GHSA-hjpm-7mrm-26w8</id>
        <link href="https://github.com/advisories/GHSA-hjpm-7mrm-26w8"/>
        <updated>2025-02-25T18:00:23.000Z</updated>
        <content type="html"><![CDATA[<h3 id="summary">Summary</h3>
<p>The application is vulnerable to an open redirect due to improper validation of the callbackURL parameter in the email verification endpoint and any other endpoint that accepts callback url. While the server blocks fully qualified URLs (e.g., <a href="https://evil.com">https://evil.com</a>), it incorrectly allows scheme-less URLs (e.g., //malicious-site.com). This results in the browser interpreting the URL as <a href="https://malicious-site.com">https://malicious-site.com</a>, leading to unintended redirection.</p>
<p>bypass for : <a href="https://github.com/better-auth/better-auth/security/advisories/GHSA-8jhw-6pjj-8723">https://github.com/better-auth/better-auth/security/advisories/GHSA-8jhw-6pjj-8723</a></p>
<h3 id="affected-versions">Affected Versions</h3>
<p>All versions prior to 1.1.19</p>
<h3 id="details">Details</h3>
<p>The application’s email verification endpoint (/auth/verify-email) accepts a callbackURL parameter intended to redirect users after successful email verification. While the server correctly blocks fully qualified external URLs (e.g., <a href="https://evil.com">https://evil.com</a>), it improperly allows scheme-less URLs (e.g., //malicious-site.com). This issue occurs because browsers interpret //malicious-site.com as <a href="https://malicious-site.com">https://malicious-site.com</a>, leading to an open redirect vulnerability.</p>
<p>An attacker can exploit this flaw by crafting a malicious verification link and tricking users into clicking it. Upon successful email verification, the user will be automatically redirected to the attacker's website, which can be used for phishing, malware distribution, or stealing sensitive authentication tokens.</p>
<h3 id="impact">Impact</h3>
<p>Phishing &amp; Credential Theft – Attackers can redirect users to a fake login page, tricking them into entering sensitive credentials, which can then be stolen.</p>
<p>Session Hijacking &amp; Token Theft – If used in OAuth flows, an attacker could redirect authentication tokens to their own domain, leading to account takeover.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/better-auth/better-auth/security/advisories/GHSA-8jhw-6pjj-8723">https://github.com/better-auth/better-auth/security/advisories/GHSA-8jhw-6pjj-8723</a></li>
<li><a href="https://github.com/better-auth/better-auth/security/advisories/GHSA-hjpm-7mrm-26w8">https://github.com/better-auth/better-auth/security/advisories/GHSA-hjpm-7mrm-26w8</a></li>
<li><a href="https://github.com/better-auth/better-auth/commit/24659aefc35a536b95ea4e5347e52c8803910153">https://github.com/better-auth/better-auth/commit/24659aefc35a536b95ea4e5347e52c8803910153</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2025-27143">https://nvd.nist.gov/vuln/detail/CVE-2025-27143</a></li>
<li><a href="https://github.com/better-auth/better-auth/commit/b381cac7aafd6aa53ef78b6ab771ebfa24643c80">https://github.com/better-auth/better-auth/commit/b381cac7aafd6aa53ef78b6ab771ebfa24643c80</a></li>
<li><a href="https://github.com/better-auth/better-auth/releases/tag/v1.1.21">https://github.com/better-auth/better-auth/releases/tag/v1.1.21</a></li>
<li><a href="https://github.com/advisories/GHSA-hjpm-7mrm-26w8">https://github.com/advisories/GHSA-hjpm-7mrm-26w8</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-hjpm-7mrm-26w8</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2025-02-24T18:27:55.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[serialize-javascript] Cross-site Scripting (XSS) in serialize-javascript]]></title>
        <id>https://github.com/advisories/GHSA-76p7-773f-r4q5</id>
        <link href="https://github.com/advisories/GHSA-76p7-773f-r4q5"/>
        <updated>2025-02-21T20:19:18.000Z</updated>
        <content type="html"><![CDATA[<p>A flaw was found in npm-serialize-javascript. The vulnerability occurs because the serialize-javascript module does not properly sanitize certain inputs, such as regex or other JavaScript object types, allowing an attacker to inject malicious code. This code could be executed when deserialized by a web browser, causing Cross-site scripting (XSS) attacks. This issue is critical in environments where serialized data is sent to web clients, potentially compromising the security of the website or web application using this package.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-11831">https://nvd.nist.gov/vuln/detail/CVE-2024-11831</a></li>
<li><a href="https://github.com/yahoo/serialize-javascript/pull/173">https://github.com/yahoo/serialize-javascript/pull/173</a></li>
<li><a href="https://github.com/yahoo/serialize-javascript/commit/f27d65d3de42affe2aac14607066c293891cec4e">https://github.com/yahoo/serialize-javascript/commit/f27d65d3de42affe2aac14607066c293891cec4e</a></li>
<li><a href="https://access.redhat.com/security/cve/CVE-2024-11831">https://access.redhat.com/security/cve/CVE-2024-11831</a></li>
<li><a href="https://bugzilla.redhat.com/show_bug.cgi?id=2312579">https://bugzilla.redhat.com/show_bug.cgi?id=2312579</a></li>
<li><a href="https://access.redhat.com/errata/RHSA-2025:1334">https://access.redhat.com/errata/RHSA-2025:1334</a></li>
<li><a href="https://access.redhat.com/errata/RHSA-2025:1468">https://access.redhat.com/errata/RHSA-2025:1468</a></li>
<li><a href="https://github.com/yahoo/serialize-javascript/commit/7f3ac252d86b802454cb43782820aea2e0f6dc25">https://github.com/yahoo/serialize-javascript/commit/7f3ac252d86b802454cb43782820aea2e0f6dc25</a></li>
<li><a href="https://github.com/advisories/GHSA-76p7-773f-r4q5">https://github.com/advisories/GHSA-76p7-773f-r4q5</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-76p7-773f-r4q5</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2025-02-10T18:30:47.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[@rpldy/uploader] @rpldy/uploader prototype pollution]]></title>
        <id>https://github.com/advisories/GHSA-pc47-g7gv-4gpw</id>
        <link href="https://github.com/advisories/GHSA-pc47-g7gv-4gpw"/>
        <updated>2025-02-21T15:18:11.000Z</updated>
        <content type="html"><![CDATA[<p>A prototype pollution in the lib.createUploader function of @rpldy/uploader v1.8.1 allows attackers to cause a Denial of Service (DoS) via supplying a crafted payload.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-57082">https://nvd.nist.gov/vuln/detail/CVE-2024-57082</a></li>
<li><a href="https://gist.github.com/tariqhawis/708e518de0c3b5af7430ec774f68f315">https://gist.github.com/tariqhawis/708e518de0c3b5af7430ec774f68f315</a></li>
<li><a href="https://github.com/rpldy/react-uploady/commit/386e0a80c428eb988e89fd2acf9bb0b786ac8028">https://github.com/rpldy/react-uploady/commit/386e0a80c428eb988e89fd2acf9bb0b786ac8028</a></li>
<li><a href="https://github.com/rpldy/react-uploady/releases/tag/v1.9.1">https://github.com/rpldy/react-uploady/releases/tag/v1.9.1</a></li>
<li><a href="https://github.com/advisories/GHSA-pc47-g7gv-4gpw">https://github.com/advisories/GHSA-pc47-g7gv-4gpw</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-pc47-g7gv-4gpw</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2025-02-06T06:31:26.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[@tanstack/form-core] @tanstack/form-core prototype pollution]]></title>
        <id>https://github.com/advisories/GHSA-ggv3-vmgw-xv2q</id>
        <link href="https://github.com/advisories/GHSA-ggv3-vmgw-xv2q"/>
        <updated>2025-02-20T22:59:33.000Z</updated>
        <content type="html"><![CDATA[<p>A prototype pollution in the lib.mutateMergeDeep function of @tanstack/form-core v0.35.0 allows attackers to cause a Denial of Service (DoS) via supplying a crafted payload.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-57068">https://nvd.nist.gov/vuln/detail/CVE-2024-57068</a></li>
<li><a href="https://gist.github.com/tariqhawis/47fe5b1e584e9e573c0933588248d533">https://gist.github.com/tariqhawis/47fe5b1e584e9e573c0933588248d533</a></li>
<li><a href="https://github.com/TanStack/form/pull/1151">https://github.com/TanStack/form/pull/1151</a></li>
<li><a href="https://github.com/TanStack/form/commit/455522c8f3272787668f3d1afd6adbc6dc1b9e8a">https://github.com/TanStack/form/commit/455522c8f3272787668f3d1afd6adbc6dc1b9e8a</a></li>
<li><a href="https://github.com/advisories/GHSA-ggv3-vmgw-xv2q">https://github.com/advisories/GHSA-ggv3-vmgw-xv2q</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-ggv3-vmgw-xv2q</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2025-02-06T06:31:25.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[docsgpt] DocsGPT Allows Remote Code Execution]]></title>
        <id>https://github.com/advisories/GHSA-9gff-5v8w-x922</id>
        <link href="https://github.com/advisories/GHSA-9gff-5v8w-x922"/>
        <updated>2025-02-20T20:18:37.000Z</updated>
        <content type="html"><![CDATA[<p>A vulnerability, that could result in Remote Code Execution (RCE), has been found in DocsGPT. Due to improper parsing of JSON data using eval() an unauthorized attacker could send arbitrary Python code to be executed via /api/remote endpoint.</p>
<p>This issue affects DocsGPT: from 0.8.1 through 0.12.0.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2025-0868">https://nvd.nist.gov/vuln/detail/CVE-2025-0868</a></li>
<li><a href="https://cert.pl/en/posts/2025/02/CVE-2025-0868">https://cert.pl/en/posts/2025/02/CVE-2025-0868</a></li>
<li><a href="https://cert.pl/posts/2025/02/CVE-2025-0868">https://cert.pl/posts/2025/02/CVE-2025-0868</a></li>
<li><a href="https://github.com/arc53/DocsGPT">https://github.com/arc53/DocsGPT</a></li>
<li><a href="https://github.com/advisories/GHSA-9gff-5v8w-x922">https://github.com/advisories/GHSA-9gff-5v8w-x922</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-9gff-5v8w-x922</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2025-02-20T12:31:15.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[ckeditor5-premium-features] Cross-site scripting (XSS) in the CKEditor 5 real-time collaboration package]]></title>
        <id>https://github.com/advisories/GHSA-j3mm-wmfm-mwvh</id>
        <link href="https://github.com/advisories/GHSA-j3mm-wmfm-mwvh"/>
        <updated>2025-02-20T22:53:47.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>During a recent internal audit, we identified a Cross-Site Scripting (XSS) vulnerability in the CKEditor 5 real-time collaboration package. This vulnerability can lead to unauthorized JavaScript code execution and affects user markers, which represent users' positions within the document.</p>
<p>This vulnerability affects only installations with <a href="https://ckeditor.com/docs/ckeditor5/latest/features/collaboration/real-time-collaboration/real-time-collaboration.html">Real-time collaborative editing</a> enabled.</p>
<h3 id="patches">Patches</h3>
<p>The problem has been recognized and patched. The fix will be available in version 44.2.1 (and above).</p>
<h3 id="for-more-information">For more information</h3>
<p>Email us at <a href="mailto:security@cksource.com">security@cksource.com</a> if you have any questions or comments about this advisory.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/ckeditor/ckeditor5/security/advisories/GHSA-j3mm-wmfm-mwvh">https://github.com/ckeditor/ckeditor5/security/advisories/GHSA-j3mm-wmfm-mwvh</a></li>
<li><a href="https://ckeditor.com/docs/ckeditor5/latest/features/collaboration/real-time-collaboration/real-time-collaboration.html?docId=ee1dca024c9b4e44aef039f99ebe6c664">https://ckeditor.com/docs/ckeditor5/latest/features/collaboration/real-time-collaboration/real-time-collaboration.html?docId=ee1dca024c9b4e44aef039f99ebe6c664</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2025-25299">https://nvd.nist.gov/vuln/detail/CVE-2025-25299</a></li>
<li><a href="https://ckeditor.com/docs/ckeditor5/latest/features/collaboration/real-time-collaboration/real-time-collaboration.html">https://ckeditor.com/docs/ckeditor5/latest/features/collaboration/real-time-collaboration/real-time-collaboration.html</a></li>
<li><a href="https://github.com/ckeditor/ckeditor5/releases/tag/v44.2.1">https://github.com/ckeditor/ckeditor5/releases/tag/v44.2.1</a></li>
<li><a href="https://github.com/advisories/GHSA-j3mm-wmfm-mwvh">https://github.com/advisories/GHSA-j3mm-wmfm-mwvh</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-j3mm-wmfm-mwvh</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2025-02-20T20:16:31.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[@ckeditor/ckeditor5-real-time-collaboration] Cross-site scripting (XSS) in the CKEditor 5 real-time collaboration package]]></title>
        <id>https://github.com/advisories/GHSA-j3mm-wmfm-mwvh</id>
        <link href="https://github.com/advisories/GHSA-j3mm-wmfm-mwvh"/>
        <updated>2025-02-20T22:53:47.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>During a recent internal audit, we identified a Cross-Site Scripting (XSS) vulnerability in the CKEditor 5 real-time collaboration package. This vulnerability can lead to unauthorized JavaScript code execution and affects user markers, which represent users' positions within the document.</p>
<p>This vulnerability affects only installations with <a href="https://ckeditor.com/docs/ckeditor5/latest/features/collaboration/real-time-collaboration/real-time-collaboration.html">Real-time collaborative editing</a> enabled.</p>
<h3 id="patches">Patches</h3>
<p>The problem has been recognized and patched. The fix will be available in version 44.2.1 (and above).</p>
<h3 id="for-more-information">For more information</h3>
<p>Email us at <a href="mailto:security@cksource.com">security@cksource.com</a> if you have any questions or comments about this advisory.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/ckeditor/ckeditor5/security/advisories/GHSA-j3mm-wmfm-mwvh">https://github.com/ckeditor/ckeditor5/security/advisories/GHSA-j3mm-wmfm-mwvh</a></li>
<li><a href="https://ckeditor.com/docs/ckeditor5/latest/features/collaboration/real-time-collaboration/real-time-collaboration.html?docId=ee1dca024c9b4e44aef039f99ebe6c664">https://ckeditor.com/docs/ckeditor5/latest/features/collaboration/real-time-collaboration/real-time-collaboration.html?docId=ee1dca024c9b4e44aef039f99ebe6c664</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2025-25299">https://nvd.nist.gov/vuln/detail/CVE-2025-25299</a></li>
<li><a href="https://ckeditor.com/docs/ckeditor5/latest/features/collaboration/real-time-collaboration/real-time-collaboration.html">https://ckeditor.com/docs/ckeditor5/latest/features/collaboration/real-time-collaboration/real-time-collaboration.html</a></li>
<li><a href="https://github.com/ckeditor/ckeditor5/releases/tag/v44.2.1">https://github.com/ckeditor/ckeditor5/releases/tag/v44.2.1</a></li>
<li><a href="https://github.com/advisories/GHSA-j3mm-wmfm-mwvh">https://github.com/advisories/GHSA-j3mm-wmfm-mwvh</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-j3mm-wmfm-mwvh</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2025-02-20T20:16:31.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[@directus/api] Directus allows updates to non-allowed fields due to overlapping policies]]></title>
        <id>https://github.com/advisories/GHSA-99vm-5v2h-h6r6</id>
        <link href="https://github.com/advisories/GHSA-99vm-5v2h-h6r6"/>
        <updated>2025-02-19T19:59:57.000Z</updated>
        <content type="html"><![CDATA[<h3 id="summary">Summary</h3>
<p>If there are two overlapping policies for the <code>update</code> action that allow access to different fields, instead of correctly checking access permissions against the item they apply for the user is allowed to update the superset of fields allowed by any of the policies. </p>
<p>E.g. have one policy allowing update access to <code>field_a</code> if the <code>id == 1</code> and one policy allowing update access to <code>field_b</code> if the <code>id == 2</code>. The user with both these policies is allowed to update both <code>field_a</code> and <code>field_b</code> for the items with ids <code>1</code> and <code>2</code>. </p>
<h3 id="details">Details</h3>
<p>Before v11, if a user was allowed to update an item they were allowed to update the fields that the single permission, that applied to that item, listed. With overlapping permissions this isn't as clear cut anymore and the union of fields might not be the fields the user is allowed to update for that specific item.</p>
<p>The solution that this PR introduces is to evaluate the permissions for each field that the user tries to update in the validateItemAccess DB query, instead of only verifying access to the item as a whole. This is done by, instead of returning the actual field value, returning a flag that indicates if the user has access to that field. This uses the same case/when mechanism that is used for stripping out non permitted field that is at the core of the permissions engine.</p>
<p>As a result, for every item that the access is validated for, the expected result is an item that has either 1 or null for all the "requested" fields instead of any of the actual field values. These results are not useful for anything other than verifying the field level access permissions.</p>
<p>The final check in validateItemAccess can either fail if the number of items does not match the number of items the access is checked for (ie. the user does not have access to the item at all) or if not all of the passed in fields have access permissions for any of the returned items.</p>
<h3 id="impact">Impact</h3>
<p>This is a vulnerability that allows update access to unintended fields, potentially impacting the password field for user accounts.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/directus/directus/security/advisories/GHSA-99vm-5v2h-h6r6">https://github.com/directus/directus/security/advisories/GHSA-99vm-5v2h-h6r6</a></li>
<li><a href="https://github.com/directus/directus/commit/a7ea67783b060d0d6fc964d71c2d4575d5eee4e2">https://github.com/directus/directus/commit/a7ea67783b060d0d6fc964d71c2d4575d5eee4e2</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2025-27089">https://nvd.nist.gov/vuln/detail/CVE-2025-27089</a></li>
<li><a href="https://github.com/directus/directus/releases/tag/v11.1.2">https://github.com/directus/directus/releases/tag/v11.1.2</a></li>
<li><a href="https://github.com/advisories/GHSA-99vm-5v2h-h6r6">https://github.com/advisories/GHSA-99vm-5v2h-h6r6</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-99vm-5v2h-h6r6</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2025-02-19T17:46:27.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[directus] Directus allows updates to non-allowed fields due to overlapping policies]]></title>
        <id>https://github.com/advisories/GHSA-99vm-5v2h-h6r6</id>
        <link href="https://github.com/advisories/GHSA-99vm-5v2h-h6r6"/>
        <updated>2025-02-19T19:59:57.000Z</updated>
        <content type="html"><![CDATA[<h3 id="summary">Summary</h3>
<p>If there are two overlapping policies for the <code>update</code> action that allow access to different fields, instead of correctly checking access permissions against the item they apply for the user is allowed to update the superset of fields allowed by any of the policies. </p>
<p>E.g. have one policy allowing update access to <code>field_a</code> if the <code>id == 1</code> and one policy allowing update access to <code>field_b</code> if the <code>id == 2</code>. The user with both these policies is allowed to update both <code>field_a</code> and <code>field_b</code> for the items with ids <code>1</code> and <code>2</code>. </p>
<h3 id="details">Details</h3>
<p>Before v11, if a user was allowed to update an item they were allowed to update the fields that the single permission, that applied to that item, listed. With overlapping permissions this isn't as clear cut anymore and the union of fields might not be the fields the user is allowed to update for that specific item.</p>
<p>The solution that this PR introduces is to evaluate the permissions for each field that the user tries to update in the validateItemAccess DB query, instead of only verifying access to the item as a whole. This is done by, instead of returning the actual field value, returning a flag that indicates if the user has access to that field. This uses the same case/when mechanism that is used for stripping out non permitted field that is at the core of the permissions engine.</p>
<p>As a result, for every item that the access is validated for, the expected result is an item that has either 1 or null for all the "requested" fields instead of any of the actual field values. These results are not useful for anything other than verifying the field level access permissions.</p>
<p>The final check in validateItemAccess can either fail if the number of items does not match the number of items the access is checked for (ie. the user does not have access to the item at all) or if not all of the passed in fields have access permissions for any of the returned items.</p>
<h3 id="impact">Impact</h3>
<p>This is a vulnerability that allows update access to unintended fields, potentially impacting the password field for user accounts.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/directus/directus/security/advisories/GHSA-99vm-5v2h-h6r6">https://github.com/directus/directus/security/advisories/GHSA-99vm-5v2h-h6r6</a></li>
<li><a href="https://github.com/directus/directus/commit/a7ea67783b060d0d6fc964d71c2d4575d5eee4e2">https://github.com/directus/directus/commit/a7ea67783b060d0d6fc964d71c2d4575d5eee4e2</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2025-27089">https://nvd.nist.gov/vuln/detail/CVE-2025-27089</a></li>
<li><a href="https://github.com/directus/directus/releases/tag/v11.1.2">https://github.com/directus/directus/releases/tag/v11.1.2</a></li>
<li><a href="https://github.com/advisories/GHSA-99vm-5v2h-h6r6">https://github.com/advisories/GHSA-99vm-5v2h-h6r6</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-99vm-5v2h-h6r6</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2025-02-19T17:46:27.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[jsonpath-plus] JSONPath Plus allows Remote Code Execution]]></title>
        <id>https://github.com/advisories/GHSA-hw8r-x6gr-5gjp</id>
        <link href="https://github.com/advisories/GHSA-hw8r-x6gr-5gjp"/>
        <updated>2025-02-18T19:25:35.000Z</updated>
        <content type="html"><![CDATA[<p>Versions of the package jsonpath-plus before 10.3.0 are vulnerable to Remote Code Execution (RCE) due to improper input sanitization. An attacker can execute aribitrary code on the system by exploiting the unsafe default usage of eval='safe' mode.</p>
<p><strong>Note:</strong></p>
<p>This is caused by an incomplete fix for CVE-2024-21534.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2025-1302">https://nvd.nist.gov/vuln/detail/CVE-2025-1302</a></li>
<li><a href="https://github.com/JSONPath-Plus/JSONPath/commit/30942896d27cb8a806b965a5ca9ef9f686be24ee">https://github.com/JSONPath-Plus/JSONPath/commit/30942896d27cb8a806b965a5ca9ef9f686be24ee</a></li>
<li><a href="https://gist.github.com/nickcopi/11ba3cb4fdee6f89e02e6afae8db6456">https://gist.github.com/nickcopi/11ba3cb4fdee6f89e02e6afae8db6456</a></li>
<li><a href="https://security.snyk.io/vuln/SNYK-JS-JSONPATHPLUS-8719585">https://security.snyk.io/vuln/SNYK-JS-JSONPATHPLUS-8719585</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-21534">https://nvd.nist.gov/vuln/detail/CVE-2024-21534</a></li>
<li><a href="https://github.com/JSONPath-Plus/JSONPath/blob/8e4acf8aff5f446aa66323e12394ac5615c3b260/src/Safe-Script.js#L127">https://github.com/JSONPath-Plus/JSONPath/blob/8e4acf8aff5f446aa66323e12394ac5615c3b260/src/Safe-Script.js#L127</a></li>
<li><a href="https://github.com/advisories/GHSA-hw8r-x6gr-5gjp">https://github.com/advisories/GHSA-hw8r-x6gr-5gjp</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-hw8r-x6gr-5gjp</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2025-02-15T06:30:51.000Z</published>
    </entry>
</feed>