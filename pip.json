{
    "version": "https://jsonfeed.org/version/1",
    "title": "Security Advisory for Python packages hosted at PyPI.org",
    "home_page_url": "https://github.com/advisories?query=type%3Areviewed+ecosystem%3Apip",
    "feed_url": "https://azu.github.io/github-advisory-database-rss/pip.json",
    "description": "Security Advisory for Python packages hosted at PyPI.org on GitHub",
    "items": [
        {
            "content_html": "<p>Versions of the package fastecdsa before 2.3.2 use an Uninitialized Variable on the stack, via the curvemath_mul function in src/curveMath.c, due to being used and interpreted as user-defined type. Depending on the variable's actual value it could be arbitrary free(), arbitrary realloc(), null pointer dereference and other. Since the stack can be controlled by the attacker, the vulnerability could be used to corrupt allocator structure, leading to possible heap exploitation. The attacker could cause denial of service by exploiting this vulnerability.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-21502\">https://nvd.nist.gov/vuln/detail/CVE-2024-21502</a></li>\n<li><a href=\"https://github.com/AntonKueltz/fastecdsa/commit/57fc5689c95d649dab7ef60cc99ac64589f01e36\">https://github.com/AntonKueltz/fastecdsa/commit/57fc5689c95d649dab7ef60cc99ac64589f01e36</a></li>\n<li><a href=\"https://gist.github.com/keltecc/49da037072276f21b005a8337c15db26\">https://gist.github.com/keltecc/49da037072276f21b005a8337c15db26</a></li>\n<li><a href=\"https://github.com/AntonKueltz/fastecdsa/blob/v2.3.1/src/curveMath.c%23L210\">https://github.com/AntonKueltz/fastecdsa/blob/v2.3.1/src/curveMath.c%23L210</a></li>\n<li><a href=\"https://security.snyk.io/vuln/SNYK-PYTHON-FASTECDSA-6262045\">https://security.snyk.io/vuln/SNYK-PYTHON-FASTECDSA-6262045</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-ph86-g9r3-5qw4\">https://github.com/advisories/GHSA-ph86-g9r3-5qw4</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-ph86-g9r3-5qw4",
            "title": "[fastecdsa] Uninitialized Variable in fastecdsa",
            "date_modified": "2025-02-12T21:59:32.000Z",
            "date_published": "2024-02-24T06:30:17.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-ph86-g9r3-5qw4"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>An issue in Anyscale Inc Ray between v.2.9.3 and v.2.40.0 allows a remote attacker to execute arbitrary code via a crafted script.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-57000\">https://nvd.nist.gov/vuln/detail/CVE-2024-57000</a></li>\n<li><a href=\"https://github.com/honysyang/Ray.git\">https://github.com/honysyang/Ray.git</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-xg2h-7cxj-3gvh\">https://github.com/advisories/GHSA-xg2h-7cxj-3gvh</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-xg2h-7cxj-3gvh",
            "title": "[ray] Command injection in Ray",
            "date_modified": "2025-02-12T19:33:13.000Z",
            "date_published": "2025-02-12T00:32:17.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-xg2h-7cxj-3gvh"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>In Django 3.2 before 3.2.25, 4.2 before 4.2.11, and 5.0 before 5.0.3, the django.utils.text.Truncator.words() method (with html=True) and the truncatewords_html template filter are subject to a potential regular expression denial-of-service attack via a crafted string. NOTE: this issue exists because of an incomplete fix for CVE-2019-14232 and CVE-2023-43665.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-27351\">https://nvd.nist.gov/vuln/detail/CVE-2024-27351</a></li>\n<li><a href=\"https://docs.djangoproject.com/en/5.0/releases/security\">https://docs.djangoproject.com/en/5.0/releases/security</a></li>\n<li><a href=\"https://groups.google.com/forum/#%21forum/django-announce\">https://groups.google.com/forum/#%21forum/django-announce</a></li>\n<li><a href=\"https://www.djangoproject.com/weblog/2024/mar/04/security-releases\">https://www.djangoproject.com/weblog/2024/mar/04/security-releases</a></li>\n<li><a href=\"https://github.com/pypa/advisory-database/tree/main/vulns/django/PYSEC-2024-47.yaml\">https://github.com/pypa/advisory-database/tree/main/vulns/django/PYSEC-2024-47.yaml</a></li>\n<li><a href=\"https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/D2JIRXEDP4ZET5KFMAPPYSK663Q52NEX\">https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/D2JIRXEDP4ZET5KFMAPPYSK663Q52NEX</a></li>\n<li><a href=\"https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/SN2PLJGYSAAG5KUVIUFJYKD3BLQ4OSN6\">https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/SN2PLJGYSAAG5KUVIUFJYKD3BLQ4OSN6</a></li>\n<li><a href=\"https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/ZQJOMNRMVPCN5WMIZ7YSX5LQ7IR2NY4D\">https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/ZQJOMNRMVPCN5WMIZ7YSX5LQ7IR2NY4D</a></li>\n<li><a href=\"http://www.openwall.com/lists/oss-security/2024/03/04/1\">http://www.openwall.com/lists/oss-security/2024/03/04/1</a></li>\n<li><a href=\"https://github.com/django/django/commit/072963e4c4d0b3a7a8c5412bc0c7d27d1a9c3521\">https://github.com/django/django/commit/072963e4c4d0b3a7a8c5412bc0c7d27d1a9c3521</a></li>\n<li><a href=\"https://github.com/django/django/commit/3394fc6132436eca89e997083bae9985fb7e761e\">https://github.com/django/django/commit/3394fc6132436eca89e997083bae9985fb7e761e</a></li>\n<li><a href=\"https://github.com/django/django/commit/3c9a2771cc80821e041b16eb36c1c37af5349d4a\">https://github.com/django/django/commit/3c9a2771cc80821e041b16eb36c1c37af5349d4a</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-vm8q-m57g-pff3\">https://github.com/advisories/GHSA-vm8q-m57g-pff3</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-vm8q-m57g-pff3",
            "title": "[django] Regular expression denial-of-service in Django",
            "date_modified": "2025-02-12T05:03:58.000Z",
            "date_published": "2024-03-15T21:30:43.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-vm8q-m57g-pff3"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>In Django 3.2 before 3.2.25, 4.2 before 4.2.11, and 5.0 before 5.0.3, the django.utils.text.Truncator.words() method (with html=True) and the truncatewords_html template filter are subject to a potential regular expression denial-of-service attack via a crafted string. NOTE: this issue exists because of an incomplete fix for CVE-2019-14232 and CVE-2023-43665.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-27351\">https://nvd.nist.gov/vuln/detail/CVE-2024-27351</a></li>\n<li><a href=\"https://docs.djangoproject.com/en/5.0/releases/security\">https://docs.djangoproject.com/en/5.0/releases/security</a></li>\n<li><a href=\"https://groups.google.com/forum/#%21forum/django-announce\">https://groups.google.com/forum/#%21forum/django-announce</a></li>\n<li><a href=\"https://www.djangoproject.com/weblog/2024/mar/04/security-releases\">https://www.djangoproject.com/weblog/2024/mar/04/security-releases</a></li>\n<li><a href=\"https://github.com/pypa/advisory-database/tree/main/vulns/django/PYSEC-2024-47.yaml\">https://github.com/pypa/advisory-database/tree/main/vulns/django/PYSEC-2024-47.yaml</a></li>\n<li><a href=\"https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/D2JIRXEDP4ZET5KFMAPPYSK663Q52NEX\">https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/D2JIRXEDP4ZET5KFMAPPYSK663Q52NEX</a></li>\n<li><a href=\"https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/SN2PLJGYSAAG5KUVIUFJYKD3BLQ4OSN6\">https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/SN2PLJGYSAAG5KUVIUFJYKD3BLQ4OSN6</a></li>\n<li><a href=\"https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/ZQJOMNRMVPCN5WMIZ7YSX5LQ7IR2NY4D\">https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/ZQJOMNRMVPCN5WMIZ7YSX5LQ7IR2NY4D</a></li>\n<li><a href=\"http://www.openwall.com/lists/oss-security/2024/03/04/1\">http://www.openwall.com/lists/oss-security/2024/03/04/1</a></li>\n<li><a href=\"https://github.com/django/django/commit/072963e4c4d0b3a7a8c5412bc0c7d27d1a9c3521\">https://github.com/django/django/commit/072963e4c4d0b3a7a8c5412bc0c7d27d1a9c3521</a></li>\n<li><a href=\"https://github.com/django/django/commit/3394fc6132436eca89e997083bae9985fb7e761e\">https://github.com/django/django/commit/3394fc6132436eca89e997083bae9985fb7e761e</a></li>\n<li><a href=\"https://github.com/django/django/commit/3c9a2771cc80821e041b16eb36c1c37af5349d4a\">https://github.com/django/django/commit/3c9a2771cc80821e041b16eb36c1c37af5349d4a</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-vm8q-m57g-pff3\">https://github.com/advisories/GHSA-vm8q-m57g-pff3</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-vm8q-m57g-pff3",
            "title": "[django] Regular expression denial-of-service in Django",
            "date_modified": "2025-02-12T05:03:58.000Z",
            "date_published": "2024-03-15T21:30:43.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-vm8q-m57g-pff3"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>In Django 3.2 before 3.2.25, 4.2 before 4.2.11, and 5.0 before 5.0.3, the django.utils.text.Truncator.words() method (with html=True) and the truncatewords_html template filter are subject to a potential regular expression denial-of-service attack via a crafted string. NOTE: this issue exists because of an incomplete fix for CVE-2019-14232 and CVE-2023-43665.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-27351\">https://nvd.nist.gov/vuln/detail/CVE-2024-27351</a></li>\n<li><a href=\"https://docs.djangoproject.com/en/5.0/releases/security\">https://docs.djangoproject.com/en/5.0/releases/security</a></li>\n<li><a href=\"https://groups.google.com/forum/#%21forum/django-announce\">https://groups.google.com/forum/#%21forum/django-announce</a></li>\n<li><a href=\"https://www.djangoproject.com/weblog/2024/mar/04/security-releases\">https://www.djangoproject.com/weblog/2024/mar/04/security-releases</a></li>\n<li><a href=\"https://github.com/pypa/advisory-database/tree/main/vulns/django/PYSEC-2024-47.yaml\">https://github.com/pypa/advisory-database/tree/main/vulns/django/PYSEC-2024-47.yaml</a></li>\n<li><a href=\"https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/D2JIRXEDP4ZET5KFMAPPYSK663Q52NEX\">https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/D2JIRXEDP4ZET5KFMAPPYSK663Q52NEX</a></li>\n<li><a href=\"https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/SN2PLJGYSAAG5KUVIUFJYKD3BLQ4OSN6\">https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/SN2PLJGYSAAG5KUVIUFJYKD3BLQ4OSN6</a></li>\n<li><a href=\"https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/ZQJOMNRMVPCN5WMIZ7YSX5LQ7IR2NY4D\">https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/ZQJOMNRMVPCN5WMIZ7YSX5LQ7IR2NY4D</a></li>\n<li><a href=\"http://www.openwall.com/lists/oss-security/2024/03/04/1\">http://www.openwall.com/lists/oss-security/2024/03/04/1</a></li>\n<li><a href=\"https://github.com/django/django/commit/072963e4c4d0b3a7a8c5412bc0c7d27d1a9c3521\">https://github.com/django/django/commit/072963e4c4d0b3a7a8c5412bc0c7d27d1a9c3521</a></li>\n<li><a href=\"https://github.com/django/django/commit/3394fc6132436eca89e997083bae9985fb7e761e\">https://github.com/django/django/commit/3394fc6132436eca89e997083bae9985fb7e761e</a></li>\n<li><a href=\"https://github.com/django/django/commit/3c9a2771cc80821e041b16eb36c1c37af5349d4a\">https://github.com/django/django/commit/3c9a2771cc80821e041b16eb36c1c37af5349d4a</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-vm8q-m57g-pff3\">https://github.com/advisories/GHSA-vm8q-m57g-pff3</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-vm8q-m57g-pff3",
            "title": "[django] Regular expression denial-of-service in Django",
            "date_modified": "2025-02-12T05:03:58.000Z",
            "date_published": "2024-03-15T21:30:43.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-vm8q-m57g-pff3"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Certifi 2024.07.04 removes root certificates from \"GLOBALTRUST\" from the root store. These are in the process of being removed from Mozilla's trust store.</p>\n<p>GLOBALTRUST's root certificates are being removed pursuant to an investigation which identified \"long-running and unresolved compliance issues\". Conclusions of Mozilla's investigation can be found <a href=\"https://groups.google.com/a/mozilla.org/g/dev-security-policy/c/XpknYMPO8dI\">here</a>.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/certifi/python-certifi/security/advisories/GHSA-248v-346w-9cwc\">https://github.com/certifi/python-certifi/security/advisories/GHSA-248v-346w-9cwc</a></li>\n<li><a href=\"https://github.com/certifi/python-certifi/commit/bd8153872e9c6fc98f4023df9c2deaffea2fa463\">https://github.com/certifi/python-certifi/commit/bd8153872e9c6fc98f4023df9c2deaffea2fa463</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-39689\">https://nvd.nist.gov/vuln/detail/CVE-2024-39689</a></li>\n<li><a href=\"https://groups.google.com/a/mozilla.org/g/dev-security-policy/c/XpknYMPO8dI\">https://groups.google.com/a/mozilla.org/g/dev-security-policy/c/XpknYMPO8dI</a></li>\n<li><a href=\"https://security.netapp.com/advisory/ntap-20241206-0001\">https://security.netapp.com/advisory/ntap-20241206-0001</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-248v-346w-9cwc\">https://github.com/advisories/GHSA-248v-346w-9cwc</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-248v-346w-9cwc",
            "title": "[certifi] Certifi removes GLOBALTRUST root certificate",
            "date_modified": "2025-02-11T22:38:20.000Z",
            "date_published": "2024-07-05T20:06:40.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-248v-346w-9cwc"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>pyca/cryptography's wheels include a statically linked copy of OpenSSL. The versions of OpenSSL included in cryptography 42.0.0-44.0.0 are vulnerable to a security issue. More details about the vulnerability itself can be found in <a href=\"https://openssl-library.org/news/secadv/20250211.txt\">https://openssl-library.org/news/secadv/20250211.txt</a>.</p>\n<p>If you are building cryptography source (\"sdist\") then you are responsible for upgrading your copy of OpenSSL. Only users installing from wheels built by the cryptography project (i.e., those distributed on PyPI) need to update their cryptography versions.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/pyca/cryptography/security/advisories/GHSA-79v4-65xg-pq4g\">https://github.com/pyca/cryptography/security/advisories/GHSA-79v4-65xg-pq4g</a></li>\n<li><a href=\"https://openssl-library.org/news/secadv/20250211.txt\">https://openssl-library.org/news/secadv/20250211.txt</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-12797\">https://nvd.nist.gov/vuln/detail/CVE-2024-12797</a></li>\n<li><a href=\"https://github.com/openssl/openssl/commit/738d4f9fdeaad57660dcba50a619fafced3fd5e9\">https://github.com/openssl/openssl/commit/738d4f9fdeaad57660dcba50a619fafced3fd5e9</a></li>\n<li><a href=\"https://github.com/openssl/openssl/commit/798779d43494549b611233f92652f0da5328fbe7\">https://github.com/openssl/openssl/commit/798779d43494549b611233f92652f0da5328fbe7</a></li>\n<li><a href=\"https://github.com/openssl/openssl/commit/87ebd203feffcf92ad5889df92f90bb0ee10a699\">https://github.com/openssl/openssl/commit/87ebd203feffcf92ad5889df92f90bb0ee10a699</a></li>\n<li><a href=\"http://www.openwall.com/lists/oss-security/2025/02/11/3\">http://www.openwall.com/lists/oss-security/2025/02/11/3</a></li>\n<li><a href=\"http://www.openwall.com/lists/oss-security/2025/02/11/4\">http://www.openwall.com/lists/oss-security/2025/02/11/4</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-79v4-65xg-pq4g\">https://github.com/advisories/GHSA-79v4-65xg-pq4g</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-79v4-65xg-pq4g",
            "title": "[cryptography] Vulnerable OpenSSL included in cryptography wheels",
            "date_modified": "2025-02-12T18:20:08.000Z",
            "date_published": "2025-02-11T18:06:42.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-79v4-65xg-pq4g"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>PandasAI uses an interactive prompt function that is vulnerable to prompt injection and run arbitrary Python code that can lead to Remote Code Execution (RCE) instead of the intended explanation of the natural language processing by the LLM. The security controls of PandasAI (2.4.3 and earlier) fail to distinguish between legitimate and malicious inputs, allowing the attackers to manipulate the system into executing untrusted code, leading to untrusted code execution (RCE), system compromise, or pivoting attacks on connected services.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-12366\">https://nvd.nist.gov/vuln/detail/CVE-2024-12366</a></li>\n<li><a href=\"https://docs.getpanda.ai/v3/privacy-security\">https://docs.getpanda.ai/v3/privacy-security</a></li>\n<li><a href=\"https://docs.pandas-ai.com/advanced-security-agent\">https://docs.pandas-ai.com/advanced-security-agent</a></li>\n<li><a href=\"https://www.kb.cert.org/vuls/id/148244\">https://www.kb.cert.org/vuls/id/148244</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-vv2h-2w3q-3fx7\">https://github.com/advisories/GHSA-vv2h-2w3q-3fx7</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-vv2h-2w3q-3fx7",
            "title": "[pandasai] PandasAI interactive prompt function Remote Code Execution (RCE)",
            "date_modified": "2025-02-11T21:41:48.000Z",
            "date_published": "2025-02-11T15:32:24.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-vv2h-2w3q-3fx7"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Hugging Face Transformers MaskFormer Model Deserialization of Untrusted Data Remote Code Execution Vulnerability. This vulnerability allows remote attackers to execute arbitrary code on affected installations of Hugging Face Transformers. User interaction is required to exploit this vulnerability in that the target must visit a malicious page or open a malicious file.</p>\n<p>The specific flaw exists within the parsing of model files. The issue results from the lack of proper validation of user-supplied data, which can result in deserialization of untrusted data. An attacker can leverage this vulnerability to execute code in the context of the current user. Was ZDI-CAN-25191.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-11393\">https://nvd.nist.gov/vuln/detail/CVE-2024-11393</a></li>\n<li><a href=\"https://www.zerodayinitiative.com/advisories/ZDI-24-1514\">https://www.zerodayinitiative.com/advisories/ZDI-24-1514</a></li>\n<li><a href=\"https://github.com/pypa/advisory-database/tree/main/vulns/transformers/PYSEC-2024-228.yaml\">https://github.com/pypa/advisory-database/tree/main/vulns/transformers/PYSEC-2024-228.yaml</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-wrfc-pvp9-mr9g\">https://github.com/advisories/GHSA-wrfc-pvp9-mr9g</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-wrfc-pvp9-mr9g",
            "title": "[transformers] Deserialization of Untrusted Data in Hugging Face Transformers",
            "date_modified": "2025-02-11T15:08:02.000Z",
            "date_published": "2024-11-23T03:31:58.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-wrfc-pvp9-mr9g"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Hugging Face Transformers Trax Model Deserialization of Untrusted Data Remote Code Execution Vulnerability. This vulnerability allows remote attackers to execute arbitrary code on affected installations of Hugging Face Transformers. User interaction is required to exploit this vulnerability in that the target must visit a malicious page or open a malicious file.</p>\n<p>The specific flaw exists within the handling of model files. The issue results from the lack of proper validation of user-supplied data, which can result in deserialization of untrusted data. An attacker can leverage this vulnerability to execute code in the context of the current user. Was ZDI-CAN-25012.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-11394\">https://nvd.nist.gov/vuln/detail/CVE-2024-11394</a></li>\n<li><a href=\"https://www.zerodayinitiative.com/advisories/ZDI-24-1515\">https://www.zerodayinitiative.com/advisories/ZDI-24-1515</a></li>\n<li><a href=\"https://github.com/pypa/advisory-database/tree/main/vulns/transformers/PYSEC-2024-229.yaml\">https://github.com/pypa/advisory-database/tree/main/vulns/transformers/PYSEC-2024-229.yaml</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-hxxf-235m-72v3\">https://github.com/advisories/GHSA-hxxf-235m-72v3</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-hxxf-235m-72v3",
            "title": "[transformers] Deserialization of Untrusted Data in Hugging Face Transformers",
            "date_modified": "2025-02-11T15:07:52.000Z",
            "date_published": "2024-11-23T03:31:58.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-hxxf-235m-72v3"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Hugging Face Transformers MobileViTV2 Deserialization of Untrusted Data Remote Code Execution Vulnerability. This vulnerability allows remote attackers to execute arbitrary code on affected installations of Hugging Face Transformers. User interaction is required to exploit this vulnerability in that the target must visit a malicious page or open a malicious file.</p>\n<p>The specific flaw exists within the handling of configuration files. The issue results from the lack of proper validation of user-supplied data, which can result in deserialization of untrusted data. An attacker can leverage this vulnerability to execute code in the context of the current user. Was ZDI-CAN-24322.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-11392\">https://nvd.nist.gov/vuln/detail/CVE-2024-11392</a></li>\n<li><a href=\"https://www.zerodayinitiative.com/advisories/ZDI-24-1513\">https://www.zerodayinitiative.com/advisories/ZDI-24-1513</a></li>\n<li><a href=\"https://github.com/pypa/advisory-database/tree/main/vulns/transformers/PYSEC-2024-227.yaml\">https://github.com/pypa/advisory-database/tree/main/vulns/transformers/PYSEC-2024-227.yaml</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-qxrp-vhvm-j765\">https://github.com/advisories/GHSA-qxrp-vhvm-j765</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-qxrp-vhvm-j765",
            "title": "[transformers] Deserialization of Untrusted Data in Hugging Face Transformers",
            "date_modified": "2025-02-11T15:04:55.000Z",
            "date_published": "2024-11-23T03:31:58.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-qxrp-vhvm-j765"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Version <a href=\"https://github.com/ietf-tools/xml2rfc/blob/main/CHANGELOG.md#3120---2021-12-08\">3.12.0</a> changed <code>xml2rfc</code> so that it would not access local files without the presence of its new <code>--allow-local-file-access</code> flag.\nThis prevented XML External Entity (XXE) injection attacks with <code>xinclude</code> and XML entity references.</p>\n<p>It was discovered that <code>xml2rfc</code> does not respect <code>--allow-local-file-access</code> when a local file is specified as <code>src</code> in <code>artwork</code> or <code>sourcecode</code> elements. Furthermore, XML entity references can include any file inside the source dir and below without using the <code>--allow-local-file-access</code> flag. </p>\n<p>The <code>xml2rfc &lt;= 3.26.0</code> behaviour:</p>\n<table>\n<thead>\n<tr>\n<th></th>\n<th><code>xinclude</code></th>\n<th>XML entity reference</th>\n<th><code>artwork src=</code></th>\n<th><code>sourcecode src=</code></th>\n</tr>\n</thead>\n<tbody><tr>\n<td>without <code>--allow-local-file-access</code> flag</td>\n<td>No filesystem access</td>\n<td>Any file in xml2rfc templates dir and below, any file in source directory and below</td>\n<td>Access source directory and below</td>\n<td>Access source directory and below</td>\n</tr>\n<tr>\n<td>with <code>--allow-local-file-access</code> flag</td>\n<td>Access any file on filesystem[^1]</td>\n<td>Access any file on filesystem[^1]</td>\n<td>Access source directory and below</td>\n<td>Access source directory and below</td>\n</tr>\n</tbody></table>\n<p>  [^1]: Access any file of the filesystem with the permissions of the user running <code>xml2rfc</code> can access.</p>\n<h3 id=\"impact\">Impact</h3>\n<p>Anyone running <code>xml2rfc</code> as a service that accepts input from external users is impacted by this issue.\nSpecifying a file in <code>src</code> attribute in <code>artwork</code> or <code>sourcecode</code> elements will cause the contents of that file to appear in xml2rfc’s output results.\nBut that file has to be inside the same directory as the XML input source file.\nFor <code>artwork</code> and <code>sourcecode</code>, <code>xml2rfc</code> will not look above the source file directory.</p>\n<h3 id=\"the-proposed-new-behaviour\">The proposed new behaviour</h3>\n<ul>\n<li>Generalize file access checks.</li>\n<li>Only allow access to files within src dir and below. (xml entity include can access templates dir).</li>\n<li>Always allow access to <code>templates_dir</code> for XML entity includes.</li>\n</ul>\n<p>New behaviour:</p>\n<table>\n<thead>\n<tr>\n<th></th>\n<th><code>xinclude</code></th>\n<th>XML entity reference</th>\n<th><code>artwork src=</code></th>\n<th><code>sourcecode src=</code></th>\n</tr>\n</thead>\n<tbody><tr>\n<td>without <code>--allow-local-file-access</code> flag</td>\n<td>No filesystem access</td>\n<td>No filesystem access <em>(except for <code>templates_dir</code>)</em></td>\n<td>No filesystem access</td>\n<td>No filesystem access</td>\n</tr>\n<tr>\n<td>with <code>--allow-local-file-access</code> flag</td>\n<td>Access source directory and below</td>\n<td>Access source directory and below <em>(Can access<code>templates_dir</code>).</em></td>\n<td>Access source directory and below</td>\n<td>Access source directory and below</td>\n</tr>\n</tbody></table>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>Use a secure temporary directory to process un-trusted XML files, and do not reuse it for processing other XML documents.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/ietf-tools/xml2rfc/security/advisories/GHSA-432c-wxpg-m4q3\">https://github.com/ietf-tools/xml2rfc/security/advisories/GHSA-432c-wxpg-m4q3</a></li>\n<li><a href=\"https://github.com/ietf-tools/xml2rfc/commit/ec98f9cb4b9a8658222117df037dda473ca3f4e4\">https://github.com/ietf-tools/xml2rfc/commit/ec98f9cb4b9a8658222117df037dda473ca3f4e4</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-432c-wxpg-m4q3\">https://github.com/advisories/GHSA-432c-wxpg-m4q3</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-432c-wxpg-m4q3",
            "title": "[xml2rfc] xml2rfc has file inclusion irregularities",
            "date_modified": "2025-02-07T20:33:50.000Z",
            "date_published": "2025-02-07T20:32:27.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-432c-wxpg-m4q3"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"summary\">Summary</h3>\n<p>Maliciously constructed prompts can lead to hash collisions, resulting in prefix cache reuse, which can interfere with subsequent responses and cause unintended behavior.</p>\n<h3 id=\"details\">Details</h3>\n<p>vLLM's prefix caching makes use of Python's built-in hash() function. As of Python 3.12, the behavior of hash(None) has changed to be a predictable constant value. This makes it more feasible that someone could try exploit hash collisions.</p>\n<h3 id=\"impact\">Impact</h3>\n<p>The impact of a collision would be using cache that was generated using different content. Given knowledge of prompts in use and predictable hashing behavior, someone could intentionally populate the cache using a prompt known to collide with another prompt in use. </p>\n<h3 id=\"solution\">Solution</h3>\n<p>We address this problem by initializing hashes in vllm with a value that is no longer constant and predictable. It will be different each time vllm runs. This restores behavior we got in Python versions prior to 3.12.</p>\n<p>Using a hashing algorithm that is less prone to collision (like sha256, for example) would be the best way to avoid the possibility of a collision. However, it would have an impact to both performance and memory footprint. Hash collisions may still occur, though they are no longer straight forward to predict.</p>\n<p>To give an idea of the likelihood of a collision, for randomly generated hash values (assuming the hash generation built into Python is uniformly distributed), with a cache capacity of 50,000 messages and an average prompt length of 300, a collision will occur on average once every 1 trillion requests.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/vllm-project/vllm/pull/12621\">https://github.com/vllm-project/vllm/pull/12621</a></li>\n<li><a href=\"https://github.com/python/cpython/commit/432117cd1f59c76d97da2eaff55a7d758301dbc7\">https://github.com/python/cpython/commit/432117cd1f59c76d97da2eaff55a7d758301dbc7</a></li>\n<li><a href=\"https://github.com/python/cpython/pull/99541\">https://github.com/python/cpython/pull/99541</a></li>\n</ul>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/vllm-project/vllm/security/advisories/GHSA-rm76-4mrf-v9r8\">https://github.com/vllm-project/vllm/security/advisories/GHSA-rm76-4mrf-v9r8</a></li>\n<li><a href=\"https://github.com/python/cpython/pull/99541\">https://github.com/python/cpython/pull/99541</a></li>\n<li><a href=\"https://github.com/vllm-project/vllm/pull/12621\">https://github.com/vllm-project/vllm/pull/12621</a></li>\n<li><a href=\"https://github.com/python/cpython/commit/432117cd1f59c76d97da2eaff55a7d758301dbc7\">https://github.com/python/cpython/commit/432117cd1f59c76d97da2eaff55a7d758301dbc7</a></li>\n<li><a href=\"https://github.com/vllm-project/vllm/commit/73b35cca7f3745d07d439c197768b25d88b6ab7f\">https://github.com/vllm-project/vllm/commit/73b35cca7f3745d07d439c197768b25d88b6ab7f</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2025-25183\">https://nvd.nist.gov/vuln/detail/CVE-2025-25183</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-rm76-4mrf-v9r8\">https://github.com/advisories/GHSA-rm76-4mrf-v9r8</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-rm76-4mrf-v9r8",
            "title": "[vllm] vLLM uses Python 3.12 built-in hash() which leads to predictable hash collisions in prefix cache",
            "date_modified": "2025-02-10T17:02:20.000Z",
            "date_published": "2025-02-06T20:00:05.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-rm76-4mrf-v9r8"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>In mitmweb 11.1.0 and below, a malicious client can use mitmweb's proxy server (bound to <code>*:8080</code> by default) to access mitmweb's internal API (bound to <code>127.0.0.1:8081</code> by default). In other words, while the client cannot access the API directly (good), they can access the API through the proxy (bad). An attacker may be able to escalate this <a href=\"https://en.wikipedia.org/wiki/Server-side_request_forgery\">SSRF</a>-style access to remote code execution.</p>\n<p>The mitmproxy and mitmdump tools are unaffected. Only mitmweb is affected. The <code>block_global</code> option, which is enabled by default, blocks connections originating from publicly-routable IP addresses in the proxy. The attacker needs to be in the same local network.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>The vulnerability has been fixed in mitmproxy 11.1.2 and above.</p>\n<h3 id=\"acknowledgements\">Acknowledgements</h3>\n<p>We thank Stefan Grönke (@gronke) for reporting this vulnerability as part of a security audit by <a href=\"https://www.radicallyopensecurity.com/\">Radically Open Security</a>. This audit was supported by the <a href=\"https://nlnet.nl/entrust/\">NGI0 Entrust fund</a> established by <a href=\"https://nlnet.nl/\">NLnet</a>.</p>\n<h3 id=\"timeline\">Timeline</h3>\n<ul>\n<li><strong>2025-01-14</strong>: Received initial report. </li>\n<li><strong>2025-01-14</strong>: Verified report and confirmed receipt.</li>\n<li><strong>2025-01-19</strong>: Shared patch with researcher.</li>\n<li><strong>2025-02-04</strong>: Received final confirmation that patch is working.</li>\n<li><strong>2025-02-05</strong>: Published patched release and advisory.</li>\n</ul>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/mitmproxy/mitmproxy/security/advisories/GHSA-wg33-5h85-7q5p\">https://github.com/mitmproxy/mitmproxy/security/advisories/GHSA-wg33-5h85-7q5p</a></li>\n<li><a href=\"https://github.com/mitmproxy/mitmproxy/commit/fa89055e196d953f11fd241e36ee37858993486a\">https://github.com/mitmproxy/mitmproxy/commit/fa89055e196d953f11fd241e36ee37858993486a</a></li>\n<li><a href=\"https://github.com/mitmproxy/mitmproxy/blob/main/CHANGELOG.md\">https://github.com/mitmproxy/mitmproxy/blob/main/CHANGELOG.md</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2025-23217\">https://nvd.nist.gov/vuln/detail/CVE-2025-23217</a></li>\n<li><a href=\"https://en.wikipedia.org/wiki/Server-side_request_forgery\">https://en.wikipedia.org/wiki/Server-side_request_forgery</a></li>\n<li><a href=\"https://github.com/mitmproxy/mitmproxy/blob/main/CHANGELOG.md#06-february-2025-mitmproxy-1112\">https://github.com/mitmproxy/mitmproxy/blob/main/CHANGELOG.md#06-february-2025-mitmproxy-1112</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-wg33-5h85-7q5p\">https://github.com/advisories/GHSA-wg33-5h85-7q5p</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-wg33-5h85-7q5p",
            "title": "[mitmproxy] Mitmweb API Authentication Bypass Using Proxy Server",
            "date_modified": "2025-02-06T19:55:00.000Z",
            "date_published": "2025-02-06T17:07:41.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-wg33-5h85-7q5p"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Missing SSL certificate validation in HTTPie v3.2.2 allows attackers to eavesdrop on communications between the host and server via a man-in-the-middle attack.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-48052\">https://nvd.nist.gov/vuln/detail/CVE-2023-48052</a></li>\n<li><a href=\"https://gxx777.github.io/HTTPie_3.2.2_Cryptographic_API_Misuse_Vulnerability.md\">https://gxx777.github.io/HTTPie_3.2.2_Cryptographic_API_Misuse_Vulnerability.md</a></li>\n<li><a href=\"https://github.com/httpie/cli/blob/master/httpie/client.py#L33\">https://github.com/httpie/cli/blob/master/httpie/client.py#L33</a></li>\n<li><a href=\"https://github.com/httpie/cli/blob/master/httpie/internal/update_warnings.py#L44\">https://github.com/httpie/cli/blob/master/httpie/internal/update_warnings.py#L44</a></li>\n<li><a href=\"https://github.com/pypa/advisory-database/tree/main/vulns/httpie/PYSEC-2023-242.yaml\">https://github.com/pypa/advisory-database/tree/main/vulns/httpie/PYSEC-2023-242.yaml</a></li>\n<li><a href=\"https://github.com/httpie/cli/issues/1549\">https://github.com/httpie/cli/issues/1549</a></li>\n<li><a href=\"https://github.com/httpie/cli/commit/7f03c52d2237440c5a672296ce6955aae4ed4f09\">https://github.com/httpie/cli/commit/7f03c52d2237440c5a672296ce6955aae4ed4f09</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-8r96-8889-qg2x\">https://github.com/advisories/GHSA-8r96-8889-qg2x</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-8r96-8889-qg2x",
            "title": "[httpie] HTTPie allows attackers to eavesdrop on communications between the host and server via a man-in-the-middle attack",
            "date_modified": "2025-02-06T16:05:10.000Z",
            "date_published": "2023-11-16T18:30:31.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-8r96-8889-qg2x"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p><strong>Product:</strong> Mobile Security Framework (MobSF)\n<strong>Version:</strong> 4.3.0\n<strong>CWE-ID:</strong> CWE-269: Improper Privilege Management\n<strong>CVSS vector v.4.0:</strong> 7.1 (AV:N/AC:L/AT:N/PR:L/UI:N/VC:H/VI:N/VA:N/SC:L/SI:N/SA:N)\n<strong>CVSS vector v.3.1:</strong> 6.5 (AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:N/A:N)\n<strong>Description:</strong> MobSF has a functionality of dividing users by roles. This functionality is not efficient, because any registered user can get API Token with all privileges.\n<strong>Impact:</strong> Information Disclosure \n<strong>Vulnerable component:</strong> Code output component (<code>/source_code</code>)\n<strong>Exploitation conditions:</strong> authorized user\n<strong>Mitigation:</strong> Remove token output in the returned js-script\n<strong>Researcher:</strong> Egor Filatov (Positive Technologies)</p>\n<h2 id=\"research\">Research</h2>\n<p>Researcher discovered zero-day vulnerability «Local Privilege Escalation» in Mobile Security Framework (MobSF).\nTo reproduce the vulnerability follow the steps below.</p>\n<p>•\t A user with minimal privileges is required, so the administrator must create a user account</p>\n<img src=\"https://github.com/user-attachments/assets/43e02a50-bdd9-48d9-9194-73946fcc56d9\" alt=\"fig1\" width=\"215\">\n\n<p><em>Figure 1. Registration</em></p>\n<p>•\tGo to static analysis of any application</p>\n<img src=\"https://github.com/user-attachments/assets/9ed141a7-a667-4a96-81fd-d81127874104\" alt=\"fig2\" width=\"1207\">\n \n<p><em>Figure 2. Static analysis</em></p>\n<p>•\tGo to the code review of the selected application and get a token with all privileges in the response</p>\n<img src=\"https://github.com/user-attachments/assets/bf8b704b-9067-4861-a7d3-05ec119d9a3f\" alt=\"fig3\" width=\"1400\">\n \n<p><em>Figure 3. Token receiving</em></p>\n<p>•\tThis token can be used to retrieve dynamic analysis information that has not been accessed before.</p>\n<p><img alt=\"fig4\" src=\"https://github.com/user-attachments/assets/fda8436b-de67-45b1-bb21-6cfbc9976f79\"></p>\n<p><em>Figure 4. No access demonstration</em></p>\n<img src=\"https://github.com/user-attachments/assets/dc8f639f-36b0-47d3-807d-58ae551fcbfc\" alt=\"fig5\" width=\"1412\">\n \n<p><em>Figure 5. Token usage</em></p>\n<p>As a result, the user is able to escalate the privileges.</p>\n<hr>\n<h3 id=\"please-assign-all-credits-to-egor-filatov-positive-technologies\">Please, assign all credits to: Egor Filatov (Positive Technologies)</h3>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/MobSF/Mobile-Security-Framework-MobSF/security/advisories/GHSA-79f6-p65j-3m2m\">https://github.com/MobSF/Mobile-Security-Framework-MobSF/security/advisories/GHSA-79f6-p65j-3m2m</a></li>\n<li><a href=\"https://github.com/MobSF/Mobile-Security-Framework-MobSF/commit/05206e72cae35b311615a70e51e1a946955c5e83\">https://github.com/MobSF/Mobile-Security-Framework-MobSF/commit/05206e72cae35b311615a70e51e1a946955c5e83</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2025-24805\">https://nvd.nist.gov/vuln/detail/CVE-2025-24805</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-79f6-p65j-3m2m\">https://github.com/advisories/GHSA-79f6-p65j-3m2m</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-79f6-p65j-3m2m",
            "title": "[mobsf] MobSF Local Privilege Escalation",
            "date_modified": "2025-02-05T21:45:41.000Z",
            "date_published": "2025-02-05T21:14:47.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-79f6-p65j-3m2m"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h1 id=\"partial-denial-of-service-dos\">Partial Denial of Service (DoS)</h1>\n<p><strong>Product:</strong> MobSF\n<strong>Version:</strong> &lt; 4.3.1\n<strong>CWE-ID:</strong> CWE-1287: Improper Validation of Specified Type of Input\n<strong>CVSS vector v.4.0:</strong> 7.1 (AV:N/AC:L/AT:N/PR:N/UI:P/VC:N/VI:N/VA:H/SC:N/SI:N/SA:N)\n<strong>CVSS vector v.3.1:</strong> 6.5 (AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:N/A:H)\n<strong>Description:</strong>  DoS in the Scans Results and iOS Dynamic Analyzer functionality \n<strong>Impact:</strong> Leveraging this vulnerability would make Scans Results and iOS Dynamic Analyzer pages unavailable.\n<strong>Vulnerable component:</strong> urls.py\n<a href=\"https://github.com/MobSF/Mobile-Security-Framework-MobSF/blob/d1d3b7a9aeb1a8c8c7c229a3455b19ade9fa8fe0/mobsf/MobSF/urls.py#L401\">https://github.com/MobSF/Mobile-Security-Framework-MobSF/blob/d1d3b7a9aeb1a8c8c7c229a3455b19ade9fa8fe0/mobsf/MobSF/urls.py#L401</a>\n<strong>Exploitation conditions:</strong> A malicious application was uploaded to the MobSF.\n<strong>Mitigation:</strong> Check the uploaded bundle IDs against the regex.\n<strong>Researcher: Oleg Surnin (Positive Technologies)</strong></p>\n<h2 id=\"research\">Research</h2>\n<p>Researcher discovered zero-day vulnerability Partial Denial of Service (DoS) in MobSF in the Scans Results and iOS Dynamic Analyzer functionality.\nAccording to Apple's documentation for bundle ID's, it must contain only alphanumeric characters (A–Z, a–z, and 0–9), hyphens (-), and periods (.).\n(<a href=\"https://developer.apple.com/documentation/bundleresources/information-property-list/cfbundleidentifier\">https://developer.apple.com/documentation/bundleresources/information-property-list/cfbundleidentifier</a>)\nHowever, an attacker can manually modify this value in <code>Info.plist</code> file and add special characters to the <code>&lt;key&gt;CFBundleIdentifier&lt;/key&gt;</code> value.\nIn the <code>urls.py</code> file URL rules are defined.\n<a href=\"https://github.com/MobSF/Mobile-Security-Framework-MobSF/blob/d1d3b7a9aeb1a8c8c7c229a3455b19ade9fa8fe0/mobsf/MobSF/urls.py#L401\">https://github.com/MobSF/Mobile-Security-Framework-MobSF/blob/d1d3b7a9aeb1a8c8c7c229a3455b19ade9fa8fe0/mobsf/MobSF/urls.py#L401</a></p>\n<p><em>Listing 3.</em></p>\n<pre><code>bundle_id_regex = r'(?P&lt;bundle_id&gt;([a-zA-Z0-9]{1}[\\w.-]{1,255}))$'\n\n# skip code\nre_path(fr'^ios/view_report/{bundle_id_regex}',\n                ios_view_report.ç,\n                name='ios_view_report'),\n</code></pre>\n<p>When the application parses the wrong characters in the bundle ID, it encounters an error.\nAs a result, it will not display content and will throw a 500 error instead. The only way to make the pages work again is to manually remove the malicious application from the system.</p>\n<h2 id=\"vulnerability-reproduction\">Vulnerability reproduction</h2>\n<p>To reproduce the vulnerability, follow the steps described below.</p>\n<p>•\tUnzip the IPA file of any iOS application.</p>\n<p><em>Listing 4. Unzipping the file</em></p>\n<pre><code>unzip test.ipa\n</code></pre>\n<p>•\tModify the value of <code>&lt;key&gt;CFBundleIdentifier&lt;/key&gt;</code> by adding restricted characters in the <code>Info.plist</code> file.</p>\n<img src=\"https://github.com/user-attachments/assets/97dce68a-a5e2-4048-b5c8-3090146a9635\" alt=\"image-6\" width=\"364\">\n\n<p>*Figure 7. Example with <code>'</code> character`</p>\n<p>•\tZip the modified IPA file.</p>\n<p><em>Listing 5. Zipping the file</em></p>\n<pre><code>zip -r dos.ipa Payload/\n</code></pre>\n<p>•\tUpload the modified IPA file to Static Analysis and wait until it finished\n•\tOpen the following pages:\n<code>http://mobsf/recent_scans/</code>\n<code>http://mobsf/ios/dynamic_analysis/</code></p>\n<img src=\"https://github.com/user-attachments/assets/a7a9ae2e-cd84-4ec8-8132-25140a209ca0\" alt=\"image-7\" width=\"1119\">\n\n<p><em>Figure 8. DoS Example</em></p>\n<img src=\"https://github.com/user-attachments/assets/a76e03ae-b4c6-4003-a145-c1fa4c88a7a5\" alt=\"image-8\" width=\"1141\">\n \n<p><em>Figure 9. DoS Example</em></p>\n<hr>\n<h3 id=\"please-assign-all-credits-to-oleg-surnin-positive-technologies\">Please, assign all credits to Oleg Surnin (Positive Technologies)</h3>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/MobSF/Mobile-Security-Framework-MobSF/security/advisories/GHSA-jrm8-xgf3-fwqr\">https://github.com/MobSF/Mobile-Security-Framework-MobSF/security/advisories/GHSA-jrm8-xgf3-fwqr</a></li>\n<li><a href=\"https://github.com/MobSF/Mobile-Security-Framework-MobSF/commit/05206e72cae35b311615a70e51e1a946955c5e83\">https://github.com/MobSF/Mobile-Security-Framework-MobSF/commit/05206e72cae35b311615a70e51e1a946955c5e83</a></li>\n<li><a href=\"https://developer.apple.com/documentation/bundleresources/information-property-list/cfbundleidentifier\">https://developer.apple.com/documentation/bundleresources/information-property-list/cfbundleidentifier</a></li>\n<li><a href=\"https://github.com/MobSF/Mobile-Security-Framework-MobSF/blob/d1d3b7a9aeb1a8c8c7c229a3455b19ade9fa8fe0/mobsf/MobSF/urls.py#L401\">https://github.com/MobSF/Mobile-Security-Framework-MobSF/blob/d1d3b7a9aeb1a8c8c7c229a3455b19ade9fa8fe0/mobsf/MobSF/urls.py#L401</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2025-24804\">https://nvd.nist.gov/vuln/detail/CVE-2025-24804</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-jrm8-xgf3-fwqr\">https://github.com/advisories/GHSA-jrm8-xgf3-fwqr</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-jrm8-xgf3-fwqr",
            "title": "[mobsf] MobSF Partial Denial of Service (DoS)",
            "date_modified": "2025-02-05T21:45:32.000Z",
            "date_published": "2025-02-05T21:09:21.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-jrm8-xgf3-fwqr"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p><strong>Product:</strong> MobSF\n<strong>Version:</strong> &lt; 4.3.1\n<strong>CWE-ID:</strong> CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')\n<strong>CVSS vector v.4.0:</strong> 8.5 (AV:N/AC:L/AT:N/PR:N/UI:P/VC:H/VI:H/VA:N/SC:N/SI:N/SA:N)\n<strong>CVSS vector v.3.1:</strong> 8.1 (AV:N/AC:L/PR:N/UI:R/S:U/C:H/I:H/A:N)\n<strong>Description:</strong> Stored XSS in the iOS Dynamic Analyzer functionality.\n<strong>Impact:</strong> Leveraging this vulnerability would enable performing actions as users, including administrative users.\n<strong>Vulnerable component:</strong> <code>dynamic_analysis.html</code> \n<a href=\"https://github.com/MobSF/Mobile-Security-Framework-MobSF/blob/d1d3b7a9aeb1a8c8c7c229a3455b19ade9fa8fe0/mobsf/templates/dynamic_analysis/ios/dynamic_analysis.html#L406\">https://github.com/MobSF/Mobile-Security-Framework-MobSF/blob/d1d3b7a9aeb1a8c8c7c229a3455b19ade9fa8fe0/mobsf/templates/dynamic_analysis/ios/dynamic_analysis.html#L406</a>\n<strong>Exploitation conditions:</strong> A malicious application was uploaded to the Correlium.\n<strong>Mitigation:</strong> Use <code>escapeHtml()</code> function on the <code>bundle</code> variable.\n<strong>Researcher: Oleg Surnin (Positive Technologies)</strong></p>\n<h2 id=\"research\">Research</h2>\n<p>Researcher discovered zero-day vulnerability Stored Cross-site Scripting (XSS) in MobSF in iOS Dynamic Analyzer functionality.\nAccording to Apple's documentation for bundle ID's, it must contain only alphanumeric characters (A–Z, a–z, and 0–9), hyphens (-), and periods (.).\n(<a href=\"https://developer.apple.com/documentation/bundleresources/information-property-list/cfbundleidentifier\">https://developer.apple.com/documentation/bundleresources/information-property-list/cfbundleidentifier</a>)\nHowever, an attacker can manually modify this value in <code>Info.plist</code> file and add special characters to the <code>&lt;key&gt;CFBundleIdentifier&lt;/key&gt;</code> value.\nIn the <code>dynamic_analysis.html</code> file you do not sanitize received bundle value from Corellium \n<a href=\"https://github.com/MobSF/Mobile-Security-Framework-MobSF/blob/d1d3b7a9aeb1a8c8c7c229a3455b19ade9fa8fe0/mobsf/templates/dynamic_analysis/ios/dynamic_analysis.html#L406\">https://github.com/MobSF/Mobile-Security-Framework-MobSF/blob/d1d3b7a9aeb1a8c8c7c229a3455b19ade9fa8fe0/mobsf/templates/dynamic_analysis/ios/dynamic_analysis.html#L406</a></p>\n<img src=\"https://github.com/user-attachments/assets/8400f872-46c0-406c-9dd6-97655e499b75\" alt=\"image\" width=\"1581\">\n\n<p><em>Figure 1. Unsanitized bundle</em></p>\n<p>As a result, it is possible to break the HTML context and achieve Stored XSS.</p>\n<h2 id=\"vulnerability-reproduction\">Vulnerability reproduction</h2>\n<p>To reproduce the vulnerability, follow the steps described below.</p>\n<p>•\tUnzip the IPA file of any iOS application.\n<em>Listing 1. Unzipping the file</em></p>\n<pre><code>unzip test.ipa\n</code></pre>\n<p>•\tModify the value of <code>&lt;key&gt;CFBundleIdentifier&lt;/key&gt;</code> by adding restricted characters in the <code>Info.plist</code> file.</p>\n<img src=\"https://github.com/user-attachments/assets/3eedf216-45ab-4d73-9815-6b02827d36d4\" alt=\"image-1\" width=\"560\">\n\n<p><em>Figure 2. Example of the modified Bundle Identifier</em></p>\n<p>•\tZip the modified IPA file.</p>\n<p><em>Listing 2. Zipping the file</em></p>\n<pre><code>zip -r xss.ipa Payload/\n</code></pre>\n<p>•\tUpload the modified IPA file to your virtual device using the Correlium platform.</p>\n<img src=\"https://github.com/user-attachments/assets/7f3e8b0d-d1f9-4d86-b63b-9b3f9e8f1d0c\" alt=\"image-2\" width=\"762\">\n\n<p><em>Figure 3. Example of the uploaded malicious application</em></p>\n<p>•\tOpen the XSS functionality and hover the mouse over the Uninstall button of the malicious app.</p>\n<img src=\"https://github.com/user-attachments/assets/fd621574-f2c1-42be-b30a-e8e7445c6b13\" alt=\"image-3\" width=\"764\">\n\n<p><em>Figure 4. Example of the 'Uninstall' button</em></p>\n <img src=\"https://github.com/user-attachments/assets/73526f71-6d39-4a94-98bf-8a867aa9acc7\" alt=\"image-4\" width=\"652\">\n \n<p><em>Figure 5. Example of the XSS</em></p>\n<img src=\"https://github.com/user-attachments/assets/13e6a1fc-59be-492d-8e42-a5a8010fc4c3\" alt=\"image-5\" width=\"460\">\n\n<p><em>Figure 6. Example of the vulnerable code</em></p>\n<hr>\n<h3 id=\"please-assign-all-credits-to-oleg-surnin-positive-technologies\">Please, assign all credits to: Oleg Surnin (Positive Technologies)</h3>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/MobSF/Mobile-Security-Framework-MobSF/security/advisories/GHSA-cxqq-w3x5-7ph3\">https://github.com/MobSF/Mobile-Security-Framework-MobSF/security/advisories/GHSA-cxqq-w3x5-7ph3</a></li>\n<li><a href=\"https://github.com/MobSF/Mobile-Security-Framework-MobSF/commit/05206e72cae35b311615a70e51e1a946955c5e83\">https://github.com/MobSF/Mobile-Security-Framework-MobSF/commit/05206e72cae35b311615a70e51e1a946955c5e83</a></li>\n<li><a href=\"https://developer.apple.com/documentation/bundleresources/information-property-list/cfbundleidentifier\">https://developer.apple.com/documentation/bundleresources/information-property-list/cfbundleidentifier</a></li>\n<li><a href=\"https://github.com/MobSF/Mobile-Security-Framework-MobSF/blob/d1d3b7a9aeb1a8c8c7c229a3455b19ade9fa8fe0/mobsf/templates/dynamic_analysis/ios/dynamic_analysis.html#L406\">https://github.com/MobSF/Mobile-Security-Framework-MobSF/blob/d1d3b7a9aeb1a8c8c7c229a3455b19ade9fa8fe0/mobsf/templates/dynamic_analysis/ios/dynamic_analysis.html#L406</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2025-24803\">https://nvd.nist.gov/vuln/detail/CVE-2025-24803</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-cxqq-w3x5-7ph3\">https://github.com/advisories/GHSA-cxqq-w3x5-7ph3</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-cxqq-w3x5-7ph3",
            "title": "[mobsf] MobSF Stored Cross-Site Scripting (XSS)",
            "date_modified": "2025-02-05T21:45:23.000Z",
            "date_published": "2025-02-05T20:56:39.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-cxqq-w3x5-7ph3"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>Using a specially crafted file, a user could potentially upload a file containing code that when executed could send arbitrary requests to the server. If that file was opened by an administrator, it could lead to escalation of privileges of the original submitter or other malicious actions. Users must have been registered to the site to exploit this vulnerability.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>This vulnerability has been fixed in CKAN 2.10.7 and 2.11.2</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>On versions prior to CKAN 2.10.7 and 2.11.2, site maintainers can restrict the file types supported for uploading using the <a href=\"https://docs.ckan.org/en/latest/maintaining/configuration.html#ckan-upload-user-mimetypes\">ckan.upload.user.mimetypes</a> / <a href=\"https://docs.ckan.org/en/latest/maintaining/configuration.html#ckan-upload-user-types\">ckan.upload.user.types</a> and <a href=\"https://docs.ckan.org/en/latest/maintaining/configuration.html#ckan-upload-group-mimetypes\">ckan.upload.group.mimetypes</a> / <a href=\"https://docs.ckan.org/en/latest/maintaining/configuration.html#ckan-upload-group-types\">ckan.upload.group.types</a> config options.\nTo entirely disable file uploads you can use:</p>\n<pre><code class=\"language-ini\">ckan.upload.user.types = none\n</code></pre>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/ckan/ckan/security/advisories/GHSA-7pq5-qcp6-mcww\">https://github.com/ckan/ckan/security/advisories/GHSA-7pq5-qcp6-mcww</a></li>\n<li><a href=\"https://github.com/ckan/ckan/commit/7da6a26c6183e0a97a356d1b1d2407f3ecc7b9c8\">https://github.com/ckan/ckan/commit/7da6a26c6183e0a97a356d1b1d2407f3ecc7b9c8</a></li>\n<li><a href=\"https://github.com/ckan/ckan/commit/a4fc5e06634ed51d653ab819a7efc8e62f816f68\">https://github.com/ckan/ckan/commit/a4fc5e06634ed51d653ab819a7efc8e62f816f68</a></li>\n<li><a href=\"https://docs.ckan.org/en/latest/maintaining/configuration.html#ckan-upload-group-mimetypes\">https://docs.ckan.org/en/latest/maintaining/configuration.html#ckan-upload-group-mimetypes</a></li>\n<li><a href=\"https://docs.ckan.org/en/latest/maintaining/configuration.html#ckan-upload-group-types\">https://docs.ckan.org/en/latest/maintaining/configuration.html#ckan-upload-group-types</a></li>\n<li><a href=\"https://docs.ckan.org/en/latest/maintaining/configuration.html#ckan-upload-user-mimetypes\">https://docs.ckan.org/en/latest/maintaining/configuration.html#ckan-upload-user-mimetypes</a></li>\n<li><a href=\"https://docs.ckan.org/en/latest/maintaining/configuration.html#ckan-upload-user-types\">https://docs.ckan.org/en/latest/maintaining/configuration.html#ckan-upload-user-types</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2025-24372\">https://nvd.nist.gov/vuln/detail/CVE-2025-24372</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-7pq5-qcp6-mcww\">https://github.com/advisories/GHSA-7pq5-qcp6-mcww</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-7pq5-qcp6-mcww",
            "title": "[ckan] CKAN has an XSS vector in user uploaded images in group/org and user profiles",
            "date_modified": "2025-02-05T21:45:15.000Z",
            "date_published": "2025-02-05T17:41:33.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-7pq5-qcp6-mcww"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>Using a specially crafted file, a user could potentially upload a file containing code that when executed could send arbitrary requests to the server. If that file was opened by an administrator, it could lead to escalation of privileges of the original submitter or other malicious actions. Users must have been registered to the site to exploit this vulnerability.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>This vulnerability has been fixed in CKAN 2.10.7 and 2.11.2</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>On versions prior to CKAN 2.10.7 and 2.11.2, site maintainers can restrict the file types supported for uploading using the <a href=\"https://docs.ckan.org/en/latest/maintaining/configuration.html#ckan-upload-user-mimetypes\">ckan.upload.user.mimetypes</a> / <a href=\"https://docs.ckan.org/en/latest/maintaining/configuration.html#ckan-upload-user-types\">ckan.upload.user.types</a> and <a href=\"https://docs.ckan.org/en/latest/maintaining/configuration.html#ckan-upload-group-mimetypes\">ckan.upload.group.mimetypes</a> / <a href=\"https://docs.ckan.org/en/latest/maintaining/configuration.html#ckan-upload-group-types\">ckan.upload.group.types</a> config options.\nTo entirely disable file uploads you can use:</p>\n<pre><code class=\"language-ini\">ckan.upload.user.types = none\n</code></pre>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/ckan/ckan/security/advisories/GHSA-7pq5-qcp6-mcww\">https://github.com/ckan/ckan/security/advisories/GHSA-7pq5-qcp6-mcww</a></li>\n<li><a href=\"https://github.com/ckan/ckan/commit/7da6a26c6183e0a97a356d1b1d2407f3ecc7b9c8\">https://github.com/ckan/ckan/commit/7da6a26c6183e0a97a356d1b1d2407f3ecc7b9c8</a></li>\n<li><a href=\"https://github.com/ckan/ckan/commit/a4fc5e06634ed51d653ab819a7efc8e62f816f68\">https://github.com/ckan/ckan/commit/a4fc5e06634ed51d653ab819a7efc8e62f816f68</a></li>\n<li><a href=\"https://docs.ckan.org/en/latest/maintaining/configuration.html#ckan-upload-group-mimetypes\">https://docs.ckan.org/en/latest/maintaining/configuration.html#ckan-upload-group-mimetypes</a></li>\n<li><a href=\"https://docs.ckan.org/en/latest/maintaining/configuration.html#ckan-upload-group-types\">https://docs.ckan.org/en/latest/maintaining/configuration.html#ckan-upload-group-types</a></li>\n<li><a href=\"https://docs.ckan.org/en/latest/maintaining/configuration.html#ckan-upload-user-mimetypes\">https://docs.ckan.org/en/latest/maintaining/configuration.html#ckan-upload-user-mimetypes</a></li>\n<li><a href=\"https://docs.ckan.org/en/latest/maintaining/configuration.html#ckan-upload-user-types\">https://docs.ckan.org/en/latest/maintaining/configuration.html#ckan-upload-user-types</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2025-24372\">https://nvd.nist.gov/vuln/detail/CVE-2025-24372</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-7pq5-qcp6-mcww\">https://github.com/advisories/GHSA-7pq5-qcp6-mcww</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-7pq5-qcp6-mcww",
            "title": "[ckan] CKAN has an XSS vector in user uploaded images in group/org and user profiles",
            "date_modified": "2025-02-05T21:45:15.000Z",
            "date_published": "2025-02-05T17:41:33.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-7pq5-qcp6-mcww"
            },
            "tags": [
                "severity"
            ]
        }
    ]
}