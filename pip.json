{
    "version": "https://jsonfeed.org/version/1",
    "title": "Security Advisory for Python packages hosted at PyPI.org",
    "home_page_url": "https://github.com/advisories?query=type%3Areviewed+ecosystem%3Apip",
    "feed_url": "https://xlordz.github.io/github-advisory-database-rss/pip.json",
    "description": "Security Advisory for Python packages hosted at PyPI.org on GitHub",
    "items": [
        {
            "content_html": "<h3 id=\"summary\">Summary</h3>\n<p>Static routes which contain files with compressed variants (<code>.gz</code> or <code>.br</code> extension) were vulnerable to path traversal outside the root directory if those variants are symbolic links.</p>\n<h3 id=\"details\">Details</h3>\n<p>The server protects static routes from path traversal outside the root directory when <code>follow_symlinks=False</code> (default).  It does this by resolving the requested URL to an absolute path and then checking that path relative to the root.  However, these checks are not performed when looking for compressed variants in the <code>FileResponse</code> class, and symbolic links are then automatically followed when performing <code>Path.stat()</code> and <code>Path.open()</code> to send the file.</p>\n<h3 id=\"impact\">Impact</h3>\n<p>Servers with static routes that contain compressed variants as symbolic links, pointing outside the root directory, or that permit users to upload or create such links, are impacted.</p>\n<hr>\n<p>Patch: <a href=\"https://github.com/aio-libs/aiohttp/pull/8653/files\">https://github.com/aio-libs/aiohttp/pull/8653/files</a></p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/aio-libs/aiohttp/security/advisories/GHSA-jwhx-xcg6-8xhj\">https://github.com/aio-libs/aiohttp/security/advisories/GHSA-jwhx-xcg6-8xhj</a></li>\n<li><a href=\"https://github.com/aio-libs/aiohttp/pull/8653\">https://github.com/aio-libs/aiohttp/pull/8653</a></li>\n<li><a href=\"https://github.com/aio-libs/aiohttp/commit/ce2e9758814527589b10759a20783fb03b98339f\">https://github.com/aio-libs/aiohttp/commit/ce2e9758814527589b10759a20783fb03b98339f</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-42367\">https://nvd.nist.gov/vuln/detail/CVE-2024-42367</a></li>\n<li><a href=\"https://github.com/aio-libs/aiohttp/blob/e0ff5246e1d29b7710ab1a2bbc972b48169f1c05/aiohttp/web_fileresponse.py#L177\">https://github.com/aio-libs/aiohttp/blob/e0ff5246e1d29b7710ab1a2bbc972b48169f1c05/aiohttp/web_fileresponse.py#L177</a></li>\n<li><a href=\"https://github.com/aio-libs/aiohttp/blob/e0ff5246e1d29b7710ab1a2bbc972b48169f1c05/aiohttp/web_urldispatcher.py#L674\">https://github.com/aio-libs/aiohttp/blob/e0ff5246e1d29b7710ab1a2bbc972b48169f1c05/aiohttp/web_urldispatcher.py#L674</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-jwhx-xcg6-8xhj\">https://github.com/advisories/GHSA-jwhx-xcg6-8xhj</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-jwhx-xcg6-8xhj",
            "title": "[aiohttp] In aiohttp, compressed files as symlinks are not protected from path traversal",
            "date_modified": "2025-06-09T12:17:21.000Z",
            "date_published": "2024-08-09T16:49:58.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-jwhx-xcg6-8xhj"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>The bug in Sentry's Python SDK &lt;2.8.0 results in the unintentional exposure of environment variables to subprocesses despite the <code>env={}</code> setting.</p>\n<h3 id=\"details\">Details</h3>\n<p>In Python's <code>subprocess</code> calls, all environment variables are passed to subprocesses by default. However, if you specifically do not want them to be passed to subprocesses, you may use <code>env</code> argument in <code>subprocess</code> calls, like in this example:</p>\n<pre><code>&gt;&gt;&gt; subprocess.check_output([\"env\"], env={\"TEST\":\"1\"})\nb'TEST=1\\n'\n</code></pre>\n<p>If you'd want to not pass any variables, you can set an empty dict:</p>\n<pre><code>&gt;&gt;&gt; subprocess.check_output([\"env\"], env={})\nb''\n</code></pre>\n<p>However, the bug in Sentry SDK &lt;2.8.0 causes <strong>all environment variables</strong> to be passed to the subprocesses when <code>env={}</code> is set, unless the Sentry SDK's <a href=\"https://docs.sentry.io/platforms/python/integrations/default-integrations/#stdlib\">Stdlib</a> integration is disabled. The Stdlib integration is enabled by default.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>The issue has been patched in <a href=\"https://github.com/getsentry/sentry-python/pull/3251\">https://github.com/getsentry/sentry-python/pull/3251</a> and the fix released in <a href=\"https://github.com/getsentry/sentry-python/releases/tag/2.8.0\">sentry-sdk==2.8.0</a>. The fix was also backported to <a href=\"https://github.com/getsentry/sentry-python/releases/tag/1.45.1\">sentry-sdk==1.45.1</a>.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>We strongly recommend upgrading to the latest SDK version. However, if it's not possible, and if passing environment variables to child processes poses a security risk for you, there are two options:</p>\n<ol>\n<li>In your application, replace <code>env={}</code> with the minimal dict <code>env={\"EMPTY_ENV\":\"1\"}</code> or similar.</li>\n</ol>\n<p>OR</p>\n<ol start=\"2\">\n<li>Disable Stdlib integration:</li>\n</ol>\n<pre><code>import sentry_sdk\n\n# Should go before sentry_sdk.init\nsentry_sdk.integrations._DEFAULT_INTEGRATIONS.remove(\"sentry_sdk.integrations.stdlib.StdlibIntegration\")\n\nsentry_sdk.init(...)\n</code></pre>\n<h3 id=\"references\">References</h3>\n<ul>\n<li>Sentry docs: <a href=\"https://docs.sentry.io/platforms/python/integrations/default-integrations/\">Default integrations</a></li>\n<li>Python docs: <a href=\"https://docs.python.org/3/library/subprocess.html\">subprocess module</a></li>\n<li>Patch <a href=\"https://github.com/getsentry/sentry-python/pull/3251\">https://github.com/getsentry/sentry-python/pull/3251</a></li>\n</ul>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/getsentry/sentry-python/security/advisories/GHSA-g92j-qhmh-64v2\">https://github.com/getsentry/sentry-python/security/advisories/GHSA-g92j-qhmh-64v2</a></li>\n<li><a href=\"https://github.com/getsentry/sentry-python/pull/3251\">https://github.com/getsentry/sentry-python/pull/3251</a></li>\n<li><a href=\"https://github.com/getsentry/sentry-python/commit/763e40aa4cb57ecced467f48f78f335c87e9bdff\">https://github.com/getsentry/sentry-python/commit/763e40aa4cb57ecced467f48f78f335c87e9bdff</a></li>\n<li><a href=\"https://docs.python.org/3/library/subprocess.html\">https://docs.python.org/3/library/subprocess.html</a></li>\n<li><a href=\"https://docs.sentry.io/platforms/python/integrations/default-integrations\">https://docs.sentry.io/platforms/python/integrations/default-integrations</a></li>\n<li><a href=\"https://docs.sentry.io/platforms/python/integrations/default-integrations/#stdlib\">https://docs.sentry.io/platforms/python/integrations/default-integrations/#stdlib</a></li>\n<li><a href=\"https://github.com/getsentry/sentry-python/releases/tag/2.8.0\">https://github.com/getsentry/sentry-python/releases/tag/2.8.0</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-40647\">https://nvd.nist.gov/vuln/detail/CVE-2024-40647</a></li>\n<li><a href=\"https://github.com/getsentry/sentry-python/releases/tag/1.45.1\">https://github.com/getsentry/sentry-python/releases/tag/1.45.1</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-g92j-qhmh-64v2\">https://github.com/advisories/GHSA-g92j-qhmh-64v2</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-g92j-qhmh-64v2",
            "title": "[sentry-sdk] Sentry's Python SDK unintentionally exposes environment variables to subprocesses",
            "date_modified": "2025-06-06T22:27:44.000Z",
            "date_published": "2024-07-18T17:18:46.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-g92j-qhmh-64v2"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>The bug in Sentry's Python SDK &lt;2.8.0 results in the unintentional exposure of environment variables to subprocesses despite the <code>env={}</code> setting.</p>\n<h3 id=\"details\">Details</h3>\n<p>In Python's <code>subprocess</code> calls, all environment variables are passed to subprocesses by default. However, if you specifically do not want them to be passed to subprocesses, you may use <code>env</code> argument in <code>subprocess</code> calls, like in this example:</p>\n<pre><code>&gt;&gt;&gt; subprocess.check_output([\"env\"], env={\"TEST\":\"1\"})\nb'TEST=1\\n'\n</code></pre>\n<p>If you'd want to not pass any variables, you can set an empty dict:</p>\n<pre><code>&gt;&gt;&gt; subprocess.check_output([\"env\"], env={})\nb''\n</code></pre>\n<p>However, the bug in Sentry SDK &lt;2.8.0 causes <strong>all environment variables</strong> to be passed to the subprocesses when <code>env={}</code> is set, unless the Sentry SDK's <a href=\"https://docs.sentry.io/platforms/python/integrations/default-integrations/#stdlib\">Stdlib</a> integration is disabled. The Stdlib integration is enabled by default.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>The issue has been patched in <a href=\"https://github.com/getsentry/sentry-python/pull/3251\">https://github.com/getsentry/sentry-python/pull/3251</a> and the fix released in <a href=\"https://github.com/getsentry/sentry-python/releases/tag/2.8.0\">sentry-sdk==2.8.0</a>. The fix was also backported to <a href=\"https://github.com/getsentry/sentry-python/releases/tag/1.45.1\">sentry-sdk==1.45.1</a>.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>We strongly recommend upgrading to the latest SDK version. However, if it's not possible, and if passing environment variables to child processes poses a security risk for you, there are two options:</p>\n<ol>\n<li>In your application, replace <code>env={}</code> with the minimal dict <code>env={\"EMPTY_ENV\":\"1\"}</code> or similar.</li>\n</ol>\n<p>OR</p>\n<ol start=\"2\">\n<li>Disable Stdlib integration:</li>\n</ol>\n<pre><code>import sentry_sdk\n\n# Should go before sentry_sdk.init\nsentry_sdk.integrations._DEFAULT_INTEGRATIONS.remove(\"sentry_sdk.integrations.stdlib.StdlibIntegration\")\n\nsentry_sdk.init(...)\n</code></pre>\n<h3 id=\"references\">References</h3>\n<ul>\n<li>Sentry docs: <a href=\"https://docs.sentry.io/platforms/python/integrations/default-integrations/\">Default integrations</a></li>\n<li>Python docs: <a href=\"https://docs.python.org/3/library/subprocess.html\">subprocess module</a></li>\n<li>Patch <a href=\"https://github.com/getsentry/sentry-python/pull/3251\">https://github.com/getsentry/sentry-python/pull/3251</a></li>\n</ul>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/getsentry/sentry-python/security/advisories/GHSA-g92j-qhmh-64v2\">https://github.com/getsentry/sentry-python/security/advisories/GHSA-g92j-qhmh-64v2</a></li>\n<li><a href=\"https://github.com/getsentry/sentry-python/pull/3251\">https://github.com/getsentry/sentry-python/pull/3251</a></li>\n<li><a href=\"https://github.com/getsentry/sentry-python/commit/763e40aa4cb57ecced467f48f78f335c87e9bdff\">https://github.com/getsentry/sentry-python/commit/763e40aa4cb57ecced467f48f78f335c87e9bdff</a></li>\n<li><a href=\"https://docs.python.org/3/library/subprocess.html\">https://docs.python.org/3/library/subprocess.html</a></li>\n<li><a href=\"https://docs.sentry.io/platforms/python/integrations/default-integrations\">https://docs.sentry.io/platforms/python/integrations/default-integrations</a></li>\n<li><a href=\"https://docs.sentry.io/platforms/python/integrations/default-integrations/#stdlib\">https://docs.sentry.io/platforms/python/integrations/default-integrations/#stdlib</a></li>\n<li><a href=\"https://github.com/getsentry/sentry-python/releases/tag/2.8.0\">https://github.com/getsentry/sentry-python/releases/tag/2.8.0</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-40647\">https://nvd.nist.gov/vuln/detail/CVE-2024-40647</a></li>\n<li><a href=\"https://github.com/getsentry/sentry-python/releases/tag/1.45.1\">https://github.com/getsentry/sentry-python/releases/tag/1.45.1</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-g92j-qhmh-64v2\">https://github.com/advisories/GHSA-g92j-qhmh-64v2</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-g92j-qhmh-64v2",
            "title": "[sentry-sdk] Sentry's Python SDK unintentionally exposes environment variables to subprocesses",
            "date_modified": "2025-06-06T22:27:44.000Z",
            "date_published": "2024-07-18T17:18:46.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-g92j-qhmh-64v2"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Multiple vector store integrations in run-llama/llama_index version v0.12.21 have SQL injection vulnerabilities. These vulnerabilities allow an attacker to read and write data using SQL, potentially leading to unauthorized access to data of other users depending on the usage of the llama-index library in a web application.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2025-1793\">https://nvd.nist.gov/vuln/detail/CVE-2025-1793</a></li>\n<li><a href=\"https://github.com/run-llama/llama_index/commit/0008041e8dde8e519621388e5d6f558bde6ef42e\">https://github.com/run-llama/llama_index/commit/0008041e8dde8e519621388e5d6f558bde6ef42e</a></li>\n<li><a href=\"https://huntr.com/bounties/8cb1555a-9655-4122-b0d6-60059e79183c\">https://huntr.com/bounties/8cb1555a-9655-4122-b0d6-60059e79183c</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-v3c8-3pr6-gr7p\">https://github.com/advisories/GHSA-v3c8-3pr6-gr7p</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-v3c8-3pr6-gr7p",
            "title": "[llama-index] llama_index vulnerable to SQL Injection",
            "date_modified": "2025-06-06T17:24:33.000Z",
            "date_published": "2025-06-05T06:30:26.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-v3c8-3pr6-gr7p"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>An issue was discovered in Django 5.2 before 5.2.2, 5.1 before 5.1.10, and 4.2 before 4.2.22. Internal HTTP response logging does not escape request.path, which allows remote attackers to potentially manipulate log output via crafted URLs. This may lead to log injection or forgery when logs are viewed in terminals or processed by external systems.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2025-48432\">https://nvd.nist.gov/vuln/detail/CVE-2025-48432</a></li>\n<li><a href=\"https://docs.djangoproject.com/en/dev/releases/security\">https://docs.djangoproject.com/en/dev/releases/security</a></li>\n<li><a href=\"https://groups.google.com/g/django-announce\">https://groups.google.com/g/django-announce</a></li>\n<li><a href=\"https://www.djangoproject.com/weblog/2025/jun/04/security-releases\">https://www.djangoproject.com/weblog/2025/jun/04/security-releases</a></li>\n<li><a href=\"http://www.openwall.com/lists/oss-security/2025/06/04/5\">http://www.openwall.com/lists/oss-security/2025/06/04/5</a></li>\n<li><a href=\"https://github.com/pypa/advisory-database/tree/main/vulns/django/PYSEC-2025-47.yaml\">https://github.com/pypa/advisory-database/tree/main/vulns/django/PYSEC-2025-47.yaml</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-7xr5-9hcq-chf9\">https://github.com/advisories/GHSA-7xr5-9hcq-chf9</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-7xr5-9hcq-chf9",
            "title": "[Django] Django Improper Output Neutralization for Logs vulnerability",
            "date_modified": "2025-06-06T15:45:57.000Z",
            "date_published": "2025-06-05T03:30:58.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-7xr5-9hcq-chf9"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>An issue was discovered in Django 5.2 before 5.2.2, 5.1 before 5.1.10, and 4.2 before 4.2.22. Internal HTTP response logging does not escape request.path, which allows remote attackers to potentially manipulate log output via crafted URLs. This may lead to log injection or forgery when logs are viewed in terminals or processed by external systems.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2025-48432\">https://nvd.nist.gov/vuln/detail/CVE-2025-48432</a></li>\n<li><a href=\"https://docs.djangoproject.com/en/dev/releases/security\">https://docs.djangoproject.com/en/dev/releases/security</a></li>\n<li><a href=\"https://groups.google.com/g/django-announce\">https://groups.google.com/g/django-announce</a></li>\n<li><a href=\"https://www.djangoproject.com/weblog/2025/jun/04/security-releases\">https://www.djangoproject.com/weblog/2025/jun/04/security-releases</a></li>\n<li><a href=\"http://www.openwall.com/lists/oss-security/2025/06/04/5\">http://www.openwall.com/lists/oss-security/2025/06/04/5</a></li>\n<li><a href=\"https://github.com/pypa/advisory-database/tree/main/vulns/django/PYSEC-2025-47.yaml\">https://github.com/pypa/advisory-database/tree/main/vulns/django/PYSEC-2025-47.yaml</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-7xr5-9hcq-chf9\">https://github.com/advisories/GHSA-7xr5-9hcq-chf9</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-7xr5-9hcq-chf9",
            "title": "[Django] Django Improper Output Neutralization for Logs vulnerability",
            "date_modified": "2025-06-06T15:45:57.000Z",
            "date_published": "2025-06-05T03:30:58.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-7xr5-9hcq-chf9"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>An issue was discovered in Django 5.2 before 5.2.2, 5.1 before 5.1.10, and 4.2 before 4.2.22. Internal HTTP response logging does not escape request.path, which allows remote attackers to potentially manipulate log output via crafted URLs. This may lead to log injection or forgery when logs are viewed in terminals or processed by external systems.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2025-48432\">https://nvd.nist.gov/vuln/detail/CVE-2025-48432</a></li>\n<li><a href=\"https://docs.djangoproject.com/en/dev/releases/security\">https://docs.djangoproject.com/en/dev/releases/security</a></li>\n<li><a href=\"https://groups.google.com/g/django-announce\">https://groups.google.com/g/django-announce</a></li>\n<li><a href=\"https://www.djangoproject.com/weblog/2025/jun/04/security-releases\">https://www.djangoproject.com/weblog/2025/jun/04/security-releases</a></li>\n<li><a href=\"http://www.openwall.com/lists/oss-security/2025/06/04/5\">http://www.openwall.com/lists/oss-security/2025/06/04/5</a></li>\n<li><a href=\"https://github.com/pypa/advisory-database/tree/main/vulns/django/PYSEC-2025-47.yaml\">https://github.com/pypa/advisory-database/tree/main/vulns/django/PYSEC-2025-47.yaml</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-7xr5-9hcq-chf9\">https://github.com/advisories/GHSA-7xr5-9hcq-chf9</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-7xr5-9hcq-chf9",
            "title": "[Django] Django Improper Output Neutralization for Logs vulnerability",
            "date_modified": "2025-06-06T15:45:57.000Z",
            "date_published": "2025-06-05T03:30:58.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-7xr5-9hcq-chf9"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>A vulnerability has been found in HumanSignal label-studio-ml-backend up to 9fb7f4aa186612806af2becfb621f6ed8d9fdbaf and classified as problematic. Affected by this vulnerability is the function load of the file label-studio-ml-backend/label_studio_ml/examples/yolo/utils/neural_nets.py of the component PT File Handler. The manipulation of the argument path leads to deserialization. An attack has to be approached locally. This product takes the approach of rolling releases to provide continious delivery. Therefore, version details for affected and updated releases are not available.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2025-5173\">https://nvd.nist.gov/vuln/detail/CVE-2025-5173</a></li>\n<li><a href=\"https://github.com/HumanSignal/label-studio-ml-backend/issues/765\">https://github.com/HumanSignal/label-studio-ml-backend/issues/765</a></li>\n<li><a href=\"https://vuldb.com/?ctiid.310261\">https://vuldb.com/?ctiid.310261</a></li>\n<li><a href=\"https://vuldb.com/?id.310261\">https://vuldb.com/?id.310261</a></li>\n<li><a href=\"https://vuldb.com/?submit.578126\">https://vuldb.com/?submit.578126</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-55g9-6c2x-gf8q\">https://github.com/advisories/GHSA-55g9-6c2x-gf8q</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-55g9-6c2x-gf8q",
            "title": "[label-studio-ml] HumanSignal label-studio-ml-backend Deserialization of Untrusted Data vulnerability",
            "date_modified": "2025-06-06T15:37:48.000Z",
            "date_published": "2025-05-26T09:30:44.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-55g9-6c2x-gf8q"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>When verifying signatures with X509 certificate validation turned off and HMAC shared secret set (<code>signxml.XMLVerifier.verify(require_x509=False, hmac_key=...</code>), prior versions of SignXML are vulnerable to a potential algorithm confusion attack. Unless the user explicitly limits the expected signature algorithms using the <code>signxml.XMLVerifier.verify(expect_config=...)</code> setting, an attacker may supply a signature unexpectedly signed with a key other than the provided HMAC key, using a different (asymmetric key) signature algorithm.</p>\n<p>Starting with signxml 4.0.4, specifying <code>hmac_key</code> causes the set of accepted signature algorithms to be restricted to HMAC only, if not already restricted by the user.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/XML-Security/signxml/security/advisories/GHSA-6vx8-pcwv-xhf4\">https://github.com/XML-Security/signxml/security/advisories/GHSA-6vx8-pcwv-xhf4</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2025-48994\">https://nvd.nist.gov/vuln/detail/CVE-2025-48994</a></li>\n<li><a href=\"https://github.com/XML-Security/signxml/commit/e3c0c2b82a3329a65d917830657649c98b8c7600\">https://github.com/XML-Security/signxml/commit/e3c0c2b82a3329a65d917830657649c98b8c7600</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-6vx8-pcwv-xhf4\">https://github.com/advisories/GHSA-6vx8-pcwv-xhf4</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-6vx8-pcwv-xhf4",
            "title": "[signxml] SignXML's signature verification with HMAC is vulnerable to an algorithm confusion attack",
            "date_modified": "2025-06-05T00:38:22.000Z",
            "date_published": "2025-06-05T00:38:20.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-6vx8-pcwv-xhf4"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>When verifying signatures with X509 certificate validation turned off and HMAC shared secret set (<code>signxml.XMLVerifier.verify(require_x509=False, hmac_key=...</code>), prior versions of SignXML are vulnerable to a potential timing attack. The verifier may leak information about the correct HMAC when comparing it with the user supplied hash, allowing users to reconstruct the correct HMAC for any data.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/XML-Security/signxml/security/advisories/GHSA-gmhf-gg8w-jw42\">https://github.com/XML-Security/signxml/security/advisories/GHSA-gmhf-gg8w-jw42</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2025-48995\">https://nvd.nist.gov/vuln/detail/CVE-2025-48995</a></li>\n<li><a href=\"https://github.com/XML-Security/signxml/commit/1b501faaacf34cf978a52dbc6915ec11e27611cd\">https://github.com/XML-Security/signxml/commit/1b501faaacf34cf978a52dbc6915ec11e27611cd</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-gmhf-gg8w-jw42\">https://github.com/advisories/GHSA-gmhf-gg8w-jw42</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-gmhf-gg8w-jw42",
            "title": "[signxml] SignXML's signature verification with HMAC is vulnerable to a timing attack",
            "date_modified": "2025-06-05T00:37:20.000Z",
            "date_published": "2025-06-05T00:37:19.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-gmhf-gg8w-jw42"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>A vulnerability classified as critical was found in aimhubio aim up to 3.29.1. This vulnerability affects the function RestrictedPythonQuery of the file /aim/storage/query.py of the component run_view Object Handler. The manipulation of the argument Query leads to sandbox issue. The attack can be initiated remotely. The exploit has been disclosed to the public and may be used. The vendor was contacted early about this disclosure but did not respond in any way.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2025-5321\">https://nvd.nist.gov/vuln/detail/CVE-2025-5321</a></li>\n<li><a href=\"https://gist.github.com/superboy-zjc/1fc4747a0ac77a1edc8c32e1d4edc54c\">https://gist.github.com/superboy-zjc/1fc4747a0ac77a1edc8c32e1d4edc54c</a></li>\n<li><a href=\"https://vuldb.com/?ctiid.310492\">https://vuldb.com/?ctiid.310492</a></li>\n<li><a href=\"https://vuldb.com/?id.310492\">https://vuldb.com/?id.310492</a></li>\n<li><a href=\"https://vuldb.com/?submit.580253\">https://vuldb.com/?submit.580253</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-gp5h-f9c5-8355\">https://github.com/advisories/GHSA-gp5h-f9c5-8355</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-gp5h-f9c5-8355",
            "title": "[aim] Aim Vulnerable to Sandbox Escape Leading to Remote Code Execution",
            "date_modified": "2025-06-05T00:34:04.000Z",
            "date_published": "2025-05-29T15:31:09.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-gp5h-f9c5-8355"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>A vulnerability classified as problematic has been found in gradio-app gradio up to 5.29.1. This affects the function is_valid_origin of the component CORS Handler. The manipulation of the argument localhost_aliases leads to origin validation error. It is possible to initiate the attack remotely. The complexity of an attack is rather high. The exploitability is told to be difficult. The exploit has been disclosed to the public and may be used. The vendor was contacted early about this disclosure but did not respond in any way.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2025-5320\">https://nvd.nist.gov/vuln/detail/CVE-2025-5320</a></li>\n<li><a href=\"https://gist.github.com/superboy-zjc/aa3dfa161d7b19d8a53ab4605792f2fe\">https://gist.github.com/superboy-zjc/aa3dfa161d7b19d8a53ab4605792f2fe</a></li>\n<li><a href=\"https://gist.github.com/superboy-zjc/aa3dfa161d7b19d8a53ab4605792f2fe#proof-of-concept-poc\">https://gist.github.com/superboy-zjc/aa3dfa161d7b19d8a53ab4605792f2fe#proof-of-concept-poc</a></li>\n<li><a href=\"https://vuldb.com/?ctiid.310491\">https://vuldb.com/?ctiid.310491</a></li>\n<li><a href=\"https://vuldb.com/?id.310491\">https://vuldb.com/?id.310491</a></li>\n<li><a href=\"https://vuldb.com/?submit.580250\">https://vuldb.com/?submit.580250</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-wmjh-cpqj-4v6x\">https://github.com/advisories/GHSA-wmjh-cpqj-4v6x</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-wmjh-cpqj-4v6x",
            "title": "[gradio] Gradio CORS Origin Validation Bypass Vulnerability",
            "date_modified": "2025-06-05T00:22:24.000Z",
            "date_published": "2025-05-29T15:31:09.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-wmjh-cpqj-4v6x"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>This vulnerability may lead to:</p>\n<ul>\n<li>Information disclosure, such as API keys for LLM providers, account passwords, and other sensitive data.</li>\n</ul>\n<h3 id=\"reproduce\">Reproduce</h3>\n<p>Follow these steps to set up a test environment for reproducing the vulnerability:</p>\n<ol>\n<li><p>Install dependencies and clone the repository:</p>\n<pre><code class=\"language-bash\">pip install uv\ngit clone https://github.com/AstrBotDevs/AstrBot &amp;&amp; cd AstrBot\nuv run main.py\n</code></pre>\n</li>\n<li><p>Alternatively, deploy the program via pip:</p>\n<pre><code class=\"language-bash\">mkdir astrbot &amp;&amp; cd astrbot\nuvx astrbot init\nuvx astrbot run\n</code></pre>\n</li>\n<li><p>In another terminal, run the following command to exploit the vulnerability:</p>\n<pre><code class=\"language-bash\">curl -L http://0.0.0.0:6185/api/chat/get_file?filename=../../../data/cmd_config.json\n</code></pre>\n</li>\n</ol>\n<p>This request will read the <code>cmd_config.json</code> config file, leading to the leakage of sensitive data such as LLM API keys, usernames, and password hashes (MD5).</p>\n<h3 id=\"patches\">Patches</h3>\n<p>The vulnerability has been addressed in <a href=\"https://github.com/AstrBotDevs/AstrBot/pull/1676\">Pull Request #1676</a> and is included in versions &gt;= v3.5.13. All users are strongly encouraged to upgrade to v3.5.13 or later.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>Users can edit the cmd_config.json file to disable the dashboard feature as a temporary workaround. However, it is strongly recommended to upgrade to version v3.5.13 or later as soon as possible to fully resolve this issue.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/AstrBotDevs/AstrBot/pull/1676\">Pull Request #1676</a></li>\n<li><a href=\"https://github.com/AstrBotDevs/AstrBot/issues/1675\">Issue #1675</a></li>\n</ul>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/AstrBotDevs/AstrBot/security/advisories/GHSA-cq37-g2qp-3c2p\">https://github.com/AstrBotDevs/AstrBot/security/advisories/GHSA-cq37-g2qp-3c2p</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2025-48957\">https://nvd.nist.gov/vuln/detail/CVE-2025-48957</a></li>\n<li><a href=\"https://github.com/AstrBotDevs/AstrBot/issues/1675\">https://github.com/AstrBotDevs/AstrBot/issues/1675</a></li>\n<li><a href=\"https://github.com/AstrBotDevs/AstrBot/pull/1676\">https://github.com/AstrBotDevs/AstrBot/pull/1676</a></li>\n<li><a href=\"https://github.com/AstrBotDevs/AstrBot/commit/cceadf222c46813c7f41115b40d371e7eb91e492\">https://github.com/AstrBotDevs/AstrBot/commit/cceadf222c46813c7f41115b40d371e7eb91e492</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-cq37-g2qp-3c2p\">https://github.com/advisories/GHSA-cq37-g2qp-3c2p</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-cq37-g2qp-3c2p",
            "title": "[astrbot] AstrBot Has Path Traversal Vulnerability in /api/chat/get_file",
            "date_modified": "2025-06-04T23:54:36.000Z",
            "date_published": "2025-06-04T23:54:35.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-cq37-g2qp-3c2p"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h2 id=\"impact\">Impact</h2>\n<p>On Windows, the shared <code>%PROGRAMDATA%</code> directory is searched for configuration files (<code>SYSTEM_CONFIG_PATH</code> and <code>SYSTEM_JUPYTER_PATH</code>), which may allow users to create configuration files affecting other users.</p>\n<p>Only shared Windows systems with multiple users and unprotected <code>%PROGRAMDATA%</code> are affected.</p>\n<h2 id=\"mitigations\">Mitigations</h2>\n<ul>\n<li>upgrade to <code>jupyter_core&gt;=5.8.1</code> (5.8.0 is patched but breaks <code>jupyter-server</code>) , or</li>\n<li>as administrator, modify the permissions on the <code>%PROGRAMDATA%</code> directory so it is not writable by unauthorized users, or</li>\n<li>as administrator, create the <code>%PROGRAMDATA%\\jupyter</code> directory with appropriately restrictive permissions, or</li>\n<li>as user or administrator, set the <code>%PROGRAMDATA%</code> environment variable to a directory with appropriately restrictive permissions (e.g. controlled by administrators <em>or</em> the current user)</li>\n</ul>\n<h2 id=\"credit\">Credit</h2>\n<p>Reported via Trend Micro Zero Day Initiative as ZDI-CAN-25932</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/jupyter/jupyter_core/security/advisories/GHSA-33p9-3p43-82vq\">https://github.com/jupyter/jupyter_core/security/advisories/GHSA-33p9-3p43-82vq</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2025-30167\">https://nvd.nist.gov/vuln/detail/CVE-2025-30167</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-33p9-3p43-82vq\">https://github.com/advisories/GHSA-33p9-3p43-82vq</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-33p9-3p43-82vq",
            "title": "[jupyter_core] Jupyter Core on Windows Has Uncontrolled Search Path Element Local Privilege Escalation Vulnerability",
            "date_modified": "2025-06-04T21:00:24.000Z",
            "date_published": "2025-06-04T21:00:23.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-33p9-3p43-82vq"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>django-helpdesk before 1.0.0 allows Sensitive Data Exposure because of os.umask(0) in models.py.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2018-25111\">https://nvd.nist.gov/vuln/detail/CVE-2018-25111</a></li>\n<li><a href=\"https://github.com/django-helpdesk/django-helpdesk/issues/591\">https://github.com/django-helpdesk/django-helpdesk/issues/591</a></li>\n<li><a href=\"https://github.com/django-helpdesk/django-helpdesk/pull/1120\">https://github.com/django-helpdesk/django-helpdesk/pull/1120</a></li>\n<li><a href=\"https://github.com/django-helpdesk/django-helpdesk/releases/tag/v1.0.0\">https://github.com/django-helpdesk/django-helpdesk/releases/tag/v1.0.0</a></li>\n<li><a href=\"https://github.com/django-helpdesk/django-helpdesk/commit/f872ec252769bee5a88b06d07d3634e580c67bcc\">https://github.com/django-helpdesk/django-helpdesk/commit/f872ec252769bee5a88b06d07d3634e580c67bcc</a></li>\n<li><a href=\"https://github.com/pypa/advisory-database/tree/main/vulns/django-helpdesk/PYSEC-2025-44.yaml\">https://github.com/pypa/advisory-database/tree/main/vulns/django-helpdesk/PYSEC-2025-44.yaml</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-m4jx-m5hg-qrxx\">https://github.com/advisories/GHSA-m4jx-m5hg-qrxx</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-m4jx-m5hg-qrxx",
            "title": "[django-helpdesk] django-helpdesk Allows Sensitive Data Exposure",
            "date_modified": "2025-06-04T01:30:26.000Z",
            "date_published": "2025-05-31T03:30:33.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-m4jx-m5hg-qrxx"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>A vulnerability, which was classified as problematic, was found in PyTorch 2.6.0. Affected is the function torch.nn.functional.ctc_loss of the file aten/src/ATen/native/LossCTC.cpp. The manipulation leads to denial of service. An attack has to be approached locally. The exploit has been disclosed to the public and may be used. The name of the patch is 46fc5d8e360127361211cb237d5f9eef0223e567. It is recommended to apply a patch to fix this issue.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2025-3730\">https://nvd.nist.gov/vuln/detail/CVE-2025-3730</a></li>\n<li><a href=\"https://github.com/pytorch/pytorch/issues/150835\">https://github.com/pytorch/pytorch/issues/150835</a></li>\n<li><a href=\"https://github.com/pytorch/pytorch/pull/150981\">https://github.com/pytorch/pytorch/pull/150981</a></li>\n<li><a href=\"https://vuldb.com/?ctiid.305076\">https://vuldb.com/?ctiid.305076</a></li>\n<li><a href=\"https://vuldb.com/?id.305076\">https://vuldb.com/?id.305076</a></li>\n<li><a href=\"https://vuldb.com/?submit.553645\">https://vuldb.com/?submit.553645</a></li>\n<li><a href=\"https://github.com/pytorch/pytorch/commit/01f226bfb8f2c343f5c614a6bbf685d91160f3af\">https://github.com/pytorch/pytorch/commit/01f226bfb8f2c343f5c614a6bbf685d91160f3af</a></li>\n<li><a href=\"https://github.com/timocafe/tewart-pytorch/commit/46fc5d8e360127361211cb237d5f9eef0223e567\">https://github.com/timocafe/tewart-pytorch/commit/46fc5d8e360127361211cb237d5f9eef0223e567</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-887c-mr87-cxwp\">https://github.com/advisories/GHSA-887c-mr87-cxwp</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-887c-mr87-cxwp",
            "title": "[torch] PyTorch Improper Resource Shutdown or Release vulnerability",
            "date_modified": "2025-05-30T17:13:52.000Z",
            "date_published": "2025-04-16T21:30:59.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-887c-mr87-cxwp"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>A vulnerability, which was classified as problematic, has been found in PyTorch 2.6.0+cu124. Affected by this issue is the function torch.mkldnn_max_pool2d. The manipulation leads to denial of service. An attack has to be approached locally. The exploit has been disclosed to the public and may be used.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2025-2953\">https://nvd.nist.gov/vuln/detail/CVE-2025-2953</a></li>\n<li><a href=\"https://github.com/pytorch/pytorch/issues/149274\">https://github.com/pytorch/pytorch/issues/149274</a></li>\n<li><a href=\"https://github.com/pytorch/pytorch/issues/149274#issue-2923122269\">https://github.com/pytorch/pytorch/issues/149274#issue-2923122269</a></li>\n<li><a href=\"https://vuldb.com/?ctiid.302006\">https://vuldb.com/?ctiid.302006</a></li>\n<li><a href=\"https://vuldb.com/?id.302006\">https://vuldb.com/?id.302006</a></li>\n<li><a href=\"https://vuldb.com/?submit.521279\">https://vuldb.com/?submit.521279</a></li>\n<li><a href=\"https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models\">https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-3749-ghw9-m3mg\">https://github.com/advisories/GHSA-3749-ghw9-m3mg</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-3749-ghw9-m3mg",
            "title": "[torch] PyTorch susceptible to local Denial of Service",
            "date_modified": "2025-05-30T17:13:29.000Z",
            "date_published": "2025-03-30T18:30:24.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-3749-ghw9-m3mg"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>An authenticated malicious actor using specially crafted requests could bypass row level security configuration by injecting SQL into 'sqlExpression' fields. This allowed the execution of sub-queries to evade parsing defenses ultimately granting unauthorized access to data.</p>\n<p>This issue affects Apache Superset: before 4.1.2.</p>\n<p>Users are recommended to upgrade to version 4.1.2, which fixes the issue.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2025-48912\">https://nvd.nist.gov/vuln/detail/CVE-2025-48912</a></li>\n<li><a href=\"https://lists.apache.org/thread/ms2t2oq218hb7l628trsogo4fj7h1135\">https://lists.apache.org/thread/ms2t2oq218hb7l628trsogo4fj7h1135</a></li>\n<li><a href=\"http://www.openwall.com/lists/oss-security/2025/05/30/3\">http://www.openwall.com/lists/oss-security/2025/05/30/3</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-8w7f-8pr9-xgwj\">https://github.com/advisories/GHSA-8w7f-8pr9-xgwj</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-8w7f-8pr9-xgwj",
            "title": "[apache-superset] Apache Superset: Improper authorization bypass on row level security via SQL Injection",
            "date_modified": "2025-06-03T01:10:37.000Z",
            "date_published": "2025-05-30T09:30:27.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-8w7f-8pr9-xgwj"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Ansible before versions 2.1.6.0, 2.2.3.0, 2.3.1.0, and 2.4.0.0 fails to properly mark lookup-plugin results as unsafe. If an attacker could control the results of lookup() calls, they could inject Unicode strings to be parsed by the jinja2 templating system, resulting in code execution. By default, the jinja2 templating language is now marked as 'unsafe' and is not evaluated.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2017-7481\">https://nvd.nist.gov/vuln/detail/CVE-2017-7481</a></li>\n<li><a href=\"https://github.com/ansible/ansible/commit/a1886911fcf4b691130cfc70dfc5daa5e07c46a3\">https://github.com/ansible/ansible/commit/a1886911fcf4b691130cfc70dfc5daa5e07c46a3</a></li>\n<li><a href=\"https://github.com/ansible/ansible/commit/ed56f51f185a1ffd7ea57130d260098686fcc7c2\">https://github.com/ansible/ansible/commit/ed56f51f185a1ffd7ea57130d260098686fcc7c2</a></li>\n<li><a href=\"https://access.redhat.com/errata/RHSA-2017:1244\">https://access.redhat.com/errata/RHSA-2017:1244</a></li>\n<li><a href=\"https://access.redhat.com/errata/RHSA-2017:1334\">https://access.redhat.com/errata/RHSA-2017:1334</a></li>\n<li><a href=\"https://access.redhat.com/errata/RHSA-2017:1476\">https://access.redhat.com/errata/RHSA-2017:1476</a></li>\n<li><a href=\"https://access.redhat.com/errata/RHSA-2017:1499\">https://access.redhat.com/errata/RHSA-2017:1499</a></li>\n<li><a href=\"https://access.redhat.com/errata/RHSA-2017:1599\">https://access.redhat.com/errata/RHSA-2017:1599</a></li>\n<li><a href=\"https://access.redhat.com/errata/RHSA-2017:2524\">https://access.redhat.com/errata/RHSA-2017:2524</a></li>\n<li><a href=\"https://bugzilla.redhat.com/show_bug.cgi?id=CVE-2017-7481\">https://bugzilla.redhat.com/show_bug.cgi?id=CVE-2017-7481</a></li>\n<li><a href=\"https://github.com/pypa/advisory-database/tree/main/vulns/ansible/PYSEC-2018-41.yaml\">https://github.com/pypa/advisory-database/tree/main/vulns/ansible/PYSEC-2018-41.yaml</a></li>\n<li><a href=\"https://lists.debian.org/debian-lts-announce/2021/01/msg00023.html\">https://lists.debian.org/debian-lts-announce/2021/01/msg00023.html</a></li>\n<li><a href=\"https://usn.ubuntu.com/4072-1\">https://usn.ubuntu.com/4072-1</a></li>\n<li><a href=\"https://web.archive.org/web/20170801122609/http://www.securityfocus.com/bid/98492\">https://web.archive.org/web/20170801122609/http://www.securityfocus.com/bid/98492</a></li>\n<li><a href=\"https://github.com/ansible/ansible/commit/f0e348f5eeb70c1fb3127d90891da43b5c0a9d29\">https://github.com/ansible/ansible/commit/f0e348f5eeb70c1fb3127d90891da43b5c0a9d29</a></li>\n<li><a href=\"https://github.com/ansible/ansible/commit/fd30f5328986f9e1da434474481f32bf918a600c\">https://github.com/ansible/ansible/commit/fd30f5328986f9e1da434474481f32bf918a600c</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-w578-j992-554x\">https://github.com/advisories/GHSA-w578-j992-554x</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-w578-j992-554x",
            "title": "[ansible] Ansible fails to properly mark lookup-plugin results as unsafe",
            "date_modified": "2025-05-29T22:47:18.000Z",
            "date_published": "2018-09-06T03:28:50.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-w578-j992-554x"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Ansible before versions 2.1.6.0, 2.2.3.0, 2.3.1.0, and 2.4.0.0 fails to properly mark lookup-plugin results as unsafe. If an attacker could control the results of lookup() calls, they could inject Unicode strings to be parsed by the jinja2 templating system, resulting in code execution. By default, the jinja2 templating language is now marked as 'unsafe' and is not evaluated.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2017-7481\">https://nvd.nist.gov/vuln/detail/CVE-2017-7481</a></li>\n<li><a href=\"https://github.com/ansible/ansible/commit/a1886911fcf4b691130cfc70dfc5daa5e07c46a3\">https://github.com/ansible/ansible/commit/a1886911fcf4b691130cfc70dfc5daa5e07c46a3</a></li>\n<li><a href=\"https://github.com/ansible/ansible/commit/ed56f51f185a1ffd7ea57130d260098686fcc7c2\">https://github.com/ansible/ansible/commit/ed56f51f185a1ffd7ea57130d260098686fcc7c2</a></li>\n<li><a href=\"https://access.redhat.com/errata/RHSA-2017:1244\">https://access.redhat.com/errata/RHSA-2017:1244</a></li>\n<li><a href=\"https://access.redhat.com/errata/RHSA-2017:1334\">https://access.redhat.com/errata/RHSA-2017:1334</a></li>\n<li><a href=\"https://access.redhat.com/errata/RHSA-2017:1476\">https://access.redhat.com/errata/RHSA-2017:1476</a></li>\n<li><a href=\"https://access.redhat.com/errata/RHSA-2017:1499\">https://access.redhat.com/errata/RHSA-2017:1499</a></li>\n<li><a href=\"https://access.redhat.com/errata/RHSA-2017:1599\">https://access.redhat.com/errata/RHSA-2017:1599</a></li>\n<li><a href=\"https://access.redhat.com/errata/RHSA-2017:2524\">https://access.redhat.com/errata/RHSA-2017:2524</a></li>\n<li><a href=\"https://bugzilla.redhat.com/show_bug.cgi?id=CVE-2017-7481\">https://bugzilla.redhat.com/show_bug.cgi?id=CVE-2017-7481</a></li>\n<li><a href=\"https://github.com/pypa/advisory-database/tree/main/vulns/ansible/PYSEC-2018-41.yaml\">https://github.com/pypa/advisory-database/tree/main/vulns/ansible/PYSEC-2018-41.yaml</a></li>\n<li><a href=\"https://lists.debian.org/debian-lts-announce/2021/01/msg00023.html\">https://lists.debian.org/debian-lts-announce/2021/01/msg00023.html</a></li>\n<li><a href=\"https://usn.ubuntu.com/4072-1\">https://usn.ubuntu.com/4072-1</a></li>\n<li><a href=\"https://web.archive.org/web/20170801122609/http://www.securityfocus.com/bid/98492\">https://web.archive.org/web/20170801122609/http://www.securityfocus.com/bid/98492</a></li>\n<li><a href=\"https://github.com/ansible/ansible/commit/f0e348f5eeb70c1fb3127d90891da43b5c0a9d29\">https://github.com/ansible/ansible/commit/f0e348f5eeb70c1fb3127d90891da43b5c0a9d29</a></li>\n<li><a href=\"https://github.com/ansible/ansible/commit/fd30f5328986f9e1da434474481f32bf918a600c\">https://github.com/ansible/ansible/commit/fd30f5328986f9e1da434474481f32bf918a600c</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-w578-j992-554x\">https://github.com/advisories/GHSA-w578-j992-554x</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-w578-j992-554x",
            "title": "[ansible] Ansible fails to properly mark lookup-plugin results as unsafe",
            "date_modified": "2025-05-29T22:47:18.000Z",
            "date_published": "2018-09-06T03:28:50.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-w578-j992-554x"
            },
            "tags": [
                "severity"
            ]
        }
    ]
}