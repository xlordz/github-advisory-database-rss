{
    "version": "https://jsonfeed.org/version/1",
    "title": "Security Advisory for Python packages hosted at PyPI.org",
    "home_page_url": "https://github.com/advisories?query=type%3Areviewed+ecosystem%3Apip",
    "feed_url": "https://xlordz.github.io/github-advisory-database-rss/pip.json",
    "description": "Security Advisory for Python packages hosted at PyPI.org on GitHub",
    "items": [
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p><em>What kind of vulnerability is it? Who is impacted?</em></p>\n<p>All users of Nautobot versions prior to 2.4.10 or prior to 1.6.32 are potentially affected.</p>\n<p>Due to insufficient security configuration of the Jinja2 templating feature used in computed fields, custom links, etc. in Nautobot:</p>\n<ol>\n<li>A malicious user could configure this feature set in ways that could expose the value of Secrets defined in Nautobot when the templated content is rendered.</li>\n<li>A malicious user could configure this feature set in ways that could call Python APIs to modify data within Nautobot when the templated content is rendered, bypassing the object permissions assigned to the viewing user.</li>\n</ol>\n<h3 id=\"patches\">Patches</h3>\n<p><em>Has the problem been patched? What versions should users upgrade to?</em></p>\n<p>Nautobot versions 1.6.32 and 2.4.10 will include fixes for the vulnerability.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p><em>Is there a way for users to fix or remediate the vulnerability without upgrading?</em></p>\n<p>The vulnerability can be partially mitigated by configuring object permissions appropriately to limit the below actions to only trusted users:</p>\n<ul>\n<li><code>extras.add_secret</code></li>\n<li><code>extras.change_secret</code></li>\n<li><code>extras.view_secret</code></li>\n<li><code>extras.add_computedfield</code></li>\n<li><code>extras.change_computedfield</code></li>\n<li><code>extras.add_customlink</code></li>\n<li><code>extras.change_customlink</code></li>\n<li><code>extras.add_jobbutton</code></li>\n<li><code>extras.change_jobbutton</code></li>\n</ul>\n<h3 id=\"references\">References</h3>\n<p><em>Are there any links users can visit to find out more?</em></p>\n<ul>\n<li><a href=\"https://jinja.palletsprojects.com/en/stable/sandbox/\">https://jinja.palletsprojects.com/en/stable/sandbox/</a></li>\n<li><a href=\"https://docs.djangoproject.com/en/4.2/ref/templates/api/#alters-data-description\">https://docs.djangoproject.com/en/4.2/ref/templates/api/#alters-data-description</a></li>\n<li><a href=\"https://github.com/nautobot/nautobot/pull/7417\">https://github.com/nautobot/nautobot/pull/7417</a></li>\n<li><a href=\"https://github.com/nautobot/nautobot/pull/7429\">https://github.com/nautobot/nautobot/pull/7429</a></li>\n</ul>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/nautobot/nautobot/security/advisories/GHSA-wjw6-95h5-4jpx\">https://github.com/nautobot/nautobot/security/advisories/GHSA-wjw6-95h5-4jpx</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2025-49142\">https://nvd.nist.gov/vuln/detail/CVE-2025-49142</a></li>\n<li><a href=\"https://github.com/nautobot/nautobot/pull/7417\">https://github.com/nautobot/nautobot/pull/7417</a></li>\n<li><a href=\"https://github.com/nautobot/nautobot/pull/7429\">https://github.com/nautobot/nautobot/pull/7429</a></li>\n<li><a href=\"https://docs.djangoproject.com/en/4.2/ref/templates/api/#alters-data-description\">https://docs.djangoproject.com/en/4.2/ref/templates/api/#alters-data-description</a></li>\n<li><a href=\"https://jinja.palletsprojects.com/en/stable/sandbox\">https://jinja.palletsprojects.com/en/stable/sandbox</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-wjw6-95h5-4jpx\">https://github.com/advisories/GHSA-wjw6-95h5-4jpx</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-wjw6-95h5-4jpx",
            "title": "[nautobot] Nautobot vulnerable to secrets exposure and data manipulation through Jinja2 templating",
            "date_modified": "2025-06-10T20:17:16.000Z",
            "date_published": "2025-06-10T20:17:15.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-wjw6-95h5-4jpx"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p><em>What kind of vulnerability is it? Who is impacted?</em></p>\n<p>All users of Nautobot versions prior to 2.4.10 or prior to 1.6.32 are potentially affected.</p>\n<p>Due to insufficient security configuration of the Jinja2 templating feature used in computed fields, custom links, etc. in Nautobot:</p>\n<ol>\n<li>A malicious user could configure this feature set in ways that could expose the value of Secrets defined in Nautobot when the templated content is rendered.</li>\n<li>A malicious user could configure this feature set in ways that could call Python APIs to modify data within Nautobot when the templated content is rendered, bypassing the object permissions assigned to the viewing user.</li>\n</ol>\n<h3 id=\"patches\">Patches</h3>\n<p><em>Has the problem been patched? What versions should users upgrade to?</em></p>\n<p>Nautobot versions 1.6.32 and 2.4.10 will include fixes for the vulnerability.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p><em>Is there a way for users to fix or remediate the vulnerability without upgrading?</em></p>\n<p>The vulnerability can be partially mitigated by configuring object permissions appropriately to limit the below actions to only trusted users:</p>\n<ul>\n<li><code>extras.add_secret</code></li>\n<li><code>extras.change_secret</code></li>\n<li><code>extras.view_secret</code></li>\n<li><code>extras.add_computedfield</code></li>\n<li><code>extras.change_computedfield</code></li>\n<li><code>extras.add_customlink</code></li>\n<li><code>extras.change_customlink</code></li>\n<li><code>extras.add_jobbutton</code></li>\n<li><code>extras.change_jobbutton</code></li>\n</ul>\n<h3 id=\"references\">References</h3>\n<p><em>Are there any links users can visit to find out more?</em></p>\n<ul>\n<li><a href=\"https://jinja.palletsprojects.com/en/stable/sandbox/\">https://jinja.palletsprojects.com/en/stable/sandbox/</a></li>\n<li><a href=\"https://docs.djangoproject.com/en/4.2/ref/templates/api/#alters-data-description\">https://docs.djangoproject.com/en/4.2/ref/templates/api/#alters-data-description</a></li>\n<li><a href=\"https://github.com/nautobot/nautobot/pull/7417\">https://github.com/nautobot/nautobot/pull/7417</a></li>\n<li><a href=\"https://github.com/nautobot/nautobot/pull/7429\">https://github.com/nautobot/nautobot/pull/7429</a></li>\n</ul>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/nautobot/nautobot/security/advisories/GHSA-wjw6-95h5-4jpx\">https://github.com/nautobot/nautobot/security/advisories/GHSA-wjw6-95h5-4jpx</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2025-49142\">https://nvd.nist.gov/vuln/detail/CVE-2025-49142</a></li>\n<li><a href=\"https://github.com/nautobot/nautobot/pull/7417\">https://github.com/nautobot/nautobot/pull/7417</a></li>\n<li><a href=\"https://github.com/nautobot/nautobot/pull/7429\">https://github.com/nautobot/nautobot/pull/7429</a></li>\n<li><a href=\"https://docs.djangoproject.com/en/4.2/ref/templates/api/#alters-data-description\">https://docs.djangoproject.com/en/4.2/ref/templates/api/#alters-data-description</a></li>\n<li><a href=\"https://jinja.palletsprojects.com/en/stable/sandbox\">https://jinja.palletsprojects.com/en/stable/sandbox</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-wjw6-95h5-4jpx\">https://github.com/advisories/GHSA-wjw6-95h5-4jpx</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-wjw6-95h5-4jpx",
            "title": "[nautobot] Nautobot vulnerable to secrets exposure and data manipulation through Jinja2 templating",
            "date_modified": "2025-06-10T20:17:16.000Z",
            "date_published": "2025-06-10T20:17:15.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-wjw6-95h5-4jpx"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>OctoPrint versions up until and including 1.11.1 contain a vulnerability that allows any unauthenticated attacker to send a manipulated broken <code>multipart/form-data</code> request to OctoPrint and through that make the web server component become unresponsive. This could be used to effectively run a denial of service attack on the OctoPrint server.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>The vulnerability has been patched in version 1.11.2.</p>\n<h3 id=\"workaround\">Workaround</h3>\n<p>OctoPrint administrators are once more reminded to not make OctoPrint available on hostile networks (e.g. the internet), regardless of whether this vulnerability is patched or not.</p>\n<h3 id=\"details\">Details</h3>\n<p>The issue can be triggered by a broken <code>multipart/form-data</code> request lacking an end boundary to any of OctoPrint's endpoints implemented through the <code>octoprint.server.util.tornado.UploadStorageFallbackHandler</code> request handler. The request handler will get stuck in an endless busy loop, looking for a part of the request that will never come. As Tornado is single-threaded, that will effectively block the whole web server.</p>\n<p>The fix adds detection of invalid requests like that and ensures they are handled gracefully with an HTTP 400 Bad Request response.</p>\n<h3 id=\"credits\">Credits</h3>\n<p>This vulnerability was discovered and responsibly disclosed to OctoPrint by Jacopo Tediosi.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/OctoPrint/OctoPrint/security/advisories/GHSA-9wj4-8h85-pgrw\">https://github.com/OctoPrint/OctoPrint/security/advisories/GHSA-9wj4-8h85-pgrw</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2025-48879\">https://nvd.nist.gov/vuln/detail/CVE-2025-48879</a></li>\n<li><a href=\"https://github.com/OctoPrint/OctoPrint/commit/c9c35c17bd820f19c6b12e6c0359fc0cfdd0c1ec\">https://github.com/OctoPrint/OctoPrint/commit/c9c35c17bd820f19c6b12e6c0359fc0cfdd0c1ec</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-9wj4-8h85-pgrw\">https://github.com/advisories/GHSA-9wj4-8h85-pgrw</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-9wj4-8h85-pgrw",
            "title": "[OctoPrint] OctoPrint Vulnerable to Denial of Service through malformed HTTP request in OctoPrint",
            "date_modified": "2025-06-10T20:14:45.000Z",
            "date_published": "2025-06-10T20:14:43.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-9wj4-8h85-pgrw"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>OctoPrint versions up until and including 1.11.1 contain a vulnerability that allows an attacker with the <code>FILE_UPLOAD</code> permission to exfiltrate files from the host that OctoPrint has read access to, by moving them into the upload folder where they then can be downloaded from.</p>\n<p>The primary risk lies in the potential exfiltration of secrets stored inside OctoPrint's config, or further system files. By removing important runtime files, this could also be used to impact the availability of the host. Given that the attacker requires a user account with file upload permissions, the actual impact of this should however hopefully be minimal in most cases.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>The vulnerability has been patched in version 1.11.2.</p>\n<h3 id=\"details\">Details</h3>\n<p>A specially crafted HTTP Request to an affected upload endpoint that contains some form inputs only supposed to be used internally can be used to make OctoPrint move a file that it thinks is a freshly uploaded temporary one into its upload folder.</p>\n<p>The following endpoints in OctoPrint are affected:</p>\n<ul>\n<li><code>/api/files/{local|sdcard}</code></li>\n<li><code>/api/languages</code></li>\n<li><code>/plugin/backup/restore</code></li>\n<li><code>/plugin/pluginmanager/upload_file</code></li>\n</ul>\n<p>Further upload endpoints in third party plugins might be affected too.</p>\n<p>The fix removes any internal-only form inputs from incoming requests in the central file upload processor component.</p>\n<h3 id=\"credits\">Credits</h3>\n<p>This vulnerability was discovered and responsibly disclosed to OctoPrint by Jacopo Tediosi</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/OctoPrint/OctoPrint/security/advisories/GHSA-m9jh-jf9h-x3h2\">https://github.com/OctoPrint/OctoPrint/security/advisories/GHSA-m9jh-jf9h-x3h2</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2025-48067\">https://nvd.nist.gov/vuln/detail/CVE-2025-48067</a></li>\n<li><a href=\"https://github.com/OctoPrint/OctoPrint/commit/9984b20773f5895a432f965b759999b16c57f7d8\">https://github.com/OctoPrint/OctoPrint/commit/9984b20773f5895a432f965b759999b16c57f7d8</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-m9jh-jf9h-x3h2\">https://github.com/advisories/GHSA-m9jh-jf9h-x3h2</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-m9jh-jf9h-x3h2",
            "title": "[OctoPrint] OctoPrint vulnerable to possible file extraction via upload endpoints",
            "date_modified": "2025-06-10T20:13:42.000Z",
            "date_published": "2025-06-10T20:13:40.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-m9jh-jf9h-x3h2"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>Due to a URL parsing issue, Requests releases prior to 2.32.4 may leak .netrc credentials to third parties for specific maliciously-crafted URLs.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>For older versions of Requests, use of the .netrc file can be disabled with <code>trust_env=False</code> on your Requests Session (<a href=\"https://requests.readthedocs.io/en/latest/api/#requests.Session.trust_env\">docs</a>).</p>\n<h3 id=\"references\">References</h3>\n<p><a href=\"https://github.com/psf/requests/pull/6965\">https://github.com/psf/requests/pull/6965</a>\n<a href=\"https://seclists.org/fulldisclosure/2025/Jun/2\">https://seclists.org/fulldisclosure/2025/Jun/2</a></p>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/psf/requests/security/advisories/GHSA-9hjg-9r4m-mvj7\">https://github.com/psf/requests/security/advisories/GHSA-9hjg-9r4m-mvj7</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-47081\">https://nvd.nist.gov/vuln/detail/CVE-2024-47081</a></li>\n<li><a href=\"https://github.com/psf/requests/pull/6965\">https://github.com/psf/requests/pull/6965</a></li>\n<li><a href=\"https://github.com/psf/requests/commit/96ba401c1296ab1dda74a2365ef36d88f7d144ef\">https://github.com/psf/requests/commit/96ba401c1296ab1dda74a2365ef36d88f7d144ef</a></li>\n<li><a href=\"https://requests.readthedocs.io/en/latest/api/#requests.Session.trust_env\">https://requests.readthedocs.io/en/latest/api/#requests.Session.trust_env</a></li>\n<li><a href=\"https://seclists.org/fulldisclosure/2025/Jun/2\">https://seclists.org/fulldisclosure/2025/Jun/2</a></li>\n<li><a href=\"http://seclists.org/fulldisclosure/2025/Jun/2\">http://seclists.org/fulldisclosure/2025/Jun/2</a></li>\n<li><a href=\"http://www.openwall.com/lists/oss-security/2025/06/03/11\">http://www.openwall.com/lists/oss-security/2025/06/03/11</a></li>\n<li><a href=\"http://www.openwall.com/lists/oss-security/2025/06/03/9\">http://www.openwall.com/lists/oss-security/2025/06/03/9</a></li>\n<li><a href=\"http://www.openwall.com/lists/oss-security/2025/06/04/1\">http://www.openwall.com/lists/oss-security/2025/06/04/1</a></li>\n<li><a href=\"http://www.openwall.com/lists/oss-security/2025/06/04/6\">http://www.openwall.com/lists/oss-security/2025/06/04/6</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-9hjg-9r4m-mvj7\">https://github.com/advisories/GHSA-9hjg-9r4m-mvj7</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-9hjg-9r4m-mvj7",
            "title": "[requests] Requests vulnerable to .netrc credentials leak via malicious URLs",
            "date_modified": "2025-06-09T19:06:12.000Z",
            "date_published": "2025-06-09T19:06:08.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-9hjg-9r4m-mvj7"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Skyvern through 0.2.0 has a Jinja runtime leak in sdk/workflow/models/block.py.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2025-49619\">https://nvd.nist.gov/vuln/detail/CVE-2025-49619</a></li>\n<li><a href=\"https://github.com/Skyvern-AI/skyvern/commit/db856cd8433a204c8b45979c70a4da1e119d949d\">https://github.com/Skyvern-AI/skyvern/commit/db856cd8433a204c8b45979c70a4da1e119d949d</a></li>\n<li><a href=\"https://cristibtz.github.io/posts/CVE-2025-49619\">https://cristibtz.github.io/posts/CVE-2025-49619</a></li>\n<li><a href=\"https://cristibtz.blog/posts/CVE-2025-49619\">https://cristibtz.blog/posts/CVE-2025-49619</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-h92g-3xc3-ww2r\">https://github.com/advisories/GHSA-h92g-3xc3-ww2r</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-h92g-3xc3-ww2r",
            "title": "[skyvern] Skyvern has a Jinja runtime leak",
            "date_modified": "2025-06-09T18:35:34.000Z",
            "date_published": "2025-06-07T15:30:18.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-h92g-3xc3-ww2r"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"summary\">Summary</h3>\n<p>Static routes which contain files with compressed variants (<code>.gz</code> or <code>.br</code> extension) were vulnerable to path traversal outside the root directory if those variants are symbolic links.</p>\n<h3 id=\"details\">Details</h3>\n<p>The server protects static routes from path traversal outside the root directory when <code>follow_symlinks=False</code> (default).  It does this by resolving the requested URL to an absolute path and then checking that path relative to the root.  However, these checks are not performed when looking for compressed variants in the <code>FileResponse</code> class, and symbolic links are then automatically followed when performing <code>Path.stat()</code> and <code>Path.open()</code> to send the file.</p>\n<h3 id=\"impact\">Impact</h3>\n<p>Servers with static routes that contain compressed variants as symbolic links, pointing outside the root directory, or that permit users to upload or create such links, are impacted.</p>\n<hr>\n<p>Patch: <a href=\"https://github.com/aio-libs/aiohttp/pull/8653/files\">https://github.com/aio-libs/aiohttp/pull/8653/files</a></p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/aio-libs/aiohttp/security/advisories/GHSA-jwhx-xcg6-8xhj\">https://github.com/aio-libs/aiohttp/security/advisories/GHSA-jwhx-xcg6-8xhj</a></li>\n<li><a href=\"https://github.com/aio-libs/aiohttp/pull/8653\">https://github.com/aio-libs/aiohttp/pull/8653</a></li>\n<li><a href=\"https://github.com/aio-libs/aiohttp/commit/ce2e9758814527589b10759a20783fb03b98339f\">https://github.com/aio-libs/aiohttp/commit/ce2e9758814527589b10759a20783fb03b98339f</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-42367\">https://nvd.nist.gov/vuln/detail/CVE-2024-42367</a></li>\n<li><a href=\"https://github.com/aio-libs/aiohttp/blob/e0ff5246e1d29b7710ab1a2bbc972b48169f1c05/aiohttp/web_fileresponse.py#L177\">https://github.com/aio-libs/aiohttp/blob/e0ff5246e1d29b7710ab1a2bbc972b48169f1c05/aiohttp/web_fileresponse.py#L177</a></li>\n<li><a href=\"https://github.com/aio-libs/aiohttp/blob/e0ff5246e1d29b7710ab1a2bbc972b48169f1c05/aiohttp/web_urldispatcher.py#L674\">https://github.com/aio-libs/aiohttp/blob/e0ff5246e1d29b7710ab1a2bbc972b48169f1c05/aiohttp/web_urldispatcher.py#L674</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-jwhx-xcg6-8xhj\">https://github.com/advisories/GHSA-jwhx-xcg6-8xhj</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-jwhx-xcg6-8xhj",
            "title": "[aiohttp] In aiohttp, compressed files as symlinks are not protected from path traversal",
            "date_modified": "2025-06-09T12:17:21.000Z",
            "date_published": "2024-08-09T16:49:58.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-jwhx-xcg6-8xhj"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>The bug in Sentry's Python SDK &lt;2.8.0 results in the unintentional exposure of environment variables to subprocesses despite the <code>env={}</code> setting.</p>\n<h3 id=\"details\">Details</h3>\n<p>In Python's <code>subprocess</code> calls, all environment variables are passed to subprocesses by default. However, if you specifically do not want them to be passed to subprocesses, you may use <code>env</code> argument in <code>subprocess</code> calls, like in this example:</p>\n<pre><code>&gt;&gt;&gt; subprocess.check_output([\"env\"], env={\"TEST\":\"1\"})\nb'TEST=1\\n'\n</code></pre>\n<p>If you'd want to not pass any variables, you can set an empty dict:</p>\n<pre><code>&gt;&gt;&gt; subprocess.check_output([\"env\"], env={})\nb''\n</code></pre>\n<p>However, the bug in Sentry SDK &lt;2.8.0 causes <strong>all environment variables</strong> to be passed to the subprocesses when <code>env={}</code> is set, unless the Sentry SDK's <a href=\"https://docs.sentry.io/platforms/python/integrations/default-integrations/#stdlib\">Stdlib</a> integration is disabled. The Stdlib integration is enabled by default.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>The issue has been patched in <a href=\"https://github.com/getsentry/sentry-python/pull/3251\">https://github.com/getsentry/sentry-python/pull/3251</a> and the fix released in <a href=\"https://github.com/getsentry/sentry-python/releases/tag/2.8.0\">sentry-sdk==2.8.0</a>. The fix was also backported to <a href=\"https://github.com/getsentry/sentry-python/releases/tag/1.45.1\">sentry-sdk==1.45.1</a>.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>We strongly recommend upgrading to the latest SDK version. However, if it's not possible, and if passing environment variables to child processes poses a security risk for you, there are two options:</p>\n<ol>\n<li>In your application, replace <code>env={}</code> with the minimal dict <code>env={\"EMPTY_ENV\":\"1\"}</code> or similar.</li>\n</ol>\n<p>OR</p>\n<ol start=\"2\">\n<li>Disable Stdlib integration:</li>\n</ol>\n<pre><code>import sentry_sdk\n\n# Should go before sentry_sdk.init\nsentry_sdk.integrations._DEFAULT_INTEGRATIONS.remove(\"sentry_sdk.integrations.stdlib.StdlibIntegration\")\n\nsentry_sdk.init(...)\n</code></pre>\n<h3 id=\"references\">References</h3>\n<ul>\n<li>Sentry docs: <a href=\"https://docs.sentry.io/platforms/python/integrations/default-integrations/\">Default integrations</a></li>\n<li>Python docs: <a href=\"https://docs.python.org/3/library/subprocess.html\">subprocess module</a></li>\n<li>Patch <a href=\"https://github.com/getsentry/sentry-python/pull/3251\">https://github.com/getsentry/sentry-python/pull/3251</a></li>\n</ul>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/getsentry/sentry-python/security/advisories/GHSA-g92j-qhmh-64v2\">https://github.com/getsentry/sentry-python/security/advisories/GHSA-g92j-qhmh-64v2</a></li>\n<li><a href=\"https://github.com/getsentry/sentry-python/pull/3251\">https://github.com/getsentry/sentry-python/pull/3251</a></li>\n<li><a href=\"https://github.com/getsentry/sentry-python/commit/763e40aa4cb57ecced467f48f78f335c87e9bdff\">https://github.com/getsentry/sentry-python/commit/763e40aa4cb57ecced467f48f78f335c87e9bdff</a></li>\n<li><a href=\"https://docs.python.org/3/library/subprocess.html\">https://docs.python.org/3/library/subprocess.html</a></li>\n<li><a href=\"https://docs.sentry.io/platforms/python/integrations/default-integrations\">https://docs.sentry.io/platforms/python/integrations/default-integrations</a></li>\n<li><a href=\"https://docs.sentry.io/platforms/python/integrations/default-integrations/#stdlib\">https://docs.sentry.io/platforms/python/integrations/default-integrations/#stdlib</a></li>\n<li><a href=\"https://github.com/getsentry/sentry-python/releases/tag/2.8.0\">https://github.com/getsentry/sentry-python/releases/tag/2.8.0</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-40647\">https://nvd.nist.gov/vuln/detail/CVE-2024-40647</a></li>\n<li><a href=\"https://github.com/getsentry/sentry-python/releases/tag/1.45.1\">https://github.com/getsentry/sentry-python/releases/tag/1.45.1</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-g92j-qhmh-64v2\">https://github.com/advisories/GHSA-g92j-qhmh-64v2</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-g92j-qhmh-64v2",
            "title": "[sentry-sdk] Sentry's Python SDK unintentionally exposes environment variables to subprocesses",
            "date_modified": "2025-06-06T22:27:44.000Z",
            "date_published": "2024-07-18T17:18:46.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-g92j-qhmh-64v2"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>The bug in Sentry's Python SDK &lt;2.8.0 results in the unintentional exposure of environment variables to subprocesses despite the <code>env={}</code> setting.</p>\n<h3 id=\"details\">Details</h3>\n<p>In Python's <code>subprocess</code> calls, all environment variables are passed to subprocesses by default. However, if you specifically do not want them to be passed to subprocesses, you may use <code>env</code> argument in <code>subprocess</code> calls, like in this example:</p>\n<pre><code>&gt;&gt;&gt; subprocess.check_output([\"env\"], env={\"TEST\":\"1\"})\nb'TEST=1\\n'\n</code></pre>\n<p>If you'd want to not pass any variables, you can set an empty dict:</p>\n<pre><code>&gt;&gt;&gt; subprocess.check_output([\"env\"], env={})\nb''\n</code></pre>\n<p>However, the bug in Sentry SDK &lt;2.8.0 causes <strong>all environment variables</strong> to be passed to the subprocesses when <code>env={}</code> is set, unless the Sentry SDK's <a href=\"https://docs.sentry.io/platforms/python/integrations/default-integrations/#stdlib\">Stdlib</a> integration is disabled. The Stdlib integration is enabled by default.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>The issue has been patched in <a href=\"https://github.com/getsentry/sentry-python/pull/3251\">https://github.com/getsentry/sentry-python/pull/3251</a> and the fix released in <a href=\"https://github.com/getsentry/sentry-python/releases/tag/2.8.0\">sentry-sdk==2.8.0</a>. The fix was also backported to <a href=\"https://github.com/getsentry/sentry-python/releases/tag/1.45.1\">sentry-sdk==1.45.1</a>.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>We strongly recommend upgrading to the latest SDK version. However, if it's not possible, and if passing environment variables to child processes poses a security risk for you, there are two options:</p>\n<ol>\n<li>In your application, replace <code>env={}</code> with the minimal dict <code>env={\"EMPTY_ENV\":\"1\"}</code> or similar.</li>\n</ol>\n<p>OR</p>\n<ol start=\"2\">\n<li>Disable Stdlib integration:</li>\n</ol>\n<pre><code>import sentry_sdk\n\n# Should go before sentry_sdk.init\nsentry_sdk.integrations._DEFAULT_INTEGRATIONS.remove(\"sentry_sdk.integrations.stdlib.StdlibIntegration\")\n\nsentry_sdk.init(...)\n</code></pre>\n<h3 id=\"references\">References</h3>\n<ul>\n<li>Sentry docs: <a href=\"https://docs.sentry.io/platforms/python/integrations/default-integrations/\">Default integrations</a></li>\n<li>Python docs: <a href=\"https://docs.python.org/3/library/subprocess.html\">subprocess module</a></li>\n<li>Patch <a href=\"https://github.com/getsentry/sentry-python/pull/3251\">https://github.com/getsentry/sentry-python/pull/3251</a></li>\n</ul>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/getsentry/sentry-python/security/advisories/GHSA-g92j-qhmh-64v2\">https://github.com/getsentry/sentry-python/security/advisories/GHSA-g92j-qhmh-64v2</a></li>\n<li><a href=\"https://github.com/getsentry/sentry-python/pull/3251\">https://github.com/getsentry/sentry-python/pull/3251</a></li>\n<li><a href=\"https://github.com/getsentry/sentry-python/commit/763e40aa4cb57ecced467f48f78f335c87e9bdff\">https://github.com/getsentry/sentry-python/commit/763e40aa4cb57ecced467f48f78f335c87e9bdff</a></li>\n<li><a href=\"https://docs.python.org/3/library/subprocess.html\">https://docs.python.org/3/library/subprocess.html</a></li>\n<li><a href=\"https://docs.sentry.io/platforms/python/integrations/default-integrations\">https://docs.sentry.io/platforms/python/integrations/default-integrations</a></li>\n<li><a href=\"https://docs.sentry.io/platforms/python/integrations/default-integrations/#stdlib\">https://docs.sentry.io/platforms/python/integrations/default-integrations/#stdlib</a></li>\n<li><a href=\"https://github.com/getsentry/sentry-python/releases/tag/2.8.0\">https://github.com/getsentry/sentry-python/releases/tag/2.8.0</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-40647\">https://nvd.nist.gov/vuln/detail/CVE-2024-40647</a></li>\n<li><a href=\"https://github.com/getsentry/sentry-python/releases/tag/1.45.1\">https://github.com/getsentry/sentry-python/releases/tag/1.45.1</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-g92j-qhmh-64v2\">https://github.com/advisories/GHSA-g92j-qhmh-64v2</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-g92j-qhmh-64v2",
            "title": "[sentry-sdk] Sentry's Python SDK unintentionally exposes environment variables to subprocesses",
            "date_modified": "2025-06-06T22:27:44.000Z",
            "date_published": "2024-07-18T17:18:46.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-g92j-qhmh-64v2"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Multiple vector store integrations in run-llama/llama_index version v0.12.21 have SQL injection vulnerabilities. These vulnerabilities allow an attacker to read and write data using SQL, potentially leading to unauthorized access to data of other users depending on the usage of the llama-index library in a web application.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2025-1793\">https://nvd.nist.gov/vuln/detail/CVE-2025-1793</a></li>\n<li><a href=\"https://github.com/run-llama/llama_index/commit/0008041e8dde8e519621388e5d6f558bde6ef42e\">https://github.com/run-llama/llama_index/commit/0008041e8dde8e519621388e5d6f558bde6ef42e</a></li>\n<li><a href=\"https://huntr.com/bounties/8cb1555a-9655-4122-b0d6-60059e79183c\">https://huntr.com/bounties/8cb1555a-9655-4122-b0d6-60059e79183c</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-v3c8-3pr6-gr7p\">https://github.com/advisories/GHSA-v3c8-3pr6-gr7p</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-v3c8-3pr6-gr7p",
            "title": "[llama-index] llama_index vulnerable to SQL Injection",
            "date_modified": "2025-06-06T17:24:33.000Z",
            "date_published": "2025-06-05T06:30:26.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-v3c8-3pr6-gr7p"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>An issue was discovered in Django 5.2 before 5.2.2, 5.1 before 5.1.10, and 4.2 before 4.2.22. Internal HTTP response logging does not escape request.path, which allows remote attackers to potentially manipulate log output via crafted URLs. This may lead to log injection or forgery when logs are viewed in terminals or processed by external systems.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2025-48432\">https://nvd.nist.gov/vuln/detail/CVE-2025-48432</a></li>\n<li><a href=\"https://docs.djangoproject.com/en/dev/releases/security\">https://docs.djangoproject.com/en/dev/releases/security</a></li>\n<li><a href=\"https://groups.google.com/g/django-announce\">https://groups.google.com/g/django-announce</a></li>\n<li><a href=\"https://www.djangoproject.com/weblog/2025/jun/04/security-releases\">https://www.djangoproject.com/weblog/2025/jun/04/security-releases</a></li>\n<li><a href=\"http://www.openwall.com/lists/oss-security/2025/06/04/5\">http://www.openwall.com/lists/oss-security/2025/06/04/5</a></li>\n<li><a href=\"https://github.com/pypa/advisory-database/tree/main/vulns/django/PYSEC-2025-47.yaml\">https://github.com/pypa/advisory-database/tree/main/vulns/django/PYSEC-2025-47.yaml</a></li>\n<li><a href=\"https://www.djangoproject.com/weblog/2025/jun/10/bugfix-releases\">https://www.djangoproject.com/weblog/2025/jun/10/bugfix-releases</a></li>\n<li><a href=\"http://www.openwall.com/lists/oss-security/2025/06/10/2\">http://www.openwall.com/lists/oss-security/2025/06/10/2</a></li>\n<li><a href=\"http://www.openwall.com/lists/oss-security/2025/06/10/3\">http://www.openwall.com/lists/oss-security/2025/06/10/3</a></li>\n<li><a href=\"http://www.openwall.com/lists/oss-security/2025/06/10/4\">http://www.openwall.com/lists/oss-security/2025/06/10/4</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-7xr5-9hcq-chf9\">https://github.com/advisories/GHSA-7xr5-9hcq-chf9</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-7xr5-9hcq-chf9",
            "title": "[Django] Django Improper Output Neutralization for Logs vulnerability",
            "date_modified": "2025-06-10T20:03:55.000Z",
            "date_published": "2025-06-05T03:30:58.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-7xr5-9hcq-chf9"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>An issue was discovered in Django 5.2 before 5.2.2, 5.1 before 5.1.10, and 4.2 before 4.2.22. Internal HTTP response logging does not escape request.path, which allows remote attackers to potentially manipulate log output via crafted URLs. This may lead to log injection or forgery when logs are viewed in terminals or processed by external systems.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2025-48432\">https://nvd.nist.gov/vuln/detail/CVE-2025-48432</a></li>\n<li><a href=\"https://docs.djangoproject.com/en/dev/releases/security\">https://docs.djangoproject.com/en/dev/releases/security</a></li>\n<li><a href=\"https://groups.google.com/g/django-announce\">https://groups.google.com/g/django-announce</a></li>\n<li><a href=\"https://www.djangoproject.com/weblog/2025/jun/04/security-releases\">https://www.djangoproject.com/weblog/2025/jun/04/security-releases</a></li>\n<li><a href=\"http://www.openwall.com/lists/oss-security/2025/06/04/5\">http://www.openwall.com/lists/oss-security/2025/06/04/5</a></li>\n<li><a href=\"https://github.com/pypa/advisory-database/tree/main/vulns/django/PYSEC-2025-47.yaml\">https://github.com/pypa/advisory-database/tree/main/vulns/django/PYSEC-2025-47.yaml</a></li>\n<li><a href=\"https://www.djangoproject.com/weblog/2025/jun/10/bugfix-releases\">https://www.djangoproject.com/weblog/2025/jun/10/bugfix-releases</a></li>\n<li><a href=\"http://www.openwall.com/lists/oss-security/2025/06/10/2\">http://www.openwall.com/lists/oss-security/2025/06/10/2</a></li>\n<li><a href=\"http://www.openwall.com/lists/oss-security/2025/06/10/3\">http://www.openwall.com/lists/oss-security/2025/06/10/3</a></li>\n<li><a href=\"http://www.openwall.com/lists/oss-security/2025/06/10/4\">http://www.openwall.com/lists/oss-security/2025/06/10/4</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-7xr5-9hcq-chf9\">https://github.com/advisories/GHSA-7xr5-9hcq-chf9</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-7xr5-9hcq-chf9",
            "title": "[Django] Django Improper Output Neutralization for Logs vulnerability",
            "date_modified": "2025-06-10T20:03:55.000Z",
            "date_published": "2025-06-05T03:30:58.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-7xr5-9hcq-chf9"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>An issue was discovered in Django 5.2 before 5.2.2, 5.1 before 5.1.10, and 4.2 before 4.2.22. Internal HTTP response logging does not escape request.path, which allows remote attackers to potentially manipulate log output via crafted URLs. This may lead to log injection or forgery when logs are viewed in terminals or processed by external systems.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2025-48432\">https://nvd.nist.gov/vuln/detail/CVE-2025-48432</a></li>\n<li><a href=\"https://docs.djangoproject.com/en/dev/releases/security\">https://docs.djangoproject.com/en/dev/releases/security</a></li>\n<li><a href=\"https://groups.google.com/g/django-announce\">https://groups.google.com/g/django-announce</a></li>\n<li><a href=\"https://www.djangoproject.com/weblog/2025/jun/04/security-releases\">https://www.djangoproject.com/weblog/2025/jun/04/security-releases</a></li>\n<li><a href=\"http://www.openwall.com/lists/oss-security/2025/06/04/5\">http://www.openwall.com/lists/oss-security/2025/06/04/5</a></li>\n<li><a href=\"https://github.com/pypa/advisory-database/tree/main/vulns/django/PYSEC-2025-47.yaml\">https://github.com/pypa/advisory-database/tree/main/vulns/django/PYSEC-2025-47.yaml</a></li>\n<li><a href=\"https://www.djangoproject.com/weblog/2025/jun/10/bugfix-releases\">https://www.djangoproject.com/weblog/2025/jun/10/bugfix-releases</a></li>\n<li><a href=\"http://www.openwall.com/lists/oss-security/2025/06/10/2\">http://www.openwall.com/lists/oss-security/2025/06/10/2</a></li>\n<li><a href=\"http://www.openwall.com/lists/oss-security/2025/06/10/3\">http://www.openwall.com/lists/oss-security/2025/06/10/3</a></li>\n<li><a href=\"http://www.openwall.com/lists/oss-security/2025/06/10/4\">http://www.openwall.com/lists/oss-security/2025/06/10/4</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-7xr5-9hcq-chf9\">https://github.com/advisories/GHSA-7xr5-9hcq-chf9</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-7xr5-9hcq-chf9",
            "title": "[Django] Django Improper Output Neutralization for Logs vulnerability",
            "date_modified": "2025-06-10T20:03:55.000Z",
            "date_published": "2025-06-05T03:30:58.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-7xr5-9hcq-chf9"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>A vulnerability has been found in HumanSignal label-studio-ml-backend up to 9fb7f4aa186612806af2becfb621f6ed8d9fdbaf and classified as problematic. Affected by this vulnerability is the function load of the file label-studio-ml-backend/label_studio_ml/examples/yolo/utils/neural_nets.py of the component PT File Handler. The manipulation of the argument path leads to deserialization. An attack has to be approached locally. This product takes the approach of rolling releases to provide continious delivery. Therefore, version details for affected and updated releases are not available.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2025-5173\">https://nvd.nist.gov/vuln/detail/CVE-2025-5173</a></li>\n<li><a href=\"https://github.com/HumanSignal/label-studio-ml-backend/issues/765\">https://github.com/HumanSignal/label-studio-ml-backend/issues/765</a></li>\n<li><a href=\"https://vuldb.com/?ctiid.310261\">https://vuldb.com/?ctiid.310261</a></li>\n<li><a href=\"https://vuldb.com/?id.310261\">https://vuldb.com/?id.310261</a></li>\n<li><a href=\"https://vuldb.com/?submit.578126\">https://vuldb.com/?submit.578126</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-55g9-6c2x-gf8q\">https://github.com/advisories/GHSA-55g9-6c2x-gf8q</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-55g9-6c2x-gf8q",
            "title": "[label-studio-ml] HumanSignal label-studio-ml-backend Deserialization of Untrusted Data vulnerability",
            "date_modified": "2025-06-06T15:37:48.000Z",
            "date_published": "2025-05-26T09:30:44.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-55g9-6c2x-gf8q"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>When verifying signatures with X509 certificate validation turned off and HMAC shared secret set (<code>signxml.XMLVerifier.verify(require_x509=False, hmac_key=...</code>), prior versions of SignXML are vulnerable to a potential algorithm confusion attack. Unless the user explicitly limits the expected signature algorithms using the <code>signxml.XMLVerifier.verify(expect_config=...)</code> setting, an attacker may supply a signature unexpectedly signed with a key other than the provided HMAC key, using a different (asymmetric key) signature algorithm.</p>\n<p>Starting with signxml 4.0.4, specifying <code>hmac_key</code> causes the set of accepted signature algorithms to be restricted to HMAC only, if not already restricted by the user.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/XML-Security/signxml/security/advisories/GHSA-6vx8-pcwv-xhf4\">https://github.com/XML-Security/signxml/security/advisories/GHSA-6vx8-pcwv-xhf4</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2025-48994\">https://nvd.nist.gov/vuln/detail/CVE-2025-48994</a></li>\n<li><a href=\"https://github.com/XML-Security/signxml/commit/e3c0c2b82a3329a65d917830657649c98b8c7600\">https://github.com/XML-Security/signxml/commit/e3c0c2b82a3329a65d917830657649c98b8c7600</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-6vx8-pcwv-xhf4\">https://github.com/advisories/GHSA-6vx8-pcwv-xhf4</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-6vx8-pcwv-xhf4",
            "title": "[signxml] SignXML's signature verification with HMAC is vulnerable to an algorithm confusion attack",
            "date_modified": "2025-06-05T00:38:22.000Z",
            "date_published": "2025-06-05T00:38:20.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-6vx8-pcwv-xhf4"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>When verifying signatures with X509 certificate validation turned off and HMAC shared secret set (<code>signxml.XMLVerifier.verify(require_x509=False, hmac_key=...</code>), prior versions of SignXML are vulnerable to a potential timing attack. The verifier may leak information about the correct HMAC when comparing it with the user supplied hash, allowing users to reconstruct the correct HMAC for any data.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/XML-Security/signxml/security/advisories/GHSA-gmhf-gg8w-jw42\">https://github.com/XML-Security/signxml/security/advisories/GHSA-gmhf-gg8w-jw42</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2025-48995\">https://nvd.nist.gov/vuln/detail/CVE-2025-48995</a></li>\n<li><a href=\"https://github.com/XML-Security/signxml/commit/1b501faaacf34cf978a52dbc6915ec11e27611cd\">https://github.com/XML-Security/signxml/commit/1b501faaacf34cf978a52dbc6915ec11e27611cd</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-gmhf-gg8w-jw42\">https://github.com/advisories/GHSA-gmhf-gg8w-jw42</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-gmhf-gg8w-jw42",
            "title": "[signxml] SignXML's signature verification with HMAC is vulnerable to a timing attack",
            "date_modified": "2025-06-05T00:37:20.000Z",
            "date_published": "2025-06-05T00:37:19.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-gmhf-gg8w-jw42"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>A vulnerability classified as critical was found in aimhubio aim up to 3.29.1. This vulnerability affects the function RestrictedPythonQuery of the file /aim/storage/query.py of the component run_view Object Handler. The manipulation of the argument Query leads to sandbox issue. The attack can be initiated remotely. The exploit has been disclosed to the public and may be used. The vendor was contacted early about this disclosure but did not respond in any way.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2025-5321\">https://nvd.nist.gov/vuln/detail/CVE-2025-5321</a></li>\n<li><a href=\"https://gist.github.com/superboy-zjc/1fc4747a0ac77a1edc8c32e1d4edc54c\">https://gist.github.com/superboy-zjc/1fc4747a0ac77a1edc8c32e1d4edc54c</a></li>\n<li><a href=\"https://vuldb.com/?ctiid.310492\">https://vuldb.com/?ctiid.310492</a></li>\n<li><a href=\"https://vuldb.com/?id.310492\">https://vuldb.com/?id.310492</a></li>\n<li><a href=\"https://vuldb.com/?submit.580253\">https://vuldb.com/?submit.580253</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-gp5h-f9c5-8355\">https://github.com/advisories/GHSA-gp5h-f9c5-8355</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-gp5h-f9c5-8355",
            "title": "[aim] Aim Vulnerable to Sandbox Escape Leading to Remote Code Execution",
            "date_modified": "2025-06-05T00:34:04.000Z",
            "date_published": "2025-05-29T15:31:09.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-gp5h-f9c5-8355"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>A vulnerability classified as problematic has been found in gradio-app gradio up to 5.29.1. This affects the function is_valid_origin of the component CORS Handler. The manipulation of the argument localhost_aliases leads to origin validation error. It is possible to initiate the attack remotely. The complexity of an attack is rather high. The exploitability is told to be difficult. The exploit has been disclosed to the public and may be used. The vendor was contacted early about this disclosure but did not respond in any way.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2025-5320\">https://nvd.nist.gov/vuln/detail/CVE-2025-5320</a></li>\n<li><a href=\"https://gist.github.com/superboy-zjc/aa3dfa161d7b19d8a53ab4605792f2fe\">https://gist.github.com/superboy-zjc/aa3dfa161d7b19d8a53ab4605792f2fe</a></li>\n<li><a href=\"https://gist.github.com/superboy-zjc/aa3dfa161d7b19d8a53ab4605792f2fe#proof-of-concept-poc\">https://gist.github.com/superboy-zjc/aa3dfa161d7b19d8a53ab4605792f2fe#proof-of-concept-poc</a></li>\n<li><a href=\"https://vuldb.com/?ctiid.310491\">https://vuldb.com/?ctiid.310491</a></li>\n<li><a href=\"https://vuldb.com/?id.310491\">https://vuldb.com/?id.310491</a></li>\n<li><a href=\"https://vuldb.com/?submit.580250\">https://vuldb.com/?submit.580250</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-wmjh-cpqj-4v6x\">https://github.com/advisories/GHSA-wmjh-cpqj-4v6x</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-wmjh-cpqj-4v6x",
            "title": "[gradio] Gradio CORS Origin Validation Bypass Vulnerability",
            "date_modified": "2025-06-05T00:22:24.000Z",
            "date_published": "2025-05-29T15:31:09.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-wmjh-cpqj-4v6x"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>This vulnerability may lead to:</p>\n<ul>\n<li>Information disclosure, such as API keys for LLM providers, account passwords, and other sensitive data.</li>\n</ul>\n<h3 id=\"reproduce\">Reproduce</h3>\n<p>Follow these steps to set up a test environment for reproducing the vulnerability:</p>\n<ol>\n<li><p>Install dependencies and clone the repository:</p>\n<pre><code class=\"language-bash\">pip install uv\ngit clone https://github.com/AstrBotDevs/AstrBot &amp;&amp; cd AstrBot\nuv run main.py\n</code></pre>\n</li>\n<li><p>Alternatively, deploy the program via pip:</p>\n<pre><code class=\"language-bash\">mkdir astrbot &amp;&amp; cd astrbot\nuvx astrbot init\nuvx astrbot run\n</code></pre>\n</li>\n<li><p>In another terminal, run the following command to exploit the vulnerability:</p>\n<pre><code class=\"language-bash\">curl -L http://0.0.0.0:6185/api/chat/get_file?filename=../../../data/cmd_config.json\n</code></pre>\n</li>\n</ol>\n<p>This request will read the <code>cmd_config.json</code> config file, leading to the leakage of sensitive data such as LLM API keys, usernames, and password hashes (MD5).</p>\n<h3 id=\"patches\">Patches</h3>\n<p>The vulnerability has been addressed in <a href=\"https://github.com/AstrBotDevs/AstrBot/pull/1676\">Pull Request #1676</a> and is included in versions &gt;= v3.5.13. All users are strongly encouraged to upgrade to v3.5.13 or later.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>Users can edit the cmd_config.json file to disable the dashboard feature as a temporary workaround. However, it is strongly recommended to upgrade to version v3.5.13 or later as soon as possible to fully resolve this issue.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/AstrBotDevs/AstrBot/pull/1676\">Pull Request #1676</a></li>\n<li><a href=\"https://github.com/AstrBotDevs/AstrBot/issues/1675\">Issue #1675</a></li>\n</ul>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/AstrBotDevs/AstrBot/security/advisories/GHSA-cq37-g2qp-3c2p\">https://github.com/AstrBotDevs/AstrBot/security/advisories/GHSA-cq37-g2qp-3c2p</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2025-48957\">https://nvd.nist.gov/vuln/detail/CVE-2025-48957</a></li>\n<li><a href=\"https://github.com/AstrBotDevs/AstrBot/issues/1675\">https://github.com/AstrBotDevs/AstrBot/issues/1675</a></li>\n<li><a href=\"https://github.com/AstrBotDevs/AstrBot/pull/1676\">https://github.com/AstrBotDevs/AstrBot/pull/1676</a></li>\n<li><a href=\"https://github.com/AstrBotDevs/AstrBot/commit/cceadf222c46813c7f41115b40d371e7eb91e492\">https://github.com/AstrBotDevs/AstrBot/commit/cceadf222c46813c7f41115b40d371e7eb91e492</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-cq37-g2qp-3c2p\">https://github.com/advisories/GHSA-cq37-g2qp-3c2p</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-cq37-g2qp-3c2p",
            "title": "[astrbot] AstrBot Has Path Traversal Vulnerability in /api/chat/get_file",
            "date_modified": "2025-06-04T23:54:36.000Z",
            "date_published": "2025-06-04T23:54:35.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-cq37-g2qp-3c2p"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h2 id=\"impact\">Impact</h2>\n<p>On Windows, the shared <code>%PROGRAMDATA%</code> directory is searched for configuration files (<code>SYSTEM_CONFIG_PATH</code> and <code>SYSTEM_JUPYTER_PATH</code>), which may allow users to create configuration files affecting other users.</p>\n<p>Only shared Windows systems with multiple users and unprotected <code>%PROGRAMDATA%</code> are affected.</p>\n<h2 id=\"mitigations\">Mitigations</h2>\n<ul>\n<li>upgrade to <code>jupyter_core&gt;=5.8.1</code> (5.8.0 is patched but breaks <code>jupyter-server</code>) , or</li>\n<li>as administrator, modify the permissions on the <code>%PROGRAMDATA%</code> directory so it is not writable by unauthorized users, or</li>\n<li>as administrator, create the <code>%PROGRAMDATA%\\jupyter</code> directory with appropriately restrictive permissions, or</li>\n<li>as user or administrator, set the <code>%PROGRAMDATA%</code> environment variable to a directory with appropriately restrictive permissions (e.g. controlled by administrators <em>or</em> the current user)</li>\n</ul>\n<h2 id=\"credit\">Credit</h2>\n<p>Reported via Trend Micro Zero Day Initiative as ZDI-CAN-25932</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/jupyter/jupyter_core/security/advisories/GHSA-33p9-3p43-82vq\">https://github.com/jupyter/jupyter_core/security/advisories/GHSA-33p9-3p43-82vq</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2025-30167\">https://nvd.nist.gov/vuln/detail/CVE-2025-30167</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-33p9-3p43-82vq\">https://github.com/advisories/GHSA-33p9-3p43-82vq</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-33p9-3p43-82vq",
            "title": "[jupyter_core] Jupyter Core on Windows Has Uncontrolled Search Path Element Local Privilege Escalation Vulnerability",
            "date_modified": "2025-06-04T21:00:24.000Z",
            "date_published": "2025-06-04T21:00:23.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-33p9-3p43-82vq"
            },
            "tags": [
                "severity"
            ]
        }
    ]
}