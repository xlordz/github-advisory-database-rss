{
    "version": "https://jsonfeed.org/version/1",
    "title": "Security Advisory for Rust crates",
    "home_page_url": "https://github.com/advisories?query=type%3Areviewed+ecosystem%3Arust",
    "feed_url": "https://azu.github.io/github-advisory-database-rss/rust.json",
    "description": "Security Advisory for Rust crates on GitHub",
    "items": [
        {
            "content_html": "<p>A vulnerability was found in ouch-org ouch up to 0.3.1. It has been classified as critical. This affects the function ouch::archive::zip::convert_zip_date_time of the file zip.rs. The manipulation of the argument month leads to memory corruption. The attack needs to be approached locally. The exploit has been disclosed to the public and may be used. Upgrading to version 0.4.0 is able to address this issue. It is recommended to upgrade the affected component.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-13941\">https://nvd.nist.gov/vuln/detail/CVE-2024-13941</a></li>\n<li><a href=\"https://github.com/ouch-org/ouch/issues/707\">https://github.com/ouch-org/ouch/issues/707</a></li>\n<li><a href=\"https://github.com/rustsec/advisory-db/pull/2084/files\">https://github.com/rustsec/advisory-db/pull/2084/files</a></li>\n<li><a href=\"https://github.com/ouch-org/ouch/releases/tag/0.4.0\">https://github.com/ouch-org/ouch/releases/tag/0.4.0</a></li>\n<li><a href=\"https://github.com/user-attachments/files/16767988/ouch.crash.report.docx\">https://github.com/user-attachments/files/16767988/ouch.crash.report.docx</a></li>\n<li><a href=\"https://vuldb.com/?ctiid.302055\">https://vuldb.com/?ctiid.302055</a></li>\n<li><a href=\"https://vuldb.com/?id.302055\">https://vuldb.com/?id.302055</a></li>\n<li><a href=\"https://vuldb.com/?submit.524511\">https://vuldb.com/?submit.524511</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-6xfj-hhwh-r3c2\">https://github.com/advisories/GHSA-6xfj-hhwh-r3c2</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-6xfj-hhwh-r3c2",
            "title": "[ouch] Ouch Improper Restriction of Operations within the Bounds of a Memory Buffer vulnerability",
            "date_modified": "2025-04-02T00:15:08.000Z",
            "date_published": "2025-04-01T21:31:30.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-6xfj-hhwh-r3c2"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>The <code>Drop</code> implementation will get run twice when using the cursor.</p>\n<p>This issue does not affect you, if you are using only using the crate with types that are <code>Copy</code> such as <code>u8</code>.</p>\n<p>This issue also does not affect you, if you are only depending on it through the crate <code>planus</code>.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/planus-org/planus/issues/293\">https://github.com/planus-org/planus/issues/293</a></li>\n<li><a href=\"https://github.com/planus-org/planus/pull/294\">https://github.com/planus-org/planus/pull/294</a></li>\n<li><a href=\"https://rustsec.org/advisories/RUSTSEC-2025-0019.html\">https://rustsec.org/advisories/RUSTSEC-2025-0019.html</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-67r5-rqwv-9p9q\">https://github.com/advisories/GHSA-67r5-rqwv-9p9q</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-67r5-rqwv-9p9q",
            "title": "[array-init-cursor] array-init-cursor is unsound when used with types that implement `Drop`",
            "date_modified": "2025-03-31T16:13:36.000Z",
            "date_published": "2025-03-31T16:13:34.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-67r5-rqwv-9p9q"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h2 id=\"summary\">Summary</h2>\n<p>In a TUF repository, the targets roleâ€™s signature indicates which target files are trusted by clients. The role can delegate full or partial trust to other roles, meaning that that role is trusted to sign target file metadata. Delegated roles can further delegate trust to other delegated roles. When searching for metadata about a given target, tough failed to detect cyclical role delegations.</p>\n<h2 id=\"impact\">Impact</h2>\n<p>When interacting with TUF repositories which contain cyclical role delegations, tough will fail to detect the cycles and will exhaust its stack while recursively searching the delegation graph. The exhausted call stack will cause the process to abort.</p>\n<p>Impacted versions: &lt; v0.20.0</p>\n<h2 id=\"patches\">Patches</h2>\n<p>A fix for this issue is available in tough version 0.20.0 and later. Customers are advised to upgrade to version 0.20.0 or later and ensure any forked or derivative code is patched to incorporate the new fixes.</p>\n<h2 id=\"workarounds\">Workarounds</h2>\n<p>There is no recommended work around. Customers are advised to upgrade to version 0.20.0 or the latest version.</p>\n<h2 id=\"references\">References</h2>\n<p>If you have any questions or comments about this advisory we ask that you contact AWS/Amazon Security via our vulnerability reporting page [1] or directly via email to <a href=\"mailto:aws-security@amazon.com\">aws-security@amazon.com</a>. Please do not create a public GitHub issue.</p>\n<p>[1] Vulnerability reporting page: <a href=\"https://aws.amazon.com/security/vulnerability-reporting\">https://aws.amazon.com/security/vulnerability-reporting</a></p>\n<h2 id=\"acknowledgement\">Acknowledgement</h2>\n<p>We would like to thank Google for collaborating on this issue through the coordinated vulnerability disclosure process.</p>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/awslabs/tough/security/advisories/GHSA-j8x2-777p-23fc\">https://github.com/awslabs/tough/security/advisories/GHSA-j8x2-777p-23fc</a></li>\n<li><a href=\"https://github.com/awslabs/tough/commit/c5ee1718e630fdedc5676bf71b5bef10e4c7f91c\">https://github.com/awslabs/tough/commit/c5ee1718e630fdedc5676bf71b5bef10e4c7f91c</a></li>\n<li><a href=\"https://aws.amazon.com/security/security-bulletins/AWS-2025-007\">https://aws.amazon.com/security/security-bulletins/AWS-2025-007</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-j8x2-777p-23fc\">https://github.com/advisories/GHSA-j8x2-777p-23fc</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-j8x2-777p-23fc",
            "title": "[tough] tough cyclic delegation graphs are not detected",
            "date_modified": "2025-03-28T22:13:17.000Z",
            "date_published": "2025-03-28T22:13:16.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-j8x2-777p-23fc"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h2 id=\"summary\">Summary</h2>\n<p>Delegations are a mechanism defined by the TUF specification that allow multiple different identities to provide and sign content within a single repository. Terminating delegations and delegation priority give a TUF repository unambiguous control over how overlapping delegations are resolved. tough erroneously will not terminate a search as required, and will accept information from a lower-priority delegation that should have been ignored.</p>\n<h2 id=\"impact\">Impact</h2>\n<p>When interacting with TUF repositories that use delegations, the tough client could fetch targets owned by the incorrect role. An actor which had delegated ownership of a subset of a TUF repository could provide arbitrary contents to tough clients for targets owned by the delegating identity.</p>\n<p>Impacted versions: &lt; v0.20.0</p>\n<h2 id=\"patches\">Patches</h2>\n<p>A fix for this issue is available in tough version 0.20.0 and later. Customers are advised to upgrade to version 0.20.0 or later and ensure any forked or derivative code is patched to incorporate the new fixes.</p>\n<h2 id=\"workarounds\">Workarounds</h2>\n<p>There is no recommended work around. Customers are advised to upgrade to version 0.20.0 or the latest version.</p>\n<h2 id=\"references\">References</h2>\n<p>If you have any questions or comments about this advisory we ask that you contact AWS/Amazon Security via our vulnerability reporting page [1] or directly via email to <a href=\"mailto:aws-security@amazon.com\">aws-security@amazon.com</a>. Please do not create a public GitHub issue.</p>\n<p>[1] Vulnerability reporting page: <a href=\"https://aws.amazon.com/security/vulnerability-reporting\">https://aws.amazon.com/security/vulnerability-reporting</a></p>\n<h2 id=\"acknowledgement\">Acknowledgement</h2>\n<p>We would like to thank Google for collaborating on this issue through the coordinated vulnerability disclosure process.</p>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/awslabs/tough/security/advisories/GHSA-v4wr-j3w6-mxqc\">https://github.com/awslabs/tough/security/advisories/GHSA-v4wr-j3w6-mxqc</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2025-2886\">https://nvd.nist.gov/vuln/detail/CVE-2025-2886</a></li>\n<li><a href=\"https://github.com/awslabs/tough/commit/598111f88105a707ee68b0fa06c52da7176ea96a\">https://github.com/awslabs/tough/commit/598111f88105a707ee68b0fa06c52da7176ea96a</a></li>\n<li><a href=\"https://aws.amazon.com/security/security-bulletins/AWS-2025-007\">https://aws.amazon.com/security/security-bulletins/AWS-2025-007</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-v4wr-j3w6-mxqc\">https://github.com/advisories/GHSA-v4wr-j3w6-mxqc</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-v4wr-j3w6-mxqc",
            "title": "[tough] tough terminating targets role delegations are not respected",
            "date_modified": "2025-03-28T22:13:12.000Z",
            "date_published": "2025-03-28T22:13:00.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-v4wr-j3w6-mxqc"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h2 id=\"summary\">Summary</h2>\n<p>When updating the root role, a TUF client must establish a trusted line of continuity to the latest set of keys. While sequentially downloading new versions of the root metadata file, tough will not check that the root object version it received was the next sequential version from the previously trusted root metadata.</p>\n<h2 id=\"impact\">Impact</h2>\n<p>The tough client will trust an outdated or rotated root role in the event that an actor with control of the storage medium of a trusted TUF repository inappropriately replaced the contents of one of the root metadata files with an adequately signed previous version. As a result, tough could trust content associated with a previous root role.</p>\n<p>Impacted versions: &lt; v0.20.0</p>\n<h2 id=\"patches\">Patches</h2>\n<p>A fix for this issue is available in tough version 0.20.0 and later. Customers are advised to upgrade to version 0.20.0 or later and ensure any forked or derivative code is patched to incorporate the new fixes.</p>\n<h2 id=\"workarounds\">Workarounds</h2>\n<p>There is no recommended work around. Customers are advised to upgrade to version 0.20.0 or the latest version.</p>\n<h2 id=\"references\">References</h2>\n<p>If you have any questions or comments about this advisory we ask that you contact AWS/Amazon Security via our vulnerability reporting page [1] or directly via email to <a href=\"mailto:aws-security@amazon.com\">aws-security@amazon.com</a>. Please do not create a public GitHub issue.</p>\n<p>[1] Vulnerability reporting page: <a href=\"https://aws.amazon.com/security/vulnerability-reporting\">https://aws.amazon.com/security/vulnerability-reporting</a></p>\n<h2 id=\"acknowledgement\">Acknowledgement</h2>\n<p>We would like to thank Google for collaborating on this issue through the coordinated vulnerability disclosure process.</p>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/awslabs/tough/security/advisories/GHSA-5vmp-m5v2-hx47\">https://github.com/awslabs/tough/security/advisories/GHSA-5vmp-m5v2-hx47</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2025-2885\">https://nvd.nist.gov/vuln/detail/CVE-2025-2885</a></li>\n<li><a href=\"https://github.com/awslabs/tough/commit/0eeb60aefe27f00b65730634b788a1aafb8bf3c6\">https://github.com/awslabs/tough/commit/0eeb60aefe27f00b65730634b788a1aafb8bf3c6</a></li>\n<li><a href=\"https://aws.amazon.com/security/security-bulletins/AWS-2025-007\">https://aws.amazon.com/security/security-bulletins/AWS-2025-007</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-5vmp-m5v2-hx47\">https://github.com/advisories/GHSA-5vmp-m5v2-hx47</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-5vmp-m5v2-hx47",
            "title": "[tough] tough root metadata version is not checked for sequential versioning",
            "date_modified": "2025-03-28T22:13:12.000Z",
            "date_published": "2025-03-28T22:12:36.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-5vmp-m5v2-hx47"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h2 id=\"summary\">Summary</h2>\n<p>TUF repositories use the timestamp role to protect against rollback events by enabling an automated process to periodically sign the role's metadata. While tough will ensure that the version of snapshot metadata in new timestamp metadata files was always greater than or equal to the previously trusted version, it will only do so after persisting the timestamp metadata to its cache.</p>\n<h2 id=\"impact\">Impact</h2>\n<p>If the tough client successfully detects a rollback event in which timestamp metadata contains outdated snapshot metadata, the invalid timestamp metadata will still be persisted to cache as trusted. tough may then subsequently incorrectly identify valid timestamp metadata as being rolled back, preventing the client from consuming valid updates.</p>\n<p>Impacted versions: &lt; v0.20.0</p>\n<h2 id=\"patches\">Patches</h2>\n<p>A fix for this issue is available in tough version 0.20.0 and later. Customers are advised to upgrade to version 0.20.0 or later and ensure any forked or derivative code is patched to incorporate the new fixes.</p>\n<h2 id=\"workarounds\">Workarounds</h2>\n<p>There is no recommended work around. Customers are advised to upgrade to version 0.20.0 or the latest version.</p>\n<h2 id=\"references\">References</h2>\n<p>If you have any questions or comments about this advisory we ask that you contact AWS/Amazon Security via our vulnerability reporting page [1] or directly via email to <a href=\"mailto:aws-security@amazon.com\">aws-security@amazon.com</a>. Please do not create a public GitHub issue.</p>\n<p>[1] Vulnerability reporting page: <a href=\"https://aws.amazon.com/security/vulnerability-reporting\">https://aws.amazon.com/security/vulnerability-reporting</a></p>\n<h2 id=\"acknowledgement\">Acknowledgement</h2>\n<p>We would like to thank Google for collaborating on this issue through the coordinated vulnerability disclosure process.</p>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/awslabs/tough/security/advisories/GHSA-76g3-38jv-wxh4\">https://github.com/awslabs/tough/security/advisories/GHSA-76g3-38jv-wxh4</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2025-2888\">https://nvd.nist.gov/vuln/detail/CVE-2025-2888</a></li>\n<li><a href=\"https://github.com/awslabs/tough/commit/9b400e1c8b7d6b9ab8009104fa7fe5884db05f18\">https://github.com/awslabs/tough/commit/9b400e1c8b7d6b9ab8009104fa7fe5884db05f18</a></li>\n<li><a href=\"https://aws.amazon.com/security/security-bulletins/AWS-2025-007\">https://aws.amazon.com/security/security-bulletins/AWS-2025-007</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-76g3-38jv-wxh4\">https://github.com/advisories/GHSA-76g3-38jv-wxh4</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-76g3-38jv-wxh4",
            "title": "[tough] tough timestamp metadata is cached when it fails snapshot rollback check",
            "date_modified": "2025-03-28T14:49:49.000Z",
            "date_published": "2025-03-28T14:49:47.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-76g3-38jv-wxh4"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h2 id=\"summary\">Summary</h2>\n<p>When updating the snapshot role, TUF clients should ensure that any previously encountered targets or delegated targets metadata files continue to be present in new snapshot metadata files. Likewise, the new targets and delegated targets metadata versions must be greater than or equal to the previously encountered versions. While tough will perform this check for targets metadata files, it did not perform this check for delegated targets files.</p>\n<h2 id=\"impact\">Impact</h2>\n<p>tough could fail to detect cases where delegated targets metadata was removed or rolled back to a previous version. As a result, tough could trust and download outdated targets that it should reject.</p>\n<p>Impacted versions: &lt; v0.20.0</p>\n<h2 id=\"patches\">Patches</h2>\n<p>A fix for this issue is available in tough version 0.20.0 and later. Customers are advised to upgrade to version 0.20.0 or later and ensure any forked or derivative code is patched to incorporate the new fixes.</p>\n<h2 id=\"workarounds\">Workarounds</h2>\n<p>There is no recommended work around. Customers are advised to upgrade to version 0.20.0 or the latest version.</p>\n<h2 id=\"references\">References</h2>\n<p>If you have any questions or comments about this advisory we ask that you contact AWS/Amazon Security via our vulnerability reporting page [1] or directly via email to <a href=\"mailto:aws-security@amazon.com\">aws-security@amazon.com</a>. Please do not create a public GitHub issue.</p>\n<p>[1] Vulnerability reporting page: <a href=\"https://aws.amazon.com/security/vulnerability-reporting%EF%BF%BC\">https://aws.amazon.com/security/vulnerability-reporting</a></p>\n<h2 id=\"acknowledgement\">Acknowledgement</h2>\n<p>We would like to thank Google for collaborating on this issue through the coordinated vulnerability disclosure process.</p>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/awslabs/tough/security/advisories/GHSA-q6r9-r9pw-4cf7\">https://github.com/awslabs/tough/security/advisories/GHSA-q6r9-r9pw-4cf7</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2025-2887\">https://nvd.nist.gov/vuln/detail/CVE-2025-2887</a></li>\n<li><a href=\"https://github.com/awslabs/tough/commit/3345151a87c358d1ce43aeb7e8b3ebea5ebdbab4\">https://github.com/awslabs/tough/commit/3345151a87c358d1ce43aeb7e8b3ebea5ebdbab4</a></li>\n<li><a href=\"https://aws.amazon.com/security/security-bulletins/AWS-2025-007\">https://aws.amazon.com/security/security-bulletins/AWS-2025-007</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-q6r9-r9pw-4cf7\">https://github.com/advisories/GHSA-q6r9-r9pw-4cf7</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-q6r9-r9pw-4cf7",
            "title": "[tough] tough failure to detect delegated target rollback",
            "date_modified": "2025-03-28T14:48:55.000Z",
            "date_published": "2025-03-28T14:48:54.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-q6r9-r9pw-4cf7"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Affected versions of this crate only validated the <code>index</code> argument of <code>HashTable::get_bucket</code> and <code>HashTable::get_chain</code> against the input-controlled <code>bucket_count</code> and <code>chain_count</code> fields, but not against the size of the ELF section. As a result, a malformed ELF file could trigger out-of-bounds reads in a consumer of the HashTable API by setting these fields to inappropriately large values that would fall outside the relevant hash table section, and by introducing correspondingly out-of-bounds hash table indexes elsewhere in the ELF file.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/nrc/xmas-elf/issues/86\">https://github.com/nrc/xmas-elf/issues/86</a></li>\n<li><a href=\"https://github.com/nrc/xmas-elf/commit/57685c35512a57269086314a42a70441af4ef451\">https://github.com/nrc/xmas-elf/commit/57685c35512a57269086314a42a70441af4ef451</a></li>\n<li><a href=\"https://rustsec.org/advisories/RUSTSEC-2025-0018.html\">https://rustsec.org/advisories/RUSTSEC-2025-0018.html</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-9cc5-2pq7-hfj8\">https://github.com/advisories/GHSA-9cc5-2pq7-hfj8</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-9cc5-2pq7-hfj8",
            "title": "[xmas-elf] xmas-elf potential out-of-bounds read with a malformed ELF file and the HashTable API.",
            "date_modified": "2025-03-26T20:11:25.000Z",
            "date_published": "2025-03-26T20:11:24.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-9cc5-2pq7-hfj8"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Prior to version 0.10.3, the built-in clients of the <code>web-push</code> crate eagerly allocated memory based on the <code>Content-Length</code> header returned by the Web Push endpoint. Malicious Web Push endpoints could return a large <code>Content-Length</code> without ever having to send as much data, leading to denial of service by memory exhaustion.</p>\n<p>Services providing Web Push notifications typically allow the user to register an arbitrary endpoint, so the endpoint should not be trusted.</p>\n<p>The fixed version 0.10.3 now limits the amount of memory it will allocate for each response, limits the amount of data it will read from the endpoint, and returns an error if the endpoint sends too much data.</p>\n<p>As before, it is recommended that services add a timeout for each request to Web Push endpoints.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/pimeys/rust-web-push/pull/68\">https://github.com/pimeys/rust-web-push/pull/68</a></li>\n<li><a href=\"https://rustsec.org/advisories/RUSTSEC-2025-0015.html\">https://rustsec.org/advisories/RUSTSEC-2025-0015.html</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-fc83-9jwq-gc2m\">https://github.com/advisories/GHSA-fc83-9jwq-gc2m</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-fc83-9jwq-gc2m",
            "title": "[web-push] Web Push Denial of Service via malicious Web Push endpoint",
            "date_modified": "2025-03-24T19:39:29.000Z",
            "date_published": "2025-03-24T19:39:27.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-fc83-9jwq-gc2m"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Affected versions of this crate didn't provide sufficient lifetime constraints to conversion functions from <code>alloc::sync::Arc</code> and <code>alloc::rc::Rc</code>, which made it possible to create projections of these reference counted pointers. Unlike the original reference counted pointers, these projections could outlive original data's lifetimes.</p>\n<p>This projected pointer could cause the original <code>Arc</code>'s or <code>Rc</code>'s <code>Drop::drop</code> to get called at a point where the original data was no longer valid, leading to a potential use after free.</p>\n<p>The affected functions were</p>\n<ul>\n<li><code>pared::prc::Prc::from_rc</code></li>\n<li><code>pared::prc::Prc::project</code></li>\n<li><code>pared::prc::Prc::try_from_rc</code></li>\n<li><code>pared::sync::Parc::from_arc</code></li>\n<li><code>pared::sync::Parc::project</code></li>\n<li><code>pared::sync::Parc::try_from_arc</code></li>\n</ul>\n<p>This flaw was fixed in <a href=\"https://github.com/radekvit/pared/commit/108f540ea8acb6073751a1aa386085c1cdc4fd1e\">108f540ea8acb6073751a1aa386085c1cdc4fd1e</a> by requiring that the type stored in the <code>Arc</code>s and <code>Rc</code>s passed to these functions contain <code>T: 'static</code>.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/radekvit/pared/issues/2\">https://github.com/radekvit/pared/issues/2</a></li>\n<li><a href=\"https://github.com/radekvit/pared/commit/108f540ea8acb6073751a1aa386085c1cdc4fd1e\">https://github.com/radekvit/pared/commit/108f540ea8acb6073751a1aa386085c1cdc4fd1e</a></li>\n<li><a href=\"https://rustsec.org/advisories/RUSTSEC-2025-0016.html\">https://rustsec.org/advisories/RUSTSEC-2025-0016.html</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-vgmh-mqm4-8j88\">https://github.com/advisories/GHSA-vgmh-mqm4-8j88</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-vgmh-mqm4-8j88",
            "title": "[pared] pared Vulnerable to Use After Free in `Parc` and `Prc` Due to Missing Lifetime Constraints",
            "date_modified": "2025-03-24T16:06:29.000Z",
            "date_published": "2025-03-24T16:06:28.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-vgmh-mqm4-8j88"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>A vulnerability has been identified in Redlib where an attacker can cause a denial-of-service (DOS) condition by submitting a specially crafted base2048-encoded DEFLATE decompression bomb to the restore_preferences form. This leads to excessive memory consumption and potential system instability, which can be exploited to disrupt Redlib instances. This vulnerability was introduced in 2e95e1fc6e2064ccfae87964b4860bda55eddb9a and fixed in 15147cea8e42f6569a11603d661d71122f6a02dc.</p>\n<h3 id=\"impact\">Impact</h3>\n<p><em>What kind of vulnerability is it? Who is impacted?</em></p>\n<p>This vulnerability allows a remote attacker with network access to exploit the preference restoration mechanism by providing a compressed payload that expands dramatically upon decompression. The issue arises because the system automatically decompresses user-supplied data without enforcing size limits, potentially leading to:</p>\n<ul>\n<li>Out-of-memory (OOM) conditions</li>\n<li>OS-level resource exhaustion, potentially leading to broader system instability or crashes</li>\n<li>Repeated exploitation, keeping the target system in a persistent degraded state</li>\n<li>Denial-of-service of any public instance</li>\n</ul>\n<h3 id=\"patches\">Patches</h3>\n<p>The problem has been patched in 15147cea8e42f6569a11603d661d71122f6a02dc. Users should upgrade to v0.36.0.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>Until a patch is available, users can:</p>\n<ul>\n<li>Implement request size limits at the web server or application level to reject excessively large inputs.</li>\n<li>Disable or restrict the restore_preferences route (<code>/settings/encoded-restore</code>) at the reverse-proxy level if not required.</li>\n<li>Monitor server logs for unusually large or repeated restore_preferences requests and block offending IPs.</li>\n</ul>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/crewjam/saml/security/advisories/GHSA-5mqj-xc49-246p\">https://github.com/crewjam/saml/security/advisories/GHSA-5mqj-xc49-246p</a></li>\n<li><a href=\"https://github.com/redlib-org/redlib/security/advisories/GHSA-g8vq-v3mg-7mrg\">https://github.com/redlib-org/redlib/security/advisories/GHSA-g8vq-v3mg-7mrg</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2025-30160\">https://nvd.nist.gov/vuln/detail/CVE-2025-30160</a></li>\n<li><a href=\"https://github.com/redlib-org/redlib/commit/15147cea8e42f6569a11603d661d71122f6a02dc\">https://github.com/redlib-org/redlib/commit/15147cea8e42f6569a11603d661d71122f6a02dc</a></li>\n<li><a href=\"https://github.com/redlib-org/redlib/commit/2e95e1fc6e2064ccfae87964b4860bda55eddb9a\">https://github.com/redlib-org/redlib/commit/2e95e1fc6e2064ccfae87964b4860bda55eddb9a</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-g8vq-v3mg-7mrg\">https://github.com/advisories/GHSA-g8vq-v3mg-7mrg</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-g8vq-v3mg-7mrg",
            "title": "[redlib] Redlib allows a Denial of Service via DEFLATE Decompression Bomb in restore_preferences Form",
            "date_modified": "2025-03-21T15:26:55.000Z",
            "date_published": "2025-03-21T15:26:55.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-g8vq-v3mg-7mrg"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>In libcontainer, while creating a tenant container, the tenant builder accepts a list of capabilities to be added in the spec of tenant container. Code can be seen <a href=\"https://github.com/youki-dev/youki/blob/9e63fa4da1672a78ca45100f3059a732784a5174/crates/libcontainer/src/container/tenant_builder.rs#L408\">here</a> . The logic here adds the given capabilities to all capabilities of main container if present in spec, otherwise simply set provided capabilities as capabilities of the tenant container.</p>\n<p>However, GHSA-f3fp-gc8g-vw66 was opened on runc mentioning that setting inherited caps in any case for tenant container can lead to elevation of capabilities. For this, they added a fix <a href=\"https://github.com/opencontainers/runc/blob/986451c24e17c8d4be3c454f60b1f7be4af3e8b4/exec.go#L234-L242\">here</a> where they never set new inherited caps on tenant, and set ambient caps only if original container had inherited caps.</p>\n<p>Similarly crun never sets inherited caps as can be seen <a href=\"https://github.com/containers/crun/blob/3ec6298abd79e144fbf3fa6db90793ff4c0516f9/src/exec.c#L319\">here</a>.</p>\n<blockquote>\n<p>[!NOTE]\nThis does not affect youki binary itself, as the exec implementation is partially broken and does not pass on the user-provided caps to tenant containers, this is only applicable if you are using libcontainer directly and using the tenant builder.</p>\n</blockquote>\n<h3 id=\"workarounds\">Workarounds</h3>\n<ul>\n<li>Do not pass any user-provided capabilities to the tenant builder, in which case no capabilities will be set on tenant.</li>\n<li>Alternatively you can verify the capabilities of original container and filter the user passed capabilities before setting them on tenant.</li>\n</ul>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/opencontainers/runc/security/advisories/GHSA-f3fp-gc8g-vw66\">https://github.com/opencontainers/runc/security/advisories/GHSA-f3fp-gc8g-vw66</a></li>\n<li><a href=\"https://man7.org/linux/man-pages/man7/capabilities.7.html\">https://man7.org/linux/man-pages/man7/capabilities.7.html</a></li>\n</ul>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/opencontainers/runc/security/advisories/GHSA-f3fp-gc8g-vw66\">https://github.com/opencontainers/runc/security/advisories/GHSA-f3fp-gc8g-vw66</a></li>\n<li><a href=\"https://github.com/youki-dev/youki/security/advisories/GHSA-5w4j-f78p-4wh9\">https://github.com/youki-dev/youki/security/advisories/GHSA-5w4j-f78p-4wh9</a></li>\n<li><a href=\"https://github.com/youki-dev/youki/commit/747e342d2026fbf3a395db3e2a491ebef00082f1\">https://github.com/youki-dev/youki/commit/747e342d2026fbf3a395db3e2a491ebef00082f1</a></li>\n<li><a href=\"https://github.com/containers/crun/blob/3ec6298abd79e144fbf3fa6db90793ff4c0516f9/src/exec.c#L319\">https://github.com/containers/crun/blob/3ec6298abd79e144fbf3fa6db90793ff4c0516f9/src/exec.c#L319</a></li>\n<li><a href=\"https://github.com/opencontainers/runc/blob/986451c24e17c8d4be3c454f60b1f7be4af3e8b4/exec.go#L234-L242\">https://github.com/opencontainers/runc/blob/986451c24e17c8d4be3c454f60b1f7be4af3e8b4/exec.go#L234-L242</a></li>\n<li><a href=\"https://github.com/youki-dev/youki/blob/9e63fa4da1672a78ca45100f3059a732784a5174/crates/libcontainer/src/container/tenant_builder.rs#L408\">https://github.com/youki-dev/youki/blob/9e63fa4da1672a78ca45100f3059a732784a5174/crates/libcontainer/src/container/tenant_builder.rs#L408</a></li>\n<li><a href=\"https://man7.org/linux/man-pages/man7/capabilities.7.html\">https://man7.org/linux/man-pages/man7/capabilities.7.html</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2025-27612\">https://nvd.nist.gov/vuln/detail/CVE-2025-27612</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-5w4j-f78p-4wh9\">https://github.com/advisories/GHSA-5w4j-f78p-4wh9</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-5w4j-f78p-4wh9",
            "title": "[libcontainer] Libcontainer is affected by capabilities elevation similar to GHSA-f3fp-gc8g-vw66",
            "date_modified": "2025-03-21T15:42:07.000Z",
            "date_published": "2025-03-21T15:18:28.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-5w4j-f78p-4wh9"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>An issue in CosmWasm prior to v2.2.0 allows attackers to bypass capability restrictions in blockchains by exploiting a lack of runtime capability validation. This allows attackers to deploy a contract without capability enforcement, and execute unauthorized actions on the blockchain.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2025-25500\">https://nvd.nist.gov/vuln/detail/CVE-2025-25500</a></li>\n<li><a href=\"https://gist.github.com/H3T76/8096a6ff9410f3a6d9a25db1a68ae657#file-cve-2025-25500\">https://gist.github.com/H3T76/8096a6ff9410f3a6d9a25db1a68ae657#file-cve-2025-25500</a></li>\n<li><a href=\"https://github.com/CVEProject/cveproject.github.io/blob/gh-pages/requester/reservation-guidelines.md\">https://github.com/CVEProject/cveproject.github.io/blob/gh-pages/requester/reservation-guidelines.md</a></li>\n<li><a href=\"https://github.com/CosmWasm/cosmwasm/blob/v2.2.0/CHANGELOG.md\">https://github.com/CosmWasm/cosmwasm/blob/v2.2.0/CHANGELOG.md</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-cg8r-jwg7-r2x4\">https://github.com/advisories/GHSA-cg8r-jwg7-r2x4</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-cg8r-jwg7-r2x4",
            "title": "[cosmwasm] CosmWasm Allows Bypass of Capability Restrictions in Blockchains",
            "date_modified": "2025-03-21T21:11:33.000Z",
            "date_published": "2025-03-18T15:30:47.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-cg8r-jwg7-r2x4"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"summary\">Summary</h3>\n<p>In the archive extraction routine of affected versions of the <code>zip</code> crate, symbolic links earlier in the archive are allowed to be used for later files in the archive without validation of the final canonicalized path, allowing maliciously crafted archives to overwrite arbitrary files in the file system when extracted.</p>\n<h3 id=\"details\">Details</h3>\n<p>This is a variant of the <a href=\"https://github.com/snyk/zip-slip-vulnerability\">zip-slip</a> vulnerability, we can make the extraction logic step outside of the target directory by creating a symlink to the parent directory and then extracting further files through that symlink.</p>\n<p>The documentation of the [<code>::zip::read::ZipArchive::extract</code>] method is in my opinion implying this should not happen:</p>\n<blockquote>\n<p>\"Paths are sanitized with ZipFile::enclosed_name.\" ...\n[<code>::zip::read::FileOptions::enclosed_name</code>] ... is resistant to path-based exploits ... canâ€™t resolve to a path outside the current directory.</p>\n</blockquote>\n<p>Most archive software either decline to extract symlinks that traverse out of the directory or defer creation of symlinks after all files have been created to prevent unexpected behavior when later entries depend on earlier symbolic link entries.</p>\n<h3 id=\"poc\">PoC</h3>\n<p><a href=\"https://gist.github.com/eternal-flame-AD/bf71ef4f6828e741eb12ce7fd47b7b85\">https://gist.github.com/eternal-flame-AD/bf71ef4f6828e741eb12ce7fd47b7b85</a></p>\n<h3 id=\"impact\">Impact</h3>\n<p>Users who extract untrusted archive files using the following high-level API method may be affected and critical files on the system may be overwritten with arbitrary file permissions, which can potentially lead to code execution.</p>\n<ul>\n<li>zip::unstable::stream::ZipStreamReader::extract</li>\n<li>zip::read::ZipArchive::extract</li>\n</ul>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/zip-rs/zip2/security/advisories/GHSA-94vh-gphv-8pm8\">https://github.com/zip-rs/zip2/security/advisories/GHSA-94vh-gphv-8pm8</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2025-29787\">https://nvd.nist.gov/vuln/detail/CVE-2025-29787</a></li>\n<li><a href=\"https://github.com/zip-rs/zip2/commit/a2e062f37066c3b12860a32eb1cb44856cfb7afe\">https://github.com/zip-rs/zip2/commit/a2e062f37066c3b12860a32eb1cb44856cfb7afe</a></li>\n<li><a href=\"https://gist.github.com/eternal-flame-AD/bf71ef4f6828e741eb12ce7fd47b7b85\">https://gist.github.com/eternal-flame-AD/bf71ef4f6828e741eb12ce7fd47b7b85</a></li>\n<li><a href=\"https://github.com/zip-rs/zip2/releases/tag/v2.3.0\">https://github.com/zip-rs/zip2/releases/tag/v2.3.0</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-94vh-gphv-8pm8\">https://github.com/advisories/GHSA-94vh-gphv-8pm8</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-94vh-gphv-8pm8",
            "title": "[zip] zip Incorrectly Canonicalizes Paths during Archive Extraction Leading to Arbitrary File Write",
            "date_modified": "2025-03-19T15:51:05.000Z",
            "date_published": "2025-03-17T21:26:32.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-94vh-gphv-8pm8"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>Zincati ships a polkit rule which allows the <code>zincati</code> system user to use the following actions:</p>\n<ul>\n<li><code>org.projectatomic.rpmostree1.deploy</code>: used to deploy updates to the system</li>\n<li><code>org.projectatomic.rpmostree1.finalize-deployment</code>: used to reboot the system into the deployed update</li>\n</ul>\n<p>Since Zincati <a href=\"https://github.com/coreos/zincati/releases/tag/v0.0.24\">v0.0.24</a>, this polkit rule contains a logic error which broadens access of those polkit actions to any unprivileged user rather than just the <code>zincati</code> system user.</p>\n<p>In practice, this means that any unprivileged user with access to the system D-Bus socket is able to deploy older Fedora CoreOS versions (which may have other known vulnerabilities). Note that rpm-ostree enforces that the selected version must be from the same branch the system is currently on so this cannot directly be used to deploy an attacker-controlled update payload.</p>\n<p>This primarily impacts users running untrusted workloads with access to the system D-Bus socket. Note that in general, untrusted workloads should not be given this access, whether containerized or not. By default, containers do not have access to the system D-Bus socket.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>The logic error is fixed in Zincati v0.0.30. The fix is included in the following FCOS releases:</p>\n<ul>\n<li>On the <code>stable</code> stream: 41.20250302.3.2</li>\n<li>On the <code>testing</code> stream: 41.20250315.2.0</li>\n<li>On the <code>next</code> stream: 42.20250316.1.0</li>\n</ul>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>A workaround is to add the following polkit rule:</p>\n<pre><code class=\"language-javascript\">polkit.addRule(function(action, subject) {\n    if (action.id == \"org.projectatomic.rpmostree1.deploy\" ||\n        action.id == \"org.projectatomic.rpmostree1.finalize-deployment\" ||\n        action.id == \"org.projectatomic.rpmostree1.cleanup\") {\n        if (subject.user != \"zincati\") {\n                return polkit.Result.NO;\n        }\n    }\n});\n</code></pre>\n<p>to e.g. <code>/etc/polkit-1/rules.d/00-zincati-fix.rules</code> (it must sort earlier than <code>zincati.rules</code> lexicographically).</p>\n<p>Note that this rule will deny all non-root users other than <code>zincati</code> from using those actions. If you've added polkit rules to allow e.g. the <code>core</code> user or other users, you will need to adjust the policy (or make sure the ordering is appropriate).</p>\n<h3 id=\"references\">References</h3>\n<p>This issue was introduced by <a href=\"https://github.com/coreos/zincati/commit/28a43aa2c1edda091ba659677d73c13e6e3ea99d\">this commit</a>, and is fixed in <a href=\"https://github.com/coreos/zincati/releases/tag/v0.0.30\">v0.0.30</a>.</p>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/coreos/zincati/security/advisories/GHSA-w6fv-6gcc-x825\">https://github.com/coreos/zincati/security/advisories/GHSA-w6fv-6gcc-x825</a></li>\n<li><a href=\"https://github.com/coreos/zincati/commit/01d8e89f799e6ba21bdf7dc668abce23bd0d8f78\">https://github.com/coreos/zincati/commit/01d8e89f799e6ba21bdf7dc668abce23bd0d8f78</a></li>\n<li><a href=\"https://github.com/coreos/zincati/commit/28a43aa2c1edda091ba659677d73c13e6e3ea99d\">https://github.com/coreos/zincati/commit/28a43aa2c1edda091ba659677d73c13e6e3ea99d</a></li>\n<li><a href=\"https://github.com/coreos/zincati/releases/tag/v0.0.24\">https://github.com/coreos/zincati/releases/tag/v0.0.24</a></li>\n<li><a href=\"https://github.com/coreos/zincati/releases/tag/v0.0.30\">https://github.com/coreos/zincati/releases/tag/v0.0.30</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2025-27512\">https://nvd.nist.gov/vuln/detail/CVE-2025-27512</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-w6fv-6gcc-x825\">https://github.com/advisories/GHSA-w6fv-6gcc-x825</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-w6fv-6gcc-x825",
            "title": "[zincati] Zincati allows unprivileged access to rpm-ostree D-Bus `Deploy()` and `FinalizeDeployment()` methods",
            "date_modified": "2025-03-19T15:00:21.000Z",
            "date_published": "2025-03-17T14:46:56.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-w6fv-6gcc-x825"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>gurk (aka gurk-rs) through 0.6.3 mishandles ANSI escape sequences.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2025-30089\">https://nvd.nist.gov/vuln/detail/CVE-2025-30089</a></li>\n<li><a href=\"https://github.com/boxdot/gurk-rs/issues/384\">https://github.com/boxdot/gurk-rs/issues/384</a></li>\n<li><a href=\"https://crates.io/crates/gurk\">https://crates.io/crates/gurk</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-89xp-c3mq-qj84\">https://github.com/advisories/GHSA-89xp-c3mq-qj84</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-89xp-c3mq-qj84",
            "title": "[gurk] gurk (aka gurk-rs) mishandles ANSI escape sequences",
            "date_modified": "2025-03-17T14:45:41.000Z",
            "date_published": "2025-03-17T00:30:21.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-89xp-c3mq-qj84"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>A privilege escalation vulnerability existed in the Below service prior to v0.9.0 due to the creation of a world-writable directory at /var/log/below. This could have allowed local unprivileged users to escalate to root privileges through symlink attacks that manipulate files such as /etc/shadow.</p>\n<h3 id=\"patches\">Patches</h3>\n<p><a href=\"https://github.com/facebookincubator/below/commit/10e73a21d67baa2cd613ee92ce999cda145e1a83\">https://github.com/facebookincubator/below/commit/10e73a21d67baa2cd613ee92ce999cda145e1a83</a></p>\n<p>This is included in version 0.9.0</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>Change the permission on <code>/var/log/below</code> manually</p>\n<h3 id=\"references\">References</h3>\n<p><a href=\"https://www.facebook.com/security/advisories/cve-2025-27591\">https://www.facebook.com/security/advisories/cve-2025-27591</a>\n<a href=\"https://www.cve.org/CVERecord?id=CVE-2025-27591\">https://www.cve.org/CVERecord?id=CVE-2025-27591</a></p>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/facebookincubator/below/security/advisories/GHSA-9mc5-7qhg-fp3w\">https://github.com/facebookincubator/below/security/advisories/GHSA-9mc5-7qhg-fp3w</a></li>\n<li><a href=\"https://github.com/facebookincubator/below/commit/10e73a21d67baa2cd613ee92ce999cda145e1a83\">https://github.com/facebookincubator/below/commit/10e73a21d67baa2cd613ee92ce999cda145e1a83</a></li>\n<li><a href=\"https://www.facebook.com/security/advisories/cve-2025-27591\">https://www.facebook.com/security/advisories/cve-2025-27591</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2025-27591\">https://nvd.nist.gov/vuln/detail/CVE-2025-27591</a></li>\n<li><a href=\"http://www.openwall.com/lists/oss-security/2025/03/12/1\">http://www.openwall.com/lists/oss-security/2025/03/12/1</a></li>\n<li><a href=\"https://github.com/facebookincubator/below/commit/da9382e6e3e332fd2c3195e22f34977f83f0f1f3\">https://github.com/facebookincubator/below/commit/da9382e6e3e332fd2c3195e22f34977f83f0f1f3</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-9mc5-7qhg-fp3w\">https://github.com/advisories/GHSA-9mc5-7qhg-fp3w</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-9mc5-7qhg-fp3w",
            "title": "[below] Below has Incorrect Permission Assignment for Critical Resource",
            "date_modified": "2025-03-21T21:51:09.000Z",
            "date_published": "2025-03-11T21:12:54.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-9mc5-7qhg-fp3w"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Affected version of this crate did not properly parse unknown fields when parsing a user-supplied input.</p>\n<p>This allows an attacker to cause a stack overflow when parsing the message on untrusted data.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/stepancheg/rust-protobuf/issues/749\">https://github.com/stepancheg/rust-protobuf/issues/749</a></li>\n<li><a href=\"https://rustsec.org/advisories/RUSTSEC-2024-0437.html\">https://rustsec.org/advisories/RUSTSEC-2024-0437.html</a></li>\n<li><a href=\"https://github.com/stepancheg/rust-protobuf/commit/f06992f46771c0a092593b9ebf7afd48740b3ed6\">https://github.com/stepancheg/rust-protobuf/commit/f06992f46771c0a092593b9ebf7afd48740b3ed6</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-2gh3-rmm4-6rq5\">https://github.com/advisories/GHSA-2gh3-rmm4-6rq5</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-2gh3-rmm4-6rq5",
            "title": "[protobuf] Crash due to uncontrolled recursion in protobuf crate",
            "date_modified": "2025-03-11T17:08:08.000Z",
            "date_published": "2025-03-07T20:02:37.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-2gh3-rmm4-6rq5"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p><strong>Nature of issue:</strong> Crash (Denial of Service)\n<strong>Source of issue:</strong> Dependent package (ring)\n<strong>Affected versions of qcp:</strong> 0.1.0-0.3.2\n<strong>Recommendation:</strong> Upgrade to qcp 0.3.3 or later</p>\n<h3 id=\"who-is-affected\">Who is affected</h3>\n<p>All versions of qcp from 0.1.0 to 0.3.2 are affected, but <strong>only if built with runtime overflow checks.</strong></p>\n<ul>\n<li>Released qcp binaries do not enable runtime overflow checks by default. <strong>If you use an official released qcp binary download, you are not affected.</strong></li>\n<li>If you built qcp yourself in debug mode, you are affected unless your debug configuration explicitly disables overflow checks.</li>\n<li>If you built qcp yourself in release mode, you are only affected if you explicitly requested runtime overflow checks at build time by setting the appropriate <code>RUSTFLAGS</code>, or in your Cargo.toml profile.</li>\n</ul>\n<h3 id=\"what-to-do-if-you-are-affected\">What to do if you are affected</h3>\n<p><strong>We recommend you upgrade to qcp 0.3.3 or later.</strong>\nUsers upgrading from versions prior to 0.3.0 should note that an incompatible protocol change was introduced in version 0.3.0, so should stage their upgrade carefully.</p>\n<p>Alternatively, it is possible to avoid upgrading by rebuilding qcp locally. The following alternative mitigations have been identified:</p>\n<ul>\n<li>Rebuild locally with runtime overflow checks disabled</li>\n<li>Rebuild locally using a fixed version of the <code>ring</code> dependency (0.17.12 or later).</li>\n</ul>\n<h3 id=\"detail\">Detail</h3>\n<p>The upstream advisory describes a crash in the implementation of the QUIC protocol that can be induced by a specially-crafted packet, and which happens naturally approximately every 1 in 2**32 packets sent and/or received.</p>\n<p>The crash only happens when runtime overflow checking is enabled. Note that the upstream advisory describes the overflow check causing this issue as \"unwanted\". Their response, to remove the overflow check in one place, does not introduce any additional issue.</p>\n<h3 id=\"impact\">Impact</h3>\n<p>During qcp file transfer sessions, it is possible for an attacker to send a specially-crafted packet that could trigger this issue.</p>\n<ul>\n<li>In that case, and only if qcp was built with runtime overflow checks enabled, the effect is a Rust panic which immediately aborts the transfer. There is no additional impact on system resources at either end, nor on other file transfers in progress.</li>\n<li>As qcp runs a separate process for every connected user, the impact of the attack is limited to a single session.</li>\n</ul>\n<p>The underlying issue may also affect particularly large file transfers. The maximum TLS packet size is 16KB, so 2**32 packets will transfer up to 68TB (including the protocol/retransmit overhead). Again, this is only the case if qcp was built with runtime overflow checks enabled.</p>\n<p>As of the time of writing, we are not aware of any reports of this issue being exploited.</p>\n<h4 id=\"additional-notes\">Additional notes</h4>\n<ul>\n<li>The qcp protocol itself does not rely on runtime overflow checks for its security.</li>\n<li>While QUIC servers are normally public-facing, <a href=\"https://docs.rs/qcp/latest/qcp/protocol/index.html\">qcp is a hybrid protocol</a> that first requires an authenticated ssh session in order to set up the QUIC session. The window of attackability is therefore reduced, though will depend on your usage profile.</li>\n<li>An additional layer of obscurity is provided by qcp using ephemeral, random port numbers for its QUIC traffic (subject to user configuration).</li>\n</ul>\n<h3 id=\"references\">References</h3>\n<p>Upstream advisories:</p>\n<ul>\n<li><a href=\"https://rustsec.org/advisories/RUSTSEC-2025-0009.html\">RUSTSEC-2025-0009</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-4p46-pwfr-66x6\">https://github.com/advisories/GHSA-4p46-pwfr-66x6</a></li>\n</ul>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/crazyscot/qcp/security/advisories/GHSA-fmwf-c46w-r8qm\">https://github.com/crazyscot/qcp/security/advisories/GHSA-fmwf-c46w-r8qm</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-4p46-pwfr-66x6\">https://github.com/advisories/GHSA-4p46-pwfr-66x6</a></li>\n<li><a href=\"https://github.com/briansmith/ring/blob/main/RELEASES.md#version-01712-2025-03-05\">https://github.com/briansmith/ring/blob/main/RELEASES.md#version-01712-2025-03-05</a></li>\n<li><a href=\"https://rustsec.org/advisories/RUSTSEC-2025-0009.html\">https://rustsec.org/advisories/RUSTSEC-2025-0009.html</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-fmwf-c46w-r8qm\">https://github.com/advisories/GHSA-fmwf-c46w-r8qm</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-fmwf-c46w-r8qm",
            "title": "[qcp] qcp has possible crash/DOS in some build configurations",
            "date_modified": "2025-03-08T01:30:19.000Z",
            "date_published": "2025-03-08T01:30:18.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-fmwf-c46w-r8qm"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p><code>ring::aead::quic::HeaderProtectionKey::new_mask()</code> may panic when overflow checking is enabled. In the QUIC protocol, an attacker can induce this panic by sending a specially-crafted packet. Even unintentionally it is likely to occur in 1 out of every 2**32 packets sent and/or received.</p>\n<p>On 64-bit targets operations using <code>ring::aead::{AES_128_GCM, AES_256_GCM}</code> may panic when overflow checking is enabled, when encrypting/decrypting approximately 68,719,476,700 bytes (about 64 gigabytes) of data in a single chunk. Protocols like TLS and SSH are not affected by this because those protocols break large amounts of data into small chunks. Similarly, most applications will not attempt to encrypt/decrypt 64GB of data in one chunk.</p>\n<p>Overflow checking is not enabled in release mode by default, but <code>RUSTFLAGS=\"-C overflow-checks\"</code> or <code>overflow-checks = true</code> in the Cargo.toml profile can override this. Overflow checking is usually enabled by default in debug mode.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/briansmith/ring/pull/2447\">https://github.com/briansmith/ring/pull/2447</a></li>\n<li><a href=\"https://github.com/briansmith/ring/commit/ec2d3cf1d91f148c84e4806b4f0b3c98f6df3b38\">https://github.com/briansmith/ring/commit/ec2d3cf1d91f148c84e4806b4f0b3c98f6df3b38</a></li>\n<li><a href=\"https://github.com/briansmith/ring/blob/main/RELEASES.md#version-01712-2025-03-05\">https://github.com/briansmith/ring/blob/main/RELEASES.md#version-01712-2025-03-05</a></li>\n<li><a href=\"https://rustsec.org/advisories/RUSTSEC-2025-0009.html\">https://rustsec.org/advisories/RUSTSEC-2025-0009.html</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-4p46-pwfr-66x6\">https://github.com/advisories/GHSA-4p46-pwfr-66x6</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-4p46-pwfr-66x6",
            "title": "[ring] Some AES functions may panic when overflow checking is enabled in ring",
            "date_modified": "2025-03-07T16:23:51.000Z",
            "date_published": "2025-03-07T16:23:50.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-4p46-pwfr-66x6"
            },
            "tags": [
                "severity"
            ]
        }
    ]
}