{
    "version": "https://jsonfeed.org/version/1",
    "title": "Security Advisory for JavaScript packages hosted at npmjs.com",
    "home_page_url": "https://github.com/advisories?query=type%3Areviewed+ecosystem%3Anpm",
    "feed_url": "https://azu.github.io/github-advisory-database-rss/npm.json",
    "description": "Security Advisory for JavaScript packages hosted at npmjs.com on GitHub",
    "items": [
        {
            "content_html": "<h3 id=\"summary\">Summary</h3>\n<p>Manifest employs a weak password hashing implementation that uses SHA3 without a salt. This exposes user passwords to a higher risk of being cracked if an attacker gains access to the database. Without the use of a salt, identical passwords across multiple users will result in the same hash, making it easier for attackers to identify and exploit patterns, thereby accelerating the cracking process.</p>\n<h3 id=\"details\">Details</h3>\n<p>Analysis of the application source code reveals that user passwords are hashed using the SHA3 algorithm without implementing a unique salt per user.</p>\n<pre><code>const newUser: AuthenticableEntity = entityRepository.create(signupUserDto)\nnewUser.password = SHA3(newUser.password).toString()\n</code></pre>\n<p>This approach results in deterministic password hashes, which can be identified by comparing the hashes for users with matching credentials.</p>\n<p><img alt=\"password without salt\" src=\"https://github.com/user-attachments/assets/8ce816ab-0351-44d4-9aa3-717266441d6e\"></p>\n<h3 id=\"poc\">PoC</h3>\n<ol>\n<li>Create two users with the same password (it could be admin or any other authenticatable entity)</li>\n<li>Extract their password hashes from the database</li>\n<li>Verify that both hashes are identical, confirming the absence of unique salts</li>\n</ol>\n<h3 id=\"impact\">Impact</h3>\n<p>This is a cryptographic weakness vulnerability that affects all users of the system. The lack of a unique salt when hashing passwords reduces protection against database breaches, as attackers who gain access to the database can more efficiently crack user passwords. Since identical passwords result in identical hashes, attackers can use precomputed hash databases (e.g., Rainbow Tables) or offline brute-force attacks to reverse the hashes and obtain user passwords, increasing the risk of compromised accounts and further system exploitation.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/mnfst/manifest/security/advisories/GHSA-h8h6-7752-g28c\">https://github.com/mnfst/manifest/security/advisories/GHSA-h8h6-7752-g28c</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2025-27408\">https://nvd.nist.gov/vuln/detail/CVE-2025-27408</a></li>\n<li><a href=\"https://github.com/mnfst/manifest/commit/3ed6f1324e96ad469ad929d470dcd0cc386c6c69\">https://github.com/mnfst/manifest/commit/3ed6f1324e96ad469ad929d470dcd0cc386c6c69</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-h8h6-7752-g28c\">https://github.com/advisories/GHSA-h8h6-7752-g28c</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-h8h6-7752-g28c",
            "title": "[manifest] Manifest Uses a One-Way Hash without a Salt",
            "date_modified": "2025-03-04T22:23:27.000Z",
            "date_published": "2025-03-03T19:55:33.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-h8h6-7752-g28c"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>A DOM Clobbering vulnerability in tsup v8.3.4 allows attackers to execute arbitrary code via a crafted script in the import.meta.url to document.currentScript in cjs_shims.js components</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-53384\">https://nvd.nist.gov/vuln/detail/CVE-2024-53384</a></li>\n<li><a href=\"https://gist.github.com/jackfromeast/36f98bf7542d11835c883c1d175d9b92\">https://gist.github.com/jackfromeast/36f98bf7542d11835c883c1d175d9b92</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-3mv9-4h5g-vhg3\">https://github.com/advisories/GHSA-3mv9-4h5g-vhg3</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-3mv9-4h5g-vhg3",
            "title": "[tsup] tsup DOM Clobbering vulnerability",
            "date_modified": "2025-03-03T22:22:45.000Z",
            "date_published": "2025-03-03T18:31:29.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-3mv9-4h5g-vhg3"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Cross Site Scripting vulnerability in seajs v.2.2.3 allows a remote attacker to execute arbitrary code via the seajs package</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-51091\">https://nvd.nist.gov/vuln/detail/CVE-2024-51091</a></li>\n<li><a href=\"https://gist.github.com/jackfromeast/176413c3bd73f825f7aeeb05e80e02a6\">https://gist.github.com/jackfromeast/176413c3bd73f825f7aeeb05e80e02a6</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-pfr4-4397-3hg8\">https://github.com/advisories/GHSA-pfr4-4397-3hg8</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-pfr4-4397-3hg8",
            "title": "[seajs] seajs Cross-site Scripting vulnerability",
            "date_modified": "2025-03-03T22:20:22.000Z",
            "date_published": "2025-03-03T18:31:29.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-pfr4-4397-3hg8"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>A DOM Clobbering vulnerability in mavo v0.3.2 allows attackers to execute arbitrary code via supplying a crafted HTML element.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-53388\">https://nvd.nist.gov/vuln/detail/CVE-2024-53388</a></li>\n<li><a href=\"https://gist.github.com/jackfromeast/a61a5429a97985e7ff4c1d39e339d5d8\">https://gist.github.com/jackfromeast/a61a5429a97985e7ff4c1d39e339d5d8</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-3mf5-r4hg-hfx9\">https://github.com/advisories/GHSA-3mf5-r4hg-hfx9</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-3mf5-r4hg-hfx9",
            "title": "[mavo] mavo DOM Clobbering vulnerability",
            "date_modified": "2025-03-03T22:16:43.000Z",
            "date_published": "2025-03-03T18:31:28.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-3mf5-r4hg-hfx9"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Stage.js through 0.8.10 allows DOM Clobbering (with resultant XSS for untrusted input that contains HTML but does not directly contain JavaScript), because document.currentScript lookup can be shadowed by attacker-injected HTML elements.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-53386\">https://nvd.nist.gov/vuln/detail/CVE-2024-53386</a></li>\n<li><a href=\"https://gist.github.com/jackfromeast/31d56f1ad17673aabb6ab541e65a5534\">https://gist.github.com/jackfromeast/31d56f1ad17673aabb6ab541e65a5534</a></li>\n<li><a href=\"https://github.com/piqnt/stage.js/blob/919f6e94b14242f6e6994141a9e1188439d306d5/lib/core.js#L158-L159\">https://github.com/piqnt/stage.js/blob/919f6e94b14242f6e6994141a9e1188439d306d5/lib/core.js#L158-L159</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-fp3m-g5rc-4c28\">https://github.com/advisories/GHSA-fp3m-g5rc-4c28</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-fp3m-g5rc-4c28",
            "title": "[stage-js] Stage.js DOM Clobbering vulnerabilty",
            "date_modified": "2025-03-03T20:17:22.000Z",
            "date_published": "2025-03-03T09:30:34.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-fp3m-g5rc-4c28"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Prism (aka PrismJS) through 1.29.0 allows DOM Clobbering (with resultant XSS for untrusted input that contains HTML but does not directly contain JavaScript), because document.currentScript lookup can be shadowed by attacker-injected HTML elements.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-53382\">https://nvd.nist.gov/vuln/detail/CVE-2024-53382</a></li>\n<li><a href=\"https://gist.github.com/jackfromeast/aeb128e44f05f95828a1a824708df660\">https://gist.github.com/jackfromeast/aeb128e44f05f95828a1a824708df660</a></li>\n<li><a href=\"https://github.com/PrismJS/prism/blob/59e5a3471377057de1f401ba38337aca27b80e03/prism.js#L226-L259\">https://github.com/PrismJS/prism/blob/59e5a3471377057de1f401ba38337aca27b80e03/prism.js#L226-L259</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-x7hr-w5r2-h6wg\">https://github.com/advisories/GHSA-x7hr-w5r2-h6wg</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-x7hr-w5r2-h6wg",
            "title": "[prismjs] PrismJS DOM Clobbering vulnerability",
            "date_modified": "2025-03-03T20:16:33.000Z",
            "date_published": "2025-03-03T09:30:34.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-x7hr-w5r2-h6wg"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>MongoDB Compass may be susceptible to code injection due to insufficient sandbox protection settings with the usage of ejson shell parser in Compass' connection handling. This issue affects MongoDB Compass versions prior to version 1.42.2.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-6376\">https://nvd.nist.gov/vuln/detail/CVE-2024-6376</a></li>\n<li><a href=\"https://jira.mongodb.org/browse/COMPASS-7496\">https://jira.mongodb.org/browse/COMPASS-7496</a></li>\n<li><a href=\"https://github.com/mongodb-js/compass/commit/b1f8050d49d66be3bc499cb317a1e1de45390e51\">https://github.com/mongodb-js/compass/commit/b1f8050d49d66be3bc499cb317a1e1de45390e51</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-jxr4-4prv-mh83\">https://github.com/advisories/GHSA-jxr4-4prv-mh83</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-jxr4-4prv-mh83",
            "title": "[@mongodb-js/connection-form] ejson shell parser in MongoDB Compass maybe bypassed",
            "date_modified": "2025-02-27T20:59:12.000Z",
            "date_published": "2024-07-01T15:32:47.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-jxr4-4prv-mh83"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>mongosh may be susceptible to local privilege escalation under certain conditions potentially enabling unauthorized actions on a user's system with elevated privilege, when a crafted file is stored in C:\\node_modules. This issue affects mongosh prior to 2.3.0.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2025-1756\">https://nvd.nist.gov/vuln/detail/CVE-2025-1756</a></li>\n<li><a href=\"https://access.redhat.com/errata/RHSA-2025:1756\">https://access.redhat.com/errata/RHSA-2025:1756</a></li>\n<li><a href=\"https://jira.mongodb.org/browse/MONGOSH-2028\">https://jira.mongodb.org/browse/MONGOSH-2028</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-f5w3-73h4-jpcm\">https://github.com/advisories/GHSA-f5w3-73h4-jpcm</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-f5w3-73h4-jpcm",
            "title": "[mongosh] mongosh vulnerable to local privilege escalation",
            "date_modified": "2025-02-27T20:59:01.000Z",
            "date_published": "2025-02-27T18:31:13.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-f5w3-73h4-jpcm"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>The MongoDB Shell may be susceptible to control character injection where an attacker with control over the database cluster contents can inject control characters into the shell output. This may result in the display of falsified messages that appear to originate from mongosh or the underlying operating system, potentially misleading users into executing unsafe actions.</p>\n<p>The vulnerability is exploitable only when mongosh is connected to a cluster that is partially or fully controlled by an attacker.</p>\n<p>This issue affects mongosh versions prior to 2.3.9.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2025-1693\">https://nvd.nist.gov/vuln/detail/CVE-2025-1693</a></li>\n<li><a href=\"https://jira.mongodb.org/browse/MONGOSH-2026\">https://jira.mongodb.org/browse/MONGOSH-2026</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-r95j-4jvf-mrrw\">https://github.com/advisories/GHSA-r95j-4jvf-mrrw</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-r95j-4jvf-mrrw",
            "title": "[mongosh] MongoDB Shell may be susceptible to control character Injection via shell output",
            "date_modified": "2025-02-27T17:16:10.000Z",
            "date_published": "2025-02-27T15:31:51.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-r95j-4jvf-mrrw"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>The MongoDB Shell may be susceptible to control character injection where an attacker with control of the user’s clipboard could manipulate them to paste text into mongosh that evaluates arbitrary code. Control characters in the pasted text can be used to obfuscate malicious code. This issue affects mongosh versions prior to 2.3.9.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2025-1692\">https://nvd.nist.gov/vuln/detail/CVE-2025-1692</a></li>\n<li><a href=\"https://jira.mongodb.org/browse/MONGOSH-2025\">https://jira.mongodb.org/browse/MONGOSH-2025</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-973h-3x6p-qg37\">https://github.com/advisories/GHSA-973h-3x6p-qg37</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-973h-3x6p-qg37",
            "title": "[mongosh] MongoDB Shell may be susceptible to control character injection via pasting",
            "date_modified": "2025-02-27T17:15:55.000Z",
            "date_published": "2025-02-27T15:31:51.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-973h-3x6p-qg37"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>The MongoDB Shell may be susceptible to control character injection where an attacker with control of the mongosh autocomplete feature, can use the autocompletion feature to input and run obfuscated malicious text. This requires user interaction in the form of the user using ‘tab’ to autocomplete text that is a prefix of the attacker’s prepared autocompletion. This issue affects mongosh versions prior to&nbsp;2.3.9.&nbsp;</p>\n<p>The vulnerability is exploitable only when mongosh is connected to a cluster that is partially or fully controlled by an attacker.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2025-1691\">https://nvd.nist.gov/vuln/detail/CVE-2025-1691</a></li>\n<li><a href=\"https://jira.mongodb.org/browse/MONGOSH-2024\">https://jira.mongodb.org/browse/MONGOSH-2024</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-43g5-2wr2-q7vj\">https://github.com/advisories/GHSA-43g5-2wr2-q7vj</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-43g5-2wr2-q7vj",
            "title": "[mongosh] MongoDB Shell may be susceptible to Control Character Injection via autocomplete",
            "date_modified": "2025-02-27T17:15:44.000Z",
            "date_published": "2025-02-27T15:31:51.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-43g5-2wr2-q7vj"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>The matrix-appservice-irc bridge up to version 3.0.3 contains a vulnerability which can lead to arbitrary IRC command execution as the puppeted user. The attacker can only inject commands executed as their own IRC user.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>The vulnerability has been patched in matrix-appservice-irc version 3.0.4.</p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any questions or comments about this advisory, please email us at <a href=\"mailto:security@matrix.org\">security at matrix.org</a>.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/matrix-org/matrix-appservice-irc/security/advisories/GHSA-5mvm-89c9-9gm5\">https://github.com/matrix-org/matrix-appservice-irc/security/advisories/GHSA-5mvm-89c9-9gm5</a></li>\n<li><a href=\"https://github.com/matrix-org/matrix-appservice-irc/commit/74f02c8e11f16ed1b355700092c1aa9c036a11bd\">https://github.com/matrix-org/matrix-appservice-irc/commit/74f02c8e11f16ed1b355700092c1aa9c036a11bd</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2025-27146\">https://nvd.nist.gov/vuln/detail/CVE-2025-27146</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-5mvm-89c9-9gm5\">https://github.com/advisories/GHSA-5mvm-89c9-9gm5</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-5mvm-89c9-9gm5",
            "title": "[matrix-appservice-irc] Matrix IRC Bridge allows IRC command injection to own puppeted user",
            "date_modified": "2025-02-25T21:46:09.000Z",
            "date_published": "2025-02-25T18:29:34.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-5mvm-89c9-9gm5"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<blockquote>\n<p>[!NOTE]<br>This advisory was originally emailed to <a href=\"mailto:community@solidjs.com\">community@solidjs.com</a> by @nsysean.</p>\n</blockquote>\n<p>To sum it up, the use of javascript's <code>.replace()</code> opens up to potential XSS vulnerabilities with the special replacement patterns beginning with <code>$</code>.</p>\n<p>Particularly, when the attributes of <code>Meta</code> tag from solid-meta are user-defined, attackers can utilise the special replacement patterns, either <code>$'</code> or `$`` to achieve XSS.</p>\n<p>The solid-meta package has this issue since it uses <code>useAffect</code> and context providers, which injects the used assets in the html header. \"dom-expressions\" uses <code>.replace()</code> to insert the assets, which is vulnerable to the special replacement patterns listed above. </p>\n<p>This effectively means that if the attributes of an asset tag contained user-controlled data, it would be vulnerable to XSS. For instance, there might be meta tags for the open graph protocol in a user profile page, but if attackers set the user query to some payload abusing <code>.replace()</code>, then they could execute arbitrary javascript in the victim's web browser. Moreover, it could be stored and cause more problems.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/ryansolid/dom-expressions/security/advisories/GHSA-hw62-58pr-7wc5\">https://github.com/ryansolid/dom-expressions/security/advisories/GHSA-hw62-58pr-7wc5</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2025-27108\">https://nvd.nist.gov/vuln/detail/CVE-2025-27108</a></li>\n<li><a href=\"https://github.com/ryansolid/dom-expressions/commit/521f75dfa89ed24161646e7007d9d7d21da07767\">https://github.com/ryansolid/dom-expressions/commit/521f75dfa89ed24161646e7007d9d7d21da07767</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-hw62-58pr-7wc5\">https://github.com/advisories/GHSA-hw62-58pr-7wc5</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-hw62-58pr-7wc5",
            "title": "[dom-expressions] DOM Expressions has a Cross-Site Scripting (XSS) vulnerability due to improper use of string.replace",
            "date_modified": "2025-02-25T17:49:59.000Z",
            "date_published": "2025-02-25T17:49:57.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-hw62-58pr-7wc5"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Inserts/JSX expressions inside illegal inlined JSX fragments lacked escaping, allowing user input to be rendered as HTML when put directly inside JSX fragments.</p>\n<p>For instance, <code>?text=&lt;svg/onload=alert(1)&gt;</code> would trigger XSS here.</p>\n<pre><code class=\"language-js\">  const [text] = createResource(() =&gt; {\n    return new URL(getRequestEvent().request.url).searchParams.get(\"text\");\n  });\n\n  return (\n    &lt;&gt;\n      Text: {text()}\n    &lt;/&gt;\n  );\n</code></pre>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/solidjs/solid/security/advisories/GHSA-3qxh-p7jc-5xh6\">https://github.com/solidjs/solid/security/advisories/GHSA-3qxh-p7jc-5xh6</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2025-27109\">https://nvd.nist.gov/vuln/detail/CVE-2025-27109</a></li>\n<li><a href=\"https://github.com/solidjs/solid/commit/b93956f28ed75469af6976a98728e313d0edd236\">https://github.com/solidjs/solid/commit/b93956f28ed75469af6976a98728e313d0edd236</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-3qxh-p7jc-5xh6\">https://github.com/advisories/GHSA-3qxh-p7jc-5xh6</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-3qxh-p7jc-5xh6",
            "title": "[solid-js] Solid Lacks Escaping of HTML in JSX Fragments allows for Cross-Site Scripting (XSS)",
            "date_modified": "2025-02-25T17:49:41.000Z",
            "date_published": "2025-02-25T17:49:40.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-3qxh-p7jc-5xh6"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"summary\">Summary</h3>\n<p>A bypass was found for <strong>wildcard</strong> or <strong>absolute URLs</strong> trustedOrigins configurations and opens the victims website to a <strong>Open Redirect</strong> vulnerability, where it can be used to steal the <strong>reset password token</strong> of a victims account by changing the \"callbackURL\" parameter value to a website owned by the attacker.</p>\n<h3 id=\"details\">Details</h3>\n<h4 id=\"absolute-urls\">Absolute URLs</h4>\n<p>The issue here appears in the <strong>middleware</strong>,  <a href=\"https://github.com/better-auth/better-auth/blob/ddebd0358d74376ea64541512d0167dd4377f182/packages/better-auth/src/api/middlewares/origin-check.ts#L53\">specifically</a>. This protection is not sufficiente and it allows attackers to exploit a open redirect vulnerability, by using the payload <code>/\\/example.com</code>. We can check this is a valid URL ( or it will be a valid URL because the URL parser fix it for us ), by checking the image bellow:</p>\n<p><img alt=\"image\" src=\"https://github.com/user-attachments/assets/d192f06d-358d-4612-97d9-cab89ba55b06\"></p>\n<pre><code class=\"language-typescript\">// trustedOrigins = [ \"https://example.com\" ]\nvalidateURL(\"https://attacker.com\", \"callbackURL\") // ❌ APIError, No Redirect\nvalidateURL(\"/\\/attacker.com\", \"callbackURL\")       // ✅ Redirect to http://attacker.com\n</code></pre>\n<h4 id=\"regex\">Regex</h4>\n<p>The issue here is because the regex is not strong enough <code>[^/\\\\]*?\\.example\\.com[/\\\\]*?</code> ( this is the regex it will be created if we have a wildcard as the trustedOrigins config ), but we can bypass by using a payload like:</p>\n<pre><code class=\"language-text\">// trustedOrigins = [ \"*.example.com\" ]\n  ┌──────────────────┐       ┌────────────────┐       ┌─────────────────┐\n  │ None of [ \"/\\\" ] │ ────▶ │ \".example.com\" │ ────▶ │ One of [ \"/\\\" ] │\n  └──────────────────┘       └────────────────┘       └─────────────────┘\n          demo                  .example.com                    /               ✅ Redirect to https://example.com\n          demo                  .attacker.com                   /               ❌ APIError, no redirect\n   http:attacker.com?           .example.com                    /               ✅ Redirect to http://attacker.com\n</code></pre>\n<p>This works because <strong>:</strong> and <strong>?</strong> are special chars in a URL, so when the URL parser sees, <strong>http:</strong> it will fix our happily fix our URL to <a href=\"http://attacker.com\">http://attacker.com</a>? and make  <code>.example.com</code> as parameter, thus, bypassing this check.</p>\n<h3 id=\"poc\">PoC</h3>\n<p>We can PoC the open redirect by using the <code>demo.better-auth.com</code>. \nIf we access the URL bellow, we are redirected to example.com:</p>\n<ul>\n<li><a href=\"https://demo.better-auth.com/api/auth/reset-password/x?callbackURL=/%5C/example.com\">https://demo.better-auth.com/api/auth/reset-password/x?callbackURL=/\\/example.com</a></li>\n</ul>\n<h3 id=\"impact\">Impact</h3>\n<p>Every single website using the <strong>better-auth</strong> library, is vulnerable to un-auth open redirect and more importantilly, vulnerable to potential one click account take over vulnerability, as the attacker can send the victim a email to reset their account while changing the \"redirectTo\" parameter <a href=\"https://demo.better-auth.com/forget-password\">here</a>, and when the victim clicks on the link, the reset token is sent to the attackers website, which then a attacker could use that token to reset the password of the victims account.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/better-auth/better-auth/security/advisories/GHSA-vp58-j275-797x\">https://github.com/better-auth/better-auth/security/advisories/GHSA-vp58-j275-797x</a></li>\n<li><a href=\"https://github.com/better-auth/better-auth/commit/b381cac7aafd6aa53ef78b6ab771ebfa24643c80\">https://github.com/better-auth/better-auth/commit/b381cac7aafd6aa53ef78b6ab771ebfa24643c80</a></li>\n<li><a href=\"https://github.com/better-auth/better-auth/blob/ddebd0358d74376ea64541512d0167dd4377f182/packages/better-auth/src/api/middlewares/origin-check.ts#L53\">https://github.com/better-auth/better-auth/blob/ddebd0358d74376ea64541512d0167dd4377f182/packages/better-auth/src/api/middlewares/origin-check.ts#L53</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-vp58-j275-797x\">https://github.com/advisories/GHSA-vp58-j275-797x</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-vp58-j275-797x",
            "title": "[better-auth] Better Auth allows bypassing the trustedOrigins Protection which leads to ATO",
            "date_modified": "2025-03-03T13:45:00.000Z",
            "date_published": "2025-02-24T20:49:50.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-vp58-j275-797x"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Versions of the package tarteaucitronjs before 1.17.0 are vulnerable to Cross-site Scripting (XSS) via the getElemWidth() and getElemHeight(). This is related to <a href=\"https://security.snyk.io/vuln/SNYK-JS-TARTEAUCITRONJS-8366541\">SNYK-JS-TARTEAUCITRONJS-8366541</a></p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2025-1467\">https://nvd.nist.gov/vuln/detail/CVE-2025-1467</a></li>\n<li><a href=\"https://github.com/AmauriC/tarteaucitron.js/issues/1184\">https://github.com/AmauriC/tarteaucitron.js/issues/1184</a></li>\n<li><a href=\"https://github.com/AmauriC/tarteaucitron.js/commit/12490579001d5caa187adcaecb01da570a12076b\">https://github.com/AmauriC/tarteaucitron.js/commit/12490579001d5caa187adcaecb01da570a12076b</a></li>\n<li><a href=\"https://gist.github.com/Rudloff/d48f525215bd5426cbb076116c4422dd\">https://gist.github.com/Rudloff/d48f525215bd5426cbb076116c4422dd</a></li>\n<li><a href=\"https://security.snyk.io/vuln/SNYK-JS-TARTEAUCITRONJS-8731160\">https://security.snyk.io/vuln/SNYK-JS-TARTEAUCITRONJS-8731160</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-8wp9-x25p-8794\">https://github.com/advisories/GHSA-8wp9-x25p-8794</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-8wp9-x25p-8794",
            "title": "[tarteaucitronjs] tarteaucitron Cross-site Scripting (XSS)",
            "date_modified": "2025-02-24T18:30:26.000Z",
            "date_published": "2025-02-23T18:30:24.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-8wp9-x25p-8794"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"summary\">Summary</h3>\n<p>The application is vulnerable to an open redirect due to improper validation of the callbackURL parameter in the email verification endpoint and any other endpoint that accepts callback url. While the server blocks fully qualified URLs (e.g., <a href=\"https://evil.com\">https://evil.com</a>), it incorrectly allows scheme-less URLs (e.g., //malicious-site.com). This results in the browser interpreting the URL as <a href=\"https://malicious-site.com\">https://malicious-site.com</a>, leading to unintended redirection.</p>\n<p>bypass for : <a href=\"https://github.com/better-auth/better-auth/security/advisories/GHSA-8jhw-6pjj-8723\">https://github.com/better-auth/better-auth/security/advisories/GHSA-8jhw-6pjj-8723</a></p>\n<h3 id=\"affected-versions\">Affected Versions</h3>\n<p>All versions prior to 1.1.19</p>\n<h3 id=\"details\">Details</h3>\n<p>The application’s email verification endpoint (/auth/verify-email) accepts a callbackURL parameter intended to redirect users after successful email verification. While the server correctly blocks fully qualified external URLs (e.g., <a href=\"https://evil.com\">https://evil.com</a>), it improperly allows scheme-less URLs (e.g., //malicious-site.com). This issue occurs because browsers interpret //malicious-site.com as <a href=\"https://malicious-site.com\">https://malicious-site.com</a>, leading to an open redirect vulnerability.</p>\n<p>An attacker can exploit this flaw by crafting a malicious verification link and tricking users into clicking it. Upon successful email verification, the user will be automatically redirected to the attacker's website, which can be used for phishing, malware distribution, or stealing sensitive authentication tokens.</p>\n<h3 id=\"impact\">Impact</h3>\n<p>Phishing &amp; Credential Theft – Attackers can redirect users to a fake login page, tricking them into entering sensitive credentials, which can then be stolen.</p>\n<p>Session Hijacking &amp; Token Theft – If used in OAuth flows, an attacker could redirect authentication tokens to their own domain, leading to account takeover.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/better-auth/better-auth/security/advisories/GHSA-8jhw-6pjj-8723\">https://github.com/better-auth/better-auth/security/advisories/GHSA-8jhw-6pjj-8723</a></li>\n<li><a href=\"https://github.com/better-auth/better-auth/security/advisories/GHSA-hjpm-7mrm-26w8\">https://github.com/better-auth/better-auth/security/advisories/GHSA-hjpm-7mrm-26w8</a></li>\n<li><a href=\"https://github.com/better-auth/better-auth/commit/24659aefc35a536b95ea4e5347e52c8803910153\">https://github.com/better-auth/better-auth/commit/24659aefc35a536b95ea4e5347e52c8803910153</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2025-27143\">https://nvd.nist.gov/vuln/detail/CVE-2025-27143</a></li>\n<li><a href=\"https://github.com/better-auth/better-auth/commit/b381cac7aafd6aa53ef78b6ab771ebfa24643c80\">https://github.com/better-auth/better-auth/commit/b381cac7aafd6aa53ef78b6ab771ebfa24643c80</a></li>\n<li><a href=\"https://github.com/better-auth/better-auth/releases/tag/v1.1.21\">https://github.com/better-auth/better-auth/releases/tag/v1.1.21</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-hjpm-7mrm-26w8\">https://github.com/advisories/GHSA-hjpm-7mrm-26w8</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-hjpm-7mrm-26w8",
            "title": "[better-auth] Beter Auth has an Open Redirect via Scheme-Less Callback Parameter",
            "date_modified": "2025-02-25T18:00:23.000Z",
            "date_published": "2025-02-24T18:27:55.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-hjpm-7mrm-26w8"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>A flaw was found in npm-serialize-javascript. The vulnerability occurs because the serialize-javascript module does not properly sanitize certain inputs, such as regex or other JavaScript object types, allowing an attacker to inject malicious code. This code could be executed when deserialized by a web browser, causing Cross-site scripting (XSS) attacks. This issue is critical in environments where serialized data is sent to web clients, potentially compromising the security of the website or web application using this package.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-11831\">https://nvd.nist.gov/vuln/detail/CVE-2024-11831</a></li>\n<li><a href=\"https://github.com/yahoo/serialize-javascript/pull/173\">https://github.com/yahoo/serialize-javascript/pull/173</a></li>\n<li><a href=\"https://github.com/yahoo/serialize-javascript/commit/f27d65d3de42affe2aac14607066c293891cec4e\">https://github.com/yahoo/serialize-javascript/commit/f27d65d3de42affe2aac14607066c293891cec4e</a></li>\n<li><a href=\"https://access.redhat.com/security/cve/CVE-2024-11831\">https://access.redhat.com/security/cve/CVE-2024-11831</a></li>\n<li><a href=\"https://bugzilla.redhat.com/show_bug.cgi?id=2312579\">https://bugzilla.redhat.com/show_bug.cgi?id=2312579</a></li>\n<li><a href=\"https://access.redhat.com/errata/RHSA-2025:1334\">https://access.redhat.com/errata/RHSA-2025:1334</a></li>\n<li><a href=\"https://access.redhat.com/errata/RHSA-2025:1468\">https://access.redhat.com/errata/RHSA-2025:1468</a></li>\n<li><a href=\"https://github.com/yahoo/serialize-javascript/commit/7f3ac252d86b802454cb43782820aea2e0f6dc25\">https://github.com/yahoo/serialize-javascript/commit/7f3ac252d86b802454cb43782820aea2e0f6dc25</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-76p7-773f-r4q5\">https://github.com/advisories/GHSA-76p7-773f-r4q5</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-76p7-773f-r4q5",
            "title": "[serialize-javascript] Cross-site Scripting (XSS) in serialize-javascript",
            "date_modified": "2025-02-21T20:19:18.000Z",
            "date_published": "2025-02-10T18:30:47.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-76p7-773f-r4q5"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>A prototype pollution in the lib.createUploader function of @rpldy/uploader v1.8.1 allows attackers to cause a Denial of Service (DoS) via supplying a crafted payload.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-57082\">https://nvd.nist.gov/vuln/detail/CVE-2024-57082</a></li>\n<li><a href=\"https://gist.github.com/tariqhawis/708e518de0c3b5af7430ec774f68f315\">https://gist.github.com/tariqhawis/708e518de0c3b5af7430ec774f68f315</a></li>\n<li><a href=\"https://github.com/rpldy/react-uploady/commit/386e0a80c428eb988e89fd2acf9bb0b786ac8028\">https://github.com/rpldy/react-uploady/commit/386e0a80c428eb988e89fd2acf9bb0b786ac8028</a></li>\n<li><a href=\"https://github.com/rpldy/react-uploady/releases/tag/v1.9.1\">https://github.com/rpldy/react-uploady/releases/tag/v1.9.1</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-pc47-g7gv-4gpw\">https://github.com/advisories/GHSA-pc47-g7gv-4gpw</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-pc47-g7gv-4gpw",
            "title": "[@rpldy/uploader] @rpldy/uploader prototype pollution",
            "date_modified": "2025-02-21T15:18:11.000Z",
            "date_published": "2025-02-06T06:31:26.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-pc47-g7gv-4gpw"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>A prototype pollution in the lib.mutateMergeDeep function of @tanstack/form-core v0.35.0 allows attackers to cause a Denial of Service (DoS) via supplying a crafted payload.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-57068\">https://nvd.nist.gov/vuln/detail/CVE-2024-57068</a></li>\n<li><a href=\"https://gist.github.com/tariqhawis/47fe5b1e584e9e573c0933588248d533\">https://gist.github.com/tariqhawis/47fe5b1e584e9e573c0933588248d533</a></li>\n<li><a href=\"https://github.com/TanStack/form/pull/1151\">https://github.com/TanStack/form/pull/1151</a></li>\n<li><a href=\"https://github.com/TanStack/form/commit/455522c8f3272787668f3d1afd6adbc6dc1b9e8a\">https://github.com/TanStack/form/commit/455522c8f3272787668f3d1afd6adbc6dc1b9e8a</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-ggv3-vmgw-xv2q\">https://github.com/advisories/GHSA-ggv3-vmgw-xv2q</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-ggv3-vmgw-xv2q",
            "title": "[@tanstack/form-core] @tanstack/form-core prototype pollution",
            "date_modified": "2025-02-20T22:59:33.000Z",
            "date_published": "2025-02-06T06:31:25.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-ggv3-vmgw-xv2q"
            },
            "tags": [
                "severity"
            ]
        }
    ]
}